Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_mix4/gcp.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_mix4
  path: models/sdp/cifar_cnn_a_mix4.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: depth_first
  cut:
    enabled: true
    cuts_path: /tmp/abcrown_cuts_3149
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: true
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: false
      auto_param: true
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: false
        restore_best_tree: false
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 17:23:37 2024 on r23g0004.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_mix4/gcp.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.71758652, -10.60625553,  -8.48054504,  -7.71353006,  -8.18405724,
          -8.17642593,  -8.98493576,  -8.79066181, -11.70876884, -10.32774353]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [744]; unstable size 744; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 744] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 744] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 149] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.43510056, 2.04025745, 0.39722502, 0.03137326, 0.32232404, 0.68482602,
         0.70088995, 3.05900288, 1.95559037]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 2.1545 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
         -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [681]; unstable size 681; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 237, 1, 681] with unstable size 236 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 681] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 681] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [236]; unstable size 236; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 236] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 236] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86854839, -1.72656703,  7.80241489,  6.11302662,  6.77265406,
          6.66194534,  6.08438635,  7.59613037,  5.53368568]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
         -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
          -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.83598518]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.46507931, -1.30634916, -1.32222211,  ...,  0.10634929,
             0.02698422,  0.04285724],
           [-1.25873005, -1.35396814, -1.40158725,  ...,  0.31269848,
             0.28095245,  0.28095245],
           [ 0.15396833,  0.42380959,  0.29682547,  ..., -0.00476181,
            -0.17936498, -0.24285704],
           ...,
           [-0.86190474, -0.60793650, -0.38571417,  ...,  0.91587305,
             0.82063496,  0.83650798],
           [-0.43333322, -0.30634910, -0.22698402,  ...,  0.90000004,
             0.77301592,  0.75714290],
           [-0.33809513, -0.30634910, -0.27460307,  ...,  0.88412702,
             0.78888893,  0.67777783]],

          [[-1.44927526, -1.28824472, -1.30434775,  ...,  0.20933989,
             0.14492765,  0.20933989],
           [-1.35265696, -1.36875999, -1.33655393,  ...,  0.37037048,
             0.35426742,  0.40257660],
           [-1.32045078, -1.35265696, -1.41706920,  ...,  0.04830930,
            -0.14492741, -0.24154577],
           ...,
           [-0.75684375, -0.51529789, -0.30595800,  ...,  0.91787446,
             0.83735919,  0.90177143],
           [-0.32206106, -0.19323659, -0.14492741,  ...,  0.90177143,
             0.78904998,  0.82125610],
           [-0.17713353, -0.17713353, -0.16103047,  ...,  0.90177143,
             0.78904998,  0.74074084]],

          [[-1.54272878, -1.49775124, -1.49775124,  ...,  0.42128953,
             0.34632701,  0.37631202],
           [-1.51274371, -1.55772126, -1.52773619,  ...,  0.52623707,
             0.49625200,  0.49625200],
           [-1.13793111, -1.09295356, -1.12293863,  ...,  0.09145443,
            -0.08845562, -0.19340314],
           ...,
           [-0.59820086, -0.43328333, -0.28335828,  ...,  0.88605714,
             0.81109464,  0.88605714],
           [-0.23838064, -0.14842562, -0.11844061,  ...,  0.85607213,
             0.76611710,  0.81109464],
           [-0.07346311, -0.10344811, -0.08845562,  ...,  0.75112462,
             0.79610211,  0.73613209]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1201 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
         -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [974]; unstable size 974; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 974] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 974] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 974] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 267] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.48544788,  2.23013353,  1.58959103,  1.19109154,  1.84305811,
          1.51451540,  3.08925200,  0.10891056,  0.42558676]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
         -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.97it/s]100%|██████████| 1/1 [00:00<00:00,  1.97it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.96112823, -19.53406715, -23.43943405, -22.77491570, -22.15659523,
          -23.06166649, -22.97703743, -23.94551468, -21.15086555, -20.97314644]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.42706108]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5111 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.328788757324219
alpha/beta optimization time: 3.713925361633301
initial alpha-crown bounds: tensor([[-0.41349792,  2.33963537,  1.68942022,  1.28609276,  1.95209122,
          1.58836746,  3.19598198,  0.21351337,  0.47718412]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4134979248046875
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6223 seconds.
lower bounds for all target labels: [-0.4134979248046875, 2.339634895324707, 1.689420223236084, 1.286092758178711, 1.9520912170410156, 1.588365077972412, 3.195981502532959, 0.21351337432861328, 0.47718411684036255]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/16_0']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=2_spec=0_30542549.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=2_spec=0_30542549.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 1120 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 195.576336145401
Verifying property 0 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.195981979370117.

Properties batch 1, size 1
Remaining timeout: 195.4132785797119
Verifying property 1 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3396353721618652.

Properties batch 2, size 1
Remaining timeout: 195.32133865356445
Verifying property 2 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9520912170410156.

Properties batch 3, size 1
Remaining timeout: 195.23169136047363
Verifying property 3 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.689420223236084.

Properties batch 4, size 1
Remaining timeout: 195.134290933609
Verifying property 4 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5883674621582031.

Properties batch 5, size 1
Remaining timeout: 195.04517078399658
Verifying property 5 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.286092758178711.

Properties batch 6, size 1
Remaining timeout: 194.95267796516418
Verifying property 6 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.47718411684036255.

Properties batch 7, size 1
Remaining timeout: 194.8630928993225
Verifying property 7 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21351337432861328.

Properties batch 8, size 1
Remaining timeout: 194.7636935710907
Verifying property 8 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41349792]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
        -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41349792]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 974
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 263
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 1259
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.001043081283569336
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 79] 
split level 2: [/input-12, 67] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 64] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 71] 
split level 7: [/input-8, 1956] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 256 = 0.75
pruning-in-iteration extra time: 0.005418062210083008
Time: prepare 0.0031    bound 0.4639    transfer 0.0018    finalize 0.0016    func 0.4704    
Accumulated time: func 0.4704    prepare 0.0036    bound 0.4639    transfer 0.0018    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09202 (8), -0.08831 (8), -0.08805 (8), -0.08655 (8), -0.08632 (8), -0.08100 (8), -0.07995 (8), -0.07975 (8), -0.07759 (8), -0.07720 (8), -0.07601 (8), -0.07206 (8), -0.06735 (8), -0.06649 (8), -0.06615 (8), -0.06535 (8), -0.06344 (8), -0.06273 (8), -0.06227 (8), -0.06206 (8), 
Length of domains: 64
Time: pickout 0.0012    decision 0.2290    set_bounds 0.0163    solve 0.4705    add 0.0697    
Accumulated time: pickout 0.0012    decision 0.2290    set_bounds 0.0163    solve 0.4705    add 0.0697    
Current (lb-rhs): -0.09201669692993164
64 domains visited
Cumulative time: 0.8222122192382812

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 64
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 1: [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] 
pruning_in_iteration open status: True
ratio of positive domain = 223 / 256 = 0.87109375
pruning-in-iteration extra time: 0.004690408706665039
Time: prepare 0.0049    bound 0.1501    transfer 0.0020    finalize 0.0014    func 0.1586    
Accumulated time: func 0.6290    prepare 0.0087    bound 0.6140    transfer 0.0038    finalize 0.0030    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04617 (10), -0.04147 (10), -0.04139 (10), -0.04111 (10), -0.03893 (10), -0.03559 (10), -0.03371 (10), -0.03176 (10), -0.03097 (10), -0.02982 (10), -0.02897 (10), -0.02537 (10), -0.02024 (10), -0.01869 (10), -0.01852 (10), -0.01649 (10), -0.01624 (10), -0.01323 (10), -0.01278 (10), -0.01220 (10), 
Length of domains: 33
Time: pickout 0.0125    decision 0.0158    set_bounds 0.0080    solve 0.1587    add 0.0697    
Accumulated time: pickout 0.0137    decision 0.2448    set_bounds 0.0243    solve 0.6292    add 0.1394    
Current (lb-rhs): -0.04617023468017578
97 domains visited
Cumulative time: 1.0977072715759277

BaB round 3
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=2_spec=0_30542549.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0043
batch: 33
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 57] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 2: [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 264 / 264 = 1.0
pruning-in-iteration extra time: 5.054473876953125e-05
Time: prepare 0.0051    bound 0.0062    transfer 0.0014    finalize 0.0011    func 0.0140    
Accumulated time: func 0.6430    prepare 0.0141    bound 0.6203    transfer 0.0053    finalize 0.0042    
all_split False
Length of domains: 0
Time: pickout 0.0049    decision 0.0175    set_bounds 0.0114    solve 0.0140    add 0.0001    
Accumulated time: pickout 0.0186    decision 0.2623    set_bounds 0.0357    solve 0.6432    add 0.1394    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
97 domains visited
Cumulative time: 1.150505542755127

found process to kill: terminal indx = 0
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=2_spec=0_30542549.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=2_spec=0_30542549.log
found process for pidx=0
Result: safe in 6.5550 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.49797249, -32.02593231, -24.13653946, -24.35863113, -22.85143471,
         -23.68348503, -27.44120789, -21.38064575, -32.04727936, -30.62964058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [524]; unstable size 524; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 524] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 524] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 524] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 230] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.57842255,  7.92652655,  0.44128621,  0.66715562, -0.01040864,
          3.37060833, -2.14889312,  8.08667374,  6.50471687]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.49797249, -32.02593231, -24.13653946, -24.35863113, -22.85143471,
         -23.68348503, -27.44120789, -21.38064575, -32.04727936, -30.62964058]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.49797440, -32.02593613, -24.13653946, -24.35863304, -22.85143471,
          -23.68348312, -27.44120789, -21.38064194, -32.04728317, -30.62964058],
         [-29.49797440, -32.02593613, -24.13653946, -24.35863304, -22.85143471,
          -23.68348312, -27.44120789, -21.38064194, -32.04728317, -30.62964058]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.83204842, -1.47079277]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0829 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
         -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 586] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 586] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 240] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.88010216,  3.64075136, -1.31467104,  1.09980750,  0.71520233,
          0.08684707,  0.73927283,  3.52310085,  2.98584604]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
         -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
          -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36829662]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.93012428, -28.86279678, -22.95105362, -22.21138573, -22.55353546,
         -22.42994499, -25.40056229, -25.07742310, -28.55600357, -29.30382729]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [702]; unstable size 702; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 702] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 702] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 702] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 197] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.11360049,  4.75878382, -0.60330033, -1.14847982, -0.96145201,
          1.62045550,  1.45868969,  4.42397738,  5.39402199]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.93012428, -28.86279678, -22.95105362, -22.21138573, -22.55353546,
         -22.42994499, -25.40056229, -25.07742310, -28.55600357, -29.30382729]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.93012238, -28.86279297, -22.95105362, -22.21138191, -22.55353355,
          -22.42994118, -25.40056038, -25.07742310, -28.55599976, -29.30382729],
         [-23.93012238, -28.86279297, -22.95105362, -22.21138191, -22.55353355,
          -22.42994118, -25.40056038, -25.07742310, -28.55599976, -29.30382729]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39752007, -0.34215164, -0.12359238]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.40559387, -22.88947487, -25.63683701, -27.29631996, -26.72020721,
         -27.76915359, -27.74243546, -26.42049408, -23.75277328, -24.53628540]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 210, 1, 600] with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 600] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 209] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.74476385,  2.03233957,  3.50479388,  2.95214248,  3.84003544,
          3.82891703,  2.31719375,  0.27049693,  0.99338436]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.40559387, -22.88947487, -25.63683701, -27.29631996, -26.72020721,
         -27.76915359, -27.74243546, -26.42049408, -23.75277328, -24.53628540]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.70954704, -22.50856209, -25.82820511, -27.24475288, -26.80752373,
          -27.71620750, -27.81856155, -26.49511337, -23.68723488, -24.25093651]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20098495]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0722 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.38412285, -21.59840584, -16.79981041, -17.57214165, -15.52907753,
         -18.46681404, -14.29935837, -18.97409439, -21.41892242, -22.47642326]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [661]; unstable size 661; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 661] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 661] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 280] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.40035439, 4.96538639, 1.38254356, 2.09833956, 0.19923019, 2.73652554,
         2.77133179, 5.19357395, 5.75338554]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0622 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.33151817, -30.12449837, -30.12789345, -32.32761765, -31.50092506,
         -33.39948273, -34.24899292, -33.59529877, -28.85486984, -31.05011368]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [660]; unstable size 660; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 125, 1, 660] with unstable size 124 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 660] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [124]; unstable size 124; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 124] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 124] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.10990667, 3.26029587, 5.21397591, 4.49963570, 6.16231918, 7.11179638,
         6.38362360, 1.83803439, 4.12780380]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0375 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.09156418, -20.41763687, -14.61236668, -14.66382980, -15.40889931,
         -14.92277241, -16.08656311, -16.88404655, -16.89081764, -19.10676003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [652]; unstable size 652; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 652] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 652] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 652] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 272] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.76794910,  3.46308827, -1.30139887, -0.50252235, -0.49823117,
          0.25928640,  1.05345261,  0.17230228,  2.34708524]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.09156418, -20.41763687, -14.61236668, -14.66382980, -15.40889931,
         -14.92277241, -16.08656311, -16.88404655, -16.89081764, -19.10676003]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.09156036, -20.41763496, -14.61236477, -14.66382885, -15.40889931,
          -14.92277145, -16.08656311, -16.88404655, -16.89081764, -19.10676003],
         [-17.09156036, -20.41763496, -14.61236477, -14.66382885, -15.40889931,
          -14.92277145, -16.08656311, -16.88404655, -16.89081764, -19.10676003]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31040668, -0.25894260,  0.48612785]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0708 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.21570015, -30.75971413, -22.25073242, -22.32918739, -25.08177185,
         -21.45276070, -27.76211929, -23.59930420, -27.91633797, -28.86312294]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 138, 1, 602] with unstable size 137 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 6, 1, 602] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [137]; unstable size 137; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 6, 1, 137] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 137] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.99381173,  6.23490953, -1.89244628, -1.75638413,  1.05084085,
         -2.64184880,  3.30787563,  3.47557831,  4.31073761]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.21570015, -30.75971413, -22.25073242, -22.32918739, -25.08177185,
         -21.45276070, -27.76211929, -23.59930420, -27.91633797, -28.86312294]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.21570015, -30.75971603, -22.25073242, -22.32919121, -25.08177567,
          -21.45276070, -27.76212311, -23.59930420, -27.91633797, -28.86312675],
         [-26.21570015, -30.75971603, -22.25073242, -22.32919121, -25.08177567,
          -21.45276070, -27.76212311, -23.59930420, -27.91633797, -28.86312675]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.34857178, -1.27011299, -2.14654350]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0597 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.21021080, -22.37670517, -15.79945183, -19.83161354, -17.04315186,
         -20.54102135, -18.07866096, -20.16787720, -20.66229820, -22.52699852]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [783]; unstable size 783; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 272, 1, 783] with unstable size 271 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 783] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 783] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [271]; unstable size 271; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 271] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 271] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.10988903, 4.28678894, 2.71925092, 0.07136536, 3.35213232, 0.93095899,
         2.59224510, 3.15873289, 4.39236212]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0620 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.29772568, -26.69688797, -24.65950394, -26.42867851, -27.60770798,
         -25.51318932, -30.98760223, -25.11904716, -28.58666801, -27.05063820]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 148, 1, 512] with unstable size 147 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 512] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [147]; unstable size 147; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 147] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.19138703,  0.13958716, -1.25776386,  0.64105916,  1.78223991,
         -0.24006453,  4.64796352,  2.03586745,  0.69128191]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.29772568, -26.69688797, -24.65950394, -26.42867851, -27.60770798,
         -25.51318932, -30.98760223, -25.11904716, -28.58666801, -27.05063820]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.29772758, -26.69688797, -24.65950203, -26.42867661, -27.60770798,
          -25.51318359, -30.98759842, -25.11904335, -28.58666611, -27.05063820],
         [-26.29772758, -26.69688797, -24.65950203, -26.42867661, -27.60770798,
          -25.51318359, -30.98759842, -25.11904335, -28.58666611, -27.05063820]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.45954132,  0.39414024]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0527 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
         -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [800]; unstable size 800; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 212, 1, 800] with unstable size 211 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 800] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 800] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [211]; unstable size 211; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 211] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 211] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64949799,  2.53695965,  4.98263073,  4.08614969,  6.12158585,
          4.88727808,  5.69290924,  0.59366226,  1.31843662]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
         -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.04it/s]100%|██████████| 1/1 [00:00<00:00,  9.03it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.69252968, -23.57816505, -27.19650650, -29.87729073, -29.16208076,
          -31.30131340, -29.60456848, -30.91409683, -24.93794060, -25.69927025]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.11436462]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1133 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 30.024337768554688
alpha/beta optimization time: 1.1995773315429688
initial alpha-crown bounds: tensor([[-0.60099745,  2.58547878,  5.03595352,  4.14844227,  6.18062782,
          4.93974590,  5.75246906,  0.64157915,  1.34103882]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6009974479675293
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.5945 seconds.
lower bounds for all target labels: [-0.6009979248046875, 2.585479736328125, 5.035953521728516, 4.148440837860107, 6.18062686920166, 4.939746379852295, 5.752468109130859, 0.6415791511535645, 1.3410394191741943]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/16_0']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 2024 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.58156991004944
Verifying property 0 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.180627822875977.

Properties batch 1, size 1
Remaining timeout: 198.41889595985413
Verifying property 1 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.752469062805176.

Properties batch 2, size 1
Remaining timeout: 198.327867269516
Verifying property 2 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.035953521728516.

Properties batch 3, size 1
Remaining timeout: 198.23683214187622
Verifying property 3 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.939745903015137.

Properties batch 4, size 1
Remaining timeout: 198.1473846435547
Verifying property 4 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.148442268371582.

Properties batch 5, size 1
Remaining timeout: 198.05136370658875
Verifying property 5 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5854787826538086.

Properties batch 6, size 1
Remaining timeout: 197.9527826309204
Verifying property 6 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3410388231277466.

Properties batch 7, size 1
Remaining timeout: 197.8627679347992
Verifying property 7 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6415791511535645.

Properties batch 8, size 1
Remaining timeout: 197.7709836959839
Verifying property 8 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60099745]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
        -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60099745]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 800
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 204
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1025
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007293224334716797
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 215 / 256 = 0.83984375
pruning-in-iteration extra time: 0.00506281852722168
Time: prepare 0.0018    bound 0.1503    transfer 0.0057    finalize 0.0015    func 0.1593    
Accumulated time: func 0.1593    prepare 0.0022    bound 0.1503    transfer 0.0057    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27371 (8), -0.27326 (8), -0.27282 (8), -0.27127 (8), -0.26143 (8), -0.26112 (8), -0.25879 (8), -0.25804 (8), -0.24499 (8), -0.24286 (8), -0.23934 (8), -0.23660 (8), -0.23056 (8), -0.23026 (8), -0.21890 (8), -0.21469 (8), -0.14395 (8), -0.13936 (8), -0.13812 (8), -0.13424 (8), 
Length of domains: 41
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0159    solve 0.1594    add 0.0614    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0159    solve 0.1594    add 0.0614    
Current (lb-rhs): -0.27370595932006836
41 domains visited
Cumulative time: 0.2715592384338379

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 41
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
split level 2: [/input-8, 757] [/input-8, 757] [/input-8, 1754] [/input-8, 1754] [/input-8, 757] [/input-8, 757] [/input-8, 1754] [/input-8, 1754] [/input-8, 757] [/input-8, 757] 
pruning_in_iteration open status: True
ratio of positive domain = 190 / 328 = 0.5792682926829269
pruning-in-iteration extra time: 0.004536628723144531
Time: prepare 0.0062    bound 0.1359    transfer 0.0014    finalize 0.0022    func 0.1457    
Accumulated time: func 0.3050    prepare 0.0085    bound 0.2862    transfer 0.0071    finalize 0.0037    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24911 (11), -0.24895 (11), -0.24768 (11), -0.24658 (11), -0.23668 (11), -0.23578 (11), -0.23293 (11), -0.23291 (11), -0.23284 (11), -0.23228 (11), -0.23187 (11), -0.23035 (11), -0.22333 (11), -0.22124 (11), -0.22074 (11), -0.22066 (11), -0.21847 (11), -0.21819 (11), -0.21806 (11), -0.21766 (11), 
Length of domains: 138
Time: pickout 0.0073    decision 0.0155    set_bounds 0.0117    solve 0.1458    add 0.0753    
Accumulated time: pickout 0.0077    decision 0.0382    set_bounds 0.0276    solve 0.3051    add 0.1367    
Current (lb-rhs): -0.24910926818847656
179 domains visited
Cumulative time: 0.5347023010253906

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 138
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 14] [/input-8, 1955] 
pruning_in_iteration open status: True
ratio of positive domain = 94 / 276 = 0.3405797101449275
pruning-in-iteration extra time: 0.004248857498168945
Time: prepare 0.0055    bound 0.1564    transfer 0.0032    finalize 0.0023    func 0.1675    
Accumulated time: func 0.4724    prepare 0.0142    bound 0.4426    transfer 0.0103    finalize 0.0060    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24338 (12), -0.24286 (12), -0.24203 (12), -0.24055 (12), -0.23090 (12), -0.22996 (12), -0.22739 (12), -0.22723 (12), -0.22692 (12), -0.22600 (12), -0.22596 (12), -0.22415 (12), -0.21717 (12), -0.21502 (12), -0.21483 (12), -0.21479 (12), -0.21282 (12), -0.21188 (12), -0.21131 (12), -0.21128 (12), 
Length of domains: 182
Time: pickout 0.0152    decision 0.1085    set_bounds 0.0060    solve 0.1675    add 0.1401    
Accumulated time: pickout 0.0230    decision 0.1468    set_bounds 0.0336    solve 0.4727    add 0.2768    
Current (lb-rhs): -0.24337530136108398
361 domains visited
Cumulative time: 0.9800126552581787

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 182
splitting decisions: 
split level 0: [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] 
pruning_in_iteration open status: True
ratio of positive domain = 78 / 364 = 0.2142857142857143
pruning-in-iteration extra time: 0.0017139911651611328
Time: prepare 0.0068    bound 0.1080    transfer 0.0022    finalize 0.0023    func 0.1193    
Accumulated time: func 0.5918    prepare 0.0212    bound 0.5506    transfer 0.0125    finalize 0.0083    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23727 (13), -0.23649 (13), -0.23439 (13), -0.23439 (13), -0.22482 (13), -0.22380 (13), -0.22055 (13), -0.22030 (13), -0.22002 (13), -0.21985 (13), -0.21831 (13), -0.21795 (13), -0.21171 (13), -0.20951 (13), -0.20866 (13), -0.20855 (13), -0.20558 (13), -0.20533 (13), -0.20521 (13), -0.20514 (13), 
Length of domains: 286
Time: pickout 0.0171    decision 0.0204    set_bounds 0.0075    solve 0.1194    add 0.0826    
Accumulated time: pickout 0.0401    decision 0.1672    set_bounds 0.0411    solve 0.5921    add 0.3594    
Current (lb-rhs): -0.23726558685302734
647 domains visited
Cumulative time: 1.231780767440796

BaB round 5
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 286
splitting decisions: 
split level 0: [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 146] [/input-8, 146] 
pruning_in_iteration open status: True
ratio of positive domain = 123 / 572 = 0.215034965034965
pruning-in-iteration extra time: 0.001737356185913086
Time: prepare 0.0106    bound 0.1216    transfer 0.0040    finalize 0.0040    func 0.1403    
Accumulated time: func 0.7321    prepare 0.0320    bound 0.6721    transfer 0.0165    finalize 0.0123    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23114 (14), -0.23105 (14), -0.23073 (14), -0.22770 (14), -0.21856 (14), -0.21840 (14), -0.21733 (14), -0.21690 (14), -0.21607 (14), -0.21575 (14), -0.21536 (14), -0.21498 (14), -0.21433 (14), -0.21381 (14), -0.21130 (14), -0.21117 (14), -0.20295 (14), -0.20230 (14), -0.20202 (14), -0.20151 (14), 
Length of domains: 449
Time: pickout 0.0144    decision 0.0263    set_bounds 0.0116    solve 0.1404    add 0.0833    
Accumulated time: pickout 0.0544    decision 0.1935    set_bounds 0.0527    solve 0.7325    add 0.4427    
Current (lb-rhs): -0.23114013671875
1096 domains visited
Cumulative time: 1.5189950466156006

BaB round 6
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0036
batch: 449
splitting decisions: 
split level 0: [/input-8, 147] [/input-8, 1134] [/input-8, 147] [/input-8, 1134] [/input-8, 147] [/input-8, 306] [/input-8, 147] [/input-8, 306] [/input-8, 155] [/input-8, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 201 / 898 = 0.22383073496659245
pruning-in-iteration extra time: 0.004186868667602539
Time: prepare 0.0173    bound 0.1559    transfer 0.0050    finalize 0.0062    func 0.1845    
Accumulated time: func 0.9165    prepare 0.0496    bound 0.8280    transfer 0.0215    finalize 0.0185    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22597 (15), -0.22591 (15), -0.21804 (15), -0.21767 (15), -0.21599 (15), -0.21534 (15), -0.21282 (15), -0.21282 (15), -0.21254 (15), -0.21235 (15), -0.21170 (15), -0.21090 (15), -0.21047 (15), -0.20978 (15), -0.20960 (15), -0.20772 (15), -0.20677 (15), -0.20625 (15), -0.20570 (15), -0.20117 (15), 
Length of domains: 697
Time: pickout 0.0197    decision 0.0375    set_bounds 0.0184    solve 0.1846    add 0.0308    
Accumulated time: pickout 0.0742    decision 0.2310    set_bounds 0.0711    solve 0.9171    add 0.4734    
Current (lb-rhs): -0.2259688377380371
1793 domains visited
Cumulative time: 1.815016746520996

BaB round 7
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0008
batch: 697
splitting decisions: 
split level 0: [/input-8, 751] [/input-8, 306] [/input, 374] [/input-8, 306] [/input-8, 751] [/input-8, 751] [/input, 374] [/input-8, 1134] [/input-8, 1134] [/input-8, 306] 
pruning_in_iteration open status: False
ratio of positive domain = 189 / 1394 = 0.1355810616929699
pruning-in-iteration extra time: 7.152557373046875e-05
Time: prepare 0.0277    bound 0.1130    transfer 0.0082    finalize 0.0082    func 0.1572    
Accumulated time: func 1.0738    prepare 0.0775    bound 0.9410    transfer 0.0297    finalize 0.0268    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22287 (16), -0.22183 (16), -0.21423 (16), -0.21380 (16), -0.21165 (16), -0.21093 (16), -0.20948 (16), -0.20807 (16), -0.20729 (16), -0.20721 (16), -0.20715 (16), -0.20582 (16), -0.20558 (16), -0.20546 (16), -0.20455 (16), -0.20374 (16), -0.20329 (16), -0.20256 (16), -0.20170 (16), -0.20091 (16), 
Length of domains: 1201
Time: pickout 0.0085    decision 0.0477    set_bounds 0.0268    solve 0.1575    add 0.1088    
Accumulated time: pickout 0.0826    decision 0.2787    set_bounds 0.0979    solve 1.0745    add 0.5823    
Current (lb-rhs): -0.22287225723266602
2994 domains visited
Cumulative time: 2.1718637943267822

BaB round 8
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 1201
splitting decisions: 
split level 0: [/input-8, 1134] [/input-8, 751] [/input-8, 751] [/input-8, 416] [/input, 374] [/input-8, 147] [/input-8, 751] [/input-8, 416] [/input-8, 751] [/input-8, 292] 
pruning_in_iteration open status: False
ratio of positive domain = 158 / 2402 = 0.06577851790174849
pruning-in-iteration extra time: 5.435943603515625e-05
Time: prepare 0.0493    bound 0.1391    transfer 0.0140    finalize 0.0142    func 0.2167    
Accumulated time: func 1.2905    prepare 0.1270    bound 1.0801    transfer 0.0437    finalize 0.0409    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22042 (17), -0.21639 (17), -0.21170 (17), -0.21124 (17), -0.20763 (17), -0.20692 (17), -0.20539 (17), -0.20497 (17), -0.20459 (17), -0.20253 (17), -0.20228 (17), -0.20209 (17), -0.20186 (17), -0.20112 (17), -0.20063 (17), -0.20037 (17), -0.20037 (17), -0.19882 (17), -0.19690 (17), -0.19677 (17), 
Length of domains: 2238
Time: pickout 0.0349    decision 0.0750    set_bounds 0.0444    solve 0.2171    add 0.1158    
Accumulated time: pickout 0.1175    decision 0.3536    set_bounds 0.1423    solve 1.2916    add 0.6981    
Current (lb-rhs): -0.22041797637939453
5232 domains visited
Cumulative time: 2.6681454181671143

BaB round 9
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 2238
splitting decisions: 
split level 0: [/input, 374] [/input-8, 147] [/input-8, 1134] [/input-8, 751] [/input-8, 418] [/input-8, 1134] [/input-8, 1134] [/input-8, 751] [/input, 374] [/input-8, 751] 
pruning_in_iteration open status: False
ratio of positive domain = 288 / 4476 = 0.06434316353887404
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0983    bound 0.2229    transfer 0.0261    finalize 0.0255    func 0.3735    
Accumulated time: func 1.6639    prepare 0.2256    bound 1.3030    transfer 0.0698    finalize 0.0665    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21584 (18), -0.21409 (18), -0.20747 (18), -0.20696 (18), -0.20398 (18), -0.20328 (18), -0.20215 (18), -0.20202 (18), -0.20135 (18), -0.19969 (18), -0.19962 (18), -0.19951 (18), -0.19815 (18), -0.19761 (18), -0.19741 (18), -0.19694 (18), -0.19458 (18), -0.19405 (18), -0.19361 (18), -0.19344 (18), 
Length of domains: 4182
Time: pickout 0.0473    decision 0.2771    set_bounds 0.0826    solve 0.3741    add 0.1856    
Accumulated time: pickout 0.1648    decision 0.6308    set_bounds 0.2249    solve 1.6657    add 0.8837    
Current (lb-rhs): -0.21584415435791016
9414 domains visited
Cumulative time: 3.6527693271636963

BaB round 10
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 4096
splitting decisions: 
split level 0: [/input-8, 158] [/input-8, 1395] [/input-8, 1195] [/input-8, 147] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 158] [/input-8, 292] 
pruning_in_iteration open status: False
ratio of positive domain = 538 / 8192 = 0.065673828125
pruning-in-iteration extra time: 8.320808410644531e-05
Time: prepare 0.1890    bound 0.3647    transfer 0.0461    finalize 0.0487    func 0.6494    
Accumulated time: func 2.3133    prepare 0.4149    bound 1.6677    transfer 0.1159    finalize 0.1152    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21163 (19), -0.21007 (19), -0.20362 (19), -0.20310 (19), -0.19787 (19), -0.19785 (19), -0.19778 (19), -0.19712 (19), -0.19707 (19), -0.19603 (19), -0.19550 (19), -0.19547 (19), -0.19413 (19), -0.19363 (19), -0.19342 (19), -0.19300 (19), -0.19294 (19), -0.19286 (19), -0.18956 (19), -0.18918 (19), 
Length of domains: 7729
Time: pickout 0.0668    decision 0.3564    set_bounds 0.1592    solve 0.6506    add 0.1532    
Accumulated time: pickout 0.2316    decision 0.9872    set_bounds 0.3840    solve 2.3163    add 1.0369    
Current (lb-rhs): -0.21163415908813477
17057 domains visited
current_vram/total_varm: 9.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.0526769161224365

BaB round 11
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 7729
splitting decisions: 
split level 0: [/input-8, 418] [/input-8, 155] [/input-8, 1195] [/input-8, 147] [/input-8, 1134] [/input-8, 155] [/input-8, 1195] [/input-8, 147] [/input-8, 158] [/input-8, 147] 
pruning_in_iteration open status: False
ratio of positive domain = 1179 / 15458 = 0.07627118644067798
pruning-in-iteration extra time: 0.0001404285430908203
Time: prepare 0.3512    bound 0.6473    transfer 0.0873    finalize 0.0952    func 1.1822    
Accumulated time: func 3.4956    prepare 0.7664    bound 2.3149    transfer 0.2032    finalize 0.2103    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20875 (20), -0.20680 (20), -0.19750 (20), -0.19693 (20), -0.19538 (20), -0.19467 (20), -0.19432 (20), -0.19410 (20), -0.19279 (20), -0.19255 (20), -0.19253 (20), -0.19226 (20), -0.19226 (20), -0.19217 (20), -0.19205 (20), -0.19130 (20), -0.19082 (20), -0.19059 (20), -0.18857 (20), -0.18732 (20), 
Length of domains: 14248
Time: pickout 0.1097    decision 0.5672    set_bounds 0.4426    solve 1.1844    add 0.2647    
Accumulated time: pickout 0.3413    decision 1.5543    set_bounds 0.8266    solve 3.5007    add 1.3017    
Current (lb-rhs): -0.2087545394897461
31305 domains visited
Cumulative time: 7.641250133514404

BaB round 12
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0018
batch: 8192
splitting decisions: 
split level 0: [/input-8, 751] [/input-8, 423] [/input, 373] [/input-8, 147] [/input, 373] [/input-8, 423] [/input, 373] [/input-8, 292] [/input, 373] [/input-8, 1395] 
pruning_in_iteration open status: False
ratio of positive domain = 1408 / 16384 = 0.0859375
pruning-in-iteration extra time: 0.00011658668518066406
Time: prepare 0.3677    bound 0.6834    transfer 0.0897    finalize 0.1100    func 1.2522    
Accumulated time: func 4.7478    prepare 1.1343    bound 2.9983    transfer 0.2928    finalize 0.3204    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20875 (20), -0.20333 (21), -0.19410 (20), -0.19279 (20), -0.19270 (21), -0.19255 (20), -0.19253 (20), -0.19226 (20), -0.19226 (20), -0.19211 (21), -0.19088 (21), -0.19017 (21), -0.18887 (21), -0.18870 (21), -0.18839 (21), -0.18735 (21), -0.18708 (20), -0.18703 (21), -0.18634 (21), -0.18477 (21), 
Length of domains: 20995
Time: pickout 0.1174    decision 0.6120    set_bounds 0.4909    solve 1.2544    add 0.6534    
Accumulated time: pickout 0.4587    decision 2.1663    set_bounds 1.3176    solve 4.7551    add 1.9551    
Current (lb-rhs): -0.2087545394897461
46244 domains visited
current_vram/total_varm: 23.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.792476892471313

BaB round 13
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 16384
splitting decisions: 
split level 0: [/input-8, 416] [/input-8, 420] [/input-8, 1195] [/input-8, 423] [/input-8, 418] [/input-8, 292] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 292] 
pruning_in_iteration open status: False
ratio of positive domain = 3945 / 32768 = 0.120391845703125
pruning-in-iteration extra time: 0.0002429485321044922
Time: prepare 0.7517    bound 1.3183    transfer 0.1843    finalize 0.2237    func 2.4803    
Accumulated time: func 7.2280    prepare 1.8864    bound 4.3167    transfer 0.4771    finalize 0.5441    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20875 (20), -0.19410 (20), -0.19340 (22), -0.19339 (22), -0.19255 (20), -0.19253 (20), -0.19077 (22), -0.18851 (21), -0.18829 (21), -0.18772 (21), -0.18736 (22), -0.18708 (20), -0.18611 (22), -0.18540 (22), -0.18445 (20), -0.18232 (22), -0.18165 (20), -0.18161 (22), -0.18154 (20), -0.18103 (20), 
Length of domains: 33358
Time: pickout 0.2438    decision 1.8684    set_bounds 1.1046    solve 2.4861    add 0.6969    
Accumulated time: pickout 0.7025    decision 4.0347    set_bounds 2.4221    solve 7.2412    add 2.6520    
Current (lb-rhs): -0.2087545394897461
74991 domains visited
current_vram/total_varm: 33.7GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.27852463722229

BaB round 14
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 511 constraints, 23328 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.1965
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1195] [/input, 374] [/input-8, 306] [/input, 374] [/input-8, 292] [/input-8, 420] [/input-8, 1097] [/input-8, 155] [/input-8, 420] [/input-8, 420] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20531892776489258
10 lb beta sum: 21.358753204345703, worst -0.11624455451965332
pruning_in_iteration open status: True
ratio of positive domain = 50628 / 65536 = 0.77252197265625
pruning-in-iteration extra time: 0.005492448806762695
Time: prepare 1.5103    bound 8.9944    transfer 0.3673    finalize 0.7900    func 12.0818    
Accumulated time: func 19.3098    prepare 3.3971    bound 13.3111    transfer 0.8444    finalize 1.3341    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18165 (20), -0.17526 (20), -0.16700 (20), -0.16645 (20), -0.16562 (20), -0.16168 (20), -0.15965 (20), -0.15798 (20), -0.15604 (20), -0.15328 (20), -0.15195 (20), -0.15168 (20), -0.15159 (20), -0.15059 (20), -0.14965 (20), -0.14919 (20), -0.14660 (20), -0.14639 (20), -0.14442 (20), -0.14253 (20), 
Length of domains: 15498
Time: pickout 0.4682    decision 3.5564    set_bounds 1.9378    solve 12.0917    add 0.2164    
Accumulated time: pickout 1.1707    decision 7.5911    set_bounds 4.3600    solve 19.3329    add 2.8683    
Current (lb-rhs): -0.18164682388305664
89899 domains visited
Cumulative time: 35.97098445892334

BaB round 15
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1108 constraints, 45639 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5930
batch: 15498
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1195] [/input, 374] [/input-8, 418] [/input-8, 420] [/input-8, 1195] [/input, 374] [/input-8, 418] [/input-8, 155] [/input-8, 292] [/input-8, 751] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2030949592590332
10 lb beta sum: 12.841302871704102, worst -0.09666287899017334
pruning_in_iteration open status: True
ratio of positive domain = 23895 / 30996 = 0.7709059233449478
pruning-in-iteration extra time: 0.003020048141479492
Time: prepare 0.7218    bound 6.6365    transfer 0.1725    finalize 0.2056    func 8.2007    
Accumulated time: func 27.5105    prepare 4.1193    bound 19.9476    transfer 1.0169    finalize 1.5397    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07760 (22), -0.06611 (22), -0.06593 (22), -0.06581 (24), -0.06399 (24), -0.06369 (24), -0.06291 (22), -0.06214 (23), -0.06183 (22), -0.06171 (24), -0.06151 (23), -0.06036 (22), -0.05998 (24), -0.05965 (24), -0.05965 (24), -0.05961 (22), -0.05956 (23), -0.05905 (24), -0.05896 (24), -0.05883 (24), 
Length of domains: 7101
Time: pickout 0.2285    decision 0.8552    set_bounds 1.1498    solve 8.2067    add 0.1508    
Accumulated time: pickout 1.3992    decision 8.4463    set_bounds 5.5097    solve 27.5396    add 3.0191    
Current (lb-rhs): -0.07760417461395264
97000 domains visited
Cumulative time: 47.28707766532898

BaB round 16
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1207 constraints, 57557 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4852
batch: 7101
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 292] [/input-8, 158] [/input-8, 292] [/input-8, 306] [/input-8, 1195] [/input-8, 1195] [/input-8, 1195] [/input-8, 147] [/input-8, 420] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19280719757080078
10 lb beta sum: 13.933876991271973, worst -0.08234846591949463
pruning_in_iteration open status: True
ratio of positive domain = 9446 / 14202 = 0.6651175890719616
pruning-in-iteration extra time: 0.0015881061553955078
Time: prepare 0.3407    bound 5.3705    transfer 0.0828    finalize 0.0986    func 5.9851    
Accumulated time: func 33.4956    prepare 4.4602    bound 25.3180    transfer 1.0996    finalize 1.6383    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06448 (23), -0.06413 (23), -0.05478 (23), -0.05208 (23), -0.05195 (23), -0.05125 (25), -0.05087 (23), -0.05062 (25), -0.05023 (23), -0.05008 (23), -0.04996 (25), -0.04935 (24), -0.04885 (25), -0.04867 (24), -0.04862 (23), -0.04793 (23), -0.04785 (25), -0.04784 (25), -0.04759 (23), -0.04740 (25), 
Length of domains: 4756
Time: pickout 0.1160    decision 0.3922    set_bounds 0.4880    solve 6.1876    add 0.1544    
Accumulated time: pickout 1.5153    decision 8.8385    set_bounds 5.9977    solve 33.7272    add 3.1735    
Current (lb-rhs): -0.0644829273223877
101756 domains visited
Cumulative time: 55.17391633987427

BaB round 17
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1221 constraints, 59075 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4997
batch: 4756
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 292] [/input-8, 292] [/input-8, 1384] [/input-8, 420] [/input-8, 1395] [/input-8, 420] [/input-8, 416] [/input-8, 292] [/input-8, 1395] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1902170181274414
10 lb beta sum: 14.677309036254883, worst -0.0817643404006958
pruning_in_iteration open status: True
ratio of positive domain = 4859 / 9512 = 0.5108284272497897
pruning-in-iteration extra time: 0.00045037269592285156
Time: prepare 0.2242    bound 2.9793    transfer 0.0546    finalize 0.0607    func 3.3826    
Accumulated time: func 36.8781    prepare 4.6847    bound 28.2973    transfer 1.1542    finalize 1.6991    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06068 (24), -0.06020 (24), -0.04906 (26), -0.04838 (24), -0.04832 (26), -0.04823 (24), -0.04803 (24), -0.04794 (26), -0.04793 (24), -0.04762 (24), -0.04693 (25), -0.04649 (24), -0.04621 (24), -0.04603 (24), -0.04571 (26), -0.04563 (26), -0.04550 (26), -0.04530 (25), -0.04516 (24), -0.04503 (24), 
Length of domains: 4653
Time: pickout 0.0886    decision 0.2657    set_bounds 0.3714    solve 3.3850    add 0.1410    
Accumulated time: pickout 1.6039    decision 9.1043    set_bounds 6.3692    solve 37.1122    add 3.3145    
Current (lb-rhs): -0.0606766939163208
106409 domains visited
Cumulative time: 59.96348786354065

BaB round 18
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1257 constraints, 59877 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5033
batch: 4653
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 416] [/input-8, 1387] [/input-8, 146] [/input-8, 420] [/input-8, 1387] [/input-8, 1395] [/input-8, 420] [/input-8, 420] [/input-8, 1395] [/input-8, 1387] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18748807907104492
10 lb beta sum: 14.177724838256836, worst -0.07573926448822021
pruning_in_iteration open status: True
ratio of positive domain = 5599 / 9306 = 0.6016548463356974
pruning-in-iteration extra time: 0.0015056133270263672
Time: prepare 0.2191    bound 2.8801    transfer 0.0542    finalize 0.0609    func 3.2741    
Accumulated time: func 40.1522    prepare 4.9042    bound 31.1775    transfer 1.2084    finalize 1.7599    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05423 (25), -0.05369 (25), -0.04548 (27), -0.04393 (27), -0.04370 (25), -0.04309 (25), -0.04280 (27), -0.04267 (27), -0.04218 (25), -0.04212 (25), -0.04169 (25), -0.04146 (25), -0.04130 (27), -0.04122 (25), -0.04111 (25), -0.04072 (27), -0.04058 (27), -0.04034 (27), -0.04033 (25), -0.03992 (27), 
Length of domains: 3707
Time: pickout 0.0866    decision 0.4271    set_bounds 0.2025    solve 3.4457    add 0.1452    
Accumulated time: pickout 1.6905    decision 9.5314    set_bounds 6.5717    solve 40.5579    add 3.4598    
Current (lb-rhs): -0.05422520637512207
110116 domains visited
Cumulative time: 64.81395721435547

BaB round 19
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0032
batch: 3707
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 158] [/input-8, 158] [/input-8, 420] [/input-8, 1395] [/input-8, 1395] [/input-8, 1195] [/input-8, 1387] [/input-8, 1395] [/input-8, 1395] [/input-12, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 14.310503959655762, worst -0.04933619499206543
10 lb beta sum: 22.4415225982666, worst -0.07913446426391602
pruning_in_iteration open status: True
ratio of positive domain = 3546 / 7414 = 0.47828432694901535
pruning-in-iteration extra time: 0.004920482635498047
Time: prepare 0.3512    bound 2.0958    transfer 0.0435    finalize 0.0482    func 2.5875    
Accumulated time: func 42.7398    prepare 5.2556    bound 33.2732    transfer 1.2519    finalize 1.8081    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04934 (26), -0.04729 (26), -0.04465 (26), -0.04462 (26), -0.04133 (28), -0.04094 (26), -0.04034 (28), -0.03988 (28), -0.03954 (28), -0.03933 (28), -0.03907 (28), -0.03902 (27), -0.03840 (28), -0.03769 (28), -0.03667 (28), -0.03664 (26), -0.03649 (27), -0.03616 (28), -0.03607 (26), -0.03591 (28), 
Length of domains: 3868
Time: pickout 0.0743    decision 0.2109    set_bounds 0.1631    solve 2.5902    add 0.1448    
Accumulated time: pickout 1.7647    decision 9.7422    set_bounds 6.7348    solve 43.1480    add 3.6045    
Current (lb-rhs): -0.04933619499206543
113984 domains visited
Cumulative time: 68.03341150283813

BaB round 20
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1268 constraints, 60716 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6553
batch: 3868
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 13] [/input-12, 13] [/input-8, 420] [/input-12, 13] [/input-12, 13] [/input-8, 420] [/input-8, 1195] [/input-8, 423] [/input-8, 423] [/input-8, 423] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17668771743774414
10 lb beta sum: 13.921034812927246, worst -0.06234312057495117
pruning_in_iteration open status: True
ratio of positive domain = 5180 / 7736 = 0.6695966907962771
pruning-in-iteration extra time: 0.0015285015106201172
Time: prepare 0.1829    bound 2.4101    transfer 0.0457    finalize 0.0508    func 2.7410    
Accumulated time: func 45.4808    prepare 5.4388    bound 35.6834    transfer 1.2975    finalize 1.8589    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04184 (27), -0.03964 (27), -0.03767 (27), -0.03506 (27), -0.03477 (29), -0.03456 (29), -0.03389 (28), -0.03320 (29), -0.03307 (29), -0.03299 (29), -0.03194 (27), -0.03150 (29), -0.03150 (28), -0.03118 (29), -0.03106 (29), -0.03104 (28), -0.03087 (29), -0.03084 (27), -0.03083 (27), -0.03054 (29), 
Length of domains: 2556
Time: pickout 0.0799    decision 0.2194    set_bounds 0.3248    solve 2.7439    add 0.0991    
Accumulated time: pickout 1.8446    decision 9.9616    set_bounds 7.0595    solve 45.8919    add 3.7037    
Current (lb-rhs): -0.04184460639953613
116540 domains visited
Cumulative time: 72.19466614723206

BaB round 21
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0026
batch: 2556
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 154] [/input-8, 1949] [/input-12, 13] [/input-8, 146] [/input-8, 146] [/input-12, 13] [/input-8, 146] [/input-8, 146] [/input-12, 53] [/input-8, 146] 
cut re-enabled after branching node selection
0 lb beta sum: 14.593432426452637, worst -0.04184460639953613
10 lb beta sum: 25.64742088317871, worst -0.06873798370361328
pruning_in_iteration open status: True
ratio of positive domain = 2768 / 5112 = 0.5414710485133021
pruning-in-iteration extra time: 0.005049228668212891
Time: prepare 0.2425    bound 1.4365    transfer 0.0300    finalize 0.0326    func 1.7752    
Accumulated time: func 47.2560    prepare 5.6815    bound 37.1198    transfer 1.3275    finalize 1.8916    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03964 (28), -0.03763 (28), -0.03658 (28), -0.03476 (28), -0.03456 (30), -0.03436 (30), -0.03308 (29), -0.03213 (30), -0.03148 (30), -0.03128 (30), -0.03118 (30), -0.03068 (30), -0.03063 (29), -0.03036 (30), -0.02965 (30), -0.02946 (30), -0.02945 (28), -0.02939 (28), -0.02924 (28), -0.02923 (30), 
Length of domains: 2344
Time: pickout 0.0586    decision 0.1487    set_bounds 0.1136    solve 1.9289    add 0.0990    
Accumulated time: pickout 1.9032    decision 10.1103    set_bounds 7.1732    solve 47.8208    add 3.8026    
Current (lb-rhs): -0.039638519287109375
118884 domains visited
Cumulative time: 74.57141852378845

BaB round 22
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0020
batch: 2344
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1395] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 1387] [/input-8, 146] [/input-8, 146] 
cut re-enabled after branching node selection
0 lb beta sum: 14.523756980895996, worst -0.03963899612426758
10 lb beta sum: 23.013521194458008, worst -0.06850540637969971
pruning_in_iteration open status: True
ratio of positive domain = 2352 / 4688 = 0.5017064846416383
pruning-in-iteration extra time: 0.0048139095306396484
Time: prepare 0.2266    bound 1.3647    transfer 0.0226    finalize 0.0314    func 1.6796    
Accumulated time: func 48.9357    prepare 5.9083    bound 38.4846    transfer 1.3501    finalize 1.9229    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03964 (29), -0.03753 (29), -0.03706 (29), -0.03658 (29), -0.03476 (29), -0.03389 (29), -0.03370 (29), -0.03240 (31), -0.03218 (29), -0.03166 (31), -0.03053 (30), -0.02939 (29), -0.02934 (29), -0.02923 (31), -0.02901 (31), -0.02830 (31), -0.02824 (29), -0.02808 (30), -0.02771 (31), -0.02752 (31), 
Length of domains: 2336
Time: pickout 0.0580    decision 0.1376    set_bounds 0.1032    solve 1.6807    add 0.0970    
Accumulated time: pickout 1.9612    decision 10.2480    set_bounds 7.2763    solve 49.5015    add 3.8996    
Current (lb-rhs): -0.039638519287109375
121220 domains visited
Cumulative time: 76.67135071754456

BaB round 23
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1265 constraints, 61248 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6516
batch: 2336
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1395] [/input-12, 53] [/input-8, 1387] [/input-8, 154] [/input-8, 1384] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16787338256835938
10 lb beta sum: 15.209161758422852, worst -0.056281328201293945
pruning_in_iteration open status: True
ratio of positive domain = 3224 / 4672 = 0.6900684931506849
pruning-in-iteration extra time: 0.0010786056518554688
Time: prepare 0.1055    bound 1.5269    transfer 0.0220    finalize 0.0272    func 1.7140    
Accumulated time: func 50.6497    prepare 6.0140    bound 40.0115    transfer 1.3721    finalize 1.9501    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03363 (30), -0.03315 (30), -0.03308 (30), -0.03138 (30), -0.03122 (30), -0.03093 (30), -0.03021 (30), -0.02916 (30), -0.02521 (30), -0.02377 (31), -0.02360 (32), -0.02355 (32), -0.02304 (30), -0.02286 (30), -0.02258 (30), -0.02215 (30), -0.02210 (30), -0.02195 (30), -0.02193 (32), -0.02147 (30), 
Length of domains: 1448
Time: pickout 0.0573    decision 0.1373    set_bounds 0.1090    solve 1.7152    add 0.0934    
Accumulated time: pickout 2.0185    decision 10.3853    set_bounds 7.3853    solve 51.2167    add 3.9930    
Current (lb-rhs): -0.033634305000305176
122668 domains visited
Cumulative time: 79.45884132385254

BaB round 24
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0026
batch: 1448
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 414] [/input-8, 1629] [/input-8, 1629] [/input-8, 414] [/input-8, 1629] [/input-8, 1629] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] 
cut re-enabled after branching node selection
0 lb beta sum: 14.970264434814453, worst -0.03363335132598877
10 lb beta sum: 23.542949676513672, worst -0.06272614002227783
pruning_in_iteration open status: True
ratio of positive domain = 1422 / 2896 = 0.49102209944751385
pruning-in-iteration extra time: 0.004647731781005859
Time: prepare 0.1443    bound 0.8672    transfer 0.0137    finalize 0.0167    func 1.0618    
Accumulated time: func 51.7115    prepare 6.1585    bound 40.8787    transfer 1.3858    finalize 1.9668    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03337 (31), -0.03212 (31), -0.03046 (31), -0.03035 (31), -0.02934 (31), -0.02926 (31), -0.02634 (31), -0.02452 (31), -0.02350 (33), -0.02262 (31), -0.02196 (33), -0.02182 (33), -0.02120 (33), -0.02091 (33), -0.02023 (33), -0.02014 (33), -0.02011 (31), -0.01998 (33), -0.01982 (33), -0.01977 (31), 
Length of domains: 1474
Time: pickout 0.0416    decision 0.0887    set_bounds 0.1981    solve 1.0625    add 0.0935    
Accumulated time: pickout 2.0601    decision 10.4740    set_bounds 7.5835    solve 52.2791    add 4.0866    
Current (lb-rhs): -0.03337228298187256
124142 domains visited
Cumulative time: 80.9602210521698

BaB round 25
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0015
batch: 1474
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 1629] [/input-8, 423] [/input-8, 423] [/input-8, 1629] [/input-8, 1629] [/input-8, 1395] [/input-8, 1754] [/input-8, 1395] [/input-8, 1395] 
cut re-enabled after branching node selection
0 lb beta sum: 14.907297134399414, worst -0.03337228298187256
10 lb beta sum: 23.46700668334961, worst -0.06809043884277344
pruning_in_iteration open status: True
ratio of positive domain = 1508 / 2948 = 0.5115332428765265
pruning-in-iteration extra time: 0.0047359466552734375
Time: prepare 0.1381    bound 0.8825    transfer 0.0138    finalize 0.0177    func 1.0713    
Accumulated time: func 52.7828    prepare 6.2969    bound 41.7611    transfer 1.3996    finalize 1.9845    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03210 (32), -0.03028 (32), -0.02916 (32), -0.02896 (32), -0.02825 (32), -0.02742 (32), -0.02692 (32), -0.02634 (32), -0.02461 (32), -0.02452 (32), -0.02427 (32), -0.02176 (32), -0.02120 (34), -0.02117 (32), -0.02105 (32), -0.02089 (32), -0.02087 (34), -0.02031 (34), -0.02011 (32), -0.02002 (34), 
Length of domains: 1440
Time: pickout 0.0422    decision 0.0898    set_bounds 0.0636    solve 1.0727    add 0.0929    
Accumulated time: pickout 2.1023    decision 10.5638    set_bounds 7.6470    solve 53.3518    add 4.1795    
Current (lb-rhs): -0.032103657722473145
125582 domains visited
Cumulative time: 82.33759450912476

BaB round 26
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 1440
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 414] [/input-8, 414] [/input-8, 1629] [/input-8, 423] [/input-8, 414] [/input-8, 414] [/input-8, 433] [/input-8, 433] [/input-8, 433] [/input-8, 433] 
cut re-enabled after branching node selection
0 lb beta sum: 14.8534574508667, worst -0.03318655490875244
10 lb beta sum: 24.068233489990234, worst -0.06261754035949707
pruning_in_iteration open status: True
ratio of positive domain = 1496 / 2880 = 0.5194444444444444
pruning-in-iteration extra time: 0.00472259521484375
Time: prepare 0.1408    bound 0.8573    transfer 0.0138    finalize 0.0162    func 1.0476    
Accumulated time: func 53.8304    prepare 6.4379    bound 42.6184    transfer 1.4133    finalize 2.0007    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03210 (33), -0.02849 (33), -0.02809 (33), -0.02759 (33), -0.02742 (33), -0.02695 (33), -0.02595 (33), -0.02542 (33), -0.02278 (33), -0.02142 (33), -0.02129 (33), -0.02092 (33), -0.02087 (35), -0.02056 (33), -0.02026 (33), -0.02003 (33), -0.01992 (35), -0.01924 (35), -0.01915 (35), -0.01913 (33), 
Length of domains: 1384
Time: pickout 0.0435    decision 0.0879    set_bounds 0.0613    solve 1.0484    add 0.0933    
Accumulated time: pickout 2.1458    decision 10.6517    set_bounds 7.7083    solve 54.4003    add 4.2728    
Current (lb-rhs): -0.032103657722473145
126966 domains visited
Cumulative time: 83.68801999092102

BaB round 27
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 1384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 1178] 
cut re-enabled after branching node selection
0 lb beta sum: 14.828160285949707, worst -0.027661442756652832
10 lb beta sum: 23.96202850341797, worst -0.05564618110656738
pruning_in_iteration open status: True
ratio of positive domain = 1516 / 2768 = 0.5476878612716762
pruning-in-iteration extra time: 0.0046689510345458984
Time: prepare 0.1295    bound 0.8234    transfer 0.0135    finalize 0.0159    func 1.0011    
Accumulated time: func 54.8315    prepare 6.5676    bound 43.4418    transfer 1.4268    finalize 2.0167    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02601 (34), -0.02565 (34), -0.02362 (34), -0.02232 (34), -0.02226 (34), -0.02198 (34), -0.02189 (34), -0.02098 (34), -0.02070 (34), -0.02031 (34), -0.02018 (34), -0.02012 (34), -0.02009 (34), -0.01968 (34), -0.01937 (34), -0.01849 (34), -0.01812 (36), -0.01770 (34), -0.01719 (34), -0.01653 (36), 
Length of domains: 1252
Time: pickout 0.0410    decision 0.2237    set_bounds 0.0594    solve 1.0018    add 0.0919    
Accumulated time: pickout 2.1869    decision 10.8753    set_bounds 7.7677    solve 55.4021    add 4.3648    
Current (lb-rhs): -0.02600860595703125
128218 domains visited
Cumulative time: 85.12108540534973

BaB round 28
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts: total 1276 constraints, 62697 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5232
batch: 1252
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 939] [/input-8, 939] [/input-8, 1396] [/input-8, 433] [/input-8, 939] [/input-8, 1178] [/input-8, 414] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14988374710083008
10 lb beta sum: 15.951339721679688, worst -0.04233264923095703
pruning_in_iteration open status: True
ratio of positive domain = 1726 / 2504 = 0.689297124600639
pruning-in-iteration extra time: 0.00054168701171875
Time: prepare 0.0575    bound 0.8498    transfer 0.0070    finalize 0.0145    func 0.9457    
Accumulated time: func 55.7773    prepare 6.6253    bound 44.2916    transfer 1.4338    finalize 2.0311    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02114 (35), -0.01958 (35), -0.01933 (35), -0.01924 (35), -0.01924 (35), -0.01907 (35), -0.01877 (35), -0.01823 (35), -0.01778 (35), -0.01769 (35), -0.01729 (35), -0.01535 (35), -0.01519 (35), -0.01500 (35), -0.01500 (37), -0.01496 (35), -0.01465 (35), -0.01412 (35), -0.01372 (37), -0.01313 (35), 
Length of domains: 778
Time: pickout 0.0401    decision 0.0775    set_bounds 0.1732    solve 0.9463    add 0.1020    
Accumulated time: pickout 2.2270    decision 10.9529    set_bounds 7.9409    solve 56.3484    add 4.4668    
Current (lb-rhs): -0.021136760711669922
128996 domains visited
Cumulative time: 86.99828815460205

BaB round 29
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 778
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 154] [/input-8, 154] [/input-8, 242] [/input-8, 1195] [/input, 3544] [/input-8, 1195] [/input-8, 1178] [/input-8, 1178] [/input-8, 1178] [/input-8, 1195] 
cut re-enabled after branching node selection
0 lb beta sum: 15.174087524414062, worst -0.018056273460388184
10 lb beta sum: 26.141864776611328, worst -0.04749321937561035
pruning_in_iteration open status: True
ratio of positive domain = 938 / 1556 = 0.602827763496144
pruning-in-iteration extra time: 0.0046274662017822266
Time: prepare 0.0743    bound 0.4624    transfer 0.0044    finalize 0.0087    func 0.5607    
Accumulated time: func 56.3380    prepare 6.6999    bound 44.7540    transfer 1.4382    finalize 2.0399    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01806 (36), -0.01675 (36), -0.01646 (36), -0.01608 (36), -0.01591 (36), -0.01591 (36), -0.01519 (36), -0.01506 (36), -0.01492 (36), -0.01430 (36), -0.01402 (36), -0.01364 (36), -0.01303 (36), -0.01303 (36), -0.01282 (36), -0.01246 (36), -0.01240 (36), -0.01239 (36), -0.01237 (36), -0.01237 (36), 
Length of domains: 618
Time: pickout 0.0322    decision 0.0526    set_bounds 0.0318    solve 0.5611    add 0.0834    
Accumulated time: pickout 2.2591    decision 11.0055    set_bounds 7.9727    solve 56.9094    add 4.5501    
Current (lb-rhs): -0.018056273460388184
129614 domains visited
Cumulative time: 87.77199387550354

BaB round 30
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0011
batch: 618
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1629] [/input-8, 1388] [/input-8, 1388] [/input-8, 1629] [/input-8, 1629] [/input-8, 1388] [/input-8, 1388] 
cut re-enabled after branching node selection
0 lb beta sum: 15.053098678588867, worst -0.022807002067565918
10 lb beta sum: 21.428443908691406, worst -0.04648160934448242
pruning_in_iteration open status: True
ratio of positive domain = 753 / 1236 = 0.6092233009708738
pruning-in-iteration extra time: 0.004649162292480469
Time: prepare 0.0568    bound 0.4170    transfer 0.0033    finalize 0.0082    func 0.4932    
Accumulated time: func 56.8311    prepare 6.7570    bound 45.1709    transfer 1.4415    finalize 2.0481    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01735 (37), -0.01608 (37), -0.01591 (37), -0.01455 (37), -0.01450 (37), -0.01364 (37), -0.01362 (37), -0.01356 (37), -0.01337 (37), -0.01290 (37), -0.01230 (37), -0.01218 (37), -0.01214 (37), -0.01199 (37), -0.01192 (37), -0.01161 (37), -0.01136 (37), -0.01129 (37), -0.01049 (37), -0.01046 (37), 
Length of domains: 483
Time: pickout 0.0228    decision 0.0441    set_bounds 0.0230    solve 0.4935    add 0.0837    
Accumulated time: pickout 2.2820    decision 11.0496    set_bounds 7.9957    solve 57.4029    add 4.6338    
Current (lb-rhs): -0.01735091209411621
130097 domains visited
Cumulative time: 88.45083117485046

BaB round 31
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0007
batch: 483
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] 
cut re-enabled after branching node selection
0 lb beta sum: 15.112480163574219, worst -0.012301445007324219
10 lb beta sum: 26.9405574798584, worst -0.04485130310058594
pruning_in_iteration open status: True
ratio of positive domain = 649 / 966 = 0.6718426501035197
pruning-in-iteration extra time: 0.004616498947143555
Time: prepare 0.0455    bound 0.3396    transfer 0.0027    finalize 0.0056    func 0.3997    
Accumulated time: func 57.2308    prepare 6.8027    bound 45.5106    transfer 1.4442    finalize 2.0537    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01230 (38), -0.01218 (38), -0.01160 (38), -0.01139 (38), -0.01120 (38), -0.01118 (38), -0.01114 (38), -0.00959 (38), -0.00948 (38), -0.00941 (38), -0.00911 (38), -0.00905 (38), -0.00895 (38), -0.00877 (38), -0.00873 (40), -0.00858 (38), -0.00848 (38), -0.00825 (40), -0.00815 (38), -0.00807 (38), 
Length of domains: 317
Time: pickout 0.0216    decision 0.0377    set_bounds 0.0190    solve 0.3999    add 0.0765    
Accumulated time: pickout 2.3036    decision 11.0873    set_bounds 8.0147    solve 57.8028    add 4.7103    
Current (lb-rhs): -0.01230001449584961
130414 domains visited
Cumulative time: 89.01792860031128

BaB round 32
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0007
batch: 317
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] [/input-8, 737] 
cut re-enabled after branching node selection
0 lb beta sum: 15.150264739990234, worst -0.012182950973510742
10 lb beta sum: 23.49063491821289, worst -0.041381120681762695
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 229 / 634 = 0.361198738170347
pruning-in-iteration extra time: 0.0031614303588867188
Time: prepare 0.0306    bound 0.1885    transfer 0.0019    finalize 0.0037    func 0.2294    
Accumulated time: func 57.4602    prepare 6.8335    bound 45.6990    transfer 1.4460    finalize 2.0574    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01218 (39), -0.01165 (39), -0.01139 (39), -0.01120 (39), -0.01117 (39), -0.01114 (39), -0.01097 (39), -0.01052 (39), -0.01045 (39), -0.01014 (39), -0.00994 (39), -0.00989 (39), -0.00985 (39), -0.00948 (39), -0.00941 (39), -0.00938 (39), -0.00921 (39), -0.00905 (39), -0.00895 (39), -0.00890 (39), 
Length of domains: 405
Time: pickout 0.0189    decision 0.0286    set_bounds 0.0128    solve 0.2295    add 0.0835    
Accumulated time: pickout 2.3225    decision 11.1159    set_bounds 8.0275    solve 58.0323    add 4.7938    
Current (lb-rhs): -0.012182950973510742
130819 domains visited
Cumulative time: 89.40105509757996

BaB round 33
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0006
batch: 405
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1178] [/input-8, 1178] [/input-8, 1178] [/input-8, 1178] [/input-8, 1178] [/input-8, 1396] [/input-8, 1396] [/input-8, 1178] [/input-8, 1178] [/input-8, 1178] 
cut re-enabled after branching node selection
0 lb beta sum: 14.920422554016113, worst -0.025742769241333008
10 lb beta sum: 15.258092880249023, worst -0.03975534439086914
pruning_in_iteration open status: True
ratio of positive domain = 627 / 810 = 0.7740740740740741
pruning-in-iteration extra time: 0.0005223751068115234
Time: prepare 0.0391    bound 0.3225    transfer 0.0023    finalize 0.0045    func 0.3738    
Accumulated time: func 57.8339    prepare 6.8729    bound 46.0216    transfer 1.4483    finalize 2.0619    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00938 (40), -0.00876 (40), -0.00851 (40), -0.00823 (40), -0.00798 (40), -0.00750 (40), -0.00728 (40), -0.00713 (40), -0.00688 (40), -0.00681 (40), -0.00656 (40), -0.00651 (40), -0.00633 (40), -0.00621 (40), -0.00614 (40), -0.00605 (40), -0.00602 (40), -0.00595 (40), -0.00594 (40), -0.00583 (40), 
Length of domains: 183
Time: pickout 0.0204    decision 0.0329    set_bounds 0.0167    solve 0.3739    add 0.0765    
Accumulated time: pickout 2.3429    decision 11.1488    set_bounds 8.0442    solve 58.4063    add 4.8703    
Current (lb-rhs): -0.009381651878356934
131002 domains visited
Cumulative time: 89.93192601203918

BaB round 34
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0006
batch: 183
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1396] [/input-8, 1396] [/input-8, 1396] [/input-8, 1396] [/input-8, 1396] [/input-8, 1396] [/input-8, 1396] [/input-8, 1178] [/input-8, 1178] [/input-8, 1178] 
cut re-enabled after branching node selection
0 lb beta sum: 15.208113670349121, worst -0.00954580307006836
10 lb beta sum: 25.59447479248047, worst -0.040696144104003906
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 149 / 366 = 0.40710382513661203
pruning-in-iteration extra time: 0.0031595230102539062
Time: prepare 0.0180    bound 0.1609    transfer 0.0011    finalize 0.0023    func 0.1847    
Accumulated time: func 58.0187    prepare 6.8911    bound 46.1824    transfer 1.4495    finalize 2.0642    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00938 (41), -0.00816 (41), -0.00806 (41), -0.00785 (41), -0.00692 (41), -0.00685 (41), -0.00685 (41), -0.00681 (41), -0.00651 (41), -0.00650 (41), -0.00632 (41), -0.00619 (41), -0.00619 (41), -0.00594 (41), -0.00583 (41), -0.00579 (41), -0.00560 (41), -0.00544 (41), -0.00542 (41), -0.00533 (41), 
Length of domains: 217
Time: pickout 0.0150    decision 0.0208    set_bounds 0.0076    solve 0.1848    add 0.0762    
Accumulated time: pickout 2.3579    decision 11.1696    set_bounds 8.0518    solve 58.5911    add 4.9465    
Current (lb-rhs): -0.009381651878356934
131219 domains visited
Cumulative time: 90.24521851539612

BaB round 35
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0006
batch: 217
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 408] [/input, 408] [/input, 408] [/input, 408] [/input, 408] [/input, 408] [/input, 408] [/input, 408] [/input, 408] [/input, 374] 
cut re-enabled after branching node selection
0 lb beta sum: 15.022730827331543, worst -0.023040771484375
10 lb beta sum: 15.207205772399902, worst -0.03931117057800293
pruning_in_iteration open status: True
ratio of positive domain = 349 / 434 = 0.804147465437788
pruning-in-iteration extra time: 0.0010750293731689453
Time: prepare 0.0213    bound 0.2400    transfer 0.0013    finalize 0.0033    func 0.2688    
Accumulated time: func 58.2875    prepare 6.9126    bound 46.4224    transfer 1.4507    finalize 2.0676    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00746 (42), -0.00647 (42), -0.00525 (42), -0.00499 (42), -0.00479 (42), -0.00454 (42), -0.00415 (42), -0.00415 (42), -0.00385 (42), -0.00375 (42), -0.00366 (42), -0.00301 (42), -0.00293 (42), -0.00278 (42), -0.00276 (42), -0.00266 (42), -0.00252 (42), -0.00252 (42), -0.00252 (42), -0.00248 (42), 
Length of domains: 85
Time: pickout 0.0174    decision 0.0227    set_bounds 0.0087    solve 0.2689    add 0.0753    
Accumulated time: pickout 2.3753    decision 11.1923    set_bounds 8.0605    solve 58.8601    add 5.0218    
Current (lb-rhs): -0.0074615478515625
131304 domains visited
Cumulative time: 90.64734244346619

BaB round 36
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 85
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1754] [/input-8, 1754] [/input-8, 1754] [/input-8, 1754] [/input-8, 1754] [/input-8, 1754] [/input, 408] [/input-8, 1754] [/input-8, 1754] [/input-8, 1754] 
split level 1: [/input, 963] [/input, 963] [/input, 963] [/input, 963] [/input, 963] [/input, 963] [/input-8, 1754] [/input, 963] [/input, 963] [/input, 963] 
cut re-enabled after branching node selection
0 lb beta sum: 15.047499656677246, worst -0.00598907470703125
10 lb beta sum: 24.002952575683594, worst -0.03384900093078613
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 128 / 340 = 0.3764705882352941
pruning-in-iteration extra time: 0.003118276596069336
Time: prepare 0.0167    bound 0.1574    transfer 0.0011    finalize 0.0021    func 0.1794    
Accumulated time: func 58.4669    prepare 6.9295    bound 46.5798    transfer 1.4518    finalize 2.0697    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00599 (44), -0.00574 (44), -0.00525 (44), -0.00515 (44), -0.00512 (44), -0.00487 (44), -0.00462 (44), -0.00412 (44), -0.00407 (44), -0.00398 (44), -0.00385 (44), -0.00385 (44), -0.00385 (44), -0.00365 (44), -0.00361 (44), -0.00357 (44), -0.00356 (44), -0.00355 (44), -0.00355 (44), -0.00340 (44), 
Length of domains: 212
Time: pickout 0.0142    decision 0.0189    set_bounds 0.0117    solve 0.1795    add 0.0757    
Accumulated time: pickout 2.3895    decision 11.2112    set_bounds 8.0721    solve 59.0396    add 5.0975    
Current (lb-rhs): -0.00598907470703125
131516 domains visited
Cumulative time: 90.95595598220825

BaB round 37
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0007
batch: 212
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input-12, 68] [/input-8, 410] [/input-8, 410] [/input-12, 68] [/input-12, 68] 
cut re-enabled after branching node selection
0 lb beta sum: 14.83202838897705, worst -0.016588687896728516
10 lb beta sum: 14.998347282409668, worst -0.0317230224609375
pruning_in_iteration open status: True
ratio of positive domain = 416 / 424 = 0.9811320754716981
pruning-in-iteration extra time: 0.0018038749694824219
Time: prepare 0.0211    bound 0.2526    transfer 0.0012    finalize 0.0028    func 0.2806    
Accumulated time: func 58.7474    prepare 6.9508    bound 46.8325    transfer 1.4530    finalize 2.0725    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00357 (45), -0.00129 (45), -0.00108 (45), -0.00072 (45), -0.00036 (45), -0.00036 (45), -0.00029 (45), -0.00008 (45), 
Length of domains: 8
Time: pickout 0.0177    decision 0.0228    set_bounds 0.0086    solve 0.2807    add 0.0324    
Accumulated time: pickout 2.4072    decision 11.2340    set_bounds 8.0807    solve 59.3202    add 5.1299    
Current (lb-rhs): -0.0035746097564697266
131524 domains visited
Cumulative time: 91.3279869556427

BaB round 38
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0007
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 939] [/input-8, 939] [/input-8, 939] [/input-8, 939] [/input-8, 939] [/input-8, 939] [/input-8, 939] [/input-8, 939] 
split level 1: [/input-8, 410] [/input-8, 410] [/input-8, 410] [/input, 469] [/input, 469] [/input-8, 410] [/input-8, 410] [/input, 469] 
split level 2: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-8, 410] [/input-8, 410] [/input-12, 68] [/input, 963] [/input-8, 410] 
split level 3: [/input, 492] [/input, 492] [/input, 492] [/input-12, 68] [/input-12, 68] [/input, 492] [/input, 492] [/input, 963] 
split level 4: [/input, 3525] [/input, 3525] [/input, 3525] [/input, 492] [/input, 492] [/input, 3525] [/input, 3525] [/input, 492] 
cut re-enabled after branching node selection
0 lb beta sum: 14.830095291137695, worst 0.0025342702865600586

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.100799560546875e-05
Time: prepare 0.0128    bound 0.0064    transfer 0.0007    finalize 0.0015    func 0.0234    
Accumulated time: func 58.7708    prepare 6.9639    bound 46.8389    transfer 1.4537    finalize 2.0740    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0160    set_bounds 0.0156    solve 0.0234    add 0.0001    
Accumulated time: pickout 2.4081    decision 11.2500    set_bounds 8.0963    solve 59.3437    add 5.1299    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
131524 domains visited
Cumulative time: 91.38588452339172

found process to kill: terminal indx = 0
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=13_spec=0_30542967.log
found process for pidx=0
kill process for pidx=0
Result: safe in 93.9814 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.06784821, -10.58980083, -14.57435703, -13.27788925, -13.83081436,
         -14.45864487, -13.14409447, -13.97298336, -12.07690144,  -9.28960514]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [479]; unstable size 479; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 479] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 479] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 217] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.56003857, 0.62899381, 3.70473766, 2.64316010, 3.00231910, 3.71363807,
         2.32806015, 2.93838811, 1.83370197]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.44266796, -16.16106987, -11.92645931, -10.71731567, -11.05861855,
         -10.75457382, -13.42498779, -10.81375790, -16.44475365, -15.04152584]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [587]; unstable size 587; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 587] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 587] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 221] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55051112,  4.09006071,  0.36009502, -0.47126329, -0.31621832,
          1.88454568, -0.86957800,  4.73674679,  3.06783533]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.44266796, -16.16106987, -11.92645931, -10.71731567, -11.05861855,
         -10.75457382, -13.42498779, -10.81375790, -16.44475365, -15.04152584]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.83619690, -16.61016846, -12.28275108, -11.27688122, -11.14465904,
          -11.27646160, -13.88090134, -10.95770168, -16.84897423, -15.54391193],
         [-14.83619690, -16.61016846, -12.28275108, -11.27688122, -11.14465904,
          -11.27646160, -13.88090134, -10.95770168, -16.84897423, -15.54391193]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13222218, -0.00041962, -0.31917953]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0122 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0590 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.68520546, -29.33057404, -23.34724998, -23.50040627, -23.08244896,
         -23.89678383, -23.22287750, -25.18677521, -28.65573311, -29.02714920]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [857]; unstable size 857; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 401, 1, 857] with unstable size 400 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 857] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 857] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [400]; unstable size 400; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 400] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 400] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.34057260,  3.30707383, -1.46605682, -1.78303552, -0.07614890,
         -1.46367002,  0.02865052,  2.77813029,  3.23617649]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.68520546, -29.33057404, -23.34724998, -23.50040627, -23.08244896,
         -23.89678383, -23.22287750, -25.18677521, -28.65573311, -29.02714920]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.68520737, -29.33057594, -23.34725189, -23.50040627, -23.08245087,
          -23.89678574, -23.22287941, -25.18677711, -28.65573311, -29.02714920],
         [-26.68520737, -29.33057594, -23.34725189, -23.50040627, -23.08245087,
          -23.89678574, -23.22287941, -25.18677711, -28.65573311, -29.02714920]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15315437, -0.41795540,  0.39637947, -0.27752686]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.55547142, -21.29835701, -26.80152893, -27.28372574, -26.67305183,
         -28.70449638, -26.93589401, -28.94626617, -24.43898201, -23.37986755]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [525]; unstable size 525; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 525] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 525] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 253] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.71861172, 3.84952354, 4.56171370, 3.84017420, 5.90634918, 4.26612473,
         6.14898014, 1.99088383, 1.41389072]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0355 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.96761131, -23.51111603, -16.18240738, -18.45089149, -16.26456261,
         -17.94385719, -14.73691177, -18.44084930, -24.07545662, -22.63823509]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [463]; unstable size 463; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 463] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 463] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 463] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 310] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.97309637,  6.70187235, -0.02662754,  2.50170493, -0.07382059,
          1.85107923,  1.77261996,  7.00046921,  5.85668850]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.96761131, -23.51111603, -16.18240738, -18.45089149, -16.26456261,
         -17.94385719, -14.73691177, -18.44084930, -24.07545662, -22.63823509]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.42it/s]100%|██████████| 1/1 [00:00<00:00,  8.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.13876343, -24.08310127, -16.37594223, -18.98218155, -16.69490623,
          -18.46617508, -15.56402779, -18.87380600, -24.34334183, -23.19640350],
         [-21.13876343, -24.08310127, -16.37594223, -18.98218155, -16.69490623,
          -18.46617508, -15.56402779, -18.87380600, -24.34334183, -23.19640350]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.81191444, 1.13087845]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1216 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 8th iter
best_l after optimization: 30.210880279541016
alpha/beta optimization time: 0.1131742000579834
initial alpha-crown bounds: tensor([[4.06331778e+00, 6.77928305e+00, 3.31616402e-02, 2.54543519e+00,
         2.59399414e-03, 1.90330660e+00, 1.86108613e+00, 7.08985567e+00,
         5.93283844e+00]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.002593994140625
verified with init bound!
Result: safe-incomplete in 0.3411 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
         -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [624]; unstable size 624; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 333, 1, 624] with unstable size 332 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 624] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 624] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [332]; unstable size 332; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 332] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 332] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.85006881,  6.56638050,  0.72854519,  0.16635036,  0.09236519,
         -0.16829276,  2.54186058,  4.97395658,  6.48725271]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
         -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
100%|██████████| 1/1 [00:00<00:00,  8.47it/s]100%|██████████| 1/1 [00:00<00:00,  8.46it/s]
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6566 seconds.
lower bounds for all target labels: [4.063317775726318, 6.779283046722412, 0.03316164016723633, 2.5454351902008057, 0.002593994140625, 1.9033066034317017, 1.861086130142212, 7.089855670928955, 5.932838439941406]
Number of cpus: 96  Number of subproblems: 0
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: []
start creating model mps for candidates: []
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.02144432, -22.99676323, -16.43036079, -14.81798553, -15.77610588,
          -15.32225418, -15.29498672, -18.67889786, -21.40403748, -22.81297874]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.47700119]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1213 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.757089614868164
alpha/beta optimization time: 1.2242960929870605
initial alpha-crown bounds: tensor([[ 3.92190480,  6.63770390,  0.78050590,  0.20929790,  0.10922202,
         -0.07384849,  2.59734678,  5.03754330,  6.53741312]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.07384848594665527
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
parallel mps save finish
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6669 seconds.
lower bounds for all target labels: [3.9219045639038086, 6.637702465057373, 0.7805066108703613, 0.20929908752441406, 0.1092224195599556, -0.07384777069091797, 2.5973472595214844, 5.037542343139648, 6.537412166595459]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [5]
start creating model mps for candidates: ['lay/16_5']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4884386062622
Verifying property 0 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.637703895568848.

Properties batch 1, size 1
Remaining timeout: 198.24719786643982
Verifying property 1 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.537413120269775.

Properties batch 2, size 1
Remaining timeout: 198.1070704460144
Verifying property 2 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.037543296813965.

Properties batch 3, size 1
Remaining timeout: 197.94979977607727
Verifying property 3 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9219048023223877.

Properties batch 4, size 1
Remaining timeout: 197.83263635635376
Verifying property 4 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.597346782684326.

Properties batch 5, size 1
Remaining timeout: 197.72512769699097
Verifying property 5 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.780505895614624.

Properties batch 6, size 1
Remaining timeout: 197.61721467971802
Verifying property 6 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20929789543151855.

Properties batch 7, size 1
Remaining timeout: 197.51026701927185
Verifying property 7 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10922202467918396.

Properties batch 8, size 1
Remaining timeout: 197.40343952178955
Verifying property 8 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07384849]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
        -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07384849]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 624
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 330
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 975
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009691715240478516
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 85] 
split level 5: [/input-8, 220] 
split level 6: [/input-12, 72] 
split level 7: [/input-8, 221] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.7206878662109375e-05
Time: prepare 0.0032    bound 0.0045    transfer 0.0036    finalize 0.0025    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0037    bound 0.0045    transfer 0.0036    finalize 0.0025    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0263    set_bounds 0.0189    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0263    set_bounds 0.0189    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06606674194335938

the mip building process is not terminated yet, kill it
Result: safe in 3.0347 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.15224266, -25.34284210, -20.68698883, -21.11905098, -21.28755379,
         -21.18818092, -18.96833420, -23.86169434, -24.43035507, -25.58597183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [838]; unstable size 838; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 334, 1, 838] with unstable size 333 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 838] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 838] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [333]; unstable size 333; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 333] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 333] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.44667220, 4.02514458, 0.65229511, 0.96642137, 0.94116783, 0.84790790,
         2.93652272, 3.08846760, 4.46393156]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.31029320, -25.64724922, -21.19924164, -21.00788879, -21.44479942,
         -20.21812248, -22.40578079, -20.59401131, -24.67918396, -24.01255989]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 523] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 523] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 180] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.59976029,  3.72134495, -0.09878147,  0.47413683,  0.20959401,
          1.12203467, -0.49487087,  3.08997440,  2.65038443]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.31029320, -25.64724922, -21.19924164, -21.00788879, -21.44479942,
         -20.21812248, -22.40578079, -20.59401131, -24.67918396, -24.01255989]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.13118744, -26.43610382, -22.10371780, -21.97385406, -22.15757751,
          -21.20539856, -23.31969070, -21.12502861, -25.59633255, -24.98401833],
         [-26.13118744, -26.43610382, -22.10371780, -21.97385406, -22.15757751,
          -21.20539856, -23.31969070, -21.12502861, -25.59633255, -24.98401833]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.89831924, -0.08036995]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0564 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.87531281, -15.75632095, -14.57347012, -15.76169777, -14.07984734,
         -16.31337166, -16.52824211, -16.65783691,  -8.99959373, -15.31440544]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [604]; unstable size 604; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 604] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 604] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 604] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 243] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74084187, 5.52800369, 4.11085081, 5.41803741, 3.71402359, 5.74122238,
         6.21470308, 6.00886154, 4.98770428]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0485 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.64936256, -23.01173401, -19.97909546, -17.49272156, -20.01158905,
         -17.02442741, -21.03547668, -19.50024414, -20.38127136, -20.46527672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [447]; unstable size 447; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 447] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 447] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 447] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 188] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.30454564, 4.15309906, 1.79540014, 0.15248436, 1.72279477, 3.02521491,
         1.09999514, 1.62638283, 1.86410713]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0335 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
         -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1052]; unstable size 1052; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 366, 1, 1052] with unstable size 365 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 1052] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1052] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [365]; unstable size 365; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 365] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.67349148,  0.95226860,  3.60676479,  1.65505791,  4.16816044,
          2.46865177,  3.16671324,  0.41265249,  0.44317591]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
         -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.76it/s]100%|██████████| 1/1 [00:00<00:00,  8.75it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.87743950, -19.35758781, -22.15427971, -24.89256096, -22.97465324,
          -25.62451553, -23.85381317, -24.51388931, -21.46959877, -20.74610329]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.51985168]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1169 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.48583984375
alpha/beta optimization time: 1.2623870372772217
initial alpha-crown bounds: tensor([[-0.55390978,  1.12264347,  3.76586819,  1.80786324,  4.34684563,
          2.61715698,  3.32345533,  0.54351521,  0.51240134]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.5539097785949707
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6660 seconds.
lower bounds for all target labels: [-0.5539097785949707, 1.1226434707641602, 3.7658681869506836, 1.807861328125, 4.346845626831055, 2.617156982421875, 3.323455333709717, 0.5435152053833008, 0.5123996734619141]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/16_0']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50753045082092
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.346845626831055.

Properties batch 1, size 1
Remaining timeout: 198.28334307670593
Verifying property 1 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7658681869506836.

Properties batch 2, size 1
Remaining timeout: 198.17626523971558
Verifying property 2 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.323455333709717.

Properties batch 3, size 1
Remaining timeout: 198.08403182029724
Verifying property 3 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.617156982421875.

Properties batch 4, size 1
Remaining timeout: 197.99371767044067
Verifying property 4 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8078632354736328.

Properties batch 5, size 1
Remaining timeout: 197.89468026161194
Verifying property 5 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1226434707641602.

Properties batch 6, size 1
Remaining timeout: 197.79952430725098
Verifying property 6 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5435152053833008.

Properties batch 7, size 1
Remaining timeout: 197.70932340621948
Verifying property 7 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5124013423919678.

Properties batch 8, size 1
Remaining timeout: 197.61514449119568
Verifying property 8 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55390978]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
        -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55390978]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1052
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 355
Node /15 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 1436
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008542537689208984
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 67] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.004701137542724609
Time: prepare 0.0019    bound 0.1212    transfer 0.0038    finalize 0.0025    func 0.1296    
Accumulated time: func 0.1296    prepare 0.0023    bound 0.1212    transfer 0.0038    finalize 0.0025    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08762 (8), -0.01088 (8), 
Length of domains: 2
Time: pickout 0.0009    decision 0.0277    set_bounds 0.0168    solve 0.1296    add 0.0253    
Accumulated time: pickout 0.0009    decision 0.0277    set_bounds 0.0168    solve 0.1296    add 0.0253    
Current (lb-rhs): -0.0876154899597168
2 domains visited
Cumulative time: 0.21382999420166016

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 2
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 64] [/input-12, 64] 
split level 2: [/input-12, 42] [/input-12, 42] 
split level 3: [/input-8, 1964] [/input-8, 1964] 
split level 4: [/input-12, 90] [/input-12, 71] 
split level 5: [/input-12, 71] [/input-12, 90] 
split level 6: [/input-12, 57] [/input-12, 57] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.696846008300781e-05
Time: prepare 0.0051    bound 0.0039    transfer 0.0008    finalize 0.0023    func 0.0121    
Accumulated time: func 0.1416    prepare 0.0078    bound 0.1251    transfer 0.0046    finalize 0.0049    
all_split False
Length of domains: 0
Time: pickout 0.0007    decision 0.0225    set_bounds 0.0166    solve 0.0122    add 0.0001    
Accumulated time: pickout 0.0016    decision 0.0502    set_bounds 0.0335    solve 0.1418    add 0.0253    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2672305107116699

the mip building process is not terminated yet, kill it
Result: safe in 3.0133 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.01604462, -16.60401917, -13.75974274, -13.62233925, -13.08835316,
         -14.19851303, -12.87796688, -14.01632118, -16.99109268, -15.74184418]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 659] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 659] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 310] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.06798172, -2.58395004, -2.91112781, -3.35464406, -2.51877737,
         -3.61694932, -2.86971092,  0.43352538, -1.25155258]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.01604462, -16.60401917, -13.75974274, -13.62233925, -13.08835316,
         -14.19851303, -12.87796688, -14.01632118, -16.99109268, -15.74184418]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.01604366, -16.60401917, -13.75974369, -13.62234020, -13.08835220,
          -14.19851398, -12.87796688, -14.01632118, -16.99109459, -15.74184608],
         [-15.01604366, -16.60401917, -13.75974369, -13.62234020, -13.08835220,
          -14.19851398, -12.87796688, -14.01632118, -16.99109459, -15.74184608]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.58797550, -1.25629997, -1.39370346, -1.92769146, -0.81752968,
          -2.13807678, -0.99972248,  0.72580242]]], device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0705 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.90988064, -12.45664406, -15.21899319, -13.88694572, -14.48770905,
         -14.28946209, -14.69633865, -13.84464264, -14.34021282, -11.62079906]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [500]; unstable size 500; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 500] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 500] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 500] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 172] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81550616, 0.12776923, 1.67829514, 0.58634520, 0.90821409, 0.83706665,
         1.15808964, 0.31059217, 1.68028736]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0413 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.65237999, -26.28784180, -22.21496773, -22.94103813, -19.88295174,
         -23.10355949, -23.92632675, -16.94944000, -25.83104324, -24.10295296]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 632] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 632] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 241] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.00603628, 7.31206369, 3.91715932, 4.58261108, 2.16801429, 4.73693991,
         5.37613630, 6.48344803, 5.24407530]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0451 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.01066399, -28.57836723, -25.32221985, -26.57108498, -26.69775391,
         -27.17006111, -27.16849136, -29.60597229, -25.49334908, -28.60743141]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 134, 1, 602] with unstable size 133 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 602] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [133]; unstable size 133; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 133] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.69067621, 1.75672925, 2.90525055, 3.03809571, 3.37360620, 3.51928496,
         5.64078951, 1.68218970, 4.79778767]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0345 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.58022118, -31.81094170, -26.44467354, -24.52676773, -24.55172729,
         -24.79080772, -24.80268097, -25.39589882, -30.52891159, -30.66180420]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [824]; unstable size 824; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 824] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 824] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 824] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 256] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.94624805,  4.85114479, -0.16955948, -1.79679966, -1.73069477,
         -1.51086402, -1.98932123,  3.64661884,  4.09455490]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.58022118, -31.81094170, -26.44467354, -24.52676773, -24.55172729,
         -24.79080772, -24.80268097, -25.39589882, -30.52891159, -30.66180420]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.58021927, -31.81093979, -26.44467163, -24.52676773, -24.55172729,
          -24.79080582, -24.80267715, -25.39589882, -30.52891159, -30.66180420],
         [-29.58021927, -31.81093979, -26.44467163, -24.52676773, -24.55172729,
          -24.79080582, -24.80267715, -25.39589882, -30.52891159, -30.66180420]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.04877281, -0.86913109, -0.84417152, -0.60509300, -0.59322166]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0666 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.97128105, -37.96307373, -34.52404785, -37.46557999, -35.63014603,
         -38.36451340, -36.77544022, -40.04882431, -35.94057846, -38.51336288]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [763]; unstable size 763; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 176, 1, 763] with unstable size 175 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 763] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 763] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [175]; unstable size 175; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 175] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 175] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.93386221, 1.84800172, 4.37804604, 2.56460929, 5.05402136, 3.82877183,
         6.62601948, 3.10796714, 5.56228876]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0529 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.48475838, -29.65727234, -23.60843277, -25.59186363, -21.86170197,
         -25.18845367, -25.36190605, -23.12098694, -27.66559601, -28.33211899]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [618]; unstable size 618; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 618] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 618] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 618] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 272] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.15050769, 5.57539082, 0.71036434, 2.73630500, 2.29937863, 2.30952406,
         0.40072060, 4.11238194, 4.36770487]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0630 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.43476677, -21.89505386, -17.38277435, -18.91377258, -16.89746284,
         -19.49347115, -18.77677345, -17.15766907, -19.06263733, -20.67627907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1008]; unstable size 1008; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 331, 1, 1008] with unstable size 330 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1008] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1008] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [330]; unstable size 330; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 330] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 330] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17812443,  2.10233784, -1.56133389, -0.11888409, -1.70705843,
          0.52253580, -0.66222930, -0.72439504,  1.23998952]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.43476677, -21.89505386, -17.38277435, -18.91377258, -16.89746284,
         -19.49347115, -18.77677345, -17.15766907, -19.06263733, -20.67627907]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.43476868, -21.89505196, -17.38277435, -18.91377449, -16.89746284,
          -19.49347115, -18.77677155, -17.15766907, -19.06263924, -20.67627907],
         [-19.43476868, -21.89505196, -17.38277435, -18.91377449, -16.89746284,
          -19.49347115, -18.77677155, -17.15766907, -19.06263924, -20.67627907]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.22510529,  1.75610542, -0.26020622,  1.61910248,  1.90497017]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0506 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.35557175, -32.47544098, -30.43883324, -33.30394363, -32.17427444,
         -34.25338364, -33.63493729, -35.26922607, -29.93074799, -32.68428421]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [840]; unstable size 840; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 840] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 840] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 840] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 173] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.16921902, 2.31352925, 4.99022341, 3.81911159, 5.78720474, 5.29893875,
         6.80568743, 1.75992775, 4.51705360]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0417 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.44459343, -15.51812744, -11.64377499, -10.47452068, -10.72119522,
         -11.05707169, -11.06166363, -11.43825245, -16.58495712, -14.37756157]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [649]; unstable size 649; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 316, 1, 649] with unstable size 315 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 649] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 649] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [315]; unstable size 315; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 315] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 315] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.31691790,  2.24976444,  0.04557896, -0.85450912,  0.30286229,
         -0.63437951, -0.21570843,  3.64171362,  1.40587473]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.44459343, -15.51812744, -11.64377499, -10.47452068, -10.72119522,
         -11.05707169, -11.06166363, -11.43825245, -16.58495712, -14.37756157]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.56100559, -15.55041409, -11.83961582, -10.86203289, -10.65551853,
          -11.47358513, -11.20098400, -11.55763531, -16.66084862, -14.52304459],
         [-15.56100559, -15.55041409, -11.83961582, -10.86203289, -10.65551853,
          -11.47358513, -11.20098400, -11.55763531, -16.66084862, -14.52304459]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20651436,  0.33895111,  0.69560242]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0538 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
         -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [539]; unstable size 539; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 283, 1, 539] with unstable size 282 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 539] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [282]; unstable size 282; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 282] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 282] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.73897958,  3.94992781,  0.45282030,  1.56286383,  0.87203956,
         -1.16177833,  0.85932612,  3.68842530,  2.19751191]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
         -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
          -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.06229782]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.09047651,  1.12222254,  1.12222254,  ...,  1.07460344,
             1.15396857,  1.13809550],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.04285717,
             1.07460344,  1.07460344],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.02698421,
             1.07460344,  1.07460344],
           ...,
           [ 1.04285717,  1.07460344,  1.09047651,  ..., -0.35396814,
             0.55079371,  1.07460344],
           [ 1.04285717,  1.07460344,  1.05873048,  ..., -0.62380952,
            -0.24285704,  0.77301592],
           [ 1.04285717,  1.07460344,  1.07460344,  ..., -0.21111101,
             0.10634929,  0.83650798]],

          [[ 1.25603890,  1.28824508,  1.28824508,  ...,  1.25603890,
             1.27214205,  1.28824508],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.25603890,
             1.23993587,  1.23993587],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.23993587,
             1.23993587,  1.23993587],
           ...,
           [ 1.20772982,  1.23993587,  1.25603890,  ..., -0.49919480,
             0.51529801,  1.17552364],
           [ 1.20772982,  1.23993587,  1.22383285,  ..., -0.82125598,
            -0.32206106,  0.85346222],
           [ 1.20772982,  1.23993587,  1.23993587,  ..., -0.32206106,
             0.08051541,  0.93397754]],

          [[ 1.42578757,  1.45577252,  1.45577252,  ...,  1.44078004,
             1.42578757,  1.45577252],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.41079497,
             1.39580250,  1.41079497],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.44078004,
             1.42578757,  1.41079497],
           ...,
           [ 1.38081002,  1.41079497,  1.42578757,  ..., -0.53823084,
             0.54122955,  1.33583248],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -1.07796109,
            -0.41829082,  0.99100471],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -0.64317840,
            -0.07346311,  1.06596720]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0362 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.07254219, -23.32916451, -18.11545181, -16.03979683, -17.97344971,
         -17.07232475, -18.43986130, -16.48874283, -21.96584511, -20.95975685]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [563]; unstable size 563; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 156, 1, 563] with unstable size 155 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 563] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 563] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [155]; unstable size 155; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 155] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 155] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.52441859,  5.39360380,  0.73585320, -1.15312338,  0.82712793,
         -0.08107734,  1.07491684,  4.02794266,  3.11614513]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.07254219, -23.32916451, -18.11545181, -16.03979683, -17.97344971,
         -17.07232475, -18.43986130, -16.48874283, -21.96584511, -20.95975685]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.07254028, -23.32916641, -18.11545372, -16.03979683, -17.97345161,
          -17.07232285, -18.43986130, -16.48874283, -21.96584702, -20.95975685],
         [-19.07254028, -23.32916641, -18.11545372, -16.03979683, -17.97345161,
          -17.07232285, -18.43986130, -16.48874283, -21.96584702, -20.95975685]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44894600,  0.58358002]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0532 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.70158577, -22.21768379, -23.95887756, -27.52854156, -24.44779968,
         -28.61229897, -28.66467094, -26.43075180, -22.27626801, -22.80558968]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [756]; unstable size 756; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 197, 1, 756] with unstable size 196 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 756] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 756] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [196]; unstable size 196; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 196] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 196] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.58621740, 2.47436023, 5.86044216, 2.89928865, 6.82225609, 6.78166246,
         4.58398438, 0.69966245, 1.06527996]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0482 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
         -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [453]; unstable size 453; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 302, 1, 453] with unstable size 301 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 453] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 453] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [301]; unstable size 301; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 301] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 301] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.36418676e+00,  3.88016129e+00, -1.22761726e-03,  5.18171549e-01,
         -7.83936977e-02,  5.22855520e-01,  8.93965125e-01,  5.49661064e+00,
          2.41142750e+00]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
         -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.71it/s]100%|██████████| 1/1 [00:00<00:00,  8.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.12287807, -14.69568729, -10.06177521, -10.78610325, -10.26407623,
          -10.99050617,  -9.46359158, -11.73374748, -16.38097382, -13.27322674],
         [-15.12287807, -14.69568729, -10.06177521, -10.78610325, -10.26407623,
          -10.99050617,  -9.46359158, -11.73374748, -16.38097382, -13.27322674]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59818363, 0.80048466]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1176 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.59307861328125
alpha/beta optimization time: 1.2371020317077637
initial alpha-crown bounds: tensor([[ 4.42038870,  3.93954611,  0.04252625,  0.59053856, -0.04266953,
          0.61050278,  0.96340442,  5.55710506,  2.51173544]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.04266953468322754
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6348 seconds.
lower bounds for all target labels: [4.420388698577881, 3.9395456314086914, 0.0425262451171875, 0.5905384421348572, -0.04266953468322754, 0.6105005741119385, 0.9634044170379639, 5.55710506439209, 2.511735439300537]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [4]
start creating model mps for candidates: ['lay/16_4']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.55437874794006
Verifying property 0 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.55710506439209.

Properties batch 1, size 1
Remaining timeout: 198.37571024894714
Verifying property 1 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.420388698577881.

Properties batch 2, size 1
Remaining timeout: 198.26996970176697
Verifying property 2 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9395461082458496.

Properties batch 3, size 1
Remaining timeout: 198.17898297309875
Verifying property 3 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.511735439300537.

Properties batch 4, size 1
Remaining timeout: 198.08909440040588
Verifying property 4 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9634044170379639.

Properties batch 5, size 1
Remaining timeout: 197.9990029335022
Verifying property 5 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6105027794837952.

Properties batch 6, size 1
Remaining timeout: 197.9096643924713
Verifying property 6 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5905385613441467.

Properties batch 7, size 1
Remaining timeout: 197.81967186927795
Verifying property 7 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0425262451171875.

Properties batch 8, size 1
Remaining timeout: 197.72913789749146
Verifying property 8 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04266953]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
        -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04266953]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 453
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 299
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 772
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007619857788085938
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 14] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 10] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 17] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.553794860839844e-05
Time: prepare 0.0019    bound 0.0044    transfer 0.0044    finalize 0.0024    func 0.0132    
Accumulated time: func 0.0132    prepare 0.0023    bound 0.0044    transfer 0.0044    finalize 0.0024    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0249    set_bounds 0.0168    solve 0.0133    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0249    set_bounds 0.0168    solve 0.0133    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06112241744995117

the mip building process is not terminated yet, kill it
Result: safe in 2.7080 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.25883293, -16.40706444, -12.91650105, -13.33503723, -12.76172256,
         -14.05701828, -10.42017269, -14.10208035, -18.75581741, -16.93133926]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [403]; unstable size 403; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 259, 1, 403] with unstable size 258 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 403] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 403] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [258]; unstable size 258; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 258] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 258] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00860691, 4.23702240, 1.09872389, 1.64570785, 0.89420366, 2.14901733,
         1.57642460, 6.09759998, 4.54596186]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0441 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.57652092, -32.23639679, -28.36616898, -29.83554840, -30.16464424,
         -30.64960480, -32.17686844, -29.80444527, -29.91892624, -32.09518433]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [483]; unstable size 483; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 483] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 483] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 483] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 194] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.07906532, 1.77047956, 3.19271350, 3.46971655, 3.86029029, 5.23355198,
         2.96001410, 3.10798502, 5.22356033]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0459 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.71967888, -24.49569893, -23.46326828, -21.31615639, -22.26188850,
         -21.78440475, -22.43858719, -23.19987106, -16.18318367, -22.82086182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [644]; unstable size 644; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 644] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 644] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 214] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.49413419, 6.51567650, 5.72104502, 3.75618219, 4.40788555, 4.05219269,
         4.77330208, 5.20548916, 5.05213928]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0567 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.19749069, -20.07060051, -15.00829124, -14.86962318, -16.28983498,
         -15.46364594, -13.24634743, -17.95564651, -17.94532013, -19.32559013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [570]; unstable size 570; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 570] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 570] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 264] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89140368, 4.24306536, 0.43238330, 0.61651564, 1.44491482, 0.98225892,
         2.89481401, 2.46429181, 3.67898250]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0654 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.52461720, -17.35180283, -12.05615902, -12.63583565, -11.58507633,
         -12.59487724, -10.57591057, -13.41824055, -16.97095490, -15.37764359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 591] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 591] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 291] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.08203411,  2.15383053, -1.83007765, -0.33773935, -2.24676919,
         -3.21968842, -0.57630789,  2.02706242,  0.67616463]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.52461720, -17.35180283, -12.05615902, -12.63583565, -11.58507633,
         -12.59487724, -10.57591057, -13.41824055, -16.97095490, -15.37764359]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.52461624, -17.35180092, -12.05615902, -12.63583660, -11.58507729,
          -12.59487820, -10.57591152, -13.41824245, -16.97095490, -15.37764454],
         [-15.52461624, -17.35180092, -12.05615902, -12.63583660, -11.58507729,
          -12.59487820, -10.57591152, -13.41824245, -16.97095490, -15.37764454]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53871918,  0.04095840, -1.00980091, -2.01896667,  0.82336426]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0588 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.45021820, -27.45919800, -20.82433891, -22.54921150, -21.01146507,
         -23.11272240, -21.28590775, -22.88107681, -25.70099831, -27.22681618]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [929]; unstable size 929; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 450, 1, 929] with unstable size 449 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 929] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 929] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [449]; unstable size 449; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 449] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 449] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.88848370,  3.70000124,  0.24056029, -1.21744084,  0.64094126,
         -1.06626379, -0.11656237,  2.34579158,  3.68335915]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.45021820, -27.45919800, -20.82433891, -22.54921150, -21.01146507,
         -23.11272240, -21.28590775, -22.88107681, -25.70099831, -27.22681618]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.65473557, -27.69364357, -21.07613373, -22.60361481, -20.87356758,
          -23.11100769, -21.44839478, -22.64229012, -25.88486099, -27.33996201],
         [-23.65473557, -27.69364357, -21.07613373, -22.60361481, -20.87356758,
          -23.11100769, -21.44839478, -22.64229012, -25.88486099, -27.33996201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20256615,  0.37226105,  1.56615639]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0070 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0552 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.70279121, -25.07186508, -24.43242264, -24.38763809, -24.00282478,
         -24.77808571, -24.40219879, -25.75534058, -24.67971420, -24.98260498]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [670]; unstable size 670; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 670] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 670] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 670] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 244] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.87631416, -2.55956364, -2.18437910, -2.77099514, -1.83020782,
         -2.16091776, -1.01760435, -2.05305672, -0.77688062]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.70279121, -25.07186508, -24.43242264, -24.38763809, -24.00282478,
         -24.77808571, -24.40219879, -25.75534058, -24.67971420, -24.98260498]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.70278931, -25.07186699, -24.43242264, -24.38763809, -24.00282288,
          -24.77808380, -24.40219879, -25.75533867, -24.67971420, -24.98260689],
         [-24.70278931, -25.07186699, -24.43242264, -24.38763809, -24.00282288,
          -24.77808380, -24.40219879, -25.75533867, -24.67971420, -24.98260689]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36907768, -0.63944435, -0.68422890, -1.06904411, -0.29378319,
          -0.66966820,  0.68347168, -0.39215279, -0.08926010]]],
       device='cuda:0')
number of violation:  8
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0706 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.77937126, -24.38296890, -19.26746750, -18.82821846, -19.50073814,
         -19.05830956, -19.41297340, -21.65519333, -24.81905746, -23.99803734]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [889]; unstable size 889; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 324, 1, 889] with unstable size 323 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 889] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 889] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [323]; unstable size 323; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 323] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 323] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86873150,  3.27330303, -1.23502398, -0.61113095, -0.78136897,
         -0.75137877,  0.93968052,  3.48995066,  3.24112701]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.77937126, -24.38296890, -19.26746750, -18.82821846, -19.50073814,
         -19.05830956, -19.41297340, -21.65519333, -24.81905746, -23.99803734]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.77937126, -24.38297081, -19.26746559, -18.82821846, -19.50073814,
          -19.05830956, -19.41297150, -21.65519333, -24.81905556, -23.99803925],
         [-21.77937126, -24.38297081, -19.26746559, -18.82821846, -19.50073814,
          -19.05830956, -19.41297150, -21.65519333, -24.81905556, -23.99803925]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.20915604, -0.23009109,  0.44242859,  0.35466194]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0553 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.53012466, -29.66223907, -26.90876389, -28.07838631, -26.04151726,
         -29.22808647, -27.47805023, -29.35506439, -20.28993988, -29.09470940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 586] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 586] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 173] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51274872, 8.23108101, 5.60526514, 6.71246958, 4.74748898, 7.73364449,
         6.02225113, 7.97453213, 7.67071819]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0475 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
         -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [688]; unstable size 688; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 688] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 688] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 260] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.49447227,  3.06922269,  0.62996531, -0.02265927,  0.38052845,
         -0.22107911,  0.10723686,  4.39991140,  2.21292210]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
         -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.66it/s]100%|██████████| 1/1 [00:00<00:00,  8.65it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.18397522, -21.81373215, -17.85622978, -16.59555244, -17.68647575,
          -16.41921616, -17.14182472, -17.56402969, -22.39430809, -20.54507637],
         [-20.18397522, -21.81373215, -17.85622978, -16.59555244, -17.68647575,
          -16.41921616, -17.14182472, -17.56402969, -22.39430809, -20.54507637]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.17633629, 0.72260857]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1183 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.641362190246582
alpha/beta optimization time: 1.2293550968170166
initial alpha-crown bounds: tensor([[ 2.55440617,  3.16163731,  0.69625449,  0.01558387,  0.45437050,
         -0.16967654,  0.16310805,  4.47692680,  2.28875160]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.1696765422821045
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6369 seconds.
lower bounds for all target labels: [2.55440616607666, 3.161635160446167, 0.6962549686431885, 0.015583932399749756, 0.45437073707580566, -0.16967308521270752, 0.16310709714889526, 4.476925849914551, 2.288750648498535]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [5]
start creating model mps for candidates: ['lay/16_5']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.56583738327026
Verifying property 0 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.476926803588867.

Properties batch 1, size 1
Remaining timeout: 198.393803358078
Verifying property 1 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.161637306213379.

Properties batch 2, size 1
Remaining timeout: 198.2936110496521
Verifying property 2 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.55440616607666.

Properties batch 3, size 1
Remaining timeout: 198.20313668251038
Verifying property 3 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2887516021728516.

Properties batch 4, size 1
Remaining timeout: 198.11380004882812
Verifying property 4 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6962544918060303.

Properties batch 5, size 1
Remaining timeout: 198.01031112670898
Verifying property 5 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.45437049865722656.

Properties batch 6, size 1
Remaining timeout: 197.9213376045227
Verifying property 6 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.16310805082321167.

Properties batch 7, size 1
Remaining timeout: 197.82718777656555
Verifying property 7 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.01558387279510498.

Properties batch 8, size 1
Remaining timeout: 197.7363932132721
Verifying property 8 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16967654]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
        -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16967654]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 688
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 258
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 968
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006558895111083984
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 17] 
split level 4: [/input-12, 72] 
split level 5: [/input-12, 35] 
split level 6: [/input-12, 89] 
split level 7: [/input-8, 1948] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.506111145019531e-05
Time: prepare 0.0031    bound 0.0044    transfer 0.0039    finalize 0.0027    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0036    bound 0.0044    transfer 0.0039    finalize 0.0027    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0252    set_bounds 0.0198    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0252    set_bounds 0.0198    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06531858444213867

the mip building process is not terminated yet, kill it
Result: safe in 2.6879 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.84988976, -27.04168510, -32.56347275, -33.70067215, -33.15383530,
         -34.10073471, -32.55872345, -32.39547729, -30.81136703, -29.74110985]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [597]; unstable size 597; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 597] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 597] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 597] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 252] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.47295213, 3.67134190, 4.79961014, 4.17743587, 5.03716660, 3.67930984,
         3.29446173, 2.28837895, 1.78437161]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0639 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.95876122, -24.06052399, -22.79921150, -22.37466049, -21.66536903,
         -22.27144814, -23.11923218, -24.92821121, -24.52709389, -24.95055580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1300]; unstable size 1300; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 386, 1, 1300] with unstable size 385 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 1300] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1300] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [385]; unstable size 385; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 385] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 385] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.83590484, -0.36369658, -0.81580913, -0.21350282, -1.76645494,
         -0.45421183,  1.06313896,  0.19591498,  0.91548681]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.95876122, -24.06052399, -22.79921150, -22.37466049, -21.66536903,
         -22.27144814, -23.11923218, -24.92821121, -24.52709389, -24.95055580]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.95876312, -24.06052208, -22.79921341, -22.37466049, -21.66536713,
          -22.27144814, -23.11923218, -24.92821121, -24.52709579, -24.95055199],
         [-21.95876312, -24.06052208, -22.79921341, -22.37466049, -21.66536713,
          -22.27144814, -23.11923218, -24.92821121, -24.52709579, -24.95055199]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31268501,  1.78907394,  0.52776527,  0.10321236, -0.60608101,
           0.84778404]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0664 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.02009583, -25.62828255, -18.56137657, -22.16949654, -20.18937492,
         -22.90802956, -21.61422729, -24.61019516, -20.71578217, -25.30768013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [637]; unstable size 637; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 152, 1, 637] with unstable size 151 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 637] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 637] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [151]; unstable size 151; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 151] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 151] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.60369110, 1.05985808, 4.44430256, 2.54081893, 5.11138248, 3.84394979,
         6.83230686, 2.69353652, 7.41863537]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0314 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.94017601, -28.86633301, -23.06001091, -21.31272125, -22.19619942,
         -20.90770912, -22.69350815, -22.96586227, -29.16728783, -27.83672142]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [615]; unstable size 615; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 323, 1, 615] with unstable size 322 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 615] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 615] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [322]; unstable size 322; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 322] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 322] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51382399, 5.73519135, 0.91068625, 0.11511421, 0.03012896, 0.51855683,
         1.05246675, 6.62892151, 5.18492413]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0449 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.12831688, -24.87204933, -21.52433014, -21.45733643, -22.17998314,
         -21.62087250, -21.34234619, -22.34700012, -24.97188950, -22.55655289]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 184, 1, 580] with unstable size 183 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 580] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 580] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [183]; unstable size 183; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 183] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 183] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.55080485,  1.90782404, -1.05542922, -0.76249856, -0.39093411,
         -0.77109897, -0.48512751,  2.12621999, -0.21663618]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.12831688, -24.87204933, -21.52433014, -21.45733643, -22.17998314,
         -21.62087250, -21.34234619, -22.34700012, -24.97188950, -22.55655289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.98245811, -25.14087677, -21.26465225, -21.48969841, -22.09676743,
          -21.62775993, -21.63244629, -22.23480034, -24.92131615, -22.71515083],
         [-21.98245811, -25.14087677, -21.26465225, -21.48969841, -22.09676743,
          -21.62775993, -21.63244629, -22.23480034, -24.92131615, -22.71515083]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.35001183, -0.36779404, -0.14274788,  0.46432114, -0.00468636,
           0.60235405,  1.08270454]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0186 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0588 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
         -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [631]; unstable size 631; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 277, 1, 631] with unstable size 276 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 631] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 631] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [276]; unstable size 276; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 276] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.26207829,  2.67205667, -0.09352779,  0.10025704,  0.83907413,
          0.73086989,  0.70621467,  0.08608770,  2.33385873]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
         -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.77it/s]100%|██████████| 1/1 [00:00<00:00,  8.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.58753777, -25.74412537, -22.30705833, -22.74228668, -23.48993874,
          -23.62050629, -23.39388275, -23.13651657, -21.69568634, -25.29735374]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.61137199]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1166 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.149776458740234
alpha/beta optimization time: 1.2216427326202393
initial alpha-crown bounds: tensor([[ 2.29125261,  2.73074436, -0.03381681,  0.15643978,  0.90439463,
          0.79678571,  0.77209926,  0.15606007,  2.37581682]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.03381681442260742
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6329 seconds.
lower bounds for all target labels: [2.291252374649048, 2.7307448387145996, -0.03381705284118652, 0.15643155574798584, 0.9043927192687988, 0.7967836856842041, 0.7720997333526611, 0.15606194734573364, 2.375819206237793]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.56404733657837
Verifying property 0 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7307443618774414.

Properties batch 1, size 1
Remaining timeout: 198.39661836624146
Verifying property 1 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.375816822052002.

Properties batch 2, size 1
Remaining timeout: 198.29541301727295
Verifying property 2 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.291252613067627.

Properties batch 3, size 1
Remaining timeout: 198.20398092269897
Verifying property 3 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9043946266174316.

Properties batch 4, size 1
Remaining timeout: 198.09984374046326
Verifying property 4 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7967857122421265.

Properties batch 5, size 1
Remaining timeout: 198.00925040245056
Verifying property 5 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7720992565155029.

Properties batch 6, size 1
Remaining timeout: 197.91946935653687
Verifying property 6 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15643978118896484.

Properties batch 7, size 1
Remaining timeout: 197.82738780975342
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15606006979942322.

Properties batch 8, size 1
Remaining timeout: 197.73405265808105
Verifying property 8 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03381681]], device='cuda:0') need to verify.
Model prediction is: tensor([-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
        -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03381681]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 631
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 271
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 917
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0005278587341308594
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 50] 
split level 6: [/input-12, 68] 
split level 7: [/input-8, 1956] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.5299530029296875e-05
Time: prepare 0.0032    bound 0.0048    transfer 0.0039    finalize 0.0027    func 0.0146    
Accumulated time: func 0.0146    prepare 0.0036    bound 0.0048    transfer 0.0039    finalize 0.0027    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0252    set_bounds 0.0207    solve 0.0147    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0252    set_bounds 0.0207    solve 0.0147    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06660008430480957

the mip building process is not terminated yet, kill it
Result: safe in 2.6915 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.79308891, -23.41397476, -18.82098770, -19.48437309, -18.56243706,
         -19.91847992, -17.07889175, -20.97890472, -23.56008720, -23.37459755]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 336, 1, 606] with unstable size 335 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 606] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [335]; unstable size 335; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 335] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 335] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.91788745, 3.99140930, 0.67279965, 1.37791419, 0.25162306, 1.69752824,
         2.11260486, 4.47059727, 4.00945616]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0696 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
         -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 675] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 675] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 216] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.57993078,  3.15776873,  6.31814766,  3.25631618,  7.08248043,
          6.16690874,  5.13876057, -1.86000669,  3.30038857]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
         -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
          -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.01841354]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0720 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
         -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [645]; unstable size 645; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 263, 1, 645] with unstable size 262 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 645] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 645] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [262]; unstable size 262; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 262] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.42895722,  4.10993195, -0.60754943, -0.13815892, -0.32017219,
          1.23225904, -0.67439401,  4.97595882,  2.89096022]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
         -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.03it/s]100%|██████████| 1/1 [00:00<00:00,  8.03it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.49737930, -22.43238258, -17.16550827, -16.42162704, -17.18960381,
          -16.38314819, -18.64624214, -17.14737320, -23.54323959, -21.05616760],
         [-21.49737930, -22.43238258, -17.16550827, -16.42162704, -17.18960381,
          -16.38314819, -18.64624214, -17.14737320, -23.54323959, -21.05616760]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.78236008, 0.03847885, 0.80645561, 0.76422501]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1276 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.555829048156738
alpha/beta optimization time: 1.2223284244537354
initial alpha-crown bounds: tensor([[ 3.51031160,  4.22539473, -0.55174983, -0.12316978, -0.26672721,
          1.27698326, -0.59470451,  5.09362984,  2.98586154]], device='cuda:0')
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.5947045087814331
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6291 seconds.
lower bounds for all target labels: [3.5103096961975098, 4.225395679473877, -0.5517501831054688, -0.12316960096359253, -0.26672887802124023, 1.2769830226898193, -0.5947048664093018, 5.093629837036133, 2.985861301422119]
Number of cpus: 96  Number of subproblems: 4
Reassign each subproblems with number of thread: 24
Starting MIP solver for these labels: [2, 3, 4, 6]
start creating model mps for candidates: ['lay/16_2', 'lay/16_3', 'lay/16_4', 'lay/16_6']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 6396 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 6399 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 6400 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 6401 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5355260372162
Verifying property 0 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.093629837036133.

Properties batch 1, size 1
Remaining timeout: 198.37161016464233
Verifying property 1 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.2253947257995605.

Properties batch 2, size 1
Remaining timeout: 198.27062153816223
Verifying property 2 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5103116035461426.

Properties batch 3, size 1
Remaining timeout: 198.17855715751648
Verifying property 3 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9858615398406982.

Properties batch 4, size 1
Remaining timeout: 198.0878508090973
Verifying property 4 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2769832611083984.

Properties batch 5, size 1
Remaining timeout: 197.99739003181458
Verifying property 5 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12316978]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12316978]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009925365447998047
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 83] 
split level 2: [/input-12, 34] 
split level 3: [/input-12, 18] 
split level 4: [/input-12, 85] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 57] 
pruning_in_iteration open status: True
ratio of positive domain = 191 / 256 = 0.74609375
pruning-in-iteration extra time: 0.0049076080322265625
Time: prepare 0.0018    bound 0.1885    transfer 0.0041    finalize 0.0024    func 0.1969    
Accumulated time: func 0.1969    prepare 0.0022    bound 0.1885    transfer 0.0041    finalize 0.0024    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05010 (8), -0.04988 (8), -0.04896 (8), -0.04849 (8), -0.04837 (8), -0.04773 (8), -0.04712 (8), -0.04630 (8), -0.04227 (8), -0.04218 (8), -0.04051 (8), -0.03965 (8), -0.03923 (8), -0.03898 (8), -0.03891 (8), -0.03733 (8), -0.02833 (8), -0.02710 (8), -0.02542 (8), -0.02468 (8), 
Length of domains: 65
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0168    solve 0.1970    add 0.0726    
Accumulated time: pickout 0.0006    decision 0.0254    set_bounds 0.0168    solve 0.1970    add 0.0726    
Current (lb-rhs): -0.05010485649108887
65 domains visited
Cumulative time: 0.32443785667419434

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 65
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 71] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
pruning_in_iteration open status: True
ratio of positive domain = 157 / 260 = 0.6038461538461539
pruning-in-iteration extra time: 0.004711151123046875
Time: prepare 0.0037    bound 0.1602    transfer 0.0010    finalize 0.0023    func 0.1672    
Accumulated time: func 0.3641    prepare 0.0061    bound 0.3487    transfer 0.0051    finalize 0.0047    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04121 (10), -0.04106 (10), -0.04003 (10), -0.03959 (10), -0.03928 (10), -0.03857 (10), -0.03815 (10), -0.03798 (10), -0.03761 (10), -0.03732 (10), -0.03700 (10), -0.03674 (10), -0.03634 (10), -0.03624 (10), -0.03558 (10), -0.03500 (10), -0.03320 (10), -0.03311 (10), -0.03150 (10), -0.03057 (10), 
Length of domains: 103
Time: pickout 0.0146    decision 0.0174    set_bounds 0.0076    solve 0.1673    add 0.0538    
Accumulated time: pickout 0.0152    decision 0.0428    set_bounds 0.0243    solve 0.3643    add 0.1264    
Current (lb-rhs): -0.041208505630493164
168 domains visited
Cumulative time: 0.5861279964447021

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 103
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 206 = 0.44660194174757284
pruning-in-iteration extra time: 0.004812955856323242
Time: prepare 0.0033    bound 0.1738    transfer 0.0014    finalize 0.0017    func 0.1802    
Accumulated time: func 0.5443    prepare 0.0095    bound 0.5225    transfer 0.0065    finalize 0.0064    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03791 (11), -0.03782 (11), -0.03666 (11), -0.03627 (11), -0.03593 (11), -0.03519 (11), -0.03492 (11), -0.03454 (11), -0.03427 (11), -0.03400 (11), -0.03358 (11), -0.03342 (11), -0.03297 (11), -0.03294 (11), -0.03228 (11), -0.03172 (11), -0.02991 (11), -0.02985 (11), -0.02815 (11), -0.02727 (11), 
Length of domains: 114
Time: pickout 0.0024    decision 0.0178    set_bounds 0.0050    solve 0.1803    add 0.0545    
Accumulated time: pickout 0.0175    decision 0.0606    set_bounds 0.0293    solve 0.5446    add 0.1809    
Current (lb-rhs): -0.03790563344955444
282 domains visited
Cumulative time: 0.8509140014648438

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 114
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 228 = 0.4692982456140351
pruning-in-iteration extra time: 0.0048062801361083984
Time: prepare 0.0035    bound 0.1666    transfer 0.0010    finalize 0.0015    func 0.1727    
Accumulated time: func 0.7170    prepare 0.0133    bound 0.6891    transfer 0.0075    finalize 0.0079    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03417 (12), -0.03402 (12), -0.03304 (12), -0.03264 (12), -0.03222 (12), -0.03157 (12), -0.03123 (12), -0.03081 (12), -0.03060 (12), -0.03038 (12), -0.02997 (12), -0.02974 (12), -0.02937 (12), -0.02935 (12), -0.02868 (12), -0.02823 (12), -0.02630 (12), -0.02597 (12), -0.02595 (12), -0.02590 (12), 
Length of domains: 121
Time: pickout 0.0154    decision 0.0200    set_bounds 0.0059    solve 0.1727    add 0.0066    
Accumulated time: pickout 0.0329    decision 0.0806    set_bounds 0.0352    solve 0.7173    add 0.1875    
Current (lb-rhs): -0.03416508436203003
403 domains visited
Cumulative time: 1.072627305984497

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 121
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: True
ratio of positive domain = 68 / 242 = 0.28099173553719003
pruning-in-iteration extra time: 0.0047206878662109375
Time: prepare 0.0037    bound 0.1293    transfer 0.0010    finalize 0.0019    func 0.1360    
Accumulated time: func 0.8529    prepare 0.0172    bound 0.8184    transfer 0.0084    finalize 0.0098    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02933 (13), -0.02908 (13), -0.02818 (13), -0.02805 (13), -0.02794 (13), -0.02774 (13), -0.02749 (13), -0.02680 (13), -0.02680 (13), -0.02653 (13), -0.02651 (13), -0.02592 (13), -0.02565 (13), -0.02565 (13), -0.02560 (13), -0.02511 (13), -0.02505 (13), -0.02498 (13), -0.02483 (13), -0.02467 (13), 
Length of domains: 174
Time: pickout 0.0043    decision 0.0191    set_bounds 0.0061    solve 0.1361    add 0.0790    
Accumulated time: pickout 0.0373    decision 0.0997    set_bounds 0.0413    solve 0.8534    add 0.2665    
Current (lb-rhs): -0.029325425624847412
577 domains visited
Cumulative time: 1.3244922161102295

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 174
splitting decisions: 
split level 0: [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] 
pruning_in_iteration open status: False
ratio of positive domain = 58 / 348 = 0.16666666666666663
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0070    bound 0.0989    transfer 0.0018    finalize 0.0030    func 0.1107    
Accumulated time: func 0.9636    prepare 0.0244    bound 0.9173    transfer 0.0102    finalize 0.0128    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02759 (14), -0.02717 (14), -0.02653 (14), -0.02628 (14), -0.02607 (14), -0.02592 (14), -0.02577 (14), -0.02519 (14), -0.02514 (14), -0.02492 (14), -0.02473 (14), -0.02457 (14), -0.02422 (14), -0.02404 (14), -0.02399 (14), -0.02385 (14), -0.02385 (14), -0.02384 (14), -0.02373 (14), -0.02370 (14), 
Length of domains: 287
Time: pickout 0.0166    decision 0.0218    set_bounds 0.0047    solve 0.1108    add 0.0804    
Accumulated time: pickout 0.0538    decision 0.1215    set_bounds 0.0460    solve 0.9641    add 0.3469    
Current (lb-rhs): -0.027592360973358154
864 domains visited
Cumulative time: 1.566011667251587

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 287
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 417] [/input-8, 417] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] 
pruning_in_iteration open status: False
ratio of positive domain = 86 / 574 = 0.14982578397212543
pruning-in-iteration extra time: 5.3882598876953125e-05
Time: prepare 0.0109    bound 0.1041    transfer 0.0037    finalize 0.0047    func 0.1236    
Accumulated time: func 1.0872    prepare 0.0355    bound 1.0215    transfer 0.0139    finalize 0.0174    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02620 (15), -0.02573 (15), -0.02525 (15), -0.02485 (15), -0.02461 (15), -0.02453 (15), -0.02445 (15), -0.02395 (15), -0.02391 (15), -0.02380 (15), -0.02355 (15), -0.02330 (15), -0.02319 (15), -0.02309 (15), -0.02308 (15), -0.02296 (15), -0.02277 (15), -0.02273 (15), -0.02272 (15), -0.02258 (15), 
Length of domains: 483
Time: pickout 0.0185    decision 0.0272    set_bounds 0.0127    solve 0.1237    add 0.1599    
Accumulated time: pickout 0.0723    decision 0.1487    set_bounds 0.0588    solve 1.0878    add 0.5068    
Current (lb-rhs): -0.02620476484298706
1347 domains visited
Cumulative time: 1.9095990657806396

BaB round 8
Fetch cut process: mps for current label is not ready yet
batch: 483
splitting decisions: 
split level 0: [/input-8, 417] [/input-8, 1698] [/input-8, 1698] [/input-8, 417] [/input-8, 417] [/input-8, 1692] [/input-8, 417] [/input-8, 417] [/input-8, 417] [/input-8, 417] 
pruning_in_iteration open status: False
ratio of positive domain = 98 / 966 = 0.10144927536231885
pruning-in-iteration extra time: 8.940696716308594e-05
Time: prepare 0.0186    bound 0.1034    transfer 0.0038    finalize 0.0074    func 0.1334    
Accumulated time: func 1.2206    prepare 0.0543    bound 1.1249    transfer 0.0177    finalize 0.0248    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02494 (16), -0.02434 (16), -0.02399 (16), -0.02368 (16), -0.02347 (16), -0.02310 (16), -0.02308 (16), -0.02304 (16), -0.02299 (16), -0.02272 (16), -0.02252 (16), -0.02245 (16), -0.02229 (16), -0.02228 (16), -0.02195 (16), -0.02183 (16), -0.02177 (16), -0.02174 (16), -0.02173 (16), -0.02173 (16), 
Length of domains: 860
Time: pickout 0.0073    decision 0.0359    set_bounds 0.0213    solve 0.1337    add 0.0980    
Accumulated time: pickout 0.0796    decision 0.1846    set_bounds 0.0801    solve 1.2215    add 0.6048    
Current (lb-rhs): -0.024941086769104004
2207 domains visited
Cumulative time: 2.2141053676605225

BaB round 9
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 860
splitting decisions: 
split level 0: [/input-8, 723] [/input-8, 723] [/input-8, 419] [/input-8, 419] [/input-8, 1673] [/input-8, 417] [/input-8, 1692] [/input-8, 723] [/input-8, 419] [/input-8, 723] 
pruning_in_iteration open status: False
ratio of positive domain = 163 / 1720 = 0.09476744186046515
pruning-in-iteration extra time: 6.008148193359375e-05
Time: prepare 0.0368    bound 0.1239    transfer 0.0108    finalize 0.0110    func 0.1827    
Accumulated time: func 1.4033    prepare 0.0912    bound 1.2488    transfer 0.0285    finalize 0.0358    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02321 (17), -0.02248 (17), -0.02234 (17), -0.02230 (17), -0.02200 (17), -0.02178 (17), -0.02167 (17), -0.02165 (17), -0.02157 (17), -0.02133 (17), -0.02132 (17), -0.02127 (17), -0.02126 (17), -0.02103 (17), -0.02098 (17), -0.02088 (17), -0.02070 (17), -0.02070 (17), -0.02069 (17), -0.02062 (17), 
Length of domains: 1540
Time: pickout 0.0295    decision 0.0604    set_bounds 0.0403    solve 0.1841    add 0.1056    
Accumulated time: pickout 0.1091    decision 0.2449    set_bounds 0.1204    solve 1.4055    add 0.7103    
Current (lb-rhs): -0.023208141326904297
3747 domains visited
Cumulative time: 2.6521685123443604

BaB round 10
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0069
batch: 1540
splitting decisions: 
split level 0: [/input-8, 419] [/input-8, 425] [/input-8, 1692] [/input-8, 419] [/input-8, 1673] [/input-8, 723] [/input-8, 1673] [/input-8, 1673] [/input-8, 419] [/input-8, 419] 
pruning_in_iteration open status: False
ratio of positive domain = 347 / 3080 = 0.11266233766233769
pruning-in-iteration extra time: 8.845329284667969e-05
Time: prepare 0.0827    bound 0.1792    transfer 0.0244    finalize 0.0203    func 0.3080    
Accumulated time: func 1.7112    prepare 0.1743    bound 1.4280    transfer 0.0530    finalize 0.0561    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02234 (18), -0.02149 (18), -0.02139 (18), -0.02091 (18), -0.02079 (18), -0.02079 (18), -0.02072 (18), -0.02044 (18), -0.02039 (18), -0.02022 (18), -0.02021 (18), -0.02020 (18), -0.02015 (18), -0.02014 (18), -0.01999 (18), -0.01991 (18), -0.01980 (18), -0.01978 (18), -0.01970 (18), -0.01966 (18), 
Length of domains: 2693
Time: pickout 0.0529    decision 0.1116    set_bounds 0.2649    solve 0.3087    add 0.1322    
Accumulated time: pickout 0.1620    decision 0.3565    set_bounds 0.3853    solve 1.7143    add 0.8426    
Current (lb-rhs): -0.0223352313041687
6440 domains visited
Cumulative time: 3.5421242713928223

BaB round 11
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0034
batch: 2693
splitting decisions: 
split level 0: [/input-8, 1673] [/input-8, 1323] [/input-8, 723] [/input-8, 1673] [/input-8, 419] [/input-8, 425] [/input-8, 1692] [/input-8, 723] [/input-8, 1673] [/input-8, 425] 
pruning_in_iteration open status: False
ratio of positive domain = 922 / 5386 = 0.17118455254363163
pruning-in-iteration extra time: 0.00011038780212402344
Time: prepare 0.1325    bound 0.2709    transfer 0.0308    finalize 0.1994    func 0.6343    
Accumulated time: func 2.3455    prepare 0.3072    bound 1.6989    transfer 0.0838    finalize 0.2555    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02138 (19), -0.02054 (19), -0.02043 (19), -0.02023 (19), -0.01999 (19), -0.01983 (19), -0.01949 (19), -0.01944 (19), -0.01939 (19), -0.01938 (19), -0.01915 (19), -0.01908 (19), -0.01903 (19), -0.01902 (19), -0.01884 (19), -0.01883 (19), -0.01877 (19), -0.01873 (19), -0.01873 (19), -0.01871 (19), 
Length of domains: 4378
Time: pickout 0.0547    decision 0.1752    set_bounds 0.1311    solve 0.6356    add 0.1565    
Accumulated time: pickout 0.2167    decision 0.5317    set_bounds 0.5164    solve 2.3499    add 0.9991    
Current (lb-rhs): -0.02138066291809082
10818 domains visited
Cumulative time: 4.7154412269592285

BaB round 12
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 4096
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 419] [/input-8, 212] [/input-8, 1673] [/input-8, 1323] [/input-8, 1692] [/input-8, 1692] [/input-8, 425] [/input-8, 723] [/input-8, 1692] 
pruning_in_iteration open status: True
ratio of positive domain = 2309 / 8192 = 0.2818603515625
pruning-in-iteration extra time: 0.005467891693115234
Time: prepare 0.3586    bound 0.3890    transfer 0.0494    finalize 0.0499    func 0.8481    
Accumulated time: func 3.1936    prepare 0.6662    bound 2.0879    transfer 0.1332    finalize 0.3054    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02138 (19), -0.02043 (19), -0.01999 (19), -0.01989 (20), -0.01958 (20), -0.01915 (20), -0.01915 (19), -0.01908 (19), -0.01902 (19), -0.01884 (20), -0.01884 (19), -0.01875 (20), -0.01873 (20), -0.01873 (20), -0.01856 (19), -0.01849 (20), -0.01842 (19), -0.01840 (19), -0.01829 (19), -0.01817 (20), 
Length of domains: 6165
Time: pickout 0.0866    decision 0.2682    set_bounds 0.2022    solve 0.8500    add 0.2585    
Accumulated time: pickout 0.3034    decision 0.7999    set_bounds 0.7186    solve 3.1998    add 1.2576    
Current (lb-rhs): -0.02138066291809082
16701 domains visited
current_vram/total_varm: 10.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.411339998245239

BaB round 13
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 6165
splitting decisions: 
split level 0: [/input-8, 1692] [/input-8, 1673] [/input-8, 419] [/input-8, 1323] [/input-8, 212] [/input-8, 1673] [/input-8, 212] [/input-8, 425] [/input-8, 212] [/input-8, 1692] 
pruning_in_iteration open status: True
ratio of positive domain = 3089 / 12330 = 0.25052716950527165
pruning-in-iteration extra time: 0.0052149295806884766
Time: prepare 0.2795    bound 0.5122    transfer 0.0734    finalize 0.2659    func 1.1323    
Accumulated time: func 4.3260    prepare 0.9461    bound 2.6001    transfer 0.2066    finalize 0.5712    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02074 (20), -0.01976 (20), -0.01934 (20), -0.01839 (20), -0.01834 (20), -0.01824 (21), -0.01822 (20), -0.01803 (20), -0.01796 (21), -0.01794 (20), -0.01791 (21), -0.01764 (21), -0.01753 (20), -0.01751 (21), -0.01741 (20), -0.01727 (21), -0.01719 (21), -0.01711 (21), -0.01710 (21), -0.01708 (21), 
Length of domains: 9241
Time: pickout 0.1151    decision 0.4095    set_bounds 0.4755    solve 1.1349    add 0.1774    
Accumulated time: pickout 0.4184    decision 1.2094    set_bounds 1.1941    solve 4.3347    add 1.4350    
Current (lb-rhs): -0.020739376544952393
25942 domains visited
Cumulative time: 8.769668340682983

BaB round 14
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0047
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1323] [/input-8, 219] [/input-8, 419] [/input-8, 219] [/input-8, 425] [/input-8, 219] [/input-8, 219] [/input-8, 1323] [/input-8, 716] [/input-8, 1665] 
pruning_in_iteration open status: True
ratio of positive domain = 4905 / 16384 = 0.29937744140625
pruning-in-iteration extra time: 0.006679058074951172
Time: prepare 0.3677    bound 0.6109    transfer 0.0942    finalize 0.2933    func 1.3676    
Accumulated time: func 5.6936    prepare 1.3141    bound 3.2110    transfer 0.3008    finalize 0.8645    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02074 (20), -0.01976 (20), -0.01934 (20), -0.01839 (20), -0.01834 (20), -0.01824 (21), -0.01822 (20), -0.01803 (20), -0.01794 (20), -0.01753 (20), -0.01751 (21), -0.01741 (20), -0.01719 (21), -0.01708 (21), -0.01707 (21), -0.01699 (20), -0.01695 (21), -0.01693 (20), -0.01693 (20), -0.01665 (20), 
Length of domains: 12528
Time: pickout 0.1467    decision 0.5204    set_bounds 0.5941    solve 1.3711    add 0.1982    
Accumulated time: pickout 0.5651    decision 1.7298    set_bounds 1.7882    solve 5.7058    add 1.6332    
Current (lb-rhs): -0.020739376544952393
37421 domains visited
current_vram/total_varm: 20.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.646109580993652

BaB round 15
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0060
batch: 12528
splitting decisions: 
split level 0: [/input-8, 219] [/input-8, 1692] [/input-8, 425] [/input-8, 425] [/input-8, 1692] [/input-8, 212] [/input-8, 419] [/input-8, 1692] [/input-8, 1692] [/input-8, 1673] 
pruning_in_iteration open status: True
ratio of positive domain = 7624 / 25056 = 0.30427841634738184
pruning-in-iteration extra time: 0.006886959075927734
Time: prepare 0.5491    bound 0.8986    transfer 0.1450    finalize 0.1613    func 1.7558    
Accumulated time: func 7.4494    prepare 1.8637    bound 4.1096    transfer 0.4457    finalize 1.0258    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01908 (21), -0.01881 (21), -0.01812 (21), -0.01790 (21), -0.01771 (21), -0.01749 (21), -0.01741 (21), -0.01730 (21), -0.01699 (21), -0.01673 (21), -0.01656 (21), -0.01653 (22), -0.01652 (21), -0.01650 (21), -0.01636 (22), -0.01633 (22), -0.01622 (22), -0.01615 (21), -0.01600 (21), -0.01597 (21), 
Length of domains: 17432
Time: pickout 0.2297    decision 1.0854    set_bounds 0.8581    solve 2.0248    add 0.1953    
Accumulated time: pickout 0.7948    decision 2.8152    set_bounds 2.6463    solve 7.7306    add 1.8285    
Current (lb-rhs): -0.019083380699157715
54853 domains visited
Cumulative time: 16.111684322357178

BaB round 16
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts: total 598 constraints, 29072 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2609
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 211] [/input-8, 1673] [/input-8, 1323] [/input-8, 1665] [/input-8, 132] [/input-8, 425] [/input-8, 211] [/input-8, 1323] [/input-8, 211] [/input-8, 1673] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01708400249481201
10 lb beta sum: 16.692157745361328, worst -0.00892675668001175
pruning_in_iteration open status: True
ratio of positive domain = 32754 / 32768 = 0.99957275390625
pruning-in-iteration extra time: 0.00690460205078125
Time: prepare 0.7548    bound 3.9110    transfer 0.1988    finalize 0.5387    func 5.6230    
Accumulated time: func 13.0725    prepare 2.6190    bound 8.0207    transfer 0.6445    finalize 1.5645    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01908 (21), -0.01812 (21), -0.01771 (21), -0.01741 (21), -0.01730 (21), -0.01699 (21), -0.01673 (21), -0.01653 (22), -0.01636 (22), -0.01615 (21), -0.01600 (21), -0.01591 (22), -0.01590 (21), -0.01590 (21), -0.01589 (22), -0.01579 (22), -0.01578 (21), -0.01571 (22), -0.01568 (21), -0.01567 (21), 
Length of domains: 1062
Time: pickout 0.2900    decision 1.7979    set_bounds 1.0989    solve 5.6305    add 0.0623    
Accumulated time: pickout 1.0848    decision 4.6132    set_bounds 3.7453    solve 13.3610    add 1.8908    
Current (lb-rhs): -0.019083380699157715
54867 domains visited
Cumulative time: 25.412761211395264

BaB round 17
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts: total 878 constraints, 39168 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3413
batch: 1062
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 219] [/input-8, 212] [/input-8, 219] [/input-8, 1323] [/input-8, 212] [/input-8, 1673] [/input-8, 212] [/input-8, 1673] [/input-8, 212] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017357945442199707
10 lb beta sum: 9.130001068115234, worst -0.008333206176757812
pruning_in_iteration open status: True
ratio of positive domain = 2123 / 2124 = 0.9995291902071564
pruning-in-iteration extra time: 0.0038847923278808594
Time: prepare 0.0490    bound 0.5078    transfer 0.0117    finalize 0.0157    func 0.5994    
Accumulated time: func 13.6718    prepare 2.6683    bound 8.5285    transfer 0.6563    finalize 1.5802    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00017 (22), 
Length of domains: 1
Time: pickout 0.0636    decision 0.0791    set_bounds 0.0578    solve 0.6000    add 0.0047    
Accumulated time: pickout 1.1484    decision 4.6923    set_bounds 3.8031    solve 13.9610    add 1.8955    
Current (lb-rhs): -0.00016839616000652313
54868 domains visited
Cumulative time: 26.57439684867859

BaB round 18
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0028
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-8, 714] 
split level 2: [/input-8, 1323] 
split level 3: [/input-8, 1665] 
split level 4: [/input-8, 613] 
split level 5: [/input-8, 627] 
split level 6: [/input, 1410] 
split level 7: [/input, 1416] 
cut re-enabled after branching node selection
0 lb beta sum: 2.34299635887146, worst 0.00339386984705925

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.363059997558594e-05
Time: prepare 0.0136    bound 0.0076    transfer 0.0008    finalize 0.0020    func 0.0259    
Accumulated time: func 13.6977    prepare 2.6824    bound 8.5361    transfer 0.6570    finalize 1.5822    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0240    set_bounds 0.0222    solve 0.0260    add 0.0001    
Accumulated time: pickout 1.1491    decision 4.7163    set_bounds 3.8252    solve 13.9870    add 1.8956    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
54868 domains visited
Cumulative time: 26.6529803276062

found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=3_30554045.log

Properties batch 6, size 1
Remaining timeout: 171.17620539665222
Verifying property 6 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26672721]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26672721]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.cuts: total 927 constraints, 47454 nonzero elements
cuts preparing time: 0.0202
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.4097006320953369
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.cuts: total 927 constraints, 47454 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4133
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 34] 
split level 4: [/input-12, 83] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 97] 
split level 7: [/input-12, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08984637260437012

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0022    bound 0.0143    transfer 0.0021    finalize 0.0024    func 0.0228    
Accumulated time: func 0.0228    prepare 0.0026    bound 0.0143    transfer 0.0021    finalize 0.0024    
all_split False
Length of domains: 0
Time: pickout 0.0007    decision 0.0240    set_bounds 0.0172    solve 0.0229    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0240    set_bounds 0.0172    solve 0.0229    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8925082683563232

found process to kill: terminal indx = 3
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=4_30554045.log

Properties batch 7, size 1
Remaining timeout: 170.0589678287506
Verifying property 7 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55174983]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55174983]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.cuts: total 868 constraints, 40289 nonzero elements
cuts preparing time: 0.0163
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.34407567977905273
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.cuts: total 868 constraints, 40289 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3476
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 85] 
split level 4: [/input-12, 34] 
split level 5: [/input-12, 83] 
split level 6: [/input-12, 7] 
split level 7: [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15371066331863403
10 lb beta sum: 24.957029342651367, worst -0.09005731344223022
pruning_in_iteration open status: True
ratio of positive domain = 251 / 256 = 0.98046875
pruning-in-iteration extra time: 0.005287647247314453
Time: prepare 0.0021    bound 0.3177    transfer 0.0008    finalize 0.0016    func 0.3241    
Accumulated time: func 0.3241    prepare 0.0026    bound 0.3177    transfer 0.0008    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07269 (8), -0.07081 (8), -0.01783 (8), -0.01354 (8), -0.00142 (8), 
Length of domains: 5
Time: pickout 0.0007    decision 0.0246    set_bounds 0.0166    solve 0.3242    add 0.0328    
Accumulated time: pickout 0.0007    decision 0.0246    set_bounds 0.0166    solve 0.3242    add 0.0328    
Current (lb-rhs): -0.07269342243671417
5 domains visited
Cumulative time: 1.1062543392181396

BaB round 2
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0010
batch: 5
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-8, 1636] [/input-8, 1691] [/input-8, 1963] [/input-8, 1963] [/input-8, 1691] 
split level 4: [/input-8, 1627] [/input-8, 1963] [/input-8, 1636] [/input-8, 1692] [/input-8, 1627] 
split level 5: [/input-8, 1644] [/input-12, 71] [/input-8, 1627] [/input-8, 1691] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 6.911774635314941, worst 0.013841018080711365

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 320 / 320 = 1.0
pruning-in-iteration extra time: 4.076957702636719e-05
Time: prepare 0.0141    bound 0.0151    transfer 0.0012    finalize 0.0023    func 0.0348    
Accumulated time: func 0.3588    prepare 0.0170    bound 0.3328    transfer 0.0021    finalize 0.0039    
all_split False
Length of domains: 0
Time: pickout 0.0007    decision 0.0212    set_bounds 0.0182    solve 0.0349    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0458    set_bounds 0.0348    solve 0.3591    add 0.0329    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
5 domains visited
Cumulative time: 1.1834564208984375

found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=2_30554045.log
found process to kill: terminal indx = 3
found process to kill: terminal indx = 4

Properties batch 8, size 1
Remaining timeout: 168.65559458732605
Verifying property 8 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.59470451]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.59470451]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts: total 964 constraints, 50024 nonzero elements
cuts preparing time: 0.0179
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.4263620376586914
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts: total 964 constraints, 50024 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4150
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 89] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 34] 
split level 5: [/input-12, 85] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10836195945739746
10 lb beta sum: 15.266131401062012, worst -0.049931228160858154
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.004950523376464844
Time: prepare 0.0018    bound 0.3395    transfer 0.0009    finalize 0.0014    func 0.3453    
Accumulated time: func 0.3453    prepare 0.0023    bound 0.3395    transfer 0.0009    finalize 0.0014    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02829 (8), -0.02481 (8), -0.01846 (8), -0.01797 (8), -0.01496 (8), -0.00973 (8), -0.00568 (8), -0.00435 (8), 
Length of domains: 8
Time: pickout 0.0005    decision 0.0224    set_bounds 0.0155    solve 0.3454    add 0.0324    
Accumulated time: pickout 0.0005    decision 0.0224    set_bounds 0.0155    solve 0.3454    add 0.0324    
Current (lb-rhs): -0.028294026851654053
8 domains visited
Cumulative time: 1.2687065601348877

BaB round 2
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 1: [/input-8, 180] [/input-8, 180] [/input-8, 164] [/input-8, 180] [/input-8, 164] [/input-8, 180] [/input-8, 349] [/input-8, 180] 
split level 2: [/input-8, 1579] [/input-8, 1576] [/input-8, 1579] [/input-8, 1576] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] 
split level 3: [/input-8, 41] [/input-8, 1579] [/input-8, 171] [/input-8, 1579] [/input-8, 171] [/input-8, 41] [/input-8, 171] [/input-8, 1691] 
split level 4: [/input-8, 1250] [/input-8, 41] [/input-8, 419] [/input-8, 41] [/input-8, 419] [/input-8, 1692] [/input-8, 723] [/input-8, 1692] 
cut re-enabled after branching node selection
0 lb beta sum: 7.878236293792725, worst -0.011814236640930176
10 lb beta sum: 119.00048065185547, worst -0.022308766841888428
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.004625797271728516
Time: prepare 0.0112    bound 0.2412    transfer 0.0009    finalize 0.0012    func 0.2563    
Accumulated time: func 0.6017    prepare 0.0138    bound 0.5806    transfer 0.0018    finalize 0.0026    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00373 (13), -0.00201 (13), 
Length of domains: 2
Time: pickout 0.0007    decision 0.0159    set_bounds 0.0130    solve 0.2564    add 0.0181    
Accumulated time: pickout 0.0012    decision 0.0383    set_bounds 0.0285    solve 0.6018    add 0.0505    
Current (lb-rhs): -0.003727555274963379
10 domains visited
Cumulative time: 1.5816233158111572

BaB round 3
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 39] [/input-8, 39] 
split level 1: [/input-8, 349] [/input-8, 349] 
split level 2: [/input-8, 185] [/input-8, 185] 
split level 3: [/input-8, 417] [/input-8, 417] 
split level 4: [/input-8, 1691] [/input-8, 1691] 
split level 5: [/input-8, 1692] [/input-8, 1692] 
split level 6: [/input-8, 2014] [/input-8, 2014] 
cut re-enabled after branching node selection
0 lb beta sum: 8.056800842285156, worst 0.011380195617675781

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.410743713378906e-05
Time: prepare 0.0110    bound 0.0061    transfer 0.0007    finalize 0.0013    func 0.0208    
Accumulated time: func 0.6225    prepare 0.0252    bound 0.5868    transfer 0.0024    finalize 0.0039    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0197    set_bounds 0.0148    solve 0.0209    add 0.0001    
Accumulated time: pickout 0.0018    decision 0.0579    set_bounds 0.0433    solve 0.6227    add 0.0506    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 1.6390531063079834

found process to kill: terminal indx = 2
found process to kill: terminal indx = 3
found process to kill: terminal indx = 4
found process to kill: terminal indx = 6
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=57_spec=6_30554045.log
found process for pidx=2
found process for pidx=3
found process for pidx=4
found process for pidx=6
kill process for pidx=6
Result: safe in 33.3893 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.54733276, -21.78987122, -22.60601997, -21.30351830, -24.20145226,
         -22.29459190, -22.23107147, -25.10035706, -22.73666000, -22.06024361]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [482]; unstable size 482; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 482] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 482] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 215] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.04004693, -1.07115602,  0.35848093,  1.95242715,  0.74911088,
          0.26205659,  2.80084348, -0.02647501, -0.53875589]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.54733276, -21.78987122, -22.60601997, -21.30351830, -24.20145226,
         -22.29459190, -22.23107147, -25.10035706, -22.73666000, -22.06024361]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.02569389, -21.82901001, -23.36814117, -22.22129059, -25.05405426,
          -23.25062561, -22.97693062, -25.95488548, -23.13699722, -22.30997849],
         [-23.02569389, -21.82901001, -23.36814117, -22.22129059, -25.05405426,
          -23.25062561, -22.97693062, -25.95488548, -23.13699722, -22.30997849]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.80440331, -0.39228058,  0.91570663,  0.08868790]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0063 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0641 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
         -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1050]; unstable size 1050; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 330, 1, 1050] with unstable size 329 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 1050] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1050] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [329]; unstable size 329; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 329] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 329] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.91365600,  2.97547579, -0.38596034, -0.14092696, -0.68310440,
          0.74673331,  1.63518667,  1.76536226,  3.08691597]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
         -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.80it/s]100%|██████████| 1/1 [00:00<00:00,  8.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.73095417, -15.17011356, -10.95801258, -11.12242126, -10.36753273,
          -12.15822506, -10.36675453, -13.20997334, -13.88632774, -15.23771191],
         [-13.73095417, -15.17011356, -10.95801258, -11.12242126, -10.36753273,
          -12.15822506, -10.36675453, -13.20997334, -13.88632774, -15.23771191]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59125805, 0.75566673, 0.00077820]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1165 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.672636032104492
alpha/beta optimization time: 1.266777753829956
initial alpha-crown bounds: tensor([[ 2.17554450,  3.15856028, -0.19436073,  0.02832669, -0.55010962,
          0.92495209,  1.83316255,  2.01714492,  3.27941418]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5501096248626709
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.8551 seconds.
lower bounds for all target labels: [2.175544500350952, 3.158560276031494, -0.19436073303222656, 0.028326690196990967, -0.5501096248626709, 0.9249520897865295, 1.8331618309020996, 2.0171430110931396, 3.2794132232666016]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 4]
start creating model mps for candidates: ['lay/16_2', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=2_30557417.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=2_30557417.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 7115 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 7118 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49089741706848
Verifying property 0 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.279414176940918.

Properties batch 1, size 1
Remaining timeout: 198.3078818321228
Verifying property 1 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.158560276031494.

Properties batch 2, size 1
Remaining timeout: 198.18650341033936
Verifying property 2 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.175544500350952.

Properties batch 3, size 1
Remaining timeout: 198.07523584365845
Verifying property 3 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0171449184417725.

Properties batch 4, size 1
Remaining timeout: 197.97244668006897
Verifying property 4 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.833162546157837.

Properties batch 5, size 1
Remaining timeout: 197.86540627479553
Verifying property 5 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9249520897865295.

Properties batch 6, size 1
Remaining timeout: 197.75662446022034
Verifying property 6 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.028326690196990967.

Properties batch 7, size 1
Remaining timeout: 197.65700912475586
Verifying property 7 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19436073]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
        -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19436073]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1050
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1392
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006787776947021484
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 31] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.601478576660156e-05
Time: prepare 0.0018    bound 0.0044    transfer 0.0045    finalize 0.0032    func 0.0141    
Accumulated time: func 0.0141    prepare 0.0023    bound 0.0044    transfer 0.0045    finalize 0.0032    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0249    set_bounds 0.0165    solve 0.0142    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0249    set_bounds 0.0165    solve 0.0142    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.061402320861816406


Properties batch 8, size 1
Remaining timeout: 197.42476797103882
Verifying property 8 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55010962]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
        -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55010962]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1050
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1392
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00016045570373535156
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 97] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 14] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 68] 
split level 7: [/input-12, 79] 
pruning_in_iteration open status: True
ratio of positive domain = 185 / 256 = 0.72265625
pruning-in-iteration extra time: 0.004508495330810547
Time: prepare 0.0018    bound 0.1468    transfer 0.0008    finalize 0.0016    func 0.1511    
Accumulated time: func 0.1511    prepare 0.0022    bound 0.1468    transfer 0.0008    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.30150 (8), -0.29781 (8), -0.26538 (8), -0.25704 (8), -0.24065 (8), -0.23883 (8), -0.22506 (8), -0.22267 (8), -0.22057 (8), -0.21527 (8), -0.18581 (8), -0.18393 (8), -0.17882 (8), -0.17610 (8), -0.17157 (8), -0.17002 (8), -0.16123 (8), -0.15117 (8), -0.13380 (8), -0.12038 (8), 
Length of domains: 71
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0157    solve 0.1512    add 0.0775    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0157    solve 0.1512    add 0.0775    
Current (lb-rhs): -0.3014967441558838
71 domains visited
Cumulative time: 0.2791738510131836

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 71
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 207 / 284 = 0.7288732394366197
pruning-in-iteration extra time: 0.005443572998046875
Time: prepare 0.0062    bound 0.1759    transfer 0.0015    finalize 0.0032    func 0.1869    
Accumulated time: func 0.3379    prepare 0.0086    bound 0.3227    transfer 0.0024    finalize 0.0048    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28402 (10), -0.28018 (10), -0.24880 (10), -0.24011 (10), -0.22261 (10), -0.22034 (10), -0.20785 (10), -0.20358 (10), -0.20127 (10), -0.19333 (10), -0.16549 (10), -0.16478 (10), -0.15956 (10), -0.15647 (10), -0.15158 (10), -0.14928 (10), -0.14081 (10), -0.13105 (10), -0.11446 (10), -0.10780 (10), 
Length of domains: 77
Time: pickout 0.0148    decision 0.0206    set_bounds 0.0083    solve 0.1870    add 0.0165    
Accumulated time: pickout 0.0151    decision 0.0431    set_bounds 0.0240    solve 0.3381    add 0.0940    
Current (lb-rhs): -0.2840157747268677
148 domains visited
Cumulative time: 0.528160810470581

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 77
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 1: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-8, 1241] [/input-8, 1261] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 195 / 308 = 0.6331168831168832
pruning-in-iteration extra time: 0.004827260971069336
Time: prepare 0.0051    bound 0.1792    transfer 0.0014    finalize 0.0027    func 0.1884    
Accumulated time: func 0.5264    prepare 0.0139    bound 0.5018    transfer 0.0037    finalize 0.0076    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25839 (12), -0.25706 (12), -0.25477 (12), -0.25326 (12), -0.22404 (12), -0.21611 (12), -0.21479 (12), -0.20430 (12), -0.19775 (12), -0.19535 (12), -0.19156 (12), -0.19035 (12), -0.18386 (12), -0.17948 (12), -0.17240 (12), -0.16726 (12), -0.16705 (12), -0.16698 (12), -0.16323 (12), -0.16181 (12), 
Length of domains: 113
Time: pickout 0.0124    decision 0.0241    set_bounds 0.0100    solve 0.1886    add 0.0789    
Accumulated time: pickout 0.0275    decision 0.0673    set_bounds 0.0340    solve 0.5267    add 0.1728    
Current (lb-rhs): -0.2583935260772705
261 domains visited
Cumulative time: 0.8500397205352783

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 113
splitting decisions: 
split level 0: [/input-8, 1261] [/input-8, 1241] [/input-8, 1254] [/input-8, 1574] [/input-8, 1261] [/input-12, 92] [/input-12, 92] [/input-8, 1246] [/input-8, 1246] [/input-8, 1261] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 226 = 0.23008849557522126
pruning-in-iteration extra time: 0.0017004013061523438
Time: prepare 0.0048    bound 0.1118    transfer 0.0008    finalize 0.0015    func 0.1189    
Accumulated time: func 0.6453    prepare 0.0188    bound 0.6136    transfer 0.0046    finalize 0.0091    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25223 (13), -0.25059 (13), -0.24902 (13), -0.24715 (13), -0.24069 (13), -0.23915 (13), -0.23767 (13), -0.23607 (13), -0.21772 (13), -0.21068 (13), -0.20899 (13), -0.20761 (13), -0.20389 (13), -0.19806 (13), -0.19623 (13), -0.19168 (13), -0.18980 (13), -0.18859 (13), -0.18453 (13), -0.18378 (13), 
Length of domains: 174
Time: pickout 0.0151    decision 0.0210    set_bounds 0.0035    solve 0.1190    add 0.0765    
Accumulated time: pickout 0.0427    decision 0.0883    set_bounds 0.0375    solve 0.6457    add 0.2493    
Current (lb-rhs): -0.2522333860397339
435 domains visited
Cumulative time: 1.092818260192871

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 174
splitting decisions: 
split level 0: [/input-8, 1254] [/input-8, 1574] [/input-8, 1246] [/input-8, 1246] [/input-8, 1257] [/input-8, 1261] [/input-8, 1254] [/input-8, 156] [/input-8, 1254] [/input-8, 1574] 
pruning_in_iteration open status: False
ratio of positive domain = 65 / 348 = 0.18678160919540232
pruning-in-iteration extra time: 5.125999450683594e-05
Time: prepare 0.0070    bound 0.0921    transfer 0.0015    finalize 0.0024    func 0.1031    
Accumulated time: func 0.7484    prepare 0.0260    bound 0.7057    transfer 0.0061    finalize 0.0115    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25015 (14), -0.24837 (14), -0.24685 (14), -0.24486 (14), -0.23810 (14), -0.23648 (14), -0.23496 (14), -0.23301 (14), -0.23234 (14), -0.23112 (14), -0.22811 (14), -0.22642 (14), -0.22056 (14), -0.21805 (14), -0.21783 (14), -0.21575 (14), -0.21479 (14), -0.20876 (14), -0.20663 (14), -0.20555 (14), 
Length of domains: 282
Time: pickout 0.0171    decision 0.0187    set_bounds 0.0087    solve 0.1032    add 0.0821    
Accumulated time: pickout 0.0597    decision 0.1070    set_bounds 0.0462    solve 0.7489    add 0.3314    
Current (lb-rhs): -0.250146746635437
717 domains visited
Cumulative time: 1.329620122909546

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 282
splitting decisions: 
split level 0: [/input-8, 1574] [/input-8, 141] [/input-8, 1254] [/input-8, 156] [/input-8, 1262] [/input-8, 1262] [/input-8, 37] [/input-8, 37] [/input-8, 1261] [/input-8, 1574] 
pruning_in_iteration open status: False
ratio of positive domain = 68 / 564 = 0.12056737588652477
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0117    bound 0.1663    transfer 0.0058    finalize 0.0057    func 0.1896    
Accumulated time: func 0.9380    prepare 0.0379    bound 0.8720    transfer 0.0119    finalize 0.0172    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24991 (15), -0.24806 (15), -0.24661 (15), -0.24452 (15), -0.23743 (15), -0.23578 (15), -0.23398 (15), -0.23236 (15), -0.23073 (15), -0.22948 (15), -0.22671 (15), -0.22486 (15), -0.21859 (15), -0.21657 (15), -0.21596 (15), -0.21590 (15), -0.21473 (15), -0.21288 (15), -0.21283 (15), -0.21099 (15), 
Length of domains: 493
Time: pickout 0.0179    decision 0.0311    set_bounds 0.0138    solve 0.1898    add 0.0689    
Accumulated time: pickout 0.0777    decision 0.1381    set_bounds 0.0600    solve 0.9386    add 0.4003    
Current (lb-rhs): -0.24991047382354736
1210 domains visited
Cumulative time: 1.6525013446807861

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 493
splitting decisions: 
split level 0: [/input-8, 37] [/input-8, 1254] [/input-8, 37] [/input-8, 37] [/input-8, 1254] [/input-8, 1574] [/input-8, 1254] [/input-8, 1254] [/input-8, 1254] [/input-8, 1233] 
pruning_in_iteration open status: False
ratio of positive domain = 125 / 986 = 0.12677484787018256
pruning-in-iteration extra time: 9.226799011230469e-05
Time: prepare 0.0193    bound 0.1145    transfer 0.0047    finalize 0.0130    func 0.1516    
Accumulated time: func 1.0896    prepare 0.0574    bound 0.9865    transfer 0.0166    finalize 0.0301    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24273 (16), -0.24162 (16), -0.24061 (16), -0.24059 (16), -0.23984 (16), -0.23840 (16), -0.23789 (16), -0.23063 (16), -0.22983 (16), -0.22966 (16), -0.22886 (16), -0.22683 (16), -0.22637 (16), -0.22512 (16), -0.22443 (16), -0.22358 (16), -0.22264 (16), -0.22138 (16), -0.22043 (16), -0.21886 (16), 
Length of domains: 855
Time: pickout 0.0078    decision 0.0454    set_bounds 0.0217    solve 0.1518    add 0.1072    
Accumulated time: pickout 0.0855    decision 0.1836    set_bounds 0.0818    solve 1.0904    add 0.5075    
Current (lb-rhs): -0.2427304983139038
2065 domains visited
Cumulative time: 1.9988508224487305

BaB round 8
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 855
splitting decisions: 
split level 0: [/input-8, 156] [/input-8, 1261] [/input-8, 156] [/input-8, 1254] [/input-8, 1574] [/input-8, 165] [/input-12, 71] [/input-8, 37] [/input-8, 26] [/input-8, 156] 
pruning_in_iteration open status: False
ratio of positive domain = 235 / 1710 = 0.13742690058479534
pruning-in-iteration extra time: 8.177757263183594e-05
Time: prepare 0.0336    bound 0.1261    transfer 0.0137    finalize 0.0131    func 0.1866    
Accumulated time: func 1.2762    prepare 0.0913    bound 1.1126    transfer 0.0303    finalize 0.0432    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23662 (17), -0.23523 (17), -0.23489 (17), -0.23479 (17), -0.23469 (17), -0.23449 (17), -0.23393 (17), -0.23271 (17), -0.23256 (17), -0.23215 (17), -0.23179 (17), -0.23049 (17), -0.22991 (17), -0.22552 (17), -0.22385 (17), -0.22368 (17), -0.22304 (17), -0.22238 (17), -0.22023 (17), -0.22003 (17), 
Length of domains: 1471
Time: pickout 0.0316    decision 0.0676    set_bounds 0.0392    solve 0.1870    add 0.1219    
Accumulated time: pickout 0.1170    decision 0.2512    set_bounds 0.1210    solve 1.2774    add 0.6294    
Current (lb-rhs): -0.23661696910858154
3536 domains visited
Cumulative time: 2.456848621368408

BaB round 9
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0034
batch: 1471
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-8, 1246] [/input-12, 71] [/input-8, 141] [/input-8, 1246] [/input-8, 165] [/input-8, 165] [/input-8, 1246] [/input-8, 1254] 
pruning_in_iteration open status: False
ratio of positive domain = 288 / 2942 = 0.09789259007477902
pruning-in-iteration extra time: 5.8650970458984375e-05
Time: prepare 0.0688    bound 0.1773    transfer 0.0133    finalize 0.0218    func 0.2815    
Accumulated time: func 1.5578    prepare 0.1604    bound 1.2899    transfer 0.0436    finalize 0.0650    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23222 (18), -0.23175 (18), -0.23107 (18), -0.23018 (18), -0.22990 (18), -0.22962 (18), -0.22901 (18), -0.22881 (18), -0.22868 (18), -0.22844 (18), -0.22750 (18), -0.22679 (18), -0.22649 (18), -0.22637 (18), -0.22581 (18), -0.22558 (18), -0.22532 (18), -0.22428 (18), -0.22253 (18), -0.22014 (18), 
Length of domains: 2642
Time: pickout 0.0398    decision 0.1045    set_bounds 0.2254    solve 0.2822    add 0.1211    
Accumulated time: pickout 0.1569    decision 0.3557    set_bounds 0.3464    solve 1.5596    add 0.7505    
Current (lb-rhs): -0.23221933841705322
6178 domains visited
Cumulative time: 3.2509400844573975

BaB round 10
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 2642
splitting decisions: 
split level 0: [/input-8, 165] [/input-8, 149] [/input-8, 1574] [/input-8, 788] [/input-8, 162] [/input-12, 71] [/input-8, 1574] [/input-12, 71] [/input-8, 1574] [/input-8, 1241] 
pruning_in_iteration open status: False
ratio of positive domain = 403 / 5284 = 0.07626797880393643
pruning-in-iteration extra time: 9.655952453613281e-05
Time: prepare 0.1301    bound 0.2693    transfer 0.0310    finalize 0.0390    func 0.4701    
Accumulated time: func 2.0279    prepare 0.2909    bound 1.5592    transfer 0.0746    finalize 0.1040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22808 (19), -0.22777 (19), -0.22610 (19), -0.22603 (19), -0.22474 (19), -0.22466 (19), -0.22434 (19), -0.22425 (19), -0.22394 (19), -0.22391 (19), -0.22314 (19), -0.22284 (19), -0.22266 (19), -0.22265 (19), -0.22263 (19), -0.22221 (19), -0.22177 (19), -0.22130 (19), -0.22098 (19), -0.22040 (19), 
Length of domains: 4872
Time: pickout 0.0680    decision 0.1846    set_bounds 0.1281    solve 0.4714    add 0.1505    
Accumulated time: pickout 0.2249    decision 0.5402    set_bounds 0.4746    solve 2.0310    add 0.9010    
Current (lb-rhs): -0.22807550430297852
11050 domains visited
Cumulative time: 4.267845392227173

BaB round 11
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1257] [/input-12, 71] [/input-8, 165] [/input-8, 1246] [/input-8, 1246] [/input-8, 944] [/input-8, 156] [/input-8, 1241] [/input-8, 173] [/input-8, 788] 
pruning_in_iteration open status: False
ratio of positive domain = 556 / 8192 = 0.06787109375
pruning-in-iteration extra time: 6.008148193359375e-05
Time: prepare 0.3407    bound 0.3773    transfer 0.0458    finalize 0.0656    func 0.8307    
Accumulated time: func 2.8586    prepare 0.6319    bound 1.9365    transfer 0.1204    finalize 0.1696    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22524 (20), -0.22474 (19), -0.22434 (19), -0.22361 (20), -0.22357 (20), -0.22284 (19), -0.22221 (19), -0.22168 (20), -0.22150 (20), -0.22146 (20), -0.22129 (20), -0.22098 (19), -0.22063 (20), -0.22027 (20), -0.22013 (20), -0.22006 (20), -0.22004 (20), -0.21920 (20), -0.21904 (20), -0.21877 (19), 
Length of domains: 8387
Time: pickout 0.0837    decision 0.4086    set_bounds 0.1837    solve 0.8323    add 0.2052    
Accumulated time: pickout 0.3085    decision 0.9489    set_bounds 0.6582    solve 2.8633    add 1.1062    
Current (lb-rhs): -0.22524333000183105
18661 domains visited
current_vram/total_varm: 10.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.00062370300293

BaB round 12
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 8192
splitting decisions: 
split level 0: [/input-8, 788] [/input-8, 162] [/input-8, 173] [/input-8, 1574] [/input-8, 1241] [/input-12, 71] [/input-12, 71] [/input-8, 141] [/input-8, 1246] [/input-8, 788] 
pruning_in_iteration open status: False
ratio of positive domain = 1193 / 16384 = 0.07281494140625
pruning-in-iteration extra time: 0.00016689300537109375
Time: prepare 0.3734    bound 0.6992    transfer 0.0895    finalize 0.1131    func 1.2768    
Accumulated time: func 4.1354    prepare 1.0057    bound 2.6357    transfer 0.2099    finalize 0.2827    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22015 (20), -0.21886 (21), -0.21886 (21), -0.21853 (20), -0.21834 (20), -0.21791 (20), -0.21774 (21), -0.21735 (21), -0.21728 (21), -0.21717 (21), -0.21717 (20), -0.21684 (20), -0.21640 (21), -0.21622 (20), -0.21610 (21), -0.21604 (21), -0.21573 (20), -0.21541 (21), -0.21517 (21), -0.21516 (21), 
Length of domains: 15333
Time: pickout 0.1389    decision 0.6159    set_bounds 0.5454    solve 1.2799    add 0.1863    
Accumulated time: pickout 0.4474    decision 1.5647    set_bounds 1.2037    solve 4.1432    add 1.2925    
Current (lb-rhs): -0.22015345096588135
33799 domains visited
current_vram/total_varm: 19.4GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.79490351676941

BaB round 13
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 15333
splitting decisions: 
split level 0: [/input-8, 141] [/input-8, 218] [/input-12, 71] [/input-8, 156] [/input-8, 357] [/input-8, 156] [/input-12, 71] [/input-8, 147] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: False
ratio of positive domain = 2260 / 30666 = 0.07369725428813667
pruning-in-iteration extra time: 0.00029921531677246094
Time: prepare 0.6934    bound 1.2703    transfer 0.1743    finalize 0.2117    func 2.3514    
Accumulated time: func 6.4868    prepare 1.6994    bound 3.9060    transfer 0.3842    finalize 0.4945    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21430 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21190 (22), -0.21184 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21114 (22), -0.21111 (22), -0.21098 (21), -0.21051 (22), -0.21030 (22), -0.21007 (22), -0.21001 (22), 
Length of domains: 28296
Time: pickout 0.2441    decision 1.1245    set_bounds 1.1293    solve 2.3564    add 0.2328    
Accumulated time: pickout 0.6915    decision 2.6892    set_bounds 2.3330    solve 6.4996    add 1.5252    
Current (lb-rhs): -0.21612238883972168
62095 domains visited
Cumulative time: 13.920408487319946

BaB round 14
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 597 constraints, 28242 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2432
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-8, 779] [/input-8, 141] [/input-8, 1181] [/input-8, 1372] [/input-8, 1574] [/input-8, 1372] [/input-8, 347] [/input-8, 1246] [/input-8, 165] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21014893054962158
10 lb beta sum: 3.4285197257995605, worst -0.1837809681892395
pruning_in_iteration open status: False
ratio of positive domain = 5657 / 32768 = 0.172637939453125
pruning-in-iteration extra time: 0.0005831718444824219
Time: prepare 0.7687    bound 6.2425    transfer 0.1839    finalize 0.2455    func 7.6518    
Accumulated time: func 14.1387    prepare 2.4685    bound 10.1484    transfer 0.5680    finalize 0.7399    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 37522
Time: pickout 0.2591    decision 1.9442    set_bounds 1.2887    solve 7.6572    add 0.6257    
Accumulated time: pickout 0.9506    decision 4.6335    set_bounds 3.6217    solve 14.1568    add 2.1509    
Current (lb-rhs): -0.21612238883972168
87705 domains visited
Cumulative time: 26.02700901031494

BaB round 15
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 900 constraints, 41432 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3643
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2971] [/input-8, 779] [/input-8, 165] [/input-12, 71] [/input-8, 944] [/input-12, 55] [/input, 2971] [/input-8, 141] [/input-8, 141] [/input-8, 347] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20753920078277588
10 lb beta sum: 4.646658897399902, worst -0.1764981746673584
pruning_in_iteration open status: False
ratio of positive domain = 2693 / 32768 = 0.082183837890625
pruning-in-iteration extra time: 0.0008211135864257812
Time: prepare 0.7828    bound 8.1267    transfer 0.1869    finalize 0.6896    func 9.9983    
Accumulated time: func 24.1369    prepare 3.2518    bound 18.2751    transfer 0.7549    finalize 1.4296    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 49599
Time: pickout 0.3044    decision 2.0932    set_bounds 1.1601    solve 10.0043    add 0.2670    
Accumulated time: pickout 1.2550    decision 6.7266    set_bounds 4.7818    solve 24.1611    add 2.4179    
Current (lb-rhs): -0.21612238883972168
116166 domains visited
Cumulative time: 40.297746419906616

BaB round 16
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1222 constraints, 53808 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4572
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1372] [/input-8, 149] [/input-12, 55] [/input-12, 55] [/input-8, 141] [/input-8, 788] [/input-8, 173] [/input-8, 779] [/input-8, 1181] [/input-8, 1241] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20462048053741455
10 lb beta sum: 5.208832740783691, worst -0.17673754692077637
pruning_in_iteration open status: False
ratio of positive domain = 3202 / 32768 = 0.09771728515625
pruning-in-iteration extra time: 0.0009837150573730469
Time: prepare 0.8033    bound 9.9795    transfer 0.1847    finalize 0.2609    func 11.4515    
Accumulated time: func 35.5885    prepare 4.0556    bound 28.2546    transfer 0.9397    finalize 1.6905    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 60787
Time: pickout 0.2711    decision 1.9960    set_bounds 1.2660    solve 11.4592    add 0.2640    
Accumulated time: pickout 1.5261    decision 8.7226    set_bounds 6.0479    solve 35.6203    add 2.6819    
Current (lb-rhs): -0.21612238883972168
143738 domains visited
Cumulative time: 56.12968420982361

BaB round 17
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1344 constraints, 64073 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5579
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 141] [/input, 411] [/input-8, 162] [/input-8, 779] [/input-8, 779] [/input-8, 162] [/input, 411] [/input-8, 1266] [/input-8, 156] [/input-8, 149] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20064079761505127
10 lb beta sum: 5.568912506103516, worst -0.17466485500335693
pruning_in_iteration open status: False
ratio of positive domain = 3435 / 32768 = 0.104827880859375
pruning-in-iteration extra time: 0.0010213851928710938
Time: prepare 0.7510    bound 10.6282    transfer 0.1881    finalize 0.2689    func 12.0499    
Accumulated time: func 47.6383    prepare 4.8071    bound 38.8828    transfer 1.1278    finalize 1.9594    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 71485
Time: pickout 0.3294    decision 2.0705    set_bounds 1.3594    solve 12.0596    add 9.7363    
Accumulated time: pickout 1.8554    decision 10.7931    set_bounds 7.4072    solve 47.6798    add 12.4182    
Current (lb-rhs): -0.21612238883972168
170820 domains visited
Cumulative time: 82.36136317253113

BaB round 18
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1544 constraints, 91996 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7861
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 173] [/input-8, 162] [/input-8, 347] [/input-8, 779] [/input-8, 941] [/input-8, 788] [/input, 925] [/input-8, 149] [/input-8, 173] [/input-8, 788] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19202065467834473
10 lb beta sum: 6.192042350769043, worst -0.17076921463012695
pruning_in_iteration open status: False
ratio of positive domain = 3062 / 32768 = 0.09344482421875
pruning-in-iteration extra time: 0.00110626220703125
Time: prepare 0.7711    bound 11.9762    transfer 0.1809    finalize 0.9585    func 14.0944    
Accumulated time: func 61.7328    prepare 5.5786    bound 50.8590    transfer 1.3087    finalize 2.9179    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 82711
Time: pickout 0.2889    decision 2.1093    set_bounds 0.7578    solve 14.1009    add 0.2670    
Accumulated time: pickout 2.1443    decision 12.9024    set_bounds 8.1651    solve 61.7807    add 12.6852    
Current (lb-rhs): -0.21612238883972168
198430 domains visited
Cumulative time: 100.77032566070557

BaB round 19
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1708 constraints, 104457 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8971
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 347] [/input-8, 779] [/input-8, 162] [/input-8, 1262] [/input-8, 944] [/input-8, 162] [/input-8, 1238] [/input-8, 1266] [/input-8, 779] [/input-8, 162] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18255305290222168
10 lb beta sum: 6.3373870849609375, worst -0.1609402894973755
pruning_in_iteration open status: False
ratio of positive domain = 3564 / 32768 = 0.1087646484375
pruning-in-iteration extra time: 0.0010552406311035156
Time: prepare 0.7594    bound 13.0036    transfer 0.1845    finalize 0.2567    func 15.2842    
Accumulated time: func 77.0170    prepare 6.3385    bound 63.8626    transfer 1.4932    finalize 3.1746    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 93687
Time: pickout 0.3024    decision 2.2883    set_bounds 0.7974    solve 15.2913    add 0.2615    
Accumulated time: pickout 2.4467    decision 15.1907    set_bounds 8.9625    solve 77.0720    add 12.9467    
Current (lb-rhs): -0.21612238883972168
225790 domains visited
Cumulative time: 120.8448555469513

BaB round 20
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1799 constraints, 108939 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.0049
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1241] [/input-8, 1238] [/input-8, 162] [/input-8, 347] [/input-8, 1241] [/input-8, 788] [/input-8, 1738] [/input-12, 55] [/input-8, 1181] [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1792924404144287
10 lb beta sum: 6.482547760009766, worst -0.157831072807312
pruning_in_iteration open status: False
ratio of positive domain = 3448 / 32768 = 0.105224609375
pruning-in-iteration extra time: 0.001115560531616211
Time: prepare 0.8450    bound 13.6872    transfer 0.1792    finalize 0.2607    func 15.1827    
Accumulated time: func 92.1997    prepare 7.1840    bound 77.5497    transfer 1.6724    finalize 3.4353    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 104764
Time: pickout 0.3372    decision 1.7478    set_bounds 1.9206    solve 15.1929    add 0.2816    
Accumulated time: pickout 2.7839    decision 16.9385    set_bounds 10.8830    solve 92.2650    add 13.2283    
Current (lb-rhs): -0.21612238883972168
253251 domains visited
Cumulative time: 141.46544981002808

BaB round 21
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1840 constraints, 109848 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9828
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 149] [/input-8, 779] [/input-8, 779] [/input-8, 1262] [/input-8, 1181] [/input-8, 944] [/input-8, 1741] [/input-8, 944] [/input-8, 1748] [/input-8, 944] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1771700382232666
10 lb beta sum: 6.70679235458374, worst -0.14657437801361084
pruning_in_iteration open status: False
ratio of positive domain = 3079 / 32768 = 0.093963623046875
pruning-in-iteration extra time: 0.0011186599731445312
Time: prepare 0.7884    bound 13.6076    transfer 0.1844    finalize 0.2631    func 15.0557    
Accumulated time: func 107.2555    prepare 7.9729    bound 91.1573    transfer 1.8567    finalize 3.6984    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 116209
Time: pickout 0.3541    decision 2.5564    set_bounds 0.7860    solve 15.0667    add 0.2769    
Accumulated time: pickout 3.1379    decision 19.4949    set_bounds 11.6690    solve 107.3317    add 13.5052    
Current (lb-rhs): -0.21612238883972168
281080 domains visited
Cumulative time: 161.602192401886

BaB round 22
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 1932 constraints, 110319 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.9366
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1237] [/input-8, 788] [/input-8, 944] [/input-8, 149] [/input-8, 2029] [/input-8, 1574] [/input-8, 1372] [/input-8, 141] [/input-8, 1372] [/input-8, 1372] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16607403755187988
10 lb beta sum: 6.825800895690918, worst -0.14354336261749268
pruning_in_iteration open status: False
ratio of positive domain = 2815 / 32768 = 0.085906982421875
pruning-in-iteration extra time: 0.0011577606201171875
Time: prepare 0.7784    bound 14.5178    transfer 0.1813    finalize 0.2623    func 15.9506    
Accumulated time: func 123.2061    prepare 8.7518    bound 105.6752    transfer 2.0380    finalize 3.9607    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 127958
Time: pickout 0.3042    decision 1.7311    set_bounds 2.0185    solve 15.9607    add 0.2800    
Accumulated time: pickout 3.4421    decision 21.2259    set_bounds 13.6876    solve 123.2923    add 13.7852    
Current (lb-rhs): -0.21612238883972168
309213 domains visited
Cumulative time: 183.96006536483765

BaB round 23
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts: total 2007 constraints, 111715 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9703
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1556] [/input-12, 55] [/input-8, 1265] [/input-8, 1266] [/input-8, 941] [/input-8, 944] [/input-8, 1748] [/input-8, 1652] [/input-8, 1574] [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16393673419952393
10 lb beta sum: 6.879971504211426, worst -0.14372718334197998
pruning_in_iteration open status: False
ratio of positive domain = 2757 / 32768 = 0.084136962890625
pruning-in-iteration extra time: 0.0012242794036865234
Time: prepare 0.7555    bound 15.0014    transfer 0.1773    finalize 0.2547    func 16.4028    
Accumulated time: func 139.6089    prepare 9.5078    bound 120.6765    transfer 2.2153    finalize 4.2154    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21612 (21), -0.21514 (21), -0.21445 (21), -0.21424 (21), -0.21290 (22), -0.21280 (22), -0.21266 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21098 (21), -0.21051 (22), -0.21007 (22), -0.21001 (22), -0.20972 (21), -0.20967 (22), -0.20918 (22), -0.20911 (22), -0.20895 (21), -0.20872 (21), 
Length of domains: 139834
Time: pickout 0.3438    decision 1.7033    set_bounds 2.0785    solve 16.4130    add 0.2735    
Accumulated time: pickout 3.7858    decision 22.9292    set_bounds 15.7660    solve 139.7053    add 14.0587    
Current (lb-rhs): -0.21612238883972168
337473 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=2_30557417.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=2_30557417.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=2_30557417.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=2_30557417.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=59_spec=4_30557417.log
found process for pidx=2
kill process for pidx=2
found process for pidx=4
Result: unknown in 209.6016 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.67420197, -25.24380302, -28.67889023, -28.16714287, -31.08404350,
         -29.38106728, -30.15142441, -31.47988510, -26.39269066, -27.12945747]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 131, 1, 576] with unstable size 130 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 576] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [130]; unstable size 130; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 130] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 130] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.58424497, 2.27789783, 1.83070803, 4.66640186, 2.88375068, 3.73132467,
         4.99384832, 0.22025681, 1.28892243]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0875 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.82417488, -22.89990807, -24.55294609, -25.83590508, -23.99347115,
         -26.13236237, -25.80495453, -25.02459717, -21.89008331, -22.53929710]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [969]; unstable size 969; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 342, 1, 969] with unstable size 341 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 969] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 969] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [341]; unstable size 341; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 341] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 341] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.74619627,  0.19975400,  1.29172409, -0.31224155,  1.47659230,
          0.91263294,  0.33260208, -2.13532090, -1.77720308]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.82417488, -22.89990807, -24.55294609, -25.83590508, -23.99347115,
         -26.13236237, -25.80495453, -25.02459717, -21.89008331, -22.53929710]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.82417488, -22.89990807, -24.55294800, -25.83590889, -23.99347305,
          -26.13236427, -25.80495453, -25.02459717, -21.89008522, -22.53930092],
         [-22.82417488, -22.89990807, -24.55294800, -25.83590889, -23.99347305,
          -26.13236427, -25.80495453, -25.02459717, -21.89008522, -22.53930092]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07573318,  1.16929817, -0.93408966, -0.28487396]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0869 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.59115791, -34.97940826, -33.80213165, -37.62691879, -34.83726883,
         -38.96181488, -38.03176880, -36.83436584, -27.23085785, -35.44748306]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 675] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 675] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 186] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.53111184,  6.68231153,  5.40997362,  9.09447956,  6.24459028,
         10.17940712,  9.45173359,  8.14738560,  7.13950634]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0682 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.97131920, -28.80028915, -23.13581467, -25.54052544, -23.92788124,
         -24.59213448, -25.03964615, -26.08118820, -27.66898346, -29.01627922]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 127, 1, 591] with unstable size 126 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 591] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 126] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.02588928,  2.80756664, -2.69469070, -0.18732262, -1.80930626,
         -1.25439465,  0.15932631,  1.76952982,  3.03217936]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.97131920, -28.80028915, -23.13581467, -25.54052544, -23.92788124,
         -24.59213448, -25.03964615, -26.08118820, -27.66898346, -29.01627922]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.97132111, -28.80028915, -23.13581467, -25.54052544, -23.92788315,
          -24.59213638, -25.03964615, -26.08118629, -27.66898155, -29.01628113],
         [-26.97132111, -28.80028915, -23.13581467, -25.54052544, -23.92788315,
          -24.59213638, -25.03964615, -26.08118629, -27.66898155, -29.01628113]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.90383148,  0.50087929, -1.11176300, -0.44750977]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0819 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
         -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1119]; unstable size 1119; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 1119] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 1119] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1119] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 286] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.60318422,  7.55680847,  1.79625535, -0.18556574,  1.88933861,
          1.24666572,  2.70504022,  5.15829468,  6.78245878]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
         -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.53it/s]100%|██████████| 1/1 [00:00<00:00,  7.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.81661415, -22.46876526, -13.03005505, -15.94738007, -13.62407589,
          -16.17176628, -15.44046783, -17.37049484, -19.77799225, -21.58205223]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59402084]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1362 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 31.23314094543457
alpha/beta optimization time: 1.2709174156188965
initial alpha-crown bounds: tensor([[ 3.65191102,  7.65019560,  1.84882760, -0.11801666,  1.94617462,
          1.30992115,  2.79970622,  5.27360296,  6.87081909]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11801666021347046
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6991 seconds.
lower bounds for all target labels: [3.6519112586975098, 7.650197982788086, 1.8488218784332275, -0.11801701784133911, 1.9461749792099, 1.3099218606948853, 2.799708127975464, 5.273599147796631, 6.870821952819824]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [3]
start creating model mps for candidates: ['lay/16_3']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.44761896133423
Verifying property 0 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.650195598602295.

Properties batch 1, size 1
Remaining timeout: 198.217698097229
Verifying property 1 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.870819091796875.

Properties batch 2, size 1
Remaining timeout: 198.09284663200378
Verifying property 2 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.2736029624938965.

Properties batch 3, size 1
Remaining timeout: 197.97015738487244
Verifying property 3 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6519110202789307.

Properties batch 4, size 1
Remaining timeout: 197.85101056098938
Verifying property 4 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.799706220626831.

Properties batch 5, size 1
Remaining timeout: 197.72866559028625
Verifying property 5 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9461746215820312.

Properties batch 6, size 1
Remaining timeout: 197.6089563369751
Verifying property 6 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.848827600479126.

Properties batch 7, size 1
Remaining timeout: 197.48753809928894
Verifying property 7 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.309921145439148.

Properties batch 8, size 1
Remaining timeout: 197.36738181114197
Verifying property 8 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11801666]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
        -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11801666]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1119
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 284
Node /15 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 1431
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009911060333251953
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 97] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 79] 
split level 7: [/input-12, 83] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.57763671875e-05
Time: prepare 0.0018    bound 0.0048    transfer 0.0045    finalize 0.0026    func 0.0138    
Accumulated time: func 0.0138    prepare 0.0023    bound 0.0048    transfer 0.0045    finalize 0.0026    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0291    set_bounds 0.0171    solve 0.0139    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0291    set_bounds 0.0171    solve 0.0139    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06699180603027344

the mip building process is not terminated yet, kill it
Result: safe in 3.1121 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.54049110, -19.17367935, -17.10903168, -14.96515083, -17.66605568,
         -15.88734627, -15.45722198, -17.64301682, -16.20054626, -17.64737320]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 153, 1, 578] with unstable size 152 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 578] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [152]; unstable size 152; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 152] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 152] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.58451492,  2.26354074,  0.51416564, -1.32597971,  0.81974989,
         -0.53718376,  0.88996923, -0.70218873,  0.60620260]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.54049110, -19.17367935, -17.10903168, -14.96515083, -17.66605568,
         -15.88734627, -15.45722198, -17.64301682, -16.20054626, -17.64737320]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.54049110, -19.17367935, -17.10903168, -14.96515179, -17.66605568,
          -15.88734627, -15.45722198, -17.64301872, -16.20054626, -17.64737320],
         [-17.54049110, -19.17367935, -17.10903168, -14.96515179, -17.66605568,
          -15.88734627, -15.45722198, -17.64301872, -16.20054626, -17.64737320]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.49207020,  0.43012428,  0.74332428]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0837 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
         -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [550]; unstable size 550; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 550] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 550] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 550] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 295] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.52899981,  3.35346794, -0.60972631,  1.57596016,  1.06331682,
         -0.42583442,  1.62264919,  1.54576564,  3.27385807]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
         -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.32it/s]100%|██████████| 1/1 [00:00<00:00,  8.31it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.79688454, -20.48247719, -15.16759300, -17.41525078, -15.03807354,
          -17.04138947, -15.56449890, -17.84644318, -18.37698746, -20.11083412],
         [-16.79688454, -20.48247719, -15.16759300, -17.41525078, -15.03807354,
          -17.04138947, -15.56449890, -17.84644318, -18.37698746, -20.11083412]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.12951946, 0.52642536]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1234 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.636507034301758
alpha/beta optimization time: 1.26759934425354
initial alpha-crown bounds: tensor([[ 0.60815477,  3.47484589, -0.55310184,  1.62192678,  1.11317492,
         -0.37937403,  1.72037315,  1.66001725,  3.37049055]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5531018376350403
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6459 seconds.
lower bounds for all target labels: [0.6081547737121582, 3.4748458862304688, -0.5531018376350403, 1.6219267845153809, 1.1131749153137207, -0.37937474250793457, 1.7203731536865234, 1.6600172519683838, 3.370490074157715]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 5]
start creating model mps for candidates: ['lay/16_2', 'lay/16_5']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 8746 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 8749 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47120594978333
Verifying property 0 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4748458862304688.

Properties batch 1, size 1
Remaining timeout: 198.12469506263733
Verifying property 1 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.370490550994873.

Properties batch 2, size 1
Remaining timeout: 197.9628746509552
Verifying property 2 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7203731536865234.

Properties batch 3, size 1
Remaining timeout: 197.88173389434814
Verifying property 3 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6600172519683838.

Properties batch 4, size 1
Remaining timeout: 197.80460476875305
Verifying property 4 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6219267845153809.

Properties batch 5, size 1
Remaining timeout: 197.73016238212585
Verifying property 5 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1131749153137207.

Properties batch 6, size 1
Remaining timeout: 197.65368390083313
Verifying property 6 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6081547737121582.

Properties batch 7, size 1
Remaining timeout: 197.57711791992188
Verifying property 7 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37937403]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
        -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37937403]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 550
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 867
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.001056671142578125
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 3] 
split level 1: [/input-12, 49] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 43] 
split level 4: [/input-12, 18] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 24] 
split level 7: [/input-8, 1692] 
pruning_in_iteration open status: True
ratio of positive domain = 238 / 256 = 0.9296875
pruning-in-iteration extra time: 0.005113124847412109
Time: prepare 0.0033    bound 0.1548    transfer 0.0076    finalize 0.0032    func 0.1689    
Accumulated time: func 0.1689    prepare 0.0037    bound 0.1548    transfer 0.0076    finalize 0.0032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12167 (8), -0.10592 (8), -0.10540 (8), -0.09117 (8), -0.07833 (8), -0.07198 (8), -0.06394 (8), -0.06085 (8), -0.05948 (8), -0.05769 (8), -0.04850 (8), -0.04791 (8), -0.03534 (8), -0.02588 (8), -0.02394 (8), -0.01672 (8), -0.01329 (8), -0.01007 (8), 
Length of domains: 18
Time: pickout 0.0007    decision 0.0282    set_bounds 0.0230    solve 0.1690    add 0.0480    
Accumulated time: pickout 0.0007    decision 0.0282    set_bounds 0.0230    solve 0.1690    add 0.0480    
Current (lb-rhs): -0.12167191505432129
18 domains visited
Cumulative time: 0.28208255767822266

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 18
splitting decisions: 
split level 0: [/input-8, 1630] [/input-8, 1630] [/input-12, 12] [/input-8, 1972] [/input-12, 12] [/input-12, 12] [/input-8, 1972] [/input-12, 12] [/input-8, 1630] [/input-8, 1630] 
split level 1: [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-12, 12] [/input-8, 1630] [/input-8, 1630] [/input-12, 12] [/input-8, 1630] [/input-8, 1972] [/input-8, 1972] 
split level 2: [/input-8, 1967] [/input-8, 1967] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1630] [/input-8, 1695] [/input-8, 1967] [/input-8, 1967] 
split level 3: [/input-8, 1973] [/input-8, 1973] [/input-8, 1973] [/input-8, 1973] [/input-8, 1651] [/input-8, 1973] [/input-8, 1973] [/input-8, 1306] [/input-8, 1973] [/input-8, 1973] 
pruning_in_iteration open status: True
ratio of positive domain = 165 / 288 = 0.5729166666666667
pruning-in-iteration extra time: 0.005026817321777344
Time: prepare 0.0072    bound 0.1315    transfer 0.0046    finalize 0.0034    func 0.1469    
Accumulated time: func 0.3158    prepare 0.0112    bound 0.2863    transfer 0.0123    finalize 0.0066    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09574 (12), -0.09412 (12), -0.08813 (12), -0.08651 (12), -0.08607 (12), -0.08446 (12), -0.08152 (12), -0.07968 (12), -0.07941 (12), -0.07806 (12), -0.07773 (12), -0.07612 (12), -0.07231 (12), -0.07207 (12), -0.07046 (12), -0.07038 (12), -0.07030 (12), -0.06877 (12), -0.06672 (12), -0.06620 (12), 
Length of domains: 123
Time: pickout 0.0017    decision 0.0194    set_bounds 0.0169    solve 0.1471    add 0.0352    
Accumulated time: pickout 0.0024    decision 0.0476    set_bounds 0.0399    solve 0.3162    add 0.0832    
Current (lb-rhs): -0.09573531150817871
141 domains visited
Cumulative time: 0.5040929317474365

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 123
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1630] [/input-8, 1972] [/input-8, 1630] [/input-8, 1068] [/input-8, 1972] [/input-8, 1314] [/input-8, 1630] [/input-8, 1068] [/input-8, 1972] 
pruning_in_iteration open status: True
ratio of positive domain = 53 / 246 = 0.21544715447154472
pruning-in-iteration extra time: 0.0008034706115722656
Time: prepare 0.0051    bound 0.1217    transfer 0.0008    finalize 0.0015    func 0.1295    
Accumulated time: func 0.4453    prepare 0.0165    bound 0.4080    transfer 0.0131    finalize 0.0081    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09111 (13), -0.08917 (13), -0.08344 (13), -0.08150 (13), -0.08142 (13), -0.07948 (13), -0.07693 (13), -0.07626 (13), -0.07565 (13), -0.07508 (13), -0.07414 (13), -0.07314 (13), -0.07299 (13), -0.07105 (13), -0.06928 (13), -0.06807 (13), -0.06763 (13), -0.06740 (13), -0.06723 (13), -0.06669 (13), 
Length of domains: 193
Time: pickout 0.0036    decision 0.0238    set_bounds 0.0057    solve 0.1296    add 0.0808    
Accumulated time: pickout 0.0060    decision 0.0714    set_bounds 0.0456    solve 0.4458    add 0.1641    
Current (lb-rhs): -0.0911104679107666
334 domains visited
Cumulative time: 0.7555487155914307

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 193
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1967] [/input-8, 1967] [/input-8, 1068] [/input-8, 1967] [/input-8, 629] [/input-8, 1967] [/input-8, 1068] [/input-8, 1967] [/input-8, 1964] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 386 = 0.23834196891191706
pruning-in-iteration extra time: 0.0032875537872314453
Time: prepare 0.0078    bound 0.1430    transfer 0.0047    finalize 0.0033    func 0.1590    
Accumulated time: func 0.6042    prepare 0.0245    bound 0.5509    transfer 0.0179    finalize 0.0114    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08728 (14), -0.08549 (14), -0.07991 (14), -0.07954 (14), -0.07775 (14), -0.07775 (14), -0.07756 (14), -0.07576 (14), -0.07321 (14), -0.07212 (14), -0.07197 (14), -0.07169 (14), -0.07123 (14), -0.07023 (14), -0.07011 (14), -0.06981 (14), -0.06944 (14), -0.06905 (14), -0.06809 (14), -0.06725 (14), 
Length of domains: 294
Time: pickout 0.0164    decision 0.0275    set_bounds 0.0091    solve 0.1591    add 0.0850    
Accumulated time: pickout 0.0225    decision 0.0990    set_bounds 0.0547    solve 0.6049    add 0.2490    
Current (lb-rhs): -0.0872795581817627
628 domains visited
Cumulative time: 1.0577523708343506

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 294
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1964] [/input-8, 1700] [/input-8, 629] [/input-8, 1314] [/input-8, 1268] [/input-8, 1700] [/input-8, 629] [/input-8, 1972] [/input-8, 1700] 
pruning_in_iteration open status: True
ratio of positive domain = 139 / 588 = 0.23639455782312924
pruning-in-iteration extra time: 0.0048351287841796875
Time: prepare 0.0117    bound 0.2294    transfer 0.0065    finalize 0.0135    func 0.2612    
Accumulated time: func 0.8654    prepare 0.0365    bound 0.7803    transfer 0.0244    finalize 0.0248    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08262 (15), -0.08085 (15), -0.07600 (15), -0.07522 (15), -0.07487 (15), -0.07422 (15), -0.07311 (15), -0.07309 (15), -0.07276 (15), -0.07098 (15), -0.06863 (15), -0.06860 (15), -0.06827 (15), -0.06729 (15), -0.06708 (15), -0.06654 (15), -0.06648 (15), -0.06628 (15), -0.06607 (15), -0.06542 (15), 
Length of domains: 449
Time: pickout 0.0191    decision 0.0371    set_bounds 0.0138    solve 0.2614    add 0.0931    
Accumulated time: pickout 0.0416    decision 0.1360    set_bounds 0.0685    solve 0.8663    add 0.3422    
Current (lb-rhs): -0.08262133598327637
1077 domains visited
Cumulative time: 1.4956839084625244

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 449
splitting decisions: 
split level 0: [/input-8, 1314] [/input-8, 1314] [/input-8, 1964] [/input-8, 1314] [/input-8, 506] [/input-8, 1967] [/input-8, 1964] [/input-8, 1314] [/input-8, 1314] [/input-8, 1268] 
pruning_in_iteration open status: True
ratio of positive domain = 224 / 898 = 0.24944320712694878
pruning-in-iteration extra time: 0.004817008972167969
Time: prepare 0.0183    bound 0.2963    transfer 0.0141    finalize 0.0279    func 0.3568    
Accumulated time: func 1.2222    prepare 0.0550    bound 1.0766    transfer 0.0385    finalize 0.0527    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07582 (16), -0.07482 (16), -0.07406 (16), -0.07306 (16), -0.06936 (16), -0.06840 (16), -0.06805 (16), -0.06800 (16), -0.06759 (16), -0.06740 (16), -0.06705 (16), -0.06632 (16), -0.06628 (16), -0.06624 (16), -0.06602 (16), -0.06532 (16), -0.06528 (16), -0.06503 (16), -0.06425 (16), -0.06326 (16), 
Length of domains: 674
Time: pickout 0.0217    decision 0.0402    set_bounds 0.0210    solve 0.3573    add 0.1216    
Accumulated time: pickout 0.0633    decision 0.1762    set_bounds 0.0895    solve 1.2237    add 0.4638    
Current (lb-rhs): -0.07581782341003418
1751 domains visited
Cumulative time: 2.0676400661468506

BaB round 7
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 674
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1700] [/input-8, 1964] [/input-8, 1789] [/input-8, 1700] [/input-8, 1964] [/input-8, 1967] [/input-8, 1700] [/input-8, 1964] [/input-8, 1268] 
pruning_in_iteration open status: False
ratio of positive domain = 253 / 1348 = 0.18768545994065278
pruning-in-iteration extra time: 5.4836273193359375e-05
Time: prepare 0.0262    bound 0.1306    transfer 0.0198    finalize 0.0103    func 0.1871    
Accumulated time: func 1.4093    prepare 0.0815    bound 1.2072    transfer 0.0583    finalize 0.0631    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07147 (17), -0.07053 (17), -0.06962 (17), -0.06868 (17), -0.06487 (17), -0.06404 (17), -0.06369 (17), -0.06356 (17), -0.06310 (17), -0.06301 (17), -0.06275 (17), -0.06184 (17), -0.06182 (17), -0.06170 (17), -0.06170 (17), -0.06090 (17), -0.06088 (17), -0.06075 (17), -0.05984 (17), -0.05890 (17), 
Length of domains: 1080
Time: pickout 0.0256    decision 0.0604    set_bounds 0.0305    solve 0.1874    add 0.0663    
Accumulated time: pickout 0.0889    decision 0.2366    set_bounds 0.1201    solve 1.4110    add 0.5301    
Current (lb-rhs): -0.07147073745727539
2831 domains visited
Cumulative time: 2.4484434127807617

BaB round 8
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 1080
splitting decisions: 
split level 0: [/input-8, 1306] [/input-8, 1268] [/input-8, 1306] [/input-8, 1268] [/input-8, 1268] [/input-8, 1306] [/input-8, 1268] [/input-8, 1268] [/input-8, 1306] [/input-8, 1789] 
pruning_in_iteration open status: False
ratio of positive domain = 382 / 2160 = 0.17685185185185182
pruning-in-iteration extra time: 6.580352783203125e-05
Time: prepare 0.0473    bound 0.1584    transfer 0.0234    finalize 0.0150    func 0.2443    
Accumulated time: func 1.6536    prepare 0.1290    bound 1.3656    transfer 0.0817    finalize 0.0780    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06525 (18), -0.06414 (18), -0.06363 (18), -0.06340 (18), -0.06292 (18), -0.06229 (18), -0.06178 (18), -0.06107 (18), -0.05861 (18), -0.05781 (18), -0.05746 (18), -0.05717 (18), -0.05699 (18), -0.05675 (18), -0.05670 (18), -0.05634 (18), -0.05619 (18), -0.05597 (18), -0.05585 (18), -0.05562 (18), 
Length of domains: 1772
Time: pickout 0.0232    decision 0.0807    set_bounds 0.0515    solve 0.2448    add 0.1004    
Accumulated time: pickout 0.1121    decision 0.3173    set_bounds 0.1716    solve 1.6559    add 0.6305    
Current (lb-rhs): -0.0652468204498291
4603 domains visited
Cumulative time: 2.959317922592163

BaB round 9
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 1772
splitting decisions: 
split level 0: [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1306] [/input-8, 1057] [/input-8, 1967] [/input-8, 1057] [/input-8, 1714] [/input-8, 1057] [/input-8, 1268] 
pruning_in_iteration open status: True
ratio of positive domain = 849 / 3544 = 0.23955981941309257
pruning-in-iteration extra time: 0.004777193069458008
Time: prepare 0.0915    bound 0.3315    transfer 0.0412    finalize 0.0246    func 0.4901    
Accumulated time: func 2.1437    prepare 0.2208    bound 1.6971    transfer 0.1229    finalize 0.1026    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06177 (19), -0.06076 (19), -0.06009 (19), -0.05991 (19), -0.05953 (19), -0.05890 (19), -0.05824 (19), -0.05768 (19), -0.05512 (19), -0.05431 (19), -0.05396 (19), -0.05372 (19), -0.05337 (19), -0.05330 (19), -0.05325 (19), -0.05296 (19), -0.05265 (19), -0.05245 (19), -0.05230 (19), -0.05211 (19), 
Length of domains: 2695
Time: pickout 0.0436    decision 0.3487    set_bounds 0.0848    solve 0.4911    add 0.1277    
Accumulated time: pickout 0.1558    decision 0.6660    set_bounds 0.2564    solve 2.1469    add 0.7582    
Current (lb-rhs): -0.06176567077636719
7298 domains visited
Cumulative time: 4.073356628417969

BaB round 10
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0013
batch: 2695
splitting decisions: 
split level 0: [/input-8, 506] [/input-8, 506] [/input-8, 1714] [/input-8, 506] [/input-8, 1268] [/input-8, 506] [/input-8, 1714] [/input-8, 506] [/input-8, 1306] [/input-8, 506] 
pruning_in_iteration open status: True
ratio of positive domain = 1130 / 5390 = 0.20964749536178107
pruning-in-iteration extra time: 0.003966569900512695
Time: prepare 0.1198    bound 0.3360    transfer 0.0262    finalize 0.0325    func 0.5153    
Accumulated time: func 2.6590    prepare 0.3410    bound 2.0331    transfer 0.1491    finalize 0.1351    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05735 (20), -0.05634 (20), -0.05565 (20), -0.05550 (20), -0.05511 (20), -0.05462 (20), -0.05449 (20), -0.05380 (20), -0.05363 (20), -0.05326 (20), -0.05292 (20), -0.05277 (20), -0.05240 (20), -0.05178 (20), -0.05107 (20), -0.05069 (20), -0.05055 (20), -0.04989 (20), -0.04956 (20), -0.04928 (20), 
Length of domains: 4260
Time: pickout 0.0597    decision 0.1760    set_bounds 0.2771    solve 0.5166    add 0.1600    
Accumulated time: pickout 0.2154    decision 0.8420    set_bounds 0.5334    solve 2.6636    add 0.9182    
Current (lb-rhs): -0.05734872817993164
11558 domains visited
Cumulative time: 5.288224935531616

BaB round 11
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0034
batch: 4096
splitting decisions: 
split level 0: [/input-8, 629] [/input-8, 629] [/input-8, 1068] [/input-8, 1068] [/input-8, 1068] [/input-8, 629] [/input-8, 1068] [/input-8, 1068] [/input-8, 1068] [/input-8, 1068] 
pruning_in_iteration open status: True
ratio of positive domain = 3290 / 8192 = 0.401611328125
pruning-in-iteration extra time: 0.005578517913818359
Time: prepare 0.1781    bound 0.3949    transfer 0.0497    finalize 0.0531    func 0.6772    
Accumulated time: func 3.3362    prepare 0.5193    bound 2.4280    transfer 0.1988    finalize 0.1882    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05502 (21), -0.05400 (21), -0.05333 (21), -0.05323 (21), -0.05277 (21), -0.05230 (21), -0.05221 (21), -0.05154 (21), -0.05130 (21), -0.05098 (21), -0.05060 (21), -0.05051 (21), -0.05007 (21), -0.04951 (21), -0.04881 (21), -0.04838 (21), -0.04828 (21), -0.04755 (21), -0.04723 (21), -0.04689 (21), 
Length of domains: 5066
Time: pickout 0.0770    decision 0.2402    set_bounds 0.3387    solve 0.6789    add 0.1553    
Accumulated time: pickout 0.2924    decision 1.0822    set_bounds 0.8721    solve 3.3425    add 1.0734    
Current (lb-rhs): -0.0550227165222168
16460 domains visited
current_vram/total_varm: 10.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.805683135986328

BaB round 12
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 5066
splitting decisions: 
split level 0: [/input-8, 1068] [/input-8, 629] [/input-8, 1068] [/input-8, 1068] [/input-8, 1068] [/input-8, 629] [/input-8, 1068] [/input-8, 1057] [/input-8, 1068] [/input-8, 629] 
pruning_in_iteration open status: True
ratio of positive domain = 4370 / 10132 = 0.43130675088827475
pruning-in-iteration extra time: 0.0056307315826416016
Time: prepare 0.2252    bound 0.4179    transfer 0.0601    finalize 0.2432    func 0.9476    
Accumulated time: func 4.2838    prepare 0.7449    bound 2.8459    transfer 0.2588    finalize 0.4314    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05255 (22), -0.05152 (22), -0.05085 (22), -0.05076 (22), -0.05029 (22), -0.04983 (22), -0.04973 (22), -0.04906 (22), -0.04883 (22), -0.04850 (22), -0.04814 (22), -0.04804 (22), -0.04759 (22), -0.04704 (22), -0.04635 (22), -0.04592 (22), -0.04580 (22), -0.04507 (22), -0.04486 (22), -0.04440 (22), 
Length of domains: 5762
Time: pickout 0.0914    decision 0.4939    set_bounds 0.2430    solve 0.9496    add 0.1570    
Accumulated time: pickout 0.3838    decision 1.5761    set_bounds 1.1151    solve 4.2921    add 1.2304    
Current (lb-rhs): -0.05254697799682617
22222 domains visited
Cumulative time: 8.780000686645508

BaB round 13
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 5762
splitting decisions: 
split level 0: [/input-8, 1622] [/input-8, 1068] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1068] [/input-8, 1622] [/input-8, 1622] [/input-8, 1068] [/input-8, 1622] 
pruning_in_iteration open status: True
ratio of positive domain = 5992 / 11524 = 0.5199583477959042
pruning-in-iteration extra time: 0.005773782730102539
Time: prepare 0.2549    bound 0.4275    transfer 0.0649    finalize 0.0755    func 0.8239    
Accumulated time: func 5.1076    prepare 1.0002    bound 3.2734    transfer 0.3237    finalize 0.5069    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05108 (23), -0.05006 (23), -0.04939 (23), -0.04929 (23), -0.04883 (23), -0.04837 (23), -0.04827 (23), -0.04760 (23), -0.04737 (23), -0.04704 (23), -0.04668 (23), -0.04658 (23), -0.04613 (23), -0.04558 (23), -0.04487 (23), -0.04452 (23), -0.04434 (23), -0.04360 (23), -0.04343 (23), -0.04302 (23), 
Length of domains: 5532
Time: pickout 0.1019    decision 0.3495    set_bounds 0.4363    solve 0.8260    add 0.1637    
Accumulated time: pickout 0.4857    decision 1.9256    set_bounds 1.5514    solve 5.1181    add 1.3941    
Current (lb-rhs): -0.05108380317687988
27754 domains visited
Cumulative time: 10.705748081207275

BaB round 14
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0041
batch: 5532
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1693] [/input-8, 1765] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1765] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
pruning_in_iteration open status: True
ratio of positive domain = 6637 / 11064 = 0.5998734634851772
pruning-in-iteration extra time: 0.005938053131103516
Time: prepare 0.2520    bound 0.4170    transfer 0.0652    finalize 0.0706    func 0.8069    
Accumulated time: func 5.9145    prepare 1.2525    bound 3.6904    transfer 0.3890    finalize 0.5775    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04801 (24), -0.04698 (24), -0.04631 (24), -0.04621 (24), -0.04574 (24), -0.04525 (24), -0.04518 (24), -0.04450 (24), -0.04424 (24), -0.04393 (24), -0.04355 (24), -0.04345 (24), -0.04300 (24), -0.04244 (24), -0.04175 (24), -0.04143 (24), -0.04120 (24), -0.04050 (24), -0.04035 (24), -0.03992 (24), 
Length of domains: 4427
Time: pickout 0.0951    decision 0.5245    set_bounds 0.4250    solve 0.8096    add 0.1587    
Accumulated time: pickout 0.5808    decision 2.4502    set_bounds 1.9764    solve 5.9277    add 1.5528    
Current (lb-rhs): -0.04801344871520996
32181 domains visited
Cumulative time: 12.770864725112915

BaB round 15
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0062
batch: 4427
splitting decisions: 
split level 0: [/input-12, 86] [/input-12, 86] [/input-8, 1057] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-8, 1651] [/input-12, 86] [/input-12, 86] [/input-12, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 3865 / 8854 = 0.4365258640162638
pruning-in-iteration extra time: 0.005965232849121094
Time: prepare 0.2091    bound 0.4102    transfer 0.0523    finalize 0.0502    func 0.7228    
Accumulated time: func 6.6373    prepare 1.4620    bound 4.1006    transfer 0.4413    finalize 0.6277    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04459 (25), -0.04355 (25), -0.04288 (25), -0.04276 (25), -0.04231 (25), -0.04173 (25), -0.04106 (25), -0.04048 (25), -0.04023 (25), -0.03922 (25), -0.03852 (25), -0.03842 (25), -0.03839 (25), -0.03837 (25), -0.03798 (25), -0.03782 (25), -0.03742 (25), -0.03737 (25), -0.03735 (25), -0.03714 (25), 
Length of domains: 4989
Time: pickout 0.0894    decision 0.2818    set_bounds 0.3858    solve 0.7249    add 0.1449    
Accumulated time: pickout 0.6702    decision 2.7319    set_bounds 2.3622    solve 6.6526    add 1.6976    
Current (lb-rhs): -0.044585227966308594
37170 domains visited
Cumulative time: 14.441694259643555

BaB round 16
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts: total 464 constraints, 32081 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4323
batch: 4989
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1651] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1651] [/input-8, 1651] [/input-8, 1057] [/input-8, 1057] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.041925907135009766

all verified at 6th iter
pruning_in_iteration open status: True
ratio of positive domain = 9978 / 9978 = 1.0
pruning-in-iteration extra time: 0.0017108917236328125
Time: prepare 0.2286    bound 0.4227    transfer 0.0590    finalize 0.0567    func 0.8300    
Accumulated time: func 7.4673    prepare 1.6909    bound 4.5233    transfer 0.5003    finalize 0.6844    
all_split False
Length of domains: 0
Time: pickout 0.1159    decision 0.3049    set_bounds 0.4120    solve 0.8333    add 0.0002    
Accumulated time: pickout 0.7861    decision 3.0369    set_bounds 2.7742    solve 7.4858    add 1.6978    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
37170 domains visited
Cumulative time: 16.597506523132324

found process to kill: terminal indx = 5
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=5_30578717.log

Properties batch 8, size 1
Remaining timeout: 180.81458640098572
Verifying property 8 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55310184]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
        -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55310184]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 550
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 867
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts: total 342 constraints, 29436 nonzero elements
cuts preparing time: 0.0115
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.2524452209472656
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts: total 342 constraints, 29436 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2535
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17013317346572876
10 lb beta sum: 11.11879825592041, worst -0.1359620988368988
pruning_in_iteration open status: True
ratio of positive domain = 230 / 256 = 0.8984375
pruning-in-iteration extra time: 0.005286693572998047
Time: prepare 0.0020    bound 0.3239    transfer 0.0015    finalize 0.0024    func 0.3317    
Accumulated time: func 0.3317    prepare 0.0025    bound 0.3239    transfer 0.0015    finalize 0.0024    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13150 (8), -0.12341 (8), -0.10265 (8), -0.10146 (8), -0.09302 (8), -0.08989 (8), -0.07376 (8), -0.06427 (8), -0.06219 (8), -0.05409 (8), -0.05262 (8), -0.05150 (8), -0.05032 (8), -0.04679 (8), -0.03228 (8), -0.02706 (8), -0.02684 (8), -0.02619 (8), -0.02362 (8), -0.01792 (8), 
Length of domains: 26
Time: pickout 0.0006    decision 0.0233    set_bounds 0.0165    solve 0.3318    add 0.0469    
Accumulated time: pickout 0.0006    decision 0.0233    set_bounds 0.0165    solve 0.3318    add 0.0469    
Current (lb-rhs): -0.13150271773338318
26 domains visited
Cumulative time: 0.9368932247161865

BaB round 2
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0010
batch: 26
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-8, 1626] [/input-8, 1692] [/input-8, 1626] [/input-8, 1626] [/input-8, 1692] [/input-8, 1635] [/input-8, 1626] [/input-8, 1626] [/input-8, 1692] [/input-8, 1626] 
split level 2: [/input-8, 1716] [/input-8, 1626] [/input-8, 1700] [/input-8, 1700] [/input-8, 1626] [/input-8, 1626] [/input-8, 1700] [/input-8, 1716] [/input-8, 1626] [/input-8, 1700] 
cut re-enabled after branching node selection
0 lb beta sum: 3.4450795650482178, worst -0.10905492305755615
10 lb beta sum: 12.052806854248047, worst -0.113723024725914
pruning_in_iteration open status: True
ratio of positive domain = 149 / 208 = 0.7163461538461539
pruning-in-iteration extra time: 0.00551605224609375
Time: prepare 0.0093    bound 0.3399    transfer 0.0016    finalize 0.0019    func 0.3545    
Accumulated time: func 0.6861    prepare 0.0120    bound 0.6638    transfer 0.0032    finalize 0.0043    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10905 (11), -0.10263 (11), -0.09939 (11), -0.09808 (11), -0.09187 (11), -0.08937 (11), -0.07973 (11), -0.07858 (11), -0.07658 (11), -0.07082 (11), -0.07052 (11), -0.06914 (11), -0.06903 (11), -0.06903 (11), -0.06847 (11), -0.06782 (11), -0.06191 (11), -0.06072 (11), -0.06027 (11), -0.05834 (11), 
Length of domains: 59
Time: pickout 0.0012    decision 0.0129    set_bounds 0.0085    solve 0.3545    add 0.0752    
Accumulated time: pickout 0.0018    decision 0.0362    set_bounds 0.0250    solve 0.6863    add 0.1221    
Current (lb-rhs): -0.10905492305755615
85 domains visited
Cumulative time: 1.3962068557739258

BaB round 3
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0013
batch: 59
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1700] [/input-8, 1635] [/input-8, 1964] [/input-8, 1692] [/input-8, 1692] [/input-8, 1700] [/input-8, 1635] [/input-8, 1692] [/input-12, 7] [/input-8, 1626] 
split level 1: [/input-8, 1716] [/input-8, 1692] [/input-8, 1692] [/input-12, 7] [/input-12, 7] [/input-8, 1716] [/input-12, 7] [/input-12, 7] [/input-8, 1700] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 3.3783376216888428, worst -0.10106641054153442
10 lb beta sum: 6.224964618682861, worst -0.10394430160522461
pruning_in_iteration open status: True
ratio of positive domain = 114 / 236 = 0.48305084745762716
pruning-in-iteration extra time: 0.005359649658203125
Time: prepare 0.0113    bound 0.4501    transfer 0.0036    finalize 0.0027    func 0.4703    
Accumulated time: func 1.1565    prepare 0.0236    bound 1.1139    transfer 0.0068    finalize 0.0069    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09928 (13), -0.08901 (13), -0.08672 (13), -0.08578 (13), -0.08160 (13), -0.07998 (13), -0.07800 (13), -0.07566 (13), -0.07490 (13), -0.07484 (13), -0.07191 (13), -0.07113 (13), -0.06959 (13), -0.06943 (13), -0.06747 (13), -0.06636 (13), -0.06402 (13), -0.06330 (13), -0.06255 (13), -0.06067 (13), 
Length of domains: 122
Time: pickout 0.0132    decision 0.0275    set_bounds 0.0092    solve 0.4705    add 0.0808    
Accumulated time: pickout 0.0150    decision 0.0637    set_bounds 0.0342    solve 1.1567    add 0.2029    
Current (lb-rhs): -0.09928248822689056
207 domains visited
Cumulative time: 2.0087215900421143

BaB round 4
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0013
batch: 122
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-8, 468] [/input-12, 7] [/input-8, 1716] [/input-8, 1716] [/input-8, 1635] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 3.333314895629883, worst -0.09126545488834381
10 lb beta sum: 5.018684387207031, worst -0.09544742107391357
pruning_in_iteration open status: True
ratio of positive domain = 86 / 244 = 0.35245901639344257
pruning-in-iteration extra time: 0.004544973373413086
Time: prepare 0.0116    bound 0.4293    transfer 0.0031    finalize 0.0019    func 0.4482    
Accumulated time: func 1.6047    prepare 0.0354    bound 1.5432    transfer 0.0099    finalize 0.0088    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09114 (14), -0.08969 (14), -0.08050 (14), -0.07881 (14), -0.07824 (14), -0.07766 (14), -0.07696 (14), -0.07160 (14), -0.07131 (14), -0.06993 (14), -0.06800 (14), -0.06675 (14), -0.06650 (14), -0.06634 (14), -0.06536 (14), -0.06530 (14), -0.06296 (14), -0.06239 (14), -0.06174 (14), -0.06022 (14), 
Length of domains: 158
Time: pickout 0.0145    decision 0.0241    set_bounds 0.0058    solve 0.4483    add 0.0790    
Accumulated time: pickout 0.0295    decision 0.0878    set_bounds 0.0399    solve 1.6051    add 0.2819    
Current (lb-rhs): -0.09113790094852448
365 domains visited
Cumulative time: 2.5895016193389893

BaB round 5
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0011
batch: 158
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 468] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 468] [/input-8, 1708] [/input-8, 459] [/input-8, 1708] [/input-8, 468] 
cut re-enabled after branching node selection
0 lb beta sum: 3.342702865600586, worst -0.08510567247867584
10 lb beta sum: 4.373608589172363, worst -0.08898874372243881
pruning_in_iteration open status: True
ratio of positive domain = 78 / 316 = 0.24683544303797467
pruning-in-iteration extra time: 0.005103588104248047
Time: prepare 0.0145    bound 0.3530    transfer 0.0016    finalize 0.0021    func 0.3736    
Accumulated time: func 1.9783    prepare 0.0502    bound 1.8962    transfer 0.0114    finalize 0.0109    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08377 (15), -0.08327 (15), -0.07611 (15), -0.07450 (15), -0.07363 (15), -0.07251 (15), -0.07236 (15), -0.07234 (15), -0.07202 (15), -0.06652 (15), -0.06594 (15), -0.06570 (15), -0.06565 (15), -0.06355 (15), -0.06350 (15), -0.06236 (15), -0.06137 (15), -0.06103 (15), -0.06100 (15), -0.06100 (15), 
Length of domains: 238
Time: pickout 0.0151    decision 0.0277    set_bounds 0.0079    solve 0.3737    add 0.0764    
Accumulated time: pickout 0.0446    decision 0.1155    set_bounds 0.0479    solve 1.9788    add 0.3584    
Current (lb-rhs): -0.08377296477556229
603 domains visited
Cumulative time: 3.099283456802368

BaB round 6
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 238
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1635] [/input-8, 1969] [/input-8, 468] [/input-8, 1635] [/input-8, 1969] [/input-8, 468] [/input-8, 420] [/input-8, 1635] [/input-8, 468] [/input-8, 1635] 
cut re-enabled after branching node selection
0 lb beta sum: 3.339399576187134, worst -0.08377296477556229
10 lb beta sum: 4.673895835876465, worst -0.08563517034053802
pruning_in_iteration open status: True
ratio of positive domain = 136 / 476 = 0.2857142857142857
pruning-in-iteration extra time: 0.0054569244384765625
Time: prepare 0.0211    bound 0.4021    transfer 0.0051    finalize 0.0035    func 0.4353    
Accumulated time: func 2.4136    prepare 0.0716    bound 2.2983    transfer 0.0165    finalize 0.0144    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08202 (16), -0.08146 (16), -0.07464 (16), -0.07350 (16), -0.07293 (16), -0.07183 (16), -0.07127 (16), -0.06941 (16), -0.06866 (16), -0.06542 (16), -0.06493 (16), -0.06479 (16), -0.06354 (16), -0.06248 (16), -0.06144 (16), -0.06040 (16), -0.06037 (16), -0.06010 (16), -0.06009 (16), -0.05988 (16), 
Length of domains: 340
Time: pickout 0.0163    decision 0.0307    set_bounds 0.0116    solve 0.4354    add 0.0848    
Accumulated time: pickout 0.0609    decision 0.1462    set_bounds 0.0595    solve 2.4142    add 0.4432    
Current (lb-rhs): -0.08201994001865387
943 domains visited
Cumulative time: 3.6874444484710693

BaB round 7
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0027
batch: 340
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 466] [/input-8, 1726] [/input-8, 1964] [/input-8, 466] [/input-8, 1726] [/input-8, 1630] [/input-8, 1964] [/input-8, 1726] [/input-8, 1964] 
cut re-enabled after branching node selection
0 lb beta sum: 3.3131320476531982, worst -0.0787377804517746
10 lb beta sum: 4.824814796447754, worst -0.08454397320747375
pruning_in_iteration open status: True
ratio of positive domain = 226 / 680 = 0.33235294117647063
pruning-in-iteration extra time: 0.00527501106262207
Time: prepare 0.0310    bound 0.4348    transfer 0.0064    finalize 0.0061    func 0.4829    
Accumulated time: func 2.8965    prepare 0.1028    bound 2.7331    transfer 0.0229    finalize 0.0206    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07822 (17), -0.07740 (17), -0.07231 (17), -0.06994 (17), -0.06930 (17), -0.06761 (17), -0.06590 (17), -0.06544 (17), -0.06482 (17), -0.06072 (17), -0.06043 (17), -0.06021 (17), -0.05933 (17), -0.05897 (17), -0.05879 (17), -0.05769 (17), -0.05704 (17), -0.05674 (17), -0.05620 (17), -0.05611 (17), 
Length of domains: 454
Time: pickout 0.0164    decision 0.0370    set_bounds 0.0157    solve 0.4831    add 0.0865    
Accumulated time: pickout 0.0773    decision 0.1832    set_bounds 0.0751    solve 2.8973    add 0.5297    
Current (lb-rhs): -0.07822044938802719
1397 domains visited
Cumulative time: 4.337496042251587

BaB round 8
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0010
batch: 454
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1716] [/input-8, 1726] [/input-8, 1716] [/input-8, 1716] [/input-8, 1726] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1726] [/input-8, 1716] 
cut re-enabled after branching node selection
0 lb beta sum: 3.306173086166382, worst -0.0769258663058281
10 lb beta sum: 4.679569721221924, worst -0.08203467726707458
pruning_in_iteration open status: True
ratio of positive domain = 268 / 908 = 0.2951541850220264
pruning-in-iteration extra time: 0.005837917327880859
Time: prepare 0.0412    bound 0.4450    transfer 0.0061    finalize 0.0049    func 0.5033    
Accumulated time: func 3.3998    prepare 0.1443    bound 3.1780    transfer 0.0290    finalize 0.0255    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07693 (18), -0.07616 (18), -0.07104 (18), -0.06867 (18), -0.06805 (18), -0.06535 (18), -0.06451 (18), -0.06337 (18), -0.06237 (18), -0.05952 (18), -0.05727 (18), -0.05708 (18), -0.05651 (18), -0.05649 (18), -0.05614 (18), -0.05555 (18), -0.05506 (18), -0.05432 (18), -0.05416 (18), -0.05403 (18), 
Length of domains: 640
Time: pickout 0.0180    decision 0.0418    set_bounds 0.0212    solve 0.5036    add 0.0839    
Accumulated time: pickout 0.0953    decision 0.2250    set_bounds 0.0964    solve 3.4009    add 0.6136    
Current (lb-rhs): -0.0769258663058281
2037 domains visited
Cumulative time: 5.0159056186676025

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0013
batch: 640
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 466] [/input-8, 459] [/input-8, 466] [/input-8, 459] [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 1716] [/input-8, 459] 
cut re-enabled after branching node selection
0 lb beta sum: 3.300379991531372, worst -0.06890536099672318
10 lb beta sum: 4.808131217956543, worst -0.07444513589143753
pruning_in_iteration open status: True
ratio of positive domain = 392 / 1280 = 0.30625
pruning-in-iteration extra time: 0.00533604621887207
Time: prepare 0.0574    bound 0.4252    transfer 0.0147    finalize 0.0077    func 0.5136    
Accumulated time: func 3.9133    prepare 0.2019    bound 3.6033    transfer 0.0437    finalize 0.0332    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06815 (19), -0.06768 (19), -0.06730 (19), -0.06654 (19), -0.06155 (19), -0.06102 (19), -0.06053 (19), -0.05933 (19), -0.05905 (19), -0.05874 (19), -0.05646 (19), -0.05637 (19), -0.05587 (19), -0.05527 (19), -0.05513 (19), -0.05390 (19), -0.05354 (19), -0.05230 (19), -0.05219 (19), -0.04960 (19), 
Length of domains: 888
Time: pickout 0.0202    decision 0.2148    set_bounds 0.0301    solve 0.5147    add 0.0957    
Accumulated time: pickout 0.1155    decision 0.4399    set_bounds 0.1265    solve 3.9156    add 0.7093    
Current (lb-rhs): -0.06814669072628021
2925 domains visited
Cumulative time: 5.908777952194214

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0015
batch: 888
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1630] [/input-8, 1969] [/input-8, 1969] [/input-8, 1969] [/input-8, 1969] [/input-8, 1969] [/input-8, 1630] [/input-8, 1630] [/input-8, 1630] [/input-8, 1717] 
cut re-enabled after branching node selection
0 lb beta sum: 3.297856569290161, worst -0.06054386869072914
10 lb beta sum: 5.2561564445495605, worst -0.06740892678499222
pruning_in_iteration open status: True
ratio of positive domain = 707 / 1776 = 0.3980855855855856
pruning-in-iteration extra time: 0.005254030227661133
Time: prepare 0.0773    bound 0.4614    transfer 0.0151    finalize 0.0126    func 0.5782    
Accumulated time: func 4.4915    prepare 0.2795    bound 4.0647    transfer 0.0588    finalize 0.0457    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05930 (20), -0.05918 (20), -0.05877 (20), -0.05858 (20), -0.05827 (20), -0.05781 (20), -0.05764 (20), -0.05757 (20), -0.05390 (20), -0.05372 (20), -0.05312 (20), -0.05293 (20), -0.05290 (20), -0.05160 (20), -0.05055 (20), -0.05000 (20), -0.04974 (20), -0.04937 (20), -0.04923 (20), -0.04904 (20), 
Length of domains: 1069
Time: pickout 0.0409    decision 0.0729    set_bounds 0.0436    solve 0.5787    add 0.0949    
Accumulated time: pickout 0.1563    decision 0.5128    set_bounds 0.1701    solve 4.4943    add 0.8042    
Current (lb-rhs): -0.05929610878229141
3994 domains visited
Cumulative time: 6.752197265625

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts: total 545 constraints, 49275 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4171
batch: 1069
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1708] [/input-8, 1969] [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 466] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09166508913040161
10 lb beta sum: 4.954412937164307, worst -0.05837179720401764
pruning_in_iteration open status: True
ratio of positive domain = 1141 / 2138 = 0.5336763330215155
pruning-in-iteration extra time: 0.0018384456634521484
Time: prepare 0.0410    bound 0.4842    transfer 0.0127    finalize 0.0114    func 0.5634    
Accumulated time: func 5.0549    prepare 0.3208    bound 4.5490    transfer 0.0716    finalize 0.0571    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04800 (21), -0.04770 (21), -0.04718 (21), -0.04712 (21), -0.04676 (21), -0.04660 (21), -0.04654 (21), -0.04537 (21), -0.04295 (21), -0.04268 (21), -0.04174 (21), -0.04164 (21), -0.04096 (21), -0.04071 (21), -0.04027 (21), -0.04013 (21), -0.03981 (21), -0.03963 (21), -0.03928 (21), -0.03886 (21), 
Length of domains: 997
Time: pickout 0.0383    decision 0.0742    set_bounds 0.1883    solve 0.5646    add 0.0926    
Accumulated time: pickout 0.1946    decision 0.5870    set_bounds 0.3583    solve 5.0589    add 0.8968    
Current (lb-rhs): -0.04799775406718254
4991 domains visited
Cumulative time: 8.142292022705078

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0020
batch: 997
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 466] 
cut re-enabled after branching node selection
0 lb beta sum: 4.521423816680908, worst -0.042693160474300385
10 lb beta sum: 6.773691654205322, worst -0.05428902804851532
pruning_in_iteration open status: True
ratio of positive domain = 709 / 1994 = 0.3555667001003009
pruning-in-iteration extra time: 0.004811525344848633
Time: prepare 0.0882    bound 0.4536    transfer 0.0142    finalize 0.0131    func 0.5835    
Accumulated time: func 5.6384    prepare 0.4092    bound 5.0026    transfer 0.0858    finalize 0.0702    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04269 (22), -0.04242 (22), -0.04181 (22), -0.04159 (22), -0.04132 (22), -0.04126 (22), -0.04094 (22), -0.03980 (22), -0.03976 (22), -0.03949 (22), -0.03942 (22), -0.03889 (22), -0.03885 (22), -0.03881 (22), -0.03830 (22), -0.03752 (22), -0.03744 (22), -0.03738 (22), -0.03714 (22), -0.03644 (22), 
Length of domains: 1285
Time: pickout 0.0318    decision 0.0781    set_bounds 0.0445    solve 0.5839    add 0.0952    
Accumulated time: pickout 0.2265    decision 0.6651    set_bounds 0.4029    solve 5.6428    add 0.9919    
Current (lb-rhs): -0.042693160474300385
6276 domains visited
Cumulative time: 8.988690614700317

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0016
batch: 1285
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1714] [/input-8, 1964] 
cut re-enabled after branching node selection
0 lb beta sum: 4.529688835144043, worst -0.03752037137746811
10 lb beta sum: 7.901554107666016, worst -0.04939521849155426
pruning_in_iteration open status: True
ratio of positive domain = 1146 / 2570 = 0.4459143968871595
pruning-in-iteration extra time: 0.004935503005981445
Time: prepare 0.1139    bound 0.5396    transfer 0.0166    finalize 0.0136    func 0.7017    
Accumulated time: func 6.3401    prepare 0.5234    bound 5.5422    transfer 0.1024    finalize 0.0839    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03752 (23), -0.03662 (23), -0.03614 (23), -0.03614 (23), -0.03606 (23), -0.03583 (23), -0.03567 (23), -0.03551 (23), -0.03545 (23), -0.03515 (23), -0.03514 (23), -0.03510 (23), -0.03492 (23), -0.03465 (23), -0.03421 (23), -0.03394 (23), -0.03379 (23), -0.03374 (23), -0.03369 (23), -0.03369 (23), 
Length of domains: 1424
Time: pickout 0.0373    decision 0.0853    set_bounds 0.0552    solve 0.7023    add 0.0979    
Accumulated time: pickout 0.2638    decision 0.7503    set_bounds 0.4581    solve 6.3451    add 1.0899    
Current (lb-rhs): -0.03752034157514572
7700 domains visited
Cumulative time: 9.982727289199829

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0024
batch: 1424
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1630] [/input-8, 1717] [/input-8, 1695] 
cut re-enabled after branching node selection
0 lb beta sum: 4.5772552490234375, worst -0.03531583398580551
10 lb beta sum: 6.932040691375732, worst -0.0471012145280838
pruning_in_iteration open status: True
ratio of positive domain = 1021 / 2848 = 0.358497191011236
pruning-in-iteration extra time: 0.004728794097900391
Time: prepare 0.1352    bound 0.5319    transfer 0.0193    finalize 0.0169    func 0.7232    
Accumulated time: func 7.0632    prepare 0.6588    bound 6.0741    transfer 0.1217    finalize 0.1008    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03387 (24), -0.03339 (24), -0.03331 (24), -0.03323 (24), -0.03309 (24), -0.03259 (24), -0.03245 (24), -0.03243 (24), -0.03223 (24), -0.03221 (24), -0.03218 (24), -0.03199 (24), -0.03191 (24), -0.03112 (24), -0.03094 (24), -0.03083 (24), -0.03077 (24), -0.03061 (24), -0.03046 (24), -0.03031 (24), 
Length of domains: 1827
Time: pickout 0.0376    decision 0.0922    set_bounds 0.2158    solve 0.7238    add 0.0988    
Accumulated time: pickout 0.3013    decision 0.8425    set_bounds 0.6738    solve 7.0689    add 1.1887    
Current (lb-rhs): -0.03387366980314255
9527 domains visited
Cumulative time: 11.166244745254517

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0020
batch: 1827
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 420] [/input-8, 420] 
cut re-enabled after branching node selection
0 lb beta sum: 4.6131591796875, worst -0.030633386224508286
10 lb beta sum: 8.055468559265137, worst -0.04544606804847717
pruning_in_iteration open status: True
ratio of positive domain = 2014 / 3654 = 0.5511767925561029
pruning-in-iteration extra time: 0.004910707473754883
Time: prepare 0.1744    bound 0.6152    transfer 0.0181    finalize 0.0195    func 0.8511    
Accumulated time: func 7.9143    prepare 0.8334    bound 6.6893    transfer 0.1398    finalize 0.1203    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03063 (25), -0.03020 (25), -0.03013 (25), -0.03012 (25), -0.02987 (25), -0.02941 (25), -0.02931 (25), -0.02906 (25), -0.02899 (25), -0.02897 (25), -0.02877 (25), -0.02870 (25), -0.02858 (25), -0.02800 (25), -0.02769 (25), -0.02763 (25), -0.02757 (25), -0.02719 (25), -0.02719 (25), -0.02717 (25), 
Length of domains: 1640
Time: pickout 0.0447    decision 0.1151    set_bounds 0.0783    solve 0.8525    add 0.0946    
Accumulated time: pickout 0.3461    decision 0.9575    set_bounds 0.7521    solve 7.9214    add 1.2833    
Current (lb-rhs): -0.030633386224508286
11167 domains visited
Cumulative time: 12.372405529022217

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0018
batch: 1640
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 438] [/input-8, 438] [/input-8, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 4.616903305053711, worst -0.02713443897664547
10 lb beta sum: 7.407934188842773, worst -0.04038944095373154
pruning_in_iteration open status: True
ratio of positive domain = 1312 / 3280 = 0.4
pruning-in-iteration extra time: 0.004891157150268555
Time: prepare 0.1489    bound 0.5837    transfer 0.0158    finalize 0.0172    func 0.7877    
Accumulated time: func 8.7020    prepare 0.9825    bound 7.2730    transfer 0.1556    finalize 0.1375    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02713 (26), -0.02706 (26), -0.02639 (26), -0.02629 (26), -0.02626 (26), -0.02595 (26), -0.02578 (26), -0.02566 (26), -0.02554 (26), -0.02546 (26), -0.02502 (26), -0.02491 (26), -0.02474 (26), -0.02458 (26), -0.02452 (26), -0.02446 (26), -0.02431 (26), -0.02429 (26), -0.02429 (26), -0.02428 (26), 
Length of domains: 1968
Time: pickout 0.0408    decision 0.1035    set_bounds 0.2192    solve 0.7884    add 0.0958    
Accumulated time: pickout 0.3868    decision 1.0610    set_bounds 0.9713    solve 8.7098    add 1.3791    
Current (lb-rhs): -0.027126148343086243
13135 domains visited
Cumulative time: 13.644421339035034

BaB round 17
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0018
batch: 1968
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1695] [/input-8, 1268] [/input-8, 1268] [/input-8, 1268] [/input-8, 1268] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] 
cut re-enabled after branching node selection
0 lb beta sum: 4.666614055633545, worst -0.02396385744214058
10 lb beta sum: 6.990422248840332, worst -0.03634568303823471
pruning_in_iteration open status: True
ratio of positive domain = 1480 / 3936 = 0.3760162601626016
pruning-in-iteration extra time: 0.0048100948333740234
Time: prepare 0.1786    bound 0.6974    transfer 0.0265    finalize 0.0252    func 0.9543    
Accumulated time: func 9.6563    prepare 1.1614    bound 7.9704    transfer 0.1821    finalize 0.1627    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02296 (27), -0.02279 (27), -0.02268 (27), -0.02252 (27), -0.02235 (27), -0.02226 (27), -0.02200 (27), -0.02188 (27), -0.02182 (27), -0.02175 (27), -0.02173 (27), -0.02168 (27), -0.02165 (27), -0.02162 (27), -0.02155 (27), -0.02153 (27), -0.02148 (27), -0.02146 (27), -0.02144 (27), -0.02137 (27), 
Length of domains: 2456
Time: pickout 0.0509    decision 0.1222    set_bounds 0.0849    solve 0.9551    add 0.0988    
Accumulated time: pickout 0.4378    decision 1.1832    set_bounds 1.0562    solve 9.6649    add 1.4780    
Current (lb-rhs): -0.022960416972637177
15591 domains visited
Cumulative time: 14.974331617355347

BaB round 18
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0025
batch: 2456
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1717] [/input-8, 1972] [/input-8, 1268] [/input-8, 1268] [/input-8, 1695] [/input-8, 1695] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] 
cut re-enabled after branching node selection
0 lb beta sum: 4.685818672180176, worst -0.01995953917503357
10 lb beta sum: 7.597869396209717, worst -0.03195767104625702
pruning_in_iteration open status: True
ratio of positive domain = 2061 / 4912 = 0.4195846905537459
pruning-in-iteration extra time: 0.0047757625579833984
Time: prepare 0.2205    bound 0.8163    transfer 0.0249    finalize 0.0257    func 1.1204    
Accumulated time: func 10.7767    prepare 1.3822    bound 8.7867    transfer 0.2070    finalize 0.1883    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01996 (28), -0.01979 (28), -0.01909 (28), -0.01893 (28), -0.01891 (28), -0.01888 (28), -0.01882 (28), -0.01862 (28), -0.01861 (28), -0.01860 (28), -0.01856 (28), -0.01851 (28), -0.01847 (28), -0.01828 (28), -0.01826 (28), -0.01825 (28), -0.01823 (28), -0.01823 (28), -0.01818 (28), -0.01814 (28), 
Length of domains: 2851
Time: pickout 0.0552    decision 0.2934    set_bounds 0.1065    solve 1.1223    add 0.1022    
Accumulated time: pickout 0.4930    decision 1.4766    set_bounds 1.1627    solve 10.7872    add 1.5802    
Current (lb-rhs): -0.01995953917503357
18442 domains visited
Cumulative time: 16.67608141899109

BaB round 19
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0021
batch: 2851
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1622] [/input-8, 459] [/input-8, 1622] [/input-8, 1622] [/input-8, 459] [/input-8, 459] [/input-8, 1622] [/input-8, 1622] [/input-8, 459] [/input-8, 1622] 
cut re-enabled after branching node selection
0 lb beta sum: 4.699646472930908, worst -0.01881890743970871
10 lb beta sum: 7.577754020690918, worst -0.030204646289348602
pruning_in_iteration open status: True
ratio of positive domain = 2788 / 5702 = 0.48895124517713084
pruning-in-iteration extra time: 0.004796266555786133
Time: prepare 0.2552    bound 0.9485    transfer 0.0343    finalize 0.0284    func 1.3038    
Accumulated time: func 12.0804    prepare 1.6377    bound 9.7352    transfer 0.2413    finalize 0.2167    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01849 (29), -0.01827 (29), -0.01761 (29), -0.01744 (29), -0.01744 (29), -0.01743 (29), -0.01742 (29), -0.01732 (29), -0.01717 (29), -0.01716 (29), -0.01714 (29), -0.01708 (29), -0.01700 (29), -0.01697 (29), -0.01696 (29), -0.01694 (29), -0.01688 (29), -0.01671 (29), -0.01670 (29), -0.01663 (29), 
Length of domains: 2914
Time: pickout 0.0608    decision 0.1689    set_bounds 0.2777    solve 1.3059    add 0.0982    
Accumulated time: pickout 0.5537    decision 1.6456    set_bounds 1.4404    solve 12.0930    add 1.6784    
Current (lb-rhs): -0.018485933542251587
21356 domains visited
Cumulative time: 18.611743450164795

BaB round 20
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts: total 720 constraints, 53206 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4469
batch: 2914
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1588] [/input-8, 1964] [/input-8, 1972] [/input-8, 1972] [/input-8, 1964] [/input-8, 1972] [/input-8, 1588] [/input-8, 1972] [/input-8, 1972] [/input-8, 1588] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.053731054067611694
10 lb beta sum: 5.504223346710205, worst -0.026419758796691895
pruning_in_iteration open status: True
ratio of positive domain = 3346 / 5828 = 0.5741249142072753
pruning-in-iteration extra time: 0.0003142356872558594
Time: prepare 0.1213    bound 1.3535    transfer 0.0342    finalize 0.0278    func 1.5766    
Accumulated time: func 13.6570    prepare 1.7592    bound 11.0887    transfer 0.2755    finalize 0.2445    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01546 (30), -0.01440 (30), -0.01422 (30), -0.01413 (30), -0.01410 (30), -0.01404 (30), -0.01386 (30), -0.01386 (30), -0.01382 (30), -0.01378 (30), -0.01378 (30), -0.01369 (30), -0.01363 (30), -0.01362 (30), -0.01358 (30), -0.01357 (30), -0.01348 (30), -0.01343 (30), -0.01340 (30), -0.01333 (30), 
Length of domains: 2482
Time: pickout 0.0642    decision 0.3139    set_bounds 0.1273    solve 1.5778    add 0.0971    
Accumulated time: pickout 0.6179    decision 1.9595    set_bounds 1.5677    solve 13.6708    add 1.7755    
Current (lb-rhs): -0.015458188951015472
23838 domains visited
Cumulative time: 21.26781964302063

BaB round 21
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0032
batch: 2482
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] 
cut re-enabled after branching node selection
0 lb beta sum: 5.170103549957275, worst -0.014320068061351776
10 lb beta sum: 8.001763343811035, worst -0.023564055562019348
pruning_in_iteration open status: True
ratio of positive domain = 2680 / 4964 = 0.539887187751813
pruning-in-iteration extra time: 0.0048885345458984375
Time: prepare 0.2256    bound 0.9834    transfer 0.0259    finalize 0.0276    func 1.2957    
Accumulated time: func 14.9527    prepare 1.9851    bound 12.0721    transfer 0.3014    finalize 0.2721    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01383 (31), -0.01339 (31), -0.01335 (31), -0.01330 (31), -0.01319 (31), -0.01307 (31), -0.01306 (31), -0.01294 (31), -0.01293 (31), -0.01292 (31), -0.01287 (31), -0.01268 (31), -0.01265 (31), -0.01261 (31), -0.01253 (31), -0.01252 (31), -0.01248 (31), -0.01244 (31), -0.01244 (31), -0.01238 (31), 
Length of domains: 2284
Time: pickout 0.0555    decision 0.2957    set_bounds 0.1078    solve 1.2976    add 0.0996    
Accumulated time: pickout 0.6735    decision 2.2552    set_bounds 1.6755    solve 14.9684    add 1.8751    
Current (lb-rhs): -0.013827398419380188
26122 domains visited
Cumulative time: 23.153858184814453

BaB round 22
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0023
batch: 2284
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] [/input-8, 506] 
cut re-enabled after branching node selection
0 lb beta sum: 5.058155536651611, worst -0.013139002025127411
10 lb beta sum: 12.710369110107422, worst -0.02177278697490692
pruning_in_iteration open status: True
ratio of positive domain = 3029 / 4568 = 0.6630910683012259
pruning-in-iteration extra time: 0.004764556884765625
Time: prepare 0.2094    bound 0.7785    transfer 0.0353    finalize 0.0305    func 1.0838    
Accumulated time: func 16.0365    prepare 2.1948    bound 12.8506    transfer 0.3367    finalize 0.3026    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01058 (32), -0.01054 (32), -0.01047 (32), -0.01042 (32), -0.01031 (32), -0.01014 (32), -0.01013 (32), -0.01013 (32), -0.01010 (32), -0.01004 (32), -0.01003 (32), -0.00995 (32), -0.00994 (32), -0.00991 (32), -0.00984 (32), -0.00978 (32), -0.00975 (32), -0.00967 (32), -0.00965 (32), -0.00964 (32), 
Length of domains: 1539
Time: pickout 0.0533    decision 0.1393    set_bounds 0.2402    solve 1.0847    add 0.1014    
Accumulated time: pickout 0.7268    decision 2.3945    set_bounds 1.9157    solve 16.0531    add 1.9765    
Current (lb-rhs): -0.010580264031887054
27661 domains visited
Cumulative time: 24.79737639427185

BaB round 23
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0032
batch: 1539
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
cut re-enabled after branching node selection
0 lb beta sum: 5.027808666229248, worst -0.010580204427242279
10 lb beta sum: 10.582056045532227, worst -0.020348861813545227
pruning_in_iteration open status: True
ratio of positive domain = 1836 / 3078 = 0.5964912280701755
pruning-in-iteration extra time: 0.0048787593841552734
Time: prepare 0.1431    bound 0.5914    transfer 0.0146    finalize 0.0189    func 0.7891    
Accumulated time: func 16.8255    prepare 2.3381    bound 13.4420    transfer 0.3513    finalize 0.3215    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01058 (33), -0.00995 (33), -0.00990 (33), -0.00979 (33), -0.00978 (33), -0.00964 (33), -0.00951 (33), -0.00929 (33), -0.00925 (33), -0.00924 (33), -0.00904 (33), -0.00903 (33), -0.00900 (33), -0.00895 (33), -0.00891 (33), -0.00881 (33), -0.00879 (33), -0.00878 (33), -0.00877 (33), -0.00875 (33), 
Length of domains: 1242
Time: pickout 0.0445    decision 0.0995    set_bounds 0.0671    solve 0.7898    add 0.0987    
Accumulated time: pickout 0.7714    decision 2.4940    set_bounds 1.9828    solve 16.8429    add 2.0752    
Current (lb-rhs): -0.010580204427242279
28903 domains visited
Cumulative time: 25.915016174316406

BaB round 24
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0024
batch: 1242
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 4.973870277404785, worst -0.008712701499462128
10 lb beta sum: 16.420934677124023, worst -0.018728062510490417
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 1733 / 2484 = 0.6976650563607085
pruning-in-iteration extra time: 0.0032296180725097656
Time: prepare 0.1117    bound 0.2923    transfer 0.0071    finalize 0.0120    func 0.5749    
Accumulated time: func 17.4004    prepare 2.4501    bound 13.7342    transfer 0.3585    finalize 0.3335    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00871 (34), -0.00806 (34), -0.00805 (34), -0.00794 (34), -0.00792 (34), -0.00779 (34), -0.00758 (34), -0.00743 (34), -0.00732 (34), -0.00732 (34), -0.00715 (34), -0.00713 (34), -0.00712 (34), -0.00704 (34), -0.00703 (34), -0.00692 (34), -0.00689 (34), -0.00688 (34), -0.00687 (34), -0.00686 (34), 
Length of domains: 751
Time: pickout 0.0383    decision 0.0825    set_bounds 0.0514    solve 0.5754    add 0.0922    
Accumulated time: pickout 0.8097    decision 2.5765    set_bounds 2.0342    solve 17.4184    add 2.1675    
Current (lb-rhs): -0.008712701499462128
29654 domains visited
Cumulative time: 26.774812936782837

BaB round 25
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0027
batch: 751
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] 
cut re-enabled after branching node selection
0 lb beta sum: 4.955749988555908, worst -0.011848628520965576
10 lb beta sum: 10.881795883178711, worst -0.017390958964824677
pruning_in_iteration open status: True
ratio of positive domain = 1085 / 1502 = 0.7223701731025299
pruning-in-iteration extra time: 0.0048711299896240234
Time: prepare 0.0728    bound 0.4359    transfer 0.0043    finalize 0.0070    func 0.5309    
Accumulated time: func 17.9313    prepare 2.5231    bound 14.1701    transfer 0.3627    finalize 0.3405    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00681 (35), -0.00653 (35), -0.00642 (35), -0.00609 (35), -0.00602 (35), -0.00602 (35), -0.00587 (35), -0.00584 (35), -0.00569 (35), -0.00564 (35), -0.00563 (35), -0.00558 (35), -0.00550 (35), -0.00547 (35), -0.00542 (35), -0.00539 (35), -0.00535 (35), -0.00525 (35), -0.00519 (35), -0.00519 (35), 
Length of domains: 417
Time: pickout 0.0313    decision 0.0566    set_bounds 0.0328    solve 0.5312    add 0.0838    
Accumulated time: pickout 0.8410    decision 2.6331    set_bounds 2.0670    solve 17.9496    add 2.2513    
Current (lb-rhs): -0.006805554032325745
30071 domains visited
Cumulative time: 27.5247220993042

BaB round 26
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0019
batch: 417
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 4.986920356750488, worst -0.0073667168617248535
10 lb beta sum: 12.208013534545898, worst -0.016433224081993103
pruning_in_iteration open status: True
ratio of positive domain = 620 / 834 = 0.7434052757793765
pruning-in-iteration extra time: 0.004750967025756836
Time: prepare 0.0364    bound 0.3162    transfer 0.0029    finalize 0.0050    func 0.3659    
Accumulated time: func 18.2972    prepare 2.5598    bound 14.4863    transfer 0.3656    finalize 0.3455    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00545 (36), -0.00520 (36), -0.00460 (36), -0.00453 (36), -0.00445 (36), -0.00434 (36), -0.00430 (36), -0.00415 (36), -0.00387 (36), -0.00377 (36), -0.00376 (36), -0.00373 (36), -0.00365 (36), -0.00365 (36), -0.00352 (36), -0.00348 (36), -0.00339 (36), -0.00334 (36), -0.00334 (36), -0.00329 (36), 
Length of domains: 214
Time: pickout 0.0227    decision 0.0383    set_bounds 0.0181    solve 0.3661    add 0.0806    
Accumulated time: pickout 0.8637    decision 2.6714    set_bounds 2.0851    solve 18.3157    add 2.3319    
Current (lb-rhs): -0.005452781915664673
30285 domains visited
Cumulative time: 28.06332564353943

BaB round 27
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0015
batch: 214
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] 
cut re-enabled after branching node selection
0 lb beta sum: 4.976031303405762, worst -0.0038805007934570312
10 lb beta sum: 28.446264266967773, worst -0.013176590204238892
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 353 / 428 = 0.8247663551401869
pruning-in-iteration extra time: 0.0032892227172851562
Time: prepare 0.0188    bound 0.1737    transfer 0.0014    finalize 0.0020    func 0.1987    
Accumulated time: func 18.4959    prepare 2.5787    bound 14.6600    transfer 0.3670    finalize 0.3475    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00388 (37), -0.00357 (37), -0.00292 (37), -0.00276 (37), -0.00275 (37), -0.00262 (37), -0.00257 (37), -0.00249 (37), -0.00216 (37), -0.00210 (37), -0.00195 (37), -0.00194 (37), -0.00192 (37), -0.00191 (37), -0.00182 (37), -0.00174 (37), -0.00165 (37), -0.00164 (37), -0.00164 (37), -0.00159 (37), 
Length of domains: 75
Time: pickout 0.0153    decision 0.0243    set_bounds 0.0095    solve 0.1988    add 0.0753    
Accumulated time: pickout 0.8790    decision 2.6957    set_bounds 2.0946    solve 18.5145    add 2.4071    
Current (lb-rhs): -0.0038805007934570312
30360 domains visited
Cumulative time: 28.396145820617676

BaB round 28
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0011
batch: 75
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] 
split level 1: [/input-8, 439] [/input-8, 439] [/input-8, 1713] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] 
cut re-enabled after branching node selection
0 lb beta sum: 4.937986850738525, worst -0.00587821751832962
10 lb beta sum: 11.228507041931152, worst -0.007474631071090698

all verified at 19th iter
pruning_in_iteration open status: True
ratio of positive domain = 300 / 300 = 1.0
pruning-in-iteration extra time: 0.004710197448730469
Time: prepare 0.0131    bound 0.4725    transfer 0.0014    finalize 0.0026    func 0.4919    
Accumulated time: func 18.9877    prepare 2.5921    bound 15.1325    transfer 0.3684    finalize 0.3502    
all_split False
Length of domains: 0
Time: pickout 0.0138    decision 0.0153    set_bounds 0.0079    solve 0.4920    add 0.0001    
Accumulated time: pickout 0.8928    decision 2.7110    set_bounds 2.1025    solve 19.0065    add 2.4072    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
30360 domains visited
Cumulative time: 28.92776346206665

found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=66_spec=2_30578717.log
found process to kill: terminal indx = 5
found process for pidx=2
kill process for pidx=2
found process for pidx=5
Result: safe in 48.5184 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
         -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1165]; unstable size 1165; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 251, 1, 1165] with unstable size 250 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 1165] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1165] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [250]; unstable size 250; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 250] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.62490296,  8.33701801,  2.59462023, -0.24409157,  2.26730275,
          1.36074853,  2.49958372,  5.18873644,  7.07310247]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
         -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.67it/s]100%|██████████| 1/1 [00:00<00:00,  8.66it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.16810417, -25.43053436, -15.60754871, -19.06594658, -15.93624115,
          -18.74472427, -17.98241234, -19.17751884, -22.21742058, -24.08210182]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.32869244]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1187 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.29866027832031
alpha/beta optimization time: 1.2358262538909912
initial alpha-crown bounds: tensor([[ 3.68976212,  8.44124222,  2.63029671, -0.18903565,  2.30742645,
          1.40437734,  2.56473994,  5.28525257,  7.16459990]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.18903565406799316
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6628 seconds.
lower bounds for all target labels: [3.6897592544555664, 8.441239356994629, 2.6302967071533203, -0.18903326988220215, 2.3074257373809814, 1.4043781757354736, 2.564739465713501, 5.285251617431641, 7.164600372314453]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [3]
start creating model mps for candidates: ['lay/16_3']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50585865974426
Verifying property 0 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.441242218017578.

Properties batch 1, size 1
Remaining timeout: 198.33145332336426
Verifying property 1 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.164599895477295.

Properties batch 2, size 1
Remaining timeout: 198.21696591377258
Verifying property 2 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.285252571105957.

Properties batch 3, size 1
Remaining timeout: 198.10467720031738
Verifying property 3 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6897621154785156.

Properties batch 4, size 1
Remaining timeout: 197.99263048171997
Verifying property 4 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6302967071533203.

Properties batch 5, size 1
Remaining timeout: 197.88072776794434
Verifying property 5 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.564739942550659.

Properties batch 6, size 1
Remaining timeout: 197.76908659934998
Verifying property 6 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3074264526367188.

Properties batch 7, size 1
Remaining timeout: 197.6557970046997
Verifying property 7 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4043773412704468.

Properties batch 8, size 1
Remaining timeout: 197.542564868927
Verifying property 8 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18903565]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
        -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18903565]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1165
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 246
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 1435
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008141994476318359
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 83] 
pruning_in_iteration open status: True
ratio of positive domain = 255 / 256 = 0.99609375
pruning-in-iteration extra time: 0.0046234130859375
Time: prepare 0.0019    bound 0.1118    transfer 0.0040    finalize 0.0024    func 0.1201    
Accumulated time: func 0.1201    prepare 0.0023    bound 0.1118    transfer 0.0040    finalize 0.0024    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00166 (8), 
Length of domains: 1
Time: pickout 0.0005    decision 0.0255    set_bounds 0.0187    solve 0.1202    add 0.0042    
Accumulated time: pickout 0.0005    decision 0.0255    set_bounds 0.0187    solve 0.1202    add 0.0042    
Current (lb-rhs): -0.0016616284847259521
1 domains visited
Cumulative time: 0.17474055290222168

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 55] 
split level 1: [/input-12, 86] 
split level 2: [/input-8, 2010] 
split level 3: [/input-8, 1363] 
split level 4: [/input-8, 173] 
split level 5: [/input-8, 1186] 
split level 6: [/input-8, 2026] 
split level 7: [/input-8, 2002] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.172325134277344e-05
Time: prepare 0.0050    bound 0.0039    transfer 0.0008    finalize 0.0016    func 0.0113    
Accumulated time: func 0.1314    prepare 0.0077    bound 0.1157    transfer 0.0048    finalize 0.0040    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0220    set_bounds 0.0182    solve 0.0113    add 0.0001    
Accumulated time: pickout 0.0011    decision 0.0475    set_bounds 0.0369    solve 0.1315    add 0.0042    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.22785210609436035

the mip building process is not terminated yet, kill it
Result: safe in 3.0716 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.55639648, -33.09785080, -28.00553131, -27.40239906, -25.07222748,
         -27.10820198, -28.42906952, -22.25778961, -33.87366104, -32.03707886]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 701] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 701] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 288] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.60428333, 8.63137341, 4.23884392, 3.83983850, 1.92058897, 3.60424948,
         4.34731674, 9.57411480, 7.57268620]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.15664101, -31.39657593, -29.82341003, -30.75438118, -29.41454315,
         -31.94305992, -31.96259689, -30.53670311, -26.03734589, -29.66164589]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 659] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 659] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 197] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.00890613, 3.93031955, 2.37446594, 3.40709376, 1.97647142, 4.41568375,
         4.39016771, 2.74542427, 2.46872425]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.57001877, -21.33278465, -16.48242188, -17.88305855, -15.84688187,
         -18.45724487, -14.43099213, -19.91347122, -21.41075134, -23.09995651]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [825]; unstable size 825; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 238, 1, 825] with unstable size 237 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 825] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 825] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [237]; unstable size 237; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 237] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 237] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.65802526, 4.90856361, 1.05104470, 2.50940728, 0.27425599, 2.85676789,
         3.60879040, 4.98581028, 6.49914980]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.83767509, -29.44007301, -28.61532784, -29.34156609, -28.70956039,
         -30.31670189, -29.03779984, -30.47285080, -29.20039749, -29.62815285]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [642]; unstable size 642; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 642] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 642] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 206] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.54947042, 1.96131444, 2.40498424, 1.83005714, 3.13335991, 2.10148072,
         3.19824505, 2.43338394, 2.73391461]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0662 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.50596523, -18.77488327, -14.69626808, -14.34110641, -15.01922321,
         -14.73676872, -15.22504807, -16.18593597, -16.79512215, -17.35581017]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 654] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 654] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 215] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30025947,  2.79075527, -0.64696038, -0.28283554, -0.00568274,
          0.09187192,  0.48905283,  0.94048738,  1.32147789]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.50596523, -18.77488327, -14.69626808, -14.34110641, -15.01922321,
         -14.73676872, -15.22504807, -16.18593597, -16.79512215, -17.35581017]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.16070747, -18.60272026, -14.32037830, -14.41568756, -14.80318546,
          -14.87370014, -15.22083282, -16.08508301, -16.55334473, -17.22670746],
         [-15.16070747, -18.60272026, -14.32037830, -14.41568756, -14.80318546,
          -14.87370014, -15.22083282, -16.08508301, -16.55334473, -17.22670746]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.74501991, -0.09530926,  0.38749790,  0.45801258]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0094 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0573 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.66821480, -25.16157913, -20.16737556, -19.99334526, -19.84637260,
         -20.53302574, -17.62543488, -22.75561523, -24.62155914, -24.01429939]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [562]; unstable size 562; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 562] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 562] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 562] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 328] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.44212151, 5.09512997, 1.39435554, 1.28885627, 0.93852150, 1.63264406,
         3.03026271, 4.88076544, 3.91813231]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0474 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.91881180, -32.59530640, -30.29003906, -30.00774956, -29.24390221,
         -30.22264290, -30.82009125, -25.47676849, -32.91277695, -30.89614296]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [668]; unstable size 668; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 668] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 668] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 668] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 226] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.83449793, 5.22893524, 3.33997345, 3.20848703, 2.84958291, 3.43617368,
         3.74272013, 5.64434719, 3.49464035]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0657 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.62759590, -34.41730499, -33.84094238, -35.56791306, -34.24832153,
         -36.28593826, -34.87154770, -35.38038635, -33.02691269, -33.01538467]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [642]; unstable size 642; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 642] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 642] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 208] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.30125916, 1.11236954, 2.63641596, 1.30713129, 3.22894764, 1.90847671,
         2.05579519, 0.40490317, 0.05632424]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0630 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
         -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 579] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 579] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 231] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.71136522,  4.01701736, -0.51415682,  0.11190546,  0.39652205,
          0.75778317,  1.25336587,  4.93492031,  2.87650156]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
         -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.80it/s]100%|██████████| 1/1 [00:00<00:00,  8.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.90902328, -21.90532684, -16.25102234, -16.58778763, -17.33627510,
          -16.20533562, -17.73783112, -18.40386963, -22.94217110, -20.61736488]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04568672]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1163 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.178878784179688
alpha/beta optimization time: 1.269697666168213
initial alpha-crown bounds: tensor([[ 2.79542208,  4.10366726, -0.45930862,  0.13562950,  0.45598030,
          0.80009270,  1.31134188,  5.06682587,  2.96922827]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4593086242675781
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6417 seconds.
lower bounds for all target labels: [2.7954201698303223, 4.103665351867676, -0.4593088626861572, 0.1356295347213745, 0.4559791088104248, 0.8000933527946472, 1.3113408088684082, 5.066827774047852, 2.969223737716675]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 10061 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47250175476074
Verifying property 0 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.066825866699219.

Properties batch 1, size 1
Remaining timeout: 198.22886157035828
Verifying property 1 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.103667259216309.

Properties batch 2, size 1
Remaining timeout: 198.09633994102478
Verifying property 2 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9692282676696777.

Properties batch 3, size 1
Remaining timeout: 198.01438736915588
Verifying property 3 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.795422077178955.

Properties batch 4, size 1
Remaining timeout: 197.93780040740967
Verifying property 4 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3113418817520142.

Properties batch 5, size 1
Remaining timeout: 197.85983157157898
Verifying property 5 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8000926971435547.

Properties batch 6, size 1
Remaining timeout: 197.78379845619202
Verifying property 6 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4559803009033203.

Properties batch 7, size 1
Remaining timeout: 197.70631790161133
Verifying property 7 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13562950491905212.

Properties batch 8, size 1
Remaining timeout: 197.62633872032166
Verifying property 8 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.45930862]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
        -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.45930862]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 579
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 226
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 825
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008647441864013672
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 72] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 17] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 64] 
split level 7: [/input-8, 1699] 
pruning_in_iteration open status: True
ratio of positive domain = 220 / 256 = 0.859375
pruning-in-iteration extra time: 0.0056705474853515625
Time: prepare 0.0033    bound 0.1799    transfer 0.0118    finalize 0.0027    func 0.1977    
Accumulated time: func 0.1977    prepare 0.0037    bound 0.1799    transfer 0.0118    finalize 0.0027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21443 (8), -0.20865 (8), -0.20371 (8), -0.19512 (8), -0.19130 (8), -0.18626 (8), -0.18331 (8), -0.17551 (8), -0.11485 (8), -0.11318 (8), -0.11069 (8), -0.10540 (8), -0.09939 (8), -0.08789 (8), -0.08567 (8), -0.08226 (8), -0.07759 (8), -0.07721 (8), -0.07306 (8), -0.06935 (8), 
Length of domains: 36
Time: pickout 0.0009    decision 0.0299    set_bounds 0.0230    solve 0.1978    add 0.0632    
Accumulated time: pickout 0.0009    decision 0.0299    set_bounds 0.0230    solve 0.1978    add 0.0632    
Current (lb-rhs): -0.21442651748657227
36 domains visited
Cumulative time: 0.325042724609375

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 36
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-8, 1949] [/input-8, 435] [/input-8, 1949] [/input-8, 410] [/input-8, 1949] [/input-8, 410] [/input-8, 1316] [/input-8, 410] [/input-8, 410] [/input-12, 71] 
split level 2: [/input-8, 435] [/input-8, 1686] [/input-8, 435] [/input-8, 435] [/input-8, 410] [/input-8, 435] [/input-8, 923] [/input-8, 1316] [/input-8, 435] [/input-8, 1316] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 288 = 0.6041666666666667
pruning-in-iteration extra time: 0.005157470703125
Time: prepare 0.0060    bound 0.1601    transfer 0.0024    finalize 0.0029    func 0.1714    
Accumulated time: func 0.3691    prepare 0.0102    bound 0.3400    transfer 0.0141    finalize 0.0056    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19833 (11), -0.19572 (11), -0.19246 (11), -0.18933 (11), -0.18747 (11), -0.18479 (11), -0.17996 (11), -0.17762 (11), -0.17735 (11), -0.17503 (11), -0.17419 (11), -0.17378 (11), -0.17275 (11), -0.17068 (11), -0.17024 (11), -0.17017 (11), -0.16964 (11), -0.16923 (11), -0.16746 (11), -0.16696 (11), 
Length of domains: 114
Time: pickout 0.0065    decision 0.0259    set_bounds 0.0148    solve 0.1715    add 0.0780    
Accumulated time: pickout 0.0074    decision 0.0557    set_bounds 0.0378    solve 0.3693    add 0.1412    
Current (lb-rhs): -0.19833111763000488
150 domains visited
Cumulative time: 0.6320815086364746

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 114
splitting decisions: 
split level 0: [/input-12, 71] [/input-8, 1949] [/input-12, 71] [/input-8, 1949] [/input-12, 71] [/input-8, 1949] [/input-8, 1949] [/input-8, 1949] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: True
ratio of positive domain = 71 / 228 = 0.3114035087719298
pruning-in-iteration extra time: 0.0042836666107177734
Time: prepare 0.0049    bound 0.1327    transfer 0.0029    finalize 0.0020    func 0.1426    
Accumulated time: func 0.5117    prepare 0.0152    bound 0.4727    transfer 0.0170    finalize 0.0077    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19447 (12), -0.19178 (12), -0.18852 (12), -0.18529 (12), -0.18365 (12), -0.18087 (12), -0.17549 (12), -0.17356 (12), -0.17280 (12), -0.17081 (12), -0.16930 (12), -0.16885 (12), -0.16801 (12), -0.16616 (12), -0.16612 (12), -0.16559 (12), -0.16491 (12), -0.16442 (12), -0.16319 (12), -0.16217 (12), 
Length of domains: 157
Time: pickout 0.0149    decision 0.0202    set_bounds 0.0057    solve 0.1427    add 0.0840    
Accumulated time: pickout 0.0222    decision 0.0760    set_bounds 0.0435    solve 0.5120    add 0.2252    
Current (lb-rhs): -0.1944713592529297
307 domains visited
Cumulative time: 0.9043595790863037

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 157
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 410] [/input-8, 410] [/input-12, 71] [/input-8, 1686] [/input-12, 71] [/input-8, 237] 
pruning_in_iteration open status: True
ratio of positive domain = 74 / 314 = 0.23566878980891715
pruning-in-iteration extra time: 0.004333019256591797
Time: prepare 0.0068    bound 0.1458    transfer 0.0012    finalize 0.0029    func 0.1567    
Accumulated time: func 0.6684    prepare 0.0223    bound 0.6185    transfer 0.0182    finalize 0.0105    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19091 (13), -0.18819 (13), -0.18541 (13), -0.18221 (13), -0.18008 (13), -0.17725 (13), -0.17142 (13), -0.16894 (13), -0.16871 (13), -0.16598 (13), -0.16529 (13), -0.16521 (13), -0.16461 (13), -0.16404 (13), -0.16326 (13), -0.16318 (13), -0.16192 (13), -0.16092 (13), -0.16054 (13), -0.16043 (13), 
Length of domains: 240
Time: pickout 0.0142    decision 0.0272    set_bounds 0.0084    solve 0.1568    add 0.0400    
Accumulated time: pickout 0.0365    decision 0.1032    set_bounds 0.0519    solve 0.6688    add 0.2653    
Current (lb-rhs): -0.19091081619262695
547 domains visited
Cumulative time: 1.155278205871582

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 240
splitting decisions: 
split level 0: [/input-8, 1107] [/input-12, 71] [/input-12, 71] [/input-8, 227] [/input-8, 209] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 438] 
pruning_in_iteration open status: False
ratio of positive domain = 82 / 480 = 0.17083333333333328
pruning-in-iteration extra time: 5.435943603515625e-05
Time: prepare 0.0133    bound 0.1162    transfer 0.0054    finalize 0.0065    func 0.1415    
Accumulated time: func 0.8099    prepare 0.0358    bound 0.7347    transfer 0.0236    finalize 0.0170    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18503 (14), -0.18458 (14), -0.18228 (14), -0.18183 (14), -0.17861 (14), -0.17803 (14), -0.17519 (14), -0.17459 (14), -0.17425 (14), -0.17364 (14), -0.17141 (14), -0.17079 (14), -0.16597 (14), -0.16537 (14), -0.16492 (14), -0.16375 (14), -0.16261 (14), -0.16231 (14), -0.16217 (14), -0.16101 (14), 
Length of domains: 397
Time: pickout 0.0050    decision 0.0307    set_bounds 0.0125    solve 0.1417    add 0.0151    
Accumulated time: pickout 0.0415    decision 0.1339    set_bounds 0.0644    solve 0.8105    add 0.2804    
Current (lb-rhs): -0.1850268840789795
944 domains visited
Cumulative time: 1.364201545715332

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 397
splitting decisions: 
split level 0: [/input-8, 733] [/input-8, 438] [/input-8, 366] [/input-8, 227] [/input-8, 1949] [/input-8, 438] [/input-8, 438] [/input-8, 1316] [/input-8, 733] [/input-8, 1949] 
pruning_in_iteration open status: False
ratio of positive domain = 149 / 794 = 0.18765743073047858
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0161    bound 0.1154    transfer 0.0074    finalize 0.0068    func 0.1459    
Accumulated time: func 0.9557    prepare 0.0521    bound 0.8500    transfer 0.0309    finalize 0.0239    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18050 (15), -0.18006 (15), -0.17873 (15), -0.17829 (15), -0.17774 (15), -0.17729 (15), -0.17620 (15), -0.17575 (15), -0.17302 (15), -0.17246 (15), -0.17212 (15), -0.17154 (15), -0.16983 (15), -0.16961 (15), -0.16922 (15), -0.16903 (15), -0.16863 (15), -0.16806 (15), -0.16692 (15), -0.16678 (15), 
Length of domains: 641
Time: pickout 0.0183    decision 0.0435    set_bounds 0.0199    solve 0.1461    add 0.0900    
Accumulated time: pickout 0.0598    decision 0.1774    set_bounds 0.0843    solve 0.9566    add 0.3704    
Current (lb-rhs): -0.1804966926574707
1585 domains visited
Cumulative time: 1.691162347793579

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 641
splitting decisions: 
split level 0: [/input-8, 929] [/input-8, 929] [/input-8, 1686] [/input-8, 218] [/input-8, 237] [/input-8, 366] [/input-8, 366] [/input-8, 227] [/input-8, 437] [/input-8, 237] 
pruning_in_iteration open status: False
ratio of positive domain = 187 / 1282 = 0.14586583463338532
pruning-in-iteration extra time: 5.173683166503906e-05
Time: prepare 0.0244    bound 0.1190    transfer 0.0179    finalize 0.0088    func 0.1703    
Accumulated time: func 1.1260    prepare 0.0768    bound 0.9690    transfer 0.0488    finalize 0.0327    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17753 (16), -0.17710 (16), -0.17577 (16), -0.17533 (16), -0.17474 (16), -0.17430 (16), -0.17322 (16), -0.17279 (16), -0.17230 (16), -0.17184 (16), -0.17054 (16), -0.17009 (16), -0.16950 (16), -0.16921 (16), -0.16905 (16), -0.16865 (16), -0.16826 (16), -0.16799 (16), -0.16770 (16), -0.16754 (16), 
Length of domains: 1089
Time: pickout 0.0207    decision 0.0522    set_bounds 0.0289    solve 0.1706    add 0.2197    
Accumulated time: pickout 0.0805    decision 0.2296    set_bounds 0.1132    solve 1.1272    add 0.5901    
Current (lb-rhs): -0.17753124237060547
2674 domains visited
Cumulative time: 2.210876226425171

BaB round 8
Fetch cut process: mps for current label is not ready yet
batch: 1089
splitting decisions: 
split level 0: [/input-8, 437] [/input-8, 437] [/input-8, 1316] [/input-8, 209] [/input-8, 1686] [/input-8, 437] [/input-8, 227] [/input-8, 209] [/input-8, 237] [/input-8, 1686] 
pruning_in_iteration open status: False
ratio of positive domain = 259 / 2178 = 0.11891643709825528
pruning-in-iteration extra time: 6.365776062011719e-05
Time: prepare 0.0424    bound 0.1378    transfer 0.0236    finalize 0.0140    func 0.2181    
Accumulated time: func 1.3441    prepare 0.1195    bound 1.1068    transfer 0.0725    finalize 0.0467    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17602 (17), -0.17559 (17), -0.17431 (17), -0.17387 (17), -0.17326 (17), -0.17283 (17), -0.17176 (17), -0.17133 (17), -0.17060 (17), -0.17015 (17), -0.16888 (17), -0.16844 (17), -0.16783 (17), -0.16739 (17), -0.16653 (17), -0.16635 (17), -0.16599 (17), -0.16591 (17), -0.16557 (17), -0.16541 (17), 
Length of domains: 1911
Time: pickout 0.0508    decision 0.0830    set_bounds 0.0527    solve 0.2185    add 0.1100    
Accumulated time: pickout 0.1312    decision 0.3126    set_bounds 0.1659    solve 1.3457    add 0.7001    
Current (lb-rhs): -0.17601609230041504
4585 domains visited
Cumulative time: 2.736829996109009

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0027
batch: 1911
splitting decisions: 
split level 0: [/input-8, 218] [/input-8, 437] [/input-8, 415] [/input-8, 1938] [/input-8, 733] [/input-8, 218] [/input-8, 415] [/input-8, 415] [/input-8, 1938] [/input-8, 929] 
pruning_in_iteration open status: False
ratio of positive domain = 498 / 3822 = 0.13029827315541598
pruning-in-iteration extra time: 0.00041413307189941406
Time: prepare 0.0862    bound 0.2121    transfer 0.0622    finalize 0.0271    func 0.3880    
Accumulated time: func 1.7321    prepare 0.2059    bound 1.3189    transfer 0.1347    finalize 0.0738    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17356 (18), -0.17314 (18), -0.17185 (18), -0.17142 (18), -0.17081 (18), -0.17038 (18), -0.16965 (18), -0.16929 (18), -0.16923 (18), -0.16887 (18), -0.16804 (18), -0.16795 (18), -0.16764 (18), -0.16752 (18), -0.16689 (18), -0.16647 (18), -0.16634 (18), -0.16590 (18), -0.16539 (18), -0.16531 (18), 
Length of domains: 3309
Time: pickout 0.0419    decision 0.3383    set_bounds 0.1060    solve 0.3896    add 0.1456    
Accumulated time: pickout 0.1732    decision 0.6509    set_bounds 0.2719    solve 1.7353    add 0.8457    
Current (lb-rhs): -0.17356228828430176
7894 domains visited
Cumulative time: 3.7720820903778076

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 3309
splitting decisions: 
split level 0: [/input-8, 237] [/input-8, 227] [/input-8, 217] [/input-8, 218] [/input-8, 733] [/input-8, 1316] [/input-8, 209] [/input-8, 438] [/input-8, 240] [/input-8, 237] 
pruning_in_iteration open status: False
ratio of positive domain = 649 / 6618 = 0.09806588093079482
pruning-in-iteration extra time: 5.555152893066406e-05
Time: prepare 0.1487    bound 0.3098    transfer 0.0308    finalize 0.0426    func 0.5328    
Accumulated time: func 2.2649    prepare 0.3550    bound 1.6287    transfer 0.1655    finalize 0.1163    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16822 (19), -0.16796 (19), -0.16779 (19), -0.16754 (19), -0.16657 (19), -0.16625 (19), -0.16613 (19), -0.16583 (19), -0.16546 (19), -0.16520 (19), -0.16503 (19), -0.16478 (19), -0.16455 (19), -0.16428 (19), -0.16414 (19), -0.16403 (19), -0.16401 (19), -0.16385 (19), -0.16369 (19), -0.16361 (19), 
Length of domains: 5957
Time: pickout 0.0614    decision 0.2034    set_bounds 0.3118    solve 0.5343    add 0.1464    
Accumulated time: pickout 0.2345    decision 0.8543    set_bounds 0.5837    solve 2.2695    add 0.9920    
Current (lb-rhs): -0.16821646690368652
13851 domains visited
Cumulative time: 5.045640230178833

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 4096
splitting decisions: 
split level 0: [/input-8, 217] [/input-8, 237] [/input-8, 733] [/input-8, 209] [/input-8, 217] [/input-8, 218] [/input-8, 240] [/input-8, 237] [/input-8, 209] [/input-8, 209] 
pruning_in_iteration open status: False
ratio of positive domain = 959 / 8192 = 0.1170654296875
pruning-in-iteration extra time: 7.009506225585938e-05
Time: prepare 0.1876    bound 0.3685    transfer 0.0475    finalize 0.0561    func 0.6605    
Accumulated time: func 2.9254    prepare 0.5429    bound 1.9972    transfer 0.2130    finalize 0.1725    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16822 (19), -0.16728 (20), -0.16712 (20), -0.16686 (20), -0.16657 (19), -0.16613 (19), -0.16562 (20), -0.16546 (19), -0.16520 (20), -0.16453 (20), -0.16437 (20), -0.16428 (19), -0.16411 (20), -0.16401 (19), -0.16385 (19), -0.16357 (19), -0.16332 (20), -0.16304 (20), -0.16292 (20), -0.16264 (19), 
Length of domains: 8974
Time: pickout 0.0702    decision 0.2528    set_bounds 0.3418    solve 0.6621    add 0.1979    
Accumulated time: pickout 0.3048    decision 1.1071    set_bounds 0.9255    solve 2.9316    add 1.1899    
Current (lb-rhs): -0.16821646690368652
20964 domains visited
current_vram/total_varm: 10.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.588236570358276

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 8192
splitting decisions: 
split level 0: [/input-8, 217] [/input-8, 237] [/input-8, 929] [/input-8, 237] [/input-8, 209] [/input-8, 237] [/input-8, 209] [/input-8, 237] [/input-8, 209] [/input-8, 209] 
pruning_in_iteration open status: False
ratio of positive domain = 1706 / 16384 = 0.1041259765625
pruning-in-iteration extra time: 9.679794311523438e-05
Time: prepare 0.3565    bound 0.6798    transfer 0.0927    finalize 0.1117    func 1.2422    
Accumulated time: func 4.1676    prepare 0.8997    bound 2.6770    transfer 0.3058    finalize 0.2842    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16755 (20), -0.16594 (20), -0.16551 (20), -0.16480 (20), -0.16440 (21), -0.16428 (19), -0.16422 (21), -0.16398 (21), -0.16385 (19), -0.16337 (20), -0.16294 (20), -0.16273 (21), -0.16264 (19), -0.16231 (21), -0.16220 (19), -0.16164 (21), -0.16153 (19), -0.16146 (21), -0.16122 (21), -0.16110 (19), 
Length of domains: 15378
Time: pickout 0.1226    decision 0.6703    set_bounds 0.5560    solve 1.2452    add 0.1905    
Accumulated time: pickout 0.4274    decision 1.7774    set_bounds 1.4815    solve 4.1769    add 1.3804    
Current (lb-rhs): -0.16755080223083496
35560 domains visited
current_vram/total_varm: 18.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.40166425704956

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 15378
splitting decisions: 
split level 0: [/input-8, 1579] [/input-8, 209] [/input-8, 218] [/input-8, 237] [/input-8, 209] [/input-8, 217] [/input-8, 218] [/input-8, 232] [/input-8, 216] [/input-8, 1579] 
pruning_in_iteration open status: False
ratio of positive domain = 3411 / 30756 = 0.1109051892313695
pruning-in-iteration extra time: 0.000217437744140625
Time: prepare 0.6740    bound 1.2363    transfer 0.1848    finalize 0.4799    func 2.5769    
Accumulated time: func 6.7445    prepare 1.5741    bound 3.9133    transfer 0.4906    finalize 0.7641    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16465 (21), -0.16359 (20), -0.16318 (20), -0.16304 (21), -0.16261 (21), -0.16200 (20), -0.16189 (21), -0.16157 (20), -0.16156 (22), -0.16138 (22), -0.16114 (22), -0.16088 (20), -0.16081 (21), -0.16047 (21), -0.16044 (20), -0.16004 (21), -0.15989 (22), -0.15947 (22), -0.15946 (20), -0.15920 (21), 
Length of domains: 27214
Time: pickout 0.2273    decision 1.3712    set_bounds 0.9479    solve 2.5817    add 0.2193    
Accumulated time: pickout 0.6547    decision 3.1486    set_bounds 2.4294    solve 6.7585    add 1.5997    
Current (lb-rhs): -0.16464638710021973
62774 domains visited
Cumulative time: 14.797727108001709

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 16384
splitting decisions: 
split level 0: [/input-8, 438] [/input-8, 434] [/input-8, 437] [/input-8, 434] [/input-8, 237] [/input-8, 437] [/input-8, 438] [/input-8, 255] [/input-8, 227] [/input-8, 213] 
pruning_in_iteration open status: False
ratio of positive domain = 3379 / 32768 = 0.103118896484375
pruning-in-iteration extra time: 0.0001685619354248047
Time: prepare 0.7055    bound 1.3055    transfer 0.1901    finalize 0.2407    func 2.4432    
Accumulated time: func 9.1877    prepare 2.2799    bound 5.2189    transfer 0.6807    finalize 1.0048    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16318 (20), -0.16200 (20), -0.16181 (22), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16020 (22), -0.15993 (23), -0.15977 (22), -0.15973 (23), -0.15950 (23), -0.15946 (20), -0.15928 (22), -0.15920 (21), -0.15906 (22), -0.15903 (20), -0.15885 (22), -0.15877 (21), 
Length of domains: 40136
Time: pickout 0.2556    decision 1.7152    set_bounds 1.0118    solve 2.7585    add 0.3438    
Accumulated time: pickout 0.9104    decision 4.8638    set_bounds 3.4412    solve 9.5170    add 1.9434    
Current (lb-rhs): -0.16358661651611328
92080 domains visited
current_vram/total_varm: 33.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 20.960227489471436

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 484 constraints, 32293 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2745
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 438] [/input-8, 434] [/input-8, 1686] [/input-8, 213] [/input-8, 438] [/input-8, 366] [/input-8, 227] [/input-8, 1686] [/input-8, 213] [/input-8, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16018056869506836
10 lb beta sum: 18.901565551757812, worst -0.08253484964370728
pruning_in_iteration open status: True
ratio of positive domain = 52158 / 65536 = 0.795867919921875
pruning-in-iteration extra time: 0.0054569244384765625
Time: prepare 1.3991    bound 8.6668    transfer 0.3697    finalize 0.8914    func 11.7454    
Accumulated time: func 20.9331    prepare 3.6795    bound 13.8857    transfer 1.0504    finalize 1.8962    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16318 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15877 (21), -0.15804 (21), -0.15776 (20), -0.15731 (20), -0.15665 (21), -0.15623 (21), -0.15615 (20), -0.15577 (20), -0.15524 (22), -0.15505 (22), 
Length of domains: 20746
Time: pickout 0.4822    decision 3.3651    set_bounds 2.2003    solve 11.7569    add 0.2148    
Accumulated time: pickout 1.3926    decision 8.2289    set_bounds 5.6415    solve 21.2739    add 2.1583    
Current (lb-rhs): -0.16358661651611328
105458 domains visited
Cumulative time: 39.49419713020325

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 939 constraints, 55364 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4757
batch: 20746
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 733] [/input-8, 733] [/input-8, 412] [/input-8, 1579] [/input-8, 237] [/input-8, 412] [/input-8, 437] [/input-8, 437] [/input-8, 232] [/input-8, 733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16073226928710938
10 lb beta sum: 13.256744384765625, worst -0.07005596160888672
pruning_in_iteration open status: True
ratio of positive domain = 29426 / 41492 = 0.7091969536296153
pruning-in-iteration extra time: 0.004212379455566406
Time: prepare 0.9314    bound 9.0263    transfer 0.2404    finalize 0.3298    func 11.1430    
Accumulated time: func 32.0761    prepare 4.6113    bound 22.9120    transfer 1.2907    finalize 2.2260    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04980 (21), -0.04816 (21), -0.04786 (21), -0.04736 (21), -0.04721 (21), -0.04660 (21), -0.04652 (22), -0.04633 (21), -0.04619 (21), -0.04573 (24), -0.04570 (24), -0.04565 (25), -0.04563 (25), -0.04553 (22), -0.04548 (24), -0.04536 (24), -0.04519 (24), -0.04516 (24), -0.04516 (24), -0.04513 (24), 
Length of domains: 12066
Time: pickout 0.2995    decision 2.1129    set_bounds 1.5548    solve 11.1512    add 0.2050    
Accumulated time: pickout 1.6921    decision 10.3417    set_bounds 7.1962    solve 32.4251    add 2.3632    
Current (lb-rhs): -0.049804091453552246
117524 domains visited
Cumulative time: 55.480900287628174

BaB round 17
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 986 constraints, 60390 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5173
batch: 12066
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 209] [/input-8, 1579] [/input-8, 213] [/input-8, 209] [/input-8, 1579] [/input-8, 213] [/input-8, 217] [/input-8, 209] [/input-8, 227] [/input-8, 209] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15810680389404297
10 lb beta sum: 12.086467742919922, worst -0.0670849084854126
pruning_in_iteration open status: False
ratio of positive domain = 2690 / 24132 = 0.11147024697497099
pruning-in-iteration extra time: 0.00045609474182128906
Time: prepare 0.5402    bound 6.2736    transfer 0.1393    finalize 0.1728    func 7.2853    
Accumulated time: func 39.3614    prepare 5.1519    bound 29.1856    transfer 1.4300    finalize 2.3988    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04721 (22), -0.04671 (22), -0.04648 (22), -0.04631 (22), -0.04619 (22), -0.04548 (25), -0.04532 (25), -0.04518 (22), -0.04495 (22), -0.04489 (22), -0.04487 (22), -0.04480 (23), -0.04469 (23), -0.04466 (22), -0.04445 (22), -0.04425 (25), -0.04397 (23), -0.04396 (25), -0.04387 (22), -0.04366 (22), 
Length of domains: 18576
Time: pickout 0.1891    decision 0.9127    set_bounds 0.8084    solve 7.5734    add 0.1827    
Accumulated time: pickout 1.8812    decision 11.2545    set_bounds 8.0046    solve 39.9986    add 2.5459    
Current (lb-rhs): -0.04720783233642578
136100 domains visited
Cumulative time: 65.73401999473572

BaB round 18
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 1008 constraints, 65367 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5576
batch: 18576
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1316] [/input-8, 237] [/input-8, 437] [/input-8, 1686] [/input-8, 1316] [/input-8, 437] [/input-8, 438] [/input-8, 415] [/input-8, 437] [/input-8, 415] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15668296813964844
10 lb beta sum: 11.919007301330566, worst -0.0668255090713501
pruning_in_iteration open status: False
ratio of positive domain = 2759 / 37152 = 0.07426248923341949
pruning-in-iteration extra time: 0.0007233619689941406
Time: prepare 0.8950    bound 9.5875    transfer 0.2148    finalize 0.5958    func 11.5381    
Accumulated time: func 50.8995    prepare 6.0472    bound 38.7731    transfer 1.6449    finalize 2.9946    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04631 (23), -0.04607 (23), -0.04543 (23), -0.04487 (23), -0.04485 (23), -0.04467 (23), -0.04466 (23), -0.04387 (23), -0.04347 (24), -0.04340 (26), -0.04319 (23), -0.04309 (23), -0.04304 (26), -0.04287 (23), -0.04286 (23), -0.04275 (23), -0.04275 (26), -0.04270 (23), -0.04266 (23), -0.04263 (24), 
Length of domains: 31641
Time: pickout 0.3047    decision 1.9018    set_bounds 0.9547    solve 11.5459    add 0.2618    
Accumulated time: pickout 2.1859    decision 13.1563    set_bounds 8.9593    solve 51.5445    add 2.8077    
Current (lb-rhs): -0.04630780220031738
167741 domains visited
Cumulative time: 81.33612251281738

BaB round 19
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 1014 constraints, 69742 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8821
batch: 31641
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 415] [/input-8, 213] [/input-8, 227] [/input-8, 415] [/input-8, 213] [/input-8, 227] [/input-8, 213] [/input-8, 213] [/input-8, 1316] [/input-8, 213] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15235304832458496
10 lb beta sum: 12.065849304199219, worst -0.06452512741088867
pruning_in_iteration open status: False
ratio of positive domain = 10931 / 63282 = 0.1727347428968743
pruning-in-iteration extra time: 0.0012471675872802734
Time: prepare 1.5616    bound 15.8915    transfer 0.3611    finalize 0.4380    func 19.1231    
Accumulated time: func 70.0226    prepare 7.6093    bound 54.6646    transfer 2.0059    finalize 3.4326    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04457 (24), -0.04453 (24), -0.04404 (24), -0.04389 (24), -0.04360 (24), -0.04304 (27), -0.04303 (24), -0.04291 (25), -0.04291 (24), -0.04280 (27), -0.04276 (24), -0.04255 (27), -0.04241 (28), -0.04228 (24), -0.04222 (24), -0.04216 (24), -0.04211 (24), -0.04208 (25), -0.04205 (24), -0.04197 (24), 
Length of domains: 43223
Time: pickout 0.5287    decision 3.2344    set_bounds 2.1149    solve 19.1353    add 0.3663    
Accumulated time: pickout 2.7146    decision 16.3907    set_bounds 11.0742    solve 70.6797    add 3.1740    
Current (lb-rhs): -0.044565796852111816
210964 domains visited
Cumulative time: 107.83924841880798

BaB round 20
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 1025 constraints, 81615 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7645
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1938] [/input-8, 1938] [/input, 2865] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] [/input, 2865] [/input-8, 1938] [/input-8, 1938] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15006732940673828
10 lb beta sum: 11.942422866821289, worst -0.06708061695098877
pruning_in_iteration open status: False
ratio of positive domain = 5683 / 65536 = 0.0867156982421875
pruning-in-iteration extra time: 0.0012917518615722656
Time: prepare 1.9183    bound 22.2020    transfer 0.3632    finalize 0.5455    func 26.1131    
Accumulated time: func 96.1357    prepare 9.5283    bound 76.8665    transfer 2.3691    finalize 3.9781    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04457 (25), -0.04453 (24), -0.04413 (25), -0.04404 (24), -0.04389 (25), -0.04389 (25), -0.04360 (25), -0.04345 (25), -0.04304 (28), -0.04303 (24), -0.04291 (26), -0.04291 (24), -0.04280 (28), -0.04276 (25), -0.04261 (25), -0.04255 (28), -0.04241 (29), -0.04241 (29), -0.04222 (24), -0.04216 (24), 
Length of domains: 65936
Time: pickout 0.6626    decision 3.9459    set_bounds 3.0369    solve 26.1267    add 9.3087    
Accumulated time: pickout 3.3771    decision 20.3365    set_bounds 14.1111    solve 96.8065    add 12.4827    
Current (lb-rhs): -0.044565796852111816
266445 domains visited
Cumulative time: 151.82566237449646

BaB round 21
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 1037 constraints, 86638 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7553
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 733] [/input-8, 1389] [/input-8, 733] [/input-8, 733] [/input-8, 733] [/input-8, 1938] [/input-8, 733] [/input-8, 1938] [/input-8, 733] [/input-8, 733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1481761932373047
10 lb beta sum: 11.81583309173584, worst -0.06892931461334229
pruning_in_iteration open status: False
ratio of positive domain = 6953 / 65536 = 0.1060943603515625
pruning-in-iteration extra time: 0.001323699951171875
Time: prepare 1.6095    bound 22.5047    transfer 0.3600    finalize 1.1768    func 26.0744    
Accumulated time: func 122.2101    prepare 11.1390    bound 99.3712    transfer 2.7291    finalize 5.1550    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04457 (26), -0.04453 (24), -0.04413 (25), -0.04404 (24), -0.04389 (26), -0.04389 (25), -0.04360 (26), -0.04345 (25), -0.04319 (26), -0.04304 (28), -0.04303 (24), -0.04291 (27), -0.04291 (24), -0.04280 (28), -0.04276 (26), -0.04261 (25), -0.04255 (29), -0.04255 (29), -0.04243 (26), -0.04241 (29), 
Length of domains: 85566
Time: pickout 0.5902    decision 3.6645    set_bounds 2.0612    solve 26.0917    add 0.3937    
Accumulated time: pickout 3.9674    decision 24.0010    set_bounds 16.1723    solve 122.8982    add 12.8764    
Current (lb-rhs): -0.044565796852111816
318843 domains visited
Cumulative time: 185.57884216308594

BaB round 22
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts: total 1043 constraints, 86790 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7954
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1686] [/input-8, 733] [/input-8, 1938] [/input-8, 1938] [/input-8, 733] [/input-8, 733] [/input-8, 733] [/input-8, 1938] [/input, 3233] [/input-8, 402] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14510869979858398
10 lb beta sum: 11.773200988769531, worst -0.07379400730133057
pruning_in_iteration open status: False
ratio of positive domain = 7146 / 65536 = 0.109039306640625
pruning-in-iteration extra time: 0.0013976097106933594
Time: prepare 1.6906    bound 22.5581    transfer 0.3171    finalize 0.4916    func 26.4173    
Accumulated time: func 148.6273    prepare 12.8304    bound 121.9293    transfer 3.0462    finalize 5.6466    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04457 (27), -0.04453 (24), -0.04413 (25), -0.04404 (24), -0.04394 (27), -0.04389 (27), -0.04389 (27), -0.04389 (25), -0.04360 (27), -0.04360 (27), -0.04345 (25), -0.04304 (28), -0.04303 (24), -0.04291 (24), -0.04280 (28), -0.04276 (27), -0.04276 (27), -0.04261 (25), -0.04255 (30), -0.04255 (29), 
Length of domains: 105308
Time: pickout 0.7276    decision 4.3099    set_bounds 2.9352    solve 26.4311    add 0.4099    
Accumulated time: pickout 4.6949    decision 28.3109    set_bounds 19.1075    solve 149.3293    add 13.2863    
Current (lb-rhs): -0.044565796852111816
371353 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=76_spec=2_30583926.log
found process for pidx=2
kill process for pidx=2
Result: unknown in 224.6458 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
         -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [679]; unstable size 679; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 679] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 679] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 185] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.08787775,  0.95483649,  4.05660629,  3.03147173,  3.64727974,
          3.09590197,  4.17433357,  4.76398897, -0.51713562]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
         -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.89it/s]100%|██████████| 1/1 [00:00<00:00,  7.89it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.81932449, -25.24547768, -28.96639633, -27.77052689, -28.75254059,
          -27.98299408, -28.93449783, -30.10167694, -23.77865982, -23.70247650]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07618332]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1379 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.71731948852539
alpha/beta optimization time: 1.3218514919281006
initial alpha-crown bounds: tensor([[ 2.13841915,  0.97674763,  4.10323858,  3.07848144,  3.70226955,
          3.14509678,  4.22430420,  4.82284546, -0.47408390]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.47408390045166016
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.7083 seconds.
lower bounds for all target labels: [2.1384177207946777, 0.9767459630966187, 4.103240966796875, 3.078479766845703, 3.702267646789551, 3.1450939178466797, 4.224305152893066, 4.822844505310059, -0.47408390045166016]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 11799 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.2197573184967
Verifying property 0 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.822845458984375.

Properties batch 1, size 1
Remaining timeout: 198.01474809646606
Verifying property 1 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.22430419921875.

Properties batch 2, size 1
Remaining timeout: 197.89140605926514
Verifying property 2 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.103238582611084.

Properties batch 3, size 1
Remaining timeout: 197.77406120300293
Verifying property 3 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7022695541381836.

Properties batch 4, size 1
Remaining timeout: 197.65799117088318
Verifying property 4 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.145096778869629.

Properties batch 5, size 1
Remaining timeout: 197.54176354408264
Verifying property 5 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.078481435775757.

Properties batch 6, size 1
Remaining timeout: 197.42738366127014
Verifying property 6 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1384191513061523.

Properties batch 7, size 1
Remaining timeout: 197.31130266189575
Verifying property 7 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9767476320266724.

Properties batch 8, size 1
Remaining timeout: 197.18455338478088
Verifying property 8 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47408390]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
        -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47408390]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 679
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 180
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 875
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010008811950683594
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 6] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 24] 
split level 3: [/input-8, 1973] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 46] 
split level 6: [/input-8, 1971] 
split level 7: [/input-8, 1965] 
pruning_in_iteration open status: True
ratio of positive domain = 200 / 256 = 0.78125
pruning-in-iteration extra time: 0.005372285842895508
Time: prepare 0.0033    bound 0.2107    transfer 0.0056    finalize 0.0025    func 0.2222    
Accumulated time: func 0.2222    prepare 0.0039    bound 0.2107    transfer 0.0056    finalize 0.0025    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15304 (8), -0.15009 (8), -0.14356 (8), -0.14150 (8), -0.14038 (8), -0.13680 (8), -0.13455 (8), -0.12993 (8), -0.09630 (8), -0.09551 (8), -0.09370 (8), -0.09313 (8), -0.09108 (8), -0.09048 (8), -0.08662 (8), -0.08610 (8), -0.08523 (8), -0.08479 (8), -0.08297 (8), -0.08203 (8), 
Length of domains: 56
Time: pickout 0.0009    decision 0.0315    set_bounds 0.0242    solve 0.2224    add 0.0635    
Accumulated time: pickout 0.0009    decision 0.0315    set_bounds 0.0242    solve 0.2224    add 0.0635    
Current (lb-rhs): -0.15303516387939453
56 domains visited
Cumulative time: 0.3556532859802246

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 56
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 2] [/input-12, 2] [/input-8, 1706] [/input-12, 2] [/input-8, 1706] [/input-8, 1706] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-8, 1950] 
pruning_in_iteration open status: True
ratio of positive domain = 136 / 224 = 0.6071428571428572
pruning-in-iteration extra time: 0.004749298095703125
Time: prepare 0.0048    bound 0.1902    transfer 0.0070    finalize 0.0020    func 0.2040    
Accumulated time: func 0.4262    prepare 0.0089    bound 0.4009    transfer 0.0126    finalize 0.0045    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12842 (10), -0.12484 (10), -0.11931 (10), -0.11884 (10), -0.11714 (10), -0.11707 (10), -0.11502 (10), -0.11214 (10), -0.11108 (10), -0.10998 (10), -0.10852 (10), -0.10828 (10), -0.10508 (10), -0.10436 (10), -0.10197 (10), -0.09827 (10), -0.07297 (10), -0.07244 (10), -0.07042 (10), -0.07008 (10), 
Length of domains: 88
Time: pickout 0.0060    decision 0.0219    set_bounds 0.0075    solve 0.2041    add 0.0269    
Accumulated time: pickout 0.0069    decision 0.0535    set_bounds 0.0317    solve 0.4265    add 0.0905    
Current (lb-rhs): -0.1284198760986328
144 domains visited
Cumulative time: 0.6250879764556885

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 88
splitting decisions: 
split level 0: [/input-12, 56] [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1706] [/input-12, 56] [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1706] 
split level 1: [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1655] [/input-8, 1950] [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1655] [/input-8, 1655] 
pruning_in_iteration open status: True
ratio of positive domain = 121 / 352 = 0.34375
pruning-in-iteration extra time: 0.00499272346496582
Time: prepare 0.0071    bound 0.1872    transfer 0.0065    finalize 0.0038    func 0.2054    
Accumulated time: func 0.6316    prepare 0.0163    bound 0.5882    transfer 0.0191    finalize 0.0083    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11561 (12), -0.11214 (12), -0.11097 (12), -0.10925 (12), -0.10754 (12), -0.10638 (12), -0.10595 (12), -0.10564 (12), -0.10547 (12), -0.10463 (12), -0.10404 (12), -0.10302 (12), -0.10229 (12), -0.10106 (12), -0.10095 (12), -0.10070 (12), -0.10055 (12), -0.10038 (12), -0.09954 (12), -0.09901 (12), 
Length of domains: 231
Time: pickout 0.0035    decision 0.0255    set_bounds 0.0114    solve 0.2055    add 0.0788    
Accumulated time: pickout 0.0104    decision 0.0790    set_bounds 0.0432    solve 0.6320    add 0.1693    
Current (lb-rhs): -0.11561155319213867
375 domains visited
Cumulative time: 0.9581465721130371

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 231
splitting decisions: 
split level 0: [/input-8, 1950] [/input-12, 56] [/input-12, 56] [/input-8, 1655] [/input-8, 1950] [/input-12, 56] [/input-12, 56] [/input-8, 1950] [/input-8, 1950] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 190 / 462 = 0.4112554112554112
pruning-in-iteration extra time: 0.005522966384887695
Time: prepare 0.0096    bound 0.2104    transfer 0.0065    finalize 0.0046    func 0.2323    
Accumulated time: func 0.8639    prepare 0.0262    bound 0.7986    transfer 0.0256    finalize 0.0129    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11168 (13), -0.10820 (13), -0.10695 (13), -0.10525 (13), -0.10354 (13), -0.10229 (13), -0.10199 (13), -0.10161 (13), -0.10161 (13), -0.10055 (13), -0.09993 (13), -0.09905 (13), -0.09836 (13), -0.09696 (13), -0.09690 (13), -0.09663 (13), -0.09647 (13), -0.09647 (13), -0.09553 (13), -0.09484 (13), 
Length of domains: 272
Time: pickout 0.0177    decision 0.0381    set_bounds 0.0107    solve 0.2324    add 0.0305    
Accumulated time: pickout 0.0281    decision 0.1170    set_bounds 0.0539    solve 0.8644    add 0.1998    
Current (lb-rhs): -0.11168241500854492
647 domains visited
Cumulative time: 1.290916919708252

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 272
splitting decisions: 
split level 0: [/input-8, 1655] [/input-8, 1399] [/input-8, 1399] [/input-12, 34] [/input-8, 1399] [/input-12, 34] [/input-8, 1399] [/input-12, 34] [/input-8, 1399] [/input-8, 1655] 
pruning_in_iteration open status: True
ratio of positive domain = 114 / 544 = 0.2095588235294118
pruning-in-iteration extra time: 0.003390789031982422
Time: prepare 0.0111    bound 0.2158    transfer 0.0074    finalize 0.0074    func 0.2418    
Accumulated time: func 1.1057    prepare 0.0376    bound 1.0143    transfer 0.0331    finalize 0.0203    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10682 (14), -0.10318 (14), -0.10212 (14), -0.10035 (14), -0.10034 (14), -0.09851 (14), -0.09738 (14), -0.09712 (14), -0.09705 (14), -0.09697 (14), -0.09655 (14), -0.09563 (14), -0.09563 (14), -0.09486 (14), -0.09407 (14), -0.09386 (14), -0.09336 (14), -0.09239 (14), -0.09199 (14), -0.09189 (14), 
Length of domains: 430
Time: pickout 0.0094    decision 0.0307    set_bounds 0.0132    solve 0.2419    add 0.0069    
Accumulated time: pickout 0.0376    decision 0.1477    set_bounds 0.0671    solve 1.1064    add 0.2067    
Current (lb-rhs): -0.10681724548339844
1077 domains visited
Cumulative time: 1.5965158939361572

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 430
splitting decisions: 
split level 0: [/input-12, 34] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-12, 34] [/input-8, 1647] [/input-8, 313] [/input-8, 313] [/input-8, 1399] 
pruning_in_iteration open status: True
ratio of positive domain = 263 / 860 = 0.30581395348837215
pruning-in-iteration extra time: 0.0047762393951416016
Time: prepare 0.0180    bound 0.2205    transfer 0.0743    finalize 0.0103    func 0.3232    
Accumulated time: func 1.4289    prepare 0.0558    bound 1.2348    transfer 0.1073    finalize 0.0307    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10433 (15), -0.10074 (15), -0.09963 (15), -0.09804 (15), -0.09786 (15), -0.09605 (15), -0.09462 (15), -0.09462 (15), -0.09461 (15), -0.09447 (15), -0.09430 (15), -0.09336 (15), -0.09319 (15), -0.09207 (15), -0.09157 (15), -0.09136 (15), -0.09093 (15), -0.08993 (15), -0.08962 (15), -0.08945 (15), 
Length of domains: 597
Time: pickout 0.0207    decision 0.0380    set_bounds 0.0211    solve 0.3234    add 0.2440    
Accumulated time: pickout 0.0583    decision 0.1856    set_bounds 0.0882    solve 1.4298    add 0.4507    
Current (lb-rhs): -0.10432767868041992
1674 domains visited
Cumulative time: 2.2558741569519043

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 597
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 313] [/input-12, 56] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 444 / 1194 = 0.371859296482412
pruning-in-iteration extra time: 0.005302906036376953
Time: prepare 0.0236    bound 0.2291    transfer 0.0024    finalize 0.0090    func 0.2657    
Accumulated time: func 1.6945    prepare 0.0798    bound 1.4640    transfer 0.1097    finalize 0.0397    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10044 (16), -0.09730 (16), -0.09565 (16), -0.09550 (16), -0.09410 (16), -0.09397 (16), -0.09259 (16), -0.09158 (16), -0.09154 (16), -0.09115 (16), -0.09094 (16), -0.09087 (16), -0.09080 (16), -0.09052 (16), -0.08935 (16), -0.08921 (16), -0.08919 (16), -0.08906 (16), -0.08905 (16), -0.08837 (16), 
Length of domains: 750
Time: pickout 0.0192    decision 0.0562    set_bounds 0.0289    solve 0.2660    add 0.0220    
Accumulated time: pickout 0.0775    decision 0.2418    set_bounds 0.1171    solve 1.6958    add 0.4727    
Current (lb-rhs): -0.10043764114379883
2424 domains visited
Cumulative time: 2.653373956680298

BaB round 8
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 750
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 689 / 1500 = 0.45933333333333337
pruning-in-iteration extra time: 0.0051190853118896484
Time: prepare 0.0298    bound 0.1894    transfer 0.0232    finalize 0.0117    func 0.2556    
Accumulated time: func 1.9501    prepare 0.1098    bound 1.6534    transfer 0.1329    finalize 0.0514    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09750 (17), -0.09444 (17), -0.09271 (17), -0.09230 (17), -0.09116 (17), -0.09104 (17), -0.08970 (17), -0.08854 (17), -0.08828 (17), -0.08791 (17), -0.08790 (17), -0.08767 (17), -0.08759 (17), -0.08729 (17), -0.08636 (17), -0.08628 (17), -0.08598 (17), -0.08587 (17), -0.08574 (17), -0.08476 (17), 
Length of domains: 811
Time: pickout 0.0146    decision 0.0587    set_bounds 0.0337    solve 0.2560    add 0.0894    
Accumulated time: pickout 0.0921    decision 0.3005    set_bounds 0.1509    solve 1.9518    add 0.5622    
Current (lb-rhs): -0.09750223159790039
3235 domains visited
Cumulative time: 3.119807243347168

BaB round 9
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 811
splitting decisions: 
split level 0: [/input-8, 1388] [/input-12, 34] [/input-8, 1388] [/input-12, 34] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-12, 34] [/input-8, 1388] [/input-8, 1388] 
pruning_in_iteration open status: True
ratio of positive domain = 701 / 1622 = 0.43218249075215787
pruning-in-iteration extra time: 0.00570225715637207
Time: prepare 0.0350    bound 0.3351    transfer 0.0055    finalize 0.0141    func 0.3899    
Accumulated time: func 2.3400    prepare 0.1451    bound 1.9885    transfer 0.1384    finalize 0.0655    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09410 (18), -0.09109 (18), -0.08932 (18), -0.08865 (18), -0.08770 (18), -0.08766 (18), -0.08638 (18), -0.08499 (18), -0.08492 (18), -0.08452 (18), -0.08440 (18), -0.08409 (18), -0.08409 (18), -0.08392 (18), -0.08296 (18), -0.08289 (18), -0.08230 (18), -0.08221 (18), -0.08186 (18), -0.08128 (18), 
Length of domains: 921
Time: pickout 0.0246    decision 0.0644    set_bounds 0.0387    solve 0.3902    add 0.0957    
Accumulated time: pickout 0.1167    decision 0.3650    set_bounds 0.1895    solve 2.3420    add 0.6578    
Current (lb-rhs): -0.09409666061401367
4156 domains visited
Cumulative time: 3.748818874359131

BaB round 10
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0020
batch: 921
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-8, 1388] [/input-12, 34] [/input, 1463] [/input-12, 34] [/input-12, 34] [/input, 1463] 
pruning_in_iteration open status: True
ratio of positive domain = 471 / 1842 = 0.255700325732899
pruning-in-iteration extra time: 0.005703449249267578
Time: prepare 0.0417    bound 0.3291    transfer 0.0107    finalize 0.0148    func 0.3966    
Accumulated time: func 2.7366    prepare 0.1870    bound 2.3176    transfer 0.1492    finalize 0.0803    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09301 (19), -0.08980 (19), -0.08823 (19), -0.08747 (19), -0.08663 (19), -0.08581 (19), -0.08508 (19), -0.08366 (19), -0.08330 (19), -0.08305 (19), -0.08301 (19), -0.08292 (19), -0.08288 (19), -0.08185 (19), -0.08109 (19), -0.08103 (19), -0.08067 (19), -0.08026 (19), -0.07970 (19), -0.07959 (19), 
Length of domains: 1371
Time: pickout 0.0272    decision 0.0682    set_bounds 0.3063    solve 0.3979    add 0.1023    
Accumulated time: pickout 0.1440    decision 0.4332    set_bounds 0.4959    solve 2.7399    add 0.7601    
Current (lb-rhs): -0.09300613403320312
5527 domains visited
Cumulative time: 4.663444757461548

BaB round 11
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 1371
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] 
pruning_in_iteration open status: False
ratio of positive domain = 457 / 2742 = 0.16666666666666663
pruning-in-iteration extra time: 0.00010180473327636719
Time: prepare 0.0562    bound 0.1574    transfer 0.0378    finalize 0.0266    func 0.2784    
Accumulated time: func 3.0150    prepare 0.2435    bound 2.4750    transfer 0.1870    finalize 0.1070    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08775 (20), -0.08641 (20), -0.08456 (20), -0.08315 (20), -0.08297 (20), -0.08213 (20), -0.08164 (20), -0.08138 (20), -0.08081 (20), -0.08078 (20), -0.08003 (20), -0.07983 (20), -0.07916 (20), -0.07845 (20), -0.07843 (20), -0.07816 (20), -0.07810 (20), -0.07805 (20), -0.07778 (20), -0.07751 (20), 
Length of domains: 2279
Time: pickout 0.0423    decision 0.0920    set_bounds 0.0635    solve 0.2798    add 0.1143    
Accumulated time: pickout 0.1863    decision 0.5252    set_bounds 0.5594    solve 3.0197    add 0.8744    
Current (lb-rhs): -0.08775186538696289
7806 domains visited
Cumulative time: 5.281071662902832

BaB round 12
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 2279
splitting decisions: 
split level 0: [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] 
pruning_in_iteration open status: False
ratio of positive domain = 505 / 4558 = 0.11079420798595874
pruning-in-iteration extra time: 0.00013446807861328125
Time: prepare 0.1020    bound 0.2379    transfer 0.0279    finalize 0.0375    func 0.4068    
Accumulated time: func 3.4218    prepare 0.3458    bound 2.7129    transfer 0.2149    finalize 0.1445    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08351 (21), -0.08218 (21), -0.08040 (21), -0.08036 (21), -0.07903 (21), -0.07901 (21), -0.07873 (21), -0.07780 (21), -0.07740 (21), -0.07707 (21), -0.07701 (21), -0.07655 (21), -0.07646 (21), -0.07567 (21), -0.07567 (21), -0.07567 (21), -0.07558 (21), -0.07495 (21), -0.07464 (21), -0.07429 (21), 
Length of domains: 4036
Time: pickout 0.0605    decision 0.1445    set_bounds 0.3087    solve 0.4083    add 0.1481    
Accumulated time: pickout 0.2468    decision 0.6697    set_bounds 0.8681    solve 3.4280    add 1.0226    
Current (lb-rhs): -0.08351421356201172
11842 domains visited
Cumulative time: 6.370085000991821

BaB round 13
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 4036
splitting decisions: 
split level 0: [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] 
pruning_in_iteration open status: False
ratio of positive domain = 636 / 8072 = 0.07879088206144702
pruning-in-iteration extra time: 7.152557373046875e-05
Time: prepare 0.1840    bound 0.3756    transfer 0.0425    finalize 0.0544    func 0.6579    
Accumulated time: func 4.0797    prepare 0.5300    bound 3.0885    transfer 0.2574    finalize 0.1989    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07968 (22), -0.07833 (22), -0.07833 (22), -0.07697 (22), -0.07653 (22), -0.07644 (22), -0.07513 (22), -0.07511 (22), -0.07510 (22), -0.07510 (22), -0.07490 (22), -0.07392 (22), -0.07373 (22), -0.07370 (22), -0.07356 (22), -0.07356 (22), -0.07317 (22), -0.07310 (22), -0.07271 (22), -0.07257 (22), 
Length of domains: 7424
Time: pickout 0.0823    decision 0.2624    set_bounds 0.4362    solve 0.6600    add 0.1625    
Accumulated time: pickout 0.3291    decision 0.9321    set_bounds 1.3043    solve 4.0880    add 1.1850    
Current (lb-rhs): -0.07967901229858398
19266 domains visited
Cumulative time: 7.9930500984191895

BaB round 14
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 4096
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
pruning_in_iteration open status: False
ratio of positive domain = 909 / 8192 = 0.1109619140625
pruning-in-iteration extra time: 9.083747863769531e-05
Time: prepare 0.2182    bound 0.3677    transfer 0.0419    finalize 0.0585    func 0.6883    
Accumulated time: func 4.7679    prepare 0.7484    bound 3.4562    transfer 0.2993    finalize 0.2574    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07848 (23), -0.07833 (22), -0.07714 (23), -0.07697 (22), -0.07533 (23), -0.07521 (23), -0.07513 (22), -0.07510 (22), -0.07391 (23), -0.07386 (23), -0.07373 (22), -0.07370 (23), -0.07370 (22), -0.07356 (22), -0.07271 (23), -0.07257 (22), -0.07236 (23), -0.07221 (22), -0.07198 (23), -0.07184 (23), 
Length of domains: 10583
Time: pickout 0.0753    decision 0.2468    set_bounds 0.3495    solve 0.6903    add 0.2196    
Accumulated time: pickout 0.4044    decision 1.1789    set_bounds 1.6538    solve 4.7782    add 1.4046    
Current (lb-rhs): -0.07847881317138672
26521 domains visited
current_vram/total_varm: 32.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.596849203109741

BaB round 15
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0013
batch: 8192
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
pruning_in_iteration open status: False
ratio of positive domain = 2323 / 16384 = 0.14178466796875
pruning-in-iteration extra time: 0.00011682510375976562
Time: prepare 0.4386    bound 0.6827    transfer 0.0848    finalize 0.1137    func 1.3212    
Accumulated time: func 6.0891    prepare 1.1874    bound 4.1389    transfer 0.3841    finalize 0.3711    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07833 (22), -0.07523 (23), -0.07513 (22), -0.07510 (22), -0.07401 (24), -0.07401 (24), -0.07373 (22), -0.07356 (22), -0.07266 (24), -0.07265 (24), -0.07257 (22), -0.07194 (23), -0.07182 (22), -0.07169 (22), -0.07136 (22), -0.07086 (24), -0.07082 (24), -0.07079 (24), -0.07054 (24), -0.07047 (23), 
Length of domains: 16364
Time: pickout 0.1522    decision 0.6407    set_bounds 0.4714    solve 1.3246    add 0.1844    
Accumulated time: pickout 0.5566    decision 1.8196    set_bounds 2.1253    solve 6.1028    add 1.5890    
Current (lb-rhs): -0.07832813262939453
40494 domains visited
current_vram/total_varm: 38.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 12.398566246032715

BaB round 16
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 16364
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
pruning_in_iteration open status: False
ratio of positive domain = 4244 / 32728 = 0.12967489611341965
pruning-in-iteration extra time: 0.00024366378784179688
Time: prepare 0.8882    bound 1.3176    transfer 0.1722    finalize 0.4727    func 2.8530    
Accumulated time: func 8.9422    prepare 2.0760    bound 5.4564    transfer 0.5563    finalize 0.8438    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07402 (24), -0.07337 (23), -0.07330 (23), -0.07262 (25), -0.07261 (25), -0.07195 (23), -0.07181 (23), -0.07127 (25), -0.07127 (25), -0.07081 (23), -0.07075 (24), -0.07006 (23), -0.06987 (23), -0.06962 (23), -0.06946 (25), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06891 (25), 
Length of domains: 28297
Time: pickout 0.2861    decision 1.1926    set_bounds 0.8703    solve 2.8595    add 0.2329    
Accumulated time: pickout 0.8426    decision 3.0122    set_bounds 2.9955    solve 8.9623    add 1.8219    
Current (lb-rhs): -0.0765829086303711
68791 domains visited
Cumulative time: 17.886451959609985

BaB round 17
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts: total 558 constraints, 28128 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2530
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3571] [/input-8, 285] [/input-8, 1967] [/input-8, 1704] [/input-8, 1967] [/input-8, 1704] [/input-8, 510] [/input-8, 1704] [/input-8, 510] [/input-8, 1704] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06759881973266602
10 lb beta sum: 101.26797485351562, worst -0.01666879653930664
pruning_in_iteration open status: True
ratio of positive domain = 32616 / 32768 = 0.995361328125
pruning-in-iteration extra time: 0.005079507827758789
Time: prepare 0.8892    bound 3.6154    transfer 0.1609    finalize 0.5392    func 5.4167    
Accumulated time: func 14.3588    prepare 2.9657    bound 9.0719    transfer 0.7172    finalize 1.3831    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07402 (24), -0.07337 (23), -0.07330 (23), -0.07262 (25), -0.07261 (25), -0.07195 (23), -0.07181 (23), -0.07127 (25), -0.07081 (23), -0.07075 (24), -0.07006 (23), -0.06987 (23), -0.06962 (23), -0.06946 (25), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06869 (23), -0.06853 (23), 
Length of domains: 12065
Time: pickout 0.3045    decision 1.9609    set_bounds 0.9685    solve 5.4232    add 0.0886    
Accumulated time: pickout 1.1471    decision 4.9731    set_bounds 3.9641    solve 14.3855    add 1.9106    
Current (lb-rhs): -0.0765829086303711
68943 domains visited
Cumulative time: 27.03740668296814

BaB round 18
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts: total 975 constraints, 50976 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4578
batch: 12065
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07540607452392578
10 lb beta sum: 44.045833587646484, worst -0.02212834358215332
pruning_in_iteration open status: True
ratio of positive domain = 24094 / 24130 = 0.9985080812266888
pruning-in-iteration extra time: 0.005015373229980469
Time: prepare 0.6718    bound 4.2843    transfer 0.1165    finalize 0.4075    func 5.6368    
Accumulated time: func 19.9956    prepare 3.6379    bound 13.3562    transfer 0.8337    finalize 1.7905    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00782 (24), -0.00740 (24), -0.00536 (24), -0.00498 (24), -0.00497 (24), -0.00418 (24), -0.00353 (24), -0.00337 (24), -0.00312 (24), -0.00270 (24), -0.00184 (24), -0.00171 (24), -0.00146 (26), -0.00135 (24), -0.00133 (26), -0.00127 (24), -0.00109 (24), -0.00102 (24), -0.00088 (25), -0.00079 (25), 
Length of domains: 36
Time: pickout 0.2145    decision 0.9194    set_bounds 0.5511    solve 5.6421    add 0.0621    
Accumulated time: pickout 1.3616    decision 5.8925    set_bounds 4.5152    solve 20.0276    add 1.9727    
Current (lb-rhs): -0.00782322883605957
68979 domains visited
Cumulative time: 35.02587580680847

BaB round 19
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts: total 1097 constraints, 67743 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7332
batch: 36
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] 
split level 1: [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] [/input-8, 1704] 
split level 2: [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06563568115234375
10 lb beta sum: 9.513014793395996, worst -0.018410205841064453

all verified at 18th iter
pruning_in_iteration open status: True
ratio of positive domain = 288 / 288 = 1.0
pruning-in-iteration extra time: 0.0021543502807617188
Time: prepare 0.0076    bound 0.2832    transfer 0.0025    finalize 0.0020    func 0.2971    
Accumulated time: func 20.2928    prepare 3.6457    bound 13.6394    transfer 0.8363    finalize 1.7926    
all_split False
Length of domains: 0
Time: pickout 0.0057    decision 0.0157    set_bounds 0.0106    solve 0.2972    add 0.0001    
Accumulated time: pickout 1.3673    decision 5.9082    set_bounds 4.5258    solve 20.3248    add 1.9728    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
68979 domains visited
Cumulative time: 36.090251445770264

found process to kill: terminal indx = 8
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=77_spec=8_30606438.log
found process for pidx=8
kill process for pidx=8
Result: safe in 39.3251 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.75459862, -19.03087234, -15.81020927, -15.02808094, -15.45583725,
         -15.58429432, -14.96899986, -17.89657974, -19.61580658, -19.36780739]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 632] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 632] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 328] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.01773739,  1.41905117, -0.42905188, -0.71989632,  0.09239092,
         -1.24160266,  0.88482022,  2.33326960,  1.89770079]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.75459862, -19.03087234, -15.81020927, -15.02808094, -15.45583725,
         -15.58429432, -14.96899986, -17.89657974, -19.61580658, -19.36780739]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.75459862, -19.03087234, -15.81020832, -15.02808094, -15.45583725,
          -15.58429337, -14.96900177, -17.89657784, -19.61580658, -19.36780930],
         [-17.75459862, -19.03087234, -15.81020832, -15.02808094, -15.45583725,
          -15.58429337, -14.96900177, -17.89657784, -19.61580658, -19.36780930]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.78212738,  0.42775631, -0.05907917]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1029 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.35046577, -23.71506119, -23.35945511, -21.45649910, -20.70935822,
         -20.53724480, -22.38616753, -16.30188179, -26.53351212, -22.39307404]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [460]; unstable size 460; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 248, 1, 460] with unstable size 247 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 460] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 460] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [247]; unstable size 247; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 247] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 247] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.23471165, 4.94442558, 5.38546658, 3.64118886, 3.33296251, 2.72332478,
         4.26009846, 8.15480900, 3.82787848]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0736 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.09100723, -29.06959343, -25.09518623, -27.86755753, -24.83033943,
         -28.04232597, -26.05955124, -26.36453247, -25.66234589, -27.72757912]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [899]; unstable size 899; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 899] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 899] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 899] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 310] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97617173, -1.48784256,  0.95436358, -1.87956309,  0.93106532,
         -1.03131580, -0.85329711, -0.83899200,  0.88107014]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.09100723, -29.06959343, -25.09518623, -27.86755753, -24.83033943,
         -28.04232597, -26.05955124, -26.36453247, -25.66234589, -27.72757912]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.09101105, -29.06959724, -25.09518623, -27.86755753, -24.83034134,
          -28.04232597, -26.05955315, -26.36453438, -25.66234589, -27.72757912],
         [-25.09101105, -29.06959724, -25.09518623, -27.86755753, -24.83034134,
          -28.04232597, -26.05955315, -26.36453438, -25.66234589, -27.72757912]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.00417519, -0.26066971,  0.96854210,  1.27352333,  0.57133484]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0816 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.78340530, -27.09945488, -17.72372437, -21.88307762, -18.28152275,
         -20.99545860, -20.59827042, -22.34070778, -24.70541382, -26.47000694]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [950]; unstable size 950; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 950] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 950] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 950] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 208] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.15953612, 7.92398405, 3.57421255, 0.07925250, 2.58815289, 1.97291231,
         3.73509598, 5.73443413, 7.39504910]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0692 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.82749367, -26.77242661, -22.68888855, -21.92727852, -23.00431252,
         -21.88382530, -22.72205544, -24.54189873, -26.69390106, -25.28289032]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 306, 1, 743] with unstable size 305 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 743] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [305]; unstable size 305; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 305] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 305] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.55621195,  2.72794247, -0.34306383, -0.31645530, -0.10541511,
         -0.28819263,  1.26013136,  2.92124987,  1.60254765]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.82749367, -26.77242661, -22.68888855, -21.92727852, -23.00431252,
         -21.88382530, -22.72205544, -24.54189873, -26.69390106, -25.28289032]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.17584038, -27.13981628, -23.11540031, -22.38797569, -23.44976807,
          -22.53939438, -23.10030365, -25.11281586, -26.95533371, -25.84247017],
         [-25.17584038, -27.13981628, -23.11540031, -22.38797569, -23.44976807,
          -22.53939438, -23.10030365, -25.11281586, -26.95533371, -25.84247017]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.57600594, -0.15141869,  0.91037369,  0.56090927]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0071 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0759 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
         -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 573] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 573] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 256] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.53955221,  0.16099846,  2.22247696,  1.41359806,  1.53142834,
          1.82894993,  2.34312248,  1.67316532, -0.55014038]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
         -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.75it/s]100%|██████████| 1/1 [00:00<00:00,  7.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.72954750, -25.00329971, -27.98002243, -26.96814156, -27.40962029,
          -27.52673721, -28.15061378, -27.60468102, -24.36431122, -24.20353508]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.16077614]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1319 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.86961555480957
alpha/beta optimization time: 1.3778717517852783
initial alpha-crown bounds: tensor([[ 0.62231779,  0.20234025,  2.31167173,  1.48121071,  1.62453079,
          1.90319920,  2.41159058,  1.76273203, -0.44997787]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4499778747558594
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6375 seconds.
lower bounds for all target labels: [0.6223177909851074, 0.2023395299911499, 2.311671733856201, 1.481210708618164, 1.6245307922363281, 1.9031972885131836, 2.411587715148926, 1.7627320289611816, -0.4499778747558594]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 12788 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.33280205726624
Verifying property 0 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.411590576171875.

Properties batch 1, size 1
Remaining timeout: 198.09949851036072
Verifying property 1 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.311671733856201.

Properties batch 2, size 1
Remaining timeout: 197.976544380188
Verifying property 2 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9031991958618164.

Properties batch 3, size 1
Remaining timeout: 197.85883116722107
Verifying property 3 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7627320289611816.

Properties batch 4, size 1
Remaining timeout: 197.74244260787964
Verifying property 4 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6245307922363281.

Properties batch 5, size 1
Remaining timeout: 197.6102750301361
Verifying property 5 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.481210708618164.

Properties batch 6, size 1
Remaining timeout: 197.49413204193115
Verifying property 6 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6223177909851074.

Properties batch 7, size 1
Remaining timeout: 197.3776717185974
Verifying property 7 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2023402452468872.

Properties batch 8, size 1
Remaining timeout: 197.25898814201355
Verifying property 8 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44997787]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
        -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44997787]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 573
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 251
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 843
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008287429809570312
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 55] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 69] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 252 / 256 = 0.984375
pruning-in-iteration extra time: 0.004751682281494141
Time: prepare 0.0020    bound 0.1226    transfer 0.0048    finalize 0.0023    func 0.1317    
Accumulated time: func 0.1317    prepare 0.0024    bound 0.1226    transfer 0.0048    finalize 0.0023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14544 (8), -0.13664 (8), -0.01887 (8), -0.00626 (8), 
Length of domains: 4
Time: pickout 0.0005    decision 0.0269    set_bounds 0.0198    solve 0.1318    add 0.0252    
Accumulated time: pickout 0.0005    decision 0.0269    set_bounds 0.0198    solve 0.1318    add 0.0252    
Current (lb-rhs): -0.14543724060058594
4 domains visited
Cumulative time: 0.22025060653686523

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 4
splitting decisions: 
split level 0: [/input-8, 1392] [/input-8, 1392] [/input-8, 1392] [/input-8, 1392] 
split level 1: [/input-8, 1396] [/input-8, 1388] [/input-8, 1395] [/input-8, 1388] 
split level 2: [/input-8, 1097] [/input-8, 1384] [/input-8, 1396] [/input-8, 1389] 
split level 3: [/input-8, 116] [/input-8, 1396] [/input-8, 116] [/input-8, 1396] 
split level 4: [/input-8, 1398] [/input-8, 116] [/input-8, 1397] [/input-8, 1397] 
split level 5: [/input-8, 1185] [/input-8, 1397] [/input-8, 1398] [/input-8, 116] 
pruning_in_iteration open status: True
ratio of positive domain = 128 / 256 = 0.5
pruning-in-iteration extra time: 0.0048084259033203125
Time: prepare 0.0048    bound 0.1205    transfer 0.0008    finalize 0.0017    func 0.1279    
Accumulated time: func 0.2596    prepare 0.0076    bound 0.2431    transfer 0.0056    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09807 (14), -0.09642 (14), -0.09315 (14), -0.09217 (14), -0.09012 (14), -0.08882 (14), -0.08875 (14), -0.08653 (14), -0.08581 (14), -0.08576 (14), -0.08555 (14), -0.08545 (14), -0.08522 (14), -0.08505 (14), -0.08504 (14), -0.08497 (14), -0.08456 (14), -0.08455 (14), -0.08450 (14), -0.08397 (14), 
Length of domains: 128
Time: pickout 0.0007    decision 0.0206    set_bounds 0.0121    solve 0.1280    add 0.0808    
Accumulated time: pickout 0.0012    decision 0.0475    set_bounds 0.0319    solve 0.2597    add 0.1060    
Current (lb-rhs): -0.09807109832763672
132 domains visited
Cumulative time: 0.47677135467529297

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 128
splitting decisions: 
split level 0: [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] 
pruning_in_iteration open status: False
ratio of positive domain = 17 / 256 = 0.06640625
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0089    bound 0.1175    transfer 0.0107    finalize 0.0035    func 0.1406    
Accumulated time: func 0.4002    prepare 0.0168    bound 0.3606    transfer 0.0163    finalize 0.0074    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09296 (15), -0.09132 (15), -0.08708 (15), -0.08566 (15), -0.08506 (15), -0.08386 (15), -0.08232 (15), -0.08089 (15), -0.08017 (15), -0.07998 (15), -0.07979 (15), -0.07950 (15), -0.07876 (15), -0.07868 (15), -0.07853 (15), -0.07852 (15), -0.07837 (15), -0.07835 (15), -0.07817 (15), -0.07792 (15), 
Length of domains: 239
Time: pickout 0.0219    decision 0.0692    set_bounds 0.0129    solve 0.1410    add 0.0844    
Accumulated time: pickout 0.0231    decision 0.1167    set_bounds 0.0448    solve 0.4007    add 0.1904    
Current (lb-rhs): -0.09296226501464844
371 domains visited
Cumulative time: 0.8154516220092773

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 239
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1389] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
pruning_in_iteration open status: True
ratio of positive domain = 203 / 478 = 0.4246861924686193
pruning-in-iteration extra time: 0.005044460296630859
Time: prepare 0.0108    bound 0.1747    transfer 0.0363    finalize 0.0070    func 0.2288    
Accumulated time: func 0.6291    prepare 0.0278    bound 0.5353    transfer 0.0526    finalize 0.0144    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08712 (16), -0.08549 (16), -0.08124 (16), -0.07992 (16), -0.07926 (16), -0.07804 (16), -0.07643 (16), -0.07507 (16), -0.07422 (16), -0.07407 (16), -0.07398 (16), -0.07358 (16), -0.07283 (16), -0.07272 (16), -0.07259 (16), -0.07251 (16), -0.07248 (16), -0.07232 (16), -0.07214 (16), -0.07205 (16), 
Length of domains: 275
Time: pickout 0.0189    decision 0.0341    set_bounds 0.0142    solve 0.2305    add 0.0817    
Accumulated time: pickout 0.0420    decision 0.1508    set_bounds 0.0590    solve 0.6312    add 0.2721    
Current (lb-rhs): -0.08712196350097656
646 domains visited
Cumulative time: 1.203819990158081

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 275
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1389] 
pruning_in_iteration open status: False
ratio of positive domain = 35 / 550 = 0.0636363636363636
pruning-in-iteration extra time: 0.00012755393981933594
Time: prepare 0.0129    bound 0.1289    transfer 0.0065    finalize 0.0048    func 0.1534    
Accumulated time: func 0.7824    prepare 0.0410    bound 0.6642    transfer 0.0591    finalize 0.0193    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08157 (17), -0.07994 (17), -0.07560 (17), -0.07427 (17), -0.07351 (17), -0.07167 (17), -0.07090 (17), -0.07038 (17), -0.06952 (17), -0.06892 (17), -0.06875 (17), -0.06812 (17), -0.06807 (17), -0.06739 (17), -0.06728 (17), -0.06703 (17), -0.06691 (17), -0.06691 (17), -0.06661 (17), -0.06637 (17), 
Length of domains: 512
Time: pickout 0.0172    decision 0.0376    set_bounds 0.0143    solve 0.1540    add 0.0977    
Accumulated time: pickout 0.0592    decision 0.1884    set_bounds 0.0733    solve 0.7852    add 0.3698    
Current (lb-rhs): -0.08156681060791016
1158 domains visited
Cumulative time: 1.5326402187347412

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 512
splitting decisions: 
split level 0: [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1384] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1384] [/input-8, 1393] [/input-8, 1384] 
pruning_in_iteration open status: False
ratio of positive domain = 1 / 1024 = 0.0009765625
pruning-in-iteration extra time: 0.00014162063598632812
Time: prepare 0.0195    bound 0.1327    transfer 0.0146    finalize 0.0098    func 0.1768    
Accumulated time: func 0.9592    prepare 0.0608    bound 0.7969    transfer 0.0737    finalize 0.0290    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07445 (18), -0.07281 (18), -0.06991 (18), -0.06850 (18), -0.06828 (18), -0.06783 (18), -0.06726 (18), -0.06583 (18), -0.06395 (18), -0.06373 (18), -0.06341 (18), -0.06275 (18), -0.06253 (18), -0.06239 (18), -0.06178 (18), -0.06177 (18), -0.06164 (18), -0.06087 (18), -0.06085 (18), -0.06060 (18), 
Length of domains: 1023
Time: pickout 0.0218    decision 0.0451    set_bounds 0.0251    solve 0.1771    add 0.2361    
Accumulated time: pickout 0.0810    decision 0.2336    set_bounds 0.0984    solve 0.9623    add 0.6059    
Current (lb-rhs): -0.07445049285888672
2181 domains visited
Cumulative time: 2.0493757724761963

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 1023
splitting decisions: 
split level 0: [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] 
pruning_in_iteration open status: False
ratio of positive domain = 35 / 2046 = 0.017106549364613866
pruning-in-iteration extra time: 5.841255187988281e-05
Time: prepare 0.0410    bound 0.1342    transfer 0.0297    finalize 0.0169    func 0.2220    
Accumulated time: func 1.1812    prepare 0.1021    bound 0.9310    transfer 0.1034    finalize 0.0459    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06965 (19), -0.06629 (19), -0.06492 (19), -0.06437 (19), -0.06331 (19), -0.06276 (19), -0.06236 (19), -0.06225 (19), -0.06155 (19), -0.05964 (19), -0.05930 (19), -0.05813 (19), -0.05813 (19), -0.05802 (19), -0.05802 (19), -0.05800 (19), -0.05764 (19), -0.05754 (19), -0.05753 (19), -0.05706 (19), 
Length of domains: 2008
Time: pickout 0.0421    decision 0.0870    set_bounds 0.0525    solve 0.2232    add 0.0745    
Accumulated time: pickout 0.1231    decision 0.3205    set_bounds 0.1509    solve 1.1855    add 0.6804    
Current (lb-rhs): -0.06965255737304688
4189 domains visited
Cumulative time: 2.535353183746338

BaB round 8
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 2008
splitting decisions: 
split level 0: [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 742] [/input-12, 42] [/input-8, 742] [/input-8, 742] [/input-8, 742] 
pruning_in_iteration open status: False
ratio of positive domain = 411 / 4016 = 0.10234063745019917
pruning-in-iteration extra time: 5.91278076171875e-05
Time: prepare 0.4235    bound 0.2155    transfer 0.0179    finalize 0.0252    func 0.6824    
Accumulated time: func 1.8636    prepare 0.5259    bound 1.1465    transfer 0.1213    finalize 0.0712    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06241 (20), -0.06147 (20), -0.06072 (20), -0.05796 (20), -0.05754 (20), -0.05746 (20), -0.05696 (20), -0.05661 (20), -0.05634 (20), -0.05617 (20), -0.05584 (20), -0.05546 (20), -0.05514 (20), -0.05426 (20), -0.05334 (20), -0.05326 (20), -0.05324 (20), -0.05309 (20), -0.05276 (20), -0.05270 (20), 
Length of domains: 3586
Time: pickout 0.0479    decision 0.1334    set_bounds 0.1019    solve 0.6834    add 0.1622    
Accumulated time: pickout 0.1710    decision 0.4539    set_bounds 0.2528    solve 1.8689    add 0.8426    
Current (lb-rhs): -0.06241035461425781
7775 domains visited
Cumulative time: 3.678891897201538

BaB round 9
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0020
batch: 3586
splitting decisions: 
split level 0: [/input-12, 42] [/input-8, 819] [/input-12, 42] [/input-8, 819] [/input-12, 42] [/input-8, 819] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
pruning_in_iteration open status: True
ratio of positive domain = 2437 / 7172 = 0.33979364194088124
pruning-in-iteration extra time: 0.005662441253662109
Time: prepare 0.1566    bound 0.4073    transfer 0.0294    finalize 0.0445    func 0.6390    
Accumulated time: func 2.5027    prepare 0.6828    bound 1.5538    transfer 0.1507    finalize 0.1156    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05581 (21), -0.05488 (21), -0.05410 (21), -0.05137 (21), -0.05107 (21), -0.05083 (21), -0.05036 (21), -0.04991 (21), -0.04967 (21), -0.04952 (21), -0.04933 (21), -0.04912 (21), -0.04893 (21), -0.04849 (21), -0.04816 (21), -0.04784 (21), -0.04685 (21), -0.04674 (21), -0.04639 (21), -0.04623 (21), 
Length of domains: 4735
Time: pickout 0.0686    decision 0.2179    set_bounds 0.2977    solve 0.6404    add 0.1590    
Accumulated time: pickout 0.2396    decision 0.6718    set_bounds 0.5506    solve 2.5094    add 1.0016    
Current (lb-rhs): -0.055808067321777344
12510 domains visited
Cumulative time: 5.094830513000488

BaB round 10
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0049
batch: 4096
splitting decisions: 
split level 0: [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 1394] [/input-8, 819] [/input-8, 819] [/input-8, 1394] [/input-8, 819] [/input-8, 819] 
pruning_in_iteration open status: True
ratio of positive domain = 3266 / 8192 = 0.398681640625
pruning-in-iteration extra time: 0.0062389373779296875
Time: prepare 0.1768    bound 0.3896    transfer 0.0401    finalize 0.0501    func 0.6582    
Accumulated time: func 3.1609    prepare 0.8598    bound 1.9434    transfer 0.1907    finalize 0.1658    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04988 (22), -0.04895 (22), -0.04818 (22), -0.04816 (21), -0.04628 (22), -0.04609 (21), -0.04543 (22), -0.04507 (22), -0.04484 (22), -0.04444 (22), -0.04443 (22), -0.04396 (21), -0.04391 (22), -0.04381 (21), -0.04354 (22), -0.04353 (21), -0.04350 (22), -0.04342 (21), -0.04315 (22), -0.04311 (21), 
Length of domains: 5565
Time: pickout 0.0794    decision 0.2423    set_bounds 0.3292    solve 0.6602    add 0.1430    
Accumulated time: pickout 0.3190    decision 0.9141    set_bounds 0.8798    solve 3.1696    add 1.1446    
Current (lb-rhs): -0.04988288879394531
17436 domains visited
current_vram/total_varm: 9.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.5814368724823

BaB round 11
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 5565
splitting decisions: 
split level 0: [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 1185] [/input-8, 819] [/input-8, 819] 
pruning_in_iteration open status: True
ratio of positive domain = 5896 / 11130 = 0.5297394429469902
pruning-in-iteration extra time: 0.005408763885498047
Time: prepare 0.2426    bound 0.4149    transfer 0.0589    finalize 0.2225    func 0.9402    
Accumulated time: func 4.1011    prepare 1.1028    bound 2.3583    transfer 0.2497    finalize 0.3883    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04657 (23), -0.04563 (23), -0.04487 (23), -0.04224 (22), -0.04212 (23), -0.04172 (23), -0.04150 (23), -0.04112 (23), -0.04057 (23), -0.04047 (23), -0.04026 (22), -0.04023 (23), -0.03980 (23), -0.03963 (23), -0.03927 (23), -0.03906 (23), -0.03857 (23), -0.03856 (23), -0.03812 (22), -0.03784 (22), 
Length of domains: 5234
Time: pickout 0.1068    decision 0.3298    set_bounds 0.4022    solve 0.9426    add 0.1594    
Accumulated time: pickout 0.4257    decision 1.2439    set_bounds 1.2820    solve 4.1121    add 1.3040    
Current (lb-rhs): -0.04657268524169922
22670 domains visited
Cumulative time: 8.585247278213501

BaB round 12
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0048
batch: 5234
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] 
pruning_in_iteration open status: True
ratio of positive domain = 6283 / 10468 = 0.600210164310279
pruning-in-iteration extra time: 0.005967140197753906
Time: prepare 0.2953    bound 0.4316    transfer 0.0620    finalize 0.0887    func 0.8789    
Accumulated time: func 4.9801    prepare 1.3984    bound 2.7899    transfer 0.3116    finalize 0.4770    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04257 (24), -0.04167 (24), -0.04087 (24), -0.03887 (23), -0.03809 (24), -0.03746 (24), -0.03737 (24), -0.03714 (24), -0.03696 (23), -0.03679 (24), -0.03657 (24), -0.03627 (24), -0.03578 (24), -0.03539 (24), -0.03530 (24), -0.03528 (24), -0.03497 (24), -0.03481 (23), -0.03479 (23), -0.03444 (24), 
Length of domains: 4185
Time: pickout 0.1011    decision 0.3318    set_bounds 0.5118    solve 0.8821    add 0.1480    
Accumulated time: pickout 0.5269    decision 1.5757    set_bounds 1.7938    solve 4.9943    add 1.4520    
Current (lb-rhs): -0.042571067810058594
26855 domains visited
Cumulative time: 10.620857000350952

BaB round 13
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0046
batch: 4185
splitting decisions: 
split level 0: [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] 
pruning_in_iteration open status: True
ratio of positive domain = 5317 / 8370 = 0.6352449223416965
pruning-in-iteration extra time: 0.005483150482177734
Time: prepare 0.1940    bound 0.3863    transfer 0.0498    finalize 0.0483    func 0.6796    
Accumulated time: func 5.6596    prepare 1.5927    bound 3.1762    transfer 0.3615    finalize 0.5252    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03871 (25), -0.03791 (25), -0.03695 (25), -0.03452 (24), -0.03420 (25), -0.03364 (25), -0.03360 (25), -0.03323 (25), -0.03280 (25), -0.03254 (24), -0.03242 (25), -0.03185 (25), -0.03133 (25), -0.03129 (25), -0.03084 (24), -0.03041 (24), -0.03038 (25), -0.03023 (25), -0.02974 (25), -0.02939 (24), 
Length of domains: 3053
Time: pickout 0.0870    decision 0.2648    set_bounds 0.3840    solve 0.6817    add 0.1505    
Accumulated time: pickout 0.6138    decision 1.8405    set_bounds 2.1778    solve 5.6760    add 1.6025    
Current (lb-rhs): -0.03870677947998047
29908 domains visited
Cumulative time: 12.234246253967285

BaB round 14
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 3053
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 1394] 
pruning_in_iteration open status: True
ratio of positive domain = 3855 / 6106 = 0.6313462168358992
pruning-in-iteration extra time: 0.005486488342285156
Time: prepare 0.1316    bound 0.3963    transfer 0.0259    finalize 0.0395    func 0.5953    
Accumulated time: func 6.2549    prepare 1.7246    bound 3.5725    transfer 0.3874    finalize 0.5648    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03565 (26), -0.03457 (26), -0.03409 (26), -0.03146 (26), -0.03120 (26), -0.03083 (25), -0.03054 (26), -0.03017 (26), -0.02946 (26), -0.02910 (26), -0.02910 (26), -0.02901 (26), -0.02858 (25), -0.02847 (26), -0.02715 (26), -0.02712 (26), -0.02704 (26), -0.02696 (26), -0.02690 (25), -0.02682 (26), 
Length of domains: 2251
Time: pickout 0.0711    decision 0.1950    set_bounds 0.3282    solve 0.5970    add 0.1070    
Accumulated time: pickout 0.6849    decision 2.0355    set_bounds 2.5060    solve 6.2730    add 1.7095    
Current (lb-rhs): -0.03565216064453125
32159 domains visited
Cumulative time: 13.568604230880737

BaB round 15
Matched cut cplex process, internal label idx = 8
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts: total 281 constraints, 25388 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2280
batch: 2251
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.033721923828125

all verified at 6th iter
pruning_in_iteration open status: True
ratio of positive domain = 4502 / 4502 = 1.0
pruning-in-iteration extra time: 0.0018551349639892578
Time: prepare 0.0973    bound 0.1922    transfer 0.0191    finalize 0.0282    func 0.3659    
Accumulated time: func 6.6209    prepare 1.8222    bound 3.7647    transfer 0.4065    finalize 0.5930    
all_split False
Length of domains: 0
Time: pickout 0.0509    decision 0.1410    set_bounds 0.2415    solve 0.3669    add 0.0001    
Accumulated time: pickout 0.7358    decision 2.1766    set_bounds 2.7475    solve 6.6398    add 1.7097    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
32159 domains visited
Cumulative time: 14.618467807769775

found process to kill: terminal indx = 8
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=83_spec=8_30610381.log
found process for pidx=8
kill process for pidx=8
Result: safe in 17.7683 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.62381744, -28.09670830, -18.92805672, -21.62400627, -18.04868507,
         -20.67170334, -18.38792801, -22.29936600, -26.56884384, -27.05737495]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 230, 1, 686] with unstable size 229 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 686] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [229]; unstable size 229; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 229] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 229] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.50022221,  8.58374786,  0.05487379,  2.84900141,  1.87417769,
         -0.72468781,  3.40504503,  7.17037392,  7.46117973]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.62381744, -28.09670830, -18.92805672, -21.62400627, -18.04868507,
         -20.67170334, -18.38792801, -22.29936600, -26.56884384, -27.05737495]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.62763786, -27.96693420, -18.82089806, -21.58105659, -18.18916893,
          -20.65969467, -17.92498779, -22.51766396, -26.59140778, -26.94355965]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26418114]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0069 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0770 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.05389786, -20.54568100, -25.38948441, -26.07571030, -24.92573357,
         -26.81814766, -25.31372643, -25.39832497, -22.18379402, -23.40080070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 595] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 595] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 232] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74438715, 2.89176798, 3.72229576, 2.51304722, 4.30712318, 2.80102062,
         3.10480452, 0.20504284, 1.77497363]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.32361412, -25.52174950, -20.63148117, -22.61431122, -22.40266609,
         -22.09627724, -23.98217392, -22.95088196, -26.26723480, -25.69747353]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [912]; unstable size 912; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 912] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 912] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 912] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 239] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.74784970, 3.37162113, 1.17322958, 0.89480501, 0.68540311, 2.25614285,
         1.51441813, 4.23806095, 3.34960628]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0704 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.69555855, -19.83600044, -17.26213837, -16.53295326, -15.76759911,
         -16.55274010, -15.97445679, -15.69591236, -22.56094933, -18.99766541]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [484]; unstable size 484; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 223, 1, 484] with unstable size 222 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 484] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 484] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [222]; unstable size 222; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 222] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 222] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.12594318,  2.36834168,  0.02151179, -0.42955112, -0.99394321,
         -0.44192910, -1.36476994,  4.78464174,  1.58999276]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.69555855, -19.83600044, -17.26213837, -16.53295326, -15.76759911,
         -16.55274010, -15.97445679, -15.69591236, -22.56094933, -18.99766541]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.89224243, -20.05119324, -17.43051529, -16.67961121, -15.76606178,
          -16.74633598, -15.92820740, -16.27584839, -22.73025513, -19.33327484],
         [-21.89224243, -20.05119324, -17.43051529, -16.67961121, -15.76606178,
          -16.74633598, -15.92820740, -16.27584839, -22.73025513, -19.33327484]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.40376282, -0.50978661,  0.47048759, -0.34764099]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0732 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.74517250, -27.26931763, -22.31864548, -21.42955971, -22.42046928,
         -21.44980049, -22.51526642, -20.76612473, -26.78885269, -23.30550575]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [399]; unstable size 399; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 176, 1, 399] with unstable size 175 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 399] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 399] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [175]; unstable size 175; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 175] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 175] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.71335769,  3.37155890, -1.61985385, -0.57951510, -1.65425396,
         -0.81910741, -2.40787244,  3.42854452, -0.36425400]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.74517250, -27.26931763, -22.31864548, -21.42955971, -22.42046928,
         -21.44980049, -22.51526642, -20.76612473, -26.78885269, -23.30550575]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.74517059, -27.26931572, -22.31864166, -21.42955780, -22.42046738,
          -21.44979858, -22.51526833, -20.76612663, -26.78884697, -23.30550766],
         [-25.74517059, -27.26931572, -22.31864166, -21.42955780, -22.42046738,
          -21.44979858, -22.51526833, -20.76612663, -26.78884697, -23.30550766]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.88908386,  0.10182571, -0.86884308,  0.19662666, -1.55251503,
           0.98686600]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0831 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.06668091, -12.17250633, -18.19817734, -17.74991226, -18.22573662,
         -18.83922386, -18.43832207, -18.79791641, -13.75891685, -14.38429832]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 591] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 591] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.43584156, 4.09200811, 4.03862000, 4.51079702, 5.00953007, 4.46496344,
         5.03483009, 0.23301744, 1.42504895]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0640 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.34238243, -16.93456459, -14.43105412, -14.20242596, -14.38679028,
         -14.68807125, -15.41123962, -15.82969379, -17.16383553, -15.87702465]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [859]; unstable size 859; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 248, 1, 859] with unstable size 247 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 859] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 859] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [247]; unstable size 247; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 247] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 247] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.60208249, -0.84271908, -2.06194067, -2.20308471, -2.22541595,
         -1.86848950, -1.36994267, -0.36857522, -1.56844425]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.34238243, -16.93456459, -14.43105412, -14.20242596, -14.38679028,
         -14.68807125, -15.41123962, -15.82969379, -17.16383553, -15.87702465]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.34238243, -16.93456650, -14.43105221, -14.20242500, -14.38679028,
          -14.68807125, -15.41123772, -15.82969379, -17.16383553, -15.87702370],
         [-16.34238243, -16.93456650, -14.43105221, -14.20242500, -14.38679028,
          -14.68807125, -15.41123772, -15.82969379, -17.16383553, -15.87702370]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.93114471,  1.52332878, -0.98018551, -1.20881271, -1.02444744,
          -0.72316647,  0.41845608,  1.75259781,  0.46578598]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0654 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.16949272, -23.99048996, -31.56820297, -31.41168404, -30.28091240,
         -31.78048897, -32.67536545, -30.17310143, -29.00139236, -24.21942329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 740] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 740] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 244] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.38111162,  5.21995211,  5.14613342,  3.91153526,  5.43957138,
          6.09781647,  3.61251307,  3.57682610, -0.52638078]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.16949272, -23.99048996, -31.56820297, -31.41168404, -30.28091240,
         -31.78048897, -32.67536545, -30.17310143, -29.00139236, -24.21942329]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.39106178, -23.67284584, -30.69213867, -30.40574837, -29.33213806,
          -30.76441956, -31.73852158, -29.12598610, -28.38734436, -23.48725510]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18559074]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.87058258, -22.74460030, -18.83897781, -17.07898903, -18.22540092,
         -16.89878654, -19.11079788, -18.79213715, -26.21196175, -21.30853462]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [669]; unstable size 669; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 669] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 669] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 669] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 240] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.66332340,  4.03361607,  0.93628335, -0.12254727,  0.23944330,
          1.05922604,  0.79270166,  7.63720131,  2.90536714]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.87058258, -22.74460030, -18.83897781, -17.07898903, -18.22540092,
         -16.89878654, -19.11079788, -18.79213715, -26.21196175, -21.30853462]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.51282120, -22.28214264, -18.49987793, -16.76547241, -17.89261055,
          -16.77055550, -18.66166306, -18.61735344, -25.76009750, -20.99545097]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00508308]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0075 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0821 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
         -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 266, 1, 740] with unstable size 265 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 740] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [265]; unstable size 265; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 265] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 265] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.72773457,  3.26004696,  3.78024006,  3.84159517,  3.89679337,
          4.82130051,  3.72940350, -0.13638735,  0.71589267]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
         -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.78it/s]100%|██████████| 1/1 [00:00<00:00,  7.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.77746010, -17.05466080, -21.88848305, -22.15901375, -22.44706535,
          -22.50233269, -23.34392357, -22.66395569, -17.36938095, -18.43949699]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31472015]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1312 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.383886337280273
alpha/beta optimization time: 1.390821933746338
initial alpha-crown bounds: tensor([[ 1.80881023,  3.35405731,  3.86240482,  3.93695164,  3.99371815,
          4.90125465,  3.85100222, -0.08674765,  0.76243508]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.08674764633178711
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6606 seconds.
lower bounds for all target labels: [1.808807611465454, 3.354058265686035, 3.8624022006988525, 3.93695068359375, 3.993718385696411, 4.901246070861816, 3.851003646850586, -0.08674764633178711, 0.7624333500862122]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [7]
start creating model mps for candidates: ['lay/16_7']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.29810976982117
Verifying property 0 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.901254653930664.

Properties batch 1, size 1
Remaining timeout: 198.13461232185364
Verifying property 1 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.993718147277832.

Properties batch 2, size 1
Remaining timeout: 198.02278327941895
Verifying property 2 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9369516372680664.

Properties batch 3, size 1
Remaining timeout: 197.92575597763062
Verifying property 3 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8624048233032227.

Properties batch 4, size 1
Remaining timeout: 197.8231942653656
Verifying property 4 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8510022163391113.

Properties batch 5, size 1
Remaining timeout: 197.72592639923096
Verifying property 5 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3540573120117188.

Properties batch 6, size 1
Remaining timeout: 197.6286461353302
Verifying property 6 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8088102340698242.

Properties batch 7, size 1
Remaining timeout: 197.53169441223145
Verifying property 7 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7624350786209106.

Properties batch 8, size 1
Remaining timeout: 197.43367910385132
Verifying property 8 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08674765]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
        -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08674765]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 740
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 259
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 1015
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007116794586181641
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 64] 
split level 3: [/input-12, 29] 
split level 4: [/input-12, 42] 
split level 5: [/input-12, 59] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 61] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.887580871582031e-05
Time: prepare 0.0019    bound 0.0070    transfer 0.0049    finalize 0.0039    func 0.0177    
Accumulated time: func 0.0177    prepare 0.0023    bound 0.0070    transfer 0.0049    finalize 0.0039    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0273    set_bounds 0.0198    solve 0.0178    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0273    set_bounds 0.0198    solve 0.0178    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07159042358398438

the mip building process is not terminated yet, kill it
Result: safe in 3.0177 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
         -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 511] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 511] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 148] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.11264586,  7.84995270,  2.51627040,  2.42221284,  2.71285653,
          2.42410803,  5.54274893,  0.54273701,  7.53125143]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
         -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
          -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.66014290]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0919 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.89297295, -27.33354378, -29.85372162, -29.49278831, -29.63881493,
         -29.50118065, -28.79456902, -32.01272583, -30.67852783, -30.54553604]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [545]; unstable size 545; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 545] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 545] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 545] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 206] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.09797335,  0.63166428,  0.38092375,  0.26649189,  0.20289660,
          0.00656366,  2.20104027,  2.04292154,  2.05920005]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.89297295, -27.33354378, -29.85372162, -29.49278831, -29.63881493,
         -29.50118065, -28.79456902, -32.01272583, -30.67852783, -30.54553604]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.34124565, -27.52548599, -29.41050339, -29.07751274, -29.21006012,
          -29.12439346, -28.47667313, -31.67535019, -30.41997719, -30.50797653]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18424034]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0076 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0811 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.40174294, -21.80084610, -13.97534084, -16.28988266, -14.66720581,
         -15.45098114, -14.34288788, -16.27135849, -21.38418579, -20.94428825]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [473]; unstable size 473; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 473] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 473] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 473] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 261] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.13220167,  5.32813597, -1.68543816,  0.95246214, -1.03167868,
         -0.07594633,  0.28766191,  5.26238585,  4.65756130]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.40174294, -21.80084610, -13.97534084, -16.28988266, -14.66720581,
         -15.45098114, -14.34288788, -16.27135849, -21.38418579, -20.94428825]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.40174294, -21.80084610, -13.97533989, -16.28988647, -14.66720772,
          -15.45098114, -14.34288788, -16.27136040, -21.38418961, -20.94428825],
         [-17.40174294, -21.80084610, -13.97533989, -16.28988647, -14.66720772,
          -15.45098114, -14.34288788, -16.27136040, -21.38418961, -20.94428825]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36754799,  0.32431984,  1.10809326]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0833 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
         -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1135]; unstable size 1135; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 418, 1, 1135] with unstable size 417 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1135] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1135] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [417]; unstable size 417; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 417] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 417] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.41564405,  4.65418434,  0.18066597, -0.18956995,  0.62921107,
         -0.03981152,  1.17114019,  2.01148939,  3.41380882]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
         -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.43it/s]100%|██████████| 1/1 [00:00<00:00,  7.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.83646393, -22.39689064, -14.86150932, -16.11657333, -15.43437386,
          -16.66946793, -16.04981232, -17.15288162, -19.10764885, -20.77401161],
         [-17.83646393, -22.39689064, -14.86150932, -16.11657333, -15.43437386,
          -16.66946793, -16.04981232, -17.15288162, -19.10764885, -20.77401161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.57286453, 1.18830299]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1389 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.512428283691406
alpha/beta optimization time: 1.3992729187011719
initial alpha-crown bounds: tensor([[ 1.54290426,  4.87704563,  0.28549981, -0.07817441,  0.74323380,
          0.05855060,  1.29010916,  2.20426655,  3.58899283]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.0781744122505188
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6934 seconds.
lower bounds for all target labels: [1.5429033041000366, 4.877047538757324, 0.28549790382385254, -0.0781753659248352, 0.7432330846786499, 0.0585501492023468, 1.290109634399414, 2.204266309738159, 3.5889928340911865]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [3]
start creating model mps for candidates: ['lay/16_3']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.29133582115173
Verifying property 0 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.877045631408691.

Properties batch 1, size 1
Remaining timeout: 198.03994154930115
Verifying property 1 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5889928340911865.

Properties batch 2, size 1
Remaining timeout: 197.93277144432068
Verifying property 2 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2042665481567383.

Properties batch 3, size 1
Remaining timeout: 197.8397397994995
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.542904257774353.

Properties batch 4, size 1
Remaining timeout: 197.74791359901428
Verifying property 4 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2901091575622559.

Properties batch 5, size 1
Remaining timeout: 197.64959454536438
Verifying property 5 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7432337999343872.

Properties batch 6, size 1
Remaining timeout: 197.55849838256836
Verifying property 6 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.28549981117248535.

Properties batch 7, size 1
Remaining timeout: 197.45950984954834
Verifying property 7 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05855059623718262.

Properties batch 8, size 1
Remaining timeout: 197.36734867095947
Verifying property 8 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07817441]], device='cuda:0') need to verify.
Model prediction is: tensor([-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
        -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07817441]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1135
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 400
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1562
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006175041198730469
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.245208740234375e-05
Time: prepare 0.0019    bound 0.0048    transfer 0.0047    finalize 0.0036    func 0.0150    
Accumulated time: func 0.0150    prepare 0.0023    bound 0.0048    transfer 0.0047    finalize 0.0036    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0258    set_bounds 0.0182    solve 0.0151    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0258    set_bounds 0.0182    solve 0.0151    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06519889831542969

the mip building process is not terminated yet, kill it
Result: safe in 3.0671 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.06963348, -22.13847923, -19.43040848, -17.05935478, -17.91039848,
         -16.70587921, -18.83517647, -19.20193481, -21.40512085, -23.21081352]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [821]; unstable size 821; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 821] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 821] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 821] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 267] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.66440070,  3.63743901,  1.26127362,  0.04986417, -0.05376530,
          0.98363954,  0.99622256,  2.72314215,  4.88065434]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.06963348, -22.13847923, -19.43040848, -17.05935478, -17.91039848,
         -16.70587921, -18.83517647, -19.20193481, -21.40512085, -23.21081352]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.59it/s]100%|██████████| 1/1 [00:00<00:00,  7.58it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.14386940, -22.24015808, -19.51546097, -17.41148949, -17.76541138,
          -17.10868263, -19.04941940, -19.17812157, -21.50530815, -23.38755035]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.65672874]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1348 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 3th iter
best_l after optimization: 16.60454559326172
alpha/beta optimization time: 0.06168723106384277
initial alpha-crown bounds: tensor([[1.72636843e+00, 3.70138025e+00, 1.30631185e+00, 6.20777011e-02,
         6.06596470e-04, 1.02092111e+00, 1.04711556e+00, 2.80543852e+00,
         4.93432760e+00]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.0006065964698791504
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
verified with init bound!
Result: safe-incomplete in 0.3791 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.15164471, -15.32303524, -10.34104061, -11.69358635, -11.02870369,
         -12.56815910, -10.29522896, -13.35671329, -14.96125889, -15.40310478]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1104]; unstable size 1104; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 266, 1, 1104] with unstable size 265 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1104] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1104] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [265]; unstable size 265; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 265] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 265] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.64230967,  2.91880131, -0.80557704,  0.38735589, -0.40144253,
          1.09796917,  1.71821189,  2.96996140,  2.98997831]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.15164471, -15.32303524, -10.34104061, -11.69358635, -11.02870369,
         -12.56815910, -10.29522896, -13.35671329, -14.96125889, -15.40310478]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.88836288, -15.24282074,  -9.95007992, -11.49615860, -10.75760651,
          -12.33977604, -10.26209450, -13.06920719, -14.77008438, -15.26176357],
         [-13.88836288, -15.24282074,  -9.95007992, -11.49615860, -10.75760651,
          -12.33977604, -10.26209450, -13.06920719, -14.77008438, -15.26176357]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31201458,  0.49551201]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0094 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1128 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.15521240, -20.46267700, -15.48517609, -15.11612129, -15.12829685,
         -14.53323936, -17.56829453, -16.12021637, -20.15639496, -18.95636940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 775] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 775] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 275] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.33888173,  3.17010069, -0.78345799, -1.16919303, -0.99560726,
          1.16705465, -0.86630511,  3.00003290,  1.93420291]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.15521240, -20.46267700, -15.48517609, -15.11612129, -15.12829685,
         -14.53323936, -17.56829453, -16.12021637, -20.15639496, -18.95636940]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.15521240, -20.46267509, -15.48517513, -15.11611938, -15.12829590,
          -14.53323841, -17.56829262, -16.12021637, -20.15639305, -18.95636940],
         [-18.15521240, -20.46267509, -15.48517513, -15.11611938, -15.12829590,
          -14.53323841, -17.56829262, -16.12021637, -20.15639305, -18.95636940]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36905575,  0.01217651, -0.58288097,  1.00409698]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0862 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.25936890, -36.14345932, -37.27095795, -38.62052536, -37.58951950,
         -39.79058075, -40.22500229, -39.67473602, -32.04320145, -35.54521942]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1007]; unstable size 1007; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 1007] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 1007] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1007] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 260] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62466055,  2.95583415,  3.49480128,  5.00074387,  3.80081606,
          5.96756840,  6.38276386,  5.76929760,  2.46701241]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.25936890, -36.14345932, -37.27095795, -38.62052536, -37.58951950,
         -39.79058075, -40.22500229, -39.67473602, -32.04320145, -35.54521942]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.95611572, -35.97737122, -36.92116928, -38.44849014, -37.25425720,
          -39.54434204, -39.96480942, -39.30963898, -32.26206589, -35.37592697]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.30595016]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0758 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.35278130, -31.36741257, -23.66108131, -25.04328346, -24.10462570,
         -25.23495674, -26.15161133, -25.66592026, -29.01111603, -29.58918571]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [744]; unstable size 744; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 744] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 744] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 272] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.79987335,  5.21834898, -1.55336547, -0.28184462, -0.22590303,
          0.73269272,  0.47210899,  3.03185964,  3.45756841]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.35278130, -31.36741257, -23.66108131, -25.04328346, -24.10462570,
         -25.23495674, -26.15161133, -25.66592026, -29.01111603, -29.58918571]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.35277939, -31.36741257, -23.66108322, -25.04328346, -24.10462570,
          -25.23495865, -26.15161514, -25.66592407, -29.01112175, -29.58918571],
         [-27.35277939, -31.36741257, -23.66108322, -25.04328346, -24.10462570,
          -25.23495865, -26.15161514, -25.66592407, -29.01112175, -29.58918571]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44354248,  0.93865776,  1.13033295]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0810 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.22183990, -23.66624069, -16.29309082, -19.27029610, -15.39398766,
         -19.13426781, -17.66785431, -19.55938721, -21.54466057, -23.50271797]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1067]; unstable size 1067; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 267, 1, 1067] with unstable size 266 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 1067] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1067] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [266]; unstable size 266; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 266] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.72265244, 6.91143322, 0.00909692, 2.97993922, 2.78059340, 0.93534487,
         3.08999944, 4.73980522, 6.88012981]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0675 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
         -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [905]; unstable size 905; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 307, 1, 905] with unstable size 306 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 905] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 905] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [306]; unstable size 306; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 306] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 306] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86118591,  2.95259547, -0.24725604,  1.06830442,  0.89491725,
          1.90242493,  0.80980349,  3.26965952,  2.34717965]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
         -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.71it/s]100%|██████████| 1/1 [00:00<00:00,  7.70it/s]
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6552 seconds.
lower bounds for all target labels: [1.7263684272766113, 3.7013802528381348, 1.306311845779419, 0.06207770109176636, 0.0006065964698791504, 1.0209211111068726, 1.0471155643463135, 2.80543851852417, 4.934327602386475]
Number of cpus: 96  Number of subproblems: 0
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: []
start creating model mps for candidates: []
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.15029907, -24.19763947, -19.80143929, -20.63853264, -21.10856056,
          -19.26048470, -22.10736084, -21.32276344, -24.41694641, -23.30249786]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.54095459]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1326 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.521696090698242
alpha/beta optimization time: 1.430145502090454
initial alpha-crown bounds: tensor([[ 1.94473183,  3.04443955, -0.17711735,  1.08993268,  0.95973802,
          1.94066226,  0.88277894,  3.39136600,  2.44516444]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.17711734771728516
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.7492 seconds.
lower bounds for all target labels: [1.9447318315505981, 3.0444395542144775, -0.17711734771728516, 1.0899326801300049, 0.95973801612854, 1.9406622648239136, 0.8827789425849915, 3.3913660049438477, 2.445164442062378]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.25843954086304
Verifying property 0 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3913660049438477.

Properties batch 1, size 1
Remaining timeout: 197.99210739135742
Verifying property 1 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0444395542144775.

Properties batch 2, size 1
Remaining timeout: 197.8840847015381
Verifying property 2 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.445164442062378.

Properties batch 3, size 1
Remaining timeout: 197.79022336006165
Verifying property 3 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9447318315505981.

Properties batch 4, size 1
Remaining timeout: 197.69751024246216
Verifying property 4 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9406622648239136.

Properties batch 5, size 1
Remaining timeout: 197.58915781974792
Verifying property 5 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0899326801300049.

Properties batch 6, size 1
Remaining timeout: 197.49657273292542
Verifying property 6 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.95973801612854.

Properties batch 7, size 1
Remaining timeout: 197.37959694862366
Verifying property 7 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8827789425849915.

Properties batch 8, size 1
Remaining timeout: 197.2555708885193
Verifying property 8 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17711735]], device='cuda:0') need to verify.
Model prediction is: tensor([-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
        -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17711735]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 905
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 297
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 1224
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0005478858947753906
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 59] 
split level 6: [/input-12, 50] 
split level 7: [/input-8, 421] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.173683166503906e-05
Time: prepare 0.0032    bound 0.0047    transfer 0.0041    finalize 0.0028    func 0.0148    
Accumulated time: func 0.0148    prepare 0.0036    bound 0.0047    transfer 0.0041    finalize 0.0028    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0262    set_bounds 0.0205    solve 0.0149    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0262    set_bounds 0.0205    solve 0.0149    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06786632537841797

the mip building process is not terminated yet, kill it
Result: safe in 3.2376 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.51308250, -22.43931961, -18.50501633, -19.17534065, -19.69705963,
         -19.25070381, -20.29491043, -19.66059494, -20.88692856, -21.50129509]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [811]; unstable size 811; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 811] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 811] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 811] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 308] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.88940120,  0.17124391, -2.58539486, -1.63983226, -1.31377983,
         -1.55795717, -0.86024141, -1.02569330, -0.27762079]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.51308250, -22.43931961, -18.50501633, -19.17534065, -19.69705963,
         -19.25070381, -20.29491043, -19.66059494, -20.88692856, -21.50129509]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.51308632, -22.43931770, -18.50501251, -19.17533684, -19.69705772,
          -19.25070381, -20.29491043, -19.66059494, -20.88693047, -21.50129509],
         [-19.51308632, -22.43931770, -18.50501251, -19.17533684, -19.69705772,
          -19.25070381, -20.29491043, -19.66059494, -20.88693047, -21.50129509]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.14750862, -1.15558243, -0.48525810,  0.03646278, -0.40989113,
           0.63431549,  1.22633553,  1.84070015]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0915 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
         -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [794]; unstable size 794; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 794] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 794] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 794] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 220] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78699017,  3.17528486,  2.83466148,  2.43643188,  3.92167950,
          3.64071131,  3.01096821, -1.71908045,  0.30822122]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
         -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
          -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21599770]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.74126989,  0.74126989,  0.77301592,  ...,  0.36031753,
             0.31269848,  0.28095245],
           [ 0.72539687,  0.70952386,  0.74126989,  ...,  0.32857150,
             0.29682547,  0.24920642],
           [ 0.70952386,  0.70952386,  0.72539687,  ...,  0.34444451,
             0.31269848,  0.28095245],
           ...,
           [-0.89365077, -0.89365077, -0.87777776,  ..., -1.43333328,
            -1.30634916, -1.22698402],
           [-0.95714283, -0.94126981, -0.90952379,  ..., -1.33809519,
            -1.24285710, -1.22698402],
           [-1.00476182, -0.94126981, -0.94126981,  ..., -1.24285710,
            -1.21111107, -1.19523799]],

          [[ 0.99838978,  0.99838978,  1.03059590,  ...,  0.67632860,
             0.62801939,  0.59581327],
           [ 0.96618366,  0.96618366,  0.99838978,  ...,  0.64412248,
             0.59581327,  0.56360716],
           [ 0.96618366,  0.96618366,  0.99838978,  ...,  0.61191636,
             0.57971025,  0.53140104],
           ...,
           [-0.78904986, -0.80515295, -0.78904986,  ..., -1.35265696,
            -1.22383249, -1.14331722],
           [-0.86956519, -0.85346210, -0.82125598,  ..., -1.25603855,
            -1.15942025, -1.14331722],
           [-0.90177131, -0.85346210, -0.85346210,  ..., -1.14331722,
            -1.12721407, -1.11111104]],

          [[ 1.21589243,  1.18590748,  1.18590748,  ...,  0.90104967,
             0.87106466,  0.84107965],
           [ 1.18590748,  1.15592217,  1.14092970,  ...,  0.87106466,
             0.84107965,  0.79610211],
           [ 1.15592217,  1.12593722,  1.09595215,  ...,  0.82608712,
             0.79610211,  0.76611710],
           ...,
           [-0.58320838, -0.59820086, -0.58320838,  ..., -1.13793111,
            -1.01799107, -0.94302845],
           [-0.68815589, -0.65817088, -0.64317840,  ..., -1.09295356,
            -0.97301346, -0.92803597],
           [-0.73313338, -0.67316341, -0.67316341,  ..., -1.01799107,
            -0.94302845, -0.89805096]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0725 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.65453911, -28.29750824, -25.45104980, -28.11194038, -25.15310860,
         -28.19610023, -28.02035522, -26.93565750, -23.93723679, -27.98169518]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 701] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 701] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 240] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.39394569, 1.70091999, 3.99040151, 1.13504887, 3.87649226, 3.90128279,
         2.66181898, 0.08498117, 3.97777271]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0751 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.15261269, -17.94160461, -14.95448303, -13.92990398, -14.40570259,
         -14.65692043, -13.89788246, -15.86449909, -18.80389977, -17.83309364]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [800]; unstable size 800; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 364, 1, 800] with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 800] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 800] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 363] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 363] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.67310286,  1.51413012, -0.13763881, -0.79897380,  0.29746613,
         -1.22556412,  0.01225722,  2.61003327,  1.46175098]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.15261269, -17.94160461, -14.95448303, -13.92990398, -14.40570259,
         -14.65692043, -13.89788246, -15.86449909, -18.80389977, -17.83309364]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.15261078, -17.94160461, -14.95448208, -13.92990494, -14.40570354,
          -14.65692043, -13.89788151, -15.86450100, -18.80390167, -17.83309174],
         [-17.15261078, -17.94160461, -14.95448208, -13.92990494, -14.40570354,
          -14.65692043, -13.89788151, -15.86450100, -18.80390167, -17.83309174]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.02457714,  0.47579861, -0.03202343]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0769 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.79030228, -30.41434669, -27.64798355, -28.61847115, -28.48152161,
         -29.57408333, -29.43395233, -30.51341820, -29.47771645, -30.12065697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [497]; unstable size 497; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 140, 1, 497] with unstable size 139 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 497] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 497] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [139]; unstable size 139; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 139] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.35675907, 3.17424917, 3.96514368, 3.89233899, 4.75903225, 4.93405867,
         5.60336447, 4.77322006, 5.42915201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0666 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.93199348, -23.69929504, -17.71457291, -17.07846260, -17.30852318,
         -18.18094444, -14.50052071, -20.42077255, -23.73473549, -24.23317528]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 358, 1, 523] with unstable size 357 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 523] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [357]; unstable size 357; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 357] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 357] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.54994011, 6.75454903, 1.88174200, 1.26384258, 1.37097096, 2.10497594,
         3.85746694, 6.81311560, 7.42777777]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0677 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
         -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [707]; unstable size 707; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 707] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 707] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 707] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 285] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.54880238,  4.78813887, -0.27670145,  2.23500395,  2.02165794,
          1.09089088,  1.08386612,  4.23047447,  4.55613422]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
         -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.62it/s]100%|██████████| 1/1 [00:00<00:00,  7.61it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.62423515, -22.64641190, -16.24180603, -18.99898338, -15.90926933,
          -18.73514366, -18.09658813, -18.31100082, -22.13391876, -22.22410011]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33253670]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1341 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.334936141967773
alpha/beta optimization time: 1.3985400199890137
initial alpha-crown bounds: tensor([[ 2.69250393,  4.96834803, -0.15371287,  2.31067252,  2.06917906,
          1.21068287,  1.12954378,  4.43741512,  4.67030334]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.15371286869049072
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6561 seconds.
lower bounds for all target labels: [2.6925039291381836, 4.968348026275635, -0.15371286869049072, 2.3106725215911865, 2.069179058074951, 1.2106828689575195, 1.1295433044433594, 4.43741512298584, 4.670302391052246]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.30366563796997
Verifying property 0 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.968348026275635.

Properties batch 1, size 1
Remaining timeout: 198.07093405723572
Verifying property 1 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.6703033447265625.

Properties batch 2, size 1
Remaining timeout: 197.96670770645142
Verifying property 2 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.43741512298584.

Properties batch 3, size 1
Remaining timeout: 197.87389278411865
Verifying property 3 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6925039291381836.

Properties batch 4, size 1
Remaining timeout: 197.7822937965393
Verifying property 4 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3106725215911865.

Properties batch 5, size 1
Remaining timeout: 197.69101476669312
Verifying property 5 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.069179058074951.

Properties batch 6, size 1
Remaining timeout: 197.5908591747284
Verifying property 6 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2106828689575195.

Properties batch 7, size 1
Remaining timeout: 197.4931538105011
Verifying property 7 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1295437812805176.

Properties batch 8, size 1
Remaining timeout: 197.40145206451416
Verifying property 8 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15371287]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
        -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15371287]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 707
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 281
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1014
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008635520935058594
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 0] 
split level 5: [/input-12, 32] 
split level 6: [/input-12, 49] 
split level 7: [/input-8, 1627] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.935264587402344e-05
Time: prepare 0.0032    bound 0.0047    transfer 0.0044    finalize 0.0031    func 0.0155    
Accumulated time: func 0.0155    prepare 0.0037    bound 0.0047    transfer 0.0044    finalize 0.0031    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0286    set_bounds 0.0213    solve 0.0156    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0286    set_bounds 0.0213    solve 0.0156    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07242465019226074

the mip building process is not terminated yet, kill it
Result: safe in 3.0466 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.02572250, -27.23712921, -27.95742416, -26.55063438, -28.86597252,
         -27.63702202, -28.59363937, -27.52897644, -25.43346977, -24.92130852]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 654] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 654] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 239] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.94611073,  1.33183825,  1.31211567,  0.27194214,  2.35654354,
          1.27423716,  2.06728745,  0.98784947, -0.88770485]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.02572250, -27.23712921, -27.95742416, -26.55063438, -28.86597252,
         -27.63702202, -28.59363937, -27.52897644, -25.43346977, -24.92130852]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.50359154, -27.88374138, -28.51186180, -27.05513573, -29.40580559,
          -28.19179726, -29.20458603, -28.14871597, -25.54721451, -25.68577957]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13856506]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0073 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0928 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
         -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [904]; unstable size 904; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 904] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 904] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 904] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 246] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.46684718,  3.44482827,  0.77367592,  1.71358132, -0.53734136,
          2.20122480,  1.18286562,  4.27326059,  2.94509697]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
         -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
          -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.23146915]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0773 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.03265953, -29.80158615, -28.01462746, -29.49231339, -27.82477570,
         -29.74157143, -29.00487137, -29.65236473, -26.56688309, -30.04109955]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 952] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 952] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.56631374, 3.00716305, 4.34157419, 2.61966276, 4.48081493, 3.68361378,
         4.35380030, 1.53697228, 5.00381374]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0685 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.37767220, -22.63599205, -16.68470383, -17.56246567, -14.84348488,
         -17.98977852, -17.40301132, -16.78604507, -20.68542862, -22.37132454]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [762]; unstable size 762; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 332, 1, 762] with unstable size 331 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 762] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 762] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [331]; unstable size 331; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 331] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 331] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.03614450, 5.42467785, 1.01491427, 1.54336739, 1.87700105, 1.22836089,
         1.06106281, 4.09441233, 4.97289801]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0703 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.56104851, -25.43757248, -22.30799866, -20.47185135, -22.67837715,
         -19.94359779, -23.14790916, -21.03846169, -23.14024353, -23.94003487]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [756]; unstable size 756; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 756] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 756] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 756] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 261] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.01938009, 3.41801071, 1.25207305, 0.18682468, 1.56868887, 2.03725863,
         0.10003173, 1.46886086, 2.03972721]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0669 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.62328815, -18.18186188, -18.71482468, -19.00971794, -17.99854279,
         -20.46262550, -20.13095474, -20.09570503, -10.99292850, -16.95243645]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [626]; unstable size 626; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 626] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 626] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 626] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 200] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.72617197, 5.95293760, 6.50314236, 6.90349913, 5.91612148, 8.26207638,
         7.94433451, 7.78404760, 4.84170914]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0681 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.57911682, -18.01341438, -21.32861328, -22.58253288, -23.55420685,
         -22.23183250, -24.82959557, -22.38050079, -21.57038307, -21.39789391]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [445]; unstable size 445; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 445] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 445] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 445] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 172] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.14326191, 1.50191069, 2.99028373, 3.75917029, 2.42487884, 5.00067997,
         2.60955763, 1.96376371, 2.50974631]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0697 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.73344231, -25.29462242, -19.50235748, -18.98530388, -19.31733131,
         -19.14581299, -19.42850494, -19.97113991, -22.87136459, -23.31713867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [875]; unstable size 875; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 356, 1, 875] with unstable size 355 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 875] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 875] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [355]; unstable size 355; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 355] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 355] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.85499275,  3.47037911, -0.90604115, -0.95058942, -0.23341931,
         -0.53099990, -0.42522985,  1.47124827,  1.91838479]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.73344231, -25.29462242, -19.50235748, -18.98530388, -19.31733131,
         -19.14581299, -19.42850494, -19.97113991, -22.87136459, -23.31713867]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.94274139, -25.66132355, -19.52083969, -19.54301643, -19.51924324,
          -19.72516251, -19.77233505, -20.36951065, -23.25295830, -23.81954956],
         [-21.94274139, -25.66132355, -19.52083969, -19.54301643, -19.51924324,
          -19.72516251, -19.77233505, -20.36951065, -23.25295830, -23.81954956]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.02217674, -0.02377319,  0.18214607,  0.22931862,  0.82649422]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0189 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0889 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
         -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [867]; unstable size 867; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 867] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 867] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 867] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 165] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.32719994, -0.10789156,  0.04068589,  2.53268194,  0.74327826,
          2.51675272,  1.46775651,  8.13148308,  8.55004883]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
         -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.72it/s]100%|██████████| 1/1 [00:00<00:00,  7.71it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.14986801, -45.41040802, -35.38068390, -35.74518204, -38.33306503,
          -36.46290207, -38.23206711, -37.45825958, -43.79046249, -44.53758621]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.23081589]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1323 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.40303039550781
alpha/beta optimization time: 1.3843960762023926
initial alpha-crown bounds: tensor([[ 9.34874249, -0.09103370,  0.06384563,  2.55860019,  0.76943541,
          2.53152752,  1.50653625,  8.14646530,  8.56891346]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.0910336971282959
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6445 seconds.
lower bounds for all target labels: [9.34874153137207, -0.0910348892211914, 0.06384682655334473, 2.5585994720458984, 0.7694337368011475, 2.531527519226074, 1.5065336227416992, 8.146466255187988, 8.568912506103516]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [1]
start creating model mps for candidates: ['lay/16_1']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.3156397342682
Verifying property 0 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.348742485046387.

Properties batch 1, size 1
Remaining timeout: 198.00902199745178
Verifying property 1 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.568913459777832.

Properties batch 2, size 1
Remaining timeout: 197.90141701698303
Verifying property 2 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.146465301513672.

Properties batch 3, size 1
Remaining timeout: 197.79463577270508
Verifying property 3 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5586001873016357.

Properties batch 4, size 1
Remaining timeout: 197.69327878952026
Verifying property 4 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.531527519226074.

Properties batch 5, size 1
Remaining timeout: 197.5916042327881
Verifying property 5 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5065362453460693.

Properties batch 6, size 1
Remaining timeout: 197.4895339012146
Verifying property 6 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7694354057312012.

Properties batch 7, size 1
Remaining timeout: 197.38649487495422
Verifying property 7 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.06384563446044922.

Properties batch 8, size 1
Remaining timeout: 197.28378033638
Verifying property 8 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09103370]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
        -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09103370]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 867
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 159
Node /15 input 0: size torch.Size([100]) unstable 10
-----------------
# of unstable neurons: 1036
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007753372192382812
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 5] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 90] 
split level 7: [/input-8, 1835] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.9591064453125e-05
Time: prepare 0.0033    bound 0.0050    transfer 0.0121    finalize 0.0032    func 0.0237    
Accumulated time: func 0.0237    prepare 0.0038    bound 0.0050    transfer 0.0121    finalize 0.0032    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0279    set_bounds 0.0249    solve 0.0238    add 0.0001    
Accumulated time: pickout 0.0008    decision 0.0279    set_bounds 0.0249    solve 0.0238    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08382010459899902

the mip building process is not terminated yet, kill it
Result: safe in 3.1543 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.40458870, -23.24298668, -27.73333549, -27.90799141, -27.40376663,
         -28.05864906, -28.91640854, -27.54826736, -27.30009651, -25.52873611]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [684]; unstable size 684; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 684] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 684] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 684] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 285] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.35218477, 2.28642750, 2.51820087, 1.68908215, 2.53085232, 3.30504608,
         2.17191458, 2.28330278, 1.35116148]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0685 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.14629936, -20.71539307, -24.46714020, -24.97179604, -24.83234215,
         -25.31670189, -27.17220497, -25.32540894, -20.97597122, -23.65787697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 206, 1, 595] with unstable size 205 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 595] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [205]; unstable size 205; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 205] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 205] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.96349621,  1.88203430,  2.57148695,  2.24077988,  2.77335167,
          4.53415537,  2.59828901, -0.94698799,  1.90783060]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.14629936, -20.71539307, -24.46714020, -24.97179604, -24.83234215,
         -25.31670189, -27.17220497, -25.32540894, -20.97597122, -23.65787697]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.84978294, -20.93986130, -24.20811844, -24.78613472, -24.63944435,
          -25.15346718, -27.01600456, -25.25593185, -20.52700806, -23.77411842]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.41285324]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0535 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
         -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [448]; unstable size 448; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 448] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 448] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 448] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 263] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.72115088,  3.32613230,  0.34109974,  2.45504904,  2.08227730,
          2.35139203,  1.41229248,  3.91198707,  5.09997845]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
         -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
          -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.47766113]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.54057121, -21.40389442, -20.55339050, -20.58682060, -20.08682251,
         -21.26310730, -20.37835312, -20.33173752, -21.91990280, -21.46942329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 326, 1, 799] with unstable size 325 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 799] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [325]; unstable size 325; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 325] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 325] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.38908625, -1.18870044, -2.95449829, -2.60739803, -3.34873295,
         -1.96987033, -3.07361507, -3.06156135, -1.16480923]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.54057121, -21.40389442, -20.55339050, -20.58682060, -20.08682251,
         -21.26310730, -20.37835312, -20.33173752, -21.91990280, -21.46942329]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.54056931, -21.40389061, -20.55338860, -20.58681679, -20.08682060,
          -21.26310539, -20.37835312, -20.33173943, -21.91990280, -21.46942520],
         [-21.54056931, -21.40389061, -20.55338860, -20.58681679, -20.08682060,
          -21.26310539, -20.37835312, -20.33173943, -21.91990280, -21.46942520]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07114410, -0.06553459, -0.91603661, -0.88260841, -1.38260460,
          -0.20631981, -1.09107208, -1.13768578,  0.45047760]]],
       device='cuda:0')
number of violation:  7
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.34185982, -18.34316826, -19.90431023, -19.60602570, -20.92833138,
         -19.82821465, -22.19347191, -21.69088936, -18.03870010, -18.59241867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [703]; unstable size 703; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 703] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 703] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 221] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.52273822, -0.96111429, -0.21341372, -0.24194908,  0.79662275,
         -0.12263823,  1.94754982,  1.67940378, -2.02313375]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.34185982, -18.34316826, -19.90431023, -19.60602570, -20.92833138,
         -19.82821465, -22.19347191, -21.69088936, -18.03870010, -18.59241867]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.34185982, -18.34316635, -19.90431023, -19.60602379, -20.92833138,
          -19.82821274, -22.19347000, -21.69088745, -18.03870010, -18.59241676],
         [-19.34185982, -18.34316635, -19.90431023, -19.60602379, -20.92833138,
          -19.82821274, -22.19347000, -21.69088745, -18.03870010, -18.59241676]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.74944305, -0.24925041,  1.31189346,  1.01360703,  1.23579597,
          -0.55371666]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0598 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.60500145, -24.89141464, -19.17918777, -20.05367851, -18.86228371,
         -19.76714134, -19.96246719, -19.42761040, -24.32711601, -22.82327843]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 640] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 640] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 243] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.29259658,  3.78634953, -0.83907104,  0.12916958, -0.20247674,
         -0.06445056, -0.28860760,  3.43385983,  1.86539745]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.60500145, -24.89141464, -19.17918777, -20.05367851, -18.86228371,
         -19.76714134, -19.96246719, -19.42761040, -24.32711601, -22.82327843]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.97348404, -25.25050926, -19.38525391, -20.47401237, -19.55496788,
          -20.18207741, -20.31973648, -20.18347740, -24.64109039, -23.26975060],
         [-22.97348404, -25.25050926, -19.38525391, -20.47401237, -19.55496788,
          -20.18207741, -20.31973648, -20.18347740, -24.64109039, -23.26975060]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16971397,  0.62710953,  0.76476860,  0.62850952]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0624 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
         -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [953]; unstable size 953; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 256, 1, 953] with unstable size 255 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 953] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 953] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [255]; unstable size 255; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 255] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.24769020,  1.62967837, -0.30106211, -0.63823360, -0.46131349,
          0.13329798,  1.71760333,  0.29797369,  0.64501834]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
         -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.29it/s]100%|██████████| 1/1 [00:00<00:00,  7.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.69080544, -28.02049828, -25.76778221, -25.07657433, -25.68251801,
          -26.00996780, -27.59398842, -26.61277580, -24.82239151, -26.61855125],
         [-25.69080544, -28.02049828, -25.76778221, -25.07657433, -25.68251801,
          -26.00996780, -27.59398842, -26.61277580, -24.82239151, -26.61855125]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.86841393, 0.94539070, 0.25418282, 0.86012650]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1404 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.3044395446777344
alpha/beta optimization time: 1.31429123878479
initial alpha-crown bounds: tensor([[-0.19642854,  1.68688798, -0.24070239, -0.57432038, -0.39791775,
          0.20313370,  1.77232814,  0.36443245,  0.68702602]], device='cuda:0')
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.574320375919342
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6642 seconds.
lower bounds for all target labels: [-0.1964290738105774, 1.6868878602981567, -0.24070239067077637, -0.574320375919342, -0.3979182243347168, 0.2031337022781372, 1.7723276615142822, 0.36443161964416504, 0.6870260238647461]
Number of cpus: 96  Number of subproblems: 4
Reassign each subproblems with number of thread: 24
Starting MIP solver for these labels: [0, 2, 3, 4]
start creating model mps for candidates: ['lay/16_0', 'lay/16_2', 'lay/16_3', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=2_30614050.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=4_30614050.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=0_30614050.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=0_30614050.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=2_30614050.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15456 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15459 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=4_30614050.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15460 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 15461 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.37724208831787
Verifying property 0 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7723281383514404.

Properties batch 1, size 1
Remaining timeout: 198.14759182929993
Verifying property 1 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6868879795074463.

Properties batch 2, size 1
Remaining timeout: 198.04040479660034
Verifying property 2 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6870260238647461.

Properties batch 3, size 1
Remaining timeout: 197.9370837211609
Verifying property 3 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3644324541091919.

Properties batch 4, size 1
Remaining timeout: 197.8344440460205
Verifying property 4 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2031337022781372.

Properties batch 5, size 1
Remaining timeout: 197.71871614456177
Verifying property 5 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19642854]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19642854]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009407997131347656
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 79] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 2] 
split level 7: [/input-8, 1690] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.553794860839844e-05
Time: prepare 0.0031    bound 0.0045    transfer 0.0044    finalize 0.0028    func 0.0150    
Accumulated time: func 0.0150    prepare 0.0036    bound 0.0045    transfer 0.0044    finalize 0.0028    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0256    set_bounds 0.0209    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0256    set_bounds 0.0209    solve 0.0150    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06812858581542969


Properties batch 6, size 1
Remaining timeout: 197.5051040649414
Verifying property 6 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24070239]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24070239]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0002636909484863281
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 46] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 32] 
split level 7: [/input-12, 2] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.38690185546875e-05
Time: prepare 0.0018    bound 0.0041    transfer 0.0008    finalize 0.0016    func 0.0084    
Accumulated time: func 0.0084    prepare 0.0022    bound 0.0041    transfer 0.0008    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0160    solve 0.0084    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0160    solve 0.0084    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052497148513793945


Properties batch 7, size 1
Remaining timeout: 197.22273588180542
Verifying property 7 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39791775]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39791775]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00028324127197265625
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 2] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 32] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.482269287109375e-05
Time: prepare 0.0018    bound 0.0041    transfer 0.0008    finalize 0.0016    func 0.0084    
Accumulated time: func 0.0084    prepare 0.0022    bound 0.0041    transfer 0.0008    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0160    solve 0.0084    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0160    solve 0.0084    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05233454704284668


Properties batch 8, size 1
Remaining timeout: 196.99645471572876
Verifying property 8 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.57432038]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.57432038]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00020503997802734375
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 58] 
split level 7: [/input-12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 207 / 256 = 0.80859375
pruning-in-iteration extra time: 0.005370140075683594
Time: prepare 0.0018    bound 0.1383    transfer 0.0020    finalize 0.0016    func 0.1438    
Accumulated time: func 0.1438    prepare 0.0022    bound 0.1383    transfer 0.0020    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27084 (8), -0.25784 (8), -0.25034 (8), -0.23723 (8), -0.22955 (8), -0.22299 (8), -0.21785 (8), -0.20952 (8), -0.19601 (8), -0.18239 (8), -0.15783 (8), -0.15412 (8), -0.15273 (8), -0.15162 (8), -0.14523 (8), -0.13825 (8), -0.12764 (8), -0.12665 (8), -0.12378 (8), -0.12198 (8), 
Length of domains: 49
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0176    solve 0.1438    add 0.0629    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0176    solve 0.1438    add 0.0629    
Current (lb-rhs): -0.2708423137664795
49 domains visited
Cumulative time: 0.25974297523498535

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 49
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 337] [/input-12, 29] [/input-8, 337] [/input-12, 29] 
split level 1: [/input-8, 1690] [/input-8, 1690] [/input-8, 1690] [/input-8, 1052] [/input-8, 338] [/input-8, 1053] [/input-8, 338] [/input-8, 1698] [/input-8, 338] [/input-8, 1698] 
split level 2: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1053] [/input-8, 1943] [/input-8, 933] [/input-8, 1943] [/input-8, 1052] [/input-8, 1943] [/input-8, 933] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 392 = 0.3877551020408163
pruning-in-iteration extra time: 0.004690408706665039
Time: prepare 0.0075    bound 0.1413    transfer 0.0075    finalize 0.0038    func 0.1602    
Accumulated time: func 0.3040    prepare 0.0100    bound 0.2795    transfer 0.0096    finalize 0.0054    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24497 (11), -0.24392 (11), -0.22772 (11), -0.22540 (11), -0.22404 (11), -0.22173 (11), -0.21691 (11), -0.21629 (11), -0.21619 (11), -0.21479 (11), -0.21407 (11), -0.20818 (11), -0.20037 (11), -0.19916 (11), -0.19799 (11), -0.19768 (11), -0.19716 (11), -0.19654 (11), -0.19642 (11), -0.19550 (11), 
Length of domains: 240
Time: pickout 0.0076    decision 0.0185    set_bounds 0.0119    solve 0.1603    add 0.0826    
Accumulated time: pickout 0.0080    decision 0.0422    set_bounds 0.0295    solve 0.3042    add 0.1455    
Current (lb-rhs): -0.24496948719024658
289 domains visited
Cumulative time: 0.5480711460113525

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 240
splitting decisions: 
split level 0: [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-12, 29] [/input-12, 29] [/input-8, 1626] [/input-12, 29] [/input-8, 1690] [/input-12, 29] [/input-12, 29] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 480 = 0.26249999999999996
pruning-in-iteration extra time: 0.004008769989013672
Time: prepare 0.0093    bound 0.1717    transfer 0.0067    finalize 0.0039    func 0.1917    
Accumulated time: func 0.4957    prepare 0.0194    bound 0.4512    transfer 0.0163    finalize 0.0093    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24021 (12), -0.23914 (12), -0.22703 (12), -0.22508 (12), -0.22212 (12), -0.21985 (12), -0.21947 (12), -0.21724 (12), -0.20957 (12), -0.20776 (12), -0.20741 (12), -0.20576 (12), -0.20560 (12), -0.20497 (12), -0.20492 (12), -0.20132 (12), -0.20094 (12), -0.20020 (12), -0.19386 (12), -0.19225 (12), 
Length of domains: 354
Time: pickout 0.0201    decision 0.0228    set_bounds 0.0109    solve 0.1918    add 0.0934    
Accumulated time: pickout 0.0280    decision 0.0650    set_bounds 0.0404    solve 0.4960    add 0.2388    
Current (lb-rhs): -0.24020510911941528
643 domains visited
Cumulative time: 0.8944449424743652

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 354
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1610] [/input-12, 29] [/input-8, 1690] [/input-8, 1690] [/input-8, 1053] [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-8, 1610] 
pruning_in_iteration open status: False
ratio of positive domain = 114 / 708 = 0.1610169491525424
pruning-in-iteration extra time: 5.507469177246094e-05
Time: prepare 0.0137    bound 0.1069    transfer 0.0237    finalize 0.0059    func 0.1503    
Accumulated time: func 0.6460    prepare 0.0334    bound 0.5581    transfer 0.0400    finalize 0.0152    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23285 (13), -0.23154 (13), -0.23079 (13), -0.22617 (13), -0.22197 (13), -0.21910 (13), -0.21908 (13), -0.21703 (13), -0.21683 (13), -0.21494 (13), -0.21435 (13), -0.20425 (13), -0.20157 (13), -0.20154 (13), -0.19948 (13), -0.19883 (13), -0.19721 (13), -0.19707 (13), -0.19673 (13), -0.19668 (13), 
Length of domains: 588
Time: pickout 0.0178    decision 0.0361    set_bounds 0.0171    solve 0.1505    add 0.0965    
Accumulated time: pickout 0.0459    decision 0.1010    set_bounds 0.0575    solve 0.6465    add 0.3353    
Current (lb-rhs): -0.2328464388847351
1231 domains visited
Cumulative time: 1.2202370166778564

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 588
splitting decisions: 
split level 0: [/input-8, 933] [/input-8, 1626] [/input-8, 1626] [/input-8, 1611] [/input-8, 1618] [/input-8, 1052] [/input-8, 933] [/input-8, 1611] [/input-8, 1953] [/input-8, 1953] 
pruning_in_iteration open status: False
ratio of positive domain = 160 / 1176 = 0.13605442176870752
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0231    bound 0.1115    transfer 0.0096    finalize 0.0112    func 0.1554    
Accumulated time: func 0.8015    prepare 0.0567    bound 0.6695    transfer 0.0496    finalize 0.0264    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23025 (14), -0.22894 (14), -0.22821 (14), -0.22391 (14), -0.21624 (14), -0.21445 (14), -0.21422 (14), -0.21359 (14), -0.21251 (14), -0.21208 (14), -0.21202 (14), -0.21100 (14), -0.21048 (14), -0.21004 (14), -0.20739 (14), -0.20157 (14), -0.20088 (14), -0.19883 (14), -0.19860 (14), -0.19831 (14), 
Length of domains: 1010
Time: pickout 0.0225    decision 0.0491    set_bounds 0.0262    solve 0.1557    add 0.1555    
Accumulated time: pickout 0.0683    decision 0.1501    set_bounds 0.0837    solve 0.8022    add 0.4909    
Current (lb-rhs): -0.23024728894233704
2241 domains visited
Cumulative time: 1.6473987102508545

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1010
splitting decisions: 
split level 0: [/input-8, 179] [/input-8, 1690] [/input-8, 1618] [/input-8, 1053] [/input-8, 1713] [/input-8, 1611] [/input-8, 1611] [/input-8, 1626] [/input-12, 29] [/input-8, 1690] 
pruning_in_iteration open status: False
ratio of positive domain = 283 / 2020 = 0.1400990099009901
pruning-in-iteration extra time: 5.435943603515625e-05
Time: prepare 0.0429    bound 0.1341    transfer 0.0309    finalize 0.0168    func 0.2249    
Accumulated time: func 1.0264    prepare 0.0998    bound 0.8037    transfer 0.0805    finalize 0.0432    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22843 (15), -0.22706 (15), -0.22231 (15), -0.22133 (15), -0.21339 (15), -0.21260 (15), -0.21205 (15), -0.21135 (15), -0.21065 (15), -0.21039 (15), -0.21016 (15), -0.20923 (15), -0.20883 (15), -0.20837 (15), -0.20803 (15), -0.20540 (15), -0.20335 (15), -0.19816 (15), -0.19689 (15), -0.19574 (15), 
Length of domains: 1724
Time: pickout 0.0783    decision 0.0819    set_bounds 0.0570    solve 0.2254    add 0.1130    
Accumulated time: pickout 0.1466    decision 0.2321    set_bounds 0.1407    solve 1.0276    add 0.6039    
Current (lb-rhs): -0.22843003273010254
3965 domains visited
Cumulative time: 2.2219443321228027

BaB round 7
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 1724
splitting decisions: 
split level 0: [/input-8, 625] [/input-8, 1626] [/input-8, 1713] [/input-8, 932] [/input-8, 1953] [/input-8, 625] [/input-12, 29] [/input-8, 913] [/input-8, 1626] [/input-8, 1724] 
pruning_in_iteration open status: False
ratio of positive domain = 603 / 3448 = 0.17488399071925753
pruning-in-iteration extra time: 7.915496826171875e-05
Time: prepare 0.0817    bound 0.2111    transfer 0.0539    finalize 0.0298    func 0.3770    
Accumulated time: func 1.4034    prepare 0.1818    bound 1.0147    transfer 0.1344    finalize 0.0730    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22236 (16), -0.22093 (16), -0.22052 (16), -0.21520 (16), -0.21407 (16), -0.21155 (16), -0.21008 (16), -0.20738 (16), -0.20618 (16), -0.20553 (16), -0.20537 (16), -0.20461 (16), -0.20430 (16), -0.20371 (16), -0.20325 (16), -0.20266 (16), -0.20249 (16), -0.20182 (16), -0.20121 (16), -0.19860 (16), 
Length of domains: 2839
Time: pickout 0.0454    decision 0.1136    set_bounds 0.2352    solve 0.3782    add 0.3071    
Accumulated time: pickout 0.1920    decision 0.3457    set_bounds 0.3759    solve 1.4058    add 0.9110    
Current (lb-rhs): -0.2223612666130066
6804 domains visited
Cumulative time: 3.322166919708252

BaB round 8
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 2839
splitting decisions: 
split level 0: [/input-8, 1943] [/input-8, 1953] [/input-8, 934] [/input-8, 934] [/input-8, 604] [/input-8, 1713] [/input-12, 61] [/input-8, 1690] [/input-8, 1053] [/input-8, 1716] 
pruning_in_iteration open status: False
ratio of positive domain = 1071 / 5678 = 0.18862275449101795
pruning-in-iteration extra time: 8.463859558105469e-05
Time: prepare 0.1541    bound 0.2972    transfer 0.0328    finalize 0.0484    func 0.5342    
Accumulated time: func 1.9376    prepare 0.3363    bound 1.3119    transfer 0.1672    finalize 0.1214    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21654 (17), -0.21469 (17), -0.21348 (17), -0.21169 (17), -0.20933 (17), -0.20898 (17), -0.20815 (17), -0.20713 (17), -0.20490 (17), -0.20421 (17), -0.20193 (17), -0.20148 (17), -0.20086 (17), -0.20066 (17), -0.20026 (17), -0.19962 (17), -0.19947 (17), -0.19764 (17), -0.19735 (17), -0.19708 (17), 
Length of domains: 4592
Time: pickout 0.1074    decision 0.1938    set_bounds 0.3350    solve 0.5358    add 0.1701    
Accumulated time: pickout 0.2994    decision 0.5394    set_bounds 0.7110    solve 1.9416    add 1.0811    
Current (lb-rhs): -0.21654149889945984
11396 domains visited
Cumulative time: 4.688886880874634

BaB round 9
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0034
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1716] [/input-8, 1707] [/input-8, 1943] [/input-8, 1943] [/input-8, 1713] [/input-8, 1610] [/input-8, 933] [/input-8, 934] [/input-8, 1716] [/input-8, 1716] 
pruning_in_iteration open status: False
ratio of positive domain = 1600 / 8192 = 0.1953125
pruning-in-iteration extra time: 6.4849853515625e-05
Time: prepare 0.2046    bound 0.3794    transfer 0.0460    finalize 0.0720    func 0.7033    
Accumulated time: func 2.6410    prepare 0.5413    bound 1.6914    transfer 0.2132    finalize 0.1934    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21348 (17), -0.20898 (17), -0.20818 (18), -0.20713 (17), -0.20709 (18), -0.20638 (18), -0.20590 (18), -0.20526 (18), -0.20200 (18), -0.20193 (17), -0.20017 (18), -0.19963 (18), -0.19902 (18), -0.19866 (18), -0.19836 (18), -0.19708 (17), -0.19565 (18), -0.19542 (17), -0.19509 (17), -0.19498 (18), 
Length of domains: 7065
Time: pickout 0.0890    decision 0.2586    set_bounds 0.3734    solve 0.7050    add 0.1884    
Accumulated time: pickout 0.3884    decision 0.7981    set_bounds 1.0844    solve 2.6466    add 1.2695    
Current (lb-rhs): -0.21348008513450623
17965 domains visited
current_vram/total_varm: 9.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.333733081817627

BaB round 10
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 7065
splitting decisions: 
split level 0: [/input-8, 934] [/input-8, 1713] [/input-8, 1707] [/input-8, 1943] [/input-8, 1713] [/input-8, 1716] [/input-8, 1690] [/input-8, 1053] [/input-8, 1626] [/input, 2231] 
pruning_in_iteration open status: True
ratio of positive domain = 3047 / 14130 = 0.21564048124557678
pruning-in-iteration extra time: 0.0027000904083251953
Time: prepare 0.5494    bound 0.6313    transfer 0.0865    finalize 0.1234    func 1.3925    
Accumulated time: func 4.0335    prepare 1.0911    bound 2.3227    transfer 0.2996    finalize 0.3169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20767 (18), -0.20452 (19), -0.20334 (19), -0.20273 (19), -0.20223 (19), -0.20154 (19), -0.20055 (18), -0.20010 (18), -0.19959 (18), -0.19879 (18), -0.19828 (19), -0.19776 (18), -0.19654 (19), -0.19592 (19), -0.19525 (19), -0.19492 (19), -0.19470 (19), -0.19461 (18), -0.19280 (18), -0.19195 (19), 
Length of domains: 11083
Time: pickout 0.1268    decision 0.4369    set_bounds 0.5096    solve 1.3960    add 0.2053    
Accumulated time: pickout 0.5152    decision 1.2350    set_bounds 1.5939    solve 4.0426    add 1.4748    
Current (lb-rhs): -0.20766738057136536
29048 domains visited
Cumulative time: 9.047453165054321

BaB round 11
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0056
batch: 8192
splitting decisions: 
split level 0: [/input-8, 934] [/input, 393] [/input, 3000] [/input-8, 933] [/input-8, 1610] [/input-8, 1716] [/input, 3000] [/input, 393] [/input-12, 61] [/input-8, 934] 
pruning_in_iteration open status: True
ratio of positive domain = 3742 / 16384 = 0.2283935546875
pruning-in-iteration extra time: 0.004880189895629883
Time: prepare 0.4302    bound 0.7255    transfer 0.1017    finalize 0.1527    func 1.4119    
Accumulated time: func 5.4453    prepare 1.5217    bound 3.0482    transfer 0.4014    finalize 0.4696    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20400 (19), -0.20022 (20), -0.20010 (18), -0.19959 (18), -0.19844 (20), -0.19793 (20), -0.19776 (18), -0.19754 (20), -0.19694 (19), -0.19576 (20), -0.19538 (20), -0.19519 (19), -0.19461 (18), -0.19405 (20), -0.19359 (20), -0.19313 (20), -0.19165 (20), -0.19132 (20), -0.19094 (20), -0.19092 (20), 
Length of domains: 15533
Time: pickout 0.1548    decision 0.7746    set_bounds 0.6384    solve 1.4165    add 0.2377    
Accumulated time: pickout 0.6700    decision 2.0096    set_bounds 2.2323    solve 5.4591    add 1.7125    
Current (lb-rhs): -0.2039964497089386
41690 domains visited
current_vram/total_varm: 22.1GB/99.9GB, batch_size increase to 16384
Cumulative time: 12.324883937835693

BaB round 12
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0055
batch: 15533
splitting decisions: 
split level 0: [/input-8, 1943] [/input-8, 1953] [/input, 393] [/input-8, 1943] [/input-8, 1707] [/input-12, 61] [/input, 3016] [/input, 2471] [/input-8, 1713] [/input-8, 934] 
pruning_in_iteration open status: False
ratio of positive domain = 6180 / 31066 = 0.1989313075387884
pruning-in-iteration extra time: 0.00025153160095214844
Time: prepare 0.8320    bound 1.2841    transfer 0.1842    finalize 0.5363    func 2.8385    
Accumulated time: func 8.2838    prepare 2.3542    bound 4.3323    transfer 0.5856    finalize 1.0059    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19970 (20), -0.19643 (19), -0.19589 (19), -0.19440 (21), -0.19408 (19), -0.19321 (21), -0.19272 (20), -0.19262 (21), -0.19259 (20), -0.19247 (21), -0.19179 (21), -0.19142 (21), -0.19115 (21), -0.19089 (19), -0.19084 (20), -0.19068 (21), -0.19022 (21), -0.18935 (21), -0.18805 (21), -0.18731 (21), 
Length of domains: 24779
Time: pickout 0.2903    decision 1.2972    set_bounds 1.0138    solve 2.8451    add 0.2666    
Accumulated time: pickout 0.9604    decision 3.3068    set_bounds 3.2460    solve 8.3042    add 1.9791    
Current (lb-rhs): -0.19970294833183289
66469 domains visited
Cumulative time: 18.10673952102661

BaB round 13
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts: total 699 constraints, 30372 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2724
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 393] [/input-8, 1943] [/input, 3000] [/input-8, 1713] [/input-8, 1707] [/input, 3016] [/input-8, 1713] [/input, 2231] [/input-8, 932] [/input-8, 1943] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1936790943145752
10 lb beta sum: 140.3282470703125, worst -0.05715489387512207
pruning_in_iteration open status: True
ratio of positive domain = 32202 / 32768 = 0.98272705078125
pruning-in-iteration extra time: 0.006013631820678711
Time: prepare 0.8721    bound 4.3314    transfer 0.1823    finalize 0.2511    func 5.8542    
Accumulated time: func 14.1380    prepare 3.2268    bound 8.6637    transfer 0.7679    finalize 1.2570    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18519 (21), -0.18391 (21), -0.18339 (21), -0.18302 (21), -0.18210 (21), -0.17896 (21), -0.17727 (21), -0.17658 (21), -0.17645 (19), -0.17601 (21), -0.17556 (21), -0.17553 (21), -0.17481 (19), -0.17264 (21), -0.17202 (21), -0.17159 (21), -0.17059 (19), -0.17055 (21), -0.16923 (21), -0.16906 (19), 
Length of domains: 8961
Time: pickout 0.2999    decision 2.0601    set_bounds 1.4739    solve 5.8631    add 0.1070    
Accumulated time: pickout 1.2602    decision 5.3670    set_bounds 4.7200    solve 14.1673    add 2.0861    
Current (lb-rhs): -0.18518570065498352
67035 domains visited
Cumulative time: 28.362911224365234

BaB round 14
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts: total 1297 constraints, 44838 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6032
batch: 8961
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 604] [/input-8, 1943] [/input, 2185] [/input-12, 61] [/input-8, 1634] [/input, 2231] [/input, 3000] [/input-8, 604] [/input-8, 625] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.189985454082489
10 lb beta sum: 615.8521728515625, worst -0.009617507457733154

all verified at 12th iter
pruning_in_iteration open status: True
ratio of positive domain = 17922 / 17922 = 1.0
pruning-in-iteration extra time: 0.002999544143676758
Time: prepare 0.4884    bound 2.7819    transfer 0.1005    finalize 0.3852    func 3.8712    
Accumulated time: func 18.0093    prepare 3.7156    bound 11.4457    transfer 0.8684    finalize 1.6422    
all_split False
Length of domains: 0
Time: pickout 0.1582    decision 0.5604    set_bounds 0.6381    solve 3.8754    add 0.0002    
Accumulated time: pickout 1.4184    decision 5.9274    set_bounds 5.3580    solve 18.0427    add 2.0863    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
67035 domains visited
Cumulative time: 34.316606760025024

found process to kill: terminal indx = 0
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=0_30614050.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=0_30614050.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=0_30614050.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=0_30614050.log
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=2_30614050.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=2_30614050.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=2_30614050.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=2_30614050.log
found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=3_30614050.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=4_30614050.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=4_30614050.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=4_30614050.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=127_spec=4_30614050.log
found process for pidx=0
kill process for pidx=0
found process for pidx=2
found process for pidx=3
found process for pidx=4
Result: safe in 37.7194 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.50119209, -19.03553009, -15.22840977, -15.80129242, -14.75272465,
         -15.83410263, -14.41858292, -16.04555511, -18.78121948, -17.07835579]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 277, 1, 566] with unstable size 276 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 566] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [276]; unstable size 276; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 276] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.08655155,  2.27971554, -0.70720398,  0.21668965, -1.24121785,
          0.14262736, -0.35904813,  2.26373291,  0.64331341]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.50119209, -19.03553009, -15.22840977, -15.80129242, -14.75272465,
         -15.83410263, -14.41858292, -16.04555511, -18.78121948, -17.07835579]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.99808788, -18.69559097, -14.74748039, -15.45328903, -14.09618664,
          -15.44491768, -14.31151581, -15.40262127, -18.31984901, -16.73563576],
         [-15.99808788, -18.69559097, -14.74748039, -15.45328903, -14.09618664,
          -15.44491768, -14.31151581, -15.40262127, -18.31984901, -16.73563576]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.43596458, -0.21532917,  1.09110546]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0085 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0826 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.34526443, -29.08344650, -25.10714531, -24.64510918, -24.53378105,
         -24.57837105, -26.13238144, -26.32098007, -25.42654800, -28.22369576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [589]; unstable size 589; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 279, 1, 589] with unstable size 278 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 589] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 589] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [278]; unstable size 278; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 278] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 278] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.90512055,  2.61772990, -0.68264651, -0.29089308, -1.19851410,
          0.45634806,  0.37348229, -0.85104156,  1.92439795]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.34526443, -29.08344650, -25.10714531, -24.64510918, -24.53378105,
         -24.57837105, -26.13238144, -26.32098007, -25.42654800, -28.22369576]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.34526443, -29.08345222, -25.10714912, -24.64510918, -24.53377914,
          -24.57837105, -26.13237953, -26.32098007, -25.42654991, -28.22369576],
         [-25.34526443, -29.08345222, -25.10714912, -24.64510918, -24.53377914,
          -24.57837105, -26.13237953, -26.32098007, -25.42654991, -28.22369576]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.76689339,  0.52877808,  0.06673813, -0.04459190,  0.84817886]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0735 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.30639458, -26.81990623, -22.08092117, -22.72490120, -20.55580521,
         -22.10051918, -22.94018555, -20.62528801, -29.47222137, -25.84111977]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [482]; unstable size 482; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 210, 1, 482] with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 482] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 209] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.94138622,  2.94850683, -1.16203547,  0.27302724, -2.38051224,
         -0.17814422, -2.52197599,  5.83368540,  2.26016068]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.30639458, -26.81990623, -22.08092117, -22.72490120, -20.55580521,
         -22.10051918, -22.94018555, -20.62528801, -29.47222137, -25.84111977]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.30639648, -26.81990433, -22.08091927, -22.72489929, -20.55580711,
          -22.10051918, -22.94018173, -20.62528992, -29.47222328, -25.84112358],
         [-25.30639648, -26.81990433, -22.08091927, -22.72489929, -20.55580711,
          -22.10051918, -22.94018173, -20.62528992, -29.47222328, -25.84112358]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01959991, -1.54471207,  0.83966255, -1.47522926]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0745 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.38834953, -31.51884651, -29.35291672, -31.02542496, -30.66601372,
         -31.39447021, -32.53964615, -32.87446594, -24.85302734, -31.34247780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [590]; unstable size 590; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 208, 1, 590] with unstable size 207 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 590] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [207]; unstable size 207; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 207] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 207] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.28638160, 5.51830244, 2.94133329, 4.63216543, 3.96261144, 4.82937813,
         6.07474232, 5.84654808, 5.52136803]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0448 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
         -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 595] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 595] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 232] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.10743809,  5.94193125,  6.68529701,  5.16697359,  7.68069792,
          6.76294947,  6.25848007,  0.80630016, -0.04625964]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
         -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.72it/s]100%|██████████| 1/1 [00:00<00:00,  8.71it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.74093628, -32.63446808, -39.92547989, -40.66252518, -39.21731186,
          -41.79864883, -40.77612686, -40.37427521, -34.67422867, -33.05698013]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.42251205]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1173 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 41.18775177001953
alpha/beta optimization time: 1.2465918064117432
initial alpha-crown bounds: tensor([[ 1.18385696,  6.04057741,  6.78337240,  5.29151726,  7.78996563,
          6.85149002,  6.37167501,  0.88482285, -0.00952506]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.009525060653686523
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6582 seconds.
lower bounds for all target labels: [1.1838536262512207, 6.040577411651611, 6.7833709716796875, 5.291518211364746, 7.7899651527404785, 6.851491928100586, 6.371675491333008, 0.8848199844360352, -0.009524703025817871]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49247932434082
Verifying property 0 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.789965629577637.

Properties batch 1, size 1
Remaining timeout: 198.29515933990479
Verifying property 1 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.851490020751953.

Properties batch 2, size 1
Remaining timeout: 198.17797994613647
Verifying property 2 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.783372402191162.

Properties batch 3, size 1
Remaining timeout: 198.0654172897339
Verifying property 3 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.37167501449585.

Properties batch 4, size 1
Remaining timeout: 197.95294308662415
Verifying property 4 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.040577411651611.

Properties batch 5, size 1
Remaining timeout: 197.83988642692566
Verifying property 5 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.29151725769043.

Properties batch 6, size 1
Remaining timeout: 197.72753071784973
Verifying property 6 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1838569641113281.

Properties batch 7, size 1
Remaining timeout: 197.60679864883423
Verifying property 7 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8848228454589844.

Properties batch 8, size 1
Remaining timeout: 197.48573327064514
Verifying property 8 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00952506]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
        -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00952506]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 595
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 227
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 838
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006699562072753906
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-8, 156] 
split level 2: [/input-12, 12] 
split level 3: [/input-12, 15] 
split level 4: [/input-8, 1122] 
split level 5: [/input-12, 89] 
split level 6: [/input-12, 2] 
split level 7: [/input-8, 164] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.673004150390625e-05
Time: prepare 0.0032    bound 0.0047    transfer 0.0047    finalize 0.0030    func 0.0156    
Accumulated time: func 0.0156    prepare 0.0036    bound 0.0047    transfer 0.0047    finalize 0.0030    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0259    set_bounds 0.0220    solve 0.0156    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0259    set_bounds 0.0220    solve 0.0156    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06991195678710938

the mip building process is not terminated yet, kill it
Result: safe in 2.9749 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.45841980, -44.35070419, -34.18724823, -36.62807846, -41.51102829,
         -36.81817245, -39.17654037, -38.88699341, -42.89539719, -42.96294785]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [414]; unstable size 414; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 108, 1, 414] with unstable size 107 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 414] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 414] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [107]; unstable size 107; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 107] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 107] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.80952775, 9.28114986, 1.87684715, 6.70495224, 2.04463530, 4.42981815,
         4.07691669, 7.95990849, 7.91283512]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0700 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
         -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 952] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 952] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 267] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86406374,  0.76336527,  2.41063452,  2.30971622,  3.50218701,
          1.55449796,  4.16273069, -1.88281894,  0.94847751]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
         -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
          -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.72462654]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0700 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
         -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [503]; unstable size 503; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 503] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 503] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 503] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 221] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.14191866,  3.64040279,  2.98625755,  2.87868166,  3.34063101,
          4.70360231,  3.04852533,  1.37090325, -0.29452491]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
         -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.49it/s]100%|██████████| 1/1 [00:00<00:00,  8.49it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.27663136, -10.99063969, -16.15567589, -15.54304314, -15.45358086,
          -16.03116608, -17.35605240, -15.81715107, -13.23739529, -11.18209076]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.19145107]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1206 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.241046905517578
alpha/beta optimization time: 1.2585136890411377
initial alpha-crown bounds: tensor([[ 3.18642330,  3.68983507,  3.03233480,  2.93258476,  3.39427757,
          4.75412846,  3.10958815,  1.40874910, -0.26687288]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2668728828430176
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6637 seconds.
lower bounds for all target labels: [3.186422348022461, 3.6898350715637207, 3.032334804534912, 2.932582378387451, 3.394277572631836, 4.754128456115723, 3.109588146209717, 1.4087491035461426, -0.2668728828430176]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5023558139801
Verifying property 0 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.754128456115723.

Properties batch 1, size 1
Remaining timeout: 198.22647190093994
Verifying property 1 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6898350715637207.

Properties batch 2, size 1
Remaining timeout: 198.06975197792053
Verifying property 2 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.394277572631836.

Properties batch 3, size 1
Remaining timeout: 197.9646008014679
Verifying property 3 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1864233016967773.

Properties batch 4, size 1
Remaining timeout: 197.846759557724
Verifying property 4 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.109588146209717.

Properties batch 5, size 1
Remaining timeout: 197.74437594413757
Verifying property 5 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.032334804534912.

Properties batch 6, size 1
Remaining timeout: 197.64135003089905
Verifying property 6 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.932584762573242.

Properties batch 7, size 1
Remaining timeout: 197.53885197639465
Verifying property 7 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4087491035461426.

Properties batch 8, size 1
Remaining timeout: 197.43589282035828
Verifying property 8 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26687288]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
        -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26687288]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 503
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 219
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 745
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006878376007080078
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.0048313140869140625
Time: prepare 0.0019    bound 0.1121    transfer 0.0045    finalize 0.0019    func 0.1204    
Accumulated time: func 0.1204    prepare 0.0023    bound 0.1121    transfer 0.0045    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02063 (8), -0.01873 (8), -0.01809 (8), -0.01557 (8), -0.01121 (8), -0.00922 (8), -0.00885 (8), -0.00591 (8), 
Length of domains: 8
Time: pickout 0.0005    decision 0.0255    set_bounds 0.0185    solve 0.1205    add 0.0333    
Accumulated time: pickout 0.0005    decision 0.0255    set_bounds 0.0185    solve 0.1205    add 0.0333    
Current (lb-rhs): -0.020630359649658203
8 domains visited
Cumulative time: 0.21155786514282227

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 8
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] 
split level 1: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 2: [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] 
split level 3: [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] 
split level 4: [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.744529724121094e-05
Time: prepare 0.0050    bound 0.0040    transfer 0.0007    finalize 0.0015    func 0.0113    
Accumulated time: func 0.1316    prepare 0.0076    bound 0.1161    transfer 0.0052    finalize 0.0034    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0222    set_bounds 0.0142    solve 0.0113    add 0.0001    
Accumulated time: pickout 0.0015    decision 0.0477    set_bounds 0.0326    solve 0.1318    add 0.0334    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.26135921478271484

the mip building process is not terminated yet, kill it
Result: safe in 3.2524 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.03878975, -27.34531403, -23.53932953, -24.00347710, -23.92297554,
         -24.22077560, -25.12296104, -25.69461441, -24.00042725, -27.72712517]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [585]; unstable size 585; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 585] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 585] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 195] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.34309196, 0.87681031, 1.16531014, 1.17494893, 1.34177256, 2.16514778,
         2.73782182, 1.01523066, 4.69900179]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0509 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
         -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [438]; unstable size 438; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 438] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 438] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 438] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 275] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.22114468,  4.09420586, -0.54178780,  0.56779766, -0.32674563,
          0.62577617,  1.91951919,  3.76403737,  3.22747231]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
         -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.37it/s]100%|██████████| 1/1 [00:00<00:00,  8.36it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.04311180, -21.13624954, -15.83210659, -16.94238091, -16.04538727,
          -17.10531425, -15.73818588, -18.64249992, -21.03587151, -20.26518440],
         [-20.04311180, -21.13624954, -15.83210659, -16.94238091, -16.04538727,
          -17.10531425, -15.73818588, -18.64249992, -21.03587151, -20.26518440]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.09392071, 0.30720139]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1226 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.21332359313965
alpha/beta optimization time: 1.2462074756622314
initial alpha-crown bounds: tensor([[ 3.30038977,  4.16773129, -0.48484433,  0.61480713, -0.26430166,
          0.68667448,  2.01555777,  3.85170746,  3.32560158]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4848443269729614
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6427 seconds.
lower bounds for all target labels: [3.3003897666931152, 4.167730331420898, -0.4848443269729614, 0.61480313539505, -0.26430225372314453, 0.686668872833252, 2.015557050704956, 3.8517074584960938, 3.325601577758789]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 4]
start creating model mps for candidates: ['lay/16_2', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 16975 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 16978 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47758531570435
Verifying property 0 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.167731285095215.

Properties batch 1, size 1
Remaining timeout: 198.26615810394287
Verifying property 1 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8517074584960938.

Properties batch 2, size 1
Remaining timeout: 198.15118932724
Verifying property 2 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.325601577758789.

Properties batch 3, size 1
Remaining timeout: 198.04770684242249
Verifying property 3 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3003897666931152.

Properties batch 4, size 1
Remaining timeout: 197.94499349594116
Verifying property 4 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0155577659606934.

Properties batch 5, size 1
Remaining timeout: 197.8420660495758
Verifying property 5 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6866744756698608.

Properties batch 6, size 1
Remaining timeout: 197.73941469192505
Verifying property 6 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.61480712890625.

Properties batch 7, size 1
Remaining timeout: 197.61822843551636
Verifying property 7 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26430166]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
        -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26430166]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 438
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 724
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0005362033843994141
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 56] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 31] 
split level 5: [/input-12, 34] 
split level 6: [/input-8, 1249] 
split level 7: [/input-8, 1259] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.004677295684814453
Time: prepare 0.0032    bound 0.1144    transfer 0.0048    finalize 0.0020    func 0.1244    
Accumulated time: func 0.1244    prepare 0.0036    bound 0.1144    transfer 0.0048    finalize 0.0020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06717 (8), -0.05960 (8), -0.03960 (8), -0.03835 (8), -0.03719 (8), -0.03169 (8), -0.00880 (8), -0.00764 (8), 
Length of domains: 8
Time: pickout 0.0005    decision 0.0274    set_bounds 0.0202    solve 0.1245    add 0.0281    
Accumulated time: pickout 0.0005    decision 0.0274    set_bounds 0.0202    solve 0.1245    add 0.0281    
Current (lb-rhs): -0.0671650767326355
8 domains visited
Cumulative time: 0.21542048454284668

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 8
splitting decisions: 
split level 0: [/input-12, 68] [/input-8, 1241] [/input-12, 68] [/input-8, 1241] [/input-12, 68] [/input-8, 1241] [/input-12, 68] [/input-8, 1241] 
split level 1: [/input-8, 1241] [/input-8, 166] [/input-8, 1241] [/input-8, 166] [/input-8, 1241] [/input-8, 166] [/input-8, 1241] [/input-8, 166] 
split level 2: [/input-8, 166] [/input-8, 28] [/input-8, 166] [/input-8, 28] [/input-8, 166] [/input-8, 28] [/input-8, 166] [/input-8, 28] 
split level 3: [/input-8, 28] [/input-8, 803] [/input-8, 28] [/input-8, 1644] [/input-8, 28] [/input-8, 803] [/input-8, 28] [/input-8, 803] 
split level 4: [/input-8, 803] [/input-8, 1644] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 1644] [/input-8, 803] [/input-8, 1644] 
pruning_in_iteration open status: True
ratio of positive domain = 166 / 256 = 0.6484375
pruning-in-iteration extra time: 0.005105733871459961
Time: prepare 0.0052    bound 0.1460    transfer 0.0009    finalize 0.0018    func 0.1540    
Accumulated time: func 0.2784    prepare 0.0091    bound 0.2604    transfer 0.0057    finalize 0.0039    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04122 (13), -0.04082 (13), -0.04015 (13), -0.03970 (13), -0.03760 (13), -0.03700 (13), -0.03677 (13), -0.03652 (13), -0.03638 (13), -0.03594 (13), -0.03588 (13), -0.03549 (13), -0.03333 (13), -0.03315 (13), -0.03310 (13), -0.03256 (13), -0.03232 (13), -0.03220 (13), -0.03202 (13), -0.03167 (13), 
Length of domains: 90
Time: pickout 0.0011    decision 0.0169    set_bounds 0.0133    solve 0.1541    add 0.0810    
Accumulated time: pickout 0.0017    decision 0.0443    set_bounds 0.0336    solve 0.2786    add 0.1091    
Current (lb-rhs): -0.04122036695480347
98 domains visited
Cumulative time: 0.4899117946624756

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 90
splitting decisions: 
split level 0: [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-12, 68] [/input-8, 44] [/input-8, 44] [/input-12, 68] [/input-8, 44] [/input-8, 44] 
split level 1: [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 755] [/input-8, 1258] [/input-8, 1258] 
pruning_in_iteration open status: True
ratio of positive domain = 262 / 360 = 0.7277777777777779
pruning-in-iteration extra time: 0.004897117614746094
Time: prepare 0.0071    bound 0.1981    transfer 0.0066    finalize 0.0043    func 0.2162    
Accumulated time: func 0.4946    prepare 0.0164    bound 0.4585    transfer 0.0123    finalize 0.0082    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03348 (15), -0.03315 (15), -0.03239 (15), -0.03198 (15), -0.02975 (15), -0.02931 (15), -0.02901 (15), -0.02869 (15), -0.02865 (15), -0.02818 (15), -0.02813 (15), -0.02777 (15), -0.02758 (15), -0.02731 (15), -0.02646 (15), -0.02640 (15), -0.02625 (15), -0.02616 (15), -0.02527 (15), -0.02521 (15), 
Length of domains: 98
Time: pickout 0.0151    decision 0.0174    set_bounds 0.0110    solve 0.2164    add 0.0812    
Accumulated time: pickout 0.0168    decision 0.0617    set_bounds 0.0446    solve 0.4949    add 0.1903    
Current (lb-rhs): -0.03348472714424133
196 domains visited
Cumulative time: 0.8408551216125488

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 98
splitting decisions: 
split level 0: [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] 
split level 1: [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] 
pruning_in_iteration open status: True
ratio of positive domain = 191 / 392 = 0.4872448979591837
pruning-in-iteration extra time: 0.0046885013580322266
Time: prepare 0.0075    bound 0.1600    transfer 0.0028    finalize 0.0029    func 0.1733    
Accumulated time: func 0.6679    prepare 0.0240    bound 0.6185    transfer 0.0151    finalize 0.0111    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02640 (17), -0.02545 (17), -0.02529 (17), -0.02395 (17), -0.02375 (17), -0.02363 (17), -0.02299 (17), -0.02268 (17), -0.02250 (17), -0.02196 (17), -0.02166 (17), -0.02158 (17), -0.02114 (17), -0.02101 (17), -0.02017 (17), -0.01996 (17), -0.01995 (17), -0.01991 (17), -0.01959 (17), -0.01958 (17), 
Length of domains: 201
Time: pickout 0.0130    decision 0.0180    set_bounds 0.0103    solve 0.1734    add 0.0806    
Accumulated time: pickout 0.0298    decision 0.0797    set_bounds 0.0549    solve 0.6684    add 0.2709    
Current (lb-rhs): -0.026395678520202637
397 domains visited
Cumulative time: 1.144171953201294

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 201
splitting decisions: 
split level 0: [/input-8, 1636] [/input-8, 755] [/input-8, 1644] [/input-8, 755] [/input-8, 1636] [/input-8, 755] [/input-8, 1636] [/input-8, 755] [/input-8, 1644] [/input-8, 755] 
pruning_in_iteration open status: False
ratio of positive domain = 78 / 402 = 0.19402985074626866
pruning-in-iteration extra time: 5.2928924560546875e-05
Time: prepare 0.0077    bound 0.1090    transfer 0.0068    finalize 0.0024    func 0.1261    
Accumulated time: func 0.7940    prepare 0.0320    bound 0.7275    transfer 0.0220    finalize 0.0135    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02331 (18), -0.02232 (18), -0.02220 (18), -0.02093 (18), -0.02069 (18), -0.02066 (18), -0.01962 (18), -0.01952 (18), -0.01923 (18), -0.01887 (18), -0.01878 (18), -0.01859 (18), -0.01849 (18), -0.01805 (18), -0.01796 (18), -0.01786 (18), -0.01766 (18), -0.01757 (18), -0.01720 (18), -0.01696 (18), 
Length of domains: 324
Time: pickout 0.0170    decision 0.0269    set_bounds 0.0087    solve 0.1262    add 0.0811    
Accumulated time: pickout 0.0468    decision 0.1066    set_bounds 0.0636    solve 0.7945    add 0.3520    
Current (lb-rhs): -0.023313283920288086
721 domains visited
Cumulative time: 1.4114384651184082

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 324
splitting decisions: 
split level 0: [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] 
pruning_in_iteration open status: True
ratio of positive domain = 361 / 648 = 0.5570987654320987
pruning-in-iteration extra time: 0.004667520523071289
Time: prepare 0.0126    bound 0.1661    transfer 0.0081    finalize 0.0045    func 0.1915    
Accumulated time: func 0.9855    prepare 0.0448    bound 0.8936    transfer 0.0300    finalize 0.0180    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02174 (19), -0.02077 (19), -0.02055 (19), -0.01938 (19), -0.01923 (19), -0.01918 (19), -0.01805 (19), -0.01796 (19), -0.01749 (19), -0.01721 (19), -0.01705 (19), -0.01704 (19), -0.01685 (19), -0.01634 (19), -0.01630 (19), -0.01621 (19), -0.01585 (19), -0.01581 (19), -0.01565 (19), -0.01552 (19), 
Length of domains: 287
Time: pickout 0.0188    decision 0.0355    set_bounds 0.0164    solve 0.1917    add 0.0846    
Accumulated time: pickout 0.0656    decision 0.1421    set_bounds 0.0800    solve 0.9862    add 0.4366    
Current (lb-rhs): -0.021735548973083496
1008 domains visited
Cumulative time: 1.7706527709960938

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 287
splitting decisions: 
split level 0: [/input-8, 1644] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1644] [/input-8, 1636] [/input-8, 1644] [/input-8, 1636] [/input-8, 755] [/input-8, 1636] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 574 = 0.3118466898954704
pruning-in-iteration extra time: 0.005233287811279297
Time: prepare 0.0115    bound 0.3271    transfer 0.0018    finalize 0.0030    func 0.3436    
Accumulated time: func 1.3291    prepare 0.0565    bound 1.2207    transfer 0.0319    finalize 0.0210    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01737 (20), -0.01676 (20), -0.01650 (20), -0.01632 (20), -0.01573 (20), -0.01545 (20), -0.01538 (20), -0.01520 (20), -0.01501 (20), -0.01446 (20), -0.01417 (20), -0.01405 (20), -0.01393 (20), -0.01383 (20), -0.01369 (20), -0.01362 (20), -0.01308 (20), -0.01286 (20), -0.01278 (20), -0.01264 (20), 
Length of domains: 395
Time: pickout 0.0246    decision 0.0304    set_bounds 0.0141    solve 0.3437    add 0.0849    
Accumulated time: pickout 0.0903    decision 0.1725    set_bounds 0.0941    solve 1.3299    add 0.5215    
Current (lb-rhs): -0.017370671033859253
1403 domains visited
Cumulative time: 2.2776122093200684

BaB round 8
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 395
splitting decisions: 
split level 0: [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 1644] [/input, 3161] [/input-8, 1644] 
pruning_in_iteration open status: True
ratio of positive domain = 391 / 790 = 0.49493670886075947
pruning-in-iteration extra time: 0.004686117172241211
Time: prepare 0.0173    bound 0.1980    transfer 0.0035    finalize 0.0071    func 0.2260    
Accumulated time: func 1.5551    prepare 0.0740    bound 1.4187    transfer 0.0354    finalize 0.0282    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01447 (21), -0.01396 (21), -0.01375 (21), -0.01358 (21), -0.01349 (21), -0.01338 (21), -0.01294 (21), -0.01267 (21), -0.01259 (21), -0.01252 (21), -0.01227 (21), -0.01218 (21), -0.01207 (21), -0.01179 (21), -0.01167 (21), -0.01106 (21), -0.01102 (21), -0.01080 (21), -0.01072 (21), -0.01047 (21), 
Length of domains: 399
Time: pickout 0.0188    decision 0.0409    set_bounds 0.0161    solve 0.2262    add 0.0976    
Accumulated time: pickout 0.1091    decision 0.2134    set_bounds 0.1102    solve 1.5562    add 0.6191    
Current (lb-rhs): -0.014466047286987305
1802 domains visited
Cumulative time: 2.6910085678100586

BaB round 9
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 399
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] 
pruning_in_iteration open status: True
ratio of positive domain = 515 / 798 = 0.6453634085213033
pruning-in-iteration extra time: 0.005003213882446289
Time: prepare 0.0175    bound 0.1810    transfer 0.0050    finalize 0.0076    func 0.2112    
Accumulated time: func 1.7664    prepare 0.0917    bound 1.5997    transfer 0.0404    finalize 0.0357    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01236 (22), -0.01201 (22), -0.01179 (22), -0.01147 (22), -0.01143 (22), -0.01136 (22), -0.01101 (22), -0.01072 (22), -0.01057 (22), -0.01047 (22), -0.01032 (22), -0.01008 (22), -0.00997 (22), -0.00986 (22), -0.00970 (22), -0.00910 (22), -0.00892 (22), -0.00877 (22), -0.00869 (22), -0.00848 (22), 
Length of domains: 283
Time: pickout 0.0182    decision 0.0401    set_bounds 0.0169    solve 0.2115    add 0.0855    
Accumulated time: pickout 0.1273    decision 0.2535    set_bounds 0.1271    solve 1.7676    add 0.7046    
Current (lb-rhs): -0.012361407279968262
2085 domains visited
Cumulative time: 3.0770163536071777

BaB round 10
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 283
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
pruning_in_iteration open status: True
ratio of positive domain = 379 / 566 = 0.6696113074204947
pruning-in-iteration extra time: 0.004743337631225586
Time: prepare 0.0134    bound 0.1405    transfer 0.0017    finalize 0.0035    func 0.1592    
Accumulated time: func 1.9255    prepare 0.1054    bound 1.7402    transfer 0.0421    finalize 0.0392    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00991 (23), -0.00971 (23), -0.00936 (23), -0.00893 (23), -0.00877 (23), -0.00863 (23), -0.00851 (23), -0.00823 (23), -0.00812 (23), -0.00778 (23), -0.00761 (23), -0.00760 (23), -0.00759 (23), -0.00748 (23), -0.00725 (23), -0.00706 (23), -0.00702 (23), -0.00686 (23), -0.00667 (23), -0.00644 (23), 
Length of domains: 187
Time: pickout 0.0182    decision 0.0348    set_bounds 0.0132    solve 0.1593    add 0.0779    
Accumulated time: pickout 0.1455    decision 0.2883    set_bounds 0.1403    solve 1.9270    add 0.7825    
Current (lb-rhs): -0.009908318519592285
2272 domains visited
Cumulative time: 3.3943865299224854

BaB round 11
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 187
splitting decisions: 
split level 0: [/input-8, 1242] [/input, 3161] [/input-8, 1242] [/input, 3161] [/input, 3161] [/input-8, 1242] [/input, 3161] [/input-8, 1644] [/input, 3161] [/input-8, 1242] 
pruning_in_iteration open status: True
ratio of positive domain = 252 / 374 = 0.6737967914438503
pruning-in-iteration extra time: 0.004739046096801758
Time: prepare 0.0091    bound 0.1305    transfer 0.0023    finalize 0.0029    func 0.1449    
Accumulated time: func 2.0704    prepare 0.1147    bound 1.8707    transfer 0.0444    finalize 0.0421    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00788 (24), -0.00767 (24), -0.00669 (24), -0.00659 (24), -0.00648 (24), -0.00624 (24), -0.00600 (24), -0.00570 (24), -0.00569 (24), -0.00545 (24), -0.00527 (24), -0.00512 (24), -0.00506 (24), -0.00502 (24), -0.00483 (24), -0.00452 (24), -0.00435 (24), -0.00424 (24), -0.00400 (24), -0.00399 (24), 
Length of domains: 122
Time: pickout 0.0164    decision 0.0284    set_bounds 0.0073    solve 0.1450    add 0.0829    
Accumulated time: pickout 0.1619    decision 0.3168    set_bounds 0.1476    solve 2.0719    add 0.8654    
Current (lb-rhs): -0.007875144481658936
2394 domains visited
Cumulative time: 3.6823582649230957

BaB round 12
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 122
splitting decisions: 
split level 0: [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] 
pruning_in_iteration open status: True
ratio of positive domain = 188 / 244 = 0.7704918032786885
pruning-in-iteration extra time: 0.005153179168701172
Time: prepare 0.0064    bound 0.1277    transfer 0.0017    finalize 0.0016    func 0.1375    
Accumulated time: func 2.2079    prepare 0.1214    bound 1.9985    transfer 0.0461    finalize 0.0436    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00498 (25), -0.00454 (25), -0.00420 (25), -0.00413 (25), -0.00378 (25), -0.00364 (25), -0.00360 (25), -0.00335 (25), -0.00323 (25), -0.00304 (25), -0.00271 (25), -0.00259 (25), -0.00245 (25), -0.00237 (25), -0.00228 (25), -0.00221 (25), -0.00219 (25), -0.00216 (25), -0.00214 (25), -0.00202 (25), 
Length of domains: 56
Time: pickout 0.0145    decision 0.0233    set_bounds 0.0046    solve 0.1376    add 0.0671    
Accumulated time: pickout 0.1764    decision 0.3401    set_bounds 0.1521    solve 2.2096    add 0.9325    
Current (lb-rhs): -0.00497746467590332
2450 domains visited
Cumulative time: 3.938905715942383

BaB round 13
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 56
splitting decisions: 
split level 0: [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] 
split level 1: [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] 
pruning_in_iteration open status: True
ratio of positive domain = 214 / 224 = 0.9553571428571429
pruning-in-iteration extra time: 0.004980564117431641
Time: prepare 0.0058    bound 0.1223    transfer 0.0042    finalize 0.0021    func 0.1345    
Accumulated time: func 2.3424    prepare 0.1274    bound 2.1207    transfer 0.0504    finalize 0.0457    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00214 (27), -0.00172 (27), -0.00133 (27), -0.00131 (27), -0.00096 (27), -0.00078 (27), -0.00078 (27), -0.00050 (27), -0.00037 (27), -0.00017 (27), 
Length of domains: 10
Time: pickout 0.0064    decision 0.0151    set_bounds 0.0063    solve 0.1345    add 0.0404    
Accumulated time: pickout 0.1827    decision 0.3552    set_bounds 0.1584    solve 2.3441    add 0.9728    
Current (lb-rhs): -0.0021449029445648193
2460 domains visited
Cumulative time: 4.154294967651367

BaB round 14
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0014
batch: 10
splitting decisions: 
split level 0: [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] [/input-8, 757] 
split level 1: [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] [/input-8, 41] 
split level 2: [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] [/input, 3113] 
split level 3: [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] 
split level 4: [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 320 / 320 = 1.0
pruning-in-iteration extra time: 4.76837158203125e-05
Time: prepare 0.0084    bound 0.0089    transfer 0.0012    finalize 0.0027    func 0.0212    
Accumulated time: func 2.3636    prepare 0.1361    bound 2.1296    transfer 0.0516    finalize 0.0484    
all_split False
Length of domains: 0
Time: pickout 0.0011    decision 0.0217    set_bounds 0.0189    solve 0.0213    add 0.0001    
Accumulated time: pickout 0.1838    decision 0.3769    set_bounds 0.1773    solve 2.3654    add 0.9729    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2460 domains visited
Cumulative time: 4.220140695571899

found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=4_30618484.log

Properties batch 8, size 1
Remaining timeout: 193.21341276168823
Verifying property 8 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48484433]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
        -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48484433]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 438
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 724
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0008
Cut time: 0.0008749961853027344
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0003
batch: 1
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 6] 
split level 6: [/input-8, 1619] 
split level 7: [/input-8, 1636] 
pruning_in_iteration open status: True
ratio of positive domain = 225 / 256 = 0.87890625
pruning-in-iteration extra time: 0.005004167556762695
Time: prepare 0.0031    bound 0.1345    transfer 0.0014    finalize 0.0016    func 0.1406    
Accumulated time: func 0.1406    prepare 0.0035    bound 0.1345    transfer 0.0014    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17606 (8), -0.16975 (8), -0.15519 (8), -0.15144 (8), -0.14852 (8), -0.14478 (8), -0.12839 (8), -0.12168 (8), -0.10924 (8), -0.10289 (8), -0.08422 (8), -0.07766 (8), -0.05462 (8), -0.04697 (8), -0.02989 (8), -0.02823 (8), -0.02331 (8), -0.02318 (8), -0.02183 (8), -0.01791 (8), 
Length of domains: 31
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0175    solve 0.1406    add 0.0544    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0175    solve 0.1406    add 0.0544    
Current (lb-rhs): -0.17606428265571594
31 domains visited
Cumulative time: 0.24873042106628418

BaB round 2
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0008
batch: 31
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 12] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-8, 1718] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] 
split level 2: [/input-12, 34] [/input-8, 1259] [/input-8, 99] [/input-8, 1259] [/input-8, 1963] [/input-8, 476] [/input-12, 34] [/input-8, 1259] [/input-8, 99] [/input-8, 1259] 
pruning_in_iteration open status: True
ratio of positive domain = 222 / 248 = 0.8951612903225806
pruning-in-iteration extra time: 0.00484466552734375
Time: prepare 0.0050    bound 0.1373    transfer 0.0027    finalize 0.0025    func 0.1476    
Accumulated time: func 0.2881    prepare 0.0087    bound 0.2718    transfer 0.0040    finalize 0.0041    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15761 (11), -0.15141 (11), -0.13681 (11), -0.13344 (11), -0.13025 (11), -0.12678 (11), -0.11013 (11), -0.10352 (11), -0.08656 (11), -0.08394 (11), -0.07887 (11), -0.07867 (11), -0.06162 (11), -0.05947 (11), -0.05389 (11), -0.05349 (11), -0.03057 (11), -0.02836 (11), -0.01837 (11), -0.01587 (11), 
Length of domains: 26
Time: pickout 0.0014    decision 0.0126    set_bounds 0.0125    solve 0.1476    add 0.0468    
Accumulated time: pickout 0.0018    decision 0.0354    set_bounds 0.0300    solve 0.2883    add 0.1012    
Current (lb-rhs): -0.15761274099349976
57 domains visited
Cumulative time: 0.4795358180999756

BaB round 3
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 26
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 56] [/input-12, 56] [/input-8, 1259] [/input-8, 1635] 
split level 1: [/input-12, 34] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-12, 34] [/input-12, 34] [/input-8, 476] [/input-8, 803] 
split level 2: [/input-8, 476] [/input-8, 1644] [/input-8, 428] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 476] [/input-8, 426] [/input-8, 1718] [/input-8, 1644] 
pruning_in_iteration open status: True
ratio of positive domain = 106 / 208 = 0.5096153846153846
pruning-in-iteration extra time: 0.004634857177734375
Time: prepare 0.0042    bound 0.1223    transfer 0.0031    finalize 0.0016    func 0.1312    
Accumulated time: func 0.4193    prepare 0.0131    bound 0.3941    transfer 0.0071    finalize 0.0057    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13862 (14), -0.13715 (14), -0.13200 (14), -0.13186 (14), -0.13054 (14), -0.13039 (14), -0.12930 (14), -0.12784 (14), -0.12717 (14), -0.12568 (14), -0.12308 (14), -0.12265 (14), -0.12158 (14), -0.12120 (14), -0.11868 (14), -0.11821 (14), -0.11722 (14), -0.11674 (14), -0.11417 (14), -0.11350 (14), 
Length of domains: 102
Time: pickout 0.0012    decision 0.0123    set_bounds 0.0085    solve 0.1313    add 0.0761    
Accumulated time: pickout 0.0031    decision 0.0477    set_bounds 0.0385    solve 0.4195    add 0.1773    
Current (lb-rhs): -0.1386193037033081
159 domains visited
Cumulative time: 0.7173335552215576

BaB round 4
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0007
batch: 102
splitting decisions: 
split level 0: [/input-8, 91] [/input-8, 428] [/input-8, 91] [/input-8, 428] [/input-8, 1249] [/input-8, 428] [/input-8, 91] [/input-8, 428] [/input-8, 91] [/input-8, 91] 
split level 1: [/input-8, 1249] [/input-8, 99] [/input-8, 1249] [/input-8, 99] [/input-8, 91] [/input-8, 99] [/input-8, 1249] [/input-8, 99] [/input-8, 428] [/input-8, 1241] 
pruning_in_iteration open status: False
ratio of positive domain = 54 / 408 = 0.13235294117647056
pruning-in-iteration extra time: 5.245208740234375e-05
Time: prepare 0.0077    bound 0.0953    transfer 0.0041    finalize 0.0022    func 0.1094    
Accumulated time: func 0.5288    prepare 0.0210    bound 0.4894    transfer 0.0112    finalize 0.0080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13037 (16), -0.12888 (16), -0.12346 (16), -0.12332 (16), -0.12197 (16), -0.12182 (16), -0.12098 (16), -0.11944 (16), -0.11830 (16), -0.11685 (16), -0.11467 (16), -0.11451 (16), -0.11405 (16), -0.11319 (16), -0.11294 (16), -0.11256 (16), -0.11180 (16), -0.11058 (16), -0.11031 (16), -0.10993 (16), 
Length of domains: 350
Time: pickout 0.0149    decision 0.0178    set_bounds 0.0108    solve 0.1095    add 0.0937    
Accumulated time: pickout 0.0180    decision 0.0655    set_bounds 0.0493    solve 0.5291    add 0.2711    
Current (lb-rhs): -0.13037016987800598
509 domains visited
Cumulative time: 0.972092866897583

BaB round 5
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0007
batch: 350
splitting decisions: 
split level 0: [/input-8, 99] [/input-8, 1249] [/input-8, 99] [/input-8, 1580] [/input-8, 99] [/input-8, 1580] [/input-8, 99] [/input-8, 1954] [/input-8, 757] [/input-8, 757] 
pruning_in_iteration open status: False
ratio of positive domain = 61 / 700 = 0.08714285714285719
pruning-in-iteration extra time: 6.127357482910156e-05
Time: prepare 0.0133    bound 0.1100    transfer 0.0038    finalize 0.0046    func 0.1318    
Accumulated time: func 0.6606    prepare 0.0344    bound 0.5994    transfer 0.0151    finalize 0.0126    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12291 (17), -0.12165 (17), -0.12140 (17), -0.12013 (17), -0.11832 (17), -0.11677 (17), -0.11552 (17), -0.11504 (17), -0.11464 (17), -0.11414 (17), -0.11399 (17), -0.11352 (17), -0.11310 (17), -0.11260 (17), -0.11167 (17), -0.11063 (17), -0.11012 (17), -0.10948 (17), -0.10915 (17), -0.10800 (17), 
Length of domains: 636
Time: pickout 0.0191    decision 0.0360    set_bounds 0.0157    solve 0.1320    add 0.0912    
Accumulated time: pickout 0.0371    decision 0.1015    set_bounds 0.0650    solve 0.6611    add 0.3623    
Current (lb-rhs): -0.12291252613067627
1145 domains visited
Cumulative time: 1.2744011878967285

BaB round 6
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 636
splitting decisions: 
split level 0: [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1954] [/input-8, 1580] [/input-8, 1580] [/input-8, 1241] [/input-8, 428] [/input-8, 1580] 
pruning_in_iteration open status: False
ratio of positive domain = 162 / 1272 = 0.12735849056603776
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0249    bound 0.1155    transfer 0.0109    finalize 0.0081    func 0.1596    
Accumulated time: func 0.8202    prepare 0.0595    bound 0.7149    transfer 0.0260    finalize 0.0207    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11815 (18), -0.11682 (18), -0.11661 (18), -0.11529 (18), -0.11336 (18), -0.11181 (18), -0.11059 (18), -0.11016 (18), -0.11014 (18), -0.11010 (18), -0.10994 (18), -0.10973 (18), -0.10905 (18), -0.10862 (18), -0.10855 (18), -0.10850 (18), -0.10832 (18), -0.10817 (18), -0.10711 (18), -0.10617 (18), 
Length of domains: 1106
Time: pickout 0.0223    decision 0.0513    set_bounds 0.0281    solve 0.1598    add 0.1083    
Accumulated time: pickout 0.0594    decision 0.1528    set_bounds 0.0931    solve 0.8209    add 0.4706    
Current (lb-rhs): -0.11814671754837036
2251 domains visited
Cumulative time: 1.6538426876068115

BaB round 7
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 1106
splitting decisions: 
split level 0: [/input-8, 428] [/input-8, 1954] [/input-8, 428] [/input-8, 428] [/input-8, 428] [/input-8, 28] [/input-8, 1929] [/input-8, 428] [/input-8, 1929] [/input-8, 1954] 
pruning_in_iteration open status: False
ratio of positive domain = 141 / 2212 = 0.0637432188065099
pruning-in-iteration extra time: 8.678436279296875e-05
Time: prepare 0.0528    bound 0.1406    transfer 0.0317    finalize 0.0141    func 0.2395    
Accumulated time: func 1.0597    prepare 0.1126    bound 0.8555    transfer 0.0577    finalize 0.0348    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11146 (19), -0.11133 (19), -0.10997 (19), -0.10992 (19), -0.10979 (19), -0.10853 (19), -0.10843 (19), -0.10699 (19), -0.10594 (19), -0.10580 (19), -0.10565 (19), -0.10530 (19), -0.10524 (19), -0.10480 (19), -0.10433 (19), -0.10420 (19), -0.10411 (19), -0.10375 (19), -0.10366 (19), -0.10327 (19), 
Length of domains: 2060
Time: pickout 0.0426    decision 0.0827    set_bounds 0.0516    solve 0.2400    add 0.1168    
Accumulated time: pickout 0.1020    decision 0.2355    set_bounds 0.1447    solve 1.0609    add 0.5874    
Current (lb-rhs): -0.1114594042301178
4311 domains visited
Cumulative time: 2.198195219039917

BaB round 8
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 2060
splitting decisions: 
split level 0: [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 476] [/input-8, 28] [/input-8, 1635] [/input-8, 28] [/input-8, 1963] [/input-8, 1635] 
pruning_in_iteration open status: True
ratio of positive domain = 911 / 4120 = 0.22111650485436896
pruning-in-iteration extra time: 0.0018646717071533203
Time: prepare 0.0931    bound 0.2637    transfer 0.0242    finalize 0.0294    func 0.4109    
Accumulated time: func 1.4706    prepare 0.2060    bound 1.1192    transfer 0.0819    finalize 0.0642    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10945 (20), -0.10919 (20), -0.10791 (20), -0.10776 (20), -0.10765 (20), -0.10642 (20), -0.10622 (20), -0.10489 (20), -0.10411 (20), -0.10405 (20), -0.10341 (20), -0.10293 (20), -0.10288 (20), -0.10250 (20), -0.10249 (20), -0.10243 (20), -0.10186 (20), -0.10139 (20), -0.10133 (20), -0.10113 (20), 
Length of domains: 3209
Time: pickout 0.0476    decision 0.2916    set_bounds 0.0975    solve 0.4120    add 0.1660    
Accumulated time: pickout 0.1496    decision 0.5271    set_bounds 0.2422    solve 1.4729    add 0.7534    
Current (lb-rhs): -0.10944613814353943
7520 domains visited
Cumulative time: 3.2263288497924805

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 248 constraints, 25202 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2188
batch: 3209
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 1929] [/input-8, 803] [/input-8, 755] [/input-8, 803] [/input-8, 803] [/input-8, 803] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10382592678070068
10 lb beta sum: 4.113471508026123, worst -0.07999126613140106
pruning_in_iteration open status: True
ratio of positive domain = 3289 / 6418 = 0.5124649423496417
pruning-in-iteration extra time: 0.0046558380126953125
Time: prepare 0.1559    bound 0.7694    transfer 0.0439    finalize 0.0379    func 1.0499    
Accumulated time: func 2.5205    prepare 0.3622    bound 1.8886    transfer 0.1258    finalize 0.1021    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07338 (21), -0.07318 (21), -0.07317 (21), -0.07245 (21), -0.07240 (21), -0.07203 (21), -0.07172 (21), -0.07137 (21), -0.07120 (21), -0.07063 (21), -0.07019 (21), -0.06997 (21), -0.06942 (21), -0.06915 (21), -0.06889 (21), -0.06887 (21), -0.06883 (21), -0.06823 (21), -0.06802 (21), -0.06770 (21), 
Length of domains: 3129
Time: pickout 0.0647    decision 0.3525    set_bounds 0.1533    solve 1.0522    add 0.1428    
Accumulated time: pickout 0.2144    decision 0.8796    set_bounds 0.3955    solve 2.5251    add 0.8962    
Current (lb-rhs): -0.07337880879640579
10649 domains visited
Cumulative time: 5.237842559814453

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0030
batch: 3129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] 
cut re-enabled after branching node selection
0 lb beta sum: 2.6979055404663086, worst -0.06923777610063553
10 lb beta sum: 2.6381235122680664, worst -0.07852757722139359
pruning_in_iteration open status: False
ratio of positive domain = 1183 / 6258 = 0.18903803131991048
pruning-in-iteration extra time: 0.0002396106719970703
Time: prepare 0.2928    bound 0.8571    transfer 0.0299    finalize 0.0424    func 1.2648    
Accumulated time: func 3.7853    prepare 0.6554    bound 2.7457    transfer 0.1557    finalize 0.1445    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06924 (22), -0.06907 (22), -0.06898 (22), -0.06831 (22), -0.06783 (22), -0.06738 (22), -0.06722 (22), -0.06716 (22), -0.06708 (22), -0.06650 (22), -0.06609 (22), -0.06586 (22), -0.06531 (22), -0.06501 (22), -0.06476 (22), -0.06473 (22), -0.06472 (22), -0.06454 (22), -0.06420 (22), -0.06406 (22), 
Length of domains: 4946
Time: pickout 0.0657    decision 0.3455    set_bounds 0.1488    solve 1.2663    add 0.1487    
Accumulated time: pickout 0.2801    decision 1.2250    set_bounds 0.5442    solve 3.7914    add 1.0450    
Current (lb-rhs): -0.06923777610063553
15595 domains visited
Cumulative time: 7.241095781326294

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0040
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 44] [/input-8, 44] [/input-8, 418] [/input-8, 44] [/input-8, 418] [/input-8, 44] [/input-8, 418] [/input-8, 44] [/input-8, 418] [/input-8, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 2.718876361846924, worst -0.0650419071316719
10 lb beta sum: 2.7212963104248047, worst -0.0727611556649208
pruning_in_iteration open status: True
ratio of positive domain = 1877 / 8192 = 0.2291259765625
pruning-in-iteration extra time: 0.0006959438323974609
Time: prepare 0.3862    bound 1.0727    transfer 0.0459    finalize 0.2228    func 1.7814    
Accumulated time: func 5.5667    prepare 1.0420    bound 3.8184    transfer 0.2017    finalize 0.3674    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06504 (23), -0.06485 (23), -0.06460 (23), -0.06454 (22), -0.06420 (22), -0.06415 (23), -0.06372 (23), -0.06318 (23), -0.06308 (23), -0.06299 (23), -0.06291 (22), -0.06290 (23), -0.06256 (22), -0.06252 (23), -0.06206 (23), -0.06182 (23), -0.06144 (22), -0.06143 (22), -0.06139 (23), -0.06108 (23), 
Length of domains: 7165
Time: pickout 0.0788    decision 0.4356    set_bounds 0.1958    solve 1.7832    add 0.1579    
Accumulated time: pickout 0.3589    decision 1.6607    set_bounds 0.7400    solve 5.5746    add 1.2029    
Current (lb-rhs): -0.0650419071316719
21910 domains visited
current_vram/total_varm: 11.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.921867847442627

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 643 constraints, 41928 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3532
batch: 7165
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08970075845718384
10 lb beta sum: 4.38137149810791, worst -0.0676569789648056
pruning_in_iteration open status: False
ratio of positive domain = 1230 / 14330 = 0.08583391486392189
pruning-in-iteration extra time: 0.00016498565673828125
Time: prepare 0.3012    bound 2.9752    transfer 0.0842    finalize 0.0980    func 3.5543    
Accumulated time: func 9.1210    prepare 1.3436    bound 6.7936    transfer 0.2858    finalize 0.4653    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06073 (23), -0.05828 (24), -0.05783 (23), -0.05775 (24), -0.05771 (24), -0.05758 (23), -0.05708 (24), -0.05701 (24), -0.05688 (24), -0.05659 (24), -0.05659 (24), -0.05658 (24), -0.05649 (24), -0.05637 (24), -0.05628 (24), -0.05618 (23), -0.05606 (24), -0.05596 (24), -0.05583 (24), -0.05568 (24), 
Length of domains: 11185
Time: pickout 0.1176    decision 0.5907    set_bounds 0.5212    solve 3.5578    add 0.1665    
Accumulated time: pickout 0.4764    decision 2.2513    set_bounds 1.2612    solve 9.1324    add 1.3694    
Current (lb-rhs): -0.060729265213012695
33095 domains visited
Cumulative time: 15.27121090888977

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 748 constraints, 51791 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4388
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 44] [/input-8, 1579] [/input-8, 28] [/input-8, 1579] [/input-8, 1579] [/input-8, 426] [/input-8, 44] [/input-8, 426] [/input-8, 1579] [/input-8, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08477908372879028
10 lb beta sum: 4.317045211791992, worst -0.06851282715797424
pruning_in_iteration open status: False
ratio of positive domain = 2211 / 16384 = 0.13494873046875
pruning-in-iteration extra time: 0.00022530555725097656
Time: prepare 0.3326    bound 3.5714    transfer 0.0953    finalize 0.0999    func 4.2073    
Accumulated time: func 13.3283    prepare 1.6765    bound 10.3650    transfer 0.3812    finalize 0.5652    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05292 (25), -0.05273 (25), -0.05220 (25), -0.05199 (25), -0.05192 (24), -0.05185 (25), -0.05181 (25), -0.05173 (25), -0.05153 (23), -0.05150 (25), -0.05117 (25), -0.05099 (25), -0.05093 (25), -0.05093 (24), -0.05091 (25), -0.05089 (23), -0.05088 (25), -0.05085 (24), -0.05077 (23), -0.05074 (25), 
Length of domains: 15172
Time: pickout 0.1432    decision 0.6788    set_bounds 0.5685    solve 4.2120    add 0.1685    
Accumulated time: pickout 0.6197    decision 2.9301    set_bounds 1.8297    solve 13.3444    add 1.5379    
Current (lb-rhs): -0.052917465567588806
45274 domains visited
current_vram/total_varm: 25.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 21.526816606521606

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0018
batch: 15172
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 28] [/input-8, 1579] [/input-8, 28] [/input-8, 28] [/input-8, 28] [/input-8, 28] [/input-8, 1579] [/input-8, 28] [/input-8, 28] [/input-8, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 3.4440338611602783, worst -0.07755360007286072
10 lb beta sum: 7.431755542755127, worst -0.06741220504045486
pruning_in_iteration open status: True
ratio of positive domain = 14107 / 30344 = 0.4649024518850514
pruning-in-iteration extra time: 0.005744218826293945
Time: prepare 1.3784    bound 5.4467    transfer 0.1739    finalize 0.2037    func 7.3976    
Accumulated time: func 20.7259    prepare 3.0553    bound 15.8117    transfer 0.5551    finalize 0.7689    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05162 (26), -0.05038 (26), -0.05035 (26), -0.04973 (26), -0.04958 (26), -0.04954 (26), -0.04949 (26), -0.04940 (26), -0.04932 (26), -0.04925 (26), -0.04922 (26), -0.04911 (26), -0.04857 (26), -0.04817 (26), -0.04813 (26), -0.04812 (25), -0.04810 (26), -0.04806 (26), -0.04805 (26), -0.04793 (26), 
Length of domains: 16237
Time: pickout 0.2332    decision 1.0975    set_bounds 1.1240    solve 7.7030    add 0.1807    
Accumulated time: pickout 0.8528    decision 4.0276    set_bounds 2.9538    solve 21.0474    add 1.7186    
Current (lb-rhs): -0.05162389576435089
61511 domains visited
Cumulative time: 32.00185799598694

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 821 constraints, 61257 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5233
batch: 16237
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1579] [/input-8, 1579] [/input-8, 426] [/input-8, 1579] [/input-8, 1579] [/input-8, 426] [/input-8, 1579] [/input-8, 28] [/input-8, 1579] [/input-8, 426] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07864117622375488
10 lb beta sum: 5.660195827484131, worst -0.060738544911146164
pruning_in_iteration open status: True
ratio of positive domain = 18257 / 32474 = 0.562203609041079
pruning-in-iteration extra time: 0.004860639572143555
Time: prepare 0.7234    bound 6.3961    transfer 0.1886    finalize 0.2113    func 8.0453    
Accumulated time: func 28.7712    prepare 3.7791    bound 22.2078    transfer 0.7436    finalize 0.9801    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04685 (27), -0.04641 (27), -0.04628 (27), -0.04614 (27), -0.04561 (27), -0.04560 (27), -0.04545 (27), -0.04518 (27), -0.04513 (27), -0.04494 (27), -0.04479 (27), -0.04475 (27), -0.04449 (27), -0.04448 (27), -0.04441 (27), -0.04425 (26), -0.04413 (27), -0.04411 (27), -0.04386 (27), -0.04367 (27), 
Length of domains: 14217
Time: pickout 0.2604    decision 0.9474    set_bounds 1.2372    solve 8.0517    add 0.1725    
Accumulated time: pickout 1.1132    decision 4.9750    set_bounds 4.1910    solve 29.0991    add 1.8912    
Current (lb-rhs): -0.04685431718826294
75728 domains visited
Cumulative time: 43.30518555641174

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 827 constraints, 61198 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5225
batch: 14217
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07297232747077942
10 lb beta sum: 5.165629863739014, worst -0.057051487267017365
pruning_in_iteration open status: True
ratio of positive domain = 11750 / 28434 = 0.4132376732081311
pruning-in-iteration extra time: 0.00424647331237793
Time: prepare 0.6346    bound 6.2636    transfer 0.1630    finalize 0.1889    func 7.7575    
Accumulated time: func 36.5287    prepare 4.4141    bound 28.4715    transfer 0.9066    finalize 1.1690    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04212 (28), -0.04193 (28), -0.04153 (28), -0.04079 (28), -0.04072 (28), -0.04054 (28), -0.04047 (28), -0.04032 (28), -0.04031 (28), -0.04020 (28), -0.04000 (28), -0.03988 (28), -0.03980 (28), -0.03976 (27), -0.03972 (28), -0.03970 (28), -0.03964 (28), -0.03959 (28), -0.03958 (26), -0.03956 (28), 
Length of domains: 16684
Time: pickout 0.2411    decision 1.0918    set_bounds 0.9243    solve 7.7635    add 0.1936    
Accumulated time: pickout 1.3544    decision 6.0668    set_bounds 5.1152    solve 36.8626    add 2.0848    
Current (lb-rhs): -0.04212036728858948
92412 domains visited
Cumulative time: 54.143407106399536

BaB round 17
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 831 constraints, 61487 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5237
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-8, 1579] [/input-8, 28] [/input-12, 97] [/input-12, 97] [/input-8, 1579] [/input-8, 28] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06968271732330322
10 lb beta sum: 4.683408260345459, worst -0.04916715621948242
pruning_in_iteration open status: False
ratio of positive domain = 5574 / 32768 = 0.17010498046875
pruning-in-iteration extra time: 0.0006086826324462891
Time: prepare 0.7126    bound 7.5544    transfer 0.1782    finalize 0.2282    func 9.2088    
Accumulated time: func 45.7375    prepare 5.1270    bound 36.0259    transfer 1.0848    finalize 1.3972    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03675 (29), -0.03665 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03636 (29), -0.03632 (29), -0.03615 (29), -0.03611 (29), -0.03609 (29), -0.03592 (28), -0.03578 (29), -0.03576 (27), -0.03573 (29), 
Length of domains: 21143
Time: pickout 0.2949    decision 1.7012    set_bounds 1.0535    solve 9.2158    add 0.2066    
Accumulated time: pickout 1.6492    decision 7.7681    set_bounds 6.1687    solve 46.0784    add 2.2913    
Current (lb-rhs): -0.038732025772333145
113255 domains visited
Cumulative time: 67.24484729766846

BaB round 18
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 837 constraints, 61876 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5276
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06577950716018677
10 lb beta sum: 4.87282657623291, worst -0.04740581661462784
pruning_in_iteration open status: False
ratio of positive domain = 5087 / 32768 = 0.155242919921875
pruning-in-iteration extra time: 0.0005362033843994141
Time: prepare 0.7090    bound 7.6549    transfer 0.1805    finalize 0.5658    func 9.3262    
Accumulated time: func 55.0637    prepare 5.8364    bound 43.6808    transfer 1.2653    finalize 1.9631    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 25583
Time: pickout 0.2913    decision 1.7249    set_bounds 1.0915    solve 9.3326    add 0.2089    
Accumulated time: pickout 1.9406    decision 9.4930    set_bounds 7.2602    solve 55.4111    add 2.5002    
Current (lb-rhs): -0.038732025772333145
134079 domains visited
Cumulative time: 80.52446961402893

BaB round 19
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 829 constraints, 61909 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5254
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06193244457244873
10 lb beta sum: 4.9550347328186035, worst -0.04164955019950867
pruning_in_iteration open status: False
ratio of positive domain = 4815 / 32768 = 0.146942138671875
pruning-in-iteration extra time: 0.0005309581756591797
Time: prepare 0.7054    bound 7.5578    transfer 0.1890    finalize 0.6327    func 9.2996    
Accumulated time: func 64.3633    prepare 6.5421    bound 51.2385    transfer 1.4544    finalize 2.5958    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 29851
Time: pickout 0.3231    decision 1.7831    set_bounds 1.1358    solve 9.3072    add 0.1943    
Accumulated time: pickout 2.2637    decision 11.2761    set_bounds 8.3960    solve 64.7183    add 2.6945    
Current (lb-rhs): -0.038732025772333145
154731 domains visited
Cumulative time: 93.88966751098633

BaB round 20
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 834 constraints, 62078 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5285
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.058160215616226196
10 lb beta sum: 5.021533966064453, worst -0.041066545993089676
pruning_in_iteration open status: False
ratio of positive domain = 6130 / 32768 = 0.18707275390625
pruning-in-iteration extra time: 0.0005292892456054688
Time: prepare 0.7082    bound 7.6217    transfer 0.1848    finalize 0.2044    func 8.9338    
Accumulated time: func 73.2970    prepare 7.2508    bound 58.8602    transfer 1.6392    finalize 2.8002    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 31863
Time: pickout 0.2921    decision 1.8249    set_bounds 1.2145    solve 8.9432    add 0.1933    
Accumulated time: pickout 2.5558    decision 13.1010    set_bounds 9.6105    solve 73.6615    add 2.8877    
Current (lb-rhs): -0.038732025772333145
173127 domains visited
Cumulative time: 107.00700235366821

BaB round 21
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts: total 833 constraints, 62026 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8775
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 755] [/input-8, 1644] [/input-8, 722] [/input-8, 722] [/input-8, 1241] [/input-8, 722] [/input-8, 1241] [/input-8, 1241] [/input-8, 722] [/input-8, 1241] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05438360571861267
10 lb beta sum: 5.027195930480957, worst -0.03654519468545914
pruning_in_iteration open status: True
ratio of positive domain = 14418 / 32768 = 0.44000244140625
pruning-in-iteration extra time: 0.0004961490631103516
Time: prepare 0.7042    bound 7.6077    transfer 0.1902    finalize 0.2097    func 8.9288    
Accumulated time: func 82.2258    prepare 7.9555    bound 66.4679    transfer 1.8293    finalize 3.0099    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 33829
Time: pickout 0.2907    decision 1.6672    set_bounds 1.6726    solve 8.9394    add 0.1165    
Accumulated time: pickout 2.8464    decision 14.7682    set_bounds 11.2831    solve 82.6009    add 3.0043    
Current (lb-rhs): -0.038732025772333145
191477 domains visited
Cumulative time: 120.68740391731262

BaB round 22
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0039
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 4.54725456237793, worst -0.021390844136476517
10 lb beta sum: 8.16497802734375, worst -0.04234260320663452
pruning_in_iteration open status: True
ratio of positive domain = 20230 / 32768 = 0.61737060546875
pruning-in-iteration extra time: 0.0060274600982666016
Time: prepare 1.4908    bound 6.0810    transfer 0.1828    finalize 0.2027    func 8.1730    
Accumulated time: func 90.3988    prepare 9.4467    bound 72.5489    transfer 2.0121    finalize 3.2126    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 29983
Time: pickout 0.2926    decision 1.9090    set_bounds 1.2796    solve 8.6947    add 0.0548    
Accumulated time: pickout 3.1390    decision 16.6772    set_bounds 12.5627    solve 91.2956    add 3.0591    
Current (lb-rhs): -0.038732025772333145
204015 domains visited
Cumulative time: 133.05661869049072

BaB round 23
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0040
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 755] [/input-8, 1241] [/input-8, 722] [/input-8, 755] [/input-8, 483] [/input-8, 1241] [/input-8, 483] [/input-8, 755] [/input-8, 1241] [/input-8, 722] 
cut re-enabled after branching node selection
0 lb beta sum: 4.023153305053711, worst -0.05066007375717163
10 lb beta sum: 6.672666549682617, worst -0.043479807674884796
pruning_in_iteration open status: True
ratio of positive domain = 16811 / 32768 = 0.513031005859375
pruning-in-iteration extra time: 0.006033420562744141
Time: prepare 1.4708    bound 6.6593    transfer 0.1811    finalize 0.6633    func 9.1940    
Accumulated time: func 99.5928    prepare 10.9179    bound 79.2082    transfer 2.1933    finalize 3.8759    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 29556
Time: pickout 0.3021    decision 1.6772    set_bounds 1.2744    solve 9.2035    add 0.0612    
Accumulated time: pickout 3.4411    decision 18.3544    set_bounds 13.8371    solve 100.4991    add 3.1202    
Current (lb-rhs): -0.038732025772333145
219972 domains visited
Cumulative time: 145.73725724220276

BaB round 24
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0054
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] 
cut re-enabled after branching node selection
0 lb beta sum: 4.399770736694336, worst -0.05144035816192627
10 lb beta sum: 4.4820876121521, worst -0.03862357139587402
pruning_in_iteration open status: True
ratio of positive domain = 18845 / 32768 = 0.575103759765625
pruning-in-iteration extra time: 0.0033795833587646484
Time: prepare 1.4998    bound 7.1450    transfer 0.1903    finalize 0.2102    func 9.2719    
Accumulated time: func 108.8647    prepare 12.4181    bound 86.3532    transfer 2.3836    finalize 4.0861    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 27095
Time: pickout 0.3038    decision 1.6704    set_bounds 1.6874    solve 9.2832    add 0.0612    
Accumulated time: pickout 3.7449    decision 20.0247    set_bounds 15.5245    solve 109.7823    add 3.1815    
Current (lb-rhs): -0.038732025772333145
233895 domains visited
Cumulative time: 158.91466403007507

BaB round 25
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0036
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] 
cut re-enabled after branching node selection
0 lb beta sum: 3.800549268722534, worst -0.05670842528343201
10 lb beta sum: 6.856271266937256, worst -0.037045784294605255
pruning_in_iteration open status: True
ratio of positive domain = 18699 / 32768 = 0.570648193359375
pruning-in-iteration extra time: 0.005985260009765625
Time: prepare 1.4915    bound 6.4949    transfer 0.1894    finalize 0.6362    func 9.0304    
Accumulated time: func 117.8951    prepare 13.9100    bound 92.8481    transfer 2.5730    finalize 4.7224    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 24780
Time: pickout 0.3131    decision 1.8374    set_bounds 1.1956    solve 9.0405    add 0.0769    
Accumulated time: pickout 4.0580    decision 21.8621    set_bounds 16.7201    solve 118.8227    add 3.2584    
Current (lb-rhs): -0.038732025772333145
247964 domains visited
Cumulative time: 171.66447114944458

BaB round 26
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0044
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 1241] 
cut re-enabled after branching node selection
0 lb beta sum: 3.8459837436676025, worst -0.06266039609909058
10 lb beta sum: 7.528204441070557, worst -0.0453968346118927
pruning_in_iteration open status: True
ratio of positive domain = 18354 / 32768 = 0.56011962890625
pruning-in-iteration extra time: 0.005824565887451172
Time: prepare 1.5026    bound 6.3264    transfer 0.1849    finalize 0.2301    func 8.9052    
Accumulated time: func 126.8003    prepare 15.4131    bound 99.1745    transfer 2.7579    finalize 4.9525    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 22810
Time: pickout 0.3509    decision 1.8879    set_bounds 1.2673    solve 8.9148    add 0.0639    
Accumulated time: pickout 4.4089    decision 23.7501    set_bounds 17.9874    solve 127.7375    add 3.3223    
Current (lb-rhs): -0.038732025772333145
262378 domains visited
Cumulative time: 184.34041738510132

BaB round 27
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0039
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 722] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] 
cut re-enabled after branching node selection
0 lb beta sum: 3.9384493827819824, worst -0.06247881054878235
10 lb beta sum: 7.50942850112915, worst -0.04595744237303734
pruning_in_iteration open status: True
ratio of positive domain = 17450 / 32768 = 0.53253173828125
pruning-in-iteration extra time: 0.0059053897857666016
Time: prepare 1.8460    bound 6.3747    transfer 0.1926    finalize 0.2126    func 8.8476    
Accumulated time: func 135.6479    prepare 17.2595    bound 105.5492    transfer 2.9505    finalize 5.1650    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03873 (29), -0.03768 (29), -0.03747 (26), -0.03705 (29), -0.03699 (29), -0.03683 (29), -0.03655 (29), -0.03649 (29), -0.03637 (29), -0.03578 (29), -0.03573 (29), -0.03570 (26), -0.03555 (29), -0.03539 (29), -0.03534 (29), -0.03532 (29), -0.03528 (29), -0.03511 (29), -0.03499 (26), -0.03493 (29), 
Length of domains: 21744
Time: pickout 0.3144    decision 1.6848    set_bounds 1.1792    solve 8.8586    add 0.0616    
Accumulated time: pickout 4.7233    decision 25.4348    set_bounds 19.1666    solve 136.5961    add 3.3839    
Current (lb-rhs): -0.038732025772333145
277696 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=137_spec=2_30618484.log
found process to kill: terminal indx = 4
found process for pidx=2
found process for pidx=4
Result: unknown in 203.7963 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
         -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [598]; unstable size 598; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 213, 1, 598] with unstable size 212 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 598] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 598] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [212]; unstable size 212; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 212] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 212] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.89664334,  0.67908740,  0.19554520,  0.18955207,  0.73444748,
          0.71419168,  0.94188952,  0.96517801, -1.17427897]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
         -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
          -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05045319]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0633 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.98194313, -18.68232346, -13.41521168, -15.12617874, -13.36238766,
         -15.23961639, -11.65827942, -15.93192387, -18.96205139, -18.87558174]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [486]; unstable size 486; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 486] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 486] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 486] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 298] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.17125106, 4.88726807, 0.27177000, 2.09688020, 0.18416548, 2.01368833,
         2.31736898, 5.04107523, 4.79337215]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0534 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.01308823, -19.76593781, -25.22100067, -25.57647514, -25.42583656,
         -26.01211357, -25.51028061, -24.41519165, -23.07863426, -17.48029327]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [532]; unstable size 532; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 532] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 532] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 532] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 203] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.27216291, 1.49679089, 6.10778522, 6.38268900, 6.18334293, 6.67020035,
         6.18721342, 4.92642736, 4.46744919]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0658 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.90496635, -15.11729813, -17.63558197, -17.40718079, -18.01904297,
         -18.32819939, -17.60610199, -17.95012093, -15.46633625, -14.21533680]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [703]; unstable size 703; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 270, 1, 703] with unstable size 269 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 703] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [269]; unstable size 269; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 269] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 269] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.32847285,  0.70178199,  0.40967417,  0.70709276,  1.10043859,
          0.47019625,  0.52032566, -0.85370088, -1.78019547]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.90496635, -15.11729813, -17.63558197, -17.40718079, -18.01904297,
         -18.32819939, -17.60610199, -17.95012093, -15.46633625, -14.21533680]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.90496635, -15.11729908, -17.63558006, -17.40718079, -18.01904488,
          -18.32819939, -17.60610390, -17.95012093, -15.46633720, -14.21533775],
         [-16.90496635, -15.11729908, -17.63558006, -17.40718079, -18.01904488,
          -18.32819939, -17.60610390, -17.95012093, -15.46633720, -14.21533775]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.34903812, -0.90196133]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0529 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.14345169, -26.23081017, -22.50061417, -23.41731834, -23.96586800,
         -24.21544456, -20.18602753, -25.76428032, -26.53347778, -25.24602318]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [390]; unstable size 390; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 390] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 390] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 390] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 311] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.16251469, 3.85129428, 1.07807159, 2.04974103, 2.45816231, 2.71345639,
         3.85838246, 4.14238644, 3.23237896]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0250 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.55906677, -26.64030838, -19.33113098, -21.43922997, -19.03748703,
         -20.97289085, -20.39774704, -20.86362457, -27.58946419, -25.17458534]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [519]; unstable size 519; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 519] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 519] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 519] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 219] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02097797,  5.33160686, -0.73743284,  1.28090417,  0.87938404,
          0.03270614,  0.89394522,  6.65467310,  4.26477146]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.55906677, -26.64030838, -19.33113098, -21.43922997, -19.03748703,
         -20.97289085, -20.39774704, -20.86362457, -27.58946419, -25.17458534]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.90825081, -26.12090302, -18.51591682, -20.78538132, -18.67061234,
          -20.35578346, -19.77608490, -20.64961624, -26.99978256, -24.73842430]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15469551]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0596 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.72182465, -25.40373611, -21.20227242, -20.08390617, -21.28728104,
         -19.64896584, -22.07214165, -21.57941437, -23.54422569, -23.66501617]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [553]; unstable size 553; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 225, 1, 553] with unstable size 224 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 553] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 553] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [224]; unstable size 224; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 224] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 224] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.95499611, 4.21736145, 0.73983371, 0.09517527, 0.76654381, 1.38522911,
         0.98252285, 2.42742348, 2.46281314]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0462 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.44517517, -24.66761017, -18.86577606, -18.69302559, -20.38499641,
         -19.18245506, -20.75661469, -21.50863075, -24.90008926, -24.19531822]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [771]; unstable size 771; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 771] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 771] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 771] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 252] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.21118450,  4.10176992, -1.16934431, -0.72179776,  0.25676203,
          0.67854643,  1.19206512,  4.31922293,  3.50376463]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.44517517, -24.66761017, -18.86577606, -18.69302559, -20.38499641,
         -19.18245506, -20.75661469, -21.50863075, -24.90008926, -24.19531822]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.44517326, -24.66760826, -18.86577415, -18.69302559, -20.38499451,
          -19.18245316, -20.75661469, -21.50863075, -24.90009117, -24.19531822],
         [-21.44517326, -24.66760826, -18.86577415, -18.69302559, -20.38499451,
          -19.18245316, -20.75661469, -21.50863075, -24.90009117, -24.19531822]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31667900, -0.48942757]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]],


         [[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0538 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.38232803, -35.89345551, -38.77233124, -38.86247635, -39.62222672,
         -39.86164474, -39.87382126, -39.40642929, -30.93457031, -36.03558350]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 499] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 499] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 197] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.37971139, 3.87611675, 6.40737152, 6.38697529, 7.03272867, 7.19150019,
         7.20581579, 6.50212908, 4.14408016]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0353 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.24032974, -37.65886307, -32.76491928, -35.87559128, -36.34276581,
         -36.02743912, -34.61969757, -36.23526382, -36.62348938, -40.18959427]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [734]; unstable size 734; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 734] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 734] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 734] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 228] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.42341924, 3.43717337, 2.28934169, 2.53784966, 2.29687023, 0.88679022,
         1.92648351, 2.44576836, 5.71752739]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0452 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.79258919, -17.99694252, -16.45632553, -15.40058136, -16.56349564,
         -14.87314796, -17.80143356, -13.41994190, -19.54096222, -16.64786148]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [937]; unstable size 937; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 937] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 937] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 937] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 249] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.73422527, 2.70791602, 1.68733311, 0.95580506, 2.14770603, 0.50132072,
         2.85892677, 3.87416148, 1.62221110]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0453 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.01166153, -22.78888702, -15.86253738, -18.02544975, -16.82504082,
         -17.96582985, -15.98325729, -20.20303345, -22.22256470, -22.36408424]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [720]; unstable size 720; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 334, 1, 720] with unstable size 333 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 720] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 720] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [333]; unstable size 333; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 333] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 333] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.70876312,  4.66763735,  1.06026256, -0.11882287,  0.88787556,
         -0.96121311,  2.31396723,  4.62897301,  4.35728931]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.01166153, -22.78888702, -15.86253738, -18.02544975, -16.82504082,
         -17.96582985, -15.98325729, -20.20303345, -22.22256470, -22.36408424]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.39785576, -22.92395973, -16.30167580, -18.20151138, -17.08473396,
          -18.17427635, -15.85140800, -20.40995026, -22.59860229, -22.46858406],
         [-20.39785576, -22.92395973, -16.30167580, -18.20151138, -17.08473396,
          -18.17427635, -15.85140800, -20.40995026, -22.59860229, -22.46858406]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.78305817, -0.45026779]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0350 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.39692688, -33.50623703, -38.63787079, -39.79333878, -37.69999313,
         -41.03482437, -40.31786346, -38.34481812, -33.13186264, -33.37991333]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [788]; unstable size 788; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 788] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 788] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 788] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 259] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.16784954,  2.02646732,  3.53692198,  1.20165157,  4.52165127,
          3.78477240,  1.66250515, -2.21134424, -1.22387242]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.39692688, -33.50623703, -38.63787079, -39.79333878, -37.69999313,
         -41.03482437, -40.31786346, -38.34481812, -33.13186264, -33.37991333]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.39692307, -33.50624084, -38.63787079, -39.79333115, -37.69999313,
          -41.03482437, -40.31786346, -38.34482574, -33.13185501, -33.37990952],
         [-33.39692307, -33.50624084, -38.63787079, -39.79333115, -37.69999313,
          -41.03482437, -40.31786346, -38.34482574, -33.13185501, -33.37990952]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.10931778, -0.37438583, -0.12633133]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0712 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.86795235, -23.21092606, -17.76663589, -16.98049545, -18.63553619,
         -17.40380287, -19.50118446, -17.26604271, -23.47448921, -21.17066383]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 654] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 654] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 260] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.18142748,  4.33078861, -0.50892043, -0.65947896,  0.37091136,
          1.13457847, -0.94743353,  4.42701340,  2.60953617]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.86795235, -23.21092606, -17.76663589, -16.98049545, -18.63553619,
         -17.40380287, -19.50118446, -17.26604271, -23.47448921, -21.17066383]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.86795235, -23.21092987, -17.76663589, -16.98049545, -18.63553619,
          -17.40380287, -19.50118637, -17.26604462, -23.47449112, -21.17066383],
         [-21.86795235, -23.21092987, -17.76663589, -16.98049545, -18.63553619,
          -17.40380287, -19.50118637, -17.26604462, -23.47449112, -21.17066383]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36283302, -0.42330742, -0.13775826]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0414 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
         -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [494]; unstable size 494; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 494] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 494] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 494] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 270] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.14928699,  4.51440096,  1.64132619, -1.13099432,  1.91445684,
          0.33408695,  1.53952146,  3.79073143,  4.14098549]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
         -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
          -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05387688]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-9.41269815e-01, -9.09523785e-01, -1.33809519e+00,  ...,
            -6.39682531e-01,  7.46032670e-02,  1.85714364e-01],
           [-5.28571427e-01, -7.98412681e-01, -1.25873005e+00,  ...,
            -5.76190472e-01, -2.42857039e-01,  1.06349289e-01],
           [-4.65079248e-01, -4.01587188e-01, -7.66666651e-01,  ...,
            -3.85714173e-01, -3.53968143e-01, -1.63491964e-01],
           ...,
           [ 1.97936535e+00,  1.10634947e+00,  1.42380977e+00,  ...,
             1.94761932e+00,  1.94761932e+00,  1.97936535e+00],
           [ 1.94761932e+00,  1.47142887e+00,  1.37619078e+00,  ...,
             1.96349227e+00,  1.82063520e+00,  1.80476213e+00],
           [ 1.99523830e+00,  1.78888917e+00,  1.85238123e+00,  ...,
             1.99523830e+00,  1.99523830e+00,  1.94761932e+00]],

          [[-1.12721294e-01, -1.44927412e-01, -6.28019273e-01,  ...,
            -2.25442708e-01,  3.54267418e-01,  6.28019392e-01],
           [ 2.09339887e-01, -1.12721294e-01, -5.47504008e-01,  ...,
            -2.89854944e-01,  1.22934580e-07,  5.47504127e-01],
           [ 1.93236828e-01,  2.25442946e-01, -1.61029361e-02,  ...,
            -8.05151686e-02, -8.05151686e-02,  2.89855182e-01],
           ...,
           [ 1.70692456e+00,  8.37359190e-01,  1.14331758e+00,  ...,
             1.75523376e+00,  1.73913074e+00,  1.78743994e+00],
           [ 1.73913074e+00,  1.20772982e+00,  1.04669893e+00,  ...,
             1.72302771e+00,  1.57810009e+00,  1.61030626e+00],
           [ 1.85185218e+00,  1.57810009e+00,  1.56199706e+00,  ...,
             1.75523376e+00,  1.75523376e+00,  1.73913074e+00]],

          [[-1.39280367e+00, -1.30284870e+00, -1.61769128e+00,  ...,
            -1.27286363e+00, -7.48125911e-01, -3.73313308e-01],
           [-1.19790113e+00, -1.39280367e+00, -1.60269880e+00,  ...,
            -1.25787115e+00, -1.03298354e+00, -4.33283329e-01],
           [-1.13793111e+00, -1.21289361e+00, -1.45277369e+00,  ...,
            -1.18290865e+00, -1.03298354e+00, -7.18140900e-01],
           ...,
           [ 1.84557760e+00,  9.76012170e-01,  1.24587750e+00,  ...,
             1.87556267e+00,  1.84557760e+00,  1.87556267e+00],
           [ 1.87556267e+00,  1.33583248e+00,  1.15592217e+00,  ...,
             1.83058512e+00,  1.69565260e+00,  1.69565260e+00],
           [ 1.96551764e+00,  1.69565260e+00,  1.68066013e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.84557760e+00]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0423 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.82804489, -23.63042831, -29.23712158, -28.24177551, -29.14320946,
         -29.41248703, -29.22246933, -29.10352325, -24.23150253, -21.39186287]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [726]; unstable size 726; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 726] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 726] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 726] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 264] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.64157391, 1.36549723, 5.86060524, 5.40555239, 5.76025772, 6.48044920,
         6.13686466, 6.01794624, 1.13634729]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0642 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
         -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [942]; unstable size 942; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 942] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 942] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 942] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 241] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.41716433,  5.54713631,  0.52021515, -0.06935591, -0.04526949,
          0.63125235,  1.37135768,  2.56105852,  5.77544641]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
         -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.58it/s]100%|██████████| 1/1 [00:00<00:00,  8.58it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.30881500, -30.56450272, -25.00361443, -23.76336479, -24.40058708,
          -23.71853256, -24.78523254, -26.12451744, -27.38202095, -30.68591499],
         [-29.30881500, -30.56450272, -25.00361443, -23.76336479, -24.40058708,
          -23.71853256, -24.78523254, -26.12451744, -27.38202095, -30.68591499]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04483223, 0.68205452]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1194 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.08385467529297
alpha/beta optimization time: 1.2496607303619385
initial alpha-crown bounds: tensor([[ 4.47513962,  5.59848642,  0.56283224, -0.05797201, -0.01270843,
          0.67102289,  1.41879487,  2.60586214,  5.82239628]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.0579720139503479
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6929 seconds.
lower bounds for all target labels: [4.475139617919922, 5.598485469818115, 0.562832236289978, -0.05797266960144043, -0.012709617614746094, 0.671022891998291, 1.418794870376587, 2.6058621406555176, 5.8223958015441895]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [3, 4]
start creating model mps for candidates: ['lay/16_3', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=4_30638956.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=4_30638956.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 18384 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 18387 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50116777420044
Verifying property 0 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.822396278381348.

Properties batch 1, size 1
Remaining timeout: 198.29178953170776
Verifying property 1 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.598486423492432.

Properties batch 2, size 1
Remaining timeout: 198.1728310585022
Verifying property 2 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.475139617919922.

Properties batch 3, size 1
Remaining timeout: 198.0568287372589
Verifying property 3 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6058621406555176.

Properties batch 4, size 1
Remaining timeout: 197.9408082962036
Verifying property 4 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.418794870376587.

Properties batch 5, size 1
Remaining timeout: 197.8247413635254
Verifying property 5 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.671022891998291.

Properties batch 6, size 1
Remaining timeout: 197.70801711082458
Verifying property 6 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.562832236289978.

Properties batch 7, size 1
Remaining timeout: 197.59086680412292
Verifying property 7 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01270843]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
        -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01270843]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 942
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 235
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 1190
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006818771362304688
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 31] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.507469177246094e-05
Time: prepare 0.0019    bound 0.0049    transfer 0.0043    finalize 0.0040    func 0.0152    
Accumulated time: func 0.0152    prepare 0.0023    bound 0.0049    transfer 0.0043    finalize 0.0040    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0262    set_bounds 0.0195    solve 0.0153    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0262    set_bounds 0.0195    solve 0.0153    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06978058815002441


Properties batch 8, size 1
Remaining timeout: 197.3031599521637
Verifying property 8 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05797201]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
        -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05797201]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 942
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 235
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 1190
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.000377655029296875
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 72] 
split level 2: [/input-12, 31] 
split level 3: [/input-8, 403] 
split level 4: [/input-8, 140] 
split level 5: [/input-8, 1713] 
split level 6: [/input-8, 771] 
split level 7: [/input-8, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 128 / 256 = 0.5
pruning-in-iteration extra time: 0.004547595977783203
Time: prepare 0.0032    bound 0.1300    transfer 0.0023    finalize 0.0017    func 0.1372    
Accumulated time: func 0.1372    prepare 0.0036    bound 0.1300    transfer 0.0023    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03110 (8), -0.03088 (8), -0.03013 (8), -0.02937 (8), -0.02931 (8), -0.02914 (8), -0.02909 (8), -0.02884 (8), -0.02838 (8), -0.02819 (8), -0.02749 (8), -0.02737 (8), -0.02736 (8), -0.02710 (8), -0.02676 (8), -0.02644 (8), -0.02629 (8), -0.02611 (8), -0.02563 (8), -0.02562 (8), 
Length of domains: 128
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0173    solve 0.1373    add 0.0763    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0173    solve 0.1373    add 0.0763    
Current (lb-rhs): -0.03109508752822876
128 domains visited
Cumulative time: 0.2726268768310547

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 128
splitting decisions: 
split level 0: [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] 
pruning_in_iteration open status: False
ratio of positive domain = 2 / 256 = 0.0078125
pruning-in-iteration extra time: 7.104873657226562e-05
Time: prepare 0.0052    bound 0.0941    transfer 0.0007    finalize 0.0014    func 0.1016    
Accumulated time: func 0.2388    prepare 0.0090    bound 0.2241    transfer 0.0030    finalize 0.0032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03057 (9), -0.03036 (9), -0.02926 (9), -0.02878 (9), -0.02878 (9), -0.02854 (9), -0.02852 (9), -0.02826 (9), -0.02778 (9), -0.02730 (9), -0.02688 (9), -0.02677 (9), -0.02674 (9), -0.02644 (9), -0.02614 (9), -0.02582 (9), -0.02575 (9), -0.02555 (9), -0.02508 (9), -0.02503 (9), 
Length of domains: 254
Time: pickout 0.0152    decision 0.0225    set_bounds 0.0061    solve 0.1016    add 0.0782    
Accumulated time: pickout 0.0156    decision 0.0455    set_bounds 0.0234    solve 0.2390    add 0.1545    
Current (lb-rhs): -0.030568063259124756
382 domains visited
Cumulative time: 0.5038831233978271

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 254
splitting decisions: 
split level 0: [/input-12, 83] [/input-8, 1731] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-8, 1731] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-8, 1731] 
pruning_in_iteration open status: False
ratio of positive domain = 95 / 508 = 0.18700787401574803
pruning-in-iteration extra time: 7.772445678710938e-05
Time: prepare 0.0100    bound 0.1029    transfer 0.0121    finalize 0.0058    func 0.1309    
Accumulated time: func 0.3697    prepare 0.0192    bound 0.3270    transfer 0.0151    finalize 0.0090    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02970 (10), -0.02966 (10), -0.02875 (10), -0.02806 (10), -0.02792 (10), -0.02784 (10), -0.02781 (10), -0.02766 (10), -0.02690 (10), -0.02674 (10), -0.02626 (10), -0.02599 (10), -0.02591 (10), -0.02584 (10), -0.02530 (10), -0.02494 (10), -0.02487 (10), -0.02476 (10), -0.02466 (10), -0.02429 (10), 
Length of domains: 413
Time: pickout 0.0187    decision 0.0314    set_bounds 0.0122    solve 0.1310    add 0.0920    
Accumulated time: pickout 0.0342    decision 0.0770    set_bounds 0.0356    solve 0.3700    add 0.2465    
Current (lb-rhs): -0.029701054096221924
795 domains visited
Cumulative time: 0.7918806076049805

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 413
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
pruning_in_iteration open status: True
ratio of positive domain = 243 / 826 = 0.2941888619854721
pruning-in-iteration extra time: 0.004984378814697266
Time: prepare 0.0172    bound 0.1844    transfer 0.0114    finalize 0.0114    func 0.2245    
Accumulated time: func 0.5942    prepare 0.0366    bound 0.5114    transfer 0.0266    finalize 0.0203    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02902 (11), -0.02879 (11), -0.02808 (11), -0.02722 (11), -0.02718 (11), -0.02695 (11), -0.02691 (11), -0.02662 (11), -0.02632 (11), -0.02626 (11), -0.02539 (11), -0.02504 (11), -0.02497 (11), -0.02489 (11), -0.02479 (11), -0.02450 (11), -0.02443 (11), -0.02402 (11), -0.02396 (11), -0.02381 (11), 
Length of domains: 583
Time: pickout 0.0207    decision 0.0393    set_bounds 0.0211    solve 0.2247    add 0.0793    
Accumulated time: pickout 0.0549    decision 0.1162    set_bounds 0.0568    solve 0.5947    add 0.3258    
Current (lb-rhs): -0.02901822328567505
1378 domains visited
Cumulative time: 1.1854438781738281

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 583
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
pruning_in_iteration open status: False
ratio of positive domain = 187 / 1166 = 0.160377358490566
pruning-in-iteration extra time: 7.796287536621094e-05
Time: prepare 0.0222    bound 0.1141    transfer 0.0202    finalize 0.0082    func 0.1649    
Accumulated time: func 0.7591    prepare 0.0590    bound 0.6255    transfer 0.0468    finalize 0.0286    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02813 (12), -0.02782 (12), -0.02717 (12), -0.02675 (12), -0.02628 (12), -0.02626 (12), -0.02598 (12), -0.02576 (12), -0.02575 (12), -0.02553 (12), -0.02551 (12), -0.02532 (12), -0.02501 (12), -0.02491 (12), -0.02453 (12), -0.02446 (12), -0.02436 (12), -0.02413 (12), -0.02404 (12), -0.02402 (12), 
Length of domains: 978
Time: pickout 0.0195    decision 0.0493    set_bounds 0.0255    solve 0.1651    add 0.1006    
Accumulated time: pickout 0.0744    decision 0.1655    set_bounds 0.0823    solve 0.7598    add 0.4264    
Current (lb-rhs): -0.02812856435775757
2356 domains visited
Cumulative time: 1.5540423393249512

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 978
splitting decisions: 
split level 0: [/input-8, 1716] [/input-8, 1716] [/input-8, 772] [/input-8, 772] [/input-8, 1701] [/input-8, 772] [/input-8, 772] [/input-8, 1701] [/input-8, 772] [/input-8, 772] 
pruning_in_iteration open status: False
ratio of positive domain = 86 / 1956 = 0.04396728016359919
pruning-in-iteration extra time: 9.059906005859375e-05
Time: prepare 0.0435    bound 0.1477    transfer 0.0269    finalize 0.0149    func 0.2332    
Accumulated time: func 0.9923    prepare 0.1027    bound 0.7732    transfer 0.0737    finalize 0.0434    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02680 (13), -0.02663 (13), -0.02643 (13), -0.02630 (13), -0.02558 (13), -0.02524 (13), -0.02510 (13), -0.02505 (13), -0.02494 (13), -0.02491 (13), -0.02480 (13), -0.02478 (13), -0.02464 (13), -0.02463 (13), -0.02446 (13), -0.02419 (13), -0.02399 (13), -0.02399 (13), -0.02362 (13), -0.02360 (13), 
Length of domains: 1862
Time: pickout 0.0288    decision 0.0714    set_bounds 0.0489    solve 0.2337    add 0.1297    
Accumulated time: pickout 0.1032    decision 0.2369    set_bounds 0.1311    solve 0.9935    add 0.5561    
Current (lb-rhs): -0.026802361011505127
4218 domains visited
Cumulative time: 2.0696420669555664

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 1862
splitting decisions: 
split level 0: [/input-8, 772] [/input-8, 772] [/input-8, 731] [/input-8, 1261] [/input-8, 1028] [/input-8, 731] [/input-8, 1261] [/input-8, 1028] [/input-8, 731] [/input-8, 1261] 
pruning_in_iteration open status: False
ratio of positive domain = 189 / 3724 = 0.050751879699248104
pruning-in-iteration extra time: 5.984306335449219e-05
Time: prepare 0.0765    bound 0.1986    transfer 0.0487    finalize 0.0225    func 0.3477    
Accumulated time: func 1.3400    prepare 0.1794    bound 0.9717    transfer 0.1224    finalize 0.0660    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02569 (14), -0.02516 (14), -0.02514 (14), -0.02499 (14), -0.02479 (14), -0.02477 (14), -0.02460 (14), -0.02436 (14), -0.02409 (14), -0.02407 (14), -0.02406 (14), -0.02393 (14), -0.02391 (14), -0.02386 (14), -0.02380 (14), -0.02360 (14), -0.02358 (14), -0.02356 (14), -0.02332 (14), -0.02330 (14), 
Length of domains: 3525
Time: pickout 0.0258    decision 0.1203    set_bounds 0.2245    solve 0.3485    add 0.1636    
Accumulated time: pickout 0.1290    decision 0.3573    set_bounds 0.3557    solve 1.3420    add 0.7197    
Current (lb-rhs): -0.025689542293548584
7743 domains visited
Cumulative time: 2.963644504547119

BaB round 8
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 3525
splitting decisions: 
split level 0: [/input-8, 1261] [/input-8, 1261] [/input-8, 1261] [/input-8, 1716] [/input-8, 731] [/input-8, 1261] [/input-8, 1716] [/input-8, 772] [/input-8, 1261] [/input-8, 1716] 
pruning_in_iteration open status: False
ratio of positive domain = 449 / 7050 = 0.06368794326241134
pruning-in-iteration extra time: 6.127357482910156e-05
Time: prepare 0.1564    bound 0.3317    transfer 0.0414    finalize 0.0481    func 0.5785    
Accumulated time: func 1.9185    prepare 0.3361    bound 1.3034    transfer 0.1638    finalize 0.1141    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02427 (15), -0.02425 (15), -0.02407 (15), -0.02402 (15), -0.02393 (15), -0.02390 (15), -0.02387 (15), -0.02368 (15), -0.02343 (15), -0.02341 (15), -0.02310 (15), -0.02306 (15), -0.02303 (15), -0.02303 (15), -0.02301 (15), -0.02284 (15), -0.02272 (15), -0.02271 (15), -0.02270 (15), -0.02269 (15), 
Length of domains: 6578
Time: pickout 0.0763    decision 0.2156    set_bounds 0.3308    solve 0.5799    add 0.1675    
Accumulated time: pickout 0.2053    decision 0.5729    set_bounds 0.6865    solve 1.9219    add 0.8872    
Current (lb-rhs): -0.024273276329040527
14321 domains visited
Cumulative time: 4.350863456726074

BaB round 9
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 4096
splitting decisions: 
split level 0: [/input-8, 731] [/input-8, 1261] [/input-8, 1701] [/input-8, 1699] [/input-8, 731] [/input-8, 1261] [/input-8, 731] [/input-8, 731] [/input-8, 731] [/input-8, 731] 
pruning_in_iteration open status: False
ratio of positive domain = 1162 / 8192 = 0.141845703125
pruning-in-iteration extra time: 6.341934204101562e-05
Time: prepare 0.1709    bound 0.3692    transfer 0.0457    finalize 0.0439    func 0.6312    
Accumulated time: func 2.5497    prepare 0.5072    bound 1.6726    transfer 0.2095    finalize 0.1579    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02427 (15), -0.02425 (15), -0.02407 (15), -0.02393 (15), -0.02387 (15), -0.02343 (16), -0.02303 (15), -0.02301 (15), -0.02288 (16), -0.02284 (15), -0.02271 (15), -0.02269 (15), -0.02262 (15), -0.02253 (15), -0.02242 (15), -0.02239 (16), -0.02237 (16), -0.02234 (15), -0.02231 (15), -0.02221 (15), 
Length of domains: 9480
Time: pickout 0.0677    decision 0.2332    set_bounds 0.3343    solve 0.6325    add 0.2101    
Accumulated time: pickout 0.2730    decision 0.8061    set_bounds 1.0207    solve 2.5544    add 1.0973    
Current (lb-rhs): -0.024273276329040527
21319 domains visited
current_vram/total_varm: 21.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.851661682128906

BaB round 10
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 8192
splitting decisions: 
split level 0: [/input-8, 731] [/input-8, 1699] [/input-8, 1701] [/input-8, 731] [/input-8, 1699] [/input-8, 1701] [/input-8, 731] [/input-8, 1699] [/input-8, 1701] [/input-8, 731] 
pruning_in_iteration open status: False
ratio of positive domain = 3109 / 16384 = 0.18975830078125
pruning-in-iteration extra time: 0.00014448165893554688
Time: prepare 0.3379    bound 0.6874    transfer 0.0893    finalize 0.1094    func 1.2254    
Accumulated time: func 3.7751    prepare 0.8454    bound 2.3600    transfer 0.2988    finalize 0.2674    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02425 (15), -0.02407 (15), -0.02393 (15), -0.02387 (15), -0.02326 (16), -0.02301 (15), -0.02284 (15), -0.02269 (15), -0.02260 (17), -0.02253 (15), -0.02242 (15), -0.02216 (16), -0.02210 (15), -0.02206 (17), -0.02205 (15), -0.02201 (16), -0.02201 (16), -0.02177 (15), -0.02176 (15), -0.02169 (16), 
Length of domains: 14489
Time: pickout 0.1280    decision 0.6401    set_bounds 0.5384    solve 1.2286    add 0.1770    
Accumulated time: pickout 0.4010    decision 1.4462    set_bounds 1.5592    solve 3.7830    add 1.2743    
Current (lb-rhs): -0.024249911308288574
34520 domains visited
current_vram/total_varm: 21.1GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.60112738609314

BaB round 11
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0035
batch: 14489
splitting decisions: 
split level 0: [/input-8, 731] [/input-8, 731] [/input-8, 1701] [/input-8, 731] [/input-8, 1261] [/input-8, 1701] [/input-8, 731] [/input-8, 731] [/input-8, 1701] [/input-8, 731] 
pruning_in_iteration open status: False
ratio of positive domain = 4912 / 28978 = 0.16950790254675963
pruning-in-iteration extra time: 0.00028252601623535156
Time: prepare 0.6153    bound 1.1959    transfer 0.1732    finalize 0.4609    func 2.4479    
Accumulated time: func 6.2230    prepare 1.4611    bound 3.5560    transfer 0.4721    finalize 0.7283    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02332 (16), -0.02323 (16), -0.02285 (16), -0.02248 (16), -0.02245 (16), -0.02244 (17), -0.02215 (16), -0.02198 (16), -0.02177 (16), -0.02167 (16), -0.02160 (16), -0.02144 (16), -0.02139 (18), -0.02133 (18), -0.02130 (17), -0.02125 (16), -0.02122 (16), -0.02119 (17), -0.02118 (17), -0.02096 (18), 
Length of domains: 23885
Time: pickout 0.2033    decision 1.2396    set_bounds 0.9499    solve 2.4535    add 0.2279    
Accumulated time: pickout 0.6043    decision 2.6858    set_bounds 2.5091    solve 6.2365    add 1.5022    
Current (lb-rhs): -0.023322880268096924
58405 domains visited
Cumulative time: 13.728068113327026

BaB round 12
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts: total 657 constraints, 35570 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3070
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.021784842014312744
10 lb beta sum: 14.894708633422852, worst -0.00944431871175766
pruning_in_iteration open status: True
ratio of positive domain = 32675 / 32768 = 0.997161865234375
pruning-in-iteration extra time: 0.007048606872558594
Time: prepare 0.6879    bound 4.3256    transfer 0.1896    finalize 0.5291    func 5.9466    
Accumulated time: func 12.1696    prepare 2.1495    bound 7.8815    transfer 0.6617    finalize 1.2574    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02332 (16), -0.02323 (16), -0.02285 (16), -0.02245 (16), -0.02198 (16), -0.02167 (16), -0.02160 (16), -0.02144 (16), -0.02133 (18), -0.02122 (16), -0.02118 (17), -0.02095 (16), -0.02088 (16), -0.02087 (17), -0.02086 (16), -0.02082 (16), -0.02061 (16), -0.02051 (18), -0.02048 (18), -0.02047 (18), 
Length of domains: 7594
Time: pickout 0.2342    decision 1.7556    set_bounds 1.0819    solve 5.9524    add 0.0854    
Accumulated time: pickout 0.8384    decision 4.4414    set_bounds 3.5910    solve 12.1889    add 1.5877    
Current (lb-rhs): -0.023322880268096924
58498 domains visited
Cumulative time: 23.302294969558716

BaB round 13
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts: total 892 constraints, 48155 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4416
batch: 7594
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 1701] [/input-8, 1716] [/input-8, 1701] [/input-8, 1699] [/input-8, 1716] [/input-8, 1701] [/input-8, 1699] [/input-8, 1716] [/input-8, 1701] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.022503018379211426
10 lb beta sum: 30.042613983154297, worst -0.006033971905708313
pruning_in_iteration open status: True
ratio of positive domain = 15187 / 15188 = 0.9999341585462207
pruning-in-iteration extra time: 0.004598140716552734
Time: prepare 0.4980    bound 2.6899    transfer 0.0864    finalize 0.1079    func 3.4827    
Accumulated time: func 15.6523    prepare 2.6479    bound 10.5714    transfer 0.7482    finalize 1.3652    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00004 (17), 
Length of domains: 1
Time: pickout 0.1224    decision 0.6083    set_bounds 0.3509    solve 3.4871    add 0.0082    
Accumulated time: pickout 0.9609    decision 5.0497    set_bounds 3.9419    solve 15.6760    add 1.5959    
Current (lb-rhs): -4.2226165533065796e-05
58499 domains visited
Cumulative time: 28.40117835998535

BaB round 14
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0020
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 138] 
split level 1: [/input-8, 580] 
split level 2: [/input-8, 772] 
split level 3: [/input-8, 582] 
split level 4: [/input-8, 579] 
split level 5: [/input-8, 1730] 
split level 6: [/input-8, 1593] 
split level 7: [/input-8, 142] 
cut re-enabled after branching node selection
0 lb beta sum: 2.6625192165374756, worst 0.006612926721572876

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.100799560546875e-05
Time: prepare 0.0111    bound 0.0097    transfer 0.0019    finalize 0.0016    func 0.0260    
Accumulated time: func 15.6783    prepare 2.6595    bound 10.5812    transfer 0.7500    finalize 1.3669    
all_split False
Length of domains: 0
Time: pickout 0.0013    decision 0.0257    set_bounds 0.0167    solve 0.0260    add 0.0001    
Accumulated time: pickout 0.9621    decision 5.0755    set_bounds 3.9586    solve 15.7021    add 1.5960    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
58499 domains visited
Cumulative time: 28.47399067878723

found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=3_30638956.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=4_30638956.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=4_30638956.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=4_30638956.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=154_spec=4_30638956.log
found process for pidx=3
kill process for pidx=3
found process for pidx=4
Result: safe in 31.6759 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.92134666, -14.68086624, -14.01877499, -12.96694374, -13.68891144,
         -13.29801559, -12.61456585, -14.58385181, -12.91630363, -13.61004829]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 293, 1, 523] with unstable size 292 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 523] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [292]; unstable size 292; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 292] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 292] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.07341194,  0.02069950, -0.45618176, -0.75070477, -0.48273373,
         -0.58674037,  0.21641389, -1.83327806, -0.92162514]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.92134666, -14.68086624, -14.01877499, -12.96694374, -13.68891144,
         -13.29801559, -12.61456585, -14.58385181, -12.91630363, -13.61004829]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.51872063, -14.14559269, -13.69043827, -12.47999954, -13.32490540,
          -12.76778603, -12.69309044, -14.15062237, -12.40921497, -13.10730171],
         [-14.51872063, -14.14559269, -13.69043827, -12.47999954, -13.32490540,
          -12.76778603, -12.69309044, -14.15062237, -12.40921497, -13.10730171]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.99734783, -0.21309090,  0.63181496,  0.07469559, -0.28387547,
           0.41421127]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0164 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0697 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.54337883, -22.91224098, -19.67365646, -18.07358360, -18.92478752,
         -18.42077827, -18.27539825, -20.47289658, -23.38033676, -23.14374924]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [789]; unstable size 789; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 789] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 789] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 789] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 259] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.47897148,  2.52675438,  0.01573062, -0.71339208, -0.73171210,
         -1.54283857,  0.69137216,  2.97468710,  2.91973901]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.54337883, -22.91224098, -19.67365646, -18.07358360, -18.92478752,
         -18.42077827, -18.27539825, -20.47289658, -23.38033676, -23.14374924]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.54338074, -22.91224098, -19.67365646, -18.07358170, -18.92478561,
          -18.42077637, -18.27539635, -20.47289658, -23.38033676, -23.14374733],
         [-22.54338074, -22.91224098, -19.67365646, -18.07358170, -18.92478561,
          -18.42077637, -18.27539635, -20.47289658, -23.38033676, -23.14374733]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.34719467,  0.50400925, -0.14538002]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0604 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.22789001, -20.43865013, -26.99475098, -25.86932182, -27.76927757,
         -27.09349632, -26.96388435, -26.58814430, -23.07920265, -18.19562912]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [462]; unstable size 462; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 183, 1, 462] with unstable size 182 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 462] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [182]; unstable size 182; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 182] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 182] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89370632, 1.38738179, 7.23277283, 6.41899061, 8.12875843, 7.56016350,
         7.36910677, 6.89903021, 3.88113213]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0618 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
         -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 235, 1, 584] with unstable size 234 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 584] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [234]; unstable size 234; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 234] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 234] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.98524344,  0.54466271,  1.17118931, -0.38150430,  1.88504982,
         -0.46537113,  0.44484568,  0.24631619,  3.03603745]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
         -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.45it/s]100%|██████████| 1/1 [00:00<00:00,  8.44it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.40004921, -27.81439972, -28.63260841, -26.82824707, -29.46389771,
          -26.85524750, -27.88347054, -27.95292473, -26.49364471, -30.27164841],
         [-28.40004921, -27.81439972, -28.63260841, -26.82824707, -29.46389771,
          -26.85524750, -27.88347054, -27.95292473, -26.49364471, -30.27164841]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33460236, 0.36160278]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1212 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.091230392456055
alpha/beta optimization time: 1.2397072315216064
initial alpha-crown bounds: tensor([[ 1.03688931,  0.59373116,  1.24077272, -0.31201315,  1.97173309,
         -0.38633680,  0.51818943,  0.33714390,  3.09112048]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.3863368034362793
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6725 seconds.
lower bounds for all target labels: [1.0368893146514893, 0.5937304496765137, 1.2407727241516113, -0.3120131492614746, 1.9717330932617188, -0.3863368034362793, 0.5181894302368164, 0.3371431827545166, 3.091120481491089]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [3, 5]
start creating model mps for candidates: ['lay/16_3', 'lay/16_5']
Process 18671 received signal 15. Terminate pool <multiprocessing.pool.Pool state=RUN pool_size=96>
Process 18671 received signal 15. Terminate pool <multiprocessing.pool.Pool state=TERMINATE pool_size=96>
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4796802997589
Verifying property 0 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.091120481491089.

Properties batch 1, size 1
Remaining timeout: 198.2921495437622
Verifying property 1 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9717330932617188.

Properties batch 2, size 1
Remaining timeout: 198.17632341384888
Verifying property 2 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2407727241516113.

Properties batch 3, size 1
Remaining timeout: 198.06549978256226
Verifying property 3 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0368893146514893.

Properties batch 4, size 1
Remaining timeout: 197.95469522476196
Verifying property 4 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.593731164932251.

Properties batch 5, size 1
Remaining timeout: 197.84419512748718
Verifying property 5 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5181894302368164.

Properties batch 6, size 1
Remaining timeout: 197.73278546333313
Verifying property 6 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3371438980102539.

Properties batch 7, size 1
Remaining timeout: 197.61796474456787
Verifying property 7 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31201315]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
        -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31201315]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 584
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 230
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 829
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006575584411621094
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 64] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 246 / 256 = 0.9609375
pruning-in-iteration extra time: 0.00486445426940918
Time: prepare 0.0019    bound 0.1202    transfer 0.0047    finalize 0.0021    func 0.1288    
Accumulated time: func 0.1288    prepare 0.0023    bound 0.1202    transfer 0.0047    finalize 0.0021    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05661 (8), -0.05341 (8), -0.05082 (8), -0.04726 (8), -0.02153 (8), -0.01997 (8), -0.01721 (8), -0.01379 (8), -0.00555 (8), -0.00322 (8), 
Length of domains: 10
Time: pickout 0.0006    decision 0.0257    set_bounds 0.0190    solve 0.1289    add 0.0395    
Accumulated time: pickout 0.0006    decision 0.0257    set_bounds 0.0190    solve 0.1289    add 0.0395    
Current (lb-rhs): -0.05660867691040039
10 domains visited
Cumulative time: 0.22529268264770508

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 10
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 268] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] 
split level 3: [/input, 3017] [/input, 3017] [/input, 3018] [/input-8, 171] [/input, 3018] [/input, 3017] [/input-8, 179] [/input, 3017] [/input, 3018] [/input, 3018] 
split level 4: [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input, 3018] [/input-8, 179] [/input-8, 179] [/input-8, 179] 
pruning_in_iteration open status: True
ratio of positive domain = 308 / 320 = 0.9625
pruning-in-iteration extra time: 0.004581451416015625
Time: prepare 0.0080    bound 0.1228    transfer 0.0096    finalize 0.0027    func 0.1431    
Accumulated time: func 0.2719    prepare 0.0106    bound 0.2430    transfer 0.0143    finalize 0.0047    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00964 (13), -0.00775 (13), -0.00725 (13), -0.00506 (13), -0.00450 (13), -0.00447 (13), -0.00297 (13), -0.00293 (13), -0.00253 (13), -0.00192 (13), -0.00045 (13), -0.00009 (13), 
Length of domains: 12
Time: pickout 0.0010    decision 0.0229    set_bounds 0.0205    solve 0.1432    add 0.0396    
Accumulated time: pickout 0.0016    decision 0.0486    set_bounds 0.0395    solve 0.2721    add 0.0790    
Current (lb-rhs): -0.0096435546875
22 domains visited
Cumulative time: 0.4610157012939453

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 12
splitting decisions: 
split level 0: [/input-8, 171] [/input-8, 172] [/input, 3000] [/input-8, 172] [/input-8, 171] [/input, 3000] [/input-8, 172] [/input-8, 171] [/input, 3000] [/input-8, 172] 
split level 1: [/input, 3018] [/input-8, 171] [/input, 3018] [/input-8, 171] [/input, 3018] [/input, 3018] [/input-8, 171] [/input, 3032] [/input, 3018] [/input-8, 171] 
split level 2: [/input-8, 372] [/input, 3018] [/input, 3032] [/input, 3018] [/input-8, 372] [/input, 3032] [/input, 3018] [/input, 3018] [/input, 3032] [/input, 3018] 
split level 3: [/input, 3032] [/input, 3032] [/input, 3002] [/input, 3032] [/input, 3032] [/input-8, 1125] [/input, 3032] [/input-8, 372] [/input, 3002] [/input, 3032] 
split level 4: [/input, 3002] [/input, 3002] [/input-8, 1125] [/input, 3002] [/input, 3002] [/input, 3002] [/input, 3002] [/input, 3002] [/input-8, 1125] [/input, 3002] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 4.220008850097656e-05
Time: prepare 0.0093    bound 0.0078    transfer 0.0117    finalize 0.0024    func 0.0312    
Accumulated time: func 0.3032    prepare 0.0201    bound 0.2508    transfer 0.0259    finalize 0.0071    
all_split False
Length of domains: 0
Time: pickout 0.0013    decision 0.0174    set_bounds 0.0203    solve 0.0313    add 0.0001    
Accumulated time: pickout 0.0029    decision 0.0659    set_bounds 0.0598    solve 0.3034    add 0.0791    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
22 domains visited
Cumulative time: 0.5332062244415283


Properties batch 8, size 1
Remaining timeout: 196.883442401886
Verifying property 8 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38633680]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
        -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38633680]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 584
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 230
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 829
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00021910667419433594
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 240 / 256 = 0.9375
pruning-in-iteration extra time: 0.004769086837768555
Time: prepare 0.0018    bound 0.1103    transfer 0.0019    finalize 0.0017    func 0.1158    
Accumulated time: func 0.1158    prepare 0.0023    bound 0.1103    transfer 0.0019    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07240 (8), -0.06919 (8), -0.06656 (8), -0.06261 (8), -0.03046 (8), -0.02859 (8), -0.02684 (8), -0.02493 (8), -0.02275 (8), -0.02075 (8), -0.01600 (8), -0.01198 (8), -0.01122 (8), -0.00843 (8), -0.00816 (8), -0.00280 (8), 
Length of domains: 16
Time: pickout 0.0004    decision 0.0239    set_bounds 0.0174    solve 0.1158    add 0.0400    
Accumulated time: pickout 0.0004    decision 0.0239    set_bounds 0.0174    solve 0.1158    add 0.0400    
Current (lb-rhs): -0.07240104675292969
16 domains visited
Cumulative time: 0.21094727516174316

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 16
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input-8, 268] [/input-8, 171] [/input-8, 171] 
split level 2: [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 171] [/input-8, 179] [/input-8, 179] 
split level 3: [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3018] [/input-8, 179] [/input, 3017] [/input, 3017] 
pruning_in_iteration open status: True
ratio of positive domain = 226 / 256 = 0.8828125
pruning-in-iteration extra time: 0.0045871734619140625
Time: prepare 0.0064    bound 0.1155    transfer 0.0008    finalize 0.0018    func 0.1246    
Accumulated time: func 0.2404    prepare 0.0089    bound 0.2257    transfer 0.0027    finalize 0.0035    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02814 (12), -0.02702 (12), -0.02544 (12), -0.02459 (12), -0.02392 (12), -0.02316 (12), -0.02308 (12), -0.02296 (12), -0.02176 (12), -0.02049 (12), -0.02034 (12), -0.01924 (12), -0.01914 (12), -0.01908 (12), -0.01891 (12), -0.01733 (12), -0.01718 (12), -0.01617 (12), -0.01529 (12), -0.01505 (12), 
Length of domains: 30
Time: pickout 0.0012    decision 0.0199    set_bounds 0.0126    solve 0.1247    add 0.0540    
Accumulated time: pickout 0.0016    decision 0.0439    set_bounds 0.0301    solve 0.2405    add 0.0940    
Current (lb-rhs): -0.028142690658569336
46 domains visited
Cumulative time: 0.4349830150604248

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 30
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input-8, 171] 
split level 2: [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] 
pruning_in_iteration open status: True
ratio of positive domain = 226 / 240 = 0.9416666666666667
pruning-in-iteration extra time: 0.0045909881591796875
Time: prepare 0.0062    bound 0.1148    transfer 0.0048    finalize 0.0015    func 0.1274    
Accumulated time: func 0.3678    prepare 0.0153    bound 0.3405    transfer 0.0076    finalize 0.0050    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00805 (15), -0.00637 (15), -0.00626 (15), -0.00456 (15), -0.00418 (15), -0.00357 (15), -0.00321 (15), -0.00258 (15), -0.00249 (15), -0.00224 (15), -0.00206 (15), -0.00112 (15), -0.00070 (15), -0.00043 (15), 
Length of domains: 14
Time: pickout 0.0057    decision 0.0164    set_bounds 0.0121    solve 0.1274    add 0.0435    
Accumulated time: pickout 0.0073    decision 0.0603    set_bounds 0.0422    solve 0.3680    add 0.1375    
Current (lb-rhs): -0.008048772811889648
60 domains visited
Cumulative time: 0.6456146240234375

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 14
splitting decisions: 
split level 0: [/input-8, 172] [/input-8, 372] [/input, 3032] [/input-8, 172] [/input-8, 372] [/input-8, 172] [/input-8, 372] [/input-8, 372] [/input-8, 172] [/input-8, 372] 
split level 1: [/input, 3032] [/input, 3002] [/input-8, 372] [/input-8, 372] [/input, 3032] [/input, 3032] [/input-8, 178] [/input, 3032] [/input, 3032] [/input, 3032] 
split level 2: [/input, 3002] [/input-8, 178] [/input, 3002] [/input, 3032] [/input, 3002] [/input-8, 178] [/input, 3032] [/input, 3002] [/input, 3002] [/input-8, 178] 
split level 3: [/input-8, 178] [/input, 3032] [/input-8, 178] [/input, 3002] [/input-8, 1125] [/input, 3002] [/input, 3002] [/input-8, 1125] [/input-8, 178] [/input, 3002] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 224 / 224 = 1.0
pruning-in-iteration extra time: 4.315376281738281e-05
Time: prepare 0.0056    bound 0.0045    transfer 0.0099    finalize 0.0014    func 0.0215    
Accumulated time: func 0.3892    prepare 0.0212    bound 0.3450    transfer 0.0174    finalize 0.0064    
all_split False
Length of domains: 0
Time: pickout 0.0012    decision 0.0141    set_bounds 0.0108    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0085    decision 0.0744    set_bounds 0.0530    solve 0.3895    add 0.1376    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
60 domains visited
Cumulative time: 0.6944794654846191

the mip building process is not terminated yet, kill it
the mip building process is not terminated yet, kill it
Result: safe in 4.5083 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.30548668, -31.13262558, -30.14710617, -29.36580276, -31.43879890,
         -30.41797447, -28.40415192, -33.04300690, -32.20061874, -30.97929573]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [616]; unstable size 616; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 616] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 616] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 616] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 173] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89829886, 1.27482843, 1.03844357, 0.41801399, 2.17892456, 1.35105932,
         3.53787732, 2.40265942, 1.21200323]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
         -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1027]; unstable size 1027; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 1027] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1027] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1027] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 298] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02182770,  4.76163864, -0.19650856,  1.45338225,  1.88351488,
          0.29130280,  1.95355940,  2.40450525,  4.61817598]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
         -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.50it/s]100%|██████████| 1/1 [00:00<00:00,  8.49it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.21202469, -18.84812546, -12.25920391, -14.25386429, -11.70048809,
          -14.80021286, -13.11516190, -14.94994068, -16.33413696, -18.77376938]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.55871582]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1207 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.154895782470703
alpha/beta optimization time: 1.2617638111114502
initial alpha-crown bounds: tensor([[ 2.14901829,  4.91513777, -0.11741766,  1.51492560,  1.96165800,
          0.36733091,  2.03420472,  2.56605887,  4.76397848]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11741766333580017
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6742 seconds.
lower bounds for all target labels: [2.149017810821533, 4.915137767791748, -0.11741766333580017, 1.5149255990982056, 1.961658000946045, 0.3673309087753296, 2.0342047214508057, 2.566058874130249, 4.763978481292725]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.46407103538513
Verifying property 0 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.915137767791748.

Properties batch 1, size 1
Remaining timeout: 198.27047181129456
Verifying property 1 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.763978481292725.

Properties batch 2, size 1
Remaining timeout: 198.16584658622742
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.566058874130249.

Properties batch 3, size 1
Remaining timeout: 198.06485414505005
Verifying property 3 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1490182876586914.

Properties batch 4, size 1
Remaining timeout: 197.96348547935486
Verifying property 4 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0342047214508057.

Properties batch 5, size 1
Remaining timeout: 197.86292958259583
Verifying property 5 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.961658000946045.

Properties batch 6, size 1
Remaining timeout: 197.76190948486328
Verifying property 6 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5149255990982056.

Properties batch 7, size 1
Remaining timeout: 197.66129112243652
Verifying property 7 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3673309087753296.

Properties batch 8, size 1
Remaining timeout: 197.54587602615356
Verifying property 8 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11741766]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
        -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11741766]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1027
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 1350
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008423328399658203
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 46] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0019    bound 0.0049    transfer 0.0041    finalize 0.0042    func 0.0151    
Accumulated time: func 0.0151    prepare 0.0023    bound 0.0049    transfer 0.0041    finalize 0.0042    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0193    solve 0.0152    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0254    set_bounds 0.0193    solve 0.0152    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06637144088745117

the mip building process is not terminated yet, kill it
Result: safe in 2.9035 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.26904869, -33.04354858, -25.95203400, -25.30147362, -26.82607079,
         -23.58791351, -27.02210999, -26.74736023, -30.97900772, -31.80931664]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [497]; unstable size 497; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 497] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 497] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 497] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 235] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.07312393, 7.09390211, 1.17368329, 1.32954609, 1.97332036, 2.09624052,
         2.19010592, 5.61076880, 6.28059959]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0644 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
         -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [914]; unstable size 914; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 914] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 914] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 914] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 264] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50396132,  4.56140280,  1.59753513,  0.26819658,  2.21705484,
         -0.30545175,  3.74951530,  1.75252247,  5.38511467]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
         -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.53it/s]100%|██████████| 1/1 [00:00<00:00,  8.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.61605644, -26.34099007, -20.08775520, -22.38736916, -20.89388466,
          -23.12874413, -20.31867599, -24.87288857, -23.20222473, -27.22626305]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.23092079]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1202 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.216480255126953
alpha/beta optimization time: 1.2559890747070312
initial alpha-crown bounds: tensor([[ 1.54622138,  4.63079357,  1.64909208,  0.31041074,  2.27289987,
         -0.27205801,  3.81806374,  1.79653931,  5.46451807]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.27205801010131836
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6608 seconds.
lower bounds for all target labels: [1.5462214946746826, 4.630794048309326, 1.649092674255371, 0.3104104995727539, 2.2728991508483887, -0.27205801010131836, 3.8180627822875977, 1.7965383529663086, 5.46451997756958]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [5]
start creating model mps for candidates: ['lay/16_5']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 19959 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.45818972587585
Verifying property 0 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.464518070220947.

Properties batch 1, size 1
Remaining timeout: 198.236736536026
Verifying property 1 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.630793571472168.

Properties batch 2, size 1
Remaining timeout: 198.12009286880493
Verifying property 2 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.818063735961914.

Properties batch 3, size 1
Remaining timeout: 198.0171229839325
Verifying property 3 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.272899866104126.

Properties batch 4, size 1
Remaining timeout: 197.91426849365234
Verifying property 4 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.796539306640625.

Properties batch 5, size 1
Remaining timeout: 197.81126928329468
Verifying property 5 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6490920782089233.

Properties batch 6, size 1
Remaining timeout: 197.70871138572693
Verifying property 6 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.546221375465393.

Properties batch 7, size 1
Remaining timeout: 197.60483407974243
Verifying property 7 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.310410737991333.

Properties batch 8, size 1
Remaining timeout: 197.5009844303131
Verifying property 8 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27205801]], device='cuda:0') need to verify.
Model prediction is: tensor([-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
        -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27205801]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 259
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 1190
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009922981262207031
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 36] 
split level 2: [/input-12, 96] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 43] 
split level 5: [/input-12, 18] 
split level 6: [/input-8, 1171] 
split level 7: [/input, 2984] 
pruning_in_iteration open status: True
ratio of positive domain = 237 / 256 = 0.92578125
pruning-in-iteration extra time: 0.005178213119506836
Time: prepare 0.0048    bound 0.1549    transfer 0.0046    finalize 0.0028    func 0.1672    
Accumulated time: func 0.1672    prepare 0.0053    bound 0.1549    transfer 0.0046    finalize 0.0028    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11614 (8), -0.11067 (8), -0.10986 (8), -0.10439 (8), -0.09761 (8), -0.09235 (8), -0.09166 (8), -0.08644 (8), -0.05946 (8), -0.05591 (8), -0.05393 (8), -0.05040 (8), -0.02296 (8), -0.01939 (8), -0.01858 (8), -0.01496 (8), -0.01449 (8), -0.01067 (8), -0.00343 (8), 
Length of domains: 19
Time: pickout 0.0011    decision 0.0278    set_bounds 0.0247    solve 0.1673    add 0.0549    
Accumulated time: pickout 0.0011    decision 0.0278    set_bounds 0.0247    solve 0.1673    add 0.0549    
Current (lb-rhs): -0.11614274978637695
19 domains visited
Cumulative time: 0.28942060470581055

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 19
splitting decisions: 
split level 0: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 1: [/input-8, 1649] [/input-12, 2] [/input-8, 1650] [/input-12, 2] [/input-8, 1649] [/input-12, 2] [/input-8, 1650] [/input-12, 2] [/input-8, 1756] [/input-8, 1649] 
split level 2: [/input-8, 1650] [/input, 2966] [/input-8, 1649] [/input, 2966] [/input-8, 1650] [/input, 2966] [/input-8, 1649] [/input, 2966] [/input, 2966] [/input-8, 1650] 
split level 3: [/input-8, 1077] [/input-8, 1762] [/input-8, 1077] [/input-8, 1236] [/input-8, 1077] [/input-8, 1762] [/input-8, 1077] [/input-8, 1236] [/input-8, 1762] [/input-8, 1077] 
pruning_in_iteration open status: True
ratio of positive domain = 228 / 304 = 0.75
pruning-in-iteration extra time: 0.005707502365112305
Time: prepare 0.0086    bound 0.1894    transfer 0.0226    finalize 0.0044    func 0.2251    
Accumulated time: func 0.3923    prepare 0.0142    bound 0.3443    transfer 0.0272    finalize 0.0072    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10285 (12), -0.10085 (12), -0.09910 (12), -0.09737 (12), -0.09714 (12), -0.09662 (12), -0.09537 (12), -0.09362 (12), -0.09331 (12), -0.09289 (12), -0.09166 (12), -0.09114 (12), -0.08960 (12), -0.08783 (12), -0.08740 (12), -0.08486 (12), -0.08412 (12), -0.08111 (12), -0.07966 (12), -0.07878 (12), 
Length of domains: 76
Time: pickout 0.0064    decision 0.0348    set_bounds 0.0227    solve 0.2253    add 0.0711    
Accumulated time: pickout 0.0074    decision 0.0626    set_bounds 0.0474    solve 0.3926    add 0.1260    
Current (lb-rhs): -0.10284852981567383
95 domains visited
Cumulative time: 0.6600091457366943

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 76
splitting decisions: 
split level 0: [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] 
split level 1: [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] 
pruning_in_iteration open status: True
ratio of positive domain = 121 / 304 = 0.3980263157894737
pruning-in-iteration extra time: 0.00598907470703125
Time: prepare 0.0114    bound 0.2335    transfer 0.0014    finalize 0.0065    func 0.2528    
Accumulated time: func 0.6451    prepare 0.0259    bound 0.5778    transfer 0.0286    finalize 0.0136    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09793 (14), -0.09589 (14), -0.09423 (14), -0.09250 (14), -0.09225 (14), -0.09167 (14), -0.09046 (14), -0.08881 (14), -0.08809 (14), -0.08801 (14), -0.08683 (14), -0.08624 (14), -0.08446 (14), -0.08268 (14), -0.08258 (14), -0.07913 (14), -0.07904 (14), -0.07546 (14), -0.07389 (14), -0.07319 (14), 
Length of domains: 183
Time: pickout 0.0137    decision 0.0191    set_bounds 0.0363    solve 0.2531    add 0.0833    
Accumulated time: pickout 0.0212    decision 0.0816    set_bounds 0.0837    solve 0.6457    add 0.2093    
Current (lb-rhs): -0.0979306697845459
278 domains visited
Cumulative time: 1.0827069282531738

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 183
splitting decisions: 
split level 0: [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] 
pruning_in_iteration open status: True
ratio of positive domain = 125 / 366 = 0.3415300546448088
pruning-in-iteration extra time: 0.0052032470703125
Time: prepare 0.0103    bound 0.1385    transfer 0.0302    finalize 0.0053    func 0.1846    
Accumulated time: func 0.8297    prepare 0.0366    bound 0.7163    transfer 0.0589    finalize 0.0190    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09483 (15), -0.09281 (15), -0.09087 (15), -0.08941 (15), -0.08892 (15), -0.08891 (15), -0.08852 (15), -0.08739 (15), -0.08703 (15), -0.08688 (15), -0.08545 (15), -0.08499 (15), -0.08480 (15), -0.08456 (15), -0.08350 (15), -0.08349 (15), -0.08310 (15), -0.08270 (15), -0.08165 (15), -0.08153 (15), 
Length of domains: 241
Time: pickout 0.0259    decision 0.0335    set_bounds 0.0103    solve 0.1851    add 0.0167    
Accumulated time: pickout 0.0470    decision 0.1151    set_bounds 0.0941    solve 0.8308    add 0.2260    
Current (lb-rhs): -0.09482526779174805
519 domains visited
Cumulative time: 1.357945442199707

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 241
splitting decisions: 
split level 0: [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-12, 90] [/input-8, 1236] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 482 = 0.2614107883817427
pruning-in-iteration extra time: 0.0050029754638671875
Time: prepare 0.0132    bound 0.1600    transfer 0.0070    finalize 0.0047    func 0.1851    
Accumulated time: func 1.0149    prepare 0.0500    bound 0.8763    transfer 0.0658    finalize 0.0237    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09312 (16), -0.09110 (16), -0.08840 (16), -0.08821 (16), -0.08771 (16), -0.08678 (16), -0.08649 (16), -0.08632 (16), -0.08627 (16), -0.08498 (16), -0.08449 (16), -0.08436 (16), -0.08301 (16), -0.08300 (16), -0.08299 (16), -0.08282 (16), -0.08251 (16), -0.08188 (16), -0.08137 (16), -0.08110 (16), 
Length of domains: 356
Time: pickout 0.0171    decision 0.0361    set_bounds 0.0127    solve 0.1854    add 0.0888    
Accumulated time: pickout 0.0642    decision 0.1512    set_bounds 0.1068    solve 1.0162    add 0.3148    
Current (lb-rhs): -0.09311580657958984
875 domains visited
Cumulative time: 1.7063517570495605

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 356
splitting decisions: 
split level 0: [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input, 901] 
pruning_in_iteration open status: False
ratio of positive domain = 71 / 712 = 0.0997191011235955
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0185    bound 0.1128    transfer 0.0233    finalize 0.0074    func 0.1621    
Accumulated time: func 1.1769    prepare 0.0688    bound 0.9891    transfer 0.0891    finalize 0.0311    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09066 (17), -0.08870 (17), -0.08570 (17), -0.08550 (17), -0.08525 (17), -0.08425 (17), -0.08382 (17), -0.08356 (17), -0.08324 (17), -0.08304 (17), -0.08205 (17), -0.08153 (17), -0.08142 (17), -0.08128 (17), -0.08094 (17), -0.08062 (17), -0.08046 (17), -0.08031 (17), -0.08010 (17), -0.07997 (17), 
Length of domains: 640
Time: pickout 0.0209    decision 0.0353    set_bounds 0.0179    solve 0.1624    add 0.2449    
Accumulated time: pickout 0.0850    decision 0.1865    set_bounds 0.1246    solve 1.1786    add 0.5597    
Current (lb-rhs): -0.09065771102905273
1515 domains visited
Cumulative time: 2.2160823345184326

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 640
splitting decisions: 
split level 0: [/input-8, 1374] [/input, 3028] [/input-8, 954] [/input, 2935] [/input-8, 1374] [/input, 3028] [/input-8, 1374] [/input, 2935] [/input-8, 1374] [/input-8, 1756] 
pruning_in_iteration open status: False
ratio of positive domain = 117 / 1280 = 0.09140625000000002
pruning-in-iteration extra time: 6.389617919921875e-05
Time: prepare 0.0380    bound 0.1188    transfer 0.0225    finalize 0.0143    func 0.1937    
Accumulated time: func 1.3707    prepare 0.1070    bound 1.1079    transfer 0.1116    finalize 0.0453    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08774 (18), -0.08579 (18), -0.08540 (18), -0.08404 (18), -0.08364 (18), -0.08277 (18), -0.08235 (18), -0.08208 (18), -0.08131 (18), -0.08080 (18), -0.08048 (18), -0.08037 (18), -0.08004 (18), -0.07999 (18), -0.07985 (18), -0.07942 (18), -0.07882 (18), -0.07877 (18), -0.07869 (18), -0.07851 (18), 
Length of domains: 1145
Time: pickout 0.0619    decision 0.0577    set_bounds 0.0410    solve 0.1940    add 0.1005    
Accumulated time: pickout 0.1469    decision 0.2442    set_bounds 0.1656    solve 1.3726    add 0.6603    
Current (lb-rhs): -0.08774447441101074
2660 domains visited
Cumulative time: 2.6814873218536377

BaB round 8
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 1145
splitting decisions: 
split level 0: [/input-8, 954] [/input, 901] [/input-8, 1374] [/input, 3028] [/input-8, 954] [/input, 901] [/input-8, 954] [/input, 3028] [/input-8, 954] [/input, 3028] 
pruning_in_iteration open status: False
ratio of positive domain = 196 / 2290 = 0.08558951965065498
pruning-in-iteration extra time: 6.198883056640625e-05
Time: prepare 0.0570    bound 0.1450    transfer 0.0308    finalize 0.0184    func 0.2515    
Accumulated time: func 1.6221    prepare 0.1642    bound 1.2529    transfer 0.1424    finalize 0.0638    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08455 (19), -0.08321 (19), -0.08258 (19), -0.08219 (19), -0.08123 (19), -0.08085 (19), -0.08082 (19), -0.08044 (19), -0.07958 (19), -0.07948 (19), -0.07915 (19), -0.07910 (19), -0.07889 (19), -0.07823 (19), -0.07812 (19), -0.07780 (19), -0.07759 (19), -0.07754 (19), -0.07730 (19), -0.07725 (19), 
Length of domains: 2082
Time: pickout 0.0383    decision 0.0830    set_bounds 0.0507    solve 0.2520    add 0.1126    
Accumulated time: pickout 0.1853    decision 0.3272    set_bounds 0.2163    solve 1.6245    add 0.7729    
Current (lb-rhs): -0.08455228805541992
4742 domains visited
Cumulative time: 3.2322914600372314

BaB round 9
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 2082
splitting decisions: 
split level 0: [/input-8, 1740] [/input, 2935] [/input, 3028] [/input-8, 228] [/input, 3028] [/input, 2935] [/input, 3028] [/input-8, 228] [/input-8, 1740] [/input, 2935] 
pruning_in_iteration open status: False
ratio of positive domain = 532 / 4164 = 0.12776176753121993
pruning-in-iteration extra time: 5.9604644775390625e-05
Time: prepare 0.1147    bound 0.2252    transfer 0.0197    finalize 0.2616    func 0.6219    
Accumulated time: func 2.2441    prepare 0.2793    bound 1.4781    transfer 0.1621    finalize 0.3254    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08177 (20), -0.08042 (20), -0.07977 (20), -0.07935 (20), -0.07842 (20), -0.07800 (20), -0.07799 (20), -0.07761 (20), -0.07679 (20), -0.07665 (20), -0.07626 (20), -0.07615 (20), -0.07604 (20), -0.07593 (20), -0.07561 (20), -0.07545 (20), -0.07536 (20), -0.07480 (20), -0.07469 (20), -0.07445 (20), 
Length of domains: 3612
Time: pickout 0.0494    decision 0.1349    set_bounds 0.0913    solve 0.6230    add 0.1691    
Accumulated time: pickout 0.2346    decision 0.4622    set_bounds 0.3076    solve 2.2475    add 0.9420    
Current (lb-rhs): -0.08176827430725098
8354 domains visited
Cumulative time: 4.321455478668213

BaB round 10
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 3612
splitting decisions: 
split level 0: [/input, 2935] [/input-8, 228] [/input, 2935] [/input, 1928] [/input, 2935] [/input-8, 228] [/input, 2935] [/input, 1928] [/input, 3028] [/input-8, 228] 
pruning_in_iteration open status: False
ratio of positive domain = 686 / 7224 = 0.09496124031007747
pruning-in-iteration extra time: 6.699562072753906e-05
Time: prepare 0.1971    bound 0.3379    transfer 0.0471    finalize 0.0486    func 0.6324    
Accumulated time: func 2.8764    prepare 0.4767    bound 1.8160    transfer 0.2092    finalize 0.3740    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08100 (21), -0.07965 (21), -0.07900 (21), -0.07857 (21), -0.07765 (21), -0.07722 (21), -0.07720 (21), -0.07683 (21), -0.07602 (21), -0.07585 (21), -0.07548 (21), -0.07538 (21), -0.07525 (21), -0.07513 (21), -0.07480 (21), -0.07467 (21), -0.07458 (21), -0.07402 (21), -0.07390 (21), -0.07367 (21), 
Length of domains: 6510
Time: pickout 0.0935    decision 0.2190    set_bounds 0.1508    solve 0.6337    add 0.1591    
Accumulated time: pickout 0.3281    decision 0.6812    set_bounds 0.4584    solve 2.8813    add 1.1011    
Current (lb-rhs): -0.08099532127380371
14864 domains visited
Cumulative time: 5.5943028926849365

BaB round 11
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input, 948] [/input, 948] [/input, 948] [/input, 2935] [/input, 1912] [/input, 1912] [/input, 948] 
pruning_in_iteration open status: False
ratio of positive domain = 554 / 8192 = 0.067626953125
pruning-in-iteration extra time: 5.984306335449219e-05
Time: prepare 0.2290    bound 0.3675    transfer 0.0482    finalize 0.0668    func 0.7123    
Accumulated time: func 3.5888    prepare 0.7059    bound 2.1835    transfer 0.2574    finalize 0.4408    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07965 (21), -0.07815 (22), -0.07765 (21), -0.07722 (21), -0.07616 (22), -0.07585 (21), -0.07573 (22), -0.07550 (22), -0.07548 (21), -0.07513 (21), -0.07480 (21), -0.07467 (21), -0.07435 (22), -0.07398 (22), -0.07390 (21), -0.07367 (22), -0.07346 (21), -0.07324 (21), -0.07318 (22), -0.07315 (21), 
Length of domains: 10033
Time: pickout 0.0815    decision 0.3925    set_bounds 0.1772    solve 0.7140    add 0.2156    
Accumulated time: pickout 0.4096    decision 1.0737    set_bounds 0.6356    solve 3.5953    add 1.3167    
Current (lb-rhs): -0.07964825630187988
22483 domains visited
current_vram/total_varm: 11.4GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.196009159088135

BaB round 12
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 8192
splitting decisions: 
split level 0: [/input, 2935] [/input-8, 1769] [/input, 2935] [/input-8, 1769] [/input, 2935] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input, 137] [/input, 901] 
pruning_in_iteration open status: False
ratio of positive domain = 1294 / 16384 = 0.0789794921875
pruning-in-iteration extra time: 0.00012993812561035156
Time: prepare 0.4368    bound 0.6903    transfer 0.0908    finalize 0.1358    func 1.3558    
Accumulated time: func 4.9446    prepare 1.1430    bound 2.8738    transfer 0.3482    finalize 0.5766    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07775 (22), -0.07666 (23), -0.07576 (22), -0.07533 (22), -0.07513 (21), -0.07480 (21), -0.07467 (23), -0.07446 (22), -0.07427 (23), -0.07395 (22), -0.07389 (23), -0.07376 (23), -0.07359 (22), -0.07346 (21), -0.07315 (21), -0.07307 (21), -0.07293 (21), -0.07286 (23), -0.07281 (22), -0.07274 (21), 
Length of domains: 16888
Time: pickout 0.1561    decision 0.6050    set_bounds 0.5141    solve 1.3591    add 0.2364    
Accumulated time: pickout 0.5657    decision 1.6787    set_bounds 1.1497    solve 4.9545    add 1.5532    
Current (lb-rhs): -0.07774949073791504
37530 domains visited
current_vram/total_varm: 19.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.100667238235474

BaB round 13
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 16384
splitting decisions: 
split level 0: [/input, 964] [/input-8, 1781] [/input-8, 1781] [/input, 3028] [/input, 1928] [/input-8, 2006] [/input-8, 1374] [/input, 3028] [/input, 1928] [/input-8, 1740] 
pruning_in_iteration open status: False
ratio of positive domain = 2846 / 32768 = 0.08685302734375
pruning-in-iteration extra time: 0.0002834796905517578
Time: prepare 0.8788    bound 1.3301    transfer 0.1780    finalize 0.4766    func 2.8659    
Accumulated time: func 7.8105    prepare 2.0222    bound 4.2039    transfer 0.5262    finalize 1.0532    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07491 (23), -0.07446 (24), -0.07315 (21), -0.07291 (23), -0.07274 (21), -0.07250 (23), -0.07227 (24), -0.07226 (23), -0.07213 (22), -0.07204 (24), -0.07193 (22), -0.07186 (24), -0.07166 (24), -0.07159 (23), -0.07152 (22), -0.07150 (22), -0.07145 (24), -0.07141 (21), -0.07111 (23), -0.07100 (21), 
Length of domains: 30310
Time: pickout 0.2963    decision 1.8658    set_bounds 0.8929    solve 2.8720    add 0.2405    
Accumulated time: pickout 0.8620    decision 3.5445    set_bounds 2.0426    solve 7.8265    add 1.7937    
Current (lb-rhs): -0.0749053955078125
67336 domains visited
current_vram/total_varm: 28.9GB/99.9GB, batch_size increase to 32768
Cumulative time: 16.315277576446533

BaB round 14
Matched cut cplex process, internal label idx = 5
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts: total 867 constraints, 25145 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2196
batch: 30310
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3028] [/input, 1928] [/input-8, 1740] [/input-8, 1374] [/input-8, 1740] [/input, 1928] [/input-8, 1740] [/input-8, 1374] [/input, 2935] [/input, 1928] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07272768020629883

all verified at 7th iter
pruning_in_iteration open status: True
ratio of positive domain = 60620 / 60620 = 1.0
pruning-in-iteration extra time: 0.0012440681457519531
Time: prepare 1.6660    bound 4.2203    transfer 0.3439    finalize 0.7608    func 7.3762    
Accumulated time: func 15.1867    prepare 3.6887    bound 8.4242    transfer 0.8701    finalize 1.8141    
all_split False
Length of domains: 0
Time: pickout 0.5560    decision 3.3412    set_bounds 1.6300    solve 7.7391    add 0.0254    
Accumulated time: pickout 1.4180    decision 6.8857    set_bounds 3.6726    solve 15.5656    add 1.8191    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
67336 domains visited
Cumulative time: 30.112552165985107

found process to kill: terminal indx = 5
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=162_spec=5_30642903.log
found process for pidx=5
kill process for pidx=5
Result: safe in 33.0074 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.72241402, -24.34649849, -23.13090515, -23.33512688, -23.44177818,
         -22.72599030, -24.29437256, -23.28028107, -25.88602257, -23.95406342]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [815]; unstable size 815; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 815] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 815] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 815] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 288] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.40899825, -1.25210905, -1.71175003, -1.47050428, -0.92382908,
         -2.03374100, -0.67183805,  0.06250143, -1.59028769]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.72241402, -24.34649849, -23.13090515, -23.33512688, -23.44177818,
         -22.72599030, -24.29437256, -23.28028107, -25.88602257, -23.95406342]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.72241211, -24.34649277, -23.13090134, -23.33512497, -23.44177628,
          -22.72598839, -24.29437065, -23.28027916, -25.88602257, -23.95405960],
         [-23.72241211, -24.34649277, -23.13090134, -23.33512497, -23.44177628,
          -22.72598839, -24.29437065, -23.28027916, -25.88602257, -23.95405960]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.44213295,  1.06621361, -0.14937782,  0.05484581,  0.16149712,
          -0.55429077,  1.01409149,  0.67378044]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         ...,


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0833 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.75207901, -26.19200516, -21.51674461, -21.03239250, -21.79173470,
         -19.86995125, -22.43434525, -21.71803665, -25.64961243, -25.42793655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [834]; unstable size 834; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 834] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 834] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 834] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 272] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.31165791, 4.29574919, 0.41222411, 0.84093678, 0.84679615, 1.26739883,
         0.78366590, 3.96632481, 3.82774282]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0668 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.22746849, -18.94099426, -15.30552959, -16.48309898, -16.57509995,
         -17.20245552, -18.03771782, -16.32104874, -17.03782463, -18.11646080]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [739]; unstable size 739; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 739] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 739] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 739] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 295] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56572270,  0.72621644, -1.85110521, -0.71412659, -0.72852206,
         -0.07062459,  0.71391749, -0.96604085,  0.12609494]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.22746849, -18.94099426, -15.30552959, -16.48309898, -16.57509995,
         -17.20245552, -18.03771782, -16.32104874, -17.03782463, -18.11646080]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.22747231, -18.94099617, -15.30552959, -16.48309898, -16.57509995,
          -17.20245552, -18.03771782, -16.32104874, -17.03782654, -18.11646080],
         [-17.22747231, -18.94099617, -15.30552959, -16.48309898, -16.57509995,
          -17.20245552, -18.03771782, -16.32104874, -17.03782654, -18.11646080]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.90642357, -1.01551914,  0.16205025,  0.25405121,  0.88140678,
           0.71677780]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0825 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.80888367, -17.65867996, -15.04872608, -14.86061478, -14.44957924,
         -15.80550385, -12.51641083, -16.93015480, -17.87636757, -16.77168083]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [527]; unstable size 527; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 300, 1, 527] with unstable size 299 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 527] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 527] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [299]; unstable size 299; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 299] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 299] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.97510815, 3.01688433, 0.83104944, 0.91215861, 0.13671160, 1.58025682,
         1.78175306, 2.71599150, 2.04945302]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.61078835, -21.87978363, -18.13955688, -19.07592964, -19.79349327,
         -19.61386681, -20.54054451, -20.75547600, -18.17226410, -21.24487877]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [616]; unstable size 616; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 616] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 616] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 616] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 263] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55854034, -0.58302021, -0.01108980,  0.84704137,  0.37303162,
          1.41230452,  1.42802823, -0.66239893,  1.97629523]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.61078835, -21.87978363, -18.13955688, -19.07592964, -19.79349327,
         -19.61386681, -20.54054451, -20.75547600, -18.17226410, -21.24487877]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.57255936, -22.56895828, -19.07548141, -19.82130051, -20.70000648,
          -20.37550545, -21.28920364, -21.48766518, -18.55050659, -21.83143806],
         [-18.57255936, -22.56895828, -19.07548141, -19.82130051, -20.70000648,
          -20.37550545, -21.28920364, -21.48766518, -18.55050659, -21.83143806]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.50292206,  1.24874115, -0.02205276]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0729 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.20258904, -28.97587204, -21.97974777, -26.12151527, -22.80328751,
         -24.79159355, -26.35929489, -25.88696289, -29.32278824, -27.97410202]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 81, 1, 659] with unstable size 80 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 659] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [80]; unstable size 80; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 80] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 80] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.61785388, 5.97946167, 3.68134069, 0.37307781, 2.26610613, 3.72874069,
         3.38983059, 6.45273161, 5.22464848]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0632 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.22389221, -25.61617279, -20.58332062, -23.34521294, -20.21918297,
         -23.68240929, -23.30189896, -22.01793289, -23.25316620, -24.99141312]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [521]; unstable size 521; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 521] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 521] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 521] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 193] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86727238,  3.52099228, -0.37071085,  2.10049105,  2.35707188,
          2.03269434,  1.03111446,  1.52145696,  3.31146646]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.22389221, -25.61617279, -20.58332062, -23.34521294, -20.21918297,
         -23.68240929, -23.30189896, -22.01793289, -23.25316620, -24.99141312]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.60668755, -25.99244308, -20.82368469, -23.81765366, -20.92040062,
          -24.20704651, -23.65490341, -22.70611763, -23.60986900, -25.38462639]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.09671593]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0767 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.96089172, -27.30179405, -18.06871414, -21.83080864, -18.06796074,
         -20.49729729, -22.39441490, -20.41414833, -26.60469437, -25.81503868]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [620]; unstable size 620; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 620] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 620] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 620] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 180] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.75783086,  7.53109550, -0.86600566,  3.01546717,  1.56956518,
          3.31403351,  1.72679353,  7.39529562,  6.39896202]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.96089172, -27.30179405, -18.06871414, -21.83080864, -18.06796074,
         -20.49729729, -22.39441490, -20.41414833, -26.60469437, -25.81503868]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.92412376, -27.24312210, -18.04008102, -21.79802132, -18.04256248,
          -20.46615982, -22.35789490, -20.38110733, -26.56587219, -25.76387596]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00248146]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0040 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0702 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.76115799, -29.22484970, -26.75863647, -27.30132103, -27.79590416,
         -27.84509468, -25.49637985, -28.66069603, -31.11473465, -27.50533867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [617]; unstable size 617; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 617] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 617] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 617] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 213] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.97265637, 2.28189564, 0.24724352, 0.96132314, 1.16451287, 1.43096900,
         1.79910445, 3.81141281, 0.72075975]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0619 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
         -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [854]; unstable size 854; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 854] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 854] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 854] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 206] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.99029899,  0.58493626,  2.75045824,  0.33922184,  3.42682910,
          3.47799587,  2.48518991, -0.45412570,  3.58810210]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
         -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.94it/s]100%|██████████| 1/1 [00:00<00:00,  8.93it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.23924446, -26.22811508, -23.77366066, -25.95787048, -23.63902664,
          -26.79361343, -27.03306580, -26.44617844, -22.26940155, -26.84331894]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.03015709]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1145 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.763309478759766
alpha/beta optimization time: 1.256615400314331
initial alpha-crown bounds: tensor([[ 3.05976844,  0.63149065,  2.80625129,  0.39776409,  3.48817921,
          3.54835081,  2.58086824, -0.39641112,  3.64704728]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.39641112089157104
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6722 seconds.
lower bounds for all target labels: [3.0597684383392334, 0.6314906477928162, 2.806251287460327, 0.39776408672332764, 3.488178253173828, 3.5483508110046387, 2.5808682441711426, -0.39641112089157104, 3.647047281265259]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [7]
start creating model mps for candidates: ['lay/16_7']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 20959 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.47650790214539
Verifying property 0 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.647047281265259.

Properties batch 1, size 1
Remaining timeout: 198.28994917869568
Verifying property 1 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5483508110046387.

Properties batch 2, size 1
Remaining timeout: 198.17563796043396
Verifying property 2 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4881792068481445.

Properties batch 3, size 1
Remaining timeout: 198.0627932548523
Verifying property 3 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0597684383392334.

Properties batch 4, size 1
Remaining timeout: 197.94315791130066
Verifying property 4 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.806251287460327.

Properties batch 5, size 1
Remaining timeout: 197.82850217819214
Verifying property 5 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5808682441711426.

Properties batch 6, size 1
Remaining timeout: 197.71531772613525
Verifying property 6 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6314906477928162.

Properties batch 7, size 1
Remaining timeout: 197.60237646102905
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.39776408672332764.

Properties batch 8, size 1
Remaining timeout: 197.49173760414124
Verifying property 8 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39641112]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
        -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39641112]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 854
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 201
Node /15 input 0: size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1080
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007975101470947266
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 0] 
split level 4: [/input-8, 819] 
split level 5: [/input-8, 818] 
split level 6: [/input-8, 1334] 
split level 7: [/input-8, 500] 
pruning_in_iteration open status: True
ratio of positive domain = 138 / 256 = 0.5390625
pruning-in-iteration extra time: 0.004693746566772461
Time: prepare 0.0031    bound 0.1323    transfer 0.0042    finalize 0.0018    func 0.1415    
Accumulated time: func 0.1415    prepare 0.0036    bound 0.1323    transfer 0.0042    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18666 (8), -0.18569 (8), -0.17575 (8), -0.17343 (8), -0.17246 (8), -0.17151 (8), -0.16767 (8), -0.16393 (8), -0.16310 (8), -0.16166 (8), -0.15594 (8), -0.15348 (8), -0.15303 (8), -0.15299 (8), -0.14840 (8), -0.14811 (8), -0.14649 (8), -0.14467 (8), -0.14327 (8), -0.14058 (8), 
Length of domains: 118
Time: pickout 0.0012    decision 0.0276    set_bounds 0.0220    solve 0.1415    add 0.0822    
Accumulated time: pickout 0.0012    decision 0.0276    set_bounds 0.0220    solve 0.1415    add 0.0822    
Current (lb-rhs): -0.18666240572929382
118 domains visited
Cumulative time: 0.2878568172454834

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 118
splitting decisions: 
split level 0: [/input, 2938] [/input-8, 157] [/input-8, 817] [/input-8, 817] [/input-8, 1399] [/input-8, 1399] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] 
pruning_in_iteration open status: False
ratio of positive domain = 18 / 236 = 0.07627118644067798
pruning-in-iteration extra time: 7.486343383789062e-05
Time: prepare 0.0050    bound 0.1012    transfer 0.0092    finalize 0.0028    func 0.1183    
Accumulated time: func 0.2598    prepare 0.0088    bound 0.2335    transfer 0.0135    finalize 0.0046    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18238 (9), -0.18168 (9), -0.17103 (9), -0.16902 (9), -0.16812 (9), -0.16741 (9), -0.16341 (9), -0.15897 (9), -0.15873 (9), -0.15694 (9), -0.15536 (9), -0.15154 (9), -0.15001 (9), -0.14851 (9), -0.14844 (9), -0.14720 (9), -0.14401 (9), -0.14373 (9), -0.14369 (9), -0.14227 (9), 
Length of domains: 218
Time: pickout 0.0148    decision 0.0257    set_bounds 0.0057    solve 0.1184    add 0.0829    
Accumulated time: pickout 0.0160    decision 0.0533    set_bounds 0.0277    solve 0.2599    add 0.1652    
Current (lb-rhs): -0.18238255381584167
336 domains visited
Cumulative time: 0.5439903736114502

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 218
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 1516] [/input-8, 1715] [/input-8, 1715] [/input-8, 157] [/input-8, 1661] [/input-8, 1715] [/input-12, 20] [/input-8, 1715] [/input-8, 817] 
pruning_in_iteration open status: False
ratio of positive domain = 70 / 436 = 0.16055045871559637
pruning-in-iteration extra time: 5.2928924560546875e-05
Time: prepare 0.0092    bound 0.0975    transfer 0.0116    finalize 0.0058    func 0.1241    
Accumulated time: func 0.3839    prepare 0.0182    bound 0.3310    transfer 0.0251    finalize 0.0104    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17975 (10), -0.17914 (10), -0.16821 (10), -0.16627 (10), -0.16536 (10), -0.16474 (10), -0.15820 (10), -0.15615 (10), -0.15423 (10), -0.15408 (10), -0.15214 (10), -0.14764 (10), -0.14669 (10), -0.14666 (10), -0.14419 (10), -0.14342 (10), -0.14308 (10), -0.14263 (10), -0.14061 (10), -0.13968 (10), 
Length of domains: 365
Time: pickout 0.0158    decision 0.0322    set_bounds 0.0100    solve 0.1242    add 0.0926    
Accumulated time: pickout 0.0318    decision 0.0855    set_bounds 0.0378    solve 0.3841    add 0.2578    
Current (lb-rhs): -0.17974728345870972
701 domains visited
Cumulative time: 0.8264119625091553

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 365
splitting decisions: 
split level 0: [/input-8, 1661] [/input-8, 1399] [/input, 3521] [/input-12, 64] [/input-8, 1661] [/input-8, 1516] [/input, 3521] [/input-8, 1516] [/input, 3521] [/input-8, 1661] 
pruning_in_iteration open status: False
ratio of positive domain = 139 / 730 = 0.19041095890410964
pruning-in-iteration extra time: 7.677078247070312e-05
Time: prepare 0.0162    bound 0.1025    transfer 0.0161    finalize 0.0084    func 0.1441    
Accumulated time: func 0.5280    prepare 0.0346    bound 0.4334    transfer 0.0412    finalize 0.0187    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17588 (11), -0.17508 (11), -0.16439 (11), -0.16244 (11), -0.16146 (11), -0.16092 (11), -0.16066 (11), -0.15992 (11), -0.15564 (11), -0.15233 (11), -0.15152 (11), -0.15038 (11), -0.15010 (11), -0.14768 (11), -0.14744 (11), -0.14649 (11), -0.14549 (11), -0.14481 (11), -0.14412 (11), -0.14220 (11), 
Length of domains: 586
Time: pickout 0.0202    decision 0.0363    set_bounds 0.0172    solve 0.1443    add 0.0937    
Accumulated time: pickout 0.0520    decision 0.1218    set_bounds 0.0549    solve 0.5284    add 0.3515    
Current (lb-rhs): -0.17587734758853912
1287 domains visited
Cumulative time: 1.1454851627349854

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 586
splitting decisions: 
split level 0: [/input-8, 1661] [/input, 2938] [/input-8, 1174] [/input-8, 157] [/input, 2938] [/input-8, 157] [/input-8, 1661] [/input, 2938] [/input-8, 498] [/input-8, 1174] 
pruning_in_iteration open status: False
ratio of positive domain = 213 / 1172 = 0.18174061433447097
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0260    bound 0.1165    transfer 0.0220    finalize 0.0101    func 0.1747    
Accumulated time: func 0.7027    prepare 0.0609    bound 0.5499    transfer 0.0632    finalize 0.0288    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17302 (12), -0.17217 (12), -0.16149 (12), -0.15951 (12), -0.15857 (12), -0.15771 (12), -0.15708 (12), -0.15606 (12), -0.15270 (12), -0.14937 (12), -0.14860 (12), -0.14739 (12), -0.14655 (12), -0.14446 (12), -0.14386 (12), -0.14262 (12), -0.14160 (12), -0.14159 (12), -0.14111 (12), -0.13904 (12), 
Length of domains: 954
Time: pickout 0.0211    decision 0.0509    set_bounds 0.0272    solve 0.1749    add 0.1045    
Accumulated time: pickout 0.0731    decision 0.1727    set_bounds 0.0821    solve 0.7033    add 0.4560    
Current (lb-rhs): -0.17302384972572327
2241 domains visited
Cumulative time: 1.5333001613616943

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 954
splitting decisions: 
split level 0: [/input-8, 1065] [/input-8, 817] [/input-8, 1662] [/input-12, 64] [/input-8, 1662] [/input-8, 1715] [/input, 3521] [/input-8, 817] [/input-8, 1662] [/input-12, 64] 
pruning_in_iteration open status: False
ratio of positive domain = 341 / 1908 = 0.17872117400419285
pruning-in-iteration extra time: 8.726119995117188e-05
Time: prepare 0.0421    bound 0.1782    transfer 0.0372    finalize 0.0233    func 0.2811    
Accumulated time: func 0.9838    prepare 0.1033    bound 0.7281    transfer 0.1003    finalize 0.0521    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16931 (13), -0.16888 (13), -0.16755 (13), -0.16391 (13), -0.15734 (13), -0.15614 (13), -0.15602 (13), -0.15485 (13), -0.15393 (13), -0.15381 (13), -0.15261 (13), -0.15256 (13), -0.15250 (13), -0.15131 (13), -0.14966 (13), -0.14962 (13), -0.14946 (13), -0.14556 (13), -0.14548 (13), -0.14464 (13), 
Length of domains: 1558
Time: pickout 0.0354    decision 0.0701    set_bounds 0.0390    solve 0.2821    add 0.2433    
Accumulated time: pickout 0.1085    decision 0.2428    set_bounds 0.1212    solve 0.9855    add 0.6994    
Current (lb-rhs): -0.16931244730949402
3799 domains visited
Cumulative time: 2.2185683250427246

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 1558
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 1662] [/input-8, 1654] [/input-8, 748] [/input-8, 498] [/input, 2938] [/input-8, 1662] [/input-8, 1654] [/input-8, 157] [/input-8, 748] 
pruning_in_iteration open status: True
ratio of positive domain = 704 / 3116 = 0.2259306803594352
pruning-in-iteration extra time: 0.0016894340515136719
Time: prepare 0.0742    bound 0.2114    transfer 0.0499    finalize 0.0321    func 0.6515    
Accumulated time: func 1.6353    prepare 0.1777    bound 0.9396    transfer 0.1503    finalize 0.0842    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16666 (14), -0.16533 (14), -0.16516 (14), -0.16411 (14), -0.16384 (14), -0.16278 (14), -0.16216 (14), -0.15424 (14), -0.15392 (14), -0.15258 (14), -0.15198 (14), -0.15170 (14), -0.15158 (14), -0.15150 (14), -0.15065 (14), -0.15021 (14), -0.15018 (14), -0.15009 (14), -0.15004 (14), -0.14915 (14), 
Length of domains: 2412
Time: pickout 0.0444    decision 0.1080    set_bounds 0.0687    solve 0.6522    add 0.1095    
Accumulated time: pickout 0.1529    decision 0.3508    set_bounds 0.1899    solve 1.6376    add 0.8089    
Current (lb-rhs): -0.16666242480278015
6211 domains visited
Cumulative time: 3.217168092727661

BaB round 8
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 2412
splitting decisions: 
split level 0: [/input-8, 748] [/input, 3521] [/input-12, 64] [/input-8, 157] [/input-12, 64] [/input, 3521] [/input-12, 64] [/input-8, 748] [/input-12, 64] [/input-8, 498] 
pruning_in_iteration open status: True
ratio of positive domain = 1210 / 4824 = 0.2508291873963516
pruning-in-iteration extra time: 0.004445552825927734
Time: prepare 0.1265    bound 0.3351    transfer 0.0295    finalize 0.0390    func 0.5307    
Accumulated time: func 2.1660    prepare 0.3044    bound 1.2747    transfer 0.1798    finalize 0.1233    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16378 (15), -0.16247 (15), -0.16202 (15), -0.16123 (15), -0.16072 (15), -0.15992 (15), -0.15797 (15), -0.15770 (15), -0.15740 (15), -0.15666 (15), -0.15639 (15), -0.15608 (15), -0.15486 (15), -0.15358 (15), -0.15173 (15), -0.15041 (15), -0.14969 (15), -0.14968 (15), -0.14909 (15), -0.14884 (15), 
Length of domains: 3614
Time: pickout 0.0486    decision 0.1535    set_bounds 0.1047    solve 0.5321    add 0.1464    
Accumulated time: pickout 0.2015    decision 0.5043    set_bounds 0.2945    solve 2.1698    add 0.9552    
Current (lb-rhs): -0.16378360986709595
9825 domains visited
Cumulative time: 4.221547842025757

BaB round 9
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 3614
splitting decisions: 
split level 0: [/input-8, 498] [/input-8, 748] [/input-8, 748] [/input-8, 748] [/input-8, 498] [/input-8, 748] [/input-8, 817] [/input-12, 64] [/input-8, 498] [/input, 3521] 
pruning_in_iteration open status: True
ratio of positive domain = 1550 / 7228 = 0.21444382955174324
pruning-in-iteration extra time: 0.001608133316040039
Time: prepare 0.1790    bound 0.3480    transfer 0.0372    finalize 0.0484    func 0.6144    
Accumulated time: func 2.7804    prepare 0.4837    bound 1.6227    transfer 0.2170    finalize 0.1717    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16054 (16), -0.16012 (16), -0.15921 (16), -0.15895 (16), -0.15879 (16), -0.15818 (16), -0.15759 (16), -0.15687 (16), -0.15606 (16), -0.15565 (16), -0.15509 (16), -0.15485 (16), -0.15473 (16), -0.15432 (16), -0.15377 (16), -0.15348 (16), -0.15157 (16), -0.15151 (16), -0.15026 (16), -0.15020 (16), 
Length of domains: 5678
Time: pickout 0.0673    decision 0.2199    set_bounds 0.2940    solve 0.6160    add 0.1660    
Accumulated time: pickout 0.2688    decision 0.7241    set_bounds 0.5886    solve 2.7858    add 1.1213    
Current (lb-rhs): -0.1605428159236908
15503 domains visited
Cumulative time: 5.610492467880249

BaB round 10
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0036
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1399] [/input-12, 64] [/input, 889] [/input-8, 498] [/input-12, 64] [/input-8, 747] [/input, 889] [/input-8, 157] [/input-8, 747] [/input-8, 748] 
pruning_in_iteration open status: True
ratio of positive domain = 1765 / 8192 = 0.2154541015625
pruning-in-iteration extra time: 0.0020470619201660156
Time: prepare 0.2124    bound 0.3832    transfer 0.0473    finalize 0.0647    func 0.7085    
Accumulated time: func 3.4889    prepare 0.6963    bound 2.0058    transfer 0.2643    finalize 0.2364    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15832 (17), -0.15759 (16), -0.15738 (17), -0.15699 (17), -0.15614 (17), -0.15603 (17), -0.15577 (17), -0.15544 (17), -0.15467 (17), -0.15444 (17), -0.15411 (17), -0.15382 (17), -0.15334 (17), -0.15286 (17), -0.15250 (17), -0.15151 (17), -0.15127 (17), -0.15106 (17), -0.15031 (17), -0.14997 (17), 
Length of domains: 8009
Time: pickout 0.0739    decision 0.3974    set_bounds 0.1724    solve 0.7107    add 0.1549    
Accumulated time: pickout 0.3427    decision 1.1215    set_bounds 0.7610    solve 3.4965    add 1.2762    
Current (lb-rhs): -0.1583186239004135
21930 domains visited
current_vram/total_varm: 38.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.144376754760742

BaB round 11
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 8009
splitting decisions: 
split level 0: [/input-8, 747] [/input-8, 747] [/input-12, 64] [/input-8, 747] [/input-8, 747] [/input-8, 1516] [/input-8, 747] [/input-8, 1516] [/input-8, 747] [/input-8, 747] 
pruning_in_iteration open status: False
ratio of positive domain = 2905 / 16018 = 0.18135847171931574
pruning-in-iteration extra time: 0.00014352798461914062
Time: prepare 0.4267    bound 0.6737    transfer 0.0916    finalize 0.1277    func 1.3221    
Accumulated time: func 4.8110    prepare 1.1233    bound 2.6795    transfer 0.3559    finalize 0.3641    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15560 (18), -0.15479 (17), -0.15425 (18), -0.15406 (18), -0.15304 (18), -0.15287 (18), -0.15281 (18), -0.15272 (18), -0.15176 (18), -0.15169 (18), -0.15160 (18), -0.15153 (18), -0.15131 (18), -0.15112 (18), -0.15072 (18), -0.15041 (18), -0.15014 (18), -0.14998 (18), -0.14977 (18), -0.14939 (18), 
Length of domains: 13076
Time: pickout 0.1332    decision 0.6290    set_bounds 0.5138    solve 1.3259    add 0.1718    
Accumulated time: pickout 0.4759    decision 1.7505    set_bounds 1.2748    solve 4.8224    add 1.4480    
Current (lb-rhs): -0.15559875965118408
35006 domains visited
Cumulative time: 9.952575445175171

BaB round 12
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1324] [/input-8, 1611] [/input-8, 748] [/input-8, 1174] [/input-8, 1516] [/input-8, 1399] [/input-8, 1324] [/input-12, 64] [/input-8, 1174] [/input-8, 1065] 
pruning_in_iteration open status: False
ratio of positive domain = 2801 / 16384 = 0.17095947265625
pruning-in-iteration extra time: 0.0001316070556640625
Time: prepare 0.4333    bound 0.6839    transfer 0.0930    finalize 0.1392    func 1.3509    
Accumulated time: func 6.1619    prepare 1.5570    bound 3.3634    transfer 0.4489    finalize 0.5032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15467 (19), -0.15332 (19), -0.15222 (19), -0.15160 (18), -0.15153 (18), -0.15143 (18), -0.15095 (19), -0.15088 (19), -0.15022 (18), -0.15019 (19), -0.15001 (19), -0.14994 (19), -0.14975 (19), -0.14922 (19), -0.14911 (19), -0.14885 (18), -0.14884 (19), -0.14881 (19), -0.14867 (19), -0.14862 (19), 
Length of domains: 18420
Time: pickout 0.1331    decision 0.6600    set_bounds 0.5669    solve 1.3546    add 0.2392    
Accumulated time: pickout 0.6090    decision 2.4105    set_bounds 1.8417    solve 6.1770    add 1.6872    
Current (lb-rhs): -0.15467025339603424
48542 domains visited
current_vram/total_varm: 38.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 12.944565296173096

BaB round 13
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 16384
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 748] [/input-8, 1114] [/input-12, 64] [/input-8, 747] [/input-8, 1114] [/input-12, 64] [/input, 3030] [/input-12, 64] [/input-12, 64] 
pruning_in_iteration open status: False
ratio of positive domain = 4979 / 32768 = 0.151947021484375
pruning-in-iteration extra time: 0.0002541542053222656
Time: prepare 1.0809    bound 1.3201    transfer 0.1811    finalize 0.2442    func 2.8285    
Accumulated time: func 8.9904    prepare 2.6383    bound 4.6836    transfer 0.6300    finalize 0.7474    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15099 (20), -0.15075 (20), -0.14994 (20), -0.14990 (19), -0.14964 (20), -0.14959 (19), -0.14946 (20), -0.14941 (20), -0.14860 (20), -0.14848 (20), -0.14817 (20), -0.14792 (20), -0.14791 (19), -0.14762 (20), -0.14728 (20), -0.14713 (20), -0.14707 (19), -0.14683 (20), -0.14656 (20), -0.14654 (19), 
Length of domains: 29703
Time: pickout 0.2653    decision 1.6760    set_bounds 0.9510    solve 2.8353    add 0.2349    
Accumulated time: pickout 0.8744    decision 4.0865    set_bounds 2.7927    solve 9.0123    add 1.9221    
Current (lb-rhs): -0.1509912610054016
76209 domains visited
current_vram/total_varm: 38.7GB/99.9GB, batch_size increase to 32768
Cumulative time: 18.980225801467896

BaB round 14
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts: total 481 constraints, 31391 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2702
batch: 29703
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1114] [/input-8, 1114] [/input, 889] [/input-8, 1114] [/input-8, 747] [/input-8, 1114] [/input-8, 1114] [/input-8, 747] [/input-8, 1114] [/input, 889] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14917631447315216
10 lb beta sum: 9.130752563476562, worst -0.10376688838005066
pruning_in_iteration open status: True
ratio of positive domain = 37441 / 59406 = 0.6302562030771303
pruning-in-iteration extra time: 0.005528688430786133
Time: prepare 1.5477    bound 7.6803    transfer 0.3366    finalize 0.4209    func 10.7784    
Accumulated time: func 19.7688    prepare 4.1864    bound 12.3639    transfer 0.9666    finalize 1.1684    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09358 (21), -0.09275 (20), -0.09170 (21), -0.09117 (20), -0.09114 (21), -0.09093 (21), -0.09075 (21), -0.09069 (21), -0.09031 (21), -0.09019 (21), -0.08990 (20), -0.08952 (20), -0.08947 (21), -0.08936 (21), -0.08936 (21), -0.08917 (21), -0.08882 (21), -0.08870 (21), -0.08861 (21), -0.08855 (21), 
Length of domains: 21965
Time: pickout 0.4839    decision 3.3547    set_bounds 2.0268    solve 10.7884    add 0.2446    
Accumulated time: pickout 1.3583    decision 7.4412    set_bounds 4.8195    solve 19.8007    add 2.1667    
Current (lb-rhs): -0.09358245134353638
98174 domains visited
Cumulative time: 36.39699649810791

BaB round 15
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts: total 1163 constraints, 56124 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4841
batch: 21965
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 748] [/input-8, 748] [/input-8, 748] [/input, 3537] [/input-8, 1516] [/input-8, 748] [/input-8, 498] [/input-8, 157] [/input, 3221] [/input-8, 748] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14783357083797455
10 lb beta sum: 8.146112442016602, worst -0.10347265005111694
pruning_in_iteration open status: False
ratio of positive domain = 6253 / 43930 = 0.14234008650125196
pruning-in-iteration extra time: 0.001039266586303711
Time: prepare 1.1480    bound 12.8193    transfer 0.2525    finalize 0.6571    func 15.1616    
Accumulated time: func 34.9304    prepare 5.3348    bound 25.1832    transfer 1.2191    finalize 1.8254    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08117 (22), -0.07992 (22), -0.07991 (22), -0.07991 (22), -0.07974 (22), -0.07940 (22), -0.07927 (22), -0.07865 (22), -0.07845 (22), -0.07843 (21), -0.07841 (22), -0.07781 (22), -0.07777 (21), -0.07749 (22), -0.07708 (22), -0.07690 (22), -0.07686 (22), -0.07684 (22), -0.07675 (22), -0.07671 (21), 
Length of domains: 30057
Time: pickout 0.3687    decision 2.2681    set_bounds 1.3018    solve 15.1703    add 0.2653    
Accumulated time: pickout 1.7269    decision 9.7092    set_bounds 6.1213    solve 34.9711    add 2.4320    
Current (lb-rhs): -0.08116850256919861
128231 domains visited
Cumulative time: 56.376190185546875

BaB round 16
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts: total 1266 constraints, 65669 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8224
batch: 30057
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 977] [/input, 977] [/input, 977] [/input, 977] [/input-8, 1516] [/input-8, 1516] [/input-8, 1516] [/input, 889] [/input-8, 1174] [/input-8, 1174] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1455666422843933
10 lb beta sum: 8.691012382507324, worst -0.10614016652107239
pruning_in_iteration open status: False
ratio of positive domain = 4623 / 60114 = 0.07690388262301628
pruning-in-iteration extra time: 0.0015232563018798828
Time: prepare 1.6252    bound 18.1717    transfer 0.3484    finalize 0.4544    func 21.4482    
Accumulated time: func 56.3786    prepare 6.9604    bound 43.3549    transfer 1.5675    finalize 2.2798    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07504 (23), -0.07484 (23), -0.07450 (23), -0.07446 (23), -0.07428 (23), -0.07397 (23), -0.07396 (23), -0.07389 (23), -0.07341 (23), -0.07334 (23), -0.07330 (23), -0.07326 (23), -0.07323 (23), -0.07317 (23), -0.07316 (22), -0.07307 (23), -0.07297 (23), -0.07297 (23), -0.07294 (22), -0.07290 (23), 
Length of domains: 48884
Time: pickout 0.4911    decision 3.0736    set_bounds 2.1170    solve 21.4591    add 0.4028    
Accumulated time: pickout 2.2181    decision 12.7829    set_bounds 8.2383    solve 56.4301    add 2.8348    
Current (lb-rhs): -0.0750366747379303
177115 domains visited
Cumulative time: 85.00529432296753

BaB round 17
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts: total 1345 constraints, 67371 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6391
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1169] [/input-8, 1661] [/input-8, 157] [/input-8, 1661] [/input-8, 1169] [/input-8, 1661] [/input-8, 157] [/input, 889] [/input-8, 1661] [/input-8, 1169] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14462794363498688
10 lb beta sum: 8.820149421691895, worst -0.098774254322052
pruning_in_iteration open status: False
ratio of positive domain = 5120 / 65536 = 0.078125
pruning-in-iteration extra time: 0.0017025470733642578
Time: prepare 1.7956    bound 25.8034    transfer 0.3708    finalize 1.1029    func 29.9789    
Accumulated time: func 86.3576    prepare 8.7566    bound 69.1583    transfer 1.9382    finalize 3.3827    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07450 (23), -0.07334 (23), -0.07330 (23), -0.07326 (23), -0.07307 (24), -0.07297 (23), -0.07294 (22), -0.07285 (24), -0.07283 (23), -0.07219 (23), -0.07215 (23), -0.07201 (24), -0.07182 (24), -0.07174 (24), -0.07135 (23), -0.07107 (24), -0.07106 (23), -0.07083 (23), -0.07082 (23), -0.07078 (24), 
Length of domains: 69350
Time: pickout 0.6556    decision 3.4594    set_bounds 2.0078    solve 29.9936    add 4.7995    
Accumulated time: pickout 2.8737    decision 16.2423    set_bounds 10.2461    solve 86.4237    add 7.6343    
Current (lb-rhs): -0.07449504733085632
230349 domains visited
Cumulative time: 126.75183486938477

BaB round 18
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts: total 1407 constraints, 69479 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6001
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 1169] [/input-8, 1169] [/input-8, 1322] [/input-8, 1661] [/input-8, 1661] [/input-8, 157] [/input-8, 747] [/input-8, 1169] [/input-8, 1169] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14099861681461334
10 lb beta sum: 8.870938301086426, worst -0.0990491509437561
pruning_in_iteration open status: False
ratio of positive domain = 4375 / 65536 = 0.0667572021484375
pruning-in-iteration extra time: 0.0017933845520019531
Time: prepare 1.7781    bound 26.2686    transfer 0.3642    finalize 0.5846    func 30.0779    
Accumulated time: func 116.4355    prepare 10.5352    bound 95.4269    transfer 2.3024    finalize 3.9673    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07450 (23), -0.07334 (23), -0.07330 (23), -0.07326 (23), -0.07297 (23), -0.07294 (22), -0.07283 (23), -0.07231 (25), -0.07215 (23), -0.07182 (24), -0.07135 (23), -0.07123 (25), -0.07107 (25), -0.07106 (23), -0.07083 (23), -0.07082 (23), -0.07078 (24), -0.07075 (25), -0.07069 (23), -0.07069 (22), 
Length of domains: 91172
Time: pickout 0.5455    decision 3.4782    set_bounds 2.0703    solve 30.0903    add 0.4298    
Accumulated time: pickout 3.4192    decision 19.7205    set_bounds 12.3164    solve 116.5140    add 8.0641    
Current (lb-rhs): -0.07449504733085632
284939 domains visited
Cumulative time: 164.1156895160675

BaB round 19
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts: total 1412 constraints, 69507 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5906
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1169] [/input-8, 497] [/input-8, 1661] [/input-8, 497] [/input-8, 1661] [/input-8, 497] [/input-8, 1662] [/input-8, 1654] [/input, 977] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1388881653547287
10 lb beta sum: 8.868437767028809, worst -0.0992794930934906
pruning_in_iteration open status: False
ratio of positive domain = 4355 / 65536 = 0.0664520263671875
pruning-in-iteration extra time: 0.0017542839050292969
Time: prepare 1.7897    bound 26.8561    transfer 0.3585    finalize 0.5927    func 30.0175    
Accumulated time: func 146.4530    prepare 12.3253    bound 122.2829    transfer 2.6609    finalize 4.5600    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07450 (23), -0.07334 (23), -0.07330 (23), -0.07326 (23), -0.07297 (23), -0.07294 (22), -0.07283 (23), -0.07231 (25), -0.07215 (23), -0.07182 (24), -0.07135 (23), -0.07106 (23), -0.07083 (23), -0.07082 (23), -0.07078 (24), -0.07073 (26), -0.07069 (23), -0.07069 (26), -0.07069 (22), -0.07050 (23), 
Length of domains: 111675
Time: pickout 0.5467    decision 3.6391    set_bounds 2.2135    solve 30.0348    add 0.3923    
Accumulated time: pickout 3.9659    decision 23.3596    set_bounds 14.5299    solve 146.5488    add 8.4565    
Current (lb-rhs): -0.07449504733085632
338210 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 7
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=172_spec=7_30646273.log
found process for pidx=7
kill process for pidx=7
Result: unknown in 205.1920 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.90053749, -18.83853912, -16.65795326, -15.93625736, -16.87875748,
         -16.65612221, -15.87883949, -18.48574829, -19.30859566, -18.32104874]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 775] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 775] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 291] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.07465279,  0.67120790, -0.69678235, -0.40189266,  0.40540996,
         -1.27040470,  0.91171992,  1.11740494,  0.40299439]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.90053749, -18.83853912, -16.65795326, -15.93625736, -16.87875748,
         -16.65612221, -15.87883949, -18.48574829, -19.30859566, -18.32104874]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.90053940, -18.83854103, -16.65795326, -15.93625832, -16.87875938,
          -16.65612030, -15.87884331, -18.48575401, -19.30859756, -18.32105255],
         [-17.90053940, -18.83854103, -16.65795326, -15.93625832, -16.87875938,
          -16.65612030, -15.87884331, -18.48575401, -19.30859756, -18.32105255]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.96428108,  0.72169495,  0.94250107, -0.05741501]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0664 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.01452446, -31.17614365, -24.06021309, -25.31211662, -23.70052147,
         -25.47224236, -25.36236954, -25.44280624, -27.95291138, -29.38704109]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [639]; unstable size 639; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 639] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 639] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 639] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 277] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.53353500,  4.77915525, -0.68763804,  0.12715697,  0.16958106,
          0.30826432,  0.61279362,  2.10399413,  3.39013577]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.01452446, -31.17614365, -24.06021309, -25.31211662, -23.70052147,
         -25.47224236, -25.36236954, -25.44280624, -27.95291138, -29.38704109]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.68732262, -30.89182281, -23.70902252, -25.04217339, -23.84836960,
          -25.24197197, -25.20918465, -25.61320114, -27.58542824, -29.12027931]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13934708]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0740 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.88498878, -31.32757950, -31.15767288, -32.62705231, -31.05282402,
         -32.13772202, -32.09079361, -30.79269218, -31.35886765, -30.31673813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [770]; unstable size 770; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 770] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 770] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 770] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 290] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78770685,  1.03243494,  1.96444654,  0.51057148,  1.33818650,
          1.22204268,  0.09967989,  0.93596298, -0.07644749]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.88498878, -31.32757950, -31.15767288, -32.62705231, -31.05282402,
         -32.13772202, -32.09079361, -30.79269218, -31.35886765, -30.31673813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.89it/s]100%|██████████| 1/1 [00:00<00:00,  8.89it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.32188988, -31.04412079, -31.53003311, -32.73807144, -31.28199005,
          -32.20188904, -32.30758286, -30.94975662, -31.54997253, -30.02898026]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.70709038]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1151 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 23th iter
best_l after optimization: 8.505001068115234
alpha/beta optimization time: 0.29546546936035156
initial alpha-crown bounds: tensor([[8.78651142e-01, 1.08035851e+00, 2.04135489e+00, 5.90096474e-01,
         1.42439270e+00, 1.30015886e+00, 2.00367510e-01, 9.89597201e-01,
         2.40802765e-05]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 2.4080276489257812e-05
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
verified with init bound!
Result: safe-incomplete in 0.5496 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.17542076, -27.76688576, -22.42221451, -23.23637009, -22.93698311,
         -23.34073257, -23.85361671, -24.75134850, -25.51817131, -27.31844711]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [710]; unstable size 710; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 710] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 710] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 710] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 187] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.05221015,  3.04186678, -1.68551731, -1.26099992, -0.22333616,
          0.06938851,  0.46372625,  0.85233951,  2.67835498]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.17542076, -27.76688576, -22.42221451, -23.23637009, -22.93698311,
         -23.34073257, -23.85361671, -24.75134850, -25.51817131, -27.31844711]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.17541504, -27.76688766, -22.42221451, -23.23637199, -22.93698311,
          -23.34073448, -23.85361481, -24.75134277, -25.51817131, -27.31844521],
         [-24.17541504, -27.76688766, -22.42221451, -23.23637199, -22.93698311,
          -23.34073448, -23.85361481, -24.75134277, -25.51817131, -27.31844521]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.81415749, -0.29938889,  0.10436249]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1067 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.55731201, -50.89083099, -42.06116486, -47.85534668, -48.62054062,
         -48.15819550, -49.32711411, -47.74969101, -49.46615982, -52.86323929]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [518]; unstable size 518; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 116, 1, 518] with unstable size 115 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 3, 1, 518] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 518] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [115]; unstable size 115; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 3, 1, 115] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.03215981, 7.96402073, 5.21769285, 5.94199753, 5.50237179, 6.70993805,
         5.09641933, 6.72968769, 9.94023228]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.28612328, -36.58068848, -28.50667953, -31.36640739, -29.10656929,
         -32.13262939, -33.39686966, -30.94572258, -36.68356323, -37.42233658]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [770]; unstable size 770; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 770] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 770] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 770] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 149] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.97211361, -0.64362025,  1.92279124, -0.18267322,  2.60485029,
          3.75918388,  1.37062311,  7.21187782,  7.83291006]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.28612328, -36.58068848, -28.50667953, -31.36640739, -29.10656929,
         -32.13262939, -33.39686966, -30.94572258, -36.68356323, -37.42233658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.55917931, -36.74974442, -28.28976250, -31.22921181, -28.91490173,
          -31.95692253, -33.20354462, -30.80590248, -36.83339310, -37.55273056],
         [-28.55917931, -36.74974442, -28.28976250, -31.22921181, -28.91490173,
          -31.95692253, -33.20354462, -30.80590248, -36.83339310, -37.55273056]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26941681,  0.35572243]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0075 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0779 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.31065178, -29.77011871, -24.73226166, -28.38901711, -26.21283531,
         -28.98853493, -28.51242447, -30.11011124, -25.90357208, -30.21725655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 606] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 606] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 204] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.38776445, 1.62000215, 4.98641109, 2.86554313, 5.48513126, 5.11340475,
         6.28316784, 2.58398414, 6.84431124]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0720 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.24666405, -28.76270676, -23.26070213, -22.05362892, -20.50691032,
         -21.35376549, -23.01077271, -17.43795013, -27.58108521, -26.06879044]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 274, 1, 599] with unstable size 273 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 599] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [273]; unstable size 273; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 273] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 273] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.87904930, 8.74207497, 3.91814947, 3.03320599, 2.01956177, 2.34560633,
         3.41726875, 7.67006588, 6.18134117]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0762 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
         -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [694]; unstable size 694; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 694] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 694] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 259] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.01481509,  2.06577063, -0.04681420,  1.60054755, -0.07306194,
          1.60960817,  2.27459693,  1.25393057,  2.08621788]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
         -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.8386 seconds.
lower bounds for all target labels: [0.8786511421203613, 1.0803461074829102, 2.0413548946380615, 0.5900964736938477, 1.4243927001953125, 1.3001588582992554, 0.2003675103187561, 0.9895972013473511, 2.4080276489257812e-05]
Number of cpus: 96  Number of subproblems: 0
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: []
start creating model mps for candidates: []
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.10068130, -18.15259743, -14.30123043, -16.10068130, -14.55102730,
          -16.18155861, -13.98995590, -17.08901596, -16.75013351, -17.94500923],
         [-17.10068130, -18.15259743, -14.30123043, -16.10068130, -14.55102730,
          -16.18155861, -13.98995590, -17.08901596, -16.75013351, -17.94500923]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31127453, 0.56107140]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1235 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.356431007385254
alpha/beta optimization time: 1.3118290901184082
initial alpha-crown bounds: tensor([[ 2.11682487,  2.15421104, -0.00883794,  1.63260913, -0.03195786,
          1.64549184,  2.32464242,  1.34506559,  2.17838240]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.03195786476135254
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.8540 seconds.
lower bounds for all target labels: [2.116824150085449, 2.1542110443115234, -0.00883936882019043, 1.6326076984405518, -0.03195786476135254, 1.645491600036621, 2.3246424198150635, 1.3450655937194824, 2.178382396697998]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 4]
start creating model mps for candidates: ['lay/16_2', 'lay/16_4']
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.38111639022827
Verifying property 0 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3246424198150635.

Properties batch 1, size 1
Remaining timeout: 198.14337801933289
Verifying property 1 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.178382396697998.

Properties batch 2, size 1
Remaining timeout: 197.9983630180359
Verifying property 2 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1542110443115234.

Properties batch 3, size 1
Remaining timeout: 197.8597388267517
Verifying property 3 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1168248653411865.

Properties batch 4, size 1
Remaining timeout: 197.72224473953247
Verifying property 4 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6454918384552002.

Properties batch 5, size 1
Remaining timeout: 197.58407521247864
Verifying property 5 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6326091289520264.

Properties batch 6, size 1
Remaining timeout: 197.44712281227112
Verifying property 6 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3450655937194824.

Properties batch 7, size 1
Remaining timeout: 197.28060746192932
Verifying property 7 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00883794]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
        -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00883794]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 694
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 964
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.001085042953491211
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 61] 
split level 3: [/input-8, 1635] 
split level 4: [/input-12, 92] 
split level 5: [/input-8, 924] 
split level 6: [/input-12, 50] 
split level 7: [/input-8, 1963] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.601478576660156e-05
Time: prepare 0.0033    bound 0.0050    transfer 0.0042    finalize 0.0032    func 0.0159    
Accumulated time: func 0.0159    prepare 0.0037    bound 0.0050    transfer 0.0042    finalize 0.0032    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0266    set_bounds 0.0226    solve 0.0160    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0266    set_bounds 0.0226    solve 0.0160    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07283163070678711


Properties batch 8, size 1
Remaining timeout: 196.8509283065796
Verifying property 8 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03195786]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
        -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03195786]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 694
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 964
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0005025863647460938
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 92] 
split level 6: [/input-8, 300] 
split level 7: [/input-8, 924] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.7206878662109375e-05
Time: prepare 0.0033    bound 0.0056    transfer 0.0041    finalize 0.0024    func 0.0155    
Accumulated time: func 0.0155    prepare 0.0038    bound 0.0056    transfer 0.0041    finalize 0.0024    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0258    set_bounds 0.0184    solve 0.0156    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0258    set_bounds 0.0184    solve 0.0156    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.08112215995788574

the mip building process is not terminated yet, kill it
Result: safe in 3.7653 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.90199280, -44.40210342, -40.76707840, -43.34727097, -43.50157547,
         -44.47279358, -43.63641739, -44.64598465, -42.91106033, -44.25598907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [505]; unstable size 505; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 505] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 505] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 505] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 148] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.55335212, 0.12430680, 2.72152352, 3.00824642, 3.66845274, 2.93544912,
         3.93169498, 2.25763488, 3.53325558]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0993 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.65114021, -23.35434914, -17.16299438, -18.00729561, -16.22119331,
         -18.46559906, -16.77936554, -19.72109604, -21.88067436, -23.28927422]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 507, 1, 818] with unstable size 506 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 818] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [506]; unstable size 506; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 506] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 506] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.09171438,  3.97727156, -0.48304796,  0.36927640,  0.67224592,
         -1.08889961,  1.76183915,  2.47835660,  4.03331804]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.65114021, -23.35434914, -17.16299438, -18.00729561, -16.22119331,
         -18.46559906, -16.77936554, -19.72109604, -21.88067436, -23.28927422]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.49226189, -24.11579704, -17.95343971, -18.81316757, -17.24596596,
          -19.31156349, -17.23511314, -20.87609863, -22.68005943, -24.09088707],
         [-21.49226189, -24.11579704, -17.95343971, -18.81316757, -17.24596596,
          -19.31156349, -17.23511314, -20.87609863, -22.68005943, -24.09088707]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.70747375, -0.01085281]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0085 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0935 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.96131706, -20.58467484, -24.37945938, -24.98764610, -24.46944046,
         -25.62986183, -27.33307266, -24.34143448, -19.32966995, -19.06360817]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [585]; unstable size 585; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 585] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 585] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 203] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81747293,  0.87446868,  3.82560587,  4.56164360,  3.79659176,
          5.13660049,  6.65209723,  3.81942439, -1.01505232]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.96131706, -20.58467484, -24.37945938, -24.98764610, -24.46944046,
         -25.62986183, -27.33307266, -24.34143448, -19.32966995, -19.06360817]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.03406334, -20.94075012, -24.42977524, -25.05561638, -24.49388504,
          -25.73678398, -27.41883087, -24.54652786, -19.08336639, -19.60690880]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.52354240]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0751 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
         -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 234, 1, 650] with unstable size 233 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 650] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [233]; unstable size 233; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 233] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 233] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.41751909,  0.11600953,  0.06584835,  0.44963455, -0.42950106,
          0.86466241, -0.55640650,  0.24044323,  2.07411909]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
         -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  6.70it/s]100%|██████████| 1/1 [00:00<00:00,  6.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.85554981, -12.92671013, -13.33337688, -13.57446003, -12.90406990,
          -14.12642193, -12.39564514, -13.78078556, -15.48109055, -12.06949711],
         [-15.85554981, -12.92671013, -13.33337688, -13.57446003, -12.90406990,
          -14.12642193, -12.39564514, -13.78078556, -15.48109055, -12.06949711]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.83457279, 0.32614803]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1525 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.902807712554932
alpha/beta optimization time: 1.3826093673706055
initial alpha-crown bounds: tensor([[ 2.50665379,  0.15565354,  0.15051460,  0.50773621, -0.35287619,
          0.92790318, -0.47352934,  0.32139492,  2.15935707]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4735293388366699
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6569 seconds.
lower bounds for all target labels: [2.50665283203125, 0.15565454959869385, 0.1505126953125, 0.5077347755432129, -0.3528752326965332, 0.9279019832611084, -0.4735274314880371, 0.3213920593261719, 2.159356117248535]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [4, 6]
start creating model mps for candidates: ['lay/16_4', 'lay/16_6']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.27282738685608
Verifying property 0 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5066537857055664.

Properties batch 1, size 1
Remaining timeout: 198.10404801368713
Verifying property 1 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1593570709228516.

Properties batch 2, size 1
Remaining timeout: 197.99642848968506
Verifying property 2 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9279031753540039.

Properties batch 3, size 1
Remaining timeout: 197.89167475700378
Verifying property 3 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5077362060546875.

Properties batch 4, size 1
Remaining timeout: 197.78826594352722
Verifying property 4 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3213949203491211.

Properties batch 5, size 1
Remaining timeout: 197.6857762336731
Verifying property 5 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15565353631973267.

Properties batch 6, size 1
Remaining timeout: 197.58124208450317
Verifying property 6 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1505146026611328.

Properties batch 7, size 1
Remaining timeout: 197.47326803207397
Verifying property 7 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35287619]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
        -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35287619]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 899
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008904933929443359
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 13] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 79] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.793571472167969e-05
Time: prepare 0.0020    bound 0.0058    transfer 0.0047    finalize 0.0042    func 0.0168    
Accumulated time: func 0.0168    prepare 0.0025    bound 0.0058    transfer 0.0047    finalize 0.0042    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0295    set_bounds 0.0220    solve 0.0169    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0295    set_bounds 0.0220    solve 0.0169    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0753166675567627


Properties batch 8, size 1
Remaining timeout: 197.20144367218018
Verifying property 8 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47352934]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
        -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47352934]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 899
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0003924369812011719
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 64] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 38] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 13] 
split level 5: [/input-12, 2] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 90] 
pruning_in_iteration open status: True
ratio of positive domain = 252 / 256 = 0.984375
pruning-in-iteration extra time: 0.004891395568847656
Time: prepare 0.0020    bound 0.1236    transfer 0.0009    finalize 0.0020    func 0.1286    
Accumulated time: func 0.1286    prepare 0.0025    bound 0.1236    transfer 0.0009    finalize 0.0020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03852 (8), -0.02850 (8), -0.00513 (8), -0.00417 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0238    set_bounds 0.0168    solve 0.1287    add 0.0256    
Accumulated time: pickout 0.0004    decision 0.0238    set_bounds 0.0168    solve 0.1287    add 0.0256    
Current (lb-rhs): -0.03851890563964844
4 domains visited
Cumulative time: 0.21137237548828125

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 4
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] 
split level 2: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-8, 1966] 
split level 3: [/input-12, 6] [/input-12, 6] [/input-8, 1693] [/input-12, 79] 
split level 4: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 6] 
split level 5: [/input-8, 1698] [/input-8, 1698] [/input-12, 6] [/input-12, 34] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.649162292480469e-05
Time: prepare 0.0053    bound 0.0043    transfer 0.0008    finalize 0.0018    func 0.0123    
Accumulated time: func 0.1409    prepare 0.0081    bound 0.1280    transfer 0.0017    finalize 0.0038    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0189    set_bounds 0.0160    solve 0.0123    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0427    set_bounds 0.0327    solve 0.1410    add 0.0257    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.2612450122833252

the mip building process is not terminated yet, kill it
Result: safe in 3.6094 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.58661270, -19.23237419, -17.80228806, -19.64345360, -18.73787880,
         -20.88980293, -20.24271202, -20.68834686, -12.61566162, -18.87177277]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 600] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 600] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 197] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94333220, 5.41133118, 3.87400508, 5.60846615, 4.71442080, 6.68207407,
         6.00083256, 6.36807251, 5.18235636]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0916 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
         -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1008]; unstable size 1008; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 327, 1, 1008] with unstable size 326 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 1008] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1008] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [326]; unstable size 326; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 326] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 326] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10357320,  2.68191552, -0.13346767, -0.21289158, -0.43652606,
          0.26639271,  0.25994682,  0.99712372,  1.33664036]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
         -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.06it/s]100%|██████████| 1/1 [00:00<00:00,  8.05it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.90679932, -26.33594704, -23.54216766, -23.43782616, -23.36010551,
          -24.09189796, -24.27123070, -25.13907433, -22.15769386, -24.83020782],
         [-22.90679932, -26.33594704, -23.54216766, -23.43782616, -23.36010551,
          -24.09189796, -24.27123070, -25.13907433, -22.15769386, -24.83020782]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.74910545, 1.38447380, 1.28013229, 1.20241165]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1276 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.630867958068848
alpha/beta optimization time: 1.267195463180542
initial alpha-crown bounds: tensor([[-0.02824795,  2.79288292, -0.02322006, -0.12002277, -0.32431364,
          0.37612629,  0.35790396,  1.15994859,  1.43981028]], device='cuda:0')
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.3243136405944824
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6618 seconds.
lower bounds for all target labels: [-0.02824866771697998, 2.7928829193115234, -0.023221492767333984, -0.12002277374267578, -0.3243136405944824, 0.3761262893676758, 0.35790348052978516, 1.1599485874176025, 1.4398102760314941]
Number of cpus: 96  Number of subproblems: 4
Reassign each subproblems with number of thread: 24
Starting MIP solver for these labels: [0, 2, 3, 4]
start creating model mps for candidates: ['lay/16_0', 'lay/16_2', 'lay/16_3', 'lay/16_4']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.43655276298523
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7928829193115234.

Properties batch 1, size 1
Remaining timeout: 198.25554156303406
Verifying property 1 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4398102760314941.

Properties batch 2, size 1
Remaining timeout: 198.1719000339508
Verifying property 2 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1599485874176025.

Properties batch 3, size 1
Remaining timeout: 198.08900785446167
Verifying property 3 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3761262893676758.

Properties batch 4, size 1
Remaining timeout: 198.0081844329834
Verifying property 4 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.35790395736694336.

Properties batch 5, size 1
Remaining timeout: 197.92488074302673
Verifying property 5 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02322006]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02322006]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010933876037597656
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 32] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 79] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.2928924560546875e-05
Time: prepare 0.0020    bound 0.0051    transfer 0.0045    finalize 0.0038    func 0.0155    
Accumulated time: func 0.0155    prepare 0.0024    bound 0.0051    transfer 0.0045    finalize 0.0038    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0270    set_bounds 0.0199    solve 0.0156    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0270    set_bounds 0.0199    solve 0.0156    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06945347785949707


Properties batch 6, size 1
Remaining timeout: 197.69626641273499
Verifying property 6 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02824795]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02824795]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0003097057342529297
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 32] 
split level 1: [/input-12, 69] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.4345855712890625e-05
Time: prepare 0.0019    bound 0.0043    transfer 0.0006    finalize 0.0017    func 0.0085    
Accumulated time: func 0.0085    prepare 0.0023    bound 0.0043    transfer 0.0006    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0235    set_bounds 0.0162    solve 0.0086    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0235    set_bounds 0.0162    solve 0.0086    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.054345130920410156


Properties batch 7, size 1
Remaining timeout: 197.42201042175293
Verifying property 7 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12002277]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12002277]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0003058910369873047
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 46] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.8160552978515625e-05
Time: prepare 0.0019    bound 0.0044    transfer 0.0006    finalize 0.0017    func 0.0085    
Accumulated time: func 0.0085    prepare 0.0023    bound 0.0044    transfer 0.0006    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0163    solve 0.0086    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0163    solve 0.0086    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.053672075271606445


Properties batch 8, size 1
Remaining timeout: 197.21310687065125
Verifying property 8 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32431364]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32431364]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0004284381866455078
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 2] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 79] 
split level 7: [/input-12, 67] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.887580871582031e-05
Time: prepare 0.0023    bound 0.0053    transfer 0.0006    finalize 0.0018    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0027    bound 0.0053    transfer 0.0006    finalize 0.0018    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0241    set_bounds 0.0204    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0241    set_bounds 0.0204    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06055855751037598

the mip building process is not terminated yet, kill it
Result: safe in 3.2686 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.53459740, -20.49768829, -16.34491158, -18.79847145, -17.40628815,
         -19.14499092, -17.82529068, -20.38037872, -18.29029465, -19.59790993]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 480] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 480] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 238] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.72171783,  2.40926838,  1.62155747,  0.22273906,  1.79393625,
          0.73343152,  2.65353560,  0.41378760,  1.72563457]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.53459740, -20.49768829, -16.34491158, -18.79847145, -17.40628815,
         -19.14499092, -17.82529068, -20.38037872, -18.29029465, -19.59790993]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.62766075, -20.75717163, -16.98099899, -19.26163292, -17.93272972,
          -19.65863228, -18.31613541, -20.94865799, -18.39900589, -19.90797234]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.35333824]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0090 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0642 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
         -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [516]; unstable size 516; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 516] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 516] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 516] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 215] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.92542017,  3.79097676, -0.20490730,  0.89167619,  1.22881341,
         -0.10279536,  2.61780787,  4.21574497,  3.57154131]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
         -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]100%|██████████| 1/1 [00:00<00:00,  8.29it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.19852066, -17.88059044, -12.53122139, -14.11621094, -12.22916889,
          -14.50160503, -13.17019653, -15.71894741, -18.11811638, -17.10788155],
         [-15.19852066, -17.88059044, -12.53122139, -14.11621094, -12.22916889,
          -14.50160503, -13.17019653, -15.71894741, -18.11811638, -17.10788155]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.30205250, 0.94102764]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1235 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.44194793701172
alpha/beta optimization time: 1.31302809715271
initial alpha-crown bounds: tensor([[ 1.97218525,  3.86037421, -0.17338037,  0.95068479,  1.30200815,
         -0.04648709,  2.66390991,  4.29102278,  3.62163019]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.17338037490844727
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6452 seconds.
lower bounds for all target labels: [1.9721840620040894, 3.860372543334961, -0.17338156700134277, 0.9506849050521851, 1.3020071983337402, -0.04648721218109131, 2.663907766342163, 4.291023254394531, 3.621629476547241]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 5]
start creating model mps for candidates: ['lay/16_2', 'lay/16_5']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.43698930740356
Verifying property 0 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.291022777557373.

Properties batch 1, size 1
Remaining timeout: 198.2300009727478
Verifying property 1 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8603742122650146.

Properties batch 2, size 1
Remaining timeout: 198.1254906654358
Verifying property 2 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6216301918029785.

Properties batch 3, size 1
Remaining timeout: 198.02270412445068
Verifying property 3 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.663909912109375.

Properties batch 4, size 1
Remaining timeout: 197.91906070709229
Verifying property 4 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9721852540969849.

Properties batch 5, size 1
Remaining timeout: 197.815660238266
Verifying property 5 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3020081520080566.

Properties batch 6, size 1
Remaining timeout: 197.71370148658752
Verifying property 6 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9506847858428955.

Properties batch 7, size 1
Remaining timeout: 197.60853552818298
Verifying property 7 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04648709]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
        -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04648709]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 516
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 211
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 750
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0005593299865722656
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 49] 
split level 1: [/input-12, 42] 
split level 2: [/input-12, 18] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 38] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 57] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.6253204345703125e-05
Time: prepare 0.0019    bound 0.0049    transfer 0.0095    finalize 0.0038    func 0.0202    
Accumulated time: func 0.0202    prepare 0.0024    bound 0.0049    transfer 0.0095    finalize 0.0038    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0277    set_bounds 0.0207    solve 0.0203    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0277    set_bounds 0.0207    solve 0.0203    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07494044303894043


Properties batch 8, size 1
Remaining timeout: 197.3475580215454
Verifying property 8 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17338037]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
        -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17338037]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 516
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 211
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 750
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0003159046173095703
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 18] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 38] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.100799560546875e-05
Time: prepare 0.0018    bound 0.0042    transfer 0.0007    finalize 0.0015    func 0.0084    
Accumulated time: func 0.0084    prepare 0.0022    bound 0.0042    transfer 0.0007    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0161    solve 0.0085    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0161    solve 0.0085    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052763938903808594

the mip building process is not terminated yet, kill it
Result: safe in 3.1738 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.31871891, -18.47064972, -19.12639618, -20.47543144, -18.57441521,
         -21.48938560, -20.72224808, -20.14287567, -13.06752682, -17.90552711]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [738]; unstable size 738; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 738] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 738] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 738] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 239] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.85416585, 3.53390479, 4.32532692, 5.85610485, 3.81353617, 6.73792934,
         5.85599041, 5.13794899, 3.02939749]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0747 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
         -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 646] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 646] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 297] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.24239588,  5.63601112,  0.64621496, -0.16879272, -0.18126956,
          1.30519700,  1.09948552,  4.69383430,  5.11891747]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
         -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.27it/s]100%|██████████| 1/1 [00:00<00:00,  7.26it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.65370750, -26.69187355, -20.58222389, -18.71725845, -19.69344902,
          -18.75181198, -21.41026688, -21.15042114, -25.32792473, -26.05254555],
         [-24.65370750, -26.69187355, -20.58222389, -18.71725845, -19.69344902,
          -18.75181198, -21.41026688, -21.15042114, -25.32792473, -26.05254555]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.97619057, 0.03455353]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1413 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.097370147705078
alpha/beta optimization time: 1.4503693580627441
initial alpha-crown bounds: tensor([[ 4.31553078,  5.74813271,  0.69852734, -0.09507775, -0.16205455,
          1.35331464,  1.20960498,  4.79450512,  5.23488569]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.16205455362796783
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6519 seconds.
lower bounds for all target labels: [4.315530776977539, 5.748132705688477, 0.6985273361206055, -0.0950777530670166, -0.16205470263957977, 1.3533146381378174, 1.2096049785614014, 4.7945051193237305, 5.2348856925964355]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [3, 4]
start creating model mps for candidates: ['lay/16_3', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=3_30668371.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=3_30668371.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 23697 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 23700 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.2416546344757
Verifying property 0 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.748132705688477.

Properties batch 1, size 1
Remaining timeout: 198.04888772964478
Verifying property 1 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.2348856925964355.

Properties batch 2, size 1
Remaining timeout: 197.9414610862732
Verifying property 2 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.7945051193237305.

Properties batch 3, size 1
Remaining timeout: 197.83436369895935
Verifying property 3 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.315530776977539.

Properties batch 4, size 1
Remaining timeout: 197.72995114326477
Verifying property 4 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3533146381378174.

Properties batch 5, size 1
Remaining timeout: 197.62490582466125
Verifying property 5 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2096049785614014.

Properties batch 6, size 1
Remaining timeout: 197.51748967170715
Verifying property 6 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6985273361206055.

Properties batch 7, size 1
Remaining timeout: 197.40334224700928
Verifying property 7 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09507775]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
        -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09507775]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 960
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008749961853027344
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 56] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 83] 
split level 7: [/input-12, 79] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.887580871582031e-05
Time: prepare 0.0019    bound 0.0050    transfer 0.0047    finalize 0.0048    func 0.0165    
Accumulated time: func 0.0165    prepare 0.0024    bound 0.0050    transfer 0.0047    finalize 0.0048    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0282    set_bounds 0.0191    solve 0.0166    add 0.0001    
Accumulated time: pickout 0.0008    decision 0.0282    set_bounds 0.0191    solve 0.0166    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07063841819763184


Properties batch 8, size 1
Remaining timeout: 197.13104271888733
Verifying property 8 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16205455]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
        -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16205455]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 960
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0002014636993408203
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 68] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 17] 
split level 7: [/input-8, 868] 
pruning_in_iteration open status: True
ratio of positive domain = 228 / 256 = 0.890625
pruning-in-iteration extra time: 0.004833221435546875
Time: prepare 0.0032    bound 0.1225    transfer 0.0009    finalize 0.0015    func 0.1281    
Accumulated time: func 0.1281    prepare 0.0036    bound 0.1225    transfer 0.0009    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07009 (8), -0.06937 (8), -0.06603 (8), -0.06577 (8), -0.06351 (8), -0.06287 (8), -0.05986 (8), -0.05899 (8), -0.05829 (8), -0.05374 (8), -0.05323 (8), -0.04902 (8), -0.04466 (8), -0.04156 (8), -0.04033 (8), -0.03732 (8), -0.02156 (8), -0.01919 (8), -0.01829 (8), -0.01710 (8), 
Length of domains: 28
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0173    solve 0.1282    add 0.0550    
Accumulated time: pickout 0.0004    decision 0.0223    set_bounds 0.0173    solve 0.1282    add 0.0550    
Current (lb-rhs): -0.07008673250675201
28 domains visited
Cumulative time: 0.23442554473876953

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 28
splitting decisions: 
split level 0: [/input-8, 909] [/input-8, 1052] [/input-8, 860] [/input-8, 869] [/input-8, 1052] [/input-8, 860] [/input-8, 909] [/input-8, 860] [/input-8, 909] [/input-8, 860] 
split level 1: [/input-8, 869] [/input-8, 869] [/input-8, 1052] [/input-8, 1052] [/input-8, 869] [/input-8, 1052] [/input-8, 869] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] 
split level 2: [/input-8, 1052] [/input-8, 860] [/input-8, 1748] [/input-8, 860] [/input-8, 860] [/input-8, 861] [/input-8, 1052] [/input-8, 861] [/input-8, 869] [/input-8, 861] 
pruning_in_iteration open status: False
ratio of positive domain = 32 / 224 = 0.1428571428571429
pruning-in-iteration extra time: 5.125999450683594e-05
Time: prepare 0.0044    bound 0.0931    transfer 0.0067    finalize 0.0018    func 0.1060    
Accumulated time: func 0.2341    prepare 0.0082    bound 0.2156    transfer 0.0075    finalize 0.0033    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06049 (11), -0.06041 (11), -0.06002 (11), -0.05931 (11), -0.05704 (11), -0.05699 (11), -0.05691 (11), -0.05623 (11), -0.05592 (11), -0.05577 (11), -0.05529 (11), -0.05489 (11), -0.05484 (11), -0.05469 (11), -0.05437 (11), -0.05423 (11), -0.05406 (11), -0.05369 (11), -0.05330 (11), -0.05327 (11), 
Length of domains: 192
Time: pickout 0.0070    decision 0.0163    set_bounds 0.0076    solve 0.1061    add 0.0787    
Accumulated time: pickout 0.0074    decision 0.0386    set_bounds 0.0248    solve 0.2343    add 0.1337    
Current (lb-rhs): -0.06048625707626343
220 domains visited
Cumulative time: 0.457369327545166

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 192
splitting decisions: 
split level 0: [/input-8, 908] [/input-8, 908] [/input-8, 20] [/input-8, 20] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 908] 
pruning_in_iteration open status: False
ratio of positive domain = 64 / 384 = 0.16666666666666663
pruning-in-iteration extra time: 5.698204040527344e-05
Time: prepare 0.0083    bound 0.1177    transfer 0.0138    finalize 0.0193    func 0.1593    
Accumulated time: func 0.3934    prepare 0.0168    bound 0.3334    transfer 0.0213    finalize 0.0226    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05889 (12), -0.05883 (12), -0.05839 (12), -0.05771 (12), -0.05546 (12), -0.05544 (12), -0.05533 (12), -0.05467 (12), -0.05435 (12), -0.05419 (12), -0.05372 (12), -0.05314 (12), -0.05297 (12), -0.05288 (12), -0.05261 (12), -0.05250 (12), -0.05240 (12), -0.05176 (12), -0.05173 (12), -0.05154 (12), 
Length of domains: 317
Time: pickout 0.0165    decision 0.0364    set_bounds 0.0098    solve 0.1594    add 0.0852    
Accumulated time: pickout 0.0239    decision 0.0750    set_bounds 0.0346    solve 0.3937    add 0.2189    
Current (lb-rhs): -0.0588923916220665
537 domains visited
Cumulative time: 0.7885105609893799

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 317
splitting decisions: 
split level 0: [/input-8, 20] [/input-8, 20] [/input-8, 908] [/input-8, 908] [/input-12, 56] [/input-8, 20] [/input-12, 56] [/input-8, 20] [/input-12, 56] [/input-8, 20] 
pruning_in_iteration open status: False
ratio of positive domain = 95 / 634 = 0.14984227129337535
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0204    bound 0.1383    transfer 0.0190    finalize 0.0092    func 0.1871    
Accumulated time: func 0.5805    prepare 0.0376    bound 0.4717    transfer 0.0403    finalize 0.0318    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05721 (13), -0.05717 (13), -0.05669 (13), -0.05605 (13), -0.05379 (13), -0.05378 (13), -0.05367 (13), -0.05301 (13), -0.05269 (13), -0.05256 (13), -0.05210 (13), -0.05152 (13), -0.05096 (13), -0.05089 (13), -0.05086 (13), -0.05081 (13), -0.05033 (13), -0.05013 (13), -0.04984 (13), -0.04963 (13), 
Length of domains: 534
Time: pickout 0.0353    decision 0.0665    set_bounds 0.0340    solve 0.1873    add 0.0950    
Accumulated time: pickout 0.0592    decision 0.1416    set_bounds 0.0686    solve 0.5809    add 0.3139    
Current (lb-rhs): -0.057211533188819885
1071 domains visited
Cumulative time: 1.218775987625122

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 534
splitting decisions: 
split level 0: [/input-8, 860] [/input-8, 909] [/input-8, 909] [/input-8, 909] [/input-8, 909] [/input-8, 860] [/input-8, 860] [/input-8, 909] [/input-12, 56] [/input-8, 860] 
pruning_in_iteration open status: False
ratio of positive domain = 158 / 1068 = 0.14794007490636707
pruning-in-iteration extra time: 5.4836273193359375e-05
Time: prepare 0.0217    bound 0.1240    transfer 0.0072    finalize 0.0122    func 0.1677    
Accumulated time: func 0.7482    prepare 0.0595    bound 0.5957    transfer 0.0475    finalize 0.0440    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05535 (14), -0.05533 (14), -0.05337 (14), -0.05292 (14), -0.05268 (14), -0.05221 (14), -0.05192 (14), -0.05182 (14), -0.05083 (14), -0.05043 (14), -0.05025 (14), -0.04993 (14), -0.04965 (14), -0.04937 (14), -0.04909 (14), -0.04898 (14), -0.04896 (14), -0.04889 (14), -0.04845 (14), -0.04838 (14), 
Length of domains: 899
Time: pickout 0.0217    decision 0.0571    set_bounds 0.0307    solve 0.1680    add 0.1115    
Accumulated time: pickout 0.0810    decision 0.1986    set_bounds 0.0993    solve 0.7490    add 0.4254    
Current (lb-rhs): -0.05535459518432617
1970 domains visited
Cumulative time: 1.616117238998413

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 899
splitting decisions: 
split level 0: [/input-8, 877] [/input-8, 1252] [/input-8, 1932] [/input-8, 1932] [/input-8, 1252] [/input-8, 1252] [/input-8, 860] [/input-8, 1748] [/input-8, 877] [/input-8, 918] 
pruning_in_iteration open status: False
ratio of positive domain = 180 / 1798 = 0.10011123470522798
pruning-in-iteration extra time: 6.890296936035156e-05
Time: prepare 0.0365    bound 0.1938    transfer 0.0271    finalize 0.0171    func 0.2746    
Accumulated time: func 1.0228    prepare 0.0962    bound 0.7895    transfer 0.0746    finalize 0.0610    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05229 (15), -0.05222 (15), -0.05193 (15), -0.05179 (15), -0.05098 (15), -0.05049 (15), -0.05028 (15), -0.05004 (15), -0.04999 (15), -0.04954 (15), -0.04922 (15), -0.04889 (15), -0.04872 (15), -0.04858 (15), -0.04842 (15), -0.04815 (15), -0.04805 (15), -0.04792 (15), -0.04745 (15), -0.04730 (15), 
Length of domains: 1603
Time: pickout 0.0394    decision 0.0737    set_bounds 0.0426    solve 0.2751    add 0.2687    
Accumulated time: pickout 0.1203    decision 0.2723    set_bounds 0.1419    solve 1.0240    add 0.6941    
Current (lb-rhs): -0.05228762328624725
3573 domains visited
Cumulative time: 2.3261375427246094

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 1603
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 1932] [/input-12, 56] [/input-8, 918] [/input-12, 56] [/input-8, 1748] [/input-8, 877] [/input-12, 56] [/input-8, 1748] [/input-8, 1252] 
pruning_in_iteration open status: False
ratio of positive domain = 581 / 3206 = 0.18122270742358082
pruning-in-iteration extra time: 9.107589721679688e-05
Time: prepare 0.0708    bound 0.1846    transfer 0.0422    finalize 0.0270    func 0.3260    
Accumulated time: func 1.3488    prepare 0.1673    bound 0.9740    transfer 0.1168    finalize 0.0881    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05022 (16), -0.05015 (16), -0.04966 (16), -0.04946 (16), -0.04936 (16), -0.04905 (16), -0.04890 (16), -0.04883 (16), -0.04865 (16), -0.04864 (16), -0.04837 (16), -0.04833 (16), -0.04829 (16), -0.04768 (16), -0.04756 (16), -0.04711 (16), -0.04698 (16), -0.04672 (16), -0.04667 (16), -0.04656 (16), 
Length of domains: 2571
Time: pickout 0.0398    decision 0.1196    set_bounds 0.2695    solve 0.3270    add 0.1137    
Accumulated time: pickout 0.1602    decision 0.3919    set_bounds 0.4114    solve 1.3510    add 0.8078    
Current (lb-rhs): -0.05021633952856064
6144 domains visited
Cumulative time: 3.2101523876190186

BaB round 8
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0024
batch: 2571
splitting decisions: 
split level 0: [/input-8, 1252] [/input-8, 1363] [/input-12, 56] [/input-8, 877] [/input-12, 56] [/input-8, 1748] [/input-8, 938] [/input-8, 1252] [/input-8, 1932] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 2042 / 5142 = 0.397121742512641
pruning-in-iteration extra time: 0.005454301834106445
Time: prepare 0.1424    bound 0.3790    transfer 0.0253    finalize 0.0368    func 0.7573    
Accumulated time: func 2.1062    prepare 0.3100    bound 1.3531    transfer 0.1421    finalize 0.1249    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04810 (17), -0.04761 (17), -0.04760 (17), -0.04752 (17), -0.04740 (17), -0.04724 (17), -0.04702 (17), -0.04688 (17), -0.04685 (17), -0.04681 (17), -0.04657 (17), -0.04651 (17), -0.04651 (17), -0.04643 (17), -0.04640 (17), -0.04625 (17), -0.04623 (17), -0.04607 (17), -0.04607 (17), -0.04573 (17), 
Length of domains: 3100
Time: pickout 0.0564    decision 0.1783    set_bounds 0.1309    solve 0.7586    add 0.1442    
Accumulated time: pickout 0.2166    decision 0.5702    set_bounds 0.5423    solve 2.1096    add 0.9519    
Current (lb-rhs): -0.04809918254613876
9244 domains visited
Cumulative time: 4.512794494628906

BaB round 9
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0051
batch: 3100
splitting decisions: 
split level 0: [/input-12, 56] [/input-8, 877] [/input-8, 1363] [/input-8, 1748] [/input-8, 877] [/input-8, 26] [/input-8, 26] [/input-12, 56] [/input-8, 918] [/input-8, 26] 
pruning_in_iteration open status: False
ratio of positive domain = 838 / 6200 = 0.13516129032258062
pruning-in-iteration extra time: 6.29425048828125e-05
Time: prepare 0.1500    bound 0.2984    transfer 0.0692    finalize 0.0510    func 0.5703    
Accumulated time: func 2.6765    prepare 0.4603    bound 1.6515    transfer 0.2114    finalize 0.1759    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04645 (18), -0.04596 (18), -0.04595 (18), -0.04580 (18), -0.04575 (18), -0.04557 (18), -0.04530 (18), -0.04522 (18), -0.04521 (18), -0.04509 (18), -0.04491 (18), -0.04481 (18), -0.04478 (18), -0.04476 (18), -0.04476 (18), -0.04459 (18), -0.04457 (18), -0.04439 (18), -0.04434 (18), -0.04402 (18), 
Length of domains: 5292
Time: pickout 0.0643    decision 0.2198    set_bounds 0.1663    solve 0.5720    add 0.1575    
Accumulated time: pickout 0.2809    decision 0.7901    set_bounds 0.7086    solve 2.6816    add 1.1095    
Current (lb-rhs): -0.04644675552845001
14536 domains visited
Cumulative time: 5.719122886657715

BaB round 10
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 1076] [/input-8, 918] [/input-12, 56] [/input-8, 1748] [/input-8, 938] [/input-8, 1076] [/input-12, 56] [/input-8, 877] [/input-8, 1061] 
pruning_in_iteration open status: False
ratio of positive domain = 1201 / 8192 = 0.1466064453125
pruning-in-iteration extra time: 0.0001201629638671875
Time: prepare 0.1879    bound 0.3739    transfer 0.0468    finalize 0.2644    func 0.8745    
Accumulated time: func 3.5510    prepare 0.6486    bound 2.0254    transfer 0.2582    finalize 0.4403    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04580 (18), -0.04530 (18), -0.04522 (18), -0.04509 (18), -0.04483 (19), -0.04481 (18), -0.04478 (18), -0.04476 (18), -0.04476 (18), -0.04459 (18), -0.04435 (19), -0.04434 (19), -0.04434 (18), -0.04414 (19), -0.04402 (18), -0.04397 (19), -0.04358 (19), -0.04336 (18), -0.04330 (19), -0.04296 (19), 
Length of domains: 8123
Time: pickout 0.0811    decision 0.4100    set_bounds 0.1922    solve 0.8763    add 0.1639    
Accumulated time: pickout 0.3619    decision 1.2000    set_bounds 0.9008    solve 3.5579    add 1.2734    
Current (lb-rhs): -0.045795634388923645
21463 domains visited
current_vram/total_varm: 10.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.470212936401367

BaB round 11
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 8123
splitting decisions: 
split level 0: [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 1076] [/input-8, 1252] [/input-8, 918] [/input-8, 26] [/input-8, 938] [/input-8, 918] [/input-8, 877] 
pruning_in_iteration open status: False
ratio of positive domain = 2160 / 16246 = 0.13295580450572453
pruning-in-iteration extra time: 0.00010061264038085938
Time: prepare 0.3576    bound 0.6843    transfer 0.0971    finalize 0.3065    func 1.4467    
Accumulated time: func 4.9976    prepare 1.0066    bound 2.7097    transfer 0.3553    finalize 0.7468    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04415 (19), -0.04362 (19), -0.04338 (20), -0.04317 (19), -0.04315 (19), -0.04298 (19), -0.04292 (19), -0.04287 (20), -0.04284 (20), -0.04271 (19), -0.04261 (20), -0.04249 (20), -0.04244 (19), -0.04213 (20), -0.04207 (19), -0.04204 (19), -0.04202 (19), -0.04185 (19), -0.04170 (19), -0.04167 (19), 
Length of domains: 13959
Time: pickout 0.1407    decision 0.4908    set_bounds 0.5736    solve 1.4501    add 0.1890    
Accumulated time: pickout 0.5026    decision 1.6908    set_bounds 1.4744    solve 5.0080    add 1.4624    
Current (lb-rhs): -0.04414522647857666
35422 domains visited
Cumulative time: 10.349558115005493

BaB round 12
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0036
batch: 8192
splitting decisions: 
split level 0: [/input-8, 877] [/input-8, 1076] [/input-8, 26] [/input-8, 1932] [/input-8, 877] [/input-8, 861] [/input-8, 1076] [/input-8, 26] [/input-8, 1932] [/input-8, 1061] 
pruning_in_iteration open status: False
ratio of positive domain = 2309 / 16384 = 0.14093017578125
pruning-in-iteration extra time: 0.0001163482666015625
Time: prepare 0.3399    bound 0.6818    transfer 0.0909    finalize 0.3058    func 1.4194    
Accumulated time: func 6.4170    prepare 1.3468    bound 3.3915    transfer 0.4462    finalize 1.0525    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04415 (19), -0.04338 (20), -0.04292 (19), -0.04287 (20), -0.04284 (20), -0.04271 (19), -0.04261 (20), -0.04249 (20), -0.04244 (19), -0.04213 (20), -0.04212 (20), -0.04204 (19), -0.04202 (19), -0.04170 (19), -0.04161 (20), -0.04158 (20), -0.04146 (20), -0.04110 (19), -0.04109 (20), -0.04091 (20), 
Length of domains: 19701
Time: pickout 0.1293    decision 0.4880    set_bounds 0.5811    solve 1.4218    add 0.2379    
Accumulated time: pickout 0.6319    decision 2.1789    set_bounds 2.0555    solve 6.4298    add 1.7003    
Current (lb-rhs): -0.04414522647857666
49356 domains visited
current_vram/total_varm: 24.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 13.260645866394043

BaB round 13
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 16384
splitting decisions: 
split level 0: [/input-8, 26] [/input-8, 1932] [/input-8, 26] [/input-8, 1932] [/input-8, 1748] [/input-8, 26] [/input-8, 1932] [/input-8, 1748] [/input-8, 26] [/input-8, 1932] 
pruning_in_iteration open status: False
ratio of positive domain = 4631 / 32768 = 0.141326904296875
pruning-in-iteration extra time: 0.00022363662719726562
Time: prepare 0.6801    bound 1.3149    transfer 0.1896    finalize 0.1991    func 2.3854    
Accumulated time: func 8.8024    prepare 2.0274    bound 4.7064    transfer 0.6358    finalize 1.2517    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04415 (19), -0.04292 (19), -0.04271 (19), -0.04244 (19), -0.04227 (21), -0.04204 (19), -0.04202 (19), -0.04174 (21), -0.04173 (21), -0.04170 (19), -0.04148 (21), -0.04148 (21), -0.04110 (19), -0.04109 (21), -0.04100 (21), -0.04086 (19), -0.04061 (20), -0.04053 (19), -0.04047 (21), -0.04047 (21), 
Length of domains: 31243
Time: pickout 0.3175    decision 1.7969    set_bounds 1.4200    solve 2.3926    add 0.2422    
Accumulated time: pickout 0.9495    decision 3.9758    set_bounds 3.4755    solve 8.8223    add 1.9425    
Current (lb-rhs): -0.04414522647857666
77282 domains visited
current_vram/total_varm: 32.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 19.486006498336792

BaB round 14
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 353 constraints, 21435 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.1882
batch: 31243
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 918] [/input-8, 26] [/input-8, 938] [/input-8, 1252] [/input-8, 877] [/input-8, 1061] [/input-8, 877] [/input-8, 1363] [/input-8, 26] [/input-8, 1061] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04309748113155365
10 lb beta sum: 3.694723129272461, worst -0.031878307461738586
pruning_in_iteration open status: True
ratio of positive domain = 44224 / 62486 = 0.7077425343276894
pruning-in-iteration extra time: 0.004766941070556641
Time: prepare 1.3357    bound 6.8369    transfer 0.4609    finalize 0.4344    func 9.8799    
Accumulated time: func 18.6823    prepare 3.3635    bound 11.5432    transfer 1.0967    finalize 1.6860    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02767 (20), -0.02716 (20), -0.02690 (20), -0.02584 (20), -0.02576 (20), -0.02560 (22), -0.02540 (20), -0.02535 (20), -0.02489 (22), -0.02489 (20), -0.02456 (22), -0.02444 (22), -0.02436 (22), -0.02427 (21), -0.02379 (22), -0.02357 (22), -0.02356 (22), -0.02356 (20), -0.02352 (22), -0.02347 (20), 
Length of domains: 18262
Time: pickout 0.4582    decision 3.5672    set_bounds 2.2739    solve 9.8899    add 0.2343    
Accumulated time: pickout 1.4076    decision 7.5430    set_bounds 5.7494    solve 18.7122    add 2.1768    
Current (lb-rhs): -0.027671217918395996
95544 domains visited
Cumulative time: 36.334012031555176

BaB round 15
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 638 constraints, 44722 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3861
batch: 18262
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1076] [/input-8, 26] [/input-8, 1932] [/input-8, 1932] [/input-8, 1076] [/input-8, 26] [/input-8, 1932] [/input-8, 1061] [/input-8, 1076] [/input-8, 938] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04077105224132538
10 lb beta sum: 2.780989170074463, worst -0.033318132162094116
pruning_in_iteration open status: False
ratio of positive domain = 4640 / 36524 = 0.12703975468185302
pruning-in-iteration extra time: 0.0005452632904052734
Time: prepare 0.8000    bound 7.0588    transfer 0.2065    finalize 0.5619    func 8.8623    
Accumulated time: func 27.5446    prepare 4.1640    bound 18.6020    transfer 1.3032    finalize 2.2479    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02455 (21), -0.02417 (21), -0.02409 (21), -0.02389 (21), -0.02369 (21), -0.02301 (23), -0.02278 (21), -0.02270 (21), -0.02266 (21), -0.02257 (21), -0.02246 (21), -0.02244 (23), -0.02226 (22), -0.02203 (21), -0.02190 (21), -0.02190 (23), -0.02182 (21), -0.02153 (21), -0.02146 (21), -0.02135 (21), 
Length of domains: 25071
Time: pickout 0.2757    decision 1.9271    set_bounds 1.2282    solve 8.8700    add 0.2529    
Accumulated time: pickout 1.6834    decision 9.4701    set_bounds 6.9776    solve 27.5822    add 2.4297    
Current (lb-rhs): -0.02455216646194458
120615 domains visited
Cumulative time: 49.425588846206665

BaB round 16
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 833 constraints, 56172 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4860
batch: 25071
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 918] [/input-8, 918] [/input-8, 918] [/input-8, 1061] [/input-8, 1061] [/input-8, 918] [/input-8, 918] [/input-8, 877] [/input-8, 1061] [/input-8, 1061] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.039280056953430176
10 lb beta sum: 2.969121217727661, worst -0.03558747470378876
pruning_in_iteration open status: False
ratio of positive domain = 7233 / 50142 = 0.1442503290654541
pruning-in-iteration extra time: 0.0009219646453857422
Time: prepare 1.1285    bound 11.3318    transfer 0.3371    finalize 0.7222    func 13.8402    
Accumulated time: func 41.3848    prepare 5.2929    bound 29.9338    transfer 1.6403    finalize 2.9701    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02357 (22), -0.02354 (22), -0.02259 (22), -0.02167 (22), -0.02165 (22), -0.02111 (22), -0.02109 (24), -0.02097 (24), -0.02088 (22), -0.02082 (22), -0.02081 (22), -0.02078 (24), -0.02076 (22), -0.02073 (24), -0.02069 (24), -0.02058 (22), -0.02046 (22), -0.02045 (22), -0.02036 (24), -0.02028 (22), 
Length of domains: 30620
Time: pickout 0.3894    decision 3.2301    set_bounds 1.5790    solve 13.8488    add 0.2755    
Accumulated time: pickout 2.0728    decision 12.7002    set_bounds 8.5566    solve 41.4310    add 2.7052    
Current (lb-rhs): -0.02357196807861328
151235 domains visited
Cumulative time: 69.3897614479065

BaB round 17
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 1046 constraints, 85225 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.0008
batch: 30620
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1932] [/input-8, 1932] [/input-8, 1061] [/input-8, 918] [/input-8, 1932] [/input-8, 1932] [/input-8, 1061] [/input-8, 918] [/input-8, 1932] [/input-8, 1932] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03659927845001221
10 lb beta sum: 3.2555949687957764, worst -0.03740084171295166
pruning_in_iteration open status: True
ratio of positive domain = 29197 / 61240 = 0.476763553233181
pruning-in-iteration extra time: 0.001255035400390625
Time: prepare 1.3230    bound 15.9844    transfer 0.4499    finalize 0.9434    func 19.0975    
Accumulated time: func 60.4823    prepare 6.6164    bound 45.9182    transfer 2.0903    finalize 3.9135    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02083 (25), -0.02052 (23), -0.02033 (23), -0.02032 (23), -0.02002 (23), -0.01987 (25), -0.01935 (23), -0.01934 (25), -0.01931 (23), -0.01923 (23), -0.01914 (23), -0.01900 (23), -0.01899 (23), -0.01885 (23), -0.01879 (23), -0.01877 (23), -0.01875 (23), -0.01873 (25), -0.01863 (25), -0.01862 (25), 
Length of domains: 32043
Time: pickout 0.4780    decision 3.1616    set_bounds 2.2251    solve 19.1103    add 0.2706    
Accumulated time: pickout 2.5508    decision 15.8618    set_bounds 10.7817    solve 60.5413    add 2.9759    
Current (lb-rhs): -0.020825490355491638
183278 domains visited
Cumulative time: 95.90676355361938

BaB round 18
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 1247 constraints, 93554 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.1418
batch: 32043
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 938] [/input-8, 1076] [/input-8, 364] [/input-8, 938] [/input-8, 1076] [/input-8, 938] [/input-8, 1076] [/input-8, 938] [/input-8, 364] [/input-8, 938] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03511817753314972
10 lb beta sum: 3.3497331142425537, worst -0.03828226029872894
pruning_in_iteration open status: True
ratio of positive domain = 31991 / 64086 = 0.4991885903317417
pruning-in-iteration extra time: 0.0014412403106689453
Time: prepare 1.4385    bound 18.8278    transfer 0.4849    finalize 0.5161    func 22.1871    
Accumulated time: func 82.6694    prepare 8.0553    bound 64.7460    transfer 2.5752    finalize 4.4296    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01889 (26), -0.01813 (24), -0.01809 (24), -0.01788 (24), -0.01784 (24), -0.01768 (24), -0.01755 (26), -0.01752 (24), -0.01749 (24), -0.01749 (24), -0.01747 (24), -0.01695 (24), -0.01691 (24), -0.01688 (24), -0.01684 (24), -0.01681 (24), -0.01680 (26), -0.01679 (24), -0.01678 (24), -0.01671 (26), 
Length of domains: 32095
Time: pickout 0.4982    decision 3.2925    set_bounds 2.5687    solve 22.2003    add 0.2571    
Accumulated time: pickout 3.0490    decision 19.1543    set_bounds 13.3505    solve 82.7416    add 3.2330    
Current (lb-rhs): -0.01888759434223175
215373 domains visited
Cumulative time: 126.15491819381714

BaB round 19
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 1030 constraints, 94503 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8159
batch: 32095
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1363] [/input-8, 1363] [/input-8, 1076] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 861] [/input-8, 1363] [/input-8, 1363] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034159839153289795
10 lb beta sum: 3.453174114227295, worst -0.0279923677444458
pruning_in_iteration open status: True
ratio of positive domain = 34337 / 64190 = 0.5349275588097835
pruning-in-iteration extra time: 0.0013170242309570312
Time: prepare 1.4943    bound 17.0465    transfer 0.4928    finalize 0.9994    func 20.4554    
Accumulated time: func 103.1247    prepare 9.5501    bound 81.7925    transfer 3.0680    finalize 5.4290    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01754 (25), -0.01670 (25), -0.01664 (25), -0.01649 (25), -0.01630 (27), -0.01607 (27), -0.01586 (27), -0.01583 (25), -0.01573 (27), -0.01570 (27), -0.01569 (25), -0.01566 (25), -0.01529 (27), -0.01528 (27), -0.01528 (27), -0.01527 (27), -0.01525 (25), -0.01524 (25), -0.01518 (27), -0.01518 (27), 
Length of domains: 29853
Time: pickout 0.5277    decision 3.3095    set_bounds 2.3923    solve 20.4697    add 0.2430    
Accumulated time: pickout 3.5767    decision 22.4638    set_bounds 15.7428    solve 103.2113    add 3.4759    
Current (lb-rhs): -0.017538607120513916
245226 domains visited
Cumulative time: 154.20783638954163

BaB round 20
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 1220 constraints, 101785 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.2384
batch: 29853
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1618] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03335520625114441
10 lb beta sum: 3.500685214996338, worst -0.028608545660972595
pruning_in_iteration open status: False
ratio of positive domain = 7961 / 59706 = 0.13333668308042745
pruning-in-iteration extra time: 0.0014026165008544922
Time: prepare 1.4069    bound 17.5482    transfer 0.4534    finalize 0.4948    func 20.8440    
Accumulated time: func 123.9687    prepare 10.9575    bound 99.3408    transfer 3.5214    finalize 5.9238    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01664 (26), -0.01628 (28), -0.01592 (26), -0.01569 (26), -0.01565 (26), -0.01544 (28), -0.01544 (28), -0.01538 (26), -0.01518 (28), -0.01504 (28), -0.01501 (28), -0.01486 (28), -0.01478 (26), -0.01465 (28), -0.01449 (28), -0.01446 (28), -0.01442 (28), -0.01430 (26), -0.01425 (28), -0.01422 (28), 
Length of domains: 35923
Time: pickout 0.5039    decision 3.1621    set_bounds 2.3626    solve 20.8586    add 0.3440    
Accumulated time: pickout 4.0806    decision 25.6259    set_bounds 18.1054    solve 124.0699    add 3.8199    
Current (lb-rhs): -0.01664450764656067
281149 domains visited
Cumulative time: 182.91815567016602

BaB round 21
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts: total 1374 constraints, 103099 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8908
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 364] [/input-8, 364] [/input-8, 1371] [/input-8, 1371] [/input-8, 364] [/input-8, 364] [/input-8, 364] [/input-8, 364] [/input-8, 364] [/input-8, 364] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03231470286846161
10 lb beta sum: 3.4784581661224365, worst -0.027700215578079224
pruning_in_iteration open status: False
ratio of positive domain = 9694 / 65536 = 0.147918701171875
pruning-in-iteration extra time: 0.001661539077758789
Time: prepare 1.4876    bound 25.8132    transfer 0.5013    finalize 1.0905    func 29.3234    
Accumulated time: func 153.2922    prepare 12.4455    bound 125.1540    transfer 4.0227    finalize 7.0143    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01504 (29), -0.01430 (27), -0.01403 (27), -0.01372 (27), -0.01367 (27), -0.01365 (27), -0.01363 (29), -0.01351 (29), -0.01347 (29), -0.01341 (29), -0.01340 (27), -0.01339 (29), -0.01333 (29), -0.01332 (27), -0.01329 (27), -0.01323 (29), -0.01319 (29), -0.01319 (27), -0.01315 (29), -0.01307 (27), 
Length of domains: 38385
Time: pickout 0.5565    decision 3.3896    set_bounds 2.5569    solve 29.3393    add 0.3557    
Accumulated time: pickout 4.6371    decision 29.0155    set_bounds 20.6623    solve 153.4092    add 4.1756    
Current (lb-rhs): -0.015040859580039978
316379 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=3_30668371.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=3_30668371.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=3_30668371.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=3_30668371.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=191_spec=4_30668371.log
found process for pidx=3
kill process for pidx=3
found process for pidx=4
Result: unknown in 223.8176 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.11565208, -26.29471397, -20.11076927, -23.31661606, -21.61720848,
         -22.97149086, -21.28172302, -23.18593788, -27.03968811, -25.88165855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [697]; unstable size 697; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 697] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 697] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 697] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 311] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.78565836, 4.27323198, 2.01961470, 0.27245510, 1.55622101, 0.05097020,
         1.07475805, 5.46636057, 4.11699867]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0606 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.48653412, -28.85784149, -33.36421204, -32.71415710, -32.16485214,
         -32.94163132, -33.09236145, -31.24285507, -33.00304794, -27.07908058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [755]; unstable size 755; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 755] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 755] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 755] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 272] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.82790470, 0.86489141, 4.30059433, 3.81732941, 3.25241184, 3.89844608,
         3.96334553, 2.53978443, 4.38356352]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0674 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.57879448, -25.87275887, -18.40335464, -22.53392982, -18.78349113,
         -22.35590553, -20.82909393, -22.13958931, -23.90252686, -25.55131340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [942]; unstable size 942; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 942] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 942] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 942] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 298] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78787899,  5.47186136,  3.06105685, -0.50585985,  2.82687807,
          1.17288113,  2.26738572,  3.64541602,  5.32217216]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.57879448, -25.87275887, -18.40335464, -22.53392982, -18.78349113,
         -22.35590553, -20.82909393, -22.13958931, -23.90252686, -25.55131340]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.30207634, -26.66238022, -19.06604576, -23.03637314, -19.06505394,
          -22.81049538, -21.29365158, -22.35304260, -24.57667923, -26.26650810]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00099182]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0076 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0669 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.54196358, -20.82349014, -15.98302746, -15.75083733, -17.00555420,
         -16.15604782, -17.53281975, -17.70917892, -21.04745102, -20.12406921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [787]; unstable size 787; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 787] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 787] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 787] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 259] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.29445934,  2.55111456, -1.20112336,  0.14969814, -0.85841608,
          0.26714230,  0.60579419,  3.49371648,  1.95312881]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.54196358, -20.82349014, -15.98302746, -15.75083733, -17.00555420,
         -16.15604782, -17.53281975, -17.70917892, -21.04745102, -20.12406921]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.54196358, -20.82349205, -15.98302746, -15.75083637, -17.00555229,
          -16.15604591, -17.53282166, -17.70917892, -21.04744911, -20.12407112],
         [-19.54196358, -20.82349205, -15.98302746, -15.75083637, -17.00555229,
          -16.15604591, -17.53282166, -17.70917892, -21.04744911, -20.12407112]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.23219109,  0.17301846]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.03650784, -1.02063489,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.06825387, -1.05238092, -1.03650784,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.09999990, -1.06825387, -1.06825387,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           ...,
           [-1.29047608, -1.17936504, -1.16349196,  ..., -1.13174593,
            -1.13174593, -1.13174593],
           [-1.35396814, -1.27460313, -1.24285710,  ..., -1.11587298,
            -1.13174593, -1.13174593],
           [-1.32222211, -1.32222211, -1.22698402,  ..., -1.11587298,
            -1.13174593, -1.13174593]],

          [[-1.14331722, -1.14331722, -1.11111104,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.15942025, -1.14331722, -1.12721407,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.17552328, -1.14331722, -1.14331722,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           ...,
           [-1.27214170, -1.20772946, -1.20772946,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.35265696, -1.28824472, -1.25603855,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.33655393, -1.32045078, -1.23993552,  ..., -1.20772946,
            -1.19162631, -1.19162631]],

          [[-1.16791618, -1.18290865, -1.16791618,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.22788620, -1.21289361, -1.19790113,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.25787115, -1.21289361, -1.18290865,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           ...,
           [-1.09295356, -1.04797614, -1.06296861,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.15292358, -1.10794616, -1.07796109,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.12293863, -1.12293863, -1.01799107,  ..., -1.25787115,
            -1.25787115, -1.25787115]]],


         [[[-1.03650784, -1.03650784, -1.02063489,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.06825387, -1.05238092, -1.03650784,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.09999990, -1.06825387, -1.06825387,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           ...,
           [-1.29047608, -1.17936504, -1.16349196,  ..., -1.13174593,
            -1.13174593, -1.13174593],
           [-1.35396814, -1.27460313, -1.24285710,  ..., -1.11587298,
            -1.13174593, -1.13174593],
           [-1.32222211, -1.32222211, -1.22698402,  ..., -1.11587298,
            -1.13174593, -1.13174593]],

          [[-1.14331722, -1.14331722, -1.11111104,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.15942025, -1.14331722, -1.12721407,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.17552328, -1.14331722, -1.14331722,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           ...,
           [-1.27214170, -1.20772946, -1.20772946,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.35265696, -1.28824472, -1.25603855,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.33655393, -1.32045078, -1.23993552,  ..., -1.20772946,
            -1.19162631, -1.19162631]],

          [[-1.16791618, -1.18290865, -1.16791618,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.22788620, -1.21289361, -1.19790113,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.25787115, -1.21289361, -1.18290865,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           ...,
           [-1.09295356, -1.04797614, -1.06296861,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.15292358, -1.10794616, -1.07796109,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.12293863, -1.12293863, -1.01799107,  ..., -1.25787115,
            -1.25787115, -1.25787115]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.03269768, -23.39742851, -19.98416901, -18.36516571, -20.57546043,
         -19.22831917, -18.52441025, -21.12701797, -21.40182495, -21.89733315]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 330, 1, 675] with unstable size 329 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 675] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [329]; unstable size 329; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 329] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 329] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.27801919,  2.64099765,  0.07614517,  0.77937603,  0.49395734,
         -0.89621031,  1.17210197,  0.74582696,  1.35976291]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.03269768, -23.39742851, -19.98416901, -18.36516571, -20.57546043,
         -19.22831917, -18.52441025, -21.12701797, -21.40182495, -21.89733315]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.66091156, -23.91022873, -20.51543808, -19.07214546, -21.09067154,
          -19.93975067, -18.70034218, -21.83753204, -22.03737640, -22.49450493]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.37180328]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0604 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.98860359, -29.81665421, -22.90506172, -26.87357140, -25.76964569,
         -27.17270279, -26.79407501, -29.03504753, -24.31199837, -29.65661049]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 140, 1, 508] with unstable size 139 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 508] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [139]; unstable size 139; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 139] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.01010895, 0.43884715, 4.07559061, 3.17350507, 4.33794880, 3.97197700,
         6.33449650, 1.59434092, 6.97273016]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0607 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
         -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [796]; unstable size 796; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 161, 1, 796] with unstable size 160 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 796] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 796] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [160]; unstable size 160; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 160] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 160] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.89236927, -0.28250706, -0.08627734,  1.25970459,  0.33654195,
          1.56063485,  2.24390984,  2.57144332,  3.82517886]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
         -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.74it/s]100%|██████████| 1/1 [00:00<00:00,  8.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.14531326, -27.12922287, -22.18219376, -22.67140579, -24.06235313,
          -23.14514732, -24.43384171, -25.13469696, -25.67412186, -26.70548248],
         [-22.14531326, -27.12922287, -22.18219376, -22.67140579, -24.06235313,
          -23.14514732, -24.43384171, -25.13469696, -25.67412186, -26.70548248]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.03688049, 0.52609253]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1172 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.666088104248047
alpha/beta optimization time: 1.2335357666015625
initial alpha-crown bounds: tensor([[ 3.92945385, -0.25881732, -0.04859799,  1.30887055,  0.37676319,
          1.59917903,  2.28565216,  2.62420321,  3.84938145]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.25881731510162354
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.9364 seconds.
lower bounds for all target labels: [3.9294538497924805, -0.2588179111480713, -0.04859817028045654, 1.3088703155517578, 0.3767628073692322, 1.5991790294647217, 2.2856521606445312, 2.6242029666900635, 3.849381446838379]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [1, 2]
start creating model mps for candidates: ['lay/16_1', 'lay/16_2']
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=2_30690799.mps
parallel save mip model to /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=2_30690799.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 25067 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 25070 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.50094962120056
Verifying property 0 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9294538497924805.

Properties batch 1, size 1
Remaining timeout: 198.26092219352722
Verifying property 1 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.849381446838379.

Properties batch 2, size 1
Remaining timeout: 198.12645769119263
Verifying property 2 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6242032051086426.

Properties batch 3, size 1
Remaining timeout: 197.98915672302246
Verifying property 3 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2856521606445312.

Properties batch 4, size 1
Remaining timeout: 197.85504961013794
Verifying property 4 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5991790294647217.

Properties batch 5, size 1
Remaining timeout: 197.71221923828125
Verifying property 5 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.308870553970337.

Properties batch 6, size 1
Remaining timeout: 197.57742261886597
Verifying property 6 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3767631947994232.

Properties batch 7, size 1
Remaining timeout: 197.44151329994202
Verifying property 7 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04859799]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
        -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04859799]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 796
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 160
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 971
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009355545043945312
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 0] 
split level 5: [/input-8, 794] 
split level 6: [/input-8, 470] 
split level 7: [/input-8, 461] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.0067901611328125e-05
Time: prepare 0.0032    bound 0.0050    transfer 0.0043    finalize 0.0035    func 0.0161    
Accumulated time: func 0.0161    prepare 0.0036    bound 0.0050    transfer 0.0043    finalize 0.0035    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0260    set_bounds 0.0225    solve 0.0161    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0260    set_bounds 0.0225    solve 0.0161    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07172179222106934


Properties batch 8, size 1
Remaining timeout: 197.15526819229126
Verifying property 8 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.25881732]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
        -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.25881732]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 796
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 160
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 971
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0001919269561767578
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 0] 
split level 3: [/input-12, 10] 
split level 4: [/input-8, 283] 
split level 5: [/input-12, 58] 
split level 6: [/input-8, 470] 
split level 7: [/input-8, 461] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 256 = 0.6796875
pruning-in-iteration extra time: 0.004664182662963867
Time: prepare 0.0031    bound 0.1653    transfer 0.0039    finalize 0.0017    func 0.1741    
Accumulated time: func 0.1741    prepare 0.0035    bound 0.1653    transfer 0.0039    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15008 (8), -0.14789 (8), -0.14786 (8), -0.14507 (8), -0.14479 (8), -0.14393 (8), -0.14263 (8), -0.14222 (8), -0.14208 (8), -0.14184 (8), -0.13930 (8), -0.13886 (8), -0.13702 (8), -0.13519 (8), -0.13454 (8), -0.13165 (8), -0.12674 (8), -0.12601 (8), -0.12454 (8), -0.12432 (8), 
Length of domains: 82
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0184    solve 0.1742    add 0.0636    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0184    solve 0.1742    add 0.0636    
Current (lb-rhs): -0.15007752180099487
82 domains visited
Cumulative time: 0.30513525009155273

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 82
splitting decisions: 
split level 0: [/input-8, 794] [/input-8, 794] [/input-8, 796] [/input-8, 796] [/input-8, 794] [/input-8, 794] [/input-8, 794] [/input-8, 796] [/input-8, 796] [/input-8, 794] 
split level 1: [/input-8, 1612] [/input-8, 1612] [/input-8, 794] [/input-8, 1581] [/input-8, 1612] [/input-8, 1612] [/input-8, 1581] [/input-8, 794] [/input-8, 1581] [/input-8, 1612] 
pruning_in_iteration open status: False
ratio of positive domain = 60 / 328 = 0.18292682926829273
pruning-in-iteration extra time: 7.128715515136719e-05
Time: prepare 0.0062    bound 0.0993    transfer 0.0039    finalize 0.0023    func 0.1118    
Accumulated time: func 0.2859    prepare 0.0100    bound 0.2647    transfer 0.0078    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14481 (10), -0.14256 (10), -0.14255 (10), -0.13942 (10), -0.13940 (10), -0.13831 (10), -0.13692 (10), -0.13654 (10), -0.13644 (10), -0.13619 (10), -0.13610 (10), -0.13386 (10), -0.13385 (10), -0.13363 (10), -0.13319 (10), -0.13105 (10), -0.13071 (10), -0.13001 (10), -0.12914 (10), -0.12854 (10), 
Length of domains: 268
Time: pickout 0.0064    decision 0.0215    set_bounds 0.0097    solve 0.1119    add 0.0178    
Accumulated time: pickout 0.0068    decision 0.0451    set_bounds 0.0281    solve 0.2861    add 0.0814    
Current (lb-rhs): -0.14480751752853394
350 domains visited
Cumulative time: 0.4740591049194336

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 268
splitting decisions: 
split level 0: [/input-8, 1581] [/input-8, 1581] [/input-8, 1573] [/input-8, 794] [/input-8, 1571] [/input-8, 1581] [/input-8, 1573] [/input-8, 794] [/input-8, 1581] [/input-8, 1581] 
pruning_in_iteration open status: False
ratio of positive domain = 19 / 536 = 0.035447761194029814
pruning-in-iteration extra time: 5.221366882324219e-05
Time: prepare 0.0112    bound 0.1000    transfer 0.0082    finalize 0.0044    func 0.1239    
Accumulated time: func 0.4098    prepare 0.0214    bound 0.3647    transfer 0.0161    finalize 0.0084    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14151 (11), -0.13927 (11), -0.13924 (11), -0.13611 (11), -0.13599 (11), -0.13526 (11), -0.13351 (11), -0.13332 (11), -0.13312 (11), -0.13311 (11), -0.13311 (11), -0.13235 (11), -0.13112 (11), -0.13085 (11), -0.13052 (11), -0.13012 (11), -0.13008 (11), -0.12977 (11), -0.12795 (11), -0.12789 (11), 
Length of domains: 515
Time: pickout 0.0069    decision 0.0308    set_bounds 0.0120    solve 0.1240    add 0.0928    
Accumulated time: pickout 0.0137    decision 0.0759    set_bounds 0.0401    solve 0.4101    add 0.1743    
Current (lb-rhs): -0.14151263236999512
865 domains visited
Cumulative time: 0.7479360103607178

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 515
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1637] [/input-8, 1581] [/input-8, 1573] [/input-8, 796] [/input-8, 1637] [/input-8, 1581] [/input-8, 1573] [/input-8, 1571] [/input-8, 460] 
pruning_in_iteration open status: False
ratio of positive domain = 16 / 1030 = 0.01553398058252431
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.0198    bound 0.1149    transfer 0.0074    finalize 0.0085    func 0.1508    
Accumulated time: func 0.5606    prepare 0.0414    bound 0.4795    transfer 0.0235    finalize 0.0169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13850 (12), -0.13626 (12), -0.13623 (12), -0.13318 (12), -0.13309 (12), -0.13271 (12), -0.13077 (12), -0.13069 (12), -0.13056 (12), -0.13028 (12), -0.12973 (12), -0.12915 (12), -0.12884 (12), -0.12795 (12), -0.12749 (12), -0.12746 (12), -0.12693 (12), -0.12691 (12), -0.12687 (12), -0.12684 (12), 
Length of domains: 1014
Time: pickout 0.0225    decision 0.0423    set_bounds 0.0248    solve 0.1510    add 0.0927    
Accumulated time: pickout 0.0361    decision 0.1182    set_bounds 0.0650    solve 0.5611    add 0.2669    
Current (lb-rhs): -0.1385035514831543
1879 domains visited
Cumulative time: 1.0892906188964844

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 1014
splitting decisions: 
split level 0: [/input-8, 460] [/input-8, 460] [/input-8, 1612] [/input-8, 1612] [/input-8, 1581] [/input-8, 796] [/input-8, 1612] [/input-8, 1612] [/input-8, 796] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 139 / 2028 = 0.06854043392504927
pruning-in-iteration extra time: 6.341934204101562e-05
Time: prepare 0.0394    bound 0.1305    transfer 0.0270    finalize 0.0136    func 0.2107    
Accumulated time: func 0.7713    prepare 0.0810    bound 0.6101    transfer 0.0505    finalize 0.0305    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13501 (13), -0.13270 (13), -0.13252 (13), -0.13124 (13), -0.13015 (13), -0.12974 (13), -0.12936 (13), -0.12915 (13), -0.12902 (13), -0.12717 (13), -0.12711 (13), -0.12696 (13), -0.12695 (13), -0.12679 (13), -0.12610 (13), -0.12557 (13), -0.12554 (13), -0.12516 (13), -0.12493 (13), -0.12446 (13), 
Length of domains: 1882
Time: pickout 0.0292    decision 0.0723    set_bounds 0.0470    solve 0.2110    add 0.1097    
Accumulated time: pickout 0.0653    decision 0.1905    set_bounds 0.1120    solve 0.7721    add 0.3766    
Current (lb-rhs): -0.13500535488128662
3761 domains visited
Cumulative time: 1.5694923400878906

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1882
splitting decisions: 
split level 0: [/input-8, 796] [/input-8, 1571] [/input-8, 1637] [/input-8, 460] [/input-8, 1571] [/input-8, 1571] [/input-8, 1637] [/input-8, 796] [/input-8, 460] [/input-8, 174] 
pruning_in_iteration open status: False
ratio of positive domain = 358 / 3764 = 0.09511158342189163
pruning-in-iteration extra time: 6.4849853515625e-05
Time: prepare 0.0841    bound 0.2014    transfer 0.0529    finalize 0.0267    func 0.3654    
Accumulated time: func 1.1367    prepare 0.1656    bound 0.8114    transfer 0.1034    finalize 0.0572    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13195 (14), -0.12960 (14), -0.12908 (14), -0.12903 (14), -0.12769 (14), -0.12717 (14), -0.12695 (14), -0.12685 (14), -0.12676 (14), -0.12664 (14), -0.12644 (14), -0.12582 (14), -0.12494 (14), -0.12494 (14), -0.12477 (14), -0.12459 (14), -0.12428 (14), -0.12394 (14), -0.12380 (14), -0.12376 (14), 
Length of domains: 3394
Time: pickout 0.0467    decision 0.1307    set_bounds 0.4509    solve 0.3662    add 0.1400    
Accumulated time: pickout 0.1120    decision 0.3212    set_bounds 0.5629    solve 1.1383    add 0.5166    
Current (lb-rhs): -0.13194847106933594
7155 domains visited
Cumulative time: 2.719459056854248

BaB round 7
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 3394
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1571] [/input-8, 174] [/input-8, 1182] [/input-8, 1571] [/input-8, 309] [/input-8, 1637] [/input, 935] [/input-8, 1637] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 749 / 6788 = 0.11034177961107838
pruning-in-iteration extra time: 6.246566772460938e-05
Time: prepare 0.1473    bound 0.3172    transfer 0.0314    finalize 0.0410    func 0.5378    
Accumulated time: func 1.6746    prepare 0.3131    bound 1.1287    transfer 0.1349    finalize 0.0982    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13063 (15), -0.12829 (15), -0.12773 (15), -0.12770 (15), -0.12636 (15), -0.12585 (15), -0.12560 (15), -0.12554 (15), -0.12543 (15), -0.12525 (15), -0.12449 (15), -0.12378 (15), -0.12365 (15), -0.12363 (15), -0.12346 (15), -0.12327 (15), -0.12243 (15), -0.12241 (15), -0.12228 (15), -0.12218 (15), 
Length of domains: 6024
Time: pickout 0.0697    decision 0.2064    set_bounds 0.3275    solve 0.5391    add 0.1554    
Accumulated time: pickout 0.1817    decision 0.5277    set_bounds 0.8904    solve 1.6774    add 0.6720    
Current (lb-rhs): -0.13063359260559082
13179 domains visited
Cumulative time: 4.041394948959351

BaB round 8
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0032
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1637] [/input-8, 174] [/input-8, 174] [/input-8, 1571] [/input-8, 1182] [/input-8, 1571] [/input-8, 1571] [/input-8, 1182] [/input-8, 174] [/input-8, 174] 
pruning_in_iteration open status: False
ratio of positive domain = 940 / 8192 = 0.11474609375
pruning-in-iteration extra time: 8.535385131835938e-05
Time: prepare 0.1795    bound 0.3649    transfer 0.0465    finalize 0.0608    func 0.6532    
Accumulated time: func 2.3278    prepare 0.4929    bound 1.4935    transfer 0.1813    finalize 0.1590    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12986 (16), -0.12751 (16), -0.12692 (16), -0.12691 (16), -0.12559 (16), -0.12506 (16), -0.12482 (16), -0.12476 (16), -0.12466 (16), -0.12370 (16), -0.12289 (16), -0.12284 (16), -0.12267 (16), -0.12249 (16), -0.12246 (16), -0.12172 (16), -0.12166 (16), -0.12028 (16), -0.12021 (16), -0.12004 (16), 
Length of domains: 9153
Time: pickout 0.0705    decision 0.2465    set_bounds 0.3392    solve 0.6547    add 0.2132    
Accumulated time: pickout 0.2522    decision 0.7741    set_bounds 1.2296    solve 2.3321    add 0.8852    
Current (lb-rhs): -0.12985527515411377
20404 domains visited
current_vram/total_varm: 10.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.599728107452393

BaB round 9
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0018
batch: 8192
splitting decisions: 
split level 0: [/input-8, 174] [/input-8, 460] [/input-8, 1571] [/input-8, 1637] [/input-8, 1182] [/input-8, 309] [/input-8, 1571] [/input-8, 1573] [/input-8, 174] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 2714 / 16384 = 0.1656494140625
pruning-in-iteration extra time: 9.632110595703125e-05
Time: prepare 0.3513    bound 0.6868    transfer 0.0891    finalize 0.1200    func 1.2484    
Accumulated time: func 3.5762    prepare 0.8447    bound 2.1803    transfer 0.2705    finalize 0.2790    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12608 (17), -0.12534 (17), -0.12373 (17), -0.12313 (17), -0.12313 (17), -0.12300 (17), -0.12240 (17), -0.12240 (17), -0.12180 (17), -0.12175 (17), -0.12129 (17), -0.12107 (17), -0.12104 (17), -0.12098 (17), -0.12087 (17), -0.12056 (17), -0.12031 (17), -0.12024 (17), -0.12014 (17), -0.11992 (17), 
Length of domains: 14567
Time: pickout 0.1418    decision 0.7708    set_bounds 0.5965    solve 1.2520    add 0.1767    
Accumulated time: pickout 0.3940    decision 1.5450    set_bounds 1.8261    solve 3.5842    add 1.0619    
Current (lb-rhs): -0.1260772943496704
34010 domains visited
current_vram/total_varm: 18.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.629994630813599

BaB round 10
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 14567
splitting decisions: 
split level 0: [/input, 935] [/input-8, 460] [/input-8, 1571] [/input-8, 460] [/input-8, 1637] [/input-8, 460] [/input-8, 309] [/input-8, 1571] [/input, 935] [/input-8, 460] 
pruning_in_iteration open status: True
ratio of positive domain = 6025 / 29134 = 0.20680304798517202
pruning-in-iteration extra time: 0.00011873245239257812
Time: prepare 0.6770    bound 1.2012    transfer 0.1678    finalize 0.2372    func 2.2887    
Accumulated time: func 5.8649    prepare 1.5223    bound 3.3815    transfer 0.4383    finalize 0.5162    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12305 (18), -0.12204 (18), -0.12135 (18), -0.12101 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11970 (18), -0.11911 (18), -0.11910 (18), -0.11901 (18), -0.11878 (18), -0.11872 (18), -0.11867 (18), -0.11855 (18), -0.11841 (18), -0.11840 (18), -0.11839 (18), -0.11826 (18), -0.11807 (18), 
Length of domains: 23109
Time: pickout 0.2469    decision 1.1812    set_bounds 1.1353    solve 2.2963    add 0.2148    
Accumulated time: pickout 0.6409    decision 2.7261    set_bounds 2.9613    solve 5.8805    add 1.2766    
Current (lb-rhs): -0.12305277585983276
57119 domains visited
Cumulative time: 13.785321950912476

BaB round 11
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 538 constraints, 20741 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.1864
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3257] [/input-8, 309] [/input-8, 1819] [/input-8, 1637] [/input-8, 460] [/input-8, 1573] [/input-12, 8] [/input-8, 174] [/input, 3259] [/input-8, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12075328826904297
10 lb beta sum: 17.624727249145508, worst -0.06911379098892212
pruning_in_iteration open status: True
ratio of positive domain = 28056 / 32768 = 0.856201171875
pruning-in-iteration extra time: 0.005983829498291016
Time: prepare 0.8245    bound 3.6123    transfer 0.1857    finalize 0.2364    func 5.4522    
Accumulated time: func 11.3171    prepare 2.3473    bound 6.9938    transfer 0.6240    finalize 0.7526    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12305 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11872 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), -0.11583 (18), -0.11574 (18), 
Length of domains: 11437
Time: pickout 0.2487    decision 2.0238    set_bounds 1.3166    solve 5.4596    add 0.1640    
Accumulated time: pickout 0.8896    decision 4.7499    set_bounds 4.2779    solve 11.3401    add 1.4406    
Current (lb-rhs): -0.12305277585983276
61831 domains visited
Cumulative time: 23.33731746673584

BaB round 12
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 996 constraints, 31071 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2701
batch: 11437
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1637] [/input-8, 1819] [/input-8, 174] [/input-8, 174] [/input-8, 460] [/input-8, 174] [/input-8, 1613] [/input-8, 174] [/input-8, 460] [/input, 935] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12176334857940674
10 lb beta sum: 13.587370872497559, worst -0.05870288610458374
pruning_in_iteration open status: True
ratio of positive domain = 17293 / 22874 = 0.7560111917460872
pruning-in-iteration extra time: 0.004335641860961914
Time: prepare 0.7656    bound 4.2095    transfer 0.1311    finalize 0.1708    func 5.4262    
Accumulated time: func 16.7433    prepare 3.1133    bound 11.2033    transfer 0.7551    finalize 0.9234    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04529 (19), -0.04518 (19), -0.04405 (20), -0.04361 (19), -0.04306 (19), -0.04301 (20), -0.04291 (19), -0.04274 (19), -0.04257 (20), -0.04245 (20), -0.04242 (19), -0.04237 (19), -0.04201 (19), -0.04159 (20), -0.04133 (20), -0.04131 (19), -0.04120 (20), -0.04117 (20), -0.04100 (19), -0.04097 (19), 
Length of domains: 5581
Time: pickout 0.1817    decision 0.6759    set_bounds 0.7742    solve 5.4327    add 0.1653    
Accumulated time: pickout 1.0713    decision 5.4257    set_bounds 5.0522    solve 16.7728    add 1.6059    
Current (lb-rhs): -0.04528993368148804
67412 domains visited
Cumulative time: 30.962059259414673

BaB round 13
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1213 constraints, 35973 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5004
batch: 5581
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 1573] [/input-8, 1819] [/input-8, 1819] [/input-8, 1819] [/input-8, 1819] [/input-8, 1573] [/input-8, 1573] [/input-8, 1819] [/input, 3259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11980247497558594
10 lb beta sum: 7.133241176605225, worst -0.05728781223297119
pruning_in_iteration open status: True
ratio of positive domain = 4257 / 11162 = 0.3813832646479126
pruning-in-iteration extra time: 0.0016963481903076172
Time: prepare 0.2753    bound 2.9588    transfer 0.0653    finalize 0.0987    func 3.4719    
Accumulated time: func 20.2152    prepare 3.3889    bound 14.1621    transfer 0.8204    finalize 1.0221    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04301 (20), -0.04251 (20), -0.04112 (21), -0.04005 (21), -0.03988 (21), -0.03920 (21), -0.03918 (20), -0.03917 (21), -0.03913 (20), -0.03892 (21), -0.03872 (21), -0.03859 (20), -0.03841 (21), -0.03839 (21), -0.03837 (20), -0.03826 (20), -0.03819 (21), -0.03817 (21), -0.03816 (21), -0.03813 (21), 
Length of domains: 6905
Time: pickout 0.1175    decision 0.3354    set_bounds 0.4296    solve 3.4760    add 0.1722    
Accumulated time: pickout 1.1888    decision 5.7612    set_bounds 5.4818    solve 20.2488    add 1.7781    
Current (lb-rhs): -0.04300680756568909
74317 domains visited
Cumulative time: 36.05032444000244

BaB round 14
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1259 constraints, 37256 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3221
batch: 6905
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3259] [/input-8, 1819] [/input, 3259] [/input, 3259] [/input-8, 174] [/input-8, 1819] [/input-8, 1819] [/input-8, 174] [/input-8, 1819] [/input, 3259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11835688352584839
10 lb beta sum: 7.870363712310791, worst -0.055997371673583984
pruning_in_iteration open status: False
ratio of positive domain = 2754 / 13810 = 0.19942070963070235
pruning-in-iteration extra time: 0.0002918243408203125
Time: prepare 0.3659    bound 3.7743    transfer 0.0808    finalize 0.1078    func 4.4230    
Accumulated time: func 24.6382    prepare 3.7553    bound 17.9364    transfer 0.9012    finalize 1.1298    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03928 (21), -0.03768 (21), -0.03735 (21), -0.03722 (22), -0.03718 (22), -0.03713 (22), -0.03704 (21), -0.03664 (22), -0.03620 (21), -0.03619 (21), -0.03598 (21), -0.03591 (21), -0.03579 (22), -0.03559 (21), -0.03553 (21), -0.03552 (22), -0.03548 (22), -0.03546 (21), -0.03525 (21), -0.03511 (21), 
Length of domains: 9102
Time: pickout 0.1232    decision 0.6287    set_bounds 0.4988    solve 4.4274    add 0.1666    
Accumulated time: pickout 1.3121    decision 6.3899    set_bounds 5.9805    solve 24.6763    add 1.9448    
Current (lb-rhs): -0.03928172588348389
83419 domains visited
Cumulative time: 42.27620577812195

BaB round 15
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1327 constraints, 38764 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3332
batch: 9102
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 174] [/input, 3259] [/input-8, 174] [/input-8, 174] [/input, 3259] [/input-8, 1182] [/input-8, 174] [/input, 3259] [/input, 3259] [/input, 3259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11636543273925781
10 lb beta sum: 8.434391021728516, worst -0.060363173484802246
pruning_in_iteration open status: False
ratio of positive domain = 2127 / 18204 = 0.11684245220830591
pruning-in-iteration extra time: 0.0004360675811767578
Time: prepare 0.5159    bound 5.0830    transfer 0.1035    finalize 0.1463    func 6.2318    
Accumulated time: func 30.8700    prepare 4.2716    bound 23.0193    transfer 1.0047    finalize 1.2761    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03704 (22), -0.03673 (22), -0.03664 (23), -0.03664 (23), -0.03619 (23), -0.03596 (23), -0.03580 (22), -0.03575 (22), -0.03559 (22), -0.03552 (23), -0.03548 (23), -0.03548 (23), -0.03514 (22), -0.03497 (23), -0.03478 (22), -0.03478 (22), -0.03473 (22), -0.03469 (22), -0.03465 (23), -0.03461 (23), 
Length of domains: 14228
Time: pickout 0.1754    decision 0.7406    set_bounds 0.5607    solve 6.2363    add 0.1876    
Accumulated time: pickout 1.4874    decision 7.1304    set_bounds 6.5413    solve 30.9126    add 2.1323    
Current (lb-rhs): -0.03704112768173218
97647 domains visited
Cumulative time: 50.55927848815918

BaB round 16
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1348 constraints, 39063 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3364
batch: 14228
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 309] [/input, 3259] [/input, 3259] [/input-8, 309] [/input-8, 309] [/input-12, 8] [/input-8, 309] [/input, 3259] [/input-8, 309] [/input-8, 309] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11498481035232544
10 lb beta sum: 8.706259727478027, worst -0.054285258054733276
pruning_in_iteration open status: False
ratio of positive domain = 3286 / 28456 = 0.11547652516165308
pruning-in-iteration extra time: 0.0007147789001464844
Time: prepare 0.7920    bound 8.0243    transfer 0.1629    finalize 0.2021    func 9.3673    
Accumulated time: func 40.2373    prepare 5.0640    bound 31.0436    transfer 1.1676    finalize 1.4783    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03536 (23), -0.03466 (23), -0.03421 (23), -0.03407 (23), -0.03397 (23), -0.03352 (23), -0.03329 (24), -0.03304 (23), -0.03303 (24), -0.03302 (23), -0.03290 (23), -0.03290 (23), -0.03286 (23), -0.03279 (24), -0.03268 (23), -0.03256 (23), -0.03242 (24), -0.03239 (23), -0.03227 (23), -0.03213 (24), 
Length of domains: 21467
Time: pickout 0.2670    decision 1.0821    set_bounds 0.8801    solve 9.3744    add 0.2064    
Accumulated time: pickout 1.7545    decision 8.2125    set_bounds 7.4214    solve 40.2869    add 2.3387    
Current (lb-rhs): -0.035363852977752686
119114 domains visited
Cumulative time: 62.87907004356384

BaB round 17
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1390 constraints, 39727 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7573
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3259] [/input, 3259] [/input, 3257] [/input, 983] [/input, 983] [/input, 983] [/input, 983] [/input, 983] [/input, 983] [/input, 983] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11329352855682373
10 lb beta sum: 8.960058212280273, worst -0.05668240785598755
pruning_in_iteration open status: False
ratio of positive domain = 4981 / 32768 = 0.152008056640625
pruning-in-iteration extra time: 0.000843048095703125
Time: prepare 0.9393    bound 9.4731    transfer 0.1836    finalize 0.5780    func 11.3864    
Accumulated time: func 51.6237    prepare 6.0037    bound 40.5167    transfer 1.3512    finalize 2.0562    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03432 (24), -0.03329 (24), -0.03296 (24), -0.03279 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03184 (24), -0.03179 (24), -0.03152 (25), -0.03150 (25), -0.03142 (24), -0.03138 (25), -0.03134 (25), -0.03131 (24), -0.03130 (24), -0.03125 (24), -0.03120 (24), -0.03104 (24), -0.03097 (24), 
Length of domains: 27726
Time: pickout 0.3611    decision 1.8202    set_bounds 0.7794    solve 11.3945    add 0.2221    
Accumulated time: pickout 2.1156    decision 10.0327    set_bounds 8.2008    solve 51.6814    add 2.5608    
Current (lb-rhs): -0.034321874380111694
141757 domains visited
Cumulative time: 78.29999041557312

BaB round 18
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1406 constraints, 39157 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6281
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 983] [/input-8, 166] [/input-8, 166] [/input, 983] [/input, 983] [/input-8, 166] [/input, 983] [/input-8, 246] [/input, 2779] [/input, 2779] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1112060546875
10 lb beta sum: 9.17673397064209, worst -0.05559664964675903
pruning_in_iteration open status: False
ratio of positive domain = 4472 / 32768 = 0.136474609375
pruning-in-iteration extra time: 0.000835418701171875
Time: prepare 0.9170    bound 9.4544    transfer 0.1816    finalize 0.6335    func 11.3984    
Accumulated time: func 63.0221    prepare 6.9211    bound 49.9711    transfer 1.5328    finalize 2.6897    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03164 (25), -0.03134 (25), -0.03131 (25), -0.03120 (24), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (26), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 34376
Time: pickout 0.3180    decision 1.8242    set_bounds 0.7463    solve 11.4056    add 0.3190    
Accumulated time: pickout 2.4336    decision 11.8569    set_bounds 8.9470    solve 63.0870    add 2.8798    
Current (lb-rhs): -0.033292531967163086
164791 domains visited
Cumulative time: 93.64276671409607

BaB round 19
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1429 constraints, 39462 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3390
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 935] [/input-8, 246] [/input, 935] [/input, 972] [/input, 3257] [/input, 3257] [/input, 3257] [/input, 3257] [/input, 972] [/input, 972] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10757535696029663
10 lb beta sum: 9.270151138305664, worst -0.05514991283416748
pruning_in_iteration open status: False
ratio of positive domain = 3612 / 32768 = 0.1102294921875
pruning-in-iteration extra time: 0.0008614063262939453
Time: prepare 0.9142    bound 9.7983    transfer 0.1789    finalize 0.2317    func 11.3390    
Accumulated time: func 74.3611    prepare 7.8358    bound 59.7693    transfer 1.7117    finalize 2.9214    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 42798
Time: pickout 0.3185    decision 1.8643    set_bounds 1.1483    solve 11.3474    add 0.2511    
Accumulated time: pickout 2.7520    decision 13.7212    set_bounds 10.0954    solve 74.4343    add 3.1309    
Current (lb-rhs): -0.033292531967163086
189597 domains visited
Cumulative time: 109.02889204025269

BaB round 20
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1434 constraints, 38972 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7197
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 983] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input, 3259] [/input-8, 246] [/input, 3257] [/input, 3257] [/input-8, 246] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10559660196304321
10 lb beta sum: 9.363771438598633, worst -0.05385643243789673
pruning_in_iteration open status: False
ratio of positive domain = 4373 / 32768 = 0.133453369140625
pruning-in-iteration extra time: 0.0008504390716552734
Time: prepare 0.9092    bound 9.8115    transfer 0.1792    finalize 0.2357    func 11.3527    
Accumulated time: func 85.7138    prepare 8.7454    bound 69.5809    transfer 1.8909    finalize 3.1571    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 50329
Time: pickout 0.3430    decision 1.6809    set_bounds 1.1857    solve 11.9075    add 0.2520    
Accumulated time: pickout 3.0950    decision 15.4021    set_bounds 11.2811    solve 86.3418    add 3.3829    
Current (lb-rhs): -0.033292531967163086
213512 domains visited
Cumulative time: 125.21337413787842

BaB round 21
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1433 constraints, 38840 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3349
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 983] [/input-8, 246] [/input-8, 246] [/input-8, 246] [/input-8, 246] [/input-8, 246] [/input-8, 246] [/input-8, 246] [/input-8, 246] [/input, 983] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10383784770965576
10 lb beta sum: 9.378460884094238, worst -0.05288958549499512
pruning_in_iteration open status: False
ratio of positive domain = 3969 / 32768 = 0.121124267578125
pruning-in-iteration extra time: 0.0008594989776611328
Time: prepare 0.8972    bound 9.8185    transfer 0.1806    finalize 0.2403    func 11.3518    
Accumulated time: func 97.0656    prepare 9.6429    bound 79.3994    transfer 2.0715    finalize 3.3974    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 58517
Time: pickout 0.3259    decision 1.6707    set_bounds 1.2570    solve 11.3603    add 0.2539    
Accumulated time: pickout 3.4209    decision 17.0728    set_bounds 12.5381    solve 97.7022    add 3.6368    
Current (lb-rhs): -0.033292531967163086
238084 domains visited
Cumulative time: 140.53920531272888

BaB round 22
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1435 constraints, 38625 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8584
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 972] [/input, 972] [/input, 972] [/input, 972] [/input, 949] [/input, 988] [/input, 988] [/input, 972] [/input, 988] [/input, 988] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10190987586975098
10 lb beta sum: 9.608953475952148, worst -0.0475638210773468
pruning_in_iteration open status: False
ratio of positive domain = 5387 / 32768 = 0.164398193359375
pruning-in-iteration extra time: 0.0010771751403808594
Time: prepare 0.9317    bound 9.8209    transfer 0.1824    finalize 0.2413    func 11.3927    
Accumulated time: func 108.4583    prepare 10.5751    bound 89.2203    transfer 2.2539    finalize 3.6387    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 64930
Time: pickout 0.3259    decision 1.6712    set_bounds 1.3950    solve 11.4013    add 0.2402    
Accumulated time: pickout 3.7468    decision 18.7440    set_bounds 13.9331    solve 109.1034    add 3.8770    
Current (lb-rhs): -0.033292531967163086
260881 domains visited
Cumulative time: 156.5704584121704

BaB round 23
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1465 constraints, 38854 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3493
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 949] [/input, 988] [/input-8, 246] [/input, 972] [/input, 949] [/input, 972] [/input-8, 916] [/input, 662] [/input, 662] [/input-8, 1805] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1007843017578125
10 lb beta sum: 9.84770679473877, worst -0.04890748858451843
pruning_in_iteration open status: False
ratio of positive domain = 5154 / 32768 = 0.15728759765625
pruning-in-iteration extra time: 0.000865936279296875
Time: prepare 0.9397    bound 9.9609    transfer 0.1794    finalize 0.9076    func 12.2004    
Accumulated time: func 120.6587    prepare 11.5152    bound 99.1812    transfer 2.4332    finalize 4.5463    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 70271
Time: pickout 0.3608    decision 2.3780    set_bounds 0.7621    solve 12.2079    add 0.4158    
Accumulated time: pickout 4.1076    decision 21.1220    set_bounds 14.6952    solve 121.3113    add 4.2928    
Current (lb-rhs): -0.033292531967163086
282606 domains visited
Cumulative time: 173.1530110836029

BaB round 24
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1456 constraints, 38748 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3371
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2120] [/input, 2120] [/input, 2120] [/input, 949] [/input, 3564] [/input-8, 166] [/input, 3564] [/input, 2120] [/input, 2120] [/input, 2120] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09912586212158203
10 lb beta sum: 9.809627532958984, worst -0.04459182918071747
pruning_in_iteration open status: False
ratio of positive domain = 4375 / 32768 = 0.133514404296875
pruning-in-iteration extra time: 0.0008425712585449219
Time: prepare 0.9339    bound 9.7852    transfer 0.1849    finalize 0.2404    func 11.3633    
Accumulated time: func 132.0220    prepare 12.4495    bound 108.9663    transfer 2.6181    finalize 4.7867    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 76999
Time: pickout 0.3366    decision 2.1797    set_bounds 0.7667    solve 12.1556    add 0.2441    
Accumulated time: pickout 4.4442    decision 23.3017    set_bounds 15.4619    solve 133.4669    add 4.5369    
Current (lb-rhs): -0.033292531967163086
305718 domains visited
Cumulative time: 189.27990102767944

BaB round 25
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
cut /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts: total 1479 constraints, 38915 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3393
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 595] [/input, 949] [/input-8, 595] [/input-8, 166] [/input, 949] [/input, 949] [/input-8, 595] [/input, 949] [/input-8, 595] [/input-8, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0974816083908081
10 lb beta sum: 9.882164001464844, worst -0.0476832389831543
pruning_in_iteration open status: False
ratio of positive domain = 5430 / 32768 = 0.16571044921875
pruning-in-iteration extra time: 0.0008831024169921875
Time: prepare 0.9364    bound 10.0579    transfer 0.1779    finalize 1.1279    func 12.5155    
Accumulated time: func 144.5376    prepare 13.3864    bound 119.0242    transfer 2.7959    finalize 5.9145    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03329 (24), -0.03279 (24), -0.03207 (25), -0.03194 (24), -0.03191 (25), -0.03184 (24), -0.03144 (26), -0.03134 (25), -0.03120 (24), -0.03106 (26), -0.03104 (24), -0.03097 (25), -0.03090 (24), -0.03072 (27), -0.03062 (24), -0.03056 (24), -0.03050 (24), -0.03047 (26), -0.03042 (24), -0.03022 (23), 
Length of domains: 83039
Time: pickout 0.3491    decision 1.7033    set_bounds 0.7743    solve 12.5228    add 0.2538    
Accumulated time: pickout 4.7934    decision 25.0050    set_bounds 16.2362    solve 145.9896    add 4.7907    
Current (lb-rhs): -0.033292531967163086
328142 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 1
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=1_30690799.log
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=2_30690799.mps
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=2_30690799.cuts
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=2_30690799.indx
removing /tmp/abcrown_cuts_3149/cplexmip_lay-16_starttime=1730305411_idx=198_spec=2_30690799.log
found process for pidx=1
kill process for pidx=1
found process for pidx=2
Result: unknown in 209.2240 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
         -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 288, 1, 674] with unstable size 287 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 674] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [287]; unstable size 287; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 287] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 287] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81797171, -0.16427088,  0.28392220, -0.02352804,  0.05720687,
          0.13988894,  0.34796518,  2.02355814, -0.78494549]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
         -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.43it/s]100%|██████████| 1/1 [00:00<00:00,  8.42it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.00846672, -19.10502815, -19.10246658, -18.60502434, -18.97018051,
          -19.00593376, -17.74817657, -19.73847771, -21.61167336, -18.23115921],
         [-20.00846672, -19.10502815, -19.10246658, -18.60502434, -18.97018051,
          -19.00593376, -17.74817657, -19.73847771, -21.61167336, -18.23115921]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.35685158, 0.85684776, 0.48298264]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1218 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.675459146499634
alpha/beta optimization time: 1.248262882232666
initial alpha-crown bounds: tensor([[ 0.93886685,  0.00690556,  0.35141134,  0.04002094,  0.13587260,
          0.21445954,  0.44983995,  2.16908216, -0.63100004]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6310000419616699
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6505 seconds.
lower bounds for all target labels: [0.9388689994812012, 0.006901741027832031, 0.3514101505279541, 0.0400204062461853, 0.13587212562561035, 0.21446013450622559, 0.4498407244682312, 2.1690807342529297, -0.6310014724731445]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4625084400177
Verifying property 0 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1690821647644043.

Properties batch 1, size 1
Remaining timeout: 198.20753860473633
Verifying property 1 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9388668537139893.

Properties batch 2, size 1
Remaining timeout: 198.09363269805908
Verifying property 2 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4498399496078491.

Properties batch 3, size 1
Remaining timeout: 197.98856449127197
Verifying property 3 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3514113426208496.

Properties batch 4, size 1
Remaining timeout: 197.86944937705994
Verifying property 4 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21445953845977783.

Properties batch 5, size 1
Remaining timeout: 197.76517701148987
Verifying property 5 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13587260246276855.

Properties batch 6, size 1
Remaining timeout: 197.65217924118042
Verifying property 6 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.04002094268798828.

Properties batch 7, size 1
Remaining timeout: 197.53689694404602
Verifying property 7 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.006905555725097656.

Properties batch 8, size 1
Remaining timeout: 197.42940616607666
Verifying property 8 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63100004]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
        -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63100004]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 674
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 282
Node /15 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 987
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008308887481689453
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 72] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 86] 
split level 5: [/input-12, 32] 
split level 6: [/input-8, 868] 
split level 7: [/input-12, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.005459308624267578
Time: prepare 0.0035    bound 0.1369    transfer 0.0063    finalize 0.0037    func 0.1505    
Accumulated time: func 0.1505    prepare 0.0040    bound 0.1369    transfer 0.0063    finalize 0.0037    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05537 (8), -0.05080 (8), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0277    set_bounds 0.0243    solve 0.1506    add 0.0180    
Accumulated time: pickout 0.0006    decision 0.0277    set_bounds 0.0243    solve 0.1506    add 0.0180    
Current (lb-rhs): -0.05537080764770508
2 domains visited
Cumulative time: 0.2349252700805664

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 2
splitting decisions: 
split level 0: [/input-8, 870] [/input-8, 870] 
split level 1: [/input-8, 155] [/input-8, 155] 
split level 2: [/input-8, 877] [/input-8, 877] 
split level 3: [/input-8, 1380] [/input-8, 156] 
split level 4: [/input-8, 156] [/input-8, 1044] 
split level 5: [/input-8, 1044] [/input-8, 1036] 
split level 6: [/input-8, 1370] [/input-8, 1562] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.030632019042969e-05
Time: prepare 0.0055    bound 0.0050    transfer 0.0005    finalize 0.0022    func 0.0132    
Accumulated time: func 0.1637    prepare 0.0098    bound 0.1420    transfer 0.0069    finalize 0.0059    
all_split False
Length of domains: 0
Time: pickout 0.0011    decision 0.0281    set_bounds 0.0176    solve 0.0132    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0558    set_bounds 0.0419    solve 0.1638    add 0.0181    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.29622387886047363

the mip building process is not terminated yet, kill it
Result: safe in 3.2601 seconds
############# Summary #############
Final verified acc: 54.50000000000001% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 109 , total falsified (unsafe/sat): 85 , timeout: 6
mean time for ALL instances (total 200):8.493661513030547, max time: 224.64584875106812
mean time for verified SAFE instances(total 109): 3.820382422263469, max time: 93.9813916683197
mean time for verified (SAFE + UNSAFE) instances (total 194): 2.177603484429035, max time: [2.1545145511627197, 6.5550150871276855, 0.06218743324279785, 0.03754472732543945, 0.06198763847351074, 93.9813916683197, 0.05050086975097656, 0.03552722930908203, 0.3410928249359131, 3.0346927642822266, 0.06938910484313965, 0.048537254333496094, 0.03345632553100586, 3.013273239135742, 0.04127669334411621, 0.04508686065673828, 0.034526824951171875, 0.05289888381958008, 0.06299328804016113, 0.041707515716552734, 0.04821896553039551, 2.70802903175354, 0.04411458969116211, 0.04594993591308594, 0.05670452117919922, 0.06537127494812012, 0.047473907470703125, 2.68786883354187, 0.06386733055114746, 0.0313572883605957, 0.04492688179016113, 2.6915464401245117, 0.06956243515014648, 33.389251947402954, 0.08747696876525879, 0.06823325157165527, 3.1120760440826416, 48.518412351608276, 3.0715911388397217, 0.06726336479187012, 0.06935667991638184, 0.04766511917114258, 0.06623101234436035, 0.047419071197509766, 0.06566715240478516, 0.06297492980957031, 39.32510185241699, 0.07364964485168457, 0.06915545463562012, 17.768281936645508, 0.0693514347076416, 0.07036614418029785, 0.06400227546691895, 3.0177419185638428, 3.0671334266662598, 0.3791322708129883, 0.0674750804901123, 3.237558364868164, 0.07511591911315918, 0.06661152839660645, 0.06773018836975098, 3.0466344356536865, 0.06853652000427246, 0.07031941413879395, 0.06686878204345703, 0.06809091567993164, 0.0697014331817627, 3.1543283462524414, 0.06846165657043457, 37.7194242477417, 0.044832468032836914, 2.9749207496643066, 0.07001471519470215, 3.2523961067199707, 0.050899505615234375, 0.05339336395263672, 0.06577587127685547, 0.02495408058166504, 0.04615950584411621, 0.035308837890625, 0.04517722129821777, 0.0453181266784668, 0.06415653228759766, 31.675919771194458, 0.06176257133483887, 4.508333206176758, 0.06940340995788574, 2.9034619331359863, 0.06441092491149902, 33.00739622116089, 0.06675434112548828, 0.06951451301574707, 0.06319236755371094, 0.06193375587463379, 0.5496366024017334, 0.08005023002624512, 0.07196974754333496, 0.07619595527648926, 3.765293836593628, 0.0992581844329834, 3.6093854904174805, 0.09160900115966797, 3.2686045169830322, 3.1737756729125977, 0.07468605041503906, 0.06063079833984375, 0.06742620468139648, 0.06072115898132324, 3.260066032409668]
mean time for verified SAFE + TIMEOUT instances (total 115): 14.719121700784434, max time: [209.60161590576172, 224.64584875106812, 203.79627466201782, 205.19196152687073, 223.81762409210205, 209.2239866256714] 
mean time for verified UNSAFE instances (total 85): 0.07098108179428998, max time: 0.12009048461914062
safe-incomplete (total 79), index: [0, 7, 8, 11, 14, 17, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 37, 39, 40, 41, 42, 47, 49, 51, 52, 55, 60, 62, 68, 69, 70, 71, 73, 74, 75, 79, 81, 85, 86, 89, 98, 103, 107, 109, 110, 114, 115, 116, 117, 118, 121, 131, 133, 136, 139, 140, 142, 144, 146, 147, 148, 153, 157, 159, 161, 164, 166, 168, 171, 175, 177, 179, 180, 182, 186, 190, 192, 193, 197]
unsafe-pgd (total 85), index: [1, 3, 4, 5, 6, 9, 10, 12, 15, 16, 21, 25, 29, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 56, 58, 61, 63, 65, 72, 78, 80, 82, 84, 87, 88, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 106, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 134, 138, 141, 143, 145, 149, 150, 151, 152, 155, 156, 163, 165, 167, 169, 170, 173, 174, 176, 178, 183, 184, 188, 194, 195, 196]
safe (total 30), index: [2, 13, 19, 24, 38, 48, 54, 57, 64, 66, 67, 77, 83, 93, 97, 104, 111, 120, 127, 132, 135, 154, 158, 160, 162, 181, 185, 187, 189, 199]
unknown (total 6), index: [59, 76, 137, 172, 191, 198]
