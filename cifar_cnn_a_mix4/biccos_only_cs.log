Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_mix4/biccos_only_cs.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_mix4
  path: models/sdp/cifar_cnn_a_mix4.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: breadth_first
  cut:
    enabled: true
    cuts_path: /tmp/abcrown_cuts_27331
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: true
      auto_param: true
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: false
        restore_best_tree: false
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 06:59:07 2024 on n23g0030.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_mix4/biccos_only_cs.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.71758652, -10.60625553,  -8.48054504,  -7.71353006,  -8.18405724,
          -8.17642593,  -8.98493576,  -8.79066181, -11.70876884, -10.32774353]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [744]; unstable size 744; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 744] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 744] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 149] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.43510032, 2.04025722, 0.39722478, 0.03137314, 0.32232380, 0.68482625,
         0.70088971, 3.05900383, 1.95559049]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 2.4120 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
         -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [681]; unstable size 681; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 237, 1, 681] with unstable size 236 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 681] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 681] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [236]; unstable size 236; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 236] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 236] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86854875, -1.72656739,  7.80241537,  6.11302614,  6.77265501,
          6.66194630,  6.08438730,  7.59612799,  5.53368616]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
         -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
          -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.83598518]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.46507931, -1.30634916, -1.32222211,  ...,  0.10634929,
             0.02698422,  0.04285724],
           [-1.25873005, -1.35396814, -1.40158725,  ...,  0.31269848,
             0.28095245,  0.28095245],
           [ 0.15396833,  0.42380959,  0.29682547,  ..., -0.00476181,
            -0.17936498, -0.24285704],
           ...,
           [-0.86190474, -0.60793650, -0.38571417,  ...,  0.91587305,
             0.82063496,  0.83650798],
           [-0.43333322, -0.30634910, -0.22698402,  ...,  0.90000004,
             0.77301592,  0.75714290],
           [-0.33809513, -0.30634910, -0.27460307,  ...,  0.88412702,
             0.78888893,  0.67777783]],

          [[-1.44927526, -1.28824472, -1.30434775,  ...,  0.20933989,
             0.14492765,  0.20933989],
           [-1.35265696, -1.36875999, -1.33655393,  ...,  0.37037048,
             0.35426742,  0.40257660],
           [-1.32045078, -1.35265696, -1.41706920,  ...,  0.04830930,
            -0.14492741, -0.24154577],
           ...,
           [-0.75684375, -0.51529789, -0.30595800,  ...,  0.91787446,
             0.83735919,  0.90177143],
           [-0.32206106, -0.19323659, -0.14492741,  ...,  0.90177143,
             0.78904998,  0.82125610],
           [-0.17713353, -0.17713353, -0.16103047,  ...,  0.90177143,
             0.78904998,  0.74074084]],

          [[-1.54272878, -1.49775124, -1.49775124,  ...,  0.42128953,
             0.34632701,  0.37631202],
           [-1.51274371, -1.55772126, -1.52773619,  ...,  0.52623707,
             0.49625200,  0.49625200],
           [-1.13793111, -1.09295356, -1.12293863,  ...,  0.09145443,
            -0.08845562, -0.19340314],
           ...,
           [-0.59820086, -0.43328333, -0.28335828,  ...,  0.88605714,
             0.81109464,  0.88605714],
           [-0.23838064, -0.14842562, -0.11844061,  ...,  0.85607213,
             0.76611710,  0.81109464],
           [-0.07346311, -0.10344811, -0.08845562,  ...,  0.75112462,
             0.79610211,  0.73613209]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1344 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
         -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [974]; unstable size 974; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 974] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 974] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 974] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 267] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.48544788,  2.23013353,  1.58959150,  1.19109154,  1.84305859,
          1.51451588,  3.08925176,  0.10891151,  0.42558628]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
         -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.84it/s]100%|██████████| 1/1 [00:00<00:00,  1.84it/s]
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/cuts/infered_cuts.py:406: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  torch.tensor(history[3]),
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.96112823, -19.53406715, -23.43943405, -22.77491570, -22.15659523,
          -23.06166649, -22.97703743, -23.94551468, -21.15086555, -20.97314644]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.42706108]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5472 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.328788757324219
alpha/beta optimization time: 3.667475938796997
initial alpha-crown bounds: tensor([[-0.41349697,  2.33963585,  1.68942070,  1.28609228,  1.95209122,
          1.58836555,  3.19598150,  0.21351433,  0.47718415]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4134969711303711
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 195.73424363136292
Verifying property 0 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41349697]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
        -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41349697]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 974
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 263
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 1259
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000133514404296875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41349363327026367
10 lb beta sum: 0.0, worst -0.413515567779541
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.5540    transfer 0.0001    finalize 0.0003    func 0.5546    
Accumulated time: func 0.5546    prepare 0.0002    bound 0.5540    transfer 0.0001    finalize 0.0003    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 6] 
split level 2: [/input-12, 79] 
split level 3: [/input-12, 67] 
split level 4: [/input-12, 24] 
split level 5: [/input-12, 90] 
split level 6: [/input-8, 1963] 
split level 7: [/input-12, 53] 
split level 8: [/input-12, 64] 
split level 9: [/input-12, 29] 
split level 10: [/input-12, 71] 
split level 11: [/input-8, 1964] 
split level 12: [/input-8, 1956] 
split level 13: [/input-12, 57] 
split level 14: [/input-8, 1133] 
split level 15: [/input-8, 1948] 
split level 16: [/input-8, 853] 
split level 17: [/input-8, 852] 
split level 18: [/input-8, 857] 
split level 19: [/input-8, 425] 
split level 20: [/input-8, 165] 
split level 21: [/input-8, 379] 
split level 22: [/input-8, 157] 
split level 23: [/input-8, 155] 
split level 24: [/input-8, 282] 
split level 25: [/input-8, 314] 
split level 26: [/input-8, 854] 
split level 27: [/input-8, 1719] 
split level 28: [/input-8, 922] 
split level 29: [/input-8, 421] 
split level 30: [/input-8, 290] 
split level 31: [/input-8, 619] 
split level 32: [/input-8, 1932] 
split level 33: [/input-8, 424] 
split level 34: [/input-8, 603] 
split level 35: [/input-8, 1236] 
split level 36: [/input-8, 317] 
split level 37: [/input-8, 745] 
split level 38: [/input-8, 617] 
split level 39: [/input-8, 154] 
split level 40: [/input-8, 618] 
split level 41: [/input-8, 1709] 
split level 42: [/input-8, 439] 
split level 43: [/input, 3542] 
split level 44: [/input-8, 928] 
split level 45: [/input, 3557] 
split level 46: [/input-8, 614] 
split level 47: [/input-8, 1763] 
split level 48: [/input-8, 1393] 
split level 49: [/input-8, 432] 
split level 50: [/input-8, 749] 
split level 51: [/input-8, 377] 
split level 52: [/input-8, 1698] 
split level 53: [/input-8, 416] 
split level 54: [/input-8, 105] 
split level 55: [/input-8, 318] 
split level 56: [/input-8, 1649] 
split level 57: [/input-8, 422] 
split level 58: [/input-8, 372] 
split level 59: [/input-8, 1701] 
split level 60: [/input-8, 313] 
split level 61: [/input-8, 1931] 
split level 62: [/input-8, 1625] 
split level 63: [/input-8, 858] 
split level 64: [/input-8, 1702] 
split level 65: [/input-8, 1700] 
split level 66: [/input-8, 1764] 
split level 67: [/input-8, 410] 
split level 68: [/input-8, 1235] 
split level 69: [/input, 3541] 
split level 70: [/input, 3958] 
split level 71: [/input-8, 316] 
split level 72: [/input-8, 414] 
split level 73: [/input-8, 371] 
split level 74: [/input-8, 1617] 
split level 75: [/input-8, 1650] 
split level 76: [/input-8, 1585] 
split level 77: [/input-8, 1040] 
split level 78: [/input-8, 408] 
split level 79: [/input-8, 1705] 
split level 80: [/input-8, 1704] 
split level 81: [/input-8, 1125] 
split level 82: [/input, 3573] 
split level 83: [/input-8, 1210] 
split level 84: [/input, 3560] 
split level 85: [/input, 2726] 
split level 86: [/input, 3558] 
split level 87: [/input, 3564] 
split level 88: [/input-8, 92] 
split level 89: [/input, 998] 
split level 90: [/input, 1016] 
split level 91: [/input, 3789] 
split level 92: [/input, 3575] 
split level 93: [/input, 1004] 
split level 94: [/input-8, 1628] 
split level 95: [/input-8, 1314] 
split level 96: [/input-8, 904] 
split level 97: [/input, 1003] 
split level 98: [/input-8, 981] 
split level 99: [/input, 3559] 
split level 100: [/input-12, 12] 
split level 101: [/input, 1483] 
split level 102: [/input, 3447] 
split level 103: [/input-8, 1619] 
split level 104: [/input, 1444] 
split level 105: [/input, 3578] 
split level 106: [/input, 3581] 
split level 107: [/input, 164] 
split level 108: [/input, 3556] 
split level 109: [/input-8, 381] 
split level 110: [/input, 3555] 
split level 111: [/input, 1002] 
split level 112: [/input, 1021] 
split level 113: [/input, 1948] 
split level 114: [/input, 995] 
split level 115: [/input, 3237] 
split level 116: [/input, 3572] 
split level 117: [/input-8, 1610] 
split level 118: [/input-8, 828] 
split level 119: [/input, 1457] 
split level 120: [/input-8, 973] 
split level 121: [/input, 1943] 
split level 122: [/input, 3543] 
split level 123: [/input-8, 1535] 
split level 124: [/input, 3553] 
split level 125: [/input, 1484] 
split level 126: [/input-8, 370] 
split level 127: [/input, 3574] 
split level 128: [/input-8, 412] 
split level 129: [/input-8, 2045] 
split level 130: [/input-8, 810] 
split level 131: [/input-8, 1712] 
split level 132: [/input, 2537] 
split level 133: [/input-8, 949] 
split level 134: [/input-8, 475] 
split level 135: [/input, 2503] 
split level 136: [/input, 2282] 
split level 137: [/input, 3540] 
split level 138: [/input, 2538] 
split level 139: [/input, 2519] 
split level 140: [/input, 494] 
split level 141: [/input-8, 415] 
split level 142: [/input, 2553] 
split level 143: [/input, 3554] 
split level 144: [/input, 1970] 
split level 145: [/input, 2786] 
split level 146: [/input, 2551] 
split level 147: [/input, 2552] 
split level 148: [/input, 1947] 
split level 149: [/input, 1758] 
split level 150: [/input-8, 1713] 
split level 151: [/input, 2788] 
split level 152: [/input, 2266] 
split level 153: [/input, 2279] 
split level 154: [/input-12, 36] 
split level 155: [/input, 3537] 
split level 156: [/input-8, 1609] 
split level 157: [/input, 888] 
split level 158: [/input-8, 1369] 
split level 159: [/input, 3241] 
split level 160: [/input, 3570] 
split level 161: [/input, 2991] 
split level 162: [/input, 3571] 
split level 163: [/input, 2769] 
split level 164: [/input, 872] 
split level 165: [/input-8, 818] 
split level 166: [/input-8, 980] 
split level 167: [/input-8, 1620] 
split level 168: [/input, 3569] 
split level 169: [/input, 3873] 
split level 170: [/input-8, 162] 
split level 171: [/input, 3269] 
split level 172: [/input, 1000] 
split level 173: [/input, 3041] 
split level 174: [/input, 2555] 
split level 175: [/input, 2182] 
split level 176: [/input-8, 466] 
split level 177: [/input-8, 1708] 
split level 178: [/input, 3469] 
split level 179: [/input, 2534] 
split level 180: [/input-8, 401] 
split level 181: [/input, 2682] 
split level 182: [/input-8, 168] 
split level 183: [/input, 2529] 
split level 184: [/input, 2214] 
split level 185: [/input, 2004] 
split level 186: [/input, 1950] 
split level 187: [/input-8, 1924] 
split level 188: [/input-8, 407] 
split level 189: [/input, 1917] 
split level 190: [/input, 3282] 
split level 191: [/input, 2278] 
split level 192: [/input, 2275] 
split level 193: [/input-8, 1611] 
split level 194: [/input, 1999] 
split level 195: [/input, 2583] 
split level 196: [/input, 2006] 
split level 197: [/input, 3161] 
split level 198: [/input, 1698] 
split level 199: [/input, 2260] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41329383850097656
10 lb beta sum: 0.0, worst -0.4132533073425293
Time: prepare 0.0117    bound 0.1888    transfer 0.0029    finalize 0.0032    func 0.2092    
Accumulated time: func 0.7638    prepare 0.0220    bound 0.7428    transfer 0.0030    finalize 0.0034    
all_split False
======================Cut inference begins======================
max lb tensor(0.27172947) min lb tensor(-0.41324902)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.01387333869934082 
BICCOS Cumulative time: 0.01387333869934082
Preprocessing time: 0.011375665664672852 Inference time: 0.002063751220703125 Add cuts time: 0.00011610984802246094 Cut analysis time: 0.0003178119659423828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.39414 (1), -0.39300 (1), -0.39261 (1), -0.39248 (1), -0.39090 (1), -0.39077 (1), -0.39066 (1), -0.38895 (1), -0.38807 (1), -0.38751 (1), -0.38648 (1), -0.38566 (1), -0.38450 (1), -0.38403 (1), -0.38378 (1), -0.38222 (1), -0.38198 (1), -0.38050 (1), -0.37987 (1), -0.37857 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5655    set_bounds 0.0081    solve 0.2092    add 0.0685    
Accumulated time: pickout 0.0004    decision 0.5655    set_bounds 0.0081    solve 0.2092    add 0.0685    
Current (lb-rhs): -0.39414453506469727
50 domains visited
Cumulative time: 1.450779676437378

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 79] [/input-12, 79] [/input-12, 67] [/input-12, 67] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 6] 
split level 2: [/input-12, 67] [/input-12, 67] [/input-12, 53] [/input-12, 53] [/input-12, 67] [/input-12, 67] [/input-12, 53] [/input-12, 53] [/input-12, 67] [/input-12, 67] 
split level 3: [/input-12, 53] [/input-12, 53] [/input-12, 64] [/input-12, 64] [/input-12, 53] [/input-12, 53] [/input-12, 64] [/input-12, 64] [/input-12, 53] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3831214904785156
10 lb beta sum: 0.3769442141056061, worst -0.37988758087158203
Time: prepare 0.0072    bound 1.2165    transfer 0.0012    finalize 0.0025    func 1.2301    
Accumulated time: func 1.9939    prepare 0.0295    bound 1.9593    transfer 0.0042    finalize 0.0060    
all_split False
======================Cut inference begins======================
max lb tensor(0.66269636) min lb tensor(-0.37981319)
Number of Verified Splits: 51 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.014953851699829102 
BICCOS Cumulative time: 0.028827190399169922
Preprocessing time: 0.011537790298461914 Inference time: 0.0018405914306640625 Add cuts time: 0.0012271404266357422 Cut analysis time: 0.0003483295440673828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21197 (2), -0.20931 (2), -0.20674 (2), -0.20533 (2), -0.20519 (2), -0.20485 (2), -0.20467 (2), -0.20360 (2), -0.20353 (2), -0.20270 (2), -0.20237 (2), -0.20110 (2), -0.19950 (2), -0.19931 (2), -0.19781 (2), -0.19747 (2), -0.19484 (2), -0.19452 (2), -0.19349 (2), -0.19341 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0219    set_bounds 0.0121    solve 1.2303    add 0.0792    
Accumulated time: pickout 0.0015    decision 0.5875    set_bounds 0.0202    solve 1.4395    add 0.1477    
Current (lb-rhs): -0.21196985244750977
100 domains visited
Cumulative time: 2.810579299926758

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 6] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 67] [/input-12, 67] [/input-12, 79] [/input-12, 67] [/input-12, 79] [/input-12, 67] 
split level 2: [/input-12, 53] [/input-12, 53] [/input-12, 67] [/input-12, 67] [/input-12, 53] [/input-12, 53] [/input-12, 67] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 3: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 53] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2150278091430664
10 lb beta sum: 0.4623962938785553, worst -0.20325803756713867
Time: prepare 0.0065    bound 0.1149    transfer 0.0016    finalize 0.0023    func 0.1279    
Accumulated time: func 2.1218    prepare 0.0362    bound 2.0742    transfer 0.0058    finalize 0.0083    
all_split False
======================Cut inference begins======================
max lb tensor(0.70531899) min lb tensor(-0.19990669)
Number of Verified Splits: 88 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.017071247100830078 
BICCOS Cumulative time: 0.0458984375
Preprocessing time: 0.010977506637573242 Inference time: 0.0037581920623779297 Add cuts time: 0.0020689964294433594 Cut analysis time: 0.0002665519714355469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08874 (3), -0.08830 (3), -0.08755 (3), -0.08717 (3), -0.08681 (3), -0.08674 (3), -0.08672 (3), -0.08661 (3), -0.08602 (3), -0.08597 (3), -0.08484 (3), -0.08484 (3), -0.08444 (3), -0.08430 (3), -0.08343 (3), -0.08329 (3), -0.08178 (3), -0.07972 (3), -0.07902 (3), -0.07877 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0198    set_bounds 0.0150    solve 0.1280    add 0.0857    
Accumulated time: pickout 0.0025    decision 0.6072    set_bounds 0.0352    solve 1.5675    add 0.2334    
Current (lb-rhs): -0.08874145150184631
150 domains visited
Cumulative time: 3.0774688720703125

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 67] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 67] [/input-12, 67] [/input-12, 53] 
split level 2: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 3: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1074824333190918
10 lb beta sum: 0.560276985168457, worst -0.08918675780296326
Time: prepare 0.0064    bound 0.1148    transfer 0.0016    finalize 0.0019    func 0.1274    
Accumulated time: func 2.2492    prepare 0.0429    bound 2.1890    transfer 0.0074    finalize 0.0102    
all_split False
======================Cut inference begins======================
max lb tensor(0.20601039) min lb tensor(-0.08702445)
Number of Verified Splits: 218 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 6
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.02732229232788086 
BICCOS Cumulative time: 0.07322072982788086
Preprocessing time: 0.011001110076904297 Inference time: 0.011466741561889648 Add cuts time: 0.004450321197509766 Cut analysis time: 0.00040411949157714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02503 (4), -0.02441 (4), -0.02423 (4), -0.02324 (4), -0.02231 (4), -0.01958 (4), -0.01941 (4), -0.01941 (4), -0.01929 (4), -0.01891 (4), -0.01865 (4), -0.01828 (4), -0.01790 (4), -0.01734 (4), -0.01725 (4), -0.01719 (4), -0.01712 (4), -0.01707 (4), -0.01702 (4), -0.01689 (4), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0194    set_bounds 0.0152    solve 0.1274    add 0.2478    
Accumulated time: pickout 0.0035    decision 0.6266    set_bounds 0.0504    solve 1.6950    add 0.4813    
Current (lb-rhs): -0.025034397840499878
200 domains visited
Cumulative time: 3.515868663787842

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 29] [/input-12, 29] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 2: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 71] [/input-12, 71] [/input-8, 1964] [/input-8, 1964] [/input-12, 71] [/input-12, 71] 
split level 3: [/input-12, 71] [/input-12, 71] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-12, 71] [/input-12, 71] [/input-8, 1964] [/input-8, 1964] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.045144081115722656
10 lb beta sum: 0.43961301445961, worst -0.023081302642822266
Time: prepare 0.0066    bound 1.3422    transfer 0.0011    finalize 0.0021    func 1.3555    
Accumulated time: func 3.6047    prepare 0.0498    bound 3.5313    transfer 0.0086    finalize 0.0123    
all_split False
======================Cut inference begins======================
max lb tensor(0.12596560) min lb tensor(-0.01540375)
Number of Verified Splits: 385 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 9
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.04099845886230469 
BICCOS Cumulative time: 0.11421918869018555
Preprocessing time: 0.011289596557617188 Inference time: 0.019997596740722656 Add cuts time: 0.00925302505493164 Cut analysis time: 0.0004582405090332031
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0198    set_bounds 0.0150    solve 1.3556    add 0.0268    
Accumulated time: pickout 0.0045    decision 0.6465    set_bounds 0.0654    solve 3.0506    add 0.5080    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 79] 
split level 2: [/input-12, 67] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 64] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 71] 
split level 7: [/input-8, 1956] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09371566772460938
10 lb beta sum: 0.4129795432090759, worst -0.0698537826538086
Time: prepare 0.0052    bound 0.1334    transfer 0.0005    finalize 0.0013    func 0.1421    
Accumulated time: func 3.7467    prepare 0.0554    bound 3.6646    transfer 0.0091    finalize 0.0137    
all_split False
======================Cut inference begins======================
max lb tensor(0.16171837) min lb tensor(-0.06938505)
Number of Verified Splits: 209 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.266326904296875
10 lb beta sum: 1.0557291507720947, worst -0.23536205291748047
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 9
#cuts 4-6: 10
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.2609996795654297 
BICCOS Cumulative time: 0.37521886825561523
Preprocessing time: 0.006908416748046875 Inference time: 0.24709129333496094 Add cuts time: 0.005473613739013672 Cut analysis time: 0.0015263557434082031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06939 (8), -0.06801 (8), -0.06090 (8), -0.06076 (8), -0.05914 (8), -0.05853 (8), -0.04727 (8), -0.04382 (8), -0.04342 (8), -0.04270 (8), -0.03875 (8), -0.03603 (8), -0.03596 (8), -0.03587 (8), -0.03551 (8), -0.03416 (8), -0.03392 (8), -0.03253 (8), -0.03123 (8), -0.03079 (8), 
Length of domains: 47
Time: pickout 0.0004    decision 0.0233    set_bounds 0.0205    solve 0.1421    add 0.0009    
Accumulated time: pickout 0.0049    decision 0.6698    set_bounds 0.0859    solve 3.1927    add 0.5089    
Current (lb-rhs): -0.06938505172729492
247 domains visited
Cumulative time: 5.427723407745361

BaB round 2
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 1: [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] 
split level 2: [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02494668960571289
10 lb beta sum: 0.03463379293680191, worst -0.005685329437255859
Time: prepare 0.0074    bound 0.1343    transfer 0.0018    finalize 0.0019    func 0.1484    
Accumulated time: func 3.8951    prepare 0.0630    bound 3.7989    transfer 0.0108    finalize 0.0156    
all_split False
======================Cut inference begins======================
max lb tensor(0.14041662) min lb tensor(-0.00550890)
Number of Verified Splits: 374 of 376
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3759880065917969
10 lb beta sum: 0.6691529750823975, worst -0.3417801856994629
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 84.
#cuts 1-3: 9
#cuts 4-6: 16
#cuts 7-9: 58
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.3884422779083252 
BICCOS Cumulative time: 0.7636611461639404
Preprocessing time: 0.010596990585327148 Inference time: 0.35151076316833496 Add cuts time: 0.02205634117126465 Cut analysis time: 0.0042781829833984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00551 (11), -0.00080 (11), 
Length of domains: 2
Time: pickout 0.0015    decision 0.0166    set_bounds 0.0294    solve 0.1485    add 0.0006    
Accumulated time: pickout 0.0063    decision 0.6864    set_bounds 0.1153    solve 3.3412    add 0.5096    
Current (lb-rhs): -0.005508899688720703
249 domains visited
Cumulative time: 6.016242504119873

BaB round 3
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] 
split level 1: [/input-8, 1963] [/input-8, 1963] 
split level 2: [/input-12, 57] [/input-12, 57] 
split level 3: [/input-8, 857] [/input-8, 857] 
split level 4: [/input-8, 425] [/input-8, 425] 
split level 5: [/input-8, 922] [/input-8, 922] 
split level 6: [/input-8, 432] [/input-8, 617] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.03945159912109375

all verified at 0th iter
Time: prepare 0.0051    bound 0.0050    transfer 0.0005    finalize 0.0012    func 0.0135    
Accumulated time: func 3.9086    prepare 0.0685    bound 3.8039    transfer 0.0113    finalize 0.0167    
all_split False
======================Cut inference begins======================
max lb tensor(0.21768475) min lb tensor(0.03945160)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 84.
#cuts 1-3: 9
#cuts 4-6: 16
#cuts 7-9: 58
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0073282718658447266 
BICCOS Cumulative time: 0.7709894180297852
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0224    set_bounds 0.0271    solve 0.0135    add 0.0003    
Accumulated time: pickout 0.0072    decision 0.7088    set_bounds 0.1424    solve 3.3547    add 0.5099    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
249 domains visited
Cumulative time: 6.088621139526367


Properties batch 1, size 1
Remaining timeout: 189.46745991706848
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 189.46673893928528
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 189.46651124954224
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 189.46647930145264
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 189.46645736694336
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 189.46643733978271
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 189.46640706062317
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 189.46638464927673
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 10.5337 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.49797249, -32.02593231, -24.13653946, -24.35863113, -22.85143471,
         -23.68348503, -27.44120789, -21.38064575, -32.04727936, -30.62964058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [524]; unstable size 524; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 524] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 524] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 524] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 230] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.57842255,  7.92652607,  0.44128609,  0.66715562, -0.01040888,
          3.37060809, -2.14889312,  8.08667374,  6.50471783]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.49797249, -32.02593231, -24.13653946, -24.35863113, -22.85143471,
         -23.68348503, -27.44120789, -21.38064575, -32.04727936, -30.62964058]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.49797440, -32.02593613, -24.13653946, -24.35863304, -22.85143471,
          -23.68348312, -27.44120789, -21.38064194, -32.04728317, -30.62964058],
         [-29.49797440, -32.02593613, -24.13653946, -24.35863304, -22.85143471,
          -23.68348312, -27.44120789, -21.38064194, -32.04728317, -30.62964058]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.83204842, -1.47079277]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0670 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
         -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 586] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 586] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 240] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.88010216,  3.64075089, -1.31467092,  1.09980750,  0.71520233,
          0.08684707,  0.73927236,  3.52310133,  2.98584604]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
         -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
          -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36829662]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0493 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.93012428, -28.86279678, -22.95105362, -22.21138573, -22.55353546,
         -22.42994499, -25.40056229, -25.07742310, -28.55600357, -29.30382729]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [702]; unstable size 702; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 702] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 702] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 702] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 197] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.11360061,  4.75878477, -0.60330033, -1.14847994, -0.96145177,
          1.62045598,  1.45869017,  4.42397881,  5.39402199]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.93012428, -28.86279678, -22.95105362, -22.21138573, -22.55353546,
         -22.42994499, -25.40056229, -25.07742310, -28.55600357, -29.30382729]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.93012238, -28.86279297, -22.95105362, -22.21138191, -22.55353355,
          -22.42994118, -25.40056038, -25.07742310, -28.55599976, -29.30382729],
         [-23.93012238, -28.86279297, -22.95105362, -22.21138191, -22.55353355,
          -22.42994118, -25.40056038, -25.07742310, -28.55599976, -29.30382729]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39752007, -0.34215164, -0.12359238]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0402 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.40559387, -22.88947487, -25.63683701, -27.29631996, -26.72020721,
         -27.76915359, -27.74243546, -26.42049408, -23.75277328, -24.53628540]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 210, 1, 600] with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 600] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 209] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.74476361,  2.03233957,  3.50479484,  2.95214272,  3.84003568,
          3.82891750,  2.31719422,  0.27049714,  0.99338424]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.40559387, -22.88947487, -25.63683701, -27.29631996, -26.72020721,
         -27.76915359, -27.74243546, -26.42049408, -23.75277328, -24.53628540]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.70954704, -22.50856209, -25.82820511, -27.24475288, -26.80752373,
          -27.71620750, -27.81856155, -26.49511337, -23.68723488, -24.25093651]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20098495]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0366 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.38412285, -21.59840584, -16.79981041, -17.57214165, -15.52907753,
         -18.46681404, -14.29935837, -18.97409439, -21.41892242, -22.47642326]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [661]; unstable size 661; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 661] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 661] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 280] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.40035486, 4.96538544, 1.38254380, 2.09833980, 0.19923019, 2.73652530,
         2.77133179, 5.19357300, 5.75338554]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0416 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.33151817, -30.12449837, -30.12789345, -32.32761765, -31.50092506,
         -33.39948273, -34.24899292, -33.59529877, -28.85486984, -31.05011368]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [660]; unstable size 660; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 125, 1, 660] with unstable size 124 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 660] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [124]; unstable size 124; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 124] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 124] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.10990596, 3.26029611, 5.21397591, 4.49963474, 6.16231918, 7.11179543,
         6.38362265, 1.83803439, 4.12780285]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0278 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.09156418, -20.41763687, -14.61236668, -14.66382980, -15.40889931,
         -14.92277241, -16.08656311, -16.88404655, -16.89081764, -19.10676003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [652]; unstable size 652; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 652] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 652] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 652] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 272] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.76794982,  3.46308827, -1.30139887, -0.50252223, -0.49823189,
          0.25928593,  1.05345249,  0.17230225,  2.34708476]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.09156418, -20.41763687, -14.61236668, -14.66382980, -15.40889931,
         -14.92277241, -16.08656311, -16.88404655, -16.89081764, -19.10676003]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.09156036, -20.41763496, -14.61236477, -14.66382885, -15.40889931,
          -14.92277145, -16.08656311, -16.88404655, -16.89081764, -19.10676003],
         [-17.09156036, -20.41763496, -14.61236477, -14.66382885, -15.40889931,
          -14.92277145, -16.08656311, -16.88404655, -16.89081764, -19.10676003]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31040668, -0.25894260,  0.48612785]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0560 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.21570015, -30.75971413, -22.25073242, -22.32918739, -25.08177185,
         -21.45276070, -27.76211929, -23.59930420, -27.91633797, -28.86312294]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 138, 1, 602] with unstable size 137 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 6, 1, 602] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [137]; unstable size 137; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 6, 1, 137] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 137] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.99381196,  6.23490906, -1.89244628, -1.75638425,  1.05084133,
         -2.64184809,  3.30787587,  3.47557878,  4.31073761]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.21570015, -30.75971413, -22.25073242, -22.32918739, -25.08177185,
         -21.45276070, -27.76211929, -23.59930420, -27.91633797, -28.86312294]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.21570015, -30.75971603, -22.25073242, -22.32919121, -25.08177567,
          -21.45276070, -27.76212311, -23.59930420, -27.91633797, -28.86312675],
         [-26.21570015, -30.75971603, -22.25073242, -22.32919121, -25.08177567,
          -21.45276070, -27.76212311, -23.59930420, -27.91633797, -28.86312675]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.34857178, -1.27011299, -2.14654350]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0395 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.21021080, -22.37670517, -15.79945183, -19.83161354, -17.04315186,
         -20.54102135, -18.07866096, -20.16787720, -20.66229820, -22.52699852]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [783]; unstable size 783; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 272, 1, 783] with unstable size 271 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 783] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 783] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [271]; unstable size 271; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 271] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 271] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.10988903, 4.28678894, 2.71925116, 0.07136542, 3.35213184, 0.93095911,
         2.59224558, 3.15873313, 4.39236164]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.29772568, -26.69688797, -24.65950394, -26.42867851, -27.60770798,
         -25.51318932, -30.98760223, -25.11904716, -28.58666801, -27.05063820]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 148, 1, 512] with unstable size 147 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 512] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [147]; unstable size 147; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 147] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.19138744,  0.13958693, -1.25776386,  0.64105940,  1.78223979,
         -0.24006480,  4.64796352,  2.03586721,  0.69128203]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.29772568, -26.69688797, -24.65950394, -26.42867851, -27.60770798,
         -25.51318932, -30.98760223, -25.11904716, -28.58666801, -27.05063820]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.29772758, -26.69688797, -24.65950203, -26.42867661, -27.60770798,
          -25.51318359, -30.98759842, -25.11904335, -28.58666611, -27.05063820],
         [-26.29772758, -26.69688797, -24.65950203, -26.42867661, -27.60770798,
          -25.51318359, -30.98759842, -25.11904335, -28.58666611, -27.05063820]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.45954132,  0.39414024]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0408 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
         -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [800]; unstable size 800; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 212, 1, 800] with unstable size 211 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 800] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 800] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [211]; unstable size 211; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 211] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 211] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64949846,  2.53695965,  4.98263073,  4.08614922,  6.12158537,
          4.88727665,  5.69290829,  0.59366226,  1.31843650]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
         -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.21it/s]100%|██████████| 1/1 [00:00<00:00,  9.19it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.69252968, -23.57816505, -27.19650650, -29.87729073, -29.16208076,
          -31.30131340, -29.60456848, -30.91409683, -24.93794060, -25.69927025]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.11436462]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1113 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 30.024341583251953
alpha/beta optimization time: 1.1859354972839355
initial alpha-crown bounds: tensor([[-0.60099697,  2.58548164,  5.03595257,  4.14844227,  6.18062878,
          4.93974590,  5.75246954,  0.64157915,  1.34103918]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6009969711303711
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.62734603881836
Verifying property 0 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60099697]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
        -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60099697]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 800
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 204
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1025
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010180473327636719
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6009907722473145
10 lb beta sum: 0.0, worst -0.6010003089904785
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    func 0.0525    
Accumulated time: func 0.0525    prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 64] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 90] 
split level 8: [/input-12, 8] 
split level 9: [/input-12, 71] 
split level 10: [/input-8, 1955] 
split level 11: [/input-12, 32] 
split level 12: [/input-8, 292] 
split level 13: [/input-12, 14] 
split level 14: [/input-8, 1949] 
split level 15: [/input-8, 757] 
split level 16: [/input-8, 146] 
split level 17: [/input-8, 155] 
split level 18: [/input-8, 1134] 
split level 19: [/input-8, 1387] 
split level 20: [/input-8, 418] 
split level 21: [/input-8, 420] 
split level 22: [/input-8, 158] 
split level 23: [/input-8, 147] 
split level 24: [/input-8, 416] 
split level 25: [/input-8, 306] 
split level 26: [/input-8, 1384] 
split level 27: [/input-8, 751] 
split level 28: [/input-8, 1674] 
split level 29: [/input-8, 1388] 
split level 30: [/input-12, 13] 
split level 31: [/input-8, 939] 
split level 32: [/input-8, 150] 
split level 33: [/input, 3544] 
split level 34: [/input-8, 1852] 
split level 35: [/input-8, 1396] 
split level 36: [/input-8, 423] 
split level 37: [/input, 374] 
split level 38: [/input-8, 1755] 
split level 39: [/input-8, 1629] 
split level 40: [/input-8, 1195] 
split level 41: [/input-8, 1395] 
split level 42: [/input-8, 633] 
split level 43: [/input-8, 154] 
split level 44: [/input, 3545] 
split level 45: [/input-8, 242] 
split level 46: [/input-8, 634] 
split level 47: [/input-8, 414] 
split level 48: [/input-8, 1391] 
split level 49: [/input, 469] 
split level 50: [/input-8, 1178] 
split level 51: [/input-8, 1754] 
split level 52: [/input-8, 1851] 
split level 53: [/input-8, 1397] 
split level 54: [/input-8, 1378] 
split level 55: [/input-8, 737] 
split level 56: [/input-8, 141] 
split level 57: [/input, 506] 
split level 58: [/input, 2503] 
split level 59: [/input, 3165] 
split level 60: [/input, 3563] 
split level 61: [/input, 1449] 
split level 62: [/input, 3130] 
split level 63: [/input, 1003] 
split level 64: [/input-12, 68] 
split level 65: [/input-8, 433] 
split level 66: [/input-8, 1615] 
split level 67: [/input-8, 1399] 
split level 68: [/input-8, 635] 
split level 69: [/input-8, 1097] 
split level 70: [/input-8, 410] 
split level 71: [/input-8, 400] 
split level 72: [/input, 986] 
split level 73: [/input, 987] 
split level 74: [/input, 968] 
split level 75: [/input, 373] 
split level 76: [/input, 983] 
split level 77: [/input, 1453] 
split level 78: [/input-8, 736] 
split level 79: [/input, 961] 
split level 80: [/input, 508] 
split level 81: [/input, 2931] 
split level 82: [/input-8, 350] 
split level 83: [/input, 981] 
split level 84: [/input, 963] 
split level 85: [/input, 988] 
split level 86: [/input, 1001] 
split level 87: [/input, 3480] 
split level 88: [/input, 492] 
split level 89: [/input, 3197] 
split level 90: [/input-8, 1377] 
split level 91: [/input, 977] 
split level 92: [/input-8, 2033] 
split level 93: [/input, 3913] 
split level 94: [/input, 3579] 
split level 95: [/input, 1006] 
split level 96: [/input, 3565] 
split level 97: [/input, 408] 
split level 98: [/input, 2264] 
split level 99: [/input-8, 1512] 
split level 100: [/input, 3525] 
split level 101: [/input-8, 241] 
split level 102: [/input, 825] 
split level 103: [/input, 995] 
split level 104: [/input, 452] 
split level 105: [/input, 2266] 
split level 106: [/input, 2265] 
split level 107: [/input, 325] 
split level 108: [/input, 2913] 
split level 109: [/input, 2282] 
split level 110: [/input, 844] 
split level 111: [/input, 2771] 
split level 112: [/input-8, 243] 
split level 113: [/input, 2262] 
split level 114: [/input, 996] 
split level 115: [/input, 2406] 
split level 116: [/input, 470] 
split level 117: [/input, 2263] 
split level 118: [/input, 3580] 
split level 119: [/input, 979] 
split level 120: [/input, 2183] 
split level 121: [/input, 2789] 
split level 122: [/input, 3113] 
split level 123: [/input, 3578] 
split level 124: [/input, 827] 
split level 125: [/input, 998] 
split level 126: [/input, 505] 
split level 127: [/input, 2515] 
split level 128: [/input, 3562] 
split level 129: [/input-8, 1398] 
split level 130: [/input-8, 427] 
split level 131: [/input, 3269] 
split level 132: [/input, 993] 
split level 133: [/input, 2516] 
split level 134: [/input, 2009] 
split level 135: [/input-8, 1376] 
split level 136: [/input, 692] 
split level 137: [/input, 2010] 
split level 138: [/input, 2281] 
split level 139: [/input-8, 636] 
split level 140: [/input, 3180] 
split level 141: [/input, 693] 
split level 142: [/input, 904] 
split level 143: [/input, 2267] 
split level 144: [/input, 2539] 
split level 145: [/input, 2969] 
split level 146: [/input, 2654] 
split level 147: [/input-8, 363] 
split level 148: [/input, 691] 
split level 149: [/input, 3007] 
split level 150: [/input, 2553] 
split level 151: [/input, 2283] 
split level 152: [/input, 2258] 
split level 153: [/input, 2538] 
split level 154: [/input, 129] 
split level 155: [/input, 3148] 
split level 156: [/input, 2517] 
split level 157: [/input, 709] 
split level 158: [/input, 2757] 
split level 159: [/input-8, 94] 
split level 160: [/input, 2129] 
split level 161: [/input, 711] 
split level 162: [/input, 371] 
split level 163: [/input, 2685] 
split level 164: [/input, 710] 
split level 165: [/input, 822] 
split level 166: [/input, 3133] 
split level 167: [/input, 2530] 
split level 168: [/input, 2273] 
split level 169: [/input, 3283] 
split level 170: [/input, 3284] 
split level 171: [/input, 707] 
split level 172: [/input, 225] 
split level 173: [/input, 729] 
split level 174: [/input, 808] 
split level 175: [/input, 2514] 
split level 176: [/input, 497] 
split level 177: [/input, 708] 
split level 178: [/input-8, 1855] 
split level 179: [/input, 690] 
split level 180: [/input, 210] 
split level 181: [/input, 2011] 
split level 182: [/input, 713] 
split level 183: [/input, 498] 
split level 184: [/input, 3560] 
split level 185: [/input, 3576] 
split level 186: [/input, 2180] 
split level 187: [/input, 689] 
split level 188: [/input, 487] 
split level 189: [/input-8, 912] 
split level 190: [/input, 705] 
split level 191: [/input, 2259] 
split level 192: [/input, 2436] 
split level 193: [/input, 2916] 
split level 194: [/input, 209] 
split level 195: [/input, 706] 
split level 196: [/input, 989] 
split level 197: [/input, 2556] 
split level 198: [/input, 208] 
split level 199: [/input, 885] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.600822925567627
10 lb beta sum: 0.0, worst -0.600827693939209
Time: prepare 0.0115    bound 0.0964    transfer 0.0032    finalize 0.0030    func 0.1168    
Accumulated time: func 0.1693    prepare 0.0215    bound 0.1485    transfer 0.0033    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.07143354) min lb tensor(-0.60082293)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010062217712402344 
BICCOS Cumulative time: 0.010062217712402344
Preprocessing time: 0.009696006774902344 Inference time: 0.000110626220703125 Add cuts time: 5.245208740234375e-05 Cut analysis time: 0.00020313262939453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.58948 (1), -0.58923 (1), -0.58917 (1), -0.58856 (1), -0.58773 (1), -0.58718 (1), -0.58653 (1), -0.58590 (1), -0.58475 (1), -0.58434 (1), -0.58392 (1), -0.58375 (1), -0.58358 (1), -0.58355 (1), -0.58355 (1), -0.58341 (1), -0.58314 (1), -0.58216 (1), -0.58196 (1), -0.58139 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5122    set_bounds 0.0083    solve 0.1168    add 0.0704    
Accumulated time: pickout 0.0004    decision 0.5122    set_bounds 0.0083    solve 0.1168    add 0.0704    
Current (lb-rhs): -0.5894784927368164
50 domains visited
Cumulative time: 0.7754943370819092

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 38] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] 
split level 1: [/input-12, 38] [/input-12, 4] [/input-12, 4] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 2: [/input-12, 4] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
split level 3: [/input-12, 2] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 2] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 8] [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.550870418548584
10 lb beta sum: 0.3896826207637787, worst -0.5451430082321167
Time: prepare 0.0073    bound 0.1160    transfer 0.0007    finalize 0.0024    func 0.1290    
Accumulated time: func 0.2982    prepare 0.0290    bound 0.2645    transfer 0.0040    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.28840822) min lb tensor(-0.54498243)
Number of Verified Splits: 13 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.012866497039794922 
BICCOS Cumulative time: 0.022928714752197266
Preprocessing time: 0.011279582977294922 Inference time: 0.0009338855743408203 Add cuts time: 0.0002181529998779297 Cut analysis time: 0.00043487548828125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11134 (2), -0.11050 (2), -0.11042 (2), -0.10896 (2), -0.10880 (2), -0.10841 (2), -0.10747 (2), -0.10644 (2), -0.10596 (2), -0.10554 (2), -0.10524 (2), -0.10474 (2), -0.10474 (2), -0.10415 (2), -0.10400 (2), -0.10332 (2), -0.10267 (2), -0.10263 (2), -0.10225 (2), -0.10076 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0127    solve 0.1290    add 0.0799    
Accumulated time: pickout 0.0014    decision 0.5316    set_bounds 0.0210    solve 0.2459    add 0.1504    
Current (lb-rhs): -0.11133524775505066
100 domains visited
Cumulative time: 1.0307402610778809

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 38] [/input-12, 34] [/input-12, 38] [/input-12, 38] [/input-12, 34] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 34] [/input-12, 34] 
split level 1: [/input-12, 89] [/input-12, 38] [/input-12, 4] [/input-12, 89] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 38] [/input-12, 4] 
split level 2: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 89] [/input-12, 2] [/input-12, 4] [/input-12, 2] 
split level 3: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11103391647338867
10 lb beta sum: 0.3341462016105652, worst -0.13489094376564026
Time: prepare 0.0071    bound 0.1310    transfer 0.0020    finalize 0.0022    func 0.1454    
Accumulated time: func 0.4436    prepare 0.0363    bound 0.3955    transfer 0.0060    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.88331836) min lb tensor(-0.02823907)
Number of Verified Splits: 344 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.033026933670043945 
BICCOS Cumulative time: 0.05595564842224121
Preprocessing time: 0.01129150390625 Inference time: 0.01459813117980957 Add cuts time: 0.00681304931640625 Cut analysis time: 0.000324249267578125
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0192    set_bounds 0.0154    solve 0.1455    add 0.0187    
Accumulated time: pickout 0.0023    decision 0.5508    set_bounds 0.0364    solve 0.3914    add 0.1691    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2755146026611328
10 lb beta sum: 0.4809478521347046, worst -0.26374131441116333
Time: prepare 0.0036    bound 0.1115    transfer 0.0005    finalize 0.0016    func 0.1190    
Accumulated time: func 0.5626    prepare 0.0403    bound 0.5071    transfer 0.0065    finalize 0.0093    
all_split False
======================Cut inference begins======================
max lb tensor(0.33799016) min lb tensor(-0.26319560)
Number of Verified Splits: 216 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4903445243835449
10 lb beta sum: 0.9322704672813416, worst -0.4201620817184448
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 10
#cuts 4-6: 4
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.22962641716003418 
BICCOS Cumulative time: 0.2855820655822754
Preprocessing time: 0.006254434585571289 Inference time: 0.21836471557617188 Add cuts time: 0.0044095516204833984 Cut analysis time: 0.0005977153778076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26320 (8), -0.26242 (8), -0.26227 (8), -0.26049 (8), -0.25091 (8), -0.25053 (8), -0.24842 (8), -0.24763 (8), -0.23445 (8), -0.23237 (8), -0.22898 (8), -0.22642 (8), -0.22026 (8), -0.22001 (8), -0.20879 (8), -0.20455 (8), -0.13323 (8), -0.12865 (8), -0.12732 (8), -0.12361 (8), 
Length of domains: 40
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0164    solve 0.1190    add 0.0010    
Accumulated time: pickout 0.0027    decision 0.5728    set_bounds 0.0528    solve 0.5104    add 0.1701    
Current (lb-rhs): -0.26319560408592224
140 domains visited
Cumulative time: 1.6561782360076904

BaB round 2
batch: 40
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
split level 2: [/input-8, 757] [/input-8, 757] [/input-8, 1754] [/input-8, 1754] [/input-8, 757] [/input-8, 757] [/input-8, 1754] [/input-8, 1754] [/input-8, 757] [/input-8, 757] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24973249435424805
10 lb beta sum: 0.35238805413246155, worst -0.241044819355011
Time: prepare 0.0063    bound 0.1183    transfer 0.0010    finalize 0.0018    func 0.1295    
Accumulated time: func 0.6921    prepare 0.0468    bound 0.6254    transfer 0.0075    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.61718357) min lb tensor(-0.24092346)
Number of Verified Splits: 187 of 320
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.519831657409668
10 lb beta sum: 0.9894472360610962, worst -0.22709190845489502
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 10
#cuts 4-6: 5
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.2461864948272705 
BICCOS Cumulative time: 0.5317685604095459
Preprocessing time: 0.009218692779541016 Inference time: 0.2298285961151123 Add cuts time: 0.006189823150634766 Cut analysis time: 0.0009493827819824219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24092 (11), -0.24041 (11), -0.23949 (11), -0.23811 (11), -0.22840 (11), -0.22746 (11), -0.22484 (11), -0.22481 (11), -0.22475 (11), -0.22379 (11), -0.22370 (11), -0.22189 (11), -0.21499 (11), -0.21295 (11), -0.21246 (11), -0.21246 (11), -0.21054 (11), -0.20965 (11), -0.20964 (11), -0.20963 (11), 
Length of domains: 133
Time: pickout 0.0012    decision 0.0156    set_bounds 0.0213    solve 0.1296    add 0.0015    
Accumulated time: pickout 0.0039    decision 0.5884    set_bounds 0.0741    solve 0.6400    add 0.1716    
Current (lb-rhs): -0.2409234642982483
273 domains visited
Cumulative time: 2.0731773376464844

BaB round 3
batch: 133
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 14] [/input-8, 1955] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24357891082763672
10 lb beta sum: 0.3263736069202423, worst -0.24080412089824677
Time: prepare 0.0056    bound 0.1333    transfer 0.0006    finalize 0.0015    func 0.1427    
Accumulated time: func 0.8347    prepare 0.0526    bound 0.7587    transfer 0.0080    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.34912243) min lb tensor(-0.24072318)
Number of Verified Splits: 91 of 266
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 10
#cuts 4-6: 11
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.01944708824157715 
BICCOS Cumulative time: 0.551215648651123
Preprocessing time: 0.007817983627319336 Inference time: 0.008471965789794922 Add cuts time: 0.0023009777069091797 Cut analysis time: 0.0008561611175537109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24072 (12), -0.24020 (12), -0.23932 (12), -0.23788 (12), -0.22823 (12), -0.22729 (12), -0.22469 (12), -0.22457 (12), -0.22428 (12), -0.22335 (12), -0.22325 (12), -0.22150 (12), -0.21451 (12), -0.21245 (12), -0.21215 (12), -0.21213 (12), -0.21002 (12), -0.20912 (12), -0.20858 (12), -0.20844 (12), 
Length of domains: 175
Time: pickout 0.0025    decision 0.0204    set_bounds 0.0116    solve 0.1427    add 0.0011    
Accumulated time: pickout 0.0064    decision 0.6087    set_bounds 0.0857    solve 0.7827    add 0.1726    
Current (lb-rhs): -0.24072317779064178
448 domains visited
Cumulative time: 2.271677255630493

BaB round 4
batch: 175
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23742437362670898
10 lb beta sum: 0.2939608097076416, worst -0.23465530574321747
Time: prepare 0.0073    bound 0.1358    transfer 0.0007    finalize 0.0018    func 0.1478    
Accumulated time: func 0.9826    prepare 0.0601    bound 0.8944    transfer 0.0087    finalize 0.0144    
all_split False
======================Cut inference begins======================
max lb tensor(0.36745921) min lb tensor(-0.23459202)
Number of Verified Splits: 94 of 350
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 10
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.023759126663208008 
BICCOS Cumulative time: 0.574974775314331
Preprocessing time: 0.010080575942993164 Inference time: 0.009687185287475586 Add cuts time: 0.0029375553131103516 Cut analysis time: 0.0010538101196289062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23459 (13), -0.23387 (13), -0.23172 (13), -0.23169 (13), -0.22214 (13), -0.22111 (13), -0.21781 (13), -0.21766 (13), -0.21737 (13), -0.21705 (13), -0.21562 (13), -0.21531 (13), -0.20904 (13), -0.20684 (13), -0.20604 (13), -0.20589 (13), -0.20268 (13), -0.20253 (13), -0.20243 (13), -0.20230 (13), 
Length of domains: 256
Time: pickout 0.0026    decision 0.0202    set_bounds 0.1405    solve 0.1479    add 0.0013    
Accumulated time: pickout 0.0089    decision 0.6290    set_bounds 0.2262    solve 0.9307    add 0.1739    
Current (lb-rhs): -0.2345920205116272
704 domains visited
Cumulative time: 2.608813762664795

BaB round 5
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 146] [/input-8, 146] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23124170303344727
10 lb beta sum: 0.25809434056282043, worst -0.2284649908542633
Time: prepare 0.0102    bound 0.1368    transfer 0.0020    finalize 0.0025    func 0.1554    
Accumulated time: func 1.1380    prepare 0.0705    bound 1.0312    transfer 0.0107    finalize 0.0169    
all_split False
======================Cut inference begins======================
max lb tensor(0.19860414) min lb tensor(-0.22844012)
Number of Verified Splits: 123 of 512
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 11
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.0322270393371582 
BICCOS Cumulative time: 0.6072018146514893
Preprocessing time: 0.01430654525756836 Inference time: 0.014415740966796875 Add cuts time: 0.0027658939361572266 Cut analysis time: 0.0007388591766357422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22844 (14), -0.22842 (14), -0.22807 (14), -0.22506 (14), -0.21595 (14), -0.21580 (14), -0.21468 (14), -0.21339 (14), -0.21258 (14), -0.21228 (14), -0.21195 (14), -0.21173 (14), -0.21167 (14), -0.21119 (14), -0.20860 (14), -0.20856 (14), -0.19968 (14), -0.19938 (14), -0.19924 (14), -0.19852 (14), 
Length of domains: 389
Time: pickout 0.0034    decision 0.0256    set_bounds 0.0228    solve 0.1556    add 0.0039    
Accumulated time: pickout 0.0123    decision 0.6545    set_bounds 0.2490    solve 1.0862    add 0.1778    
Current (lb-rhs): -0.22844012081623077
1093 domains visited
Cumulative time: 2.853506565093994

BaB round 6
batch: 389
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 147] [/input-8, 1134] [/input-8, 147] [/input-8, 1134] [/input-8, 147] [/input-8, 306] [/input-8, 147] [/input-8, 306] [/input-8, 155] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22609949111938477
10 lb beta sum: 0.21661141514778137, worst -0.22331801056861877
Time: prepare 0.0161    bound 0.1387    transfer 0.0034    finalize 0.0051    func 0.1684    
Accumulated time: func 1.3064    prepare 0.0868    bound 1.1699    transfer 0.0141    finalize 0.0220    
all_split False
======================Cut inference begins======================
max lb tensor(0.47623110) min lb tensor(-0.22327998)
Number of Verified Splits: 157 of 778
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.04341292381286621 
BICCOS Cumulative time: 0.6506147384643555
Preprocessing time: 0.022220611572265625 Inference time: 0.01833653450012207 Add cuts time: 0.0024394989013671875 Cut analysis time: 0.0004162788391113281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22328 (15), -0.22328 (15), -0.21540 (15), -0.21509 (15), -0.21334 (15), -0.21272 (15), -0.21021 (15), -0.21013 (15), -0.20970 (15), -0.20890 (15), -0.20885 (15), -0.20823 (15), -0.20768 (15), -0.20710 (15), -0.20692 (15), -0.20491 (15), -0.20401 (15), -0.20362 (15), -0.20305 (15), -0.19856 (15), 
Length of domains: 621
Time: pickout 0.0062    decision 0.0319    set_bounds 0.0339    solve 0.1686    add 0.0036    
Accumulated time: pickout 0.0185    decision 0.6864    set_bounds 0.2830    solve 1.2548    add 0.1815    
Current (lb-rhs): -0.22327998280525208
1714 domains visited
Cumulative time: 3.1427741050720215

BaB round 7
batch: 621
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 751] [/input-8, 306] [/input, 374] [/input-8, 306] [/input-8, 751] [/input-8, 751] [/input, 374] [/input-8, 751] [/input-8, 1134] [/input-8, 306] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22290802001953125
10 lb beta sum: 0.5632152557373047, worst -0.218317911028862
Time: prepare 0.0255    bound 0.1451    transfer 0.0061    finalize 0.0072    func 0.1919    
Accumulated time: func 1.4984    prepare 0.1126    bound 1.3150    transfer 0.0202    finalize 0.0292    
all_split False
======================Cut inference begins======================
max lb tensor(0.49457920) min lb tensor(-0.21828562)
Number of Verified Splits: 220 of 1242
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 16
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.06708145141601562 
BICCOS Cumulative time: 0.7176961898803711
Preprocessing time: 0.03766489028930664 Inference time: 0.026151180267333984 Add cuts time: 0.0026569366455078125 Cut analysis time: 0.0006084442138671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21829 (16), -0.21733 (16), -0.20967 (16), -0.20922 (16), -0.20716 (16), -0.20652 (16), -0.20492 (16), -0.20351 (16), -0.20281 (16), -0.20253 (16), -0.20243 (16), -0.20129 (16), -0.20108 (16), -0.20043 (16), -0.19976 (16), -0.19921 (16), -0.19876 (16), -0.19763 (16), -0.19703 (16), -0.19633 (16), 
Length of domains: 1022
Time: pickout 0.0079    decision 0.0451    set_bounds 0.0520    solve 0.1923    add 0.0063    
Accumulated time: pickout 0.0265    decision 0.7316    set_bounds 0.3349    solve 1.4471    add 0.1877    
Current (lb-rhs): -0.21828562021255493
2736 domains visited
Cumulative time: 3.5161540508270264

BaB round 8
batch: 1022
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1134] [/input-8, 751] [/input-8, 751] [/input-8, 416] [/input-8, 1134] [/input-8, 1134] [/input-8, 751] [/input-8, 1134] [/input-8, 751] [/input-8, 751] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22051429748535156
10 lb beta sum: 1.0132133960723877, worst -0.20715942978858948
Time: prepare 0.0446    bound 0.1717    transfer 0.0085    finalize 0.0107    func 0.2495    
Accumulated time: func 1.7479    prepare 0.1574    bound 1.4866    transfer 0.0287    finalize 0.0399    
all_split False
======================Cut inference begins======================
max lb tensor(0.58126152) min lb tensor(-0.20713811)
Number of Verified Splits: 1401 of 2044
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 16
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.4020204544067383 
BICCOS Cumulative time: 1.1197166442871094
Preprocessing time: 0.060378074645996094 Inference time: 0.318713903427124 Add cuts time: 0.022388935089111328 Cut analysis time: 0.0005395412445068359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20714 (17), -0.20666 (17), -0.20521 (17), -0.20313 (17), -0.20249 (17), -0.20189 (17), -0.19655 (17), -0.19599 (17), -0.19251 (17), -0.19231 (17), -0.19175 (17), -0.19162 (17), -0.19159 (17), -0.19102 (17), -0.19088 (17), -0.19070 (17), -0.19045 (17), -0.19039 (17), -0.19033 (17), -0.18980 (17), 
Length of domains: 643
Time: pickout 0.0169    decision 0.0662    set_bounds 0.0820    solve 0.2498    add 0.0026    
Accumulated time: pickout 0.0434    decision 0.7978    set_bounds 0.4170    solve 1.6969    add 0.1903    
Current (lb-rhs): -0.20713810622692108
3379 domains visited
Cumulative time: 4.346749305725098

BaB round 9
batch: 643
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 306] [/input-8, 147] [/input-8, 418] [/input-8, 147] [/input-8, 751] [/input-8, 1134] [/input-8, 416] [/input-8, 751] [/input-8, 292] [/input-8, 416] 
cut re-enabled after branching node selection
0 lb beta sum: 0.993583619594574, worst -0.2029443234205246
10 lb beta sum: 0.993583619594574, worst -0.20289520919322968
Time: prepare 0.0548    bound 0.1461    transfer 0.0034    finalize 0.0060    func 0.2192    
Accumulated time: func 1.9671    prepare 0.2124    bound 1.6327    transfer 0.0321    finalize 0.0459    
all_split False
======================Cut inference begins======================
max lb tensor(0.14642704) min lb tensor(-0.20287375)
Number of Verified Splits: 25 of 1286
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.04342913627624512 
BICCOS Cumulative time: 1.1631457805633545
Preprocessing time: 0.03803586959838867 Inference time: 0.0039997100830078125 Add cuts time: 0.0009443759918212891 Cut analysis time: 0.00044918060302734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20287 (18), -0.20234 (18), -0.20055 (18), -0.19954 (18), -0.19945 (18), -0.19882 (18), -0.19283 (18), -0.19229 (18), -0.18912 (18), -0.18845 (18), -0.18774 (18), -0.18759 (18), -0.18726 (18), -0.18715 (18), -0.18707 (18), -0.18690 (18), -0.18690 (18), -0.18634 (18), -0.18631 (18), -0.18630 (18), 
Length of domains: 1261
Time: pickout 0.0122    decision 0.0450    set_bounds 0.0552    solve 0.2194    add 0.0169    
Accumulated time: pickout 0.0556    decision 0.8428    set_bounds 0.4721    solve 1.9163    add 0.2072    
Current (lb-rhs): -0.20287375152111053
4640 domains visited
Cumulative time: 4.740445375442505

BaB round 10
batch: 1261
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 416] [/input-8, 292] [/input-8, 423] [/input-8, 292] [/input-8, 423] [/input-8, 155] [/input-8, 147] [/input-8, 147] [/input-8, 147] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21214675903320312
10 lb beta sum: 1.0532783269882202, worst -0.1990460455417633
Time: prepare 0.0502    bound 0.1977    transfer 0.0097    finalize 0.0131    func 0.2869    
Accumulated time: func 2.2539    prepare 0.2629    bound 1.8304    transfer 0.0418    finalize 0.0590    
all_split False
======================Cut inference begins======================
max lb tensor(0.52855819) min lb tensor(-0.19902661)
Number of Verified Splits: 1439 of 2522
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.3034963607788086 
BICCOS Cumulative time: 1.466642141342163
Preprocessing time: 0.07399368286132812 Inference time: 0.20332098007202148 Add cuts time: 0.025581836700439453 Cut analysis time: 0.0005998611450195312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19903 (19), -0.19846 (19), -0.19634 (19), -0.19556 (19), -0.19325 (19), -0.19262 (19), -0.18912 (19), -0.18884 (19), -0.18847 (19), -0.18827 (19), -0.18449 (19), -0.18392 (19), -0.18332 (19), -0.18300 (19), -0.18252 (19), -0.18247 (19), -0.18231 (19), -0.18205 (19), -0.18188 (19), -0.18111 (19), 
Length of domains: 1083
Time: pickout 0.0165    decision 0.0785    set_bounds 0.1050    solve 0.2876    add 0.0029    
Accumulated time: pickout 0.0721    decision 0.9213    set_bounds 0.5772    solve 2.2040    add 0.2101    
Current (lb-rhs): -0.19902661442756653
5723 domains visited
Cumulative time: 5.549312114715576

BaB round 11
batch: 1083
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 147] [/input-8, 155] [/input-8, 292] [/input-8, 420] [/input-8, 155] [/input-8, 155] [/input-8, 292] [/input-8, 420] [/input-8, 306] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20909357070922852
10 lb beta sum: 1.5560543537139893, worst -0.187178373336792
Time: prepare 0.0414    bound 0.1773    transfer 0.0088    finalize 0.0098    func 0.2521    
Accumulated time: func 2.5061    prepare 0.3046    bound 2.0077    transfer 0.0506    finalize 0.0688    
all_split False
======================Cut inference begins======================
max lb tensor(0.59347308) min lb tensor(-0.18715924)
Number of Verified Splits: 1037 of 2166
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.23195528984069824 
BICCOS Cumulative time: 1.6985974311828613
Preprocessing time: 0.06492066383361816 Inference time: 0.1498093605041504 Add cuts time: 0.016635417938232422 Cut analysis time: 0.0005898475646972656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18716 (20), -0.18633 (20), -0.18598 (20), -0.18539 (20), -0.18450 (20), -0.18384 (20), -0.18133 (20), -0.18076 (20), -0.18021 (20), -0.17949 (20), -0.17664 (20), -0.17620 (20), -0.17579 (20), -0.17520 (20), -0.17417 (20), -0.17385 (20), -0.17348 (20), -0.17207 (20), -0.17179 (20), -0.17126 (20), 
Length of domains: 1129
Time: pickout 0.0177    decision 0.1879    set_bounds 0.0927    solve 0.2526    add 0.0026    
Accumulated time: pickout 0.0898    decision 1.1092    set_bounds 0.6698    solve 2.4566    add 0.2127    
Current (lb-rhs): -0.1871592402458191
6852 domains visited
Cumulative time: 6.344913482666016

BaB round 12
batch: 1129
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 420] [/input-8, 1195] [/input-8, 420] [/input-8, 416] [/input-8, 292] [/input-8, 420] [/input-8, 420] [/input-8, 1195] [/input-8, 420] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7158398628234863, worst -0.1871592402458191
10 lb beta sum: 1.7209707498550415, worst -0.18713778257369995
Time: prepare 0.0945    bound 0.1820    transfer 0.0087    finalize 0.0104    func 0.3102    
Accumulated time: func 2.8162    prepare 0.3993    bound 2.1897    transfer 0.0593    finalize 0.0792    
all_split False
======================Cut inference begins======================
max lb tensor(0.23233843) min lb tensor(-0.18712014)
Number of Verified Splits: 408 of 2258
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.134474515914917 
BICCOS Cumulative time: 1.8330719470977783
Preprocessing time: 0.06767845153808594 Inference time: 0.06019997596740723 Add cuts time: 0.006029844284057617 Cut analysis time: 0.0005662441253662109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18712 (21), -0.18633 (21), -0.18632 (21), -0.18118 (21), -0.18057 (21), -0.17992 (21), -0.17923 (21), -0.17681 (21), -0.17623 (21), -0.17590 (21), -0.17516 (21), -0.17385 (21), -0.17369 (21), -0.17346 (21), -0.17334 (21), -0.17257 (21), -0.17177 (21), -0.17141 (21), -0.17122 (21), -0.17098 (21), 
Length of domains: 1850
Time: pickout 0.0160    decision 0.0696    set_bounds 0.0969    solve 0.3112    add 0.0050    
Accumulated time: pickout 0.1057    decision 1.1787    set_bounds 0.7668    solve 2.7678    add 0.2177    
Current (lb-rhs): -0.18712013959884644
8702 domains visited
Cumulative time: 6.983330249786377

BaB round 13
batch: 1850
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 146] [/input-8, 155] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 147] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6944900751113892, worst -0.18814057111740112
10 lb beta sum: 1.706048607826233, worst -0.187879741191864
Time: prepare 0.1591    bound 0.2634    transfer 0.0141    finalize 0.0165    func 0.4774    
Accumulated time: func 3.2936    prepare 0.5586    bound 2.4531    transfer 0.0734    finalize 0.0957    
all_split False
======================Cut inference begins======================
max lb tensor(0.24245954) min lb tensor(-0.18712014)
Number of Verified Splits: 896 of 3700
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.266934871673584 
BICCOS Cumulative time: 2.1000068187713623
Preprocessing time: 0.11179327964782715 Inference time: 0.1405491828918457 Add cuts time: 0.013966083526611328 Cut analysis time: 0.0006263256072998047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18712 (22), -0.18710 (22), -0.18633 (22), -0.18632 (22), -0.18117 (22), -0.18057 (22), -0.17679 (22), -0.17620 (22), -0.17513 (22), -0.17445 (22), -0.17367 (22), -0.17352 (22), -0.17342 (22), -0.17333 (22), -0.17215 (22), -0.17192 (22), -0.17177 (22), -0.17176 (22), -0.17120 (22), -0.17104 (22), 
Length of domains: 2804
Time: pickout 0.0310    decision 0.2334    set_bounds 0.1574    solve 0.4785    add 0.0327    
Accumulated time: pickout 0.1367    decision 1.4122    set_bounds 0.9242    solve 3.2463    add 0.2504    
Current (lb-rhs): -0.18712013959884644
11506 domains visited
Cumulative time: 8.197510719299316

BaB round 14
batch: 2804
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 158] [/input-8, 158] [/input-8, 420] [/input-8, 146] [/input-8, 1384] [/input-8, 1395] [/input-8, 146] [/input-8, 146] [/input-8, 1384] [/input-8, 1387] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19186639785766602
10 lb beta sum: 1.6727124452590942, worst -0.17881813645362854
Time: prepare 0.1175    bound 0.3660    transfer 0.0280    finalize 0.0287    func 0.5768    
Accumulated time: func 3.8705    prepare 0.6764    bound 2.8191    transfer 0.1015    finalize 0.1244    
all_split False
======================Cut inference begins======================
max lb tensor(0.65043223) min lb tensor(-0.17880110)
Number of Verified Splits: 3462 of 5608
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.9374830722808838 
BICCOS Cumulative time: 3.037489891052246
Preprocessing time: 0.1685783863067627 Inference time: 0.7092955112457275 Add cuts time: 0.058953046798706055 Cut analysis time: 0.0006561279296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17880 (23), -0.17643 (23), -0.17583 (23), -0.17512 (23), -0.17443 (23), -0.17374 (23), -0.17364 (23), -0.17280 (23), -0.17270 (23), -0.17226 (23), -0.17187 (23), -0.16623 (23), -0.16566 (23), -0.16485 (23), -0.16477 (23), -0.16471 (23), -0.16449 (23), -0.16439 (23), -0.16422 (23), -0.16414 (23), 
Length of domains: 2146
Time: pickout 0.0385    decision 0.2900    set_bounds 0.2433    solve 0.5784    add 0.0062    
Accumulated time: pickout 0.1752    decision 1.7022    set_bounds 1.1675    solve 3.8247    add 0.2567    
Current (lb-rhs): -0.17880110442638397
13652 domains visited
Cumulative time: 10.328888177871704

BaB round 15
batch: 2146
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 158] [/input-8, 1195] [/input-8, 1195] [/input-8, 1395] [/input-8, 1384] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] 
cut re-enabled after branching node selection
0 lb beta sum: 1.8059333562850952, worst -0.176428884267807
10 lb beta sum: 1.8060154914855957, worst -0.17643269896507263
Time: prepare 0.1855    bound 0.2945    transfer 0.0208    finalize 0.0222    func 0.5518    
Accumulated time: func 4.4222    prepare 0.8622    bound 3.1136    transfer 0.1223    finalize 0.1467    
all_split False
======================Cut inference begins======================
max lb tensor(0.33329678) min lb tensor(-0.17642698)
Number of Verified Splits: 1020 of 4292
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.47231292724609375 
BICCOS Cumulative time: 3.50980281829834
Preprocessing time: 0.13312888145446777 Inference time: 0.32593727111816406 Add cuts time: 0.012543439865112305 Cut analysis time: 0.0007033348083496094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17643 (24), -0.17583 (24), -0.17511 (24), -0.17443 (24), -0.17207 (24), -0.17200 (24), -0.17157 (24), -0.17090 (24), -0.17085 (24), -0.16994 (24), -0.16989 (24), -0.16849 (24), -0.16623 (24), -0.16565 (24), -0.16484 (24), -0.16471 (24), -0.16449 (24), -0.16448 (24), -0.16438 (24), -0.16436 (24), 
Length of domains: 3272
Time: pickout 0.0394    decision 0.1238    set_bounds 0.1873    solve 0.5532    add 0.0083    
Accumulated time: pickout 0.2146    decision 1.8259    set_bounds 1.3548    solve 4.3779    add 0.2650    
Current (lb-rhs): -0.1764269769191742
16924 domains visited
Cumulative time: 11.729552030563354

BaB round 16
batch: 3272
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 13] [/input-8, 414] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-8, 154] [/input-12, 13] [/input-12, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18231439590454102
10 lb beta sum: 1.5652002096176147, worst -0.1723044514656067
Time: prepare 0.1431    bound 0.4152    transfer 0.0319    finalize 0.0338    func 0.8190    
Accumulated time: func 5.2412    prepare 1.0055    bound 3.5288    transfer 0.1542    finalize 0.1805    
all_split False
======================Cut inference begins======================
max lb tensor(0.55993551) min lb tensor(-0.17229852)
Number of Verified Splits: 4312 of 6544
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 27
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 1.0334253311157227 
BICCOS Cumulative time: 4.5432281494140625
Preprocessing time: 0.19844293594360352 Inference time: 0.7647731304168701 Add cuts time: 0.06944775581359863 Cut analysis time: 0.0007615089416503906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17230 (25), -0.17171 (25), -0.17110 (25), -0.17043 (25), -0.16913 (25), -0.16906 (25), -0.16841 (25), -0.16838 (25), -0.16677 (25), -0.16674 (25), -0.16580 (25), -0.16577 (25), -0.16212 (25), -0.16166 (25), -0.16155 (25), -0.16148 (25), -0.16133 (25), -0.16122 (25), -0.16082 (25), -0.16022 (25), 
Length of domains: 2232
Time: pickout 0.0564    decision 0.1821    set_bounds 0.2841    solve 0.8200    add 0.0175    
Accumulated time: pickout 0.2711    decision 2.0080    set_bounds 1.6389    solve 5.1979    add 0.2825    
Current (lb-rhs): -0.17229852080345154
19156 domains visited
Cumulative time: 14.173029661178589

BaB round 17
batch: 2232
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17925167083740234
10 lb beta sum: 1.3818405866622925, worst -0.17110435664653778
Time: prepare 0.0948    bound 0.3053    transfer 0.0225    finalize 0.0246    func 0.4766    
Accumulated time: func 5.7179    prepare 1.1005    bound 3.8341    transfer 0.1767    finalize 0.2051    
all_split False
======================Cut inference begins======================
max lb tensor(0.32911682) min lb tensor(-0.17109808)
Number of Verified Splits: 918 of 4464
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 27
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.32936930656433105 
BICCOS Cumulative time: 4.8725974559783936
Preprocessing time: 0.13940787315368652 Inference time: 0.1725935935974121 Add cuts time: 0.01668262481689453 Cut analysis time: 0.0006852149963378906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17110 (26), -0.17042 (26), -0.16911 (26), -0.16905 (26), -0.16840 (26), -0.16836 (26), -0.16835 (26), -0.16777 (26), -0.16390 (26), -0.16387 (26), -0.16289 (26), -0.16286 (26), -0.16082 (26), -0.16014 (26), -0.15937 (26), -0.15880 (26), -0.15802 (26), -0.15763 (26), -0.15739 (26), -0.15735 (26), 
Length of domains: 3546
Time: pickout 0.0363    decision 0.1275    set_bounds 0.3803    solve 0.4783    add 0.0127    
Accumulated time: pickout 0.3074    decision 2.1355    set_bounds 2.0192    solve 5.6762    add 0.2952    
Current (lb-rhs): -0.17109808325767517
22702 domains visited
Cumulative time: 15.553753137588501

BaB round 18
batch: 3546
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5602591037750244, worst -0.17109951376914978
10 lb beta sum: 1.5618027448654175, worst -0.17110571265220642
Time: prepare 0.3218    bound 0.4424    transfer 0.0350    finalize 0.0419    func 0.8876    
Accumulated time: func 6.6054    prepare 1.4226    bound 4.2765    transfer 0.2117    finalize 0.2470    
all_split False
======================Cut inference begins======================
max lb tensor(0.32504487) min lb tensor(-0.17109808)
Number of Verified Splits: 823 of 7092
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 28
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.5402565002441406 
BICCOS Cumulative time: 5.412853956222534
Preprocessing time: 0.2173311710357666 Inference time: 0.3045499324798584 Add cuts time: 0.01763010025024414 Cut analysis time: 0.0007452964782714844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17110 (27), -0.17042 (27), -0.16836 (27), -0.16777 (27), -0.16493 (27), -0.16487 (27), -0.16420 (27), -0.16415 (27), -0.16082 (27), -0.16014 (27), -0.15908 (27), -0.15906 (27), -0.15807 (27), -0.15805 (27), -0.15802 (27), -0.15755 (27), -0.15735 (27), -0.15734 (27), -0.15686 (27), -0.15677 (27), 
Length of domains: 6269
Time: pickout 0.0654    decision 0.1970    set_bounds 0.4435    solve 0.8894    add 0.0651    
Accumulated time: pickout 0.3728    decision 2.3325    set_bounds 2.4628    solve 6.5656    add 0.3604    
Current (lb-rhs): -0.17109808325767517
28971 domains visited
Cumulative time: 17.773108959197998

BaB round 19
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input-8, 146] [/input, 374] [/input-8, 146] [/input, 374] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1695566177368164
10 lb beta sum: 1.397878646850586, worst -0.16596832871437073
Time: prepare 0.1859    bound 0.4999    transfer 0.0374    finalize 0.2057    func 0.9832    
Accumulated time: func 7.5887    prepare 1.6088    bound 4.7763    transfer 0.2492    finalize 0.4527    
all_split False
======================Cut inference begins======================
max lb tensor(0.34286952) min lb tensor(-0.16595298)
Number of Verified Splits: 3630 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 1.0165112018585205 
BICCOS Cumulative time: 6.429365158081055
Preprocessing time: 0.25291967391967773 Inference time: 0.6939737796783447 Add cuts time: 0.06889510154724121 Cut analysis time: 0.0007226467132568359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16595 (28), -0.16528 (28), -0.16493 (27), -0.16487 (27), -0.16420 (27), -0.16415 (27), -0.16288 (28), -0.16229 (28), -0.15908 (28), -0.15906 (28), -0.15807 (28), -0.15805 (28), -0.15735 (27), -0.15734 (27), -0.15568 (28), -0.15539 (27), -0.15516 (28), -0.15511 (28), -0.15499 (28), -0.15482 (27), 
Length of domains: 6735
Time: pickout 0.0648    decision 0.2282    set_bounds 0.3624    solve 0.9852    add 0.0118    
Accumulated time: pickout 0.4376    decision 2.5607    set_bounds 2.8252    solve 7.5509    add 0.3722    
Current (lb-rhs): -0.16595298051834106
33533 domains visited
current_vram/total_varm: 16.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 20.49077343940735

BaB round 20
batch: 6735
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 158] [/input-8, 1949] [/input-8, 146] [/input-8, 158] [/input-8, 420] [/input-8, 1949] [/input-8, 146] [/input-8, 420] [/input-8, 146] [/input-8, 1949] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17301702499389648
10 lb beta sum: 1.2780852317810059, worst -0.16595458984375
Time: prepare 0.3159    bound 1.0811    transfer 0.0653    finalize 0.0899    func 1.6404    
Accumulated time: func 9.2291    prepare 1.9249    bound 5.8575    transfer 0.3145    finalize 0.5426    
all_split False
======================Cut inference begins======================
max lb tensor(0.37960243) min lb tensor(-0.16595173)
Number of Verified Splits: 4922 of 13470
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 28
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 1.7593846321105957 
BICCOS Cumulative time: 8.18874979019165
Preprocessing time: 0.42707157135009766 Inference time: 1.2334508895874023 Add cuts time: 0.09800910949707031 Cut analysis time: 0.0008530616760253906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16595 (29), -0.16527 (29), -0.16492 (28), -0.16487 (28), -0.16419 (28), -0.16414 (28), -0.16287 (29), -0.16229 (29), -0.15908 (29), -0.15906 (29), -0.15807 (29), -0.15805 (29), -0.15567 (29), -0.15511 (29), -0.15508 (29), -0.15498 (29), -0.15411 (29), -0.15409 (29), -0.15303 (29), -0.15259 (28), 
Length of domains: 8548
Time: pickout 0.1292    decision 0.5345    set_bounds 0.7747    solve 1.6438    add 0.1182    
Accumulated time: pickout 0.5669    decision 3.0952    set_bounds 3.5999    solve 9.1947    add 0.4904    
Current (lb-rhs): -0.16595172882080078
42081 domains visited
Cumulative time: 25.51496934890747

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3180] [/input, 3180] [/input, 3180] [/input-12, 13] [/input, 3196] [/input-8, 1387] [/input-8, 1949] [/input-8, 416] [/input-8, 1387] [/input-8, 1387] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16822481155395508
10 lb beta sum: 1.1650913953781128, worst -0.16288137435913086
Time: prepare 0.3895    bound 1.2931    transfer 0.0745    finalize 0.3716    func 2.2367    
Accumulated time: func 11.4658    prepare 2.3147    bound 7.1506    transfer 0.3890    finalize 0.9142    
all_split False
======================Cut inference begins======================
max lb tensor(0.37758946) min lb tensor(-0.16287300)
Number of Verified Splits: 5835 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 2.1112987995147705 
BICCOS Cumulative time: 10.300048589706421
Preprocessing time: 0.525322675704956 Inference time: 1.4814376831054688 Add cuts time: 0.10373306274414062 Cut analysis time: 0.0008053779602050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16287 (30), -0.16231 (30), -0.16229 (30), -0.16162 (30), -0.16012 (29), -0.16008 (29), -0.15939 (29), -0.15935 (29), -0.15908 (30), -0.15906 (30), -0.15807 (30), -0.15805 (30), -0.15640 (29), -0.15636 (29), -0.15566 (29), -0.15562 (29), -0.15510 (30), -0.15507 (30), -0.15410 (30), -0.15408 (30), 
Length of domains: 10905
Time: pickout 0.1386    decision 0.4481    set_bounds 0.9403    solve 2.2404    add 0.0277    
Accumulated time: pickout 0.7055    decision 3.5433    set_bounds 4.5402    solve 11.4351    add 0.5181    
Current (lb-rhs): -0.16287299990653992
52630 domains visited
current_vram/total_varm: 26.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 31.50015425682068

BaB round 22
batch: 10905
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 146] [/input-8, 1195] [/input-8, 1195] [/input-8, 1195] [/input-8, 1195] [/input-8, 1195] 
cut re-enabled after branching node selection
0 lb beta sum: 1.28739595413208, worst -0.5218011140823364
10 lb beta sum: 1.4189887046813965, worst -0.16012346744537354
Time: prepare 1.0230    bound 1.7009    transfer 0.1063    finalize 0.4326    func 3.4109    
Accumulated time: func 14.8767    prepare 3.3381    bound 8.8515    transfer 0.4953    finalize 1.3468    
all_split False
======================Cut inference begins======================
max lb tensor(0.80030447) min lb tensor(-0.16011775)
Number of Verified Splits: 8103 of 21810
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 32
#cuts >= 20: 0
BICCOS time: 2.7454490661621094 
BICCOS Cumulative time: 13.04549765586853
Preprocessing time: 0.6780917644500732 Inference time: 1.9427967071533203 Add cuts time: 0.12379217147827148 Cut analysis time: 0.0007684230804443359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16012 (30), -0.16007 (30), -0.15939 (30), -0.15935 (30), -0.15662 (31), -0.15607 (31), -0.15605 (31), -0.15601 (31), -0.15567 (31), -0.15546 (31), -0.15514 (31), -0.15503 (31), -0.15500 (31), -0.15470 (31), -0.15463 (31), -0.15363 (31), -0.15259 (30), -0.15257 (30), -0.15251 (30), -0.15202 (30), 
Length of domains: 13707
Time: pickout 0.2246    decision 0.6013    set_bounds 1.2243    solve 3.4167    add 0.1815    
Accumulated time: pickout 0.9301    decision 4.1446    set_bounds 5.7644    solve 14.8518    add 0.6996    
Current (lb-rhs): -0.1601177453994751
66337 domains visited
Cumulative time: 40.0007266998291

BaB round 23
batch: 13707
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 374] [/input, 374] [/input-12, 53] [/input-12, 53] [/input-8, 1195] [/input-12, 53] [/input-12, 53] [/input-12, 13] [/input-12, 53] [/input, 374] 
cut re-enabled after branching node selection
0 lb beta sum: 1.3501026630401611, worst -0.27612853050231934
10 lb beta sum: 1.9380664825439453, worst -0.1529179811477661
Time: prepare 1.3275    bound 1.5172    transfer 0.1330    finalize 0.1829    func 3.3424    
Accumulated time: func 18.2191    prepare 4.6659    bound 10.3686    transfer 0.6283    finalize 1.5297    
all_split False
======================Cut inference begins======================
max lb tensor(0.87655848) min lb tensor(-0.15291083)
Number of Verified Splits: 21488 of 27414
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 5.925224781036377 
BICCOS Cumulative time: 18.970722436904907
Preprocessing time: 0.8196220397949219 Inference time: 4.880203008651733 Add cuts time: 0.22432279586791992 Cut analysis time: 0.0010769367218017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15291 (31), -0.15285 (31), -0.15217 (31), -0.15211 (31), -0.14481 (32), -0.14371 (32), -0.14350 (32), -0.14291 (32), -0.14284 (31), -0.14268 (32), -0.14241 (32), -0.14237 (32), -0.14232 (32), -0.14229 (31), -0.14209 (32), -0.14178 (32), -0.14155 (32), -0.14154 (32), -0.14137 (32), -0.14137 (32), 
Length of domains: 5926
Time: pickout 0.3472    decision 1.0452    set_bounds 1.5832    solve 3.7107    add 0.0301    
Accumulated time: pickout 1.2773    decision 5.1898    set_bounds 7.3477    solve 18.5625    add 0.7297    
Current (lb-rhs): -0.15291082859039307
72263 domains visited
Cumulative time: 52.8893666267395

BaB round 24
batch: 5926
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1949] [/input-8, 1949] [/input-8, 1949] [/input-8, 423] [/input-8, 154] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] [/input-8, 423] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15841293334960938
10 lb beta sum: 1.5803918838500977, worst -0.14255845546722412
Time: prepare 0.2673    bound 0.7018    transfer 0.0573    finalize 0.0758    func 1.1782    
Accumulated time: func 19.3974    prepare 4.9335    bound 11.0705    transfer 0.6856    finalize 1.6054    
all_split False
======================Cut inference begins======================
max lb tensor(0.36829948) min lb tensor(-0.14252293)
Number of Verified Splits: 4247 of 11852
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 35
#cuts >= 20: 0
BICCOS time: 1.590137243270874 
BICCOS Cumulative time: 20.56085968017578
Preprocessing time: 0.39299607276916504 Inference time: 1.145961046218872 Add cuts time: 0.05044412612915039 Cut analysis time: 0.0007359981536865234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14252 (32), -0.14245 (32), -0.14176 (32), -0.14173 (32), -0.13863 (33), -0.13804 (33), -0.13790 (33), -0.13751 (33), -0.13732 (33), -0.13679 (33), -0.13667 (33), -0.13647 (33), -0.13595 (33), -0.13542 (33), -0.13445 (32), -0.13375 (33), -0.13317 (33), -0.13304 (32), -0.13272 (33), -0.13257 (33), 
Length of domains: 7605
Time: pickout 0.1150    decision 0.3270    set_bounds 0.8045    solve 1.1817    add 0.0200    
Accumulated time: pickout 1.3923    decision 5.5168    set_bounds 8.1522    solve 19.7442    add 0.7497    
Current (lb-rhs): -0.142522931098938
79868 domains visited
Cumulative time: 56.98515772819519

BaB round 25
batch: 7605
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 423] [/input-8, 1629] [/input-8, 414] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9185206890106201, worst -0.14252102375030518
10 lb beta sum: 1.9185206890106201, worst -0.14249145984649658
Time: prepare 0.6851    bound 0.8754    transfer 0.0747    finalize 0.0981    func 1.8345    
Accumulated time: func 21.2319    prepare 5.6189    bound 11.9459    transfer 0.7603    finalize 1.7036    
all_split False
======================Cut inference begins======================
max lb tensor(0.31524062) min lb tensor(-0.14247048)
Number of Verified Splits: 5929 of 15210
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 1.8652925491333008 
BICCOS Cumulative time: 22.426152229309082
Preprocessing time: 0.4991440773010254 Inference time: 1.3100306987762451 Add cuts time: 0.055300235748291016 Cut analysis time: 0.0008175373077392578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14247 (33), -0.14241 (33), -0.14209 (33), -0.14203 (33), -0.14172 (33), -0.14166 (33), -0.14134 (33), -0.14127 (33), -0.13856 (34), -0.13796 (34), -0.13789 (34), -0.13744 (34), -0.13730 (34), -0.13678 (34), -0.13660 (34), -0.13639 (34), -0.13594 (34), -0.13533 (34), -0.13373 (34), -0.13309 (34), 
Length of domains: 9281
Time: pickout 0.1373    decision 0.4155    set_bounds 0.8926    solve 2.0639    add 0.0288    
Accumulated time: pickout 1.5296    decision 5.9323    set_bounds 9.0448    solve 21.8081    add 0.7786    
Current (lb-rhs): -0.14247047901153564
89149 domains visited
Cumulative time: 62.46836853027344

BaB round 26
batch: 9281
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1504673957824707
10 lb beta sum: 1.5771623849868774, worst -0.13636493682861328
Time: prepare 0.4253    bound 1.0562    transfer 0.0850    finalize 0.1131    func 1.8024    
Accumulated time: func 23.0343    prepare 6.0447    bound 13.0021    transfer 0.8453    finalize 1.8166    
all_split False
======================Cut inference begins======================
max lb tensor(0.56287897) min lb tensor(-0.13635778)
Number of Verified Splits: 7650 of 18562
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 36
#cuts >= 20: 0
BICCOS time: 2.4681122303009033 
BICCOS Cumulative time: 24.894264459609985
Preprocessing time: 0.6026229858398438 Inference time: 1.7683141231536865 Add cuts time: 0.09639430046081543 Cut analysis time: 0.0007808208465576172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13636 (35), -0.13619 (34), -0.13607 (34), -0.13592 (35), -0.13559 (34), -0.13548 (34), -0.13531 (35), -0.13524 (34), -0.13518 (35), -0.13513 (34), -0.13487 (35), -0.13464 (34), -0.13458 (35), -0.13457 (35), -0.13454 (34), -0.13397 (35), -0.13395 (35), -0.13334 (35), -0.13311 (35), -0.13250 (35), 
Length of domains: 10912
Time: pickout 0.2064    decision 0.7530    set_bounds 1.0483    solve 2.0814    add 0.0295    
Accumulated time: pickout 1.7360    decision 6.6853    set_bounds 10.0931    solve 23.8896    add 0.8080    
Current (lb-rhs): -0.13635778427124023
100061 domains visited
Cumulative time: 69.1532678604126

BaB round 27
batch: 10912
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input-8, 414] [/input, 408] [/input, 408] [/input-8, 420] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7938945293426514, worst -0.13518241047859192
10 lb beta sum: 1.7938945293426514, worst -0.13514235615730286
Time: prepare 1.0281    bound 1.2293    transfer 0.1028    finalize 0.4079    func 2.9119    
Accumulated time: func 25.9462    prepare 7.0732    bound 14.2314    transfer 0.9480    finalize 2.2245    
all_split False
======================Cut inference begins======================
max lb tensor(0.25759435) min lb tensor(-0.13511756)
Number of Verified Splits: 6023 of 21824
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 2.57780385017395 
BICCOS Cumulative time: 27.472068309783936
Preprocessing time: 0.7027237415313721 Inference time: 1.7856941223144531 Add cuts time: 0.08856654167175293 Cut analysis time: 0.0008194446563720703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13512 (36), -0.13457 (36), -0.13451 (36), -0.13395 (36), -0.13388 (36), -0.13333 (36), -0.13312 (36), -0.13305 (36), -0.13298 (35), -0.13288 (35), -0.13261 (36), -0.13249 (36), -0.13240 (35), -0.13236 (36), -0.13230 (35), -0.13217 (36), -0.13209 (35), -0.13198 (35), -0.13172 (36), -0.13166 (36), 
Length of domains: 15801
Time: pickout 0.2470    decision 0.8414    set_bounds 1.2198    solve 2.9167    add 0.0428    
Accumulated time: pickout 1.9831    decision 7.5266    set_bounds 11.3130    solve 26.8063    add 0.8509    
Current (lb-rhs): -0.1351175606250763
115862 domains visited
Cumulative time: 77.09124612808228

BaB round 28
batch: 15801
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1195] [/input-8, 1195] [/input-8, 420] [/input-8, 420] [/input-8, 420] [/input-8, 420] [/input-8, 1195] [/input-8, 1195] [/input-8, 1195] [/input-8, 1629] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14184284210205078
10 lb beta sum: 1.573237657546997, worst -0.13027125597000122
Time: prepare 0.7901    bound 1.7446    transfer 0.1542    finalize 0.1959    func 3.4419    
Accumulated time: func 29.3881    prepare 7.8637    bound 15.9760    transfer 1.1022    finalize 2.4204    
all_split False
======================Cut inference begins======================
max lb tensor(0.29710424) min lb tensor(-0.13024196)
Number of Verified Splits: 5424 of 31602
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 39
#cuts >= 20: 0
BICCOS time: 2.507916212081909 
BICCOS Cumulative time: 29.979984521865845
Preprocessing time: 1.0564281940460205 Inference time: 1.3655059337615967 Add cuts time: 0.0851449966430664 Cut analysis time: 0.0008370876312255859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13024 (36), -0.13014 (36), -0.12965 (36), -0.12956 (36), -0.12937 (37), -0.12931 (36), -0.12921 (36), -0.12913 (37), -0.12878 (37), -0.12872 (37), -0.12872 (36), -0.12863 (36), -0.12853 (37), -0.12846 (37), -0.12834 (37), -0.12816 (37), -0.12810 (37), -0.12794 (37), -0.12792 (37), -0.12791 (37), 
Length of domains: 26178
Time: pickout 0.3625    decision 1.1811    set_bounds 1.7792    solve 3.4481    add 0.2580    
Accumulated time: pickout 2.3456    decision 8.7077    set_bounds 13.0921    solve 30.2545    add 1.1089    
Current (lb-rhs): -0.13024196028709412
142040 domains visited
Cumulative time: 86.72006344795227

BaB round 29
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 374] [/input, 374] [/input-8, 420] [/input-8, 420] [/input-8, 420] [/input, 374] [/input-8, 1754] [/input, 408] [/input-8, 1754] [/input, 374] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14013147354125977
10 lb beta sum: 1.852888822555542, worst -0.1263267993927002
Time: prepare 0.8532    bound 1.8049    transfer 0.1499    finalize 0.6368    func 3.6549    
Accumulated time: func 33.0429    prepare 8.7173    bound 17.7810    transfer 1.2521    finalize 3.0572    
all_split False
======================Cut inference begins======================
max lb tensor(0.29813409) min lb tensor(-0.12629282)
Number of Verified Splits: 6602 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 3.1600894927978516 
BICCOS Cumulative time: 33.140074014663696
Preprocessing time: 0.9935734272003174 Inference time: 2.069626808166504 Add cuts time: 0.09606575965881348 Cut analysis time: 0.0008234977722167969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12629 (37), -0.12621 (37), -0.12579 (37), -0.12558 (37), -0.12549 (37), -0.12547 (37), -0.12540 (37), -0.12518 (36), -0.12506 (36), -0.12502 (38), -0.12476 (37), -0.12468 (37), -0.12459 (36), -0.12449 (36), -0.12399 (36), -0.12392 (36), -0.12345 (36), -0.12333 (36), -0.12277 (38), -0.12250 (38), 
Length of domains: 35960
Time: pickout 0.3365    decision 2.0100    set_bounds 1.8731    solve 3.6614    add 0.5015    
Accumulated time: pickout 2.6821    decision 10.7177    set_bounds 14.9653    solve 33.9158    add 1.6104    
Current (lb-rhs): -0.12629282474517822
168206 domains visited
Cumulative time: 98.36864924430847

BaB round 30
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1388] [/input-8, 1388] [/input-8, 1195] [/input-8, 242] [/input-8, 1195] [/input-8, 242] [/input-8, 242] [/input, 3544] [/input, 3544] [/input-8, 1388] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1349964141845703
10 lb beta sum: 2.001420736312866, worst -0.1224902868270874
Time: prepare 0.8437    bound 1.8051    transfer 0.1486    finalize 0.7691    func 3.7797    
Accumulated time: func 36.8226    prepare 9.5614    bound 19.5861    transfer 1.4007    finalize 3.8263    
all_split False
======================Cut inference begins======================
max lb tensor(0.29821855) min lb tensor(-0.12247527)
Number of Verified Splits: 7434 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 2.9797356128692627 
BICCOS Cumulative time: 36.11980962753296
Preprocessing time: 1.010791301727295 Inference time: 1.8519551753997803 Add cuts time: 0.1160135269165039 Cut analysis time: 0.0009756088256835938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12629 (37), -0.12621 (37), -0.12558 (37), -0.12549 (37), -0.12547 (37), -0.12540 (37), -0.12502 (38), -0.12476 (37), -0.12468 (37), -0.12248 (39), -0.12241 (38), -0.12219 (38), -0.12174 (39), -0.12164 (39), -0.12155 (39), -0.12155 (38), -0.12146 (39), -0.12133 (38), -0.12082 (39), -0.12073 (39), 
Length of domains: 44910
Time: pickout 0.3508    decision 1.6535    set_bounds 2.0241    solve 3.7864    add 0.0678    
Accumulated time: pickout 3.0329    decision 12.3712    set_bounds 16.9894    solve 37.7022    add 1.6783    
Current (lb-rhs): -0.12629282474517822
193540 domains visited
Cumulative time: 109.33684611320496

BaB round 31
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2931] [/input, 2931] [/input-8, 1754] [/input-8, 1629] [/input-8, 1097] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1178] [/input-8, 1629] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1373143196105957
10 lb beta sum: 1.9303631782531738, worst -0.125565767288208
Time: prepare 0.8694    bound 1.8047    transfer 0.1487    finalize 0.2091    func 3.2482    
Accumulated time: func 40.0708    prepare 10.4312    bound 21.3908    transfer 1.5494    finalize 4.0354    
all_split False
======================Cut inference begins======================
max lb tensor(0.30051398) min lb tensor(-0.12555999)
Number of Verified Splits: 7859 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 3.8227427005767822 
BICCOS Cumulative time: 39.94255232810974
Preprocessing time: 1.7276268005371094 Inference time: 1.9751551151275635 Add cuts time: 0.11911821365356445 Cut analysis time: 0.0008425712585449219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12556 (38), -0.12548 (38), -0.12547 (37), -0.12540 (37), -0.12475 (38), -0.12475 (38), -0.12468 (38), -0.12467 (38), -0.12248 (39), -0.12239 (39), -0.12174 (39), -0.12164 (39), -0.12155 (39), -0.12146 (39), -0.12082 (39), -0.12073 (39), -0.12062 (37), -0.12054 (37), -0.12023 (39), -0.12015 (37), 
Length of domains: 53435
Time: pickout 0.3494    decision 2.2166    set_bounds 2.1620    solve 3.2553    add 0.0674    
Accumulated time: pickout 3.3823    decision 14.5878    set_bounds 19.1514    solve 40.9575    add 1.7457    
Current (lb-rhs): -0.1255599856376648
218449 domains visited
Cumulative time: 121.33484673500061

BaB round 32
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 408] [/input, 408] [/input-8, 1629] [/input-8, 150] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 1097] [/input-8, 1097] [/input-8, 433] 
cut re-enabled after branching node selection
0 lb beta sum: 1.8538944721221924, worst -0.13619422912597656
10 lb beta sum: 2.241330146789551, worst -0.12397199869155884
Time: prepare 1.4716    bound 1.8037    transfer 0.1490    finalize 0.2138    func 4.6025    
Accumulated time: func 44.6733    prepare 11.9032    bound 23.1945    transfer 1.6984    finalize 4.2492    
all_split False
======================Cut inference begins======================
max lb tensor(0.29685581) min lb tensor(-0.12393546)
Number of Verified Splits: 7830 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 3.0716683864593506 
BICCOS Cumulative time: 43.01422071456909
Preprocessing time: 1.0204110145568848 Inference time: 1.9448530673980713 Add cuts time: 0.10551738739013672 Cut analysis time: 0.0008869171142578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12556 (38), -0.12548 (38), -0.12475 (38), -0.12475 (38), -0.12468 (38), -0.12467 (38), -0.12394 (38), -0.12386 (38), -0.12248 (39), -0.12239 (39), -0.12174 (39), -0.12164 (39), -0.12155 (39), -0.12146 (39), -0.12082 (39), -0.12073 (39), -0.12023 (39), -0.12001 (39), -0.11982 (38), -0.11981 (37), 
Length of domains: 61989
Time: pickout 0.3493    decision 1.6474    set_bounds 2.2580    solve 4.6093    add 0.0682    
Accumulated time: pickout 3.7316    decision 16.2352    set_bounds 21.4094    solve 45.5668    add 1.8139    
Current (lb-rhs): -0.1255599856376648
243387 domains visited
Cumulative time: 133.45230197906494

BaB round 33
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 150] [/input, 408] [/input, 2931] [/input-8, 1387] [/input-8, 150] [/input, 2931] [/input, 963] [/input-8, 1629] [/input-8, 1629] [/input, 2931] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2842745780944824, worst -0.1224743127822876
10 lb beta sum: 2.2842745780944824, worst -0.1224738359451294
Time: prepare 1.6337    bound 1.8053    transfer 0.1489    finalize 0.2277    func 4.8528    
Accumulated time: func 49.5262    prepare 13.5373    bound 24.9997    transfer 1.8474    finalize 4.4770    
all_split False
======================Cut inference begins======================
max lb tensor(0.24291182) min lb tensor(-0.12246859)
Number of Verified Splits: 7878 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 42
#cuts >= 20: 0
BICCOS time: 3.101172924041748 
BICCOS Cumulative time: 46.11539363861084
Preprocessing time: 1.0287487506866455 Inference time: 1.9660899639129639 Add cuts time: 0.10546660423278809 Cut analysis time: 0.0008676052093505859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12556 (38), -0.12548 (38), -0.12475 (38), -0.12475 (38), -0.12468 (38), -0.12467 (38), -0.12394 (38), -0.12386 (38), -0.12247 (40), -0.12239 (39), -0.12174 (40), -0.12164 (40), -0.12072 (40), -0.11982 (38), -0.11975 (38), -0.11919 (40), -0.11910 (40), -0.11901 (38), -0.11894 (38), -0.11873 (38), 
Length of domains: 70495
Time: pickout 0.3547    decision 2.1819    set_bounds 1.5890    solve 4.8602    add 8.7838    
Accumulated time: pickout 4.0863    decision 18.4171    set_bounds 22.9984    solve 50.4271    add 10.5977    
Current (lb-rhs): -0.1255599856376648
268277 domains visited
Cumulative time: 154.4572856426239

BaB round 34
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 150] [/input-8, 150] [/input-8, 150] [/input-8, 150] [/input-8, 150] [/input-8, 150] [/input, 2931] [/input-8, 150] [/input-8, 150] [/input, 408] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13358020782470703
10 lb beta sum: 2.148653507232666, worst -0.11952698230743408
Time: prepare 0.9065    bound 1.8086    transfer 0.1488    finalize 0.2373    func 3.3185    
Accumulated time: func 52.8446    prepare 14.4441    bound 26.8083    transfer 1.9962    finalize 4.7143    
all_split False
======================Cut inference begins======================
max lb tensor(0.30012822) min lb tensor(-0.11951280)
Number of Verified Splits: 9868 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 43
#cuts >= 20: 0
BICCOS time: 4.6253790855407715 
BICCOS Cumulative time: 50.74077272415161
Preprocessing time: 2.0095021724700928 Inference time: 2.4447569847106934 Add cuts time: 0.17021751403808594 Cut analysis time: 0.0009024143218994141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12394 (38), -0.12386 (38), -0.12247 (40), -0.12174 (40), -0.12164 (40), -0.12072 (40), -0.11982 (38), -0.11975 (38), -0.11951 (39), -0.11930 (39), -0.11919 (40), -0.11910 (40), -0.11901 (38), -0.11894 (38), -0.11882 (39), -0.11873 (38), -0.11866 (38), -0.11862 (39), -0.11846 (40), -0.11831 (39), 
Length of domains: 77011
Time: pickout 0.3576    decision 2.4926    set_bounds 1.6211    solve 3.3280    add 0.0643    
Accumulated time: pickout 4.4439    decision 20.9097    set_bounds 24.6195    solve 53.7551    add 10.6620    
Current (lb-rhs): -0.12393546104431152
291177 domains visited
Cumulative time: 167.0867121219635

BaB round 35
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1754] [/input-8, 737] [/input-8, 737] [/input-8, 1396] [/input-8, 433] [/input-8, 1388] [/input-8, 1388] [/input-8, 1754] [/input-8, 737] [/input-8, 1754] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13231706619262695
10 lb beta sum: 2.31436824798584, worst -0.11765146255493164
Time: prepare 0.9160    bound 2.5390    transfer 0.1512    finalize 0.2662    func 4.0919    
Accumulated time: func 56.9366    prepare 15.3605    bound 29.3473    transfer 2.1474    finalize 4.9805    
all_split False
======================Cut inference begins======================
max lb tensor(0.29655433) min lb tensor(-0.11761689)
Number of Verified Splits: 10082 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 43
#cuts >= 20: 0
BICCOS time: 4.832334518432617 
BICCOS Cumulative time: 55.57310724258423
Preprocessing time: 1.063624620437622 Inference time: 3.588761329650879 Add cuts time: 0.17882895469665527 Cut analysis time: 0.0011196136474609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12247 (40), -0.12174 (40), -0.12164 (40), -0.12072 (40), -0.11982 (38), -0.11975 (38), -0.11951 (39), -0.11930 (39), -0.11919 (40), -0.11910 (40), -0.11901 (38), -0.11894 (38), -0.11882 (39), -0.11862 (39), -0.11846 (40), -0.11831 (39), -0.11829 (39), -0.11823 (40), -0.11815 (40), -0.11795 (38), 
Length of domains: 83313
Time: pickout 0.3619    decision 1.6502    set_bounds 2.5346    solve 4.1037    add 0.0668    
Accumulated time: pickout 4.8058    decision 22.5599    set_bounds 27.1541    solve 57.8588    add 10.7288    
Current (lb-rhs): -0.12246859073638916
313863 domains visited
Cumulative time: 180.81944847106934

BaB round 36
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 737] [/input-8, 1388] [/input-8, 1388] [/input-8, 737] [/input-8, 737] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1396] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12784528732299805
10 lb beta sum: 2.3040268421173096, worst -0.1137053370475769
Time: prepare 1.9547    bound 2.5369    transfer 0.1493    finalize 0.2697    func 5.1221    
Accumulated time: func 62.0587    prepare 17.3156    bound 31.8842    transfer 2.2967    finalize 5.2502    
all_split False
======================Cut inference begins======================
max lb tensor(0.29292405) min lb tensor(-0.11369634)
Number of Verified Splits: 9096 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 43
#cuts >= 20: 0
BICCOS time: 3.509229898452759 
BICCOS Cumulative time: 59.08233714103699
Preprocessing time: 1.0742847919464111 Inference time: 2.267242431640625 Add cuts time: 0.16654658317565918 Cut analysis time: 0.0011560916900634766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12247 (40), -0.12174 (40), -0.12164 (40), -0.12072 (40), -0.11951 (39), -0.11930 (39), -0.11919 (40), -0.11910 (40), -0.11882 (39), -0.11862 (39), -0.11846 (40), -0.11831 (39), -0.11829 (39), -0.11815 (40), -0.11793 (40), -0.11762 (39), -0.11760 (39), -0.11728 (40), -0.11707 (40), -0.11629 (40), 
Length of domains: 90601
Time: pickout 0.3765    decision 1.6572    set_bounds 1.6569    solve 5.1335    add 0.0693    
Accumulated time: pickout 5.1824    decision 24.2170    set_bounds 28.8110    solve 62.9922    add 10.7982    
Current (lb-rhs): -0.12246859073638916
337535 domains visited
Cumulative time: 193.3688735961914

BaB round 37
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 150] [/input-8, 150] [/input-8, 150] [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input-8, 150] [/input-8, 150] [/input-8, 150] [/input-8, 150] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1263747215270996
10 lb beta sum: 2.2470359802246094, worst -0.11652398109436035
Time: prepare 0.9182    bound 2.5350    transfer 0.1497    finalize 0.2411    func 4.0657    
Accumulated time: func 66.1244    prepare 18.2342    bound 34.4192    transfer 2.4464    finalize 5.4913    
all_split False
======================Cut inference begins======================
max lb tensor(0.29390460) min lb tensor(-0.11651152)
Number of Verified Splits: 10084 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 43
#cuts >= 20: 0
BICCOS time: 3.839395761489868 
BICCOS Cumulative time: 62.921732902526855
Preprocessing time: 1.0513606071472168 Inference time: 2.6005399227142334 Add cuts time: 0.18656086921691895 Cut analysis time: 0.0009343624114990234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11951 (39), -0.11930 (39), -0.11882 (39), -0.11862 (39), -0.11831 (39), -0.11829 (39), -0.11815 (40), -0.11793 (40), -0.11762 (39), -0.11760 (39), -0.11728 (40), -0.11707 (40), -0.11651 (41), -0.11629 (40), -0.11583 (41), -0.11571 (40), -0.11562 (41), -0.11541 (41), -0.11517 (40), -0.11513 (41), 
Length of domains: 96901
Time: pickout 0.3695    decision 2.5780    set_bounds 1.6701    solve 5.2898    add 0.0822    
Accumulated time: pickout 5.5519    decision 26.7951    set_bounds 30.4812    solve 68.2821    add 10.8804    
Current (lb-rhs): -0.11951279640197754
360219 domains visited
Time out!!!!!!!!
Result: unknown in 209.8274 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.06784821, -10.58980083, -14.57435703, -13.27788925, -13.83081436,
         -14.45864487, -13.14409447, -13.97298336, -12.07690144,  -9.28960514]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [479]; unstable size 479; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 479] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 479] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 217] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.56003881, 0.62899387, 3.70473719, 2.64315987, 3.00231910, 3.71363831,
         2.32805920, 2.93838739, 1.83370209]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0488 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.44266796, -16.16106987, -11.92645931, -10.71731567, -11.05861855,
         -10.75457382, -13.42498779, -10.81375790, -16.44475365, -15.04152584]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [587]; unstable size 587; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 587] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 587] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 221] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55051136,  4.09006071,  0.36009479, -0.47126311, -0.31621832,
          1.88454628, -0.86957800,  4.73674679,  3.06783509]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.44266796, -16.16106987, -11.92645931, -10.71731567, -11.05861855,
         -10.75457382, -13.42498779, -10.81375790, -16.44475365, -15.04152584]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.83619690, -16.61016846, -12.28275108, -11.27688122, -11.14465904,
          -11.27646160, -13.88090134, -10.95770168, -16.84897423, -15.54391193],
         [-14.83619690, -16.61016846, -12.28275108, -11.27688122, -11.14465904,
          -11.27646160, -13.88090134, -10.95770168, -16.84897423, -15.54391193]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13222218, -0.00041962, -0.31917953]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0127 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0612 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.68520546, -29.33057404, -23.34724998, -23.50040627, -23.08244896,
         -23.89678383, -23.22287750, -25.18677521, -28.65573311, -29.02714920]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [857]; unstable size 857; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 401, 1, 857] with unstable size 400 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 857] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 857] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [400]; unstable size 400; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 400] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 400] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.34057236,  3.30707335, -1.46605670, -1.78303576, -0.07614893,
         -1.46367002,  0.02865028,  2.77813053,  3.23617649]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.68520546, -29.33057404, -23.34724998, -23.50040627, -23.08244896,
         -23.89678383, -23.22287750, -25.18677521, -28.65573311, -29.02714920]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.68520737, -29.33057594, -23.34725189, -23.50040627, -23.08245087,
          -23.89678574, -23.22287941, -25.18677711, -28.65573311, -29.02714920],
         [-26.68520737, -29.33057594, -23.34725189, -23.50040627, -23.08245087,
          -23.89678574, -23.22287941, -25.18677711, -28.65573311, -29.02714920]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15315437, -0.41795540,  0.39637947, -0.27752686]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0606 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.55547142, -21.29835701, -26.80152893, -27.28372574, -26.67305183,
         -28.70449638, -26.93589401, -28.94626617, -24.43898201, -23.37986755]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [525]; unstable size 525; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 525] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 525] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 253] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.71861172, 3.84952402, 4.56171322, 3.84017372, 5.90634918, 4.26612473,
         6.14898109, 1.99088383, 1.41389060]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0307 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.96761131, -23.51111603, -16.18240738, -18.45089149, -16.26456261,
         -17.94385719, -14.73691177, -18.44084930, -24.07545662, -22.63823509]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [463]; unstable size 463; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 463] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 463] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 463] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 310] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.97309542,  6.70187235, -0.02662754,  2.50170565, -0.07382059,
          1.85107923,  1.77261984,  7.00046873,  5.85668755]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.96761131, -23.51111603, -16.18240738, -18.45089149, -16.26456261,
         -17.94385719, -14.73691177, -18.44084930, -24.07545662, -22.63823509]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.74it/s]100%|██████████| 1/1 [00:00<00:00,  8.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.13876343, -24.08310127, -16.37594223, -18.98218155, -16.69490623,
          -18.46617508, -15.56402779, -18.87380600, -24.34334183, -23.19640350],
         [-21.13876343, -24.08310127, -16.37594223, -18.98218155, -16.69490623,
          -18.46617508, -15.56402779, -18.87380600, -24.34334183, -23.19640350]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.81191444, 1.13087845]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1172 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 8th iter
best_l after optimization: 30.210880279541016
alpha/beta optimization time: 0.11125469207763672
initial alpha-crown bounds: tensor([[4.06331825e+00, 6.77928305e+00, 3.31616402e-02, 2.54543591e+00,
         2.59351730e-03, 1.90330637e+00, 1.86108637e+00, 7.08985615e+00,
         5.93283892e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.002593517303466797
verified with init bound!
Result: safe-incomplete in 0.2743 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
         -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [624]; unstable size 624; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 333, 1, 624] with unstable size 332 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 624] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 624] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [332]; unstable size 332; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 332] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 332] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.85006928,  6.56637955,  0.72854519,  0.16635036,  0.09236521,
         -0.16829300,  2.54186082,  4.97395706,  6.48725224]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
         -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.29it/s]100%|██████████| 1/1 [00:00<00:00,  9.28it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.02144432, -22.99676323, -16.43036079, -14.81798553, -15.77610588,
          -15.32225418, -15.29498672, -18.67889786, -21.40403748, -22.81297874]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.47700119]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1102 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.757083892822266
alpha/beta optimization time: 1.1877903938293457
initial alpha-crown bounds: tensor([[ 3.92190433,  6.63770294,  0.78050566,  0.20929813,  0.10922239,
         -0.07384896,  2.59734678,  5.03754234,  6.53741169]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.07384896278381348
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65447092056274
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6544313430786
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6544053554535
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.65438222885132
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.65436339378357
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.65434384346008
Verifying property 5 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07384896]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
        -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07384896]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 624
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 330
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 975
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011157989501953125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07384753227233887
10 lb beta sum: 0.0, worst -0.0738530158996582
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0530    transfer 0.0001    finalize 0.0001    func 0.0535    
Accumulated time: func 0.0535    prepare 0.0002    bound 0.0530    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 85] 
split level 5: [/input-12, 61] 
split level 6: [/input-8, 220] 
split level 7: [/input-8, 227] 
split level 8: [/input-12, 72] 
split level 9: [/input-8, 219] 
split level 10: [/input-8, 1947] 
split level 11: [/input-8, 229] 
split level 12: [/input-8, 221] 
split level 13: [/input-8, 612] 
split level 14: [/input-12, 43] 
split level 15: [/input-8, 1948] 
split level 16: [/input-8, 214] 
split level 17: [/input-8, 1697] 
split level 18: [/input-8, 206] 
split level 19: [/input-8, 1372] 
split level 20: [/input-8, 578] 
split level 21: [/input-8, 605] 
split level 22: [/input, 3153] 
split level 23: [/input-8, 238] 
split level 24: [/input-8, 1380] 
split level 25: [/input-8, 1954] 
split level 26: [/input-8, 1381] 
split level 27: [/input-8, 245] 
split level 28: [/input-8, 593] 
split level 29: [/input-8, 946] 
split level 30: [/input-8, 213] 
split level 31: [/input-8, 1709] 
split level 32: [/input-8, 239] 
split level 33: [/input-8, 577] 
split level 34: [/input-8, 218] 
split level 35: [/input-8, 235] 
split level 36: [/input-8, 223] 
split level 37: [/input, 2657] 
split level 38: [/input-8, 211] 
split level 39: [/input-8, 222] 
split level 40: [/input, 1403] 
split level 41: [/input, 3475] 
split level 42: [/input-8, 1373] 
split level 43: [/input-8, 1379] 
split level 44: [/input-8, 1374] 
split level 45: [/input-8, 1710] 
split level 46: [/input, 3427] 
split level 47: [/input-8, 224] 
split level 48: [/input, 929] 
split level 49: [/input-8, 254] 
split level 50: [/input, 710] 
split level 51: [/input, 922] 
split level 52: [/input, 3139] 
split level 53: [/input, 3235] 
split level 54: [/input, 900] 
split level 55: [/input, 1002] 
split level 56: [/input-8, 203] 
split level 57: [/input, 3138] 
split level 58: [/input-8, 1763] 
split level 59: [/input, 3973] 
split level 60: [/input, 2441] 
split level 61: [/input, 2993] 
split level 62: [/input-8, 240] 
split level 63: [/input, 1351] 
split level 64: [/input-8, 345] 
split level 65: [/input-8, 231] 
split level 66: [/input-8, 988] 
split level 67: [/input, 2423] 
split level 68: [/input-8, 1931] 
split level 69: [/input-8, 196] 
split level 70: [/input-8, 1169] 
split level 71: [/input-8, 1774] 
split level 72: [/input-8, 242] 
split level 73: [/input, 2679] 
split level 74: [/input-8, 204] 
split level 75: [/input-8, 1365] 
split level 76: [/input, 1400] 
split level 77: [/input-8, 2005] 
split level 78: [/input-8, 1946] 
split level 79: [/input, 2673] 
split level 80: [/input, 3219] 
split level 81: [/input, 930] 
split level 82: [/input-8, 241] 
split level 83: [/input, 193] 
split level 84: [/input, 1385] 
split level 85: [/input, 2184] 
split level 86: [/input, 2263] 
split level 87: [/input, 2721] 
split level 88: [/input, 2977] 
split level 89: [/input, 172] 
split level 90: [/input, 2994] 
split level 91: [/input-8, 247] 
split level 92: [/input, 2165] 
split level 93: [/input, 1640] 
split level 94: [/input, 2197] 
split level 95: [/input-8, 197] 
split level 96: [/input-8, 1366] 
split level 97: [/input, 3429] 
split level 98: [/input-8, 255] 
split level 99: [/input-8, 1981] 
split level 100: [/input, 2708] 
split level 101: [/input-8, 1382] 
split level 102: [/input, 2470] 
split level 103: [/input, 120] 
split level 104: [/input-8, 1994] 
split level 105: [/input, 2425] 
split level 106: [/input-8, 201] 
split level 107: [/input-8, 1305] 
split level 108: [/input, 1356] 
split level 109: [/input, 156] 
split level 110: [/input, 401] 
split level 111: [/input, 2697] 
split level 112: [/input, 984] 
split level 113: [/input, 990] 
split level 114: [/input, 985] 
split level 115: [/input, 836] 
split level 116: [/input-8, 1737] 
split level 117: [/input-8, 934] 
split level 118: [/input, 2504] 
split level 119: [/input, 2540] 
split level 120: [/input, 2166] 
split level 121: [/input, 2279] 
split level 122: [/input, 155] 
split level 123: [/input, 2473] 
split level 124: [/input, 2476] 
split level 125: [/input, 3444] 
split level 126: [/input, 149] 
split level 127: [/input, 2698] 
split level 128: [/input, 3530] 
split level 129: [/input, 2274] 
split level 130: [/input, 2426] 
split level 131: [/input, 121] 
split level 132: [/input, 1006] 
split level 133: [/input-8, 1758] 
split level 134: [/input, 163] 
split level 135: [/input, 742] 
split level 136: [/input, 994] 
split level 137: [/input, 2971] 
split level 138: [/input, 177] 
split level 139: [/input, 2716] 
split level 140: [/input, 2979] 
split level 141: [/input-8, 1244] 
split level 142: [/input, 419] 
split level 143: [/input-8, 1733] 
split level 144: [/input, 932] 
split level 145: [/input, 2179] 
split level 146: [/input, 171] 
split level 147: [/input-8, 216] 
split level 148: [/input, 2537] 
split level 149: [/input, 2121] 
split level 150: [/input, 2724] 
split level 151: [/input, 3140] 
split level 152: [/input-8, 1746] 
split level 153: [/input, 91] 
split level 154: [/input-8, 1999] 
split level 155: [/input-8, 843] 
split level 156: [/input, 1863] 
split level 157: [/input, 3411] 
split level 158: [/input, 1494] 
split level 159: [/input, 129] 
split level 160: [/input, 2465] 
split level 161: [/input, 2467] 
split level 162: [/input, 3173] 
split level 163: [/input, 2661] 
split level 164: [/input, 2190] 
split level 165: [/input, 157] 
split level 166: [/input, 3497] 
split level 167: [/input-8, 1389] 
split level 168: [/input, 147] 
split level 169: [/input-8, 1226] 
split level 170: [/input, 180] 
split level 171: [/input, 3390] 
split level 172: [/input, 2460] 
split level 173: [/input, 3227] 
split level 174: [/input, 2103] 
split level 175: [/input, 2395] 
split level 176: [/input, 60] 
split level 177: [/input, 2360] 
split level 178: [/input, 1617] 
split level 179: [/input, 2257] 
split level 180: [/input, 597] 
split level 181: [/input, 2156] 
split level 182: [/input, 2844] 
split level 183: [/input, 137] 
split level 184: [/input, 2409] 
split level 185: [/input, 1469] 
split level 186: [/input, 1454] 
split level 187: [/input, 2148] 
split level 188: [/input, 2690] 
split level 189: [/input, 59] 
split level 190: [/input, 2119] 
split level 191: [/input, 2088] 
split level 192: [/input, 54] 
split level 193: [/input, 2406] 
split level 194: [/input, 2089] 
split level 195: [/input-8, 1752] 
split level 196: [/input, 1022] 
split level 197: [/input, 820] 
split level 198: [/input, 2498] 
split level 199: [/input, 2542] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07372808456420898
10 lb beta sum: 0.0, worst -0.07373428344726562
Time: prepare 0.0119    bound 0.0967    transfer 0.0021    finalize 0.0028    func 0.1162    
Accumulated time: func 0.1696    prepare 0.0221    bound 0.1497    transfer 0.0022    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.28506827) min lb tensor(-0.07372808)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010811090469360352 
BICCOS Cumulative time: 0.010811090469360352
Preprocessing time: 0.009855031967163086 Inference time: 0.00034737586975097656 Add cuts time: 0.00014066696166992188 Cut analysis time: 0.0004680156707763672
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.5183    set_bounds 0.0089    solve 0.1162    add 0.0098    
Accumulated time: pickout 0.0004    decision 0.5183    set_bounds 0.0089    solve 0.1162    add 0.0098    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 85] 
split level 5: [/input-8, 220] 
split level 6: [/input-12, 72] 
split level 7: [/input-8, 221] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.23316001892089844

all verified at 0th iter
Time: prepare 0.0051    bound 0.0040    transfer 0.0012    finalize 0.0014    func 0.0133    
Accumulated time: func 0.1829    prepare 0.0277    bound 0.1537    transfer 0.0034    finalize 0.0043    
all_split False
======================Cut inference begins======================
max lb tensor(0.91066933) min lb tensor(0.23316002)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006890535354614258 
BICCOS Cumulative time: 0.01770162582397461
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0202    solve 0.0133    add 0.0003    
Accumulated time: pickout 0.0008    decision 0.5408    set_bounds 0.0291    solve 0.1296    add 0.0101    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.7893936634063721


Properties batch 6, size 1
Remaining timeout: 197.65011596679688
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.65004897117615
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.64959287643433
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.3505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.15224266, -25.34284210, -20.68698883, -21.11905098, -21.28755379,
         -21.18818092, -18.96833420, -23.86169434, -24.43035507, -25.58597183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [838]; unstable size 838; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 334, 1, 838] with unstable size 333 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 838] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 838] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [333]; unstable size 333; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 333] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 333] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.44667268, 4.02514362, 0.65229511, 0.96642148, 0.94116783, 0.84790790,
         2.93652248, 3.08846760, 4.46393156]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.31029320, -25.64724922, -21.19924164, -21.00788879, -21.44479942,
         -20.21812248, -22.40578079, -20.59401131, -24.67918396, -24.01255989]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 523] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 523] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 180] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.59975982,  3.72134495, -0.09878135,  0.47413671,  0.20959401,
          1.12203455, -0.49487093,  3.08997488,  2.65038443]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.31029320, -25.64724922, -21.19924164, -21.00788879, -21.44479942,
         -20.21812248, -22.40578079, -20.59401131, -24.67918396, -24.01255989]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.13118744, -26.43610382, -22.10371780, -21.97385406, -22.15757751,
          -21.20539856, -23.31969070, -21.12502861, -25.59633255, -24.98401833],
         [-26.13118744, -26.43610382, -22.10371780, -21.97385406, -22.15757751,
          -21.20539856, -23.31969070, -21.12502861, -25.59633255, -24.98401833]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.89831924, -0.08036995]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.87531281, -15.75632095, -14.57347012, -15.76169777, -14.07984734,
         -16.31337166, -16.52824211, -16.65783691,  -8.99959373, -15.31440544]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [604]; unstable size 604; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 604] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 604] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 604] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 243] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74084198, 5.52800369, 4.11085033, 5.41803789, 3.71402335, 5.74122095,
         6.21470261, 6.00886154, 4.98770523]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0470 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.64936256, -23.01173401, -19.97909546, -17.49272156, -20.01158905,
         -17.02442741, -21.03547668, -19.50024414, -20.38127136, -20.46527672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [447]; unstable size 447; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 447] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 447] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 447] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 188] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.30454564, 4.15310001, 1.79540038, 0.15248439, 1.72279501, 3.02521515,
         1.09999537, 1.62638295, 1.86410809]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0424 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
         -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1052]; unstable size 1052; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 366, 1, 1052] with unstable size 365 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 1052] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1052] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [365]; unstable size 365; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 365] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.67349148,  0.95226669,  3.60676432,  1.65505981,  4.16816044,
          2.46865177,  3.16671324,  0.41265297,  0.44317591]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
         -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]100%|██████████| 1/1 [00:00<00:00,  9.15it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.87743950, -19.35758781, -22.15427971, -24.89256096, -22.97465324,
          -25.62451553, -23.85381317, -24.51388931, -21.46959877, -20.74610329]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.51985168]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1119 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.48583984375
alpha/beta optimization time: 1.2037582397460938
initial alpha-crown bounds: tensor([[-0.55390978,  1.12264252,  3.76586866,  1.80786324,  4.34684372,
          2.61715698,  3.32345533,  0.54351616,  0.51240206]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.5539097785949707
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.63787984848022
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55390978]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
        -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55390978]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1052
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 355
Node /15 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 1436
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010228157043457031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5539069175720215
10 lb beta sum: 0.0, worst -0.5539207458496094
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0517    transfer 0.0001    finalize 0.0001    func 0.0522    
Accumulated time: func 0.0522    prepare 0.0002    bound 0.0517    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 67] 
split level 8: [/input-12, 2] 
split level 9: [/input-12, 89] 
split level 10: [/input-12, 64] 
split level 11: [/input-12, 24] 
split level 12: [/input-12, 14] 
split level 13: [/input-12, 42] 
split level 14: [/input-8, 1957] 
split level 15: [/input-8, 157] 
split level 16: [/input-8, 1964] 
split level 17: [/input-12, 71] 
split level 18: [/input-12, 90] 
split level 19: [/input-12, 57] 
split level 20: [/input-8, 421] 
split level 21: [/input-8, 749] 
split level 22: [/input-8, 914] 
split level 23: [/input-8, 1627] 
split level 24: [/input-8, 1965] 
split level 25: [/input-8, 1691] 
split level 26: [/input-8, 1386] 
split level 27: [/input-8, 414] 
split level 28: [/input-8, 150] 
split level 29: [/input-8, 371] 
split level 30: [/input-8, 1951] 
split level 31: [/input-8, 1710] 
split level 32: [/input-8, 1635] 
split level 33: [/input-8, 605] 
split level 34: [/input-8, 604] 
split level 35: [/input-8, 433] 
split level 36: [/input-8, 1689] 
split level 37: [/input-8, 1392] 
split level 38: [/input-8, 416] 
split level 39: [/input-8, 1688] 
split level 40: [/input-12, 13] 
split level 41: [/input-8, 1394] 
split level 42: [/input-8, 1675] 
split level 43: [/input-8, 1658] 
split level 44: [/input-8, 1657] 
split level 45: [/input-8, 1650] 
split level 46: [/input-8, 411] 
split level 47: [/input-8, 1483] 
split level 48: [/input-8, 1577] 
split level 49: [/input-8, 1393] 
split level 50: [/input-8, 1194] 
split level 51: [/input-8, 1179] 
split level 52: [/input-8, 748] 
split level 53: [/input-8, 1385] 
split level 54: [/input-8, 1619] 
split level 55: [/input-8, 821] 
split level 56: [/input-8, 1397] 
split level 57: [/input, 3546] 
split level 58: [/input, 1678] 
split level 59: [/input-8, 1620] 
split level 60: [/input-8, 1649] 
split level 61: [/input, 3547] 
split level 62: [/input, 2186] 
split level 63: [/input, 3545] 
split level 64: [/input-8, 406] 
split level 65: [/input-8, 958] 
split level 66: [/input-8, 1715] 
split level 67: [/input-8, 843] 
split level 68: [/input, 3450] 
split level 69: [/input-8, 1396] 
split level 70: [/input-8, 1395] 
split level 71: [/input-8, 293] 
split level 72: [/input-8, 1754] 
split level 73: [/input-8, 1067] 
split level 74: [/input-8, 1702] 
split level 75: [/input, 3537] 
split level 76: [/input, 131] 
split level 77: [/input-8, 307] 
split level 78: [/input-8, 1317] 
split level 79: [/input-8, 403] 
split level 80: [/input-8, 1230] 
split level 81: [/input-8, 1484] 
split level 82: [/input, 2714] 
split level 83: [/input-8, 820] 
split level 84: [/input, 3770] 
split level 85: [/input-8, 1399] 
split level 86: [/input-8, 889] 
split level 87: [/input-8, 1226] 
split level 88: [/input, 999] 
split level 89: [/input-8, 245] 
split level 90: [/input-8, 145] 
split level 91: [/input, 3525] 
split level 92: [/input-8, 242] 
split level 93: [/input-8, 1598] 
split level 94: [/input, 2283] 
split level 95: [/input-8, 1388] 
split level 96: [/input, 985] 
split level 97: [/input-8, 1593] 
split level 98: [/input, 1000] 
split level 99: [/input-8, 890] 
split level 100: [/input, 982] 
split level 101: [/input, 3542] 
split level 102: [/input-8, 497] 
split level 103: [/input, 962] 
split level 104: [/input-8, 1610] 
split level 105: [/input, 978] 
split level 106: [/input, 3526] 
split level 107: [/input-8, 308] 
split level 108: [/input-8, 373] 
split level 109: [/input-8, 826] 
split level 110: [/input, 1413] 
split level 111: [/input, 713] 
split level 112: [/input, 998] 
split level 113: [/input, 712] 
split level 114: [/input-8, 284] 
split level 115: [/input, 694] 
split level 116: [/input-8, 402] 
split level 117: [/input, 983] 
split level 118: [/input, 1003] 
split level 119: [/input-8, 891] 
split level 120: [/input, 2785] 
split level 121: [/input, 997] 
split level 122: [/input, 1001] 
split level 123: [/input, 715] 
split level 124: [/input, 2770] 
split level 125: [/input-8, 292] 
split level 126: [/input-8, 241] 
split level 127: [/input, 2539] 
split level 128: [/input, 2945] 
split level 129: [/input-8, 1318] 
split level 130: [/input-8, 306] 
split level 131: [/input, 1012] 
split level 132: [/input, 1020] 
split level 133: [/input-8, 825] 
split level 134: [/input, 977] 
split level 135: [/input, 2786] 
split level 136: [/input, 907] 
split level 137: [/input-8, 1323] 
split level 138: [/input-8, 244] 
split level 139: [/input, 2769] 
split level 140: [/input, 1011] 
split level 141: [/input-8, 1594] 
split level 142: [/input-8, 1398] 
split level 143: [/input, 2266] 
split level 144: [/input-8, 827] 
split level 145: [/input-8, 1609] 
split level 146: [/input, 2407] 
split level 147: [/input, 1006] 
split level 148: [/input, 3528] 
split level 149: [/input, 961] 
split level 150: [/input, 1896] 
split level 151: [/input, 2555] 
split level 152: [/input-8, 246] 
split level 153: [/input, 2716] 
split level 154: [/input, 714] 
split level 155: [/input, 3508] 
split level 156: [/input-8, 250] 
split level 157: [/input, 2537] 
split level 158: [/input-8, 254] 
split level 159: [/input-8, 1376] 
split level 160: [/input-8, 255] 
split level 161: [/input, 2267] 
split level 162: [/input-8, 819] 
split level 163: [/input, 2279] 
split level 164: [/input-8, 840] 
split level 165: [/input, 2284] 
split level 166: [/input, 2282] 
split level 167: [/input, 2753] 
split level 168: [/input-8, 393] 
split level 169: [/input, 675] 
split level 170: [/input, 2538] 
split level 171: [/input-8, 253] 
split level 172: [/input, 1013] 
split level 173: [/input, 1019] 
split level 174: [/input-8, 243] 
split level 175: [/input-8, 842] 
split level 176: [/input-8, 1175] 
split level 177: [/input-8, 2033] 
split level 178: [/input, 2265] 
split level 179: [/input, 2549] 
split level 180: [/input, 2285] 
split level 181: [/input-8, 833] 
split level 182: [/input-8, 203] 
split level 183: [/input, 2550] 
split level 184: [/input-12, 36] 
split level 185: [/input, 2536] 
split level 186: [/input, 2535] 
split level 187: [/input, 2903] 
split level 188: [/input, 2551] 
split level 189: [/input, 1912] 
split level 190: [/input, 2552] 
split level 191: [/input, 2787] 
split level 192: [/input, 2280] 
split level 193: [/input, 2261] 
split level 194: [/input, 2557] 
split level 195: [/input, 2553] 
split level 196: [/input, 2541] 
split level 197: [/input, 2548] 
split level 198: [/input, 2547] 
split level 199: [/input, 2281] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5538911819458008
10 lb beta sum: 0.0, worst -0.553886890411377
Time: prepare 0.0115    bound 0.0959    transfer 0.0012    finalize 0.0029    func 0.1141    
Accumulated time: func 0.1663    prepare 0.0214    bound 0.1477    transfer 0.0013    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.25172138) min lb tensor(-0.55387974)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010157108306884766 
BICCOS Cumulative time: 0.010157108306884766
Preprocessing time: 0.009759902954101562 Inference time: 0.0001239776611328125 Add cuts time: 4.9591064453125e-05 Cut analysis time: 0.00022363662719726562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53513 (1), -0.53304 (1), -0.53185 (1), -0.53179 (1), -0.53135 (1), -0.53029 (1), -0.52977 (1), -0.52829 (1), -0.52829 (1), -0.52762 (1), -0.52753 (1), -0.52681 (1), -0.52651 (1), -0.52603 (1), -0.52467 (1), -0.52372 (1), -0.52368 (1), -0.52164 (1), -0.52129 (1), -0.52091 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5089    set_bounds 0.0086    solve 0.1142    add 0.0715    
Accumulated time: pickout 0.0003    decision 0.5089    set_bounds 0.0086    solve 0.1142    add 0.0715    
Current (lb-rhs): -0.5351324081420898
50 domains visited
Cumulative time: 0.7763667106628418

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-12, 61] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 61] [/input-12, 31] [/input-12, 61] 
split level 1: [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 31] [/input-12, 69] [/input-12, 31] 
split level 2: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 69] 
split level 3: [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4922213554382324
10 lb beta sum: 0.41372716426849365, worst -0.4795817732810974
Time: prepare 0.0071    bound 0.1161    transfer 0.0015    finalize 0.0024    func 0.1297    
Accumulated time: func 0.2960    prepare 0.0287    bound 0.2638    transfer 0.0029    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.31830400) min lb tensor(-0.47951132)
Number of Verified Splits: 80 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.01707744598388672 
BICCOS Cumulative time: 0.027234554290771484
Preprocessing time: 0.011555910110473633 Inference time: 0.003112316131591797 Add cuts time: 0.0020411014556884766 Cut analysis time: 0.0003681182861328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24998 (2), -0.24938 (2), -0.24671 (2), -0.24512 (2), -0.24502 (2), -0.24322 (2), -0.24095 (2), -0.23993 (2), -0.23682 (2), -0.23601 (2), -0.23483 (2), -0.23272 (2), -0.23189 (2), -0.23043 (2), -0.22852 (2), -0.22772 (2), -0.22688 (2), -0.22620 (2), -0.22558 (2), -0.22239 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0225    set_bounds 0.0134    solve 0.1298    add 0.0895    
Accumulated time: pickout 0.0015    decision 0.5314    set_bounds 0.0220    solve 0.2440    add 0.1610    
Current (lb-rhs): -0.249975323677063
100 domains visited
Cumulative time: 1.049966812133789

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 2: [/input-12, 69] [/input-12, 46] [/input-12, 69] [/input-12, 69] [/input-12, 46] [/input-12, 46] [/input-12, 69] [/input-12, 38] [/input-12, 38] [/input-12, 69] 
split level 3: [/input-12, 67] [/input-12, 67] [/input-12, 46] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25121259689331055
10 lb beta sum: 1.2178547382354736, worst -0.1514732837677002
Time: prepare 0.0065    bound 0.1156    transfer 0.0017    finalize 0.0020    func 0.1284    
Accumulated time: func 0.4244    prepare 0.0355    bound 0.3793    transfer 0.0046    finalize 0.0075    
all_split False
======================Cut inference begins======================
max lb tensor(0.67256266) min lb tensor(-0.14962786)
Number of Verified Splits: 286 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.0306549072265625 
BICCOS Cumulative time: 0.057889461517333984
Preprocessing time: 0.011325597763061523 Inference time: 0.013138055801391602 Add cuts time: 0.005753755569458008 Cut analysis time: 0.0004374980926513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14963 (3), -0.14961 (3), -0.09265 (3), -0.05456 (3), -0.05450 (3), -0.05446 (3), -0.05425 (3), -0.05423 (3), -0.05409 (3), -0.04081 (3), -0.00303 (3), -0.00267 (3), 
Length of domains: 12
Time: pickout 0.0012    decision 0.0196    set_bounds 0.0159    solve 0.1285    add 0.1091    
Accumulated time: pickout 0.0028    decision 0.5510    set_bounds 0.0379    solve 0.3725    add 0.2701    
Current (lb-rhs): -0.14962786436080933
112 domains visited
Cumulative time: 1.3552460670471191

Shallow-BaB round 4
batch: 12
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 31] [/input-12, 61] [/input-12, 61] [/input-12, 31] [/input-12, 61] [/input-12, 61] 
split level 1: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 38] [/input-12, 38] [/input-12, 31] [/input-12, 38] [/input-12, 38] [/input-12, 31] 
split level 2: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 38] 
split level 3: [/input-12, 89] [/input-12, 89] [/input-12, 2] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 67] [/input-12, 46] 
split level 4: [/input-12, 2] [/input-12, 2] [/input-12, 67] [/input-12, 2] [/input-12, 8] [/input-12, 2] [/input-12, 2] [/input-12, 8] [/input-12, 2] [/input-12, 53] 
split level 5: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 8] [/input-12, 2] 
split level 6: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 8] 
split level 7: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 64] 
split level 8: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 14] 
split level 9: [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-12, 42] 
split level 10: [/input-12, 90] [/input-12, 90] [/input-12, 71] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-8, 1964] 
split level 11: [/input-12, 71] [/input-12, 71] [/input-12, 90] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 12: [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 57] [/input-12, 90] 
split level 13: [/input-8, 914] [/input-8, 914] [/input-8, 1951] [/input-8, 914] [/input-8, 914] [/input-8, 914] [/input-8, 914] [/input-8, 914] [/input-8, 914] [/input-12, 57] 
split level 14: [/input-8, 1951] [/input-8, 1951] [/input-8, 1710] [/input-8, 1710] [/input-8, 1710] [/input-8, 1710] [/input-8, 1710] [/input-8, 1710] [/input-8, 1710] [/input-8, 1951] 
split level 15: [/input-8, 1710] [/input-8, 1710] [/input-8, 1689] [/input-8, 1951] [/input-8, 1951] [/input-8, 1951] [/input-8, 1951] [/input-8, 1951] [/input-8, 1951] [/input-8, 1710] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22480201721191406
10 lb beta sum: 1.8370298147201538, worst -0.04542839527130127
Time: prepare 0.0061    bound 0.1360    transfer 0.0009    finalize 0.0023    func 0.1478    
Accumulated time: func 0.5722    prepare 0.0425    bound 0.5154    transfer 0.0055    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.65292811) min lb tensor(-0.04146975)
Number of Verified Splits: 350 of 384
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 17
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.16612935066223145 
BICCOS Cumulative time: 0.22401881217956543
Preprocessing time: 0.010967016220092773 Inference time: 0.14886760711669922 Add cuts time: 0.0055539608001708984 Cut analysis time: 0.0007407665252685547
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.0541    set_bounds 0.0137    solve 0.1479    add 0.0258    
Accumulated time: pickout 0.0035    decision 0.6051    set_bounds 0.0516    solve 0.5204    add 0.2959    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
112 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 67] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 89] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09049177169799805
10 lb beta sum: 0.028021832928061485, worst -0.033611416816711426
Time: prepare 0.0036    bound 0.1278    transfer 0.0013    finalize 0.0015    func 0.1360    
Accumulated time: func 0.7082    prepare 0.0465    bound 0.6431    transfer 0.0068    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(1.08795595) min lb tensor(-0.03280950)
Number of Verified Splits: 255 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4090871810913086
10 lb beta sum: 1.5013495683670044, worst -0.14204943180084229
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 17
#cuts 4-6: 20
#cuts >= 20: 0
BICCOS time: 0.27019453048706055 
BICCOS Cumulative time: 0.494213342666626
Preprocessing time: 0.006445646286010742 Inference time: 0.2572929859161377 Add cuts time: 0.005452394485473633 Cut analysis time: 0.0010035037994384766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03281 (8), 
Length of domains: 1
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0167    solve 0.1360    add 0.0007    
Accumulated time: pickout 0.0039    decision 0.6277    set_bounds 0.0683    solve 0.6564    add 0.2966    
Current (lb-rhs): -0.03280949592590332
113 domains visited
Cumulative time: 2.2161502838134766

BaB round 2
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 14] 
split level 3: [/input-12, 42] 
split level 4: [/input-8, 1964] 
split level 5: [/input-12, 71] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.045558929443359375

all verified at 0th iter
Time: prepare 0.0051    bound 0.0049    transfer 0.0005    finalize 0.0013    func 0.0134    
Accumulated time: func 0.7216    prepare 0.0520    bound 0.6480    transfer 0.0073    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.36086082) min lb tensor(0.04555893)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 37.
#cuts 1-3: 17
#cuts 4-6: 20
#cuts >= 20: 0
BICCOS time: 0.007403135299682617 
BICCOS Cumulative time: 0.5016164779663086
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0222    set_bounds 0.0253    solve 0.0135    add 0.0003    
Accumulated time: pickout 0.0051    decision 0.6499    set_bounds 0.0936    solve 0.6699    add 0.2969    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
113 domains visited
Cumulative time: 2.2869670391082764


Properties batch 1, size 1
Remaining timeout: 196.1147220134735
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 196.11435747146606
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 196.11432194709778
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 196.11430072784424
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 196.11428117752075
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.11426258087158
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.11423993110657
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.1142213344574
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.8858 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.01604462, -16.60401917, -13.75974274, -13.62233925, -13.08835316,
         -14.19851303, -12.87796688, -14.01632118, -16.99109268, -15.74184418]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 659] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 659] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 310] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.06798172, -2.58395004, -2.91112733, -3.35464430, -2.51877666,
         -3.61694980, -2.86971092,  0.43352550, -1.25155258]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.01604462, -16.60401917, -13.75974274, -13.62233925, -13.08835316,
         -14.19851303, -12.87796688, -14.01632118, -16.99109268, -15.74184418]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.01604366, -16.60401917, -13.75974369, -13.62234020, -13.08835220,
          -14.19851398, -12.87796688, -14.01632118, -16.99109459, -15.74184608],
         [-15.01604366, -16.60401917, -13.75974369, -13.62234020, -13.08835220,
          -14.19851398, -12.87796688, -14.01632118, -16.99109459, -15.74184608]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.58797550, -1.25629997, -1.39370346, -1.92769146, -0.81752968,
          -2.13807678, -0.99972248,  0.72580242]]], device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0879 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.90988064, -12.45664406, -15.21899319, -13.88694572, -14.48770905,
         -14.28946209, -14.69633865, -13.84464264, -14.34021282, -11.62079906]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [500]; unstable size 500; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 500] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 500] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 500] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 172] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81550598, 0.12776911, 1.67829514, 0.58634591, 0.90821481, 0.83706665,
         1.15808988, 0.31059182, 1.68028712]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0473 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.65237999, -26.28784180, -22.21496773, -22.94103813, -19.88295174,
         -23.10355949, -23.92632675, -16.94944000, -25.83104324, -24.10295296]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 632] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 632] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 241] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.00603628, 7.31206417, 3.91716003, 4.58261108, 2.16801429, 4.73694038,
         5.37613630, 6.48344851, 5.24407530]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0418 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.01066399, -28.57836723, -25.32221985, -26.57108498, -26.69775391,
         -27.17006111, -27.16849136, -29.60597229, -25.49334908, -28.60743141]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 134, 1, 602] with unstable size 133 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 602] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [133]; unstable size 133; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 133] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.69067574, 1.75672960, 2.90525103, 3.03809595, 3.37360620, 3.51928473,
         5.64078999, 1.68218970, 4.79778862]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0426 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.58022118, -31.81094170, -26.44467354, -24.52676773, -24.55172729,
         -24.79080772, -24.80268097, -25.39589882, -30.52891159, -30.66180420]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [824]; unstable size 824; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 824] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 824] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 824] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 256] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.94624829,  4.85114527, -0.16955900, -1.79679918, -1.73069477,
         -1.51086330, -1.98932076,  3.64661956,  4.09455395]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.58022118, -31.81094170, -26.44467354, -24.52676773, -24.55172729,
         -24.79080772, -24.80268097, -25.39589882, -30.52891159, -30.66180420]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.58021927, -31.81093979, -26.44467163, -24.52676773, -24.55172729,
          -24.79080582, -24.80267715, -25.39589882, -30.52891159, -30.66180420],
         [-29.58021927, -31.81093979, -26.44467163, -24.52676773, -24.55172729,
          -24.79080582, -24.80267715, -25.39589882, -30.52891159, -30.66180420]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.04877281, -0.86913109, -0.84417152, -0.60509300, -0.59322166]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0478 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.97128105, -37.96307373, -34.52404785, -37.46557999, -35.63014603,
         -38.36451340, -36.77544022, -40.04882431, -35.94057846, -38.51336288]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [763]; unstable size 763; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 176, 1, 763] with unstable size 175 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 763] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 763] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [175]; unstable size 175; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 175] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 175] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.93386269, 1.84800172, 4.37804556, 2.56460929, 5.05402088, 3.82877159,
         6.62601900, 3.10796762, 5.56228876]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0434 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.48475838, -29.65727234, -23.60843277, -25.59186363, -21.86170197,
         -25.18845367, -25.36190605, -23.12098694, -27.66559601, -28.33211899]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [618]; unstable size 618; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 618] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 618] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 618] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 272] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.15050745, 5.57539129, 0.71036434, 2.73630500, 2.29937863, 2.30952454,
         0.40072060, 4.11238289, 4.36770487]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0277 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.43476677, -21.89505386, -17.38277435, -18.91377258, -16.89746284,
         -19.49347115, -18.77677345, -17.15766907, -19.06263733, -20.67627907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1008]; unstable size 1008; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 331, 1, 1008] with unstable size 330 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1008] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1008] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [330]; unstable size 330; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 330] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 330] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17812538,  2.10233808, -1.56133389, -0.11888361, -1.70705867,
          0.52253580, -0.66222882, -0.72439504,  1.23998952]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.43476677, -21.89505386, -17.38277435, -18.91377258, -16.89746284,
         -19.49347115, -18.77677345, -17.15766907, -19.06263733, -20.67627907]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.43476868, -21.89505196, -17.38277435, -18.91377449, -16.89746284,
          -19.49347115, -18.77677155, -17.15766907, -19.06263924, -20.67627907],
         [-19.43476868, -21.89505196, -17.38277435, -18.91377449, -16.89746284,
          -19.49347115, -18.77677155, -17.15766907, -19.06263924, -20.67627907]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.22510529,  1.75610542, -0.26020622,  1.61910248,  1.90497017]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0708 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.35557175, -32.47544098, -30.43883324, -33.30394363, -32.17427444,
         -34.25338364, -33.63493729, -35.26922607, -29.93074799, -32.68428421]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [840]; unstable size 840; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 840] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 840] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 840] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 173] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.16921902, 2.31352949, 4.99022341, 3.81911135, 5.78720522, 5.29893827,
         6.80568743, 1.75992763, 4.51705360]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0371 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.44459343, -15.51812744, -11.64377499, -10.47452068, -10.72119522,
         -11.05707169, -11.06166363, -11.43825245, -16.58495712, -14.37756157]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [649]; unstable size 649; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 316, 1, 649] with unstable size 315 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 649] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 649] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [315]; unstable size 315; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 315] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 315] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.31691790,  2.24976444,  0.04557920, -0.85450864,  0.30286223,
         -0.63437951, -0.21570832,  3.64171410,  1.40587473]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.44459343, -15.51812744, -11.64377499, -10.47452068, -10.72119522,
         -11.05707169, -11.06166363, -11.43825245, -16.58495712, -14.37756157]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.56100559, -15.55041409, -11.83961582, -10.86203289, -10.65551853,
          -11.47358513, -11.20098400, -11.55763531, -16.66084862, -14.52304459],
         [-15.56100559, -15.55041409, -11.83961582, -10.86203289, -10.65551853,
          -11.47358513, -11.20098400, -11.55763531, -16.66084862, -14.52304459]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20651436,  0.33895111,  0.69560242]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0320 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
         -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [539]; unstable size 539; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 283, 1, 539] with unstable size 282 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 539] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [282]; unstable size 282; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 282] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 282] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.73897839,  3.94992828,  0.45282030,  1.56286383,  0.87203968,
         -1.16177833,  0.85932600,  3.68842530,  2.19751191]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
         -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
          -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.06229782]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.09047651,  1.12222254,  1.12222254,  ...,  1.07460344,
             1.15396857,  1.13809550],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.04285717,
             1.07460344,  1.07460344],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.02698421,
             1.07460344,  1.07460344],
           ...,
           [ 1.04285717,  1.07460344,  1.09047651,  ..., -0.35396814,
             0.55079371,  1.07460344],
           [ 1.04285717,  1.07460344,  1.05873048,  ..., -0.62380952,
            -0.24285704,  0.77301592],
           [ 1.04285717,  1.07460344,  1.07460344,  ..., -0.21111101,
             0.10634929,  0.83650798]],

          [[ 1.25603890,  1.28824508,  1.28824508,  ...,  1.25603890,
             1.27214205,  1.28824508],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.25603890,
             1.23993587,  1.23993587],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.23993587,
             1.23993587,  1.23993587],
           ...,
           [ 1.20772982,  1.23993587,  1.25603890,  ..., -0.49919480,
             0.51529801,  1.17552364],
           [ 1.20772982,  1.23993587,  1.22383285,  ..., -0.82125598,
            -0.32206106,  0.85346222],
           [ 1.20772982,  1.23993587,  1.23993587,  ..., -0.32206106,
             0.08051541,  0.93397754]],

          [[ 1.42578757,  1.45577252,  1.45577252,  ...,  1.44078004,
             1.42578757,  1.45577252],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.41079497,
             1.39580250,  1.41079497],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.44078004,
             1.42578757,  1.41079497],
           ...,
           [ 1.38081002,  1.41079497,  1.42578757,  ..., -0.53823084,
             0.54122955,  1.33583248],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -1.07796109,
            -0.41829082,  0.99100471],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -0.64317840,
            -0.07346311,  1.06596720]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0537 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.07254219, -23.32916451, -18.11545181, -16.03979683, -17.97344971,
         -17.07232475, -18.43986130, -16.48874283, -21.96584511, -20.95975685]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [563]; unstable size 563; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 156, 1, 563] with unstable size 155 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 563] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 563] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [155]; unstable size 155; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 155] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 155] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.52441883,  5.39360380,  0.73585367, -1.15312338,  0.82712793,
         -0.08107734,  1.07491684,  4.02794266,  3.11614490]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.07254219, -23.32916451, -18.11545181, -16.03979683, -17.97344971,
         -17.07232475, -18.43986130, -16.48874283, -21.96584511, -20.95975685]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.07254028, -23.32916641, -18.11545372, -16.03979683, -17.97345161,
          -17.07232285, -18.43986130, -16.48874283, -21.96584702, -20.95975685],
         [-19.07254028, -23.32916641, -18.11545372, -16.03979683, -17.97345161,
          -17.07232285, -18.43986130, -16.48874283, -21.96584702, -20.95975685]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44894600,  0.58358002]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0535 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.70158577, -22.21768379, -23.95887756, -27.52854156, -24.44779968,
         -28.61229897, -28.66467094, -26.43075180, -22.27626801, -22.80558968]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [756]; unstable size 756; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 197, 1, 756] with unstable size 196 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 756] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 756] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [196]; unstable size 196; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 196] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 196] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.58621788, 2.47436023, 5.86044264, 2.89928842, 6.82225561, 6.78166199,
         4.58398342, 0.69966269, 1.06527948]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0389 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
         -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [453]; unstable size 453; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 302, 1, 453] with unstable size 301 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 453] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 453] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [301]; unstable size 301; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 301] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 301] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.36418629e+00,  3.88016152e+00, -1.22666359e-03,  5.18171072e-01,
         -7.83936977e-02,  5.22855401e-01,  8.93965244e-01,  5.49661064e+00,
          2.41142750e+00]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
         -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.03it/s]100%|██████████| 1/1 [00:00<00:00,  9.03it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.12287807, -14.69568729, -10.06177521, -10.78610325, -10.26407623,
          -10.99050617,  -9.46359158, -11.73374748, -16.38097382, -13.27322674],
         [-15.12287807, -14.69568729, -10.06177521, -10.78610325, -10.26407623,
          -10.99050617,  -9.46359158, -11.73374748, -16.38097382, -13.27322674]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59818363, 0.80048466]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1135 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.593082427978516
alpha/beta optimization time: 1.2041842937469482
initial alpha-crown bounds: tensor([[ 4.42039061,  3.93954706,  0.04252625,  0.59053814, -0.04266930,
          0.61050409,  0.96340466,  5.55710411,  2.51173687]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.04266929626464844
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6327624320984
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.63272166252136
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.63269639015198
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.63267350196838
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6326551437378
Verifying property 4 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04266930]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
        -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04266930]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 453
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 299
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 772
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010323524475097656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.042669057846069336
10 lb beta sum: 0.0, worst -0.04267692565917969
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0533    transfer 0.0001    finalize 0.0001    func 0.0537    
Accumulated time: func 0.0537    prepare 0.0002    bound 0.0533    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 85] 
split level 3: [/input-12, 14] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 10] 
split level 7: [/input-12, 61] 
split level 8: [/input-12, 17] 
split level 9: [/input-12, 4] 
split level 10: [/input-12, 71] 
split level 11: [/input-8, 163] 
split level 12: [/input-8, 154] 
split level 13: [/input-8, 132] 
split level 14: [/input-8, 142] 
split level 15: [/input-8, 172] 
split level 16: [/input, 2887] 
split level 17: [/input-8, 1635] 
split level 18: [/input-8, 1249] 
split level 19: [/input-12, 55] 
split level 20: [/input-8, 298] 
split level 21: [/input-8, 309] 
split level 22: [/input-8, 155] 
split level 23: [/input-8, 1362] 
split level 24: [/input-8, 1386] 
split level 25: [/input-8, 914] 
split level 26: [/input-8, 147] 
split level 27: [/input-8, 1242] 
split level 28: [/input-8, 1203] 
split level 29: [/input-8, 178] 
split level 30: [/input, 3300] 
split level 31: [/input-8, 290] 
split level 32: [/input-12, 8] 
split level 33: [/input-8, 315] 
split level 34: [/input-8, 492] 
split level 35: [/input, 2919] 
split level 36: [/input-8, 307] 
split level 37: [/input-8, 1627] 
split level 38: [/input-8, 282] 
split level 39: [/input-8, 1389] 
split level 40: [/input-8, 146] 
split level 41: [/input-8, 1271] 
split level 42: [/input-8, 162] 
split level 43: [/input-8, 252] 
split level 44: [/input, 2934] 
split level 45: [/input-8, 1390] 
split level 46: [/input-8, 1395] 
split level 47: [/input-8, 1674] 
split level 48: [/input-8, 171] 
split level 49: [/input, 840] 
split level 50: [/input-8, 1382] 
split level 51: [/input, 3556] 
split level 52: [/input-8, 445] 
split level 53: [/input-8, 438] 
split level 54: [/input-8, 1240] 
split level 55: [/input-8, 99] 
split level 56: [/input-8, 1363] 
split level 57: [/input-8, 957] 
split level 58: [/input-8, 1066] 
split level 59: [/input-8, 2029] 
split level 60: [/input, 345] 
split level 61: [/input-8, 348] 
split level 62: [/input-8, 1675] 
split level 63: [/input, 856] 
split level 64: [/input-8, 1628] 
split level 65: [/input, 824] 
split level 66: [/input-8, 777] 
split level 67: [/input-8, 1644] 
split level 68: [/input-8, 257] 
split level 69: [/input-8, 430] 
split level 70: [/input-8, 1587] 
split level 71: [/input-8, 1673] 
split level 72: [/input-8, 250] 
split level 73: [/input-8, 342] 
split level 74: [/input-8, 499] 
split level 75: [/input-8, 341] 
split level 76: [/input, 854] 
split level 77: [/input-12, 72] 
split level 78: [/input-8, 46] 
split level 79: [/input-8, 1689] 
split level 80: [/input, 2788] 
split level 81: [/input-8, 1181] 
split level 82: [/input, 341] 
split level 83: [/input-8, 1354] 
split level 84: [/input, 2933] 
split level 85: [/input-8, 98] 
split level 86: [/input-8, 238] 
split level 87: [/input-8, 1676] 
split level 88: [/input, 821] 
split level 89: [/input, 2901] 
split level 90: [/input-8, 424] 
split level 91: [/input, 2922] 
split level 92: [/input-8, 55] 
split level 93: [/input-8, 1383] 
split level 94: [/input, 2949] 
split level 95: [/input-8, 1005] 
split level 96: [/input, 873] 
split level 97: [/input, 487] 
split level 98: [/input, 3381] 
split level 99: [/input, 859] 
split level 100: [/input-8, 1680] 
split level 101: [/input-8, 1399] 
split level 102: [/input-8, 922] 
split level 103: [/input-8, 1355] 
split level 104: [/input-8, 275] 
split level 105: [/input-8, 1660] 
split level 106: [/input-8, 878] 
split level 107: [/input-8, 253] 
split level 108: [/input-8, 1361] 
split level 109: [/input, 1655] 
split level 110: [/input-8, 446] 
split level 111: [/input-8, 1375] 
split level 112: [/input, 362] 
split level 113: [/input-8, 1044] 
split level 114: [/input-8, 249] 
split level 115: [/input-8, 230] 
split level 116: [/input-8, 493] 
split level 117: [/input-8, 1602] 
split level 118: [/input, 409] 
split level 119: [/input-8, 447] 
split level 120: [/input-8, 1540] 
split level 121: [/input, 329] 
split level 122: [/input-8, 151] 
split level 123: [/input, 3572] 
split level 124: [/input, 2952] 
split level 125: [/input, 456] 
split level 126: [/input, 969] 
split level 127: [/input, 146] 
split level 128: [/input, 2872] 
split level 129: [/input-8, 2021] 
split level 130: [/input-8, 1512] 
split level 131: [/input-8, 485] 
split level 132: [/input, 3215] 
split level 133: [/input, 885] 
split level 134: [/input-8, 103] 
split level 135: [/input-8, 441] 
split level 136: [/input, 841] 
split level 137: [/input-8, 231] 
split level 138: [/input, 791] 
split level 139: [/input-8, 1665] 
split level 140: [/input, 844] 
split level 141: [/input, 795] 
split level 142: [/input-8, 786] 
split level 143: [/input-8, 107] 
split level 144: [/input-8, 1652] 
split level 145: [/input, 3557] 
split level 146: [/input-8, 137] 
split level 147: [/input-8, 18] 
split level 148: [/input, 440] 
split level 149: [/input, 283] 
split level 150: [/input, 2907] 
split level 151: [/input-8, 458] 
split level 152: [/input, 3214] 
split level 153: [/input-8, 369] 
split level 154: [/input, 3497] 
split level 155: [/input, 2966] 
split level 156: [/input, 789] 
split level 157: [/input, 981] 
split level 158: [/input-8, 350] 
split level 159: [/input-8, 1535] 
split level 160: [/input-8, 191] 
split level 161: [/input-8, 1527] 
split level 162: [/input-8, 1353] 
split level 163: [/input, 2836] 
split level 164: [/input, 339] 
split level 165: [/input, 2910] 
split level 166: [/input, 3286] 
split level 167: [/input-8, 143] 
split level 168: [/input, 4013] 
split level 169: [/input, 3181] 
split level 170: [/input-8, 1729] 
split level 171: [/input-8, 1333] 
split level 172: [/input, 3293] 
split level 173: [/input, 3419] 
split level 174: [/input, 2838] 
split level 175: [/input, 867] 
split level 176: [/input-8, 1081] 
split level 177: [/input-8, 97] 
split level 178: [/input, 3268] 
split level 179: [/input, 90] 
split level 180: [/input, 2894] 
split level 181: [/input, 793] 
split level 182: [/input-8, 1217] 
split level 183: [/input-8, 1653] 
split level 184: [/input, 2719] 
split level 185: [/input, 1013] 
split level 186: [/input-8, 439] 
split level 187: [/input-8, 963] 
split level 188: [/input, 1187] 
split level 189: [/input-8, 1356] 
split level 190: [/input-8, 339] 
split level 191: [/input, 2852] 
split level 192: [/input, 2893] 
split level 193: [/input-8, 204] 
split level 194: [/input-8, 1225] 
split level 195: [/input, 3099] 
split level 196: [/input, 21] 
split level 197: [/input, 861] 
split level 198: [/input, 403] 
split level 199: [/input, 104] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04265570640563965
10 lb beta sum: 0.0, worst -0.04264426231384277
Time: prepare 0.0115    bound 0.0982    transfer 0.0013    finalize 0.0028    func 0.1165    
Accumulated time: func 0.1702    prepare 0.0217    bound 0.1515    transfer 0.0014    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.44494438) min lb tensor(-0.04263783)
Number of Verified Splits: 19 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011055707931518555 
BICCOS Cumulative time: 0.011055707931518555
Preprocessing time: 0.009905338287353516 Inference time: 0.0007498264312744141 Add cuts time: 0.00023818016052246094 Cut analysis time: 0.00016236305236816406
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5153    set_bounds 0.0091    solve 0.1166    add 0.0103    
Accumulated time: pickout 0.0003    decision 0.5153    set_bounds 0.0091    solve 0.1166    add 0.0103    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 14] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 10] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 17] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.32587194442749023

all verified at 0th iter
Time: prepare 0.0036    bound 0.0040    transfer 0.0015    finalize 0.0012    func 0.0119    
Accumulated time: func 0.1821    prepare 0.0256    bound 0.1555    transfer 0.0029    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.61540413) min lb tensor(0.32587194)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.00621342658996582 
BICCOS Cumulative time: 0.017269134521484375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0217    set_bounds 0.0166    solve 0.0119    add 0.0002    
Accumulated time: pickout 0.0007    decision 0.5370    set_bounds 0.0258    solve 0.1285    add 0.0105    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.79612135887146


Properties batch 5, size 1
Remaining timeout: 197.6269268989563
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.62651896476746
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.62649393081665
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.62647438049316
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.3736 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.25883293, -16.40706444, -12.91650105, -13.33503723, -12.76172256,
         -14.05701828, -10.42017269, -14.10208035, -18.75581741, -16.93133926]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [403]; unstable size 403; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 259, 1, 403] with unstable size 258 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 403] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 403] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [258]; unstable size 258; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 258] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 258] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00860643, 4.23702240, 1.09872437, 1.64570773, 0.89420366, 2.14901757,
         1.57642496, 6.09759951, 4.54596329]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0455 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.57652092, -32.23639679, -28.36616898, -29.83554840, -30.16464424,
         -30.64960480, -32.17686844, -29.80444527, -29.91892624, -32.09518433]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [483]; unstable size 483; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 483] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 483] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 483] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 194] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.07906628, 1.77047968, 3.19271302, 3.46971655, 3.86029029, 5.23355198,
         2.96001339, 3.10798573, 5.22356081]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0363 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.71967888, -24.49569893, -23.46326828, -21.31615639, -22.26188850,
         -21.78440475, -22.43858719, -23.19987106, -16.18318367, -22.82086182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [644]; unstable size 644; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 644] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 644] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 214] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.49413419, 6.51567602, 5.72104454, 3.75618267, 4.40788603, 4.05219364,
         4.77330256, 5.20548916, 5.05213833]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0307 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.19749069, -20.07060051, -15.00829124, -14.86962318, -16.28983498,
         -15.46364594, -13.24634743, -17.95564651, -17.94532013, -19.32559013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [570]; unstable size 570; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 570] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 570] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 264] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89140415, 4.24306536, 0.43238378, 0.61651564, 1.44491529, 0.98225844,
         2.89481449, 2.46429324, 3.67898321]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0308 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.52461720, -17.35180283, -12.05615902, -12.63583565, -11.58507633,
         -12.59487724, -10.57591057, -13.41824055, -16.97095490, -15.37764359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 591] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 591] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 291] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.08203411,  2.15383053, -1.83007908, -0.33773935, -2.24676919,
         -3.21968937, -0.57630795,  2.02706242,  0.67616463]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.52461720, -17.35180283, -12.05615902, -12.63583565, -11.58507633,
         -12.59487724, -10.57591057, -13.41824055, -16.97095490, -15.37764359]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.52461624, -17.35180092, -12.05615902, -12.63583660, -11.58507729,
          -12.59487820, -10.57591152, -13.41824245, -16.97095490, -15.37764454],
         [-15.52461624, -17.35180092, -12.05615902, -12.63583660, -11.58507729,
          -12.59487820, -10.57591152, -13.41824245, -16.97095490, -15.37764454]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53871918,  0.04095840, -1.00980091, -2.01896667,  0.82336426]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0560 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.45021820, -27.45919800, -20.82433891, -22.54921150, -21.01146507,
         -23.11272240, -21.28590775, -22.88107681, -25.70099831, -27.22681618]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [929]; unstable size 929; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 450, 1, 929] with unstable size 449 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 929] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 929] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [449]; unstable size 449; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 449] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 449] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.88848382,  3.70000124,  0.24056005, -1.21744084,  0.64094067,
         -1.06626320, -0.11656189,  2.34579206,  3.68336010]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.45021820, -27.45919800, -20.82433891, -22.54921150, -21.01146507,
         -23.11272240, -21.28590775, -22.88107681, -25.70099831, -27.22681618]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.65473557, -27.69364357, -21.07613373, -22.60361481, -20.87356758,
          -23.11100769, -21.44839478, -22.64229012, -25.88486099, -27.33996201],
         [-23.65473557, -27.69364357, -21.07613373, -22.60361481, -20.87356758,
          -23.11100769, -21.44839478, -22.64229012, -25.88486099, -27.33996201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20256615,  0.37226105,  1.56615639]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0454 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.70279121, -25.07186508, -24.43242264, -24.38763809, -24.00282478,
         -24.77808571, -24.40219879, -25.75534058, -24.67971420, -24.98260498]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [670]; unstable size 670; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 670] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 670] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 670] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 244] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.87631369, -2.55956173, -2.18437910, -2.77099609, -1.83020782,
         -2.16091871, -1.01760483, -2.05305672, -0.77688026]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.70279121, -25.07186508, -24.43242264, -24.38763809, -24.00282478,
         -24.77808571, -24.40219879, -25.75534058, -24.67971420, -24.98260498]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.70278931, -25.07186699, -24.43242264, -24.38763809, -24.00282288,
          -24.77808380, -24.40219879, -25.75533867, -24.67971420, -24.98260689],
         [-24.70278931, -25.07186699, -24.43242264, -24.38763809, -24.00282288,
          -24.77808380, -24.40219879, -25.75533867, -24.67971420, -24.98260689]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36907768, -0.63944435, -0.68422890, -1.06904411, -0.29378319,
          -0.66966820,  0.68347168, -0.39215279, -0.08926010]]],
       device='cuda:0')
number of violation:  8
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0510 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.77937126, -24.38296890, -19.26746750, -18.82821846, -19.50073814,
         -19.05830956, -19.41297340, -21.65519333, -24.81905746, -23.99803734]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [889]; unstable size 889; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 324, 1, 889] with unstable size 323 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 889] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 889] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [323]; unstable size 323; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 323] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 323] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86873055,  3.27330303, -1.23502302, -0.61113095, -0.78136873,
         -0.75137866,  0.93968081,  3.48995113,  3.24112701]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.77937126, -24.38296890, -19.26746750, -18.82821846, -19.50073814,
         -19.05830956, -19.41297340, -21.65519333, -24.81905746, -23.99803734]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.77937126, -24.38297081, -19.26746559, -18.82821846, -19.50073814,
          -19.05830956, -19.41297150, -21.65519333, -24.81905556, -23.99803925],
         [-21.77937126, -24.38297081, -19.26746559, -18.82821846, -19.50073814,
          -19.05830956, -19.41297150, -21.65519333, -24.81905556, -23.99803925]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.20915604, -0.23009109,  0.44242859,  0.35466194]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0737 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.53012466, -29.66223907, -26.90876389, -28.07838631, -26.04151726,
         -29.22808647, -27.47805023, -29.35506439, -20.28993988, -29.09470940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 586] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 586] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 173] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51274967, 8.23108101, 5.60526562, 6.71246910, 4.74748898, 7.73364449,
         6.02225113, 7.97453213, 7.67071962]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0467 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
         -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [688]; unstable size 688; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 688] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 688] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 260] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.49447250,  3.06922221,  0.62996531, -0.02265930,  0.38052845,
         -0.22107923,  0.10723674,  4.39991188,  2.21292210]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
         -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.96it/s]100%|██████████| 1/1 [00:00<00:00,  8.94it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.18397522, -21.81373215, -17.85622978, -16.59555244, -17.68647575,
          -16.41921616, -17.14182472, -17.56402969, -22.39430809, -20.54507637],
         [-20.18397522, -21.81373215, -17.85622978, -16.59555244, -17.68647575,
          -16.41921616, -17.14182472, -17.56402969, -22.39430809, -20.54507637]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.17633629, 0.72260857]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1146 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.641357421875
alpha/beta optimization time: 1.1974282264709473
initial alpha-crown bounds: tensor([[ 2.55440688,  3.16163421,  0.69625592,  0.01558346,  0.45437026,
         -0.16967762,  0.16310745,  4.47692680,  2.28874969]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.16967761516571045
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6408815383911
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64084196090698
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64081597328186
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.64079236984253
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.64077377319336
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.64075541496277
Verifying property 5 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16967762]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
        -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16967762]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 688
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 258
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 968
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010323524475097656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1696767807006836
10 lb beta sum: 0.0, worst -0.16968250274658203
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0523    transfer 0.0001    finalize 0.0001    func 0.0528    
Accumulated time: func 0.0528    prepare 0.0002    bound 0.0523    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 17] 
split level 4: [/input-12, 72] 
split level 5: [/input-12, 35] 
split level 6: [/input-8, 944] 
split level 7: [/input-12, 29] 
split level 8: [/input-12, 89] 
split level 9: [/input-8, 593] 
split level 10: [/input-12, 36] 
split level 11: [/input-8, 421] 
split level 12: [/input-8, 1948] 
split level 13: [/input-8, 1949] 
split level 14: [/input-12, 18] 
split level 15: [/input-8, 953] 
split level 16: [/input-8, 1946] 
split level 17: [/input-8, 853] 
split level 18: [/input-8, 418] 
split level 19: [/input-8, 1709] 
split level 20: [/input-8, 1938] 
split level 21: [/input-8, 427] 
split level 22: [/input-8, 601] 
split level 23: [/input-8, 1973] 
split level 24: [/input-8, 938] 
split level 25: [/input-8, 585] 
split level 26: [/input, 1431] 
split level 27: [/input-8, 979] 
split level 28: [/input-8, 604] 
split level 29: [/input-8, 594] 
split level 30: [/input, 3209] 
split level 31: [/input-8, 980] 
split level 32: [/input-8, 1684] 
split level 33: [/input-12, 71] 
split level 34: [/input-8, 1170] 
split level 35: [/input, 1377] 
split level 36: [/input-8, 844] 
split level 37: [/input-8, 1693] 
split level 38: [/input, 3124] 
split level 39: [/input-8, 1675] 
split level 40: [/input-8, 1954] 
split level 41: [/input-8, 587] 
split level 42: [/input-8, 1742] 
split level 43: [/input, 2710] 
split level 44: [/input-8, 403] 
split level 45: [/input, 1443] 
split level 46: [/input, 2676] 
split level 47: [/input, 276] 
split level 48: [/input, 1444] 
split level 49: [/input, 2679] 
split level 50: [/input, 3171] 
split level 51: [/input-8, 404] 
split level 52: [/input, 1394] 
split level 53: [/input, 3238] 
split level 54: [/input, 2485] 
split level 55: [/input-8, 1331] 
split level 56: [/input-8, 1599] 
split level 57: [/input, 147] 
split level 58: [/input, 131] 
split level 59: [/input, 2451] 
split level 60: [/input-12, 43] 
split level 61: [/input-8, 1177] 
split level 62: [/input, 1346] 
split level 63: [/input-8, 1341] 
split level 64: [/input, 2197] 
split level 65: [/input-8, 1676] 
split level 66: [/input, 1361] 
split level 67: [/input, 2180] 
split level 68: [/input, 2198] 
split level 69: [/input-8, 1752] 
split level 70: [/input, 3285] 
split level 71: [/input-8, 580] 
split level 72: [/input, 209] 
split level 73: [/input, 132] 
split level 74: [/input, 2586] 
split level 75: [/input, 1441] 
split level 76: [/input, 3287] 
split level 77: [/input, 3102] 
split level 78: [/input, 3118] 
split level 79: [/input, 803] 
split level 80: [/input, 1719] 
split level 81: [/input, 787] 
split level 82: [/input, 3363] 
split level 83: [/input, 2603] 
split level 84: [/input, 2434] 
split level 85: [/input, 820] 
split level 86: [/input, 2099] 
split level 87: [/input-8, 1782] 
split level 88: [/input-8, 60] 
split level 89: [/input, 2257] 
split level 90: [/input, 1387] 
split level 91: [/input-8, 1315] 
split level 92: [/input, 3379] 
split level 93: [/input, 1410] 
split level 94: [/input, 146] 
split level 95: [/input, 788] 
split level 96: [/input, 804] 
split level 97: [/input, 2587] 
split level 98: [/input, 3142] 
split level 99: [/input, 2258] 
split level 100: [/input, 2707] 
split level 101: [/input, 1994] 
split level 102: [/input, 2792] 
split level 103: [/input, 2437] 
split level 104: [/input, 2145] 
split level 105: [/input, 819] 
split level 106: [/input, 156] 
split level 107: [/input, 1426] 
split level 108: [/input, 851] 
split level 109: [/input, 3154] 
split level 110: [/input, 1449] 
split level 111: [/input, 2512] 
split level 112: [/input, 2266] 
split level 113: [/input, 177] 
split level 114: [/input, 2387] 
split level 115: [/input, 2433] 
split level 116: [/input, 1468] 
split level 117: [/input, 2116] 
split level 118: [/input, 2741] 
split level 119: [/input, 2758] 
split level 120: [/input, 166] 
split level 121: [/input-8, 836] 
split level 122: [/input, 2658] 
split level 123: [/input-8, 1765] 
split level 124: [/input, 2529] 
split level 125: [/input, 1480] 
split level 126: [/input, 2620] 
split level 127: [/input, 214] 
split level 128: [/input, 2211] 
split level 129: [/input, 2530] 
split level 130: [/input, 835] 
split level 131: [/input, 999] 
split level 132: [/input, 2757] 
split level 133: [/input, 3301] 
split level 134: [/input, 2148] 
split level 135: [/input, 2791] 
split level 136: [/input-8, 396] 
split level 137: [/input, 2242] 
split level 138: [/input, 182] 
split level 139: [/input-8, 1265] 
split level 140: [/input, 113] 
split level 141: [/input, 2161] 
split level 142: [/input, 2774] 
split level 143: [/input, 995] 
split level 144: [/input, 193] 
split level 145: [/input, 3288] 
split level 146: [/input, 2773] 
split level 147: [/input-8, 1784] 
split level 148: [/input-8, 402] 
split level 149: [/input, 2657] 
split level 150: [/input, 3525] 
split level 151: [/input, 837] 
split level 152: [/input, 2977] 
split level 153: [/input, 996] 
split level 154: [/input, 2689] 
split level 155: [/input-8, 977] 
split level 156: [/input, 2686] 
split level 157: [/input, 2507] 
split level 158: [/input, 3358] 
split level 159: [/input, 2777] 
split level 160: [/input, 162] 
split level 161: [/input, 195] 
split level 162: [/input, 145] 
split level 163: [/input, 2699] 
split level 164: [/input, 2355] 
split level 165: [/input, 2450] 
split level 166: [/input, 227] 
split level 167: [/input, 2204] 
split level 168: [/input, 3381] 
split level 169: [/input, 114] 
split level 170: [/input, 199] 
split level 171: [/input, 3014] 
split level 172: [/input, 789] 
split level 173: [/input, 2654] 
split level 174: [/input, 2488] 
split level 175: [/input, 3284] 
split level 176: [/input, 2193] 
split level 177: [/input, 2273] 
split level 178: [/input, 2226] 
split level 179: [/input, 3303] 
split level 180: [/input-8, 1743] 
split level 181: [/input, 2705] 
split level 182: [/input, 173] 
split level 183: [/input, 2210] 
split level 184: [/input, 2611] 
split level 185: [/input-8, 835] 
split level 186: [/input, 2776] 
split level 187: [/input, 183] 
split level 188: [/input, 3555] 
split level 189: [/input, 2466] 
split level 190: [/input, 2515] 
split level 191: [/input, 1978] 
split level 192: [/input, 2214] 
split level 193: [/input, 2489] 
split level 194: [/input, 2248] 
split level 195: [/input, 2209] 
split level 196: [/input, 2517] 
split level 197: [/input, 482] 
split level 198: [/input, 2521] 
split level 199: [/input, 167] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16962742805480957
10 lb beta sum: 0.0, worst -0.16961872577667236
Time: prepare 0.0115    bound 0.0961    transfer 0.0013    finalize 0.0028    func 0.1143    
Accumulated time: func 0.1671    prepare 0.0216    bound 0.1484    transfer 0.0014    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.26176751) min lb tensor(-0.16961539)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.010334014892578125 
BICCOS Cumulative time: 0.010334014892578125
Preprocessing time: 0.009781122207641602 Inference time: 0.00023651123046875 Add cuts time: 7.62939453125e-05 Cut analysis time: 0.00024008750915527344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16202 (1), -0.16197 (1), -0.16190 (1), -0.16179 (1), -0.16160 (1), -0.16152 (1), -0.16142 (1), -0.16132 (1), -0.16131 (1), -0.16122 (1), -0.16121 (1), -0.16060 (1), -0.16054 (1), -0.15995 (1), -0.15977 (1), -0.15970 (1), -0.15870 (1), -0.15799 (1), -0.15793 (1), -0.15643 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5141    set_bounds 0.0088    solve 0.1144    add 0.0703    
Accumulated time: pickout 0.0003    decision 0.5141    set_bounds 0.0088    solve 0.1144    add 0.0703    
Current (lb-rhs): -0.16202163696289062
50 domains visited
Cumulative time: 0.7762296199798584

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 64] [/input-12, 0] 
split level 1: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 42] [/input-12, 64] 
split level 2: [/input-12, 42] [/input-12, 17] [/input-12, 42] [/input-12, 42] [/input-12, 17] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 17] [/input-12, 42] 
split level 3: [/input-12, 17] [/input-12, 35] [/input-12, 17] [/input-12, 17] [/input-12, 35] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 35] [/input-12, 17] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13135850429534912
10 lb beta sum: 0.688727080821991, worst -0.060469627380371094
Time: prepare 0.0075    bound 0.1166    transfer 0.0023    finalize 0.0024    func 0.1314    
Accumulated time: func 0.2984    prepare 0.0293    bound 0.2650    transfer 0.0038    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.38830924) min lb tensor(-0.06029445)
Number of Verified Splits: 268 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.02801656723022461 
BICCOS Cumulative time: 0.038350582122802734
Preprocessing time: 0.011736392974853516 Inference time: 0.011250972747802734 Add cuts time: 0.0048406124114990234 Cut analysis time: 0.00018858909606933594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0210    set_bounds 0.0122    solve 0.1315    add 0.0178    
Accumulated time: pickout 0.0014    decision 0.5351    set_bounds 0.0211    solve 0.2458    add 0.0880    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 17] 
split level 4: [/input-12, 72] 
split level 5: [/input-12, 35] 
split level 6: [/input-12, 89] 
split level 7: [/input-8, 1948] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.09492409229278564

all verified at 0th iter
Time: prepare 0.0051    bound 0.0040    transfer 0.0016    finalize 0.0013    func 0.0136    
Accumulated time: func 0.3120    prepare 0.0348    bound 0.2690    transfer 0.0054    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.90902251) min lb tensor(0.09492409)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006965160369873047 
BICCOS Cumulative time: 0.04531574249267578
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0222    set_bounds 0.0200    solve 0.0136    add 0.0003    
Accumulated time: pickout 0.0018    decision 0.5573    set_bounds 0.0411    solve 0.2594    add 0.0883    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.0548388957977295


Properties batch 6, size 1
Remaining timeout: 197.4039044380188
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.40383219718933
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.40380954742432
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.5964 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.84988976, -27.04168510, -32.56347275, -33.70067215, -33.15383530,
         -34.10073471, -32.55872345, -32.39547729, -30.81136703, -29.74110985]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [597]; unstable size 597; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 597] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 597] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 597] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 252] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.47295141, 3.67134094, 4.79960918, 4.17743587, 5.03716660, 3.67930937,
         3.29446220, 2.28837824, 1.78437126]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0697 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.95876122, -24.06052399, -22.79921150, -22.37466049, -21.66536903,
         -22.27144814, -23.11923218, -24.92821121, -24.52709389, -24.95055580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1300]; unstable size 1300; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 386, 1, 1300] with unstable size 385 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 1300] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1300] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [385]; unstable size 385; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 385] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 385] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.83590496, -0.36369658, -0.81580889, -0.21350297, -1.76645517,
         -0.45421195,  1.06313872,  0.19591510,  0.91548586]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.95876122, -24.06052399, -22.79921150, -22.37466049, -21.66536903,
         -22.27144814, -23.11923218, -24.92821121, -24.52709389, -24.95055580]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.95876312, -24.06052208, -22.79921341, -22.37466049, -21.66536713,
          -22.27144814, -23.11923218, -24.92821121, -24.52709579, -24.95055199],
         [-21.95876312, -24.06052208, -22.79921341, -22.37466049, -21.66536713,
          -22.27144814, -23.11923218, -24.92821121, -24.52709579, -24.95055199]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31268501,  1.78907394,  0.52776527,  0.10321236, -0.60608101,
           0.84778404]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0618 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.02009583, -25.62828255, -18.56137657, -22.16949654, -20.18937492,
         -22.90802956, -21.61422729, -24.61019516, -20.71578217, -25.30768013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [637]; unstable size 637; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 152, 1, 637] with unstable size 151 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 637] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 637] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [151]; unstable size 151; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 151] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 151] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.60369205, 1.05985808, 4.44430256, 2.54081893, 5.11138248, 3.84395003,
         6.83230686, 2.69353724, 7.41863537]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0602 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.94017601, -28.86633301, -23.06001091, -21.31272125, -22.19619942,
         -20.90770912, -22.69350815, -22.96586227, -29.16728783, -27.83672142]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [615]; unstable size 615; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 323, 1, 615] with unstable size 322 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 615] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 615] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [322]; unstable size 322; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 322] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 322] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51382422, 5.73519039, 0.91068602, 0.11511427, 0.03012872, 0.51855636,
         1.05246663, 6.62892151, 5.18492413]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0440 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.12831688, -24.87204933, -21.52433014, -21.45733643, -22.17998314,
         -21.62087250, -21.34234619, -22.34700012, -24.97188950, -22.55655289]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 184, 1, 580] with unstable size 183 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 580] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 580] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [183]; unstable size 183; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 183] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 183] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.55080485,  1.90782392, -1.05542922, -0.76249886, -0.39093399,
         -0.77109891, -0.48512772,  2.12622023, -0.21663618]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.12831688, -24.87204933, -21.52433014, -21.45733643, -22.17998314,
         -21.62087250, -21.34234619, -22.34700012, -24.97188950, -22.55655289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.98245811, -25.14087677, -21.26465225, -21.48969841, -22.09676743,
          -21.62775993, -21.63244629, -22.23480034, -24.92131615, -22.71515083],
         [-21.98245811, -25.14087677, -21.26465225, -21.48969841, -22.09676743,
          -21.62775993, -21.63244629, -22.23480034, -24.92131615, -22.71515083]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.35001183, -0.36779404, -0.14274788,  0.46432114, -0.00468636,
           0.60235405,  1.08270454]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0163 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0470 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
         -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [631]; unstable size 631; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 277, 1, 631] with unstable size 276 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 631] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 631] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [276]; unstable size 276; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 276] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.26207829,  2.67205667, -0.09352827,  0.10025692,  0.83907413,
          0.73087049,  0.70621490,  0.08608732,  2.33385849]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
         -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.10it/s]100%|██████████| 1/1 [00:00<00:00,  9.09it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.58753777, -25.74412537, -22.30705833, -22.74228668, -23.48993874,
          -23.62050629, -23.39388275, -23.13651657, -21.69568634, -25.29735374]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.61137199]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1125 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.149776458740234
alpha/beta optimization time: 1.1991748809814453
initial alpha-crown bounds: tensor([[ 2.29125261,  2.73074436, -0.03381681,  0.15643966,  0.90439510,
          0.79678559,  0.77209878,  0.15606073,  2.37581706]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.03381681442260742
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65233159065247
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65229058265686
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6522650718689
Verifying property 2 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03381681]], device='cuda:0') need to verify.
Model prediction is: tensor([-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
        -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03381681]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 631
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 271
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 917
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010776519775390625
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03381538391113281
10 lb beta sum: 0.0, worst -0.03382539749145508
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    func 0.0524    
Accumulated time: func 0.0524    prepare 0.0002    bound 0.0520    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 50] 
split level 6: [/input-8, 1963] 
split level 7: [/input-8, 1947] 
split level 8: [/input-12, 68] 
split level 9: [/input-8, 1718] 
split level 10: [/input-8, 1693] 
split level 11: [/input-8, 370] 
split level 12: [/input-8, 923] 
split level 13: [/input-8, 371] 
split level 14: [/input-8, 1956] 
split level 15: [/input-8, 1948] 
split level 16: [/input-8, 938] 
split level 17: [/input-8, 299] 
split level 18: [/input-8, 454] 
split level 19: [/input-8, 365] 
split level 20: [/input-8, 362] 
split level 21: [/input-8, 1710] 
split level 22: [/input-8, 1656] 
split level 23: [/input-8, 909] 
split level 24: [/input-8, 1970] 
split level 25: [/input-8, 291] 
split level 26: [/input-8, 795] 
split level 27: [/input-8, 1644] 
split level 28: [/input-8, 1700] 
split level 29: [/input-8, 1636] 
split level 30: [/input-8, 617] 
split level 31: [/input-8, 908] 
split level 32: [/input-8, 1840] 
split level 33: [/input-8, 587] 
split level 34: [/input-8, 186] 
split level 35: [/input-8, 586] 
split level 36: [/input-8, 1640] 
split level 37: [/input-8, 785] 
split level 38: [/input-8, 604] 
split level 39: [/input-8, 778] 
split level 40: [/input, 3544] 
split level 41: [/input-8, 1684] 
split level 42: [/input-8, 905] 
split level 43: [/input, 2423] 
split level 44: [/input-8, 354] 
split level 45: [/input-8, 1969] 
split level 46: [/input-8, 1648] 
split level 47: [/input, 2231] 
split level 48: [/input-8, 781] 
split level 49: [/input-8, 1971] 
split level 50: [/input-8, 1631] 
split level 51: [/input-8, 918] 
split level 52: [/input-8, 178] 
split level 53: [/input-8, 1639] 
split level 54: [/input-8, 1651] 
split level 55: [/input-8, 1295] 
split level 56: [/input, 2023] 
split level 57: [/input-8, 1698] 
split level 58: [/input-8, 218] 
split level 59: [/input, 3541] 
split level 60: [/input-8, 580] 
split level 61: [/input-8, 1627] 
split level 62: [/input, 469] 
split level 63: [/input-8, 346] 
split level 64: [/input-8, 1284] 
split level 65: [/input, 2153] 
split level 66: [/input, 2472] 
split level 67: [/input, 3542] 
split level 68: [/input-8, 1043] 
split level 69: [/input, 2442] 
split level 70: [/input-8, 172] 
split level 71: [/input-8, 1781] 
split level 72: [/input, 2201] 
split level 73: [/input, 2457] 
split level 74: [/input, 2370] 
split level 75: [/input, 2024] 
split level 76: [/input, 2421] 
split level 77: [/input, 488] 
split level 78: [/input-8, 222] 
split level 79: [/input-8, 337] 
split level 80: [/input, 2022] 
split level 81: [/input, 754] 
split level 82: [/input, 2021] 
split level 83: [/input, 2181] 
split level 84: [/input, 3545] 
split level 85: [/input-8, 1150] 
split level 86: [/input-8, 1706] 
split level 87: [/input, 1415] 
split level 88: [/input-8, 910] 
split level 89: [/input, 2488] 
split level 90: [/input, 981] 
split level 91: [/input, 487] 
split level 92: [/input, 2246] 
split level 93: [/input-8, 907] 
split level 94: [/input-8, 1824] 
split level 95: [/input, 2518] 
split level 96: [/input-8, 1617] 
split level 97: [/input, 696] 
split level 98: [/input, 2154] 
split level 99: [/input, 2473] 
split level 100: [/input-8, 48] 
split level 101: [/input-8, 997] 
split level 102: [/input, 2282] 
split level 103: [/input-8, 1974] 
split level 104: [/input, 3540] 
split level 105: [/input, 998] 
split level 106: [/input-8, 1587] 
split level 107: [/input-8, 42] 
split level 108: [/input, 2026] 
split level 109: [/input, 2538] 
split level 110: [/input-8, 209] 
split level 111: [/input-8, 1773] 
split level 112: [/input, 2489] 
split level 113: [/input, 2114] 
split level 114: [/input-8, 213] 
split level 115: [/input-8, 1607] 
split level 116: [/input-8, 776] 
split level 117: [/input, 2121] 
split level 118: [/input-8, 233] 
split level 119: [/input, 985] 
split level 120: [/input, 3557] 
split level 121: [/input, 4066] 
split level 122: [/input-8, 211] 
split level 123: [/input-8, 1034] 
split level 124: [/input, 2263] 
split level 125: [/input-8, 330] 
split level 126: [/input, 2264] 
split level 127: [/input, 486] 
split level 128: [/input, 2075] 
split level 129: [/input, 3558] 
split level 130: [/input-8, 219] 
split level 131: [/input, 2265] 
split level 132: [/input, 2533] 
split level 133: [/input, 2325] 
split level 134: [/input, 2451] 
split level 135: [/input-8, 1736] 
split level 136: [/input, 707] 
split level 137: [/input, 2435] 
split level 138: [/input, 738] 
split level 139: [/input, 2525] 
split level 140: [/input, 3973] 
split level 141: [/input, 2261] 
split level 142: [/input, 3371] 
split level 143: [/input-8, 1816] 
split level 144: [/input, 2248] 
split level 145: [/input, 4006] 
split level 146: [/input, 2347] 
split level 147: [/input-8, 217] 
split level 148: [/input, 812] 
split level 149: [/input, 2025] 
split level 150: [/input-8, 215] 
split level 151: [/input, 2163] 
split level 152: [/input-8, 339] 
split level 153: [/input, 2369] 
split level 154: [/input, 485] 
split level 155: [/input, 2280] 
split level 156: [/input, 2113] 
split level 157: [/input, 299] 
split level 158: [/input-8, 238] 
split level 159: [/input, 2382] 
split level 160: [/input-8, 253] 
split level 161: [/input, 2353] 
split level 162: [/input, 3422] 
split level 163: [/input, 1000] 
split level 164: [/input, 3361] 
split level 165: [/input-8, 290] 
split level 166: [/input, 952] 
split level 167: [/input-8, 197] 
split level 168: [/input, 489] 
split level 169: [/input, 2536] 
split level 170: [/input, 3395] 
split level 171: [/input, 986] 
split level 172: [/input, 2505] 
split level 173: [/input, 2552] 
split level 174: [/input, 2281] 
split level 175: [/input, 4082] 
split level 176: [/input, 1977] 
split level 177: [/input, 1976] 
split level 178: [/input, 3882] 
split level 179: [/input, 3559] 
split level 180: [/input-8, 225] 
split level 181: [/input-8, 1254] 
split level 182: [/input, 3942] 
split level 183: [/input, 2554] 
split level 184: [/input, 3372] 
split level 185: [/input, 2278] 
split level 186: [/input, 2125] 
split level 187: [/input, 2092] 
split level 188: [/input, 2515] 
split level 189: [/input, 2551] 
split level 190: [/input-8, 1848] 
split level 191: [/input, 3344] 
split level 192: [/input, 2788] 
split level 193: [/input, 2126] 
split level 194: [/input, 2277] 
split level 195: [/input, 2499] 
split level 196: [/input, 2279] 
split level 197: [/input, 2549] 
split level 198: [/input-8, 410] 
split level 199: [/input, 2227] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03361201286315918
10 lb beta sum: 0.0, worst -0.03360700607299805
Time: prepare 0.0115    bound 0.0967    transfer 0.0012    finalize 0.0029    func 0.1150    
Accumulated time: func 0.1674    prepare 0.0216    bound 0.1487    transfer 0.0013    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.16243625) min lb tensor(-0.03360033)
Number of Verified Splits: 24 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011483192443847656 
BICCOS Cumulative time: 0.011483192443847656
Preprocessing time: 0.009856462478637695 Inference time: 0.0011794567108154297 Add cuts time: 0.0002846717834472656 Cut analysis time: 0.00016260147094726562
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5151    set_bounds 0.0095    solve 0.1151    add 0.0099    
Accumulated time: pickout 0.0003    decision 0.5151    set_bounds 0.0095    solve 0.1151    add 0.0099    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 50] 
split level 6: [/input-12, 68] 
split level 7: [/input-8, 1956] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.21120595932006836

all verified at 0th iter
Time: prepare 0.0051    bound 0.0040    transfer 0.0011    finalize 0.0014    func 0.0131    
Accumulated time: func 0.1805    prepare 0.0270    bound 0.1526    transfer 0.0024    finalize 0.0044    
all_split False
======================Cut inference begins======================
max lb tensor(0.71002889) min lb tensor(0.21120596)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006924867630004883 
BICCOS Cumulative time: 0.01840806007385254
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0215    set_bounds 0.0202    solve 0.0132    add 0.0003    
Accumulated time: pickout 0.0007    decision 0.5366    set_bounds 0.0297    solve 0.1282    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.7840635776519775


Properties batch 3, size 1
Remaining timeout: 197.68823051452637
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.68816208839417
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.6881399154663
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.68812036514282
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.6881022453308
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.68808269500732
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.3120 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.79308891, -23.41397476, -18.82098770, -19.48437309, -18.56243706,
         -19.91847992, -17.07889175, -20.97890472, -23.56008720, -23.37459755]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 336, 1, 606] with unstable size 335 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 606] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [335]; unstable size 335; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 335] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 335] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.91788769, 3.99140882, 0.67279953, 1.37791443, 0.25162351, 1.69752812,
         2.11260462, 4.47059822, 4.00945711]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0483 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
         -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 675] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 675] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 216] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.57993078,  3.15776849,  6.31814671,  3.25631571,  7.08248138,
          6.16690826,  5.13876104, -1.86000657,  3.30038857]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
         -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
          -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.01841354]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0541 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
         -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [645]; unstable size 645; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 263, 1, 645] with unstable size 262 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 645] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 645] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [262]; unstable size 262; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 262] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.42895699,  4.10993195, -0.60754943, -0.13815880, -0.32017207,
          1.23225927, -0.67439413,  4.97595882,  2.89096022]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
         -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.94it/s]100%|██████████| 1/1 [00:00<00:00,  7.93it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.49737930, -22.43238258, -17.16550827, -16.42162704, -17.18960381,
          -16.38314819, -18.64624214, -17.14737320, -23.54323959, -21.05616760],
         [-21.49737930, -22.43238258, -17.16550827, -16.42162704, -17.18960381,
          -16.38314819, -18.64624214, -17.14737320, -23.54323959, -21.05616760]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.78236008, 0.03847885, 0.80645561, 0.76422501]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1292 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.555827140808105
alpha/beta optimization time: 1.2189888954162598
initial alpha-crown bounds: tensor([[ 3.51031065,  4.22539425, -0.55174971, -0.12316990, -0.26672816,
          1.27698302, -0.59470463,  5.09362888,  2.98586178]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.5947046279907227
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.58888578414917
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.58884692192078
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.58882331848145
Verifying property 2 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55174971]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55174971]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.989738464355469e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 85] 
split level 4: [/input-12, 34] 
split level 5: [/input-12, 83] 
split level 6: [/input-12, 7] 
split level 7: [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15371078252792358
10 lb beta sum: 0.0, worst -0.152704119682312
Time: prepare 0.0019    bound 0.0930    transfer 0.0011    finalize 0.0016    func 0.0992    
Accumulated time: func 0.0992    prepare 0.0023    bound 0.0930    transfer 0.0011    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(0.64542913) min lb tensor(-0.15214235)
Number of Verified Splits: 248 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.41179919242858887
10 lb beta sum: 0.0, worst -0.4062037467956543
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 2
#cuts 4-6: 13
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.2086799144744873 
BICCOS Cumulative time: 0.2086799144744873
Preprocessing time: 0.006433010101318359 Inference time: 0.19675087928771973 Add cuts time: 0.004491567611694336 Cut analysis time: 0.0010044574737548828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15214 (8), -0.13599 (8), -0.10110 (8), -0.09103 (8), -0.07763 (8), -0.05946 (8), -0.03572 (8), -0.03280 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0217    set_bounds 0.0162    solve 0.0993    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0217    set_bounds 0.0162    solve 0.0993    add 0.0008    
Current (lb-rhs): -0.15214234590530396
8 domains visited
Cumulative time: 0.3519318103790283

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-8, 1963] [/input-8, 1636] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1636] [/input-8, 1691] [/input-8, 1691] 
split level 4: [/input-8, 1692] [/input-8, 1627] [/input-12, 71] [/input-8, 1627] [/input-8, 1691] [/input-8, 1627] [/input-8, 1636] [/input-8, 1692] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0710037350654602
10 lb beta sum: 0.0, worst -0.07005554437637329
Time: prepare 0.0052    bound 0.1125    transfer 0.0005    finalize 0.0014    func 0.1213    
Accumulated time: func 0.2205    prepare 0.0077    bound 0.2056    transfer 0.0016    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.18365717) min lb tensor(-0.06962597)
Number of Verified Splits: 235 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22287845611572266
10 lb beta sum: 0.11014584451913834, worst -0.21133166551589966
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 2
#cuts 4-6: 14
#cuts 7-9: 26
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 0.283677339553833 
BICCOS Cumulative time: 0.4923572540283203
Preprocessing time: 0.00737452507019043 Inference time: 0.259169340133667 Add cuts time: 0.014348030090332031 Cut analysis time: 0.0027854442596435547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06963 (13), -0.05695 (13), -0.05673 (13), -0.05010 (13), -0.04916 (13), -0.04632 (13), -0.04201 (13), -0.03965 (13), -0.03801 (13), -0.03661 (13), -0.03622 (13), -0.02939 (13), -0.02895 (13), -0.02868 (13), -0.02614 (13), -0.01834 (13), -0.01062 (13), -0.00697 (13), -0.00498 (13), -0.00160 (13), 
Length of domains: 21
Time: pickout 0.0008    decision 0.0179    set_bounds 0.0142    solve 0.1214    add 0.0011    
Accumulated time: pickout 0.0012    decision 0.0396    set_bounds 0.0304    solve 0.2206    add 0.0019    
Current (lb-rhs): -0.06962597370147705
29 domains visited
Cumulative time: 0.793377161026001

BaB round 3
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1683] [/input-8, 1691] [/input-8, 1692] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1691] [/input-8, 1692] [/input-8, 1692] [/input-8, 1683] 
split level 1: [/input-8, 1963] [/input-8, 1692] [/input-12, 71] [/input-8, 1692] [/input-12, 71] [/input-8, 1963] [/input-8, 1692] [/input-12, 71] [/input-8, 1963] [/input-8, 1692] 
split level 2: [/input-8, 1644] [/input-8, 1627] [/input-8, 1946] [/input-8, 1946] [/input-8, 1946] [/input-8, 1644] [/input-8, 1627] [/input-8, 1946] [/input-8, 1627] [/input-8, 1636] 
split level 3: [/input-8, 1619] [/input-8, 1946] [/input-8, 930] [/input-8, 1636] [/input-8, 930] [/input-8, 1619] [/input-8, 1946] [/input-8, 930] [/input-8, 1946] [/input-8, 1946] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04340630769729614
10 lb beta sum: 0.0, worst -0.04290062189102173
Time: prepare 0.0067    bound 0.1380    transfer 0.0011    finalize 0.0019    func 0.1498    
Accumulated time: func 0.3703    prepare 0.0146    bound 0.3435    transfer 0.0027    finalize 0.0048    
all_split False
======================Cut inference begins======================
max lb tensor(0.07085171) min lb tensor(-0.04268700)
Number of Verified Splits: 245 of 336
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 9
#cuts 4-6: 7
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.04521942138671875 
BICCOS Cumulative time: 0.5375766754150391
Preprocessing time: 0.010192155838012695 Inference time: 0.029798269271850586 Add cuts time: 0.004355669021606445 Cut analysis time: 0.0008733272552490234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04269 (17), -0.03949 (17), -0.03633 (17), -0.03502 (17), -0.03390 (17), -0.03233 (17), -0.02991 (17), -0.02979 (17), -0.02833 (17), -0.02695 (17), -0.02685 (17), -0.02643 (17), -0.02639 (17), -0.02376 (17), -0.02336 (17), -0.02324 (17), -0.02316 (17), -0.02257 (17), -0.02191 (17), -0.02171 (17), 
Length of domains: 91
Time: pickout 0.0016    decision 0.0183    set_bounds 0.0163    solve 0.1498    add 0.0010    
Accumulated time: pickout 0.0028    decision 0.0579    set_bounds 0.0467    solve 0.3705    add 0.0029    
Current (lb-rhs): -0.04268699884414673
120 domains visited
Cumulative time: 1.0268728733062744

BaB round 4
batch: 91
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1635] [/input-8, 1635] [/input-8, 1627] [/input-8, 1635] [/input-8, 1691] [/input-8, 1635] [/input-8, 1627] [/input-8, 1691] [/input-8, 1627] [/input-8, 1636] 
split level 1: [/input-8, 1636] [/input-8, 1636] [/input-8, 417] [/input-8, 1636] [/input-8, 1627] [/input-8, 1636] [/input-8, 417] [/input-8, 1627] [/input-8, 417] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03171044588088989
10 lb beta sum: 0.06250885128974915, worst -0.0314292311668396
Time: prepare 0.0075    bound 0.1379    transfer 0.0008    finalize 0.0022    func 0.1509    
Accumulated time: func 0.5212    prepare 0.0224    bound 0.4814    transfer 0.0035    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(0.29127455) min lb tensor(-0.03126401)
Number of Verified Splits: 305 of 364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 14
#cuts 4-6: 7
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.05225086212158203 
BICCOS Cumulative time: 0.5898275375366211
Preprocessing time: 0.010400772094726562 Inference time: 0.038240671157836914 Add cuts time: 0.0027379989624023438 Cut analysis time: 0.0008714199066162109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03126 (19), -0.02765 (19), -0.02736 (19), -0.02423 (19), -0.02370 (19), -0.02294 (19), -0.01816 (19), -0.01810 (19), -0.01686 (19), -0.01502 (19), -0.01478 (19), -0.01447 (19), -0.01440 (19), -0.01418 (19), -0.01272 (19), -0.01226 (19), -0.01202 (19), -0.01154 (19), -0.01145 (19), -0.01131 (19), 
Length of domains: 59
Time: pickout 0.0023    decision 0.0197    set_bounds 0.0109    solve 0.1511    add 0.0011    
Accumulated time: pickout 0.0051    decision 0.0775    set_bounds 0.0577    solve 0.5215    add 0.0040    
Current (lb-rhs): -0.03126400709152222
179 domains visited
Cumulative time: 1.2655129432678223

BaB round 5
batch: 59
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 921] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 921] 
split level 1: [/input-8, 1619] [/input-8, 1619] [/input-8, 1619] [/input-8, 1708] [/input-8, 419] [/input-8, 1619] [/input-8, 1619] [/input-8, 1619] [/input-8, 419] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.019135117530822754
10 lb beta sum: 0.11955507099628448, worst -0.016017422080039978
Time: prepare 0.0047    bound 0.1317    transfer 0.0008    finalize 0.0012    func 0.1400    
Accumulated time: func 0.6612    prepare 0.0273    bound 0.6132    transfer 0.0043    finalize 0.0083    
all_split False
======================Cut inference begins======================
max lb tensor(0.47053126) min lb tensor(-0.01587772)
Number of Verified Splits: 225 of 236
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 16
#cuts 4-6: 7
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.03950095176696777 
BICCOS Cumulative time: 0.6293284893035889
Preprocessing time: 0.0068705081939697266 Inference time: 0.029843807220458984 Add cuts time: 0.0018575191497802734 Cut analysis time: 0.0009291172027587891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01588 (21), -0.01514 (21), -0.01412 (21), -0.01339 (21), -0.01221 (21), -0.01134 (21), -0.01001 (21), -0.00912 (21), -0.00252 (21), -0.00179 (21), -0.00063 (21), 
Length of domains: 11
Time: pickout 0.0017    decision 0.0183    set_bounds 0.0072    solve 0.1400    add 0.0008    
Accumulated time: pickout 0.0069    decision 0.0958    set_bounds 0.0649    solve 0.6615    add 0.0048    
Current (lb-rhs): -0.015877723693847656
190 domains visited
Cumulative time: 1.473909854888916

BaB round 6
batch: 11
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] 
split level 1: [/input-8, 1644] [/input-8, 1953] [/input-8, 419] [/input-8, 1644] [/input-8, 419] [/input-8, 1953] [/input-8, 1953] [/input-8, 419] [/input-8, 1644] [/input-8, 419] 
split level 2: [/input-8, 1953] [/input-8, 1644] [/input-8, 1628] [/input-8, 419] [/input-8, 1953] [/input-8, 1628] [/input-8, 1644] [/input-8, 1953] [/input-8, 419] [/input-8, 1953] 
split level 3: [/input-8, 419] [/input-8, 419] [/input-8, 417] [/input-8, 1953] [/input-8, 1644] [/input-8, 417] [/input-8, 419] [/input-8, 417] [/input-8, 1953] [/input-8, 1644] 
split level 4: [/input-8, 417] [/input-8, 417] [/input-8, 1644] [/input-8, 417] [/input-8, 417] [/input-8, 1644] [/input-8, 417] [/input-8, 1644] [/input-8, 417] [/input-8, 417] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.0024527311325073242

all verified at 0th iter
Time: prepare 0.0068    bound 0.0070    transfer 0.0006    finalize 0.0015    func 0.0181    
Accumulated time: func 0.6793    prepare 0.0344    bound 0.6201    transfer 0.0049    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.05125952) min lb tensor(0.00245273)
Number of Verified Splits: 352 of 352
No cut inferred: All or none verified.
Total number of valid cuts: 28.
#cuts 1-3: 16
#cuts 4-6: 7
#cuts 7-9: 5
#cuts >= 20: 0
BICCOS time: 0.010232686996459961 
BICCOS Cumulative time: 0.6395611763000488
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0183    set_bounds 0.0172    solve 0.0182    add 0.0001    
Accumulated time: pickout 0.0079    decision 0.1141    set_bounds 0.0821    solve 0.6798    add 0.0049    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
190 domains visited
Cumulative time: 1.5398752689361572


Properties batch 3, size 1
Remaining timeout: 196.87231588363647
Verifying property 3 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12316990]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12316990]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010061264038085938
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 83] 
split level 2: [/input-12, 34] 
split level 3: [/input-12, 18] 
split level 4: [/input-12, 85] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05037611722946167
10 lb beta sum: 0.0, worst -0.05019181966781616
Time: prepare 0.0018    bound 0.0929    transfer 0.0008    finalize 0.0015    func 0.0987    
Accumulated time: func 0.0987    prepare 0.0022    bound 0.0929    transfer 0.0008    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.05486321) min lb tensor(-0.05010486)
Number of Verified Splits: 191 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12316924333572388
10 lb beta sum: 0.0, worst -0.12317037582397461
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 4-6: 10
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.18537330627441406 
BICCOS Cumulative time: 0.18537330627441406
Preprocessing time: 0.006378173828125 Inference time: 0.1736462116241455 Add cuts time: 0.0039713382720947266 Cut analysis time: 0.0013775825500488281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05010 (8), -0.04988 (8), -0.04896 (8), -0.04849 (8), -0.04837 (8), -0.04773 (8), -0.04712 (8), -0.04630 (8), -0.04227 (8), -0.04218 (8), -0.04051 (8), -0.03965 (8), -0.03923 (8), -0.03898 (8), -0.03891 (8), -0.03733 (8), -0.02833 (8), -0.02710 (8), -0.02542 (8), -0.02468 (8), 
Length of domains: 65
Time: pickout 0.0004    decision 0.0222    set_bounds 0.0160    solve 0.0988    add 0.0013    
Accumulated time: pickout 0.0004    decision 0.0222    set_bounds 0.0160    solve 0.0988    add 0.0013    
Current (lb-rhs): -0.05010485649108887
65 domains visited
Cumulative time: 0.32905030250549316

BaB round 2
batch: 65
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 71] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.041355133056640625
10 lb beta sum: 0.0, worst -0.04124259948730469
Time: prepare 0.0038    bound 0.1156    transfer 0.0007    finalize 0.0012    func 0.1231    
Accumulated time: func 0.2218    prepare 0.0063    bound 0.2085    transfer 0.0015    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.02150846) min lb tensor(-0.04120851)
Number of Verified Splits: 157 of 260
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0682377815246582
10 lb beta sum: 0.028828557580709457, worst -0.07124602794647217
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 4-6: 15
#cuts 7-9: 31
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.2150557041168213 
BICCOS Cumulative time: 0.40042901039123535
Preprocessing time: 0.00749659538269043 Inference time: 0.19769954681396484 Add cuts time: 0.007364988327026367 Cut analysis time: 0.0024945735931396484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04121 (10), -0.04106 (10), -0.04003 (10), -0.03959 (10), -0.03928 (10), -0.03857 (10), -0.03815 (10), -0.03798 (10), -0.03761 (10), -0.03732 (10), -0.03700 (10), -0.03674 (10), -0.03634 (10), -0.03624 (10), -0.03558 (10), -0.03500 (10), -0.03320 (10), -0.03311 (10), -0.03150 (10), -0.03057 (10), 
Length of domains: 103
Time: pickout 0.0163    decision 0.0165    set_bounds 0.0086    solve 0.1232    add 0.0122    
Accumulated time: pickout 0.0167    decision 0.0386    set_bounds 0.0246    solve 0.2219    add 0.0135    
Current (lb-rhs): -0.041208505630493164
168 domains visited
Cumulative time: 0.7221617698669434

BaB round 3
batch: 103
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03798419237136841
10 lb beta sum: 0.0, worst -0.037921786308288574
Time: prepare 0.0033    bound 0.1215    transfer 0.0013    finalize 0.0013    func 0.1289    
Accumulated time: func 0.3506    prepare 0.0098    bound 0.3299    transfer 0.0028    finalize 0.0041    
all_split False
======================Cut inference begins======================
max lb tensor(0.02032113) min lb tensor(-0.03790575)
Number of Verified Splits: 92 of 206
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 8
#cuts 4-6: 10
#cuts 7-9: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.01934504508972168 
BICCOS Cumulative time: 0.41977405548095703
Preprocessing time: 0.0061779022216796875 Inference time: 0.009055137634277344 Add cuts time: 0.0032796859741210938 Cut analysis time: 0.0008323192596435547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03791 (11), -0.03782 (11), -0.03666 (11), -0.03627 (11), -0.03593 (11), -0.03519 (11), -0.03492 (11), -0.03454 (11), -0.03427 (11), -0.03400 (11), -0.03358 (11), -0.03342 (11), -0.03297 (11), -0.03294 (11), -0.03228 (11), -0.03172 (11), -0.02991 (11), -0.02985 (11), -0.02815 (11), -0.02728 (11), 
Length of domains: 114
Time: pickout 0.0018    decision 0.0172    set_bounds 0.0062    solve 0.1289    add 0.0014    
Accumulated time: pickout 0.0185    decision 0.0558    set_bounds 0.0308    solve 0.3508    add 0.0149    
Current (lb-rhs): -0.037905752658843994
282 domains visited
Cumulative time: 0.8978750705718994

BaB round 4
batch: 114
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034214794635772705
10 lb beta sum: 0.0008797337650321424, worst -0.03417706489562988
Time: prepare 0.0035    bound 0.1186    transfer 0.0011    finalize 0.0011    func 0.1258    
Accumulated time: func 0.4764    prepare 0.0135    bound 0.4485    transfer 0.0039    finalize 0.0052    
all_split False
======================Cut inference begins======================
max lb tensor(0.01317835) min lb tensor(-0.03416514)
Number of Verified Splits: 107 of 228
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 13
#cuts 4-6: 6
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.020576000213623047 
BICCOS Cumulative time: 0.4403500556945801
Preprocessing time: 0.0066127777099609375 Inference time: 0.010986566543579102 Add cuts time: 0.002257823944091797 Cut analysis time: 0.0007188320159912109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03417 (12), -0.03402 (12), -0.03304 (12), -0.03264 (12), -0.03222 (12), -0.03157 (12), -0.03123 (12), -0.03081 (12), -0.03060 (12), -0.03038 (12), -0.02997 (12), -0.02974 (12), -0.02936 (12), -0.02935 (12), -0.02868 (12), -0.02823 (12), -0.02630 (12), -0.02597 (12), -0.02595 (12), -0.02590 (12), 
Length of domains: 121
Time: pickout 0.0021    decision 0.0173    set_bounds 0.0065    solve 0.1258    add 0.0012    
Accumulated time: pickout 0.0205    decision 0.0730    set_bounds 0.0374    solve 0.4767    add 0.0162    
Current (lb-rhs): -0.034165143966674805
403 domains visited
Cumulative time: 1.0722017288208008

BaB round 5
batch: 121
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02937418222427368
10 lb beta sum: 0.007936366833746433, worst -0.029336214065551758
Time: prepare 0.0094    bound 0.1186    transfer 0.0006    finalize 0.0011    func 0.1312    
Accumulated time: func 0.6076    prepare 0.0230    bound 0.5671    transfer 0.0045    finalize 0.0063    
all_split False
======================Cut inference begins======================
max lb tensor(0.32792249) min lb tensor(-0.02932549)
Number of Verified Splits: 75 of 242
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 12
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.016156673431396484 
BICCOS Cumulative time: 0.45650672912597656
Preprocessing time: 0.006963253021240234 Inference time: 0.007742404937744141 Add cuts time: 0.0009467601776123047 Cut analysis time: 0.0005042552947998047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02933 (13), -0.02908 (13), -0.02818 (13), -0.02805 (13), -0.02794 (13), -0.02774 (13), -0.02749 (13), -0.02680 (13), -0.02680 (13), -0.02653 (13), -0.02651 (13), -0.02592 (13), -0.02565 (13), -0.02565 (13), -0.02560 (13), -0.02511 (13), -0.02505 (13), -0.02498 (13), -0.02483 (13), -0.02467 (13), 
Length of domains: 167
Time: pickout 0.0019    decision 0.0174    set_bounds 0.0071    solve 0.1313    add 0.0013    
Accumulated time: pickout 0.0225    decision 0.0904    set_bounds 0.0445    solve 0.6079    add 0.0174    
Current (lb-rhs): -0.029325485229492188
570 domains visited
Cumulative time: 1.2484726905822754

BaB round 6
batch: 167
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02763509750366211
10 lb beta sum: 0.00534225394949317, worst -0.027599096298217773
Time: prepare 0.0065    bound 0.1194    transfer 0.0015    finalize 0.0017    func 0.1312    
Accumulated time: func 0.7389    prepare 0.0298    bound 0.6864    transfer 0.0060    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.31341380) min lb tensor(-0.02759254)
Number of Verified Splits: 59 of 334
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 10
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0178985595703125 
BICCOS Cumulative time: 0.47440528869628906
Preprocessing time: 0.009818077087402344 Inference time: 0.006095409393310547 Add cuts time: 0.0009074211120605469 Cut analysis time: 0.0010776519775390625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02759 (14), -0.02717 (14), -0.02653 (14), -0.02628 (14), -0.02607 (14), -0.02592 (14), -0.02577 (14), -0.02519 (14), -0.02514 (14), -0.02492 (14), -0.02473 (14), -0.02457 (14), -0.02422 (14), -0.02404 (14), -0.02399 (14), -0.02385 (14), -0.02385 (14), -0.02384 (14), -0.02373 (14), -0.02370 (14), 
Length of domains: 275
Time: pickout 0.0025    decision 0.0194    set_bounds 0.0049    solve 0.1313    add 0.0017    
Accumulated time: pickout 0.0250    decision 0.1098    set_bounds 0.0493    solve 0.7392    add 0.0192    
Current (lb-rhs): -0.02759253978729248
845 domains visited
Cumulative time: 1.426870584487915

BaB round 7
batch: 275
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 417] [/input-8, 417] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02632439136505127
10 lb beta sum: 0.008244396187365055, worst -0.03988226503133774
Time: prepare 0.0106    bound 0.1368    transfer 0.0023    finalize 0.0023    func 0.1556    
Accumulated time: func 0.8945    prepare 0.0406    bound 0.8232    transfer 0.0083    finalize 0.0103    
all_split False
======================Cut inference begins======================
max lb tensor(0.00488839) min lb tensor(-0.02620476)
Number of Verified Splits: 80 of 550
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 5
#cuts 4-6: 2
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.025864362716674805 
BICCOS Cumulative time: 0.5002696514129639
Preprocessing time: 0.015850067138671875 Inference time: 0.00872492790222168 Add cuts time: 0.0009293556213378906 Cut analysis time: 0.0003600120544433594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02620 (15), -0.02573 (15), -0.02525 (15), -0.02485 (15), -0.02459 (15), -0.02453 (15), -0.02445 (15), -0.02395 (15), -0.02391 (15), -0.02380 (15), -0.02355 (15), -0.02330 (15), -0.02319 (15), -0.02309 (15), -0.02308 (15), -0.02296 (15), -0.02277 (15), -0.02273 (15), -0.02272 (15), -0.02259 (15), 
Length of domains: 470
Time: pickout 0.0039    decision 0.0252    set_bounds 0.0150    solve 0.1557    add 0.0040    
Accumulated time: pickout 0.0288    decision 0.1350    set_bounds 0.0644    solve 0.8950    add 0.0232    
Current (lb-rhs): -0.02620476484298706
1315 domains visited
Cumulative time: 1.6576182842254639

BaB round 8
batch: 470
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 417] [/input-8, 1698] [/input-8, 417] [/input-8, 417] [/input-8, 1692] [/input-8, 417] [/input-8, 417] [/input-8, 417] [/input-8, 417] [/input-8, 417] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.024980902671813965
10 lb beta sum: 0.011555313132703304, worst -0.024950385093688965
Time: prepare 0.0182    bound 0.1247    transfer 0.0037    finalize 0.0040    func 0.1576    
Accumulated time: func 1.0521    prepare 0.0590    bound 0.9479    transfer 0.0121    finalize 0.0143    
all_split False
======================Cut inference begins======================
max lb tensor(0.36970329) min lb tensor(-0.02494109)
Number of Verified Splits: 109 of 940
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 8
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.04204988479614258 
BICCOS Cumulative time: 0.5423195362091064
Preprocessing time: 0.027867794036865234 Inference time: 0.012282609939575195 Add cuts time: 0.0015077590942382812 Cut analysis time: 0.0003917217254638672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02494 (16), -0.02434 (16), -0.02399 (16), -0.02365 (16), -0.02347 (16), -0.02311 (16), -0.02308 (16), -0.02304 (16), -0.02299 (16), -0.02272 (16), -0.02252 (16), -0.02244 (16), -0.02229 (16), -0.02228 (16), -0.02195 (16), -0.02183 (16), -0.02177 (16), -0.02174 (16), -0.02173 (16), -0.02173 (16), 
Length of domains: 831
Time: pickout 0.0079    decision 0.0369    set_bounds 0.0247    solve 0.1578    add 0.0052    
Accumulated time: pickout 0.0367    decision 0.1719    set_bounds 0.0891    solve 1.0528    add 0.0284    
Current (lb-rhs): -0.024941086769104004
2146 domains visited
Cumulative time: 1.933765172958374

BaB round 9
batch: 831
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 723] [/input-8, 419] [/input-8, 419] [/input-8, 1673] [/input-8, 417] [/input-8, 1692] [/input-8, 723] [/input-8, 419] [/input-8, 723] [/input-8, 1692] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.023241043090820312
10 lb beta sum: 0.2809939980506897, worst -0.023219645023345947
Time: prepare 0.0322    bound 0.1564    transfer 0.0051    finalize 0.0071    func 0.2115    
Accumulated time: func 1.2636    prepare 0.0914    bound 1.1043    transfer 0.0171    finalize 0.0214    
all_split False
======================Cut inference begins======================
max lb tensor(0.41379774) min lb tensor(-0.02320802)
Number of Verified Splits: 665 of 1662
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 17
#cuts >= 20: 0
BICCOS time: 0.1375582218170166 
BICCOS Cumulative time: 0.679877758026123
Preprocessing time: 0.050466060638427734 Inference time: 0.07892227172851562 Add cuts time: 0.0076770782470703125 Cut analysis time: 0.0004928112030029297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02321 (17), -0.02248 (17), -0.02234 (17), -0.02230 (17), -0.02178 (17), -0.02167 (17), -0.02157 (17), -0.02133 (17), -0.02127 (17), -0.02126 (17), -0.02098 (17), -0.02088 (17), -0.02086 (17), -0.02070 (17), -0.02070 (17), -0.02069 (17), -0.02062 (17), -0.02058 (17), -0.02051 (17), -0.02050 (17), 
Length of domains: 997
Time: pickout 0.0133    decision 0.0563    set_bounds 0.0446    solve 0.3584    add 0.0035    
Accumulated time: pickout 0.0500    decision 0.2282    set_bounds 0.1337    solve 1.4112    add 0.0319    
Current (lb-rhs): -0.023208022117614746
3143 domains visited
Cumulative time: 2.5532658100128174

BaB round 10
batch: 997
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 1698] [/input-8, 723] [/input-8, 723] [/input-8, 723] [/input-8, 1692] [/input-8, 419] [/input-8, 419] [/input-8, 1673] [/input-8, 1698] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02235943078994751
10 lb beta sum: 1.1716399192810059, worst -0.020610839128494263
Time: prepare 0.0392    bound 0.1685    transfer 0.0053    finalize 0.0089    func 0.2354    
Accumulated time: func 1.4990    prepare 0.1309    bound 1.2728    transfer 0.0225    finalize 0.0303    
all_split False
======================Cut inference begins======================
max lb tensor(0.98460537) min lb tensor(-0.02060089)
Number of Verified Splits: 1738 of 1994
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.2944316864013672 
BICCOS Cumulative time: 0.9743094444274902
Preprocessing time: 0.0592498779296875 Inference time: 0.21723651885986328 Add cuts time: 0.017673015594482422 Cut analysis time: 0.0002722740173339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02060 (18), -0.01979 (18), -0.01975 (18), -0.01918 (18), -0.01865 (18), -0.01835 (18), -0.01803 (18), -0.01789 (18), -0.01775 (18), -0.01768 (18), -0.01753 (18), -0.01747 (18), -0.01740 (18), -0.01728 (18), -0.01726 (18), -0.01716 (18), -0.01713 (18), -0.01694 (18), -0.01690 (18), -0.01689 (18), 
Length of domains: 256
Time: pickout 0.0165    decision 0.0650    set_bounds 0.0523    solve 0.2357    add 0.0016    
Accumulated time: pickout 0.0665    decision 0.2931    set_bounds 0.1861    solve 1.6469    add 0.0335    
Current (lb-rhs): -0.020600885152816772
3399 domains visited
Cumulative time: 3.2293972969055176

BaB round 11
batch: 256
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 212] [/input-8, 212] [/input-8, 212] [/input-8, 419] [/input-8, 425] [/input-8, 419] [/input-8, 425] [/input-8, 212] [/input-8, 212] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.021412193775177002

all verified at 2th iter
Time: prepare 0.0103    bound 0.0159    transfer 0.0010    finalize 0.0023    func 0.0327    
Accumulated time: func 1.5317    prepare 0.1414    bound 1.2886    transfer 0.0235    finalize 0.0325    
all_split False
======================Cut inference begins======================
max lb tensor(0.09393395) min lb tensor(0.05779959)
Number of Verified Splits: 512 of 512
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.014646053314208984 
BICCOS Cumulative time: 0.9889554977416992
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0063    decision 0.0226    set_bounds 0.0138    solve 0.0328    add 0.0007    
Accumulated time: pickout 0.0728    decision 0.3157    set_bounds 0.1999    solve 1.6797    add 0.0343    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3399 domains visited
Cumulative time: 3.321906566619873


Properties batch 4, size 1
Remaining timeout: 193.380375623703
Verifying property 4 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26672816]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26672816]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.489059448242188e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 85] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 34] 
split level 4: [/input-12, 83] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 97] 
split level 7: [/input-12, 72] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08984649181365967

all verified at 0th iter
Time: prepare 0.0018    bound 0.0041    transfer 0.0005    finalize 0.0014    func 0.0094    
Accumulated time: func 0.0094    prepare 0.0022    bound 0.0041    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.59338379) min lb tensor(0.08984649)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006476879119873047 
BICCOS Cumulative time: 0.006476879119873047
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0219    set_bounds 0.0158    solve 0.0095    add 0.0002    
Accumulated time: pickout 0.0003    decision 0.0219    set_bounds 0.0158    solve 0.0095    add 0.0002    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05859541893005371


Properties batch 5, size 1
Remaining timeout: 193.1444640159607
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 193.14439988136292
Verifying property 6 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.59470463]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.59470463]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.989738464355469e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 89] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 34] 
split level 5: [/input-12, 85] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 24] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10836195945739746
10 lb beta sum: 0.0, worst -0.10727143287658691
Time: prepare 0.0019    bound 0.0929    transfer 0.0005    finalize 0.0014    func 0.0984    
Accumulated time: func 0.0984    prepare 0.0023    bound 0.0929    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.61685544) min lb tensor(-0.10665226)
Number of Verified Splits: 230 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5947023630142212
10 lb beta sum: 0.0, worst -0.5947014093399048
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 2
#cuts 4-6: 6
#cuts 7-9: 9
#cuts >= 20: 0
BICCOS time: 0.20197653770446777 
BICCOS Cumulative time: 0.20197653770446777
Preprocessing time: 0.006491661071777344 Inference time: 0.18948936462402344 Add cuts time: 0.005072116851806641 Cut analysis time: 0.0009233951568603516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10665 (8), -0.10114 (8), -0.09351 (8), -0.08836 (8), -0.08690 (8), -0.07744 (8), -0.07216 (8), -0.07183 (8), -0.06843 (8), -0.06448 (8), -0.06014 (8), -0.05836 (8), -0.05828 (8), -0.05762 (8), -0.05506 (8), -0.04642 (8), -0.04342 (8), -0.03898 (8), -0.03400 (8), -0.03363 (8), 
Length of domains: 26
Time: pickout 0.0003    decision 0.0219    set_bounds 0.0162    solve 0.0985    add 0.0009    
Accumulated time: pickout 0.0003    decision 0.0219    set_bounds 0.0162    solve 0.0985    add 0.0009    
Current (lb-rhs): -0.10665225982666016
26 domains visited
Cumulative time: 0.3455040454864502

BaB round 2
batch: 26
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 1: [/input-8, 180] [/input-8, 164] [/input-8, 41] [/input-8, 180] [/input-8, 1579] [/input-8, 417] [/input-8, 180] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] 
split level 2: [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 723] [/input-8, 1579] [/input-8, 1579] [/input-8, 723] [/input-8, 349] [/input-8, 723] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08639860153198242
10 lb beta sum: 0.0, worst -0.08570551872253418
Time: prepare 0.0042    bound 0.1178    transfer 0.0010    finalize 0.0011    func 0.1255    
Accumulated time: func 0.2239    prepare 0.0066    bound 0.2107    transfer 0.0015    finalize 0.0026    
all_split False
======================Cut inference begins======================
max lb tensor(0.09920597) min lb tensor(-0.08532310)
Number of Verified Splits: 137 of 208
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.570601761341095
10 lb beta sum: 0.3405286371707916, worst -0.5291029810905457
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 2
#cuts 4-6: 6
#cuts 7-9: 15
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.20330166816711426 
BICCOS Cumulative time: 0.40527820587158203
Preprocessing time: 0.006141185760498047 Inference time: 0.1930239200592041 Add cuts time: 0.0027704238891601562 Cut analysis time: 0.0013661384582519531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08532 (11), -0.08383 (11), -0.08075 (11), -0.07926 (11), -0.07106 (11), -0.06916 (11), -0.06712 (11), -0.06477 (11), -0.06205 (11), -0.06156 (11), -0.06028 (11), -0.05983 (11), -0.05340 (11), -0.05318 (11), -0.05209 (11), -0.05206 (11), -0.04866 (11), -0.04722 (11), -0.04476 (11), -0.04454 (11), 
Length of domains: 71
Time: pickout 0.0016    decision 0.0149    set_bounds 0.0092    solve 0.1256    add 0.0011    
Accumulated time: pickout 0.0020    decision 0.0368    set_bounds 0.0254    solve 0.2241    add 0.0020    
Current (lb-rhs): -0.08532309532165527
97 domains visited
Cumulative time: 0.7027606964111328

BaB round 3
batch: 71
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 41] [/input-8, 172] [/input-8, 41] [/input-8, 164] [/input-8, 41] [/input-8, 164] [/input-8, 180] [/input-8, 1576] [/input-8, 164] [/input-8, 180] 
split level 1: [/input-8, 369] [/input-8, 171] [/input-8, 349] [/input-8, 180] [/input-8, 349] [/input-8, 180] [/input-8, 41] [/input-8, 41] [/input-8, 172] [/input-8, 41] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07847023010253906
10 lb beta sum: 0.0, worst -0.07804393768310547
Time: prepare 0.0056    bound 0.1296    transfer 0.0017    finalize 0.0014    func 0.1401    
Accumulated time: func 0.3641    prepare 0.0124    bound 0.3404    transfer 0.0032    finalize 0.0039    
all_split False
======================Cut inference begins======================
max lb tensor(0.03667778) min lb tensor(-0.07787180)
Number of Verified Splits: 124 of 284
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 8
#cuts 4-6: 4
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.02338385581970215 
BICCOS Cumulative time: 0.4286620616912842
Preprocessing time: 0.008221864700317383 Inference time: 0.012512922286987305 Add cuts time: 0.002084016799926758 Cut analysis time: 0.0005650520324707031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07787 (13), -0.07645 (13), -0.07212 (13), -0.07188 (13), -0.07069 (13), -0.07020 (13), -0.06944 (13), -0.06778 (13), -0.06686 (13), -0.06511 (13), -0.06448 (13), -0.06404 (13), -0.06268 (13), -0.06262 (13), -0.06216 (13), -0.06119 (13), -0.05915 (13), -0.05839 (13), -0.05770 (13), -0.05769 (13), 
Length of domains: 160
Time: pickout 0.0017    decision 0.0169    set_bounds 0.0088    solve 0.1402    add 0.0013    
Accumulated time: pickout 0.0037    decision 0.0537    set_bounds 0.0342    solve 0.3643    add 0.0034    
Current (lb-rhs): -0.07787179946899414
257 domains visited
Cumulative time: 0.8958597183227539

BaB round 4
batch: 160
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1576] [/input-8, 180] [/input-8, 417] [/input-8, 172] [/input-8, 1576] [/input-8, 172] [/input-8, 1576] [/input-8, 417] [/input-8, 180] [/input-8, 1576] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07485604286193848
10 lb beta sum: 0.538618266582489, worst -0.07226824760437012
Time: prepare 0.0062    bound 0.1287    transfer 0.0016    finalize 0.0015    func 0.1402    
Accumulated time: func 0.5042    prepare 0.0189    bound 0.4691    transfer 0.0048    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.49490118) min lb tensor(-0.07214570)
Number of Verified Splits: 244 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 14
#cuts 4-6: 4
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.0381314754486084 
BICCOS Cumulative time: 0.4667935371398926
Preprocessing time: 0.009176254272460938 Inference time: 0.02551126480102539 Add cuts time: 0.002825021743774414 Cut analysis time: 0.0006189346313476562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07215 (14), -0.07085 (14), -0.06894 (14), -0.06767 (14), -0.06708 (14), -0.06571 (14), -0.06409 (14), -0.06263 (14), -0.06160 (14), -0.06075 (14), -0.06001 (14), -0.05933 (14), -0.05911 (14), -0.05742 (14), -0.05709 (14), -0.05671 (14), -0.05621 (14), -0.05578 (14), -0.05550 (14), -0.05497 (14), 
Length of domains: 76
Time: pickout 0.0026    decision 0.0192    set_bounds 0.0084    solve 0.1402    add 0.0010    
Accumulated time: pickout 0.0063    decision 0.0729    set_bounds 0.0426    solve 0.5045    add 0.0044    
Current (lb-rhs): -0.07214570045471191
333 domains visited
Cumulative time: 1.1066255569458008

BaB round 5
batch: 76
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 349] [/input-8, 369] [/input-8, 39] [/input-8, 349] [/input-8, 417] [/input-8, 369] [/input-8, 39] [/input-8, 349] [/input-8, 349] [/input-8, 369] 
split level 1: [/input-8, 1250] [/input-8, 2014] [/input-8, 1691] [/input-8, 1692] [/input-8, 1250] [/input-8, 2014] [/input-8, 1691] [/input-8, 1692] [/input-8, 1250] [/input-8, 2014] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06943702697753906
10 lb beta sum: 1.24124014377594, worst -0.061449140310287476
Time: prepare 0.0060    bound 0.1308    transfer 0.0010    finalize 0.0014    func 0.1411    
Accumulated time: func 0.6454    prepare 0.0250    bound 0.5999    transfer 0.0059    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(0.48427743) min lb tensor(-0.06133544)
Number of Verified Splits: 195 of 304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 17
#cuts 4-6: 4
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.03445291519165039 
BICCOS Cumulative time: 0.501246452331543
Preprocessing time: 0.008662939071655273 Inference time: 0.022484302520751953 Add cuts time: 0.002650737762451172 Cut analysis time: 0.0006549358367919922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06134 (16), -0.06004 (16), -0.05955 (16), -0.05823 (16), -0.05802 (16), -0.05676 (16), -0.05624 (16), -0.05475 (16), -0.05432 (16), -0.05284 (16), -0.05227 (16), -0.05130 (16), -0.05075 (16), -0.04996 (16), -0.04958 (16), -0.04838 (16), -0.04733 (16), -0.04638 (16), -0.04584 (16), -0.04509 (16), 
Length of domains: 109
Time: pickout 0.0015    decision 0.0171    set_bounds 0.0093    solve 0.1412    add 0.0012    
Accumulated time: pickout 0.0078    decision 0.0901    set_bounds 0.0519    solve 0.6457    add 0.0056    
Current (lb-rhs): -0.06133544445037842
442 domains visited
Cumulative time: 1.3126718997955322

BaB round 6
batch: 109
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 349] [/input-8, 39] [/input-8, 39] [/input-8, 349] [/input-8, 39] [/input-8, 349] [/input-8, 349] [/input-8, 164] [/input-8, 1691] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06653642654418945
10 lb beta sum: 1.4611815214157104, worst -0.05719451606273651
Time: prepare 0.0044    bound 0.1345    transfer 0.0010    finalize 0.0014    func 0.1427    
Accumulated time: func 0.7880    prepare 0.0297    bound 0.7343    transfer 0.0069    finalize 0.0082    
all_split False
======================Cut inference begins======================
max lb tensor(0.57717240) min lb tensor(-0.05710548)
Number of Verified Splits: 133 of 218
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.02442169189453125 
BICCOS Cumulative time: 0.5256681442260742
Preprocessing time: 0.00632786750793457 Inference time: 0.015646696090698242 Add cuts time: 0.0018727779388427734 Cut analysis time: 0.0005743503570556641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05711 (17), -0.05511 (17), -0.05364 (17), -0.05150 (17), -0.04971 (17), -0.04921 (17), -0.04762 (17), -0.04715 (17), -0.04630 (17), -0.04600 (17), -0.04478 (17), -0.04403 (17), -0.04223 (17), -0.04196 (17), -0.04001 (17), -0.03988 (17), -0.03874 (17), -0.03811 (17), -0.03732 (17), -0.03612 (17), 
Length of domains: 85
Time: pickout 0.0023    decision 0.0172    set_bounds 0.0059    solve 0.1427    add 0.0011    
Accumulated time: pickout 0.0101    decision 0.1073    set_bounds 0.0578    solve 0.7884    add 0.0067    
Current (lb-rhs): -0.05710548162460327
527 domains visited
Cumulative time: 1.5071008205413818

BaB round 7
batch: 85
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 185] [/input-8, 1946] [/input-8, 185] [/input-8, 1946] [/input-8, 185] [/input-8, 425] [/input-8, 1946] [/input-8, 1708] [/input-8, 425] [/input-8, 1708] 
split level 1: [/input-8, 1692] [/input-8, 417] [/input-8, 1692] [/input-8, 417] [/input-8, 1692] [/input-8, 1370] [/input-8, 417] [/input-8, 723] [/input-8, 1370] [/input-8, 723] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.058838605880737305
10 lb beta sum: 1.9016977548599243, worst -0.04480081796646118
Time: prepare 0.0066    bound 0.1310    transfer 0.0006    finalize 0.0015    func 0.1420    
Accumulated time: func 0.9301    prepare 0.0365    bound 0.8653    transfer 0.0075    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.02358341) min lb tensor(-0.04477406)
Number of Verified Splits: 72 of 340
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 21
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.021769285202026367 
BICCOS Cumulative time: 0.5474374294281006
Preprocessing time: 0.009747743606567383 Inference time: 0.009445905685424805 Add cuts time: 0.0019774436950683594 Cut analysis time: 0.0005981922149658203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04477 (19), -0.04400 (19), -0.04254 (19), -0.04238 (19), -0.04228 (19), -0.04144 (19), -0.04132 (19), -0.04066 (19), -0.04056 (19), -0.04041 (19), -0.03977 (19), -0.03963 (19), -0.03933 (19), -0.03904 (19), -0.03895 (19), -0.03874 (19), -0.03865 (19), -0.03808 (19), -0.03799 (19), -0.03753 (19), 
Length of domains: 268
Time: pickout 0.0019    decision 0.0186    set_bounds 0.0103    solve 0.1421    add 0.0014    
Accumulated time: pickout 0.0120    decision 0.1259    set_bounds 0.0680    solve 0.9305    add 0.0081    
Current (lb-rhs): -0.04477405548095703
795 domains visited
Cumulative time: 1.7037718296051025

BaB round 8
batch: 268
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 369] [/input-8, 185] [/input-8, 369] [/input-8, 185] [/input-8, 361] [/input-8, 185] [/input-8, 361] [/input-8, 369] [/input-8, 185] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05560612678527832
10 lb beta sum: 2.041177272796631, worst -0.042234987020492554
Time: prepare 0.0104    bound 0.1352    transfer 0.0022    finalize 0.0028    func 0.1541    
Accumulated time: func 1.0841    prepare 0.0471    bound 1.0005    transfer 0.0098    finalize 0.0125    
all_split False
======================Cut inference begins======================
max lb tensor(0.23760712) min lb tensor(-0.04220867)
Number of Verified Splits: 119 of 536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.03643512725830078 
BICCOS Cumulative time: 0.5838725566864014
Preprocessing time: 0.01639866828918457 Inference time: 0.017439842224121094 Add cuts time: 0.0019354820251464844 Cut analysis time: 0.0006611347198486328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04221 (20), -0.04143 (20), -0.04006 (20), -0.03981 (20), -0.03973 (20), -0.03928 (20), -0.03889 (20), -0.03875 (20), -0.03812 (20), -0.03797 (20), -0.03766 (20), -0.03757 (20), -0.03650 (20), -0.03645 (20), -0.03641 (20), -0.03615 (20), -0.03591 (20), -0.03543 (20), -0.03538 (20), -0.03513 (20), 
Length of domains: 417
Time: pickout 0.0041    decision 0.0255    set_bounds 0.0140    solve 0.1542    add 0.0023    
Accumulated time: pickout 0.0161    decision 0.1514    set_bounds 0.0820    solve 1.0848    add 0.0105    
Current (lb-rhs): -0.04220867156982422
1212 domains visited
Cumulative time: 1.9415643215179443

BaB round 9
batch: 417
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1370] [/input-8, 369] [/input-8, 1370] [/input-8, 369] [/input-8, 1987] [/input-8, 369] [/input-8, 1987] [/input-8, 1370] [/input-8, 369] [/input-8, 342] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.053212642669677734
10 lb beta sum: 2.1363167762756348, worst -0.037781476974487305
Time: prepare 0.0162    bound 0.1355    transfer 0.0033    finalize 0.0039    func 0.1644    
Accumulated time: func 1.2485    prepare 0.0635    bound 1.1360    transfer 0.0130    finalize 0.0165    
all_split False
======================Cut inference begins======================
max lb tensor(0.00705802) min lb tensor(-0.03775734)
Number of Verified Splits: 152 of 834
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 26
#cuts 4-6: 3
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.05084633827209473 
BICCOS Cumulative time: 0.6347188949584961
Preprocessing time: 0.02340984344482422 Inference time: 0.024097442626953125 Add cuts time: 0.002643108367919922 Cut analysis time: 0.0006959438323974609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03776 (21), -0.03693 (21), -0.03552 (21), -0.03527 (21), -0.03519 (21), -0.03489 (21), -0.03469 (21), -0.03460 (21), -0.03444 (21), -0.03437 (21), -0.03405 (21), -0.03363 (21), -0.03356 (21), -0.03301 (21), -0.03294 (21), -0.03264 (21), -0.03256 (21), -0.03254 (21), -0.03246 (21), -0.03225 (21), 
Length of domains: 682
Time: pickout 0.0072    decision 0.0333    set_bounds 0.0223    solve 0.1646    add 0.0023    
Accumulated time: pickout 0.0233    decision 0.1847    set_bounds 0.1043    solve 1.2493    add 0.0128    
Current (lb-rhs): -0.03775733709335327
1894 domains visited
Cumulative time: 2.223681926727295

BaB round 10
batch: 682
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1996] [/input-8, 2014] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] [/input-8, 1946] [/input-8, 1996] [/input-8, 1370] [/input-8, 2014] [/input-8, 1996] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04926323890686035
10 lb beta sum: 2.4576916694641113, worst -0.03830921649932861
Time: prepare 0.0260    bound 0.1483    transfer 0.0042    finalize 0.0054    func 0.1934    
Accumulated time: func 1.4420    prepare 0.0898    bound 1.2843    transfer 0.0172    finalize 0.0219    
all_split False
======================Cut inference begins======================
max lb tensor(0.01936913) min lb tensor(-0.03284311)
Number of Verified Splits: 547 of 1364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 27
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.1317288875579834 
BICCOS Cumulative time: 0.7664477825164795
Preprocessing time: 0.04046225547790527 Inference time: 0.08279204368591309 Add cuts time: 0.007834911346435547 Cut analysis time: 0.0006396770477294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03284 (22), -0.03229 (22), -0.03198 (22), -0.03145 (22), -0.03070 (22), -0.03062 (22), -0.03057 (22), -0.03035 (22), -0.03023 (22), -0.03002 (22), -0.02981 (22), -0.02972 (22), -0.02970 (22), -0.02952 (22), -0.02945 (22), -0.02919 (22), -0.02919 (22), -0.02897 (22), -0.02890 (22), -0.02870 (22), 
Length of domains: 817
Time: pickout 0.0104    decision 0.0480    set_bounds 0.0362    solve 0.1937    add 0.0048    
Accumulated time: pickout 0.0338    decision 0.2326    set_bounds 0.1406    solve 1.4430    add 0.0175    
Current (lb-rhs): -0.03284311294555664
2711 domains visited
Cumulative time: 2.652806520462036

BaB round 11
batch: 817
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2014] [/input-8, 1946] [/input-8, 2014] [/input-8, 1576] [/input-8, 1576] [/input-8, 1250] [/input-8, 1946] [/input-8, 2014] [/input-8, 1946] [/input-8, 2014] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04631233215332031
10 lb beta sum: 2.7113893032073975, worst -0.0305558443069458
Time: prepare 0.0317    bound 0.1543    transfer 0.0029    finalize 0.0085    func 0.2080    
Accumulated time: func 1.6499    prepare 0.1217    bound 1.4386    transfer 0.0201    finalize 0.0303    
all_split False
======================Cut inference begins======================
max lb tensor(0.32349253) min lb tensor(-0.03054202)
Number of Verified Splits: 895 of 1634
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 29
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.19467997550964355 
BICCOS Cumulative time: 0.961127758026123
Preprocessing time: 0.04853701591491699 Inference time: 0.13576245307922363 Add cuts time: 0.00966954231262207 Cut analysis time: 0.0007109642028808594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03054 (23), -0.03003 (23), -0.02963 (23), -0.02914 (23), -0.02826 (23), -0.02804 (23), -0.02785 (23), -0.02775 (23), -0.02764 (23), -0.02753 (23), -0.02737 (23), -0.02737 (23), -0.02721 (23), -0.02714 (23), -0.02713 (23), -0.02688 (23), -0.02674 (23), -0.02670 (23), -0.02664 (23), -0.02631 (23), 
Length of domains: 739
Time: pickout 0.0160    decision 0.1867    set_bounds 0.0441    solve 0.2082    add 0.0055    
Accumulated time: pickout 0.0498    decision 0.4194    set_bounds 0.1847    solve 1.6512    add 0.0231    
Current (lb-rhs): -0.03054201602935791
3450 domains visited
Cumulative time: 3.315126895904541

BaB round 12
batch: 739
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 188] [/input-8, 417] [/input-8, 417] [/input-8, 188] [/input-8, 188] [/input-8, 188] [/input-8, 188] [/input-8, 417] [/input-8, 417] [/input-8, 188] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04506182670593262
10 lb beta sum: 2.810098886489868, worst -0.02928614616394043
Time: prepare 0.0287    bound 0.1492    transfer 0.0020    finalize 0.0067    func 0.1961    
Accumulated time: func 1.8461    prepare 0.1507    bound 1.5878    transfer 0.0221    finalize 0.0371    
all_split False
======================Cut inference begins======================
max lb tensor(0.25303268) min lb tensor(-0.02927744)
Number of Verified Splits: 1120 of 1478
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.23213434219360352 
BICCOS Cumulative time: 1.1932621002197266
Preprocessing time: 0.04436087608337402 Inference time: 0.17636418342590332 Add cuts time: 0.01071619987487793 Cut analysis time: 0.0006930828094482422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02928 (24), -0.02835 (24), -0.02699 (24), -0.02678 (24), -0.02659 (24), -0.02638 (24), -0.02609 (24), -0.02594 (24), -0.02589 (24), -0.02546 (24), -0.02502 (24), -0.02499 (24), -0.02494 (24), -0.02452 (24), -0.02431 (24), -0.02412 (24), -0.02403 (24), -0.02402 (24), -0.02393 (24), -0.02350 (24), 
Length of domains: 358
Time: pickout 0.0153    decision 0.0505    set_bounds 0.0401    solve 0.1964    add 0.0019    
Accumulated time: pickout 0.0651    decision 0.4698    set_bounds 0.2248    solve 1.8476    add 0.0250    
Current (lb-rhs): -0.029277443885803223
3808 domains visited
Cumulative time: 3.859605312347412

BaB round 13
batch: 358
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 161] [/input-8, 161] [/input-8, 161] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 161] [/input-8, 161] [/input-8, 161] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.042241573333740234
10 lb beta sum: 2.607712984085083, worst -0.029275357723236084
Time: prepare 0.0144    bound 0.1362    transfer 0.0011    finalize 0.0036    func 0.1599    
Accumulated time: func 2.0060    prepare 0.1652    bound 1.7239    transfer 0.0232    finalize 0.0406    
all_split False
======================Cut inference begins======================
max lb tensor(0.23205829) min lb tensor(-0.02927017)
Number of Verified Splits: 266 of 716
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 31
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.06717586517333984 
BICCOS Cumulative time: 1.2604379653930664
Preprocessing time: 0.020391225814819336 Inference time: 0.043298959732055664 Add cuts time: 0.00286102294921875 Cut analysis time: 0.0006246566772460938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02927 (25), -0.02835 (25), -0.02708 (25), -0.02699 (25), -0.02678 (25), -0.02658 (25), -0.02637 (25), -0.02620 (25), -0.02607 (25), -0.02594 (25), -0.02588 (25), -0.02546 (25), -0.02501 (25), -0.02498 (25), -0.02491 (25), -0.02480 (25), -0.02447 (25), -0.02431 (25), -0.02412 (25), -0.02402 (25), 
Length of domains: 450
Time: pickout 0.0070    decision 0.0304    set_bounds 0.0189    solve 0.1601    add 0.0021    
Accumulated time: pickout 0.0721    decision 0.5002    set_bounds 0.2437    solve 2.0077    add 0.0271    
Current (lb-rhs): -0.029270172119140625
4258 domains visited
Cumulative time: 4.14755392074585

BaB round 14
batch: 450
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1369] [/input-8, 342] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] [/input-8, 1996] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.040654659271240234
10 lb beta sum: 2.645019054412842, worst -0.02639138698577881
Time: prepare 0.0181    bound 0.1367    transfer 0.0035    finalize 0.0040    func 0.1688    
Accumulated time: func 2.1748    prepare 0.1836    bound 1.8606    transfer 0.0267    finalize 0.0447    
all_split False
======================Cut inference begins======================
max lb tensor(0.01420712) min lb tensor(-0.02638400)
Number of Verified Splits: 514 of 900
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 32
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.11942028999328613 
BICCOS Cumulative time: 1.3798582553863525
Preprocessing time: 0.02689194679260254 Inference time: 0.08600115776062012 Add cuts time: 0.005877494812011719 Cut analysis time: 0.0006496906280517578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02638 (26), -0.02546 (26), -0.02403 (26), -0.02399 (26), -0.02391 (26), -0.02373 (26), -0.02355 (26), -0.02318 (26), -0.02312 (26), -0.02311 (26), -0.02305 (26), -0.02265 (26), -0.02227 (26), -0.02215 (26), -0.02213 (26), -0.02156 (26), -0.02155 (26), -0.02136 (26), -0.02130 (26), -0.02123 (26), 
Length of domains: 386
Time: pickout 0.0087    decision 0.1542    set_bounds 0.0256    solve 0.1690    add 0.0018    
Accumulated time: pickout 0.0808    decision 0.6544    set_bounds 0.2692    solve 2.1767    add 0.0289    
Current (lb-rhs): -0.02638399600982666
4644 domains visited
Cumulative time: 4.629375219345093

BaB round 15
batch: 386
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1369] [/input-8, 206] [/input-8, 206] [/input-8, 206] [/input-8, 206] [/input-8, 206] [/input-8, 206] [/input-8, 206] [/input-8, 206] [/input-8, 206] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0377199649810791
10 lb beta sum: 2.7165586948394775, worst -0.021736979484558105
Time: prepare 0.0152    bound 0.1354    transfer 0.0036    finalize 0.0042    func 0.1636    
Accumulated time: func 2.3384    prepare 0.1991    bound 1.9961    transfer 0.0303    finalize 0.0489    
all_split False
======================Cut inference begins======================
max lb tensor(0.00842834) min lb tensor(-0.02170682)
Number of Verified Splits: 246 of 772
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 32
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0701456069946289 
BICCOS Cumulative time: 1.4500038623809814
Preprocessing time: 0.021728992462158203 Inference time: 0.04402470588684082 Add cuts time: 0.003744363784790039 Cut analysis time: 0.0006475448608398438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02171 (27), -0.02080 (27), -0.02078 (27), -0.01987 (27), -0.01933 (27), -0.01927 (27), -0.01917 (27), -0.01908 (27), -0.01871 (27), -0.01842 (27), -0.01841 (27), -0.01837 (27), -0.01836 (27), -0.01836 (27), -0.01833 (27), -0.01826 (27), -0.01817 (27), -0.01780 (27), -0.01780 (27), -0.01750 (27), 
Length of domains: 526
Time: pickout 0.0073    decision 0.0316    set_bounds 0.0203    solve 0.1637    add 0.0064    
Accumulated time: pickout 0.0881    decision 0.6860    set_bounds 0.2895    solve 2.3404    add 0.0352    
Current (lb-rhs): -0.021706819534301758
5170 domains visited
Cumulative time: 4.930838346481323

BaB round 16
batch: 526
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] [/input-8, 48] 
cut re-enabled after branching node selection
0 lb beta sum: 3.1607537269592285, worst -0.020529747009277344
10 lb beta sum: 3.1607537269592285, worst -0.020505309104919434
Time: prepare 0.0444    bound 0.1380    transfer 0.0040    finalize 0.0055    func 0.1987    
Accumulated time: func 2.5371    prepare 0.2437    bound 2.1341    transfer 0.0343    finalize 0.0544    
all_split False
======================Cut inference begins======================
max lb tensor(0.01327324) min lb tensor(-0.02049947)
Number of Verified Splits: 552 of 1052
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.13599371910095215 
BICCOS Cumulative time: 1.5859975814819336
Preprocessing time: 0.03082561492919922 Inference time: 0.0974583625793457 Add cuts time: 0.007055521011352539 Cut analysis time: 0.0006542205810546875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02050 (28), -0.01960 (28), -0.01957 (28), -0.01867 (28), -0.01825 (28), -0.01804 (28), -0.01794 (28), -0.01786 (28), -0.01750 (28), -0.01735 (28), -0.01732 (28), -0.01718 (28), -0.01717 (28), -0.01714 (28), -0.01704 (28), -0.01702 (28), -0.01696 (28), -0.01660 (28), -0.01659 (28), -0.01642 (28), 
Length of domains: 500
Time: pickout 0.0130    decision 0.0402    set_bounds 0.0280    solve 0.1989    add 0.0061    
Accumulated time: pickout 0.1011    decision 0.7262    set_bounds 0.3175    solve 2.5394    add 0.0413    
Current (lb-rhs): -0.020499467849731445
5670 domains visited
Cumulative time: 5.356569528579712

BaB round 17
batch: 500
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 204] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034989356994628906
10 lb beta sum: 2.640568971633911, worst -0.020508885383605957
Time: prepare 0.0194    bound 0.1385    transfer 0.0016    finalize 0.0050    func 0.1710    
Accumulated time: func 2.7082    prepare 0.2634    bound 2.2726    transfer 0.0360    finalize 0.0594    
all_split False
======================Cut inference begins======================
max lb tensor(0.00566840) min lb tensor(-0.02049947)
Number of Verified Splits: 200 of 1000
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 33
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07314395904541016 
BICCOS Cumulative time: 1.6591415405273438
Preprocessing time: 0.0306704044342041 Inference time: 0.038340091705322266 Add cuts time: 0.0034608840942382812 Cut analysis time: 0.0006725788116455078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02050 (29), -0.01960 (29), -0.01957 (29), -0.01867 (29), -0.01804 (29), -0.01794 (29), -0.01786 (29), -0.01750 (29), -0.01732 (29), -0.01718 (29), -0.01717 (29), -0.01714 (29), -0.01704 (29), -0.01700 (29), -0.01696 (29), -0.01660 (29), -0.01659 (29), -0.01642 (29), -0.01628 (29), -0.01627 (29), 
Length of domains: 800
Time: pickout 0.0100    decision 0.0376    set_bounds 0.0263    solve 0.1712    add 0.0036    
Accumulated time: pickout 0.1111    decision 0.7639    set_bounds 0.3439    solve 2.7106    add 0.0450    
Current (lb-rhs): -0.020499467849731445
6470 domains visited
Cumulative time: 5.68107271194458

BaB round 18
batch: 800
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input, 2986] [/input, 2986] [/input, 2986] [/input, 2986] [/input-8, 1369] 
cut re-enabled after branching node selection
0 lb beta sum: 2.9844987392425537, worst -0.01957857608795166
10 lb beta sum: 2.9844987392425537, worst -0.01957845687866211
Time: prepare 0.0735    bound 0.1568    transfer 0.0046    finalize 0.0091    func 0.2546    
Accumulated time: func 2.9627    prepare 0.3371    bound 2.4294    transfer 0.0406    finalize 0.0686    
all_split False
======================Cut inference begins======================
max lb tensor(0.24733949) min lb tensor(-0.01957476)
Number of Verified Splits: 522 of 1600
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 34
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.15533161163330078 
BICCOS Cumulative time: 1.8144731521606445
Preprocessing time: 0.04835224151611328 Inference time: 0.09820318222045898 Add cuts time: 0.008066177368164062 Cut analysis time: 0.0007100105285644531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01957 (30), -0.01917 (30), -0.01867 (30), -0.01827 (30), -0.01786 (30), -0.01731 (30), -0.01700 (30), -0.01695 (30), -0.01673 (30), -0.01661 (30), -0.01659 (30), -0.01641 (30), -0.01625 (30), -0.01625 (30), -0.01617 (30), -0.01610 (30), -0.01585 (30), -0.01584 (30), -0.01583 (30), -0.01571 (30), 
Length of domains: 1078
Time: pickout 0.0165    decision 0.0544    set_bounds 0.1584    solve 0.2549    add 0.0038    
Accumulated time: pickout 0.1277    decision 0.8183    set_bounds 0.5022    solve 2.9654    add 0.0488    
Current (lb-rhs): -0.019574761390686035
7548 domains visited
Cumulative time: 6.330393552780151

BaB round 19
batch: 1078
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input, 2986] [/input, 2986] [/input-8, 164] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.032286643981933594
10 lb beta sum: 2.489041805267334, worst -0.01915639638900757
Time: prepare 0.0520    bound 0.1789    transfer 0.0086    finalize 0.0110    func 0.2646    
Accumulated time: func 3.2273    prepare 0.3894    bound 2.6082    transfer 0.0492    finalize 0.0795    
all_split False
======================Cut inference begins======================
max lb tensor(0.49471116) min lb tensor(-0.01913965)
Number of Verified Splits: 1499 of 2156
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.3632829189300537 
BICCOS Cumulative time: 2.1777560710906982
Preprocessing time: 0.06571078300476074 Inference time: 0.27874231338500977 Add cuts time: 0.017922163009643555 Cut analysis time: 0.0009076595306396484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01914 (31), -0.01835 (31), -0.01671 (31), -0.01666 (31), -0.01658 (31), -0.01614 (31), -0.01583 (31), -0.01583 (31), -0.01576 (31), -0.01549 (31), -0.01536 (31), -0.01503 (31), -0.01502 (31), -0.01480 (31), -0.01458 (31), -0.01436 (31), -0.01400 (31), -0.01392 (31), -0.01392 (31), -0.01383 (31), 
Length of domains: 657
Time: pickout 0.0213    decision 0.0686    set_bounds 0.0442    solve 0.2649    add 0.0070    
Accumulated time: pickout 0.1490    decision 0.8869    set_bounds 0.5464    solve 3.2304    add 0.0557    
Current (lb-rhs): -0.019139647483825684
8205 domains visited
Cumulative time: 7.112468957901001

BaB round 20
batch: 657
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029771089553833008
10 lb beta sum: 2.678969621658325, worst -0.013704538345336914
Time: prepare 0.0324    bound 0.1694    transfer 0.0019    finalize 0.0074    func 0.2197    
Accumulated time: func 3.4470    prepare 0.4221    bound 2.7776    transfer 0.0511    finalize 0.0869    
all_split False
======================Cut inference begins======================
max lb tensor(0.49138737) min lb tensor(-0.01367354)
Number of Verified Splits: 1048 of 1314
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.37990236282348633 
BICCOS Cumulative time: 2.5576584339141846
Preprocessing time: 0.04000520706176758 Inference time: 0.326892614364624 Add cuts time: 0.012239217758178711 Cut analysis time: 0.0007653236389160156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01367 (32), -0.01292 (32), -0.01143 (32), -0.01124 (32), -0.01123 (32), -0.01110 (32), -0.01077 (32), -0.01068 (32), -0.01068 (32), -0.01036 (32), -0.01035 (32), -0.01034 (32), -0.00996 (32), -0.00993 (32), -0.00961 (32), -0.00959 (32), -0.00933 (32), -0.00897 (32), -0.00896 (32), -0.00889 (32), 
Length of domains: 266
Time: pickout 0.0148    decision 0.0455    set_bounds 0.0282    solve 0.2199    add 0.0017    
Accumulated time: pickout 0.1638    decision 0.9323    set_bounds 0.5746    solve 3.4503    add 0.0574    
Current (lb-rhs): -0.013673543930053711
8471 domains visited
Cumulative time: 7.80963659286499

BaB round 21
batch: 266
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input, 2986] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] [/input-8, 1566] 
cut re-enabled after branching node selection
0 lb beta sum: 2.9014384746551514, worst -0.01367330551147461
10 lb beta sum: 2.9014384746551514, worst -0.013653159141540527
Time: prepare 0.0256    bound 0.1488    transfer 0.0009    finalize 0.0024    func 0.1812    
Accumulated time: func 3.6282    prepare 0.4479    bound 2.9264    transfer 0.0520    finalize 0.0894    
all_split False
======================Cut inference begins======================
max lb tensor(0.23997593) min lb tensor(-0.01363802)
Number of Verified Splits: 264 of 532
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07065749168395996 
BICCOS Cumulative time: 2.6283159255981445
Preprocessing time: 0.015374898910522461 Inference time: 0.05074667930603027 Add cuts time: 0.0038115978240966797 Cut analysis time: 0.0007243156433105469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01364 (33), -0.01288 (33), -0.01140 (33), -0.01120 (33), -0.01120 (33), -0.01108 (33), -0.01075 (33), -0.01065 (33), -0.01064 (33), -0.01032 (33), -0.01031 (33), -0.01030 (33), -0.00994 (33), -0.00989 (33), -0.00957 (33), -0.00956 (33), -0.00930 (33), -0.00894 (33), -0.00894 (33), -0.00889 (33), 
Length of domains: 268
Time: pickout 0.0064    decision 0.0254    set_bounds 0.0133    solve 0.1813    add 0.0016    
Accumulated time: pickout 0.1702    decision 0.9578    set_bounds 0.5879    solve 3.6316    add 0.0590    
Current (lb-rhs): -0.013638019561767578
8739 domains visited
Cumulative time: 8.109929084777832

BaB round 22
batch: 268
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1410] [/input, 1410] [/input-8, 214] [/input, 1410] [/input, 1410] [/input-8, 214] [/input, 1410] [/input-8, 214] [/input, 1410] [/input-8, 214] 
cut re-enabled after branching node selection
0 lb beta sum: 2.8888916969299316, worst -0.011672616004943848
10 lb beta sum: 2.8888916969299316, worst -0.011627435684204102
Time: prepare 0.0261    bound 0.1445    transfer 0.0009    finalize 0.0026    func 0.1775    
Accumulated time: func 3.8057    prepare 0.4741    bound 3.0709    transfer 0.0529    finalize 0.0920    
all_split False
======================Cut inference begins======================
max lb tensor(0.00906634) min lb tensor(-0.01161218)
Number of Verified Splits: 261 of 536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07127141952514648 
BICCOS Cumulative time: 2.699587345123291
Preprocessing time: 0.01548004150390625 Inference time: 0.05138063430786133 Add cuts time: 0.003702402114868164 Cut analysis time: 0.0007083415985107422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01161 (34), -0.01138 (34), -0.01085 (34), -0.01071 (34), -0.01062 (34), -0.00992 (34), -0.00935 (34), -0.00913 (34), -0.00913 (34), -0.00913 (34), -0.00892 (34), -0.00892 (34), -0.00886 (34), -0.00858 (34), -0.00854 (34), -0.00836 (34), -0.00833 (34), -0.00832 (34), -0.00830 (34), -0.00827 (34), 
Length of domains: 275
Time: pickout 0.0066    decision 0.0235    set_bounds 0.0133    solve 0.1776    add 0.0013    
Accumulated time: pickout 0.1768    decision 0.9813    set_bounds 0.6012    solve 3.8092    add 0.0603    
Current (lb-rhs): -0.011612176895141602
9014 domains visited
Cumulative time: 8.404947996139526

BaB round 23
batch: 275
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 214] [/input-8, 214] [/input-8, 214] [/input-8, 214] [/input-8, 214] [/input-8, 51] [/input-8, 214] [/input-8, 51] [/input-8, 214] [/input-8, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 2.8459508419036865, worst -0.00966191291809082
10 lb beta sum: 2.8459508419036865, worst -0.0096435546875
Time: prepare 0.0268    bound 0.1451    transfer 0.0009    finalize 0.0027    func 0.1790    
Accumulated time: func 3.9846    prepare 0.5011    bound 3.2160    transfer 0.0538    finalize 0.0947    
all_split False
======================Cut inference begins======================
max lb tensor(0.01271796) min lb tensor(-0.00963390)
Number of Verified Splits: 292 of 550
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07945942878723145 
BICCOS Cumulative time: 2.7790467739105225
Preprocessing time: 0.01583576202392578 Inference time: 0.05896186828613281 Add cuts time: 0.0039632320404052734 Cut analysis time: 0.0006985664367675781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00963 (35), -0.00941 (35), -0.00887 (35), -0.00874 (35), -0.00865 (35), -0.00794 (35), -0.00737 (35), -0.00734 (35), -0.00716 (35), -0.00715 (35), -0.00714 (35), -0.00701 (35), -0.00695 (35), -0.00694 (35), -0.00691 (35), -0.00660 (35), -0.00657 (35), -0.00656 (35), -0.00639 (35), -0.00634 (35), 
Length of domains: 258
Time: pickout 0.0061    decision 0.0234    set_bounds 0.0134    solve 0.1791    add 0.0013    
Accumulated time: pickout 0.1829    decision 1.0047    set_bounds 0.6146    solve 3.9883    add 0.0616    
Current (lb-rhs): -0.009633898735046387
9272 domains visited
Cumulative time: 8.709071397781372

BaB round 24
batch: 258
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 51] [/input-8, 51] [/input-8, 204] [/input-8, 51] [/input-8, 204] [/input-8, 51] [/input-8, 204] [/input-8, 204] [/input-8, 51] [/input-8, 51] 
cut re-enabled after branching node selection
0 lb beta sum: 2.7536797523498535, worst -0.008727788925170898
10 lb beta sum: 2.7536797523498535, worst -0.008691072463989258
Time: prepare 0.0249    bound 0.1508    transfer 0.0009    finalize 0.0027    func 0.1832    
Accumulated time: func 4.1678    prepare 0.5262    bound 3.3668    transfer 0.0547    finalize 0.0974    
all_split False
======================Cut inference begins======================
max lb tensor(0.01291132) min lb tensor(-0.00867188)
Number of Verified Splits: 275 of 516
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 39
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07615351676940918 
BICCOS Cumulative time: 2.8552002906799316
Preprocessing time: 0.014907121658325195 Inference time: 0.05689263343811035 Add cuts time: 0.003639698028564453 Cut analysis time: 0.0007140636444091797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00867 (36), -0.00791 (36), -0.00743 (36), -0.00735 (36), -0.00680 (36), -0.00674 (36), -0.00668 (36), -0.00658 (36), -0.00638 (36), -0.00622 (36), -0.00619 (36), -0.00619 (36), -0.00598 (36), -0.00593 (36), -0.00561 (36), -0.00559 (36), -0.00541 (36), -0.00536 (36), -0.00521 (36), -0.00501 (36), 
Length of domains: 241
Time: pickout 0.0062    decision 0.0259    set_bounds 0.0127    solve 0.1833    add 0.0021    
Accumulated time: pickout 0.1890    decision 1.0306    set_bounds 0.6273    solve 4.1716    add 0.0637    
Current (lb-rhs): -0.008671879768371582
9513 domains visited
Cumulative time: 9.01781678199768

BaB round 25
batch: 241
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 204] [/input-8, 204] [/input-8, 171] [/input-8, 204] [/input-8, 171] [/input-8, 204] [/input-8, 171] [/input-8, 171] [/input-8, 204] [/input-8, 204] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.019710063934326172
10 lb beta sum: 1.933779001235962, worst -0.008662939071655273
Time: prepare 0.0123    bound 0.1503    transfer 0.0008    finalize 0.0030    func 0.1695    
Accumulated time: func 4.3373    prepare 0.5387    bound 3.5171    transfer 0.0556    finalize 0.1004    
all_split False
======================Cut inference begins======================
max lb tensor(0.25867045) min lb tensor(-0.00865108)
Number of Verified Splits: 312 of 482
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 41
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.08336758613586426 
BICCOS Cumulative time: 2.938567876815796
Preprocessing time: 0.013861894607543945 Inference time: 0.06459569931030273 Add cuts time: 0.004176616668701172 Cut analysis time: 0.0007333755493164062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00865 (37), -0.00804 (37), -0.00790 (37), -0.00724 (37), -0.00648 (37), -0.00636 (37), -0.00618 (37), -0.00617 (37), -0.00616 (37), -0.00584 (37), -0.00575 (37), -0.00572 (37), -0.00559 (37), -0.00558 (37), -0.00556 (37), -0.00556 (37), -0.00550 (37), -0.00541 (37), -0.00533 (37), -0.00502 (37), 
Length of domains: 170
Time: pickout 0.0068    decision 0.0236    set_bounds 0.0118    solve 0.1696    add 0.0011    
Accumulated time: pickout 0.1958    decision 1.0542    set_bounds 0.6391    solve 4.3412    add 0.0647    
Current (lb-rhs): -0.00865107774734497
9683 domains visited
Cumulative time: 9.315570831298828

BaB round 26
batch: 170
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input-8, 171] [/input, 987] [/input-8, 171] [/input, 987] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017192602157592773
10 lb beta sum: 2.1268606185913086, worst -0.0061942338943481445
Time: prepare 0.0088    bound 0.1427    transfer 0.0007    finalize 0.0018    func 0.1562    
Accumulated time: func 4.4935    prepare 0.5477    bound 3.6598    transfer 0.0563    finalize 0.1022    
all_split False
======================Cut inference begins======================
max lb tensor(0.00615001) min lb tensor(-0.00617707)
Number of Verified Splits: 260 of 340
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 41
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.07000732421875 
BICCOS Cumulative time: 3.008575201034546
Preprocessing time: 0.009891271591186523 Inference time: 0.05584073066711426 Add cuts time: 0.0035130977630615234 Cut analysis time: 0.0007622241973876953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00618 (38), -0.00554 (38), -0.00542 (38), -0.00484 (38), -0.00473 (38), -0.00421 (38), -0.00408 (38), -0.00388 (38), -0.00370 (38), -0.00368 (38), -0.00366 (38), -0.00339 (38), -0.00323 (38), -0.00312 (38), -0.00311 (38), -0.00306 (38), -0.00304 (38), -0.00298 (38), -0.00286 (38), -0.00253 (38), 
Length of domains: 80
Time: pickout 0.0044    decision 0.0198    set_bounds 0.0083    solve 0.1563    add 0.0010    
Accumulated time: pickout 0.2003    decision 1.0741    set_bounds 0.6474    solve 4.4975    add 0.0657    
Current (lb-rhs): -0.006177067756652832
9763 domains visited
Cumulative time: 9.576517105102539

BaB round 27
batch: 80
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 177] [/input, 177] [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input, 987] [/input, 987] 
split level 1: [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] [/input-8, 407] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2012622356414795, worst -0.0005970001220703125
10 lb beta sum: 2.2012622356414795, worst -0.0005944967269897461
Time: prepare 0.0156    bound 0.1419    transfer 0.0007    finalize 0.0017    func 0.1620    
Accumulated time: func 4.6555    prepare 0.5635    bound 3.8018    transfer 0.0570    finalize 0.1039    
all_split False
======================Cut inference begins======================
max lb tensor(0.00666571) min lb tensor(-0.00058961)
Number of Verified Splits: 318 of 320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 41
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.08099246025085449 
BICCOS Cumulative time: 3.0895676612854004
Preprocessing time: 0.009260416030883789 Inference time: 0.06829071044921875 Add cuts time: 0.0027246475219726562 Cut analysis time: 0.0007166862487792969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00059 (40), -0.00047 (40), 
Length of domains: 2
Time: pickout 0.0026    decision 0.0153    set_bounds 0.0134    solve 0.1620    add 0.0006    
Accumulated time: pickout 0.2029    decision 1.0893    set_bounds 0.6609    solve 4.6595    add 0.0663    
Current (lb-rhs): -0.0005896091461181641
9765 domains visited
Cumulative time: 9.85270881652832

BaB round 28
batch: 2
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 172] [/input-8, 172] 
split level 1: [/input-8, 253] [/input-8, 253] 
split level 2: [/input-8, 2038] [/input-8, 2038] 
split level 3: [/input-8, 1708] [/input-8, 1708] 
split level 4: [/input, 177] [/input, 177] 
split level 5: [/input-8, 268] [/input-8, 161] 
split level 6: [/input-8, 161] [/input-8, 268] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6612858772277832, worst 0.0076427459716796875

all verified at 0th iter
Time: prepare 0.0124    bound 0.0054    transfer 0.0011    finalize 0.0012    func 0.0218    
Accumulated time: func 4.6773    prepare 0.5763    bound 3.8072    transfer 0.0581    finalize 0.1051    
all_split False
======================Cut inference begins======================
max lb tensor(0.49961221) min lb tensor(0.00764275)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 43.
#cuts 1-3: 41
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0074498653411865234 
BICCOS Cumulative time: 3.097017526626587
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0188    solve 0.0218    add 0.0003    
Accumulated time: pickout 0.2040    decision 1.1089    set_bounds 0.6797    solve 4.6814    add 0.0667    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
9765 domains visited
Cumulative time: 9.922623634338379


Properties batch 7, size 1
Remaining timeout: 183.08179783821106
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 183.0817277431488
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 16.9183 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.54733276, -21.78987122, -22.60601997, -21.30351830, -24.20145226,
         -22.29459190, -22.23107147, -25.10035706, -22.73666000, -22.06024361]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [482]; unstable size 482; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 482] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 482] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 215] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.04004765, -1.07115650,  0.35848093,  1.95242715,  0.74911094,
          0.26205659,  2.80084348, -0.02647483, -0.53875589]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.54733276, -21.78987122, -22.60601997, -21.30351830, -24.20145226,
         -22.29459190, -22.23107147, -25.10035706, -22.73666000, -22.06024361]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.02569389, -21.82901001, -23.36814117, -22.22129059, -25.05405426,
          -23.25062561, -22.97693062, -25.95488548, -23.13699722, -22.30997849],
         [-23.02569389, -21.82901001, -23.36814117, -22.22129059, -25.05405426,
          -23.25062561, -22.97693062, -25.95488548, -23.13699722, -22.30997849]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.80440331, -0.39228058,  0.91570663,  0.08868790]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0619 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
         -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1050]; unstable size 1050; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 330, 1, 1050] with unstable size 329 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 1050] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1050] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [329]; unstable size 329; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 329] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 329] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.91365647,  2.97547531, -0.38596082, -0.14092690, -0.68310428,
          0.74673355,  1.63518691,  1.76536191,  3.08691502]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
         -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.24it/s]100%|██████████| 1/1 [00:00<00:00,  9.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.73095417, -15.17011356, -10.95801258, -11.12242126, -10.36753273,
          -12.15822506, -10.36675453, -13.20997334, -13.88632774, -15.23771191],
         [-13.73095417, -15.17011356, -10.95801258, -11.12242126, -10.36753273,
          -12.15822506, -10.36675453, -13.20997334, -13.88632774, -15.23771191]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59125805, 0.75566673, 0.00077820]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1110 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.67263412475586
alpha/beta optimization time: 1.1860690116882324
initial alpha-crown bounds: tensor([[ 2.17554355,  3.15855980, -0.19436026,  0.02832651, -0.55010855,
          0.92495197,  1.83316314,  2.01714492,  3.27941370]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5501085519790649
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6528604030609
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65282273292542
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65279960632324
Verifying property 2 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19436026]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
        -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19436026]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1050
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1392
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.655952453613281e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19435787200927734
10 lb beta sum: 0.0, worst -0.1943671703338623
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    func 0.0525    
Accumulated time: func 0.0525    prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 31] 
split level 4: [/input-12, 32] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 61] 
split level 8: [/input-12, 72] 
split level 9: [/input-12, 14] 
split level 10: [/input-12, 6] 
split level 11: [/input-8, 1955] 
split level 12: [/input-12, 12] 
split level 13: [/input-12, 68] 
split level 14: [/input-12, 92] 
split level 15: [/input-8, 738] 
split level 16: [/input-8, 347] 
split level 17: [/input-12, 79] 
split level 18: [/input-8, 804] 
split level 19: [/input-8, 1635] 
split level 20: [/input-8, 1701] 
split level 21: [/input-8, 466] 
split level 22: [/input-8, 788] 
split level 23: [/input-8, 490] 
split level 24: [/input-12, 97] 
split level 25: [/input-8, 577] 
split level 26: [/input-8, 154] 
split level 27: [/input-8, 475] 
split level 28: [/input-8, 1372] 
split level 29: [/input-8, 1257] 
split level 30: [/input-8, 162] 
split level 31: [/input-12, 71] 
split level 32: [/input-8, 755] 
split level 33: [/input-8, 357] 
split level 34: [/input-8, 1379] 
split level 35: [/input-8, 434] 
split level 36: [/input-8, 158] 
split level 37: [/input-12, 20] 
split level 38: [/input-8, 148] 
split level 39: [/input-8, 915] 
split level 40: [/input-8, 165] 
split level 41: [/input-8, 91] 
split level 42: [/input-8, 1693] 
split level 43: [/input-8, 1643] 
split level 44: [/input-8, 436] 
split level 45: [/input-8, 779] 
split level 46: [/input-8, 829] 
split level 47: [/input-8, 294] 
split level 48: [/input-8, 460] 
split level 49: [/input-8, 427] 
split level 50: [/input-8, 1388] 
split level 51: [/input-8, 37] 
split level 52: [/input-8, 1254] 
split level 53: [/input-8, 1748] 
split level 54: [/input-8, 1261] 
split level 55: [/input-8, 163] 
split level 56: [/input-8, 156] 
split level 57: [/input-8, 1509] 
split level 58: [/input-8, 1574] 
split level 59: [/input-8, 1556] 
split level 60: [/input-8, 785] 
split level 61: [/input-8, 149] 
split level 62: [/input-8, 1363] 
split level 63: [/input-8, 30] 
split level 64: [/input-8, 26] 
split level 65: [/input-8, 492] 
split level 66: [/input-8, 159] 
split level 67: [/input-8, 777] 
split level 68: [/input-8, 958] 
split level 69: [/input-8, 1659] 
split level 70: [/input-8, 1634] 
split level 71: [/input-8, 1618] 
split level 72: [/input-8, 411] 
split level 73: [/input-8, 1972] 
split level 74: [/input-8, 1292] 
split level 75: [/input-8, 1214] 
split level 76: [/input-8, 507] 
split level 77: [/input-8, 454] 
split level 78: [/input-8, 1029] 
split level 79: [/input-8, 1028] 
split level 80: [/input-8, 412] 
split level 81: [/input-8, 1340] 
split level 82: [/input-8, 151] 
split level 83: [/input-8, 1229] 
split level 84: [/input-8, 1652] 
split level 85: [/input-8, 1626] 
split level 86: [/input-8, 1030] 
split level 87: [/input-8, 1301] 
split level 88: [/input-8, 1241] 
split level 89: [/input-8, 1700] 
split level 90: [/input-8, 225] 
split level 91: [/input-8, 92] 
split level 92: [/input-8, 1945] 
split level 93: [/input-8, 782] 
split level 94: [/input-8, 223] 
split level 95: [/input-8, 166] 
split level 96: [/input-8, 1757] 
split level 97: [/input-8, 183] 
split level 98: [/input-8, 1238] 
split level 99: [/input-8, 231] 
split level 100: [/input-8, 1181] 
split level 101: [/input, 2789] 
split level 102: [/input-8, 1246] 
split level 103: [/input-8, 226] 
split level 104: [/input-8, 449] 
split level 105: [/input-8, 1265] 
split level 106: [/input-8, 582] 
split level 107: [/input-8, 1294] 
split level 108: [/input-8, 90] 
split level 109: [/input, 3035] 
split level 110: [/input-8, 217] 
split level 111: [/input-8, 233] 
split level 112: [/input-8, 1329] 
split level 113: [/input-8, 1364] 
split level 114: [/input-8, 178] 
split level 115: [/input-8, 481] 
split level 116: [/input-8, 241] 
split level 117: [/input, 70] 
split level 118: [/input-8, 1228] 
split level 119: [/input-8, 450] 
split level 120: [/input-8, 944] 
split level 121: [/input-8, 1341] 
split level 122: [/input-8, 773] 
split level 123: [/input-8, 170] 
split level 124: [/input-8, 1707] 
split level 125: [/input, 227] 
split level 126: [/input-8, 141] 
split level 127: [/input-8, 624] 
split level 128: [/input-8, 452] 
split level 129: [/input-8, 312] 
split level 130: [/input-8, 182] 
split level 131: [/input, 3433] 
split level 132: [/input-8, 147] 
split level 133: [/input-8, 146] 
split level 134: [/input-8, 1337] 
split level 135: [/input-8, 1598] 
split level 136: [/input-8, 143] 
split level 137: [/input-8, 364] 
split level 138: [/input, 873] 
split level 139: [/input, 2787] 
split level 140: [/input-8, 242] 
split level 141: [/input, 2887] 
split level 142: [/input-8, 941] 
split level 143: [/input-8, 169] 
split level 144: [/input-8, 215] 
split level 145: [/input-8, 205] 
split level 146: [/input, 1516] 
split level 147: [/input-8, 209] 
split level 148: [/input-8, 207] 
split level 149: [/input-8, 239] 
split level 150: [/input-8, 253] 
split level 151: [/input-8, 1297] 
split level 152: [/input, 3288] 
split level 153: [/input-8, 234] 
split level 154: [/input, 1205] 
split level 155: [/input, 1891] 
split level 156: [/input, 71] 
split level 157: [/input, 1207] 
split level 158: [/input, 72] 
split level 159: [/input-8, 1227] 
split level 160: [/input, 942] 
split level 161: [/input-8, 230] 
split level 162: [/input-8, 255] 
split level 163: [/input, 2790] 
split level 164: [/input, 137] 
split level 165: [/input-8, 1786] 
split level 166: [/input, 226] 
split level 167: [/input, 3717] 
split level 168: [/input, 1999] 
split level 169: [/input-8, 1302] 
split level 170: [/input-8, 1741] 
split level 171: [/input, 1490] 
split level 172: [/input, 1843] 
split level 173: [/input-8, 1799] 
split level 174: [/input-8, 1279] 
split level 175: [/input, 2649] 
split level 176: [/input-8, 206] 
split level 177: [/input, 3497] 
split level 178: [/input, 2724] 
split level 179: [/input-8, 1233] 
split level 180: [/input, 906] 
split level 181: [/input, 2786] 
split level 182: [/input, 833] 
split level 183: [/input-8, 103] 
split level 184: [/input, 1320] 
split level 185: [/input, 2792] 
split level 186: [/input, 1180] 
split level 187: [/input, 1829] 
split level 188: [/input, 2870] 
split level 189: [/input, 1158] 
split level 190: [/input-8, 179] 
split level 191: [/input, 1918] 
split level 192: [/input, 1937] 
split level 193: [/input, 2632] 
split level 194: [/input, 1886] 
split level 195: [/input, 533] 
split level 196: [/input, 1812] 
split level 197: [/input, 329] 
split level 198: [/input, 2014] 
split level 199: [/input, 1012] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19431686401367188
10 lb beta sum: 0.0, worst -0.19430923461914062
Time: prepare 0.0115    bound 0.0955    transfer 0.0013    finalize 0.0028    func 0.1136    
Accumulated time: func 0.1661    prepare 0.0219    bound 0.1475    transfer 0.0014    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.25902283) min lb tensor(-0.19429636)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.010878801345825195 
BICCOS Cumulative time: 0.010878801345825195
Preprocessing time: 0.009732246398925781 Inference time: 0.0003726482391357422 Add cuts time: 0.00013685226440429688 Cut analysis time: 0.000637054443359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18178 (1), -0.18149 (1), -0.18013 (1), -0.17981 (1), -0.17886 (1), -0.17876 (1), -0.17840 (1), -0.17834 (1), -0.17800 (1), -0.17737 (1), -0.17729 (1), -0.17621 (1), -0.17578 (1), -0.17548 (1), -0.17532 (1), -0.17458 (1), -0.17446 (1), -0.17431 (1), -0.17361 (1), -0.17353 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5122    set_bounds 0.0085    solve 0.1137    add 0.0706    
Accumulated time: pickout 0.0003    decision 0.5122    set_bounds 0.0085    solve 0.1137    add 0.0706    
Current (lb-rhs): -0.18178391456604004
50 domains visited
Cumulative time: 0.7734191417694092

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 31] [/input-12, 8] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 8] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 24] [/input-12, 24] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 3: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 59] [/input-12, 59] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17229795455932617

all verified at 8th iter
Time: prepare 0.0070    bound 0.0514    transfer 0.0025    finalize 0.0024    func 0.0659    
Accumulated time: func 0.2320    prepare 0.0291    bound 0.1990    transfer 0.0039    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.15609550) min lb tensor(0.00398862)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03495979309082031 
BICCOS Cumulative time: 0.04583859443664551
Preprocessing time: 0.011398077011108398 Inference time: 0.015326261520385742 Add cuts time: 0.00805974006652832 Cut analysis time: 0.00017571449279785156
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0127    solve 0.0659    add 0.0149    
Accumulated time: pickout 0.0013    decision 0.5318    set_bounds 0.0212    solve 0.1796    add 0.0855    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 31] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 12] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.0711812973022461

all verified at 0th iter
Time: prepare 0.0036    bound 0.0040    transfer 0.0006    finalize 0.0015    func 0.0113    
Accumulated time: func 0.2433    prepare 0.0332    bound 0.2029    transfer 0.0045    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(0.92252147) min lb tensor(0.07118130)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006209850311279297 
BICCOS Cumulative time: 0.052048444747924805
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0163    solve 0.0114    add 0.0002    
Accumulated time: pickout 0.0017    decision 0.5537    set_bounds 0.0375    solve 0.1910    add 0.0857    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 0.9822971820831299


Properties batch 3, size 1
Remaining timeout: 197.52362966537476
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.52331519126892
Verifying property 4 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55010855]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
        -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55010855]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1050
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1392
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010585784912109375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5501059293746948
10 lb beta sum: 0.0, worst -0.5501236915588379
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0545    transfer 0.0001    finalize 0.0001    func 0.0550    
Accumulated time: func 0.0550    prepare 0.0002    bound 0.0545    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 14] 
split level 6: [/input-12, 32] 
split level 7: [/input-12, 4] 
split level 8: [/input-12, 31] 
split level 9: [/input-12, 68] 
split level 10: [/input-12, 79] 
split level 11: [/input-8, 1380] 
split level 12: [/input-12, 92] 
split level 13: [/input-8, 141] 
split level 14: [/input-8, 163] 
split level 15: [/input-8, 1261] 
split level 16: [/input-8, 165] 
split level 17: [/input-8, 1257] 
split level 18: [/input-12, 55] 
split level 19: [/input-8, 1388] 
split level 20: [/input-8, 738] 
split level 21: [/input-8, 1262] 
split level 22: [/input-8, 1241] 
split level 23: [/input-8, 1574] 
split level 24: [/input-8, 1389] 
split level 25: [/input-8, 30] 
split level 26: [/input-8, 37] 
split level 27: [/input-12, 71] 
split level 28: [/input-8, 1246] 
split level 29: [/input-8, 1254] 
split level 30: [/input-8, 148] 
split level 31: [/input-8, 158] 
split level 32: [/input-8, 156] 
split level 33: [/input-8, 1748] 
split level 34: [/input-8, 173] 
split level 35: [/input-8, 1757] 
split level 36: [/input-8, 1181] 
split level 37: [/input-8, 1643] 
split level 38: [/input-8, 1379] 
split level 39: [/input-12, 8] 
split level 40: [/input-8, 1372] 
split level 41: [/input-8, 91] 
split level 42: [/input, 3207] 
split level 43: [/input-8, 1214] 
split level 44: [/input-8, 147] 
split level 45: [/input-8, 149] 
split level 46: [/input-8, 252] 
split level 47: [/input-8, 162] 
split level 48: [/input-8, 294] 
split level 49: [/input-8, 182] 
split level 50: [/input-8, 788] 
split level 51: [/input-8, 154] 
split level 52: [/input-8, 92] 
split level 53: [/input-8, 166] 
split level 54: [/input-8, 755] 
split level 55: [/input-8, 941] 
split level 56: [/input-8, 779] 
split level 57: [/input-8, 1950] 
split level 58: [/input-8, 1738] 
split level 59: [/input-8, 139] 
split level 60: [/input-8, 2017] 
split level 61: [/input-8, 312] 
split level 62: [/input-8, 1265] 
split level 63: [/input-8, 1635] 
split level 64: [/input-8, 944] 
split level 65: [/input-8, 1238] 
split level 66: [/input, 3035] 
split level 67: [/input-8, 1741] 
split level 68: [/input-8, 225] 
split level 69: [/input-8, 492] 
split level 70: [/input-8, 1666] 
split level 71: [/input-8, 1266] 
split level 72: [/input-8, 1390] 
split level 73: [/input-8, 2031] 
split level 74: [/input-8, 146] 
split level 75: [/input-8, 1652] 
split level 76: [/input-8, 223] 
split level 77: [/input-8, 151] 
split level 78: [/input-8, 26] 
split level 79: [/input-8, 218] 
split level 80: [/input-8, 217] 
split level 81: [/input-8, 253] 
split level 82: [/input-8, 183] 
split level 83: [/input-8, 1739] 
split level 84: [/input-8, 221] 
split level 85: [/input-8, 782] 
split level 86: [/input-8, 159] 
split level 87: [/input-12, 72] 
split level 88: [/input, 2881] 
split level 89: [/input-8, 1173] 
split level 90: [/input-8, 181] 
split level 91: [/input, 3257] 
split level 92: [/input-8, 2029] 
split level 93: [/input-8, 25] 
split level 94: [/input-8, 507] 
split level 95: [/input-8, 179] 
split level 96: [/input-8, 233] 
split level 97: [/input-8, 231] 
split level 98: [/input-8, 773] 
split level 99: [/input-8, 958] 
split level 100: [/input-8, 582] 
split level 101: [/input, 474] 
split level 102: [/input, 873] 
split level 103: [/input-8, 357] 
split level 104: [/input-8, 460] 
split level 105: [/input-8, 1758] 
split level 106: [/input-8, 170] 
split level 107: [/input-8, 1382] 
split level 108: [/input, 3190] 
split level 109: [/input-8, 213] 
split level 110: [/input-8, 1229] 
split level 111: [/input-8, 209] 
split level 112: [/input, 3208] 
split level 113: [/input-8, 1233] 
split level 114: [/input-8, 241] 
split level 115: [/input, 918] 
split level 116: [/input-8, 1029] 
split level 117: [/input, 98] 
split level 118: [/input, 2887] 
split level 119: [/input, 809] 
split level 120: [/input-8, 230] 
split level 121: [/input-8, 454] 
split level 122: [/input-8, 466] 
split level 123: [/input, 3497] 
split level 124: [/input, 3252] 
split level 125: [/input, 934] 
split level 126: [/input-8, 777] 
split level 127: [/input-8, 205] 
split level 128: [/input, 156] 
split level 129: [/input, 2724] 
split level 130: [/input-8, 143] 
split level 131: [/input-8, 1765] 
split level 132: [/input-8, 1786] 
split level 133: [/input-8, 364] 
split level 134: [/input, 838] 
split level 135: [/input, 137] 
split level 136: [/input-8, 239] 
split level 137: [/input, 1426] 
split level 138: [/input-8, 242] 
split level 139: [/input-8, 215] 
split level 140: [/input, 854] 
split level 141: [/input, 888] 
split level 142: [/input, 970] 
split level 143: [/input-8, 624] 
split level 144: [/input-8, 207] 
split level 145: [/input-8, 226] 
split level 146: [/input-8, 255] 
split level 147: [/input-8, 1730] 
split level 148: [/input-8, 1030] 
split level 149: [/input, 1180] 
split level 150: [/input-8, 1028] 
split level 151: [/input-8, 1279] 
split level 152: [/input-8, 138] 
split level 153: [/input, 2040] 
split level 154: [/input, 942] 
split level 155: [/input, 2871] 
split level 156: [/input, 2328] 
split level 157: [/input-8, 1378] 
split level 158: [/input-8, 206] 
split level 159: [/input, 1207] 
split level 160: [/input, 793] 
split level 161: [/input, 1516] 
split level 162: [/input, 2971] 
split level 163: [/input, 3433] 
split level 164: [/input-8, 1598] 
split level 165: [/input, 794] 
split level 166: [/input, 457] 
split level 167: [/input, 2664] 
split level 168: [/input, 60] 
split level 169: [/input, 2870] 
split level 170: [/input, 329] 
split level 171: [/input, 1891] 
split level 172: [/input, 684] 
split level 173: [/input-8, 1799] 
split level 174: [/input, 2859] 
split level 175: [/input, 2876] 
split level 176: [/input, 1129] 
split level 177: [/input, 3143] 
split level 178: [/input, 407] 
split level 179: [/input-8, 1244] 
split level 180: [/input, 833] 
split level 181: [/input, 162] 
split level 182: [/input-8, 103] 
split level 183: [/input, 3127] 
split level 184: [/input, 313] 
split level 185: [/input, 97] 
split level 186: [/input, 2883] 
split level 187: [/input, 2330] 
split level 188: [/input, 50] 
split level 189: [/input, 2700] 
split level 190: [/input, 2039] 
split level 191: [/input, 2596] 
split level 192: [/input, 2055] 
split level 193: [/input, 51] 
split level 194: [/input-8, 1602] 
split level 195: [/input, 172] 
split level 196: [/input, 827] 
split level 197: [/input, 2877] 
split level 198: [/input, 3828] 
split level 199: [/input, 3352] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5500619411468506
10 lb beta sum: 0.0, worst -0.5500515699386597
Time: prepare 0.0115    bound 0.0966    transfer 0.0007    finalize 0.0026    func 0.1139    
Accumulated time: func 0.1688    prepare 0.0216    bound 0.1510    transfer 0.0008    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(-0.16413498) min lb tensor(-0.55004263)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009859085083007812 
BICCOS Cumulative time: 0.009859085083007812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53656 (1), -0.53651 (1), -0.53636 (1), -0.53550 (1), -0.53541 (1), -0.53464 (1), -0.53456 (1), -0.53437 (1), -0.53437 (1), -0.53423 (1), -0.53369 (1), -0.53365 (1), -0.53338 (1), -0.53300 (1), -0.53288 (1), -0.53161 (1), -0.53143 (1), -0.53109 (1), -0.53057 (1), -0.52915 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5187    set_bounds 0.0085    solve 0.1140    add 0.0686    
Accumulated time: pickout 0.0003    decision 0.5187    set_bounds 0.0085    solve 0.1140    add 0.0686    
Current (lb-rhs): -0.5365626811981201
50 domains visited
Cumulative time: 0.7802741527557373

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 46] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 90] 
split level 2: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5109630823135376
10 lb beta sum: 0.0, worst -0.510331392288208
Time: prepare 0.0123    bound 0.0949    transfer 0.0007    finalize 0.0021    func 0.1125    
Accumulated time: func 0.2813    prepare 0.0341    bound 0.2459    transfer 0.0015    finalize 0.0048    
all_split False
======================Cut inference begins======================
max lb tensor(0.05273581) min lb tensor(-0.51019573)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.011910200119018555 
BICCOS Cumulative time: 0.021769285202026367
Preprocessing time: 0.011394500732421875 Inference time: 0.00017690658569335938 Add cuts time: 9.083747863769531e-05 Cut analysis time: 0.000247955322265625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.30638 (2), -0.30531 (2), -0.30375 (2), -0.30329 (2), -0.30316 (2), -0.30290 (2), -0.30001 (2), -0.29928 (2), -0.29756 (2), -0.29474 (2), -0.29338 (2), -0.28582 (2), -0.28230 (2), -0.28138 (2), -0.27803 (2), -0.27726 (2), -0.27576 (2), -0.27373 (2), -0.27273 (2), -0.27098 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0196    set_bounds 0.0132    solve 0.1125    add 0.0749    
Accumulated time: pickout 0.0014    decision 0.5383    set_bounds 0.0218    solve 0.2265    add 0.1435    
Current (lb-rhs): -0.3063783645629883
100 domains visited
Cumulative time: 1.0143396854400635

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 14] [/input-12, 14] 
split level 2: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 31] [/input-12, 31] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 31] [/input-12, 79] [/input-12, 31] [/input-12, 79] [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2981724739074707
10 lb beta sum: 0.17160572111606598, worst -0.29871439933776855
Time: prepare 0.0060    bound 0.1157    transfer 0.0017    finalize 0.0020    func 0.1286    
Accumulated time: func 0.4099    prepare 0.0404    bound 0.3616    transfer 0.0032    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(0.46908909) min lb tensor(-0.29552388)
Number of Verified Splits: 91 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 4
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.018184661865234375 
BICCOS Cumulative time: 0.03995394706726074
Preprocessing time: 0.01134490966796875 Inference time: 0.004071235656738281 Add cuts time: 0.0024328231811523438 Cut analysis time: 0.000335693359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10075 (3), -0.10049 (3), -0.09883 (3), -0.09754 (3), -0.09491 (3), -0.09367 (3), -0.09135 (3), -0.09114 (3), -0.08961 (3), -0.08725 (3), -0.08567 (3), -0.08459 (3), -0.08456 (3), -0.08440 (3), -0.08407 (3), -0.08343 (3), -0.08318 (3), -0.08297 (3), -0.08256 (3), -0.08248 (3), 
Length of domains: 50
Time: pickout 0.0009    decision 0.0195    set_bounds 0.0155    solve 0.1287    add 0.0867    
Accumulated time: pickout 0.0022    decision 0.5579    set_bounds 0.0372    solve 0.3552    add 0.2302    
Current (lb-rhs): -0.10075044631958008
150 domains visited
Cumulative time: 1.2841053009033203

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 59] [/input-12, 59] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 2: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 14] [/input-12, 31] [/input-12, 14] [/input-12, 31] [/input-12, 14] [/input-12, 31] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 31] [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10121011734008789
10 lb beta sum: 0.43342140316963196, worst -0.1016244888305664
Time: prepare 0.0057    bound 0.1147    transfer 0.0017    finalize 0.0017    func 0.1264    
Accumulated time: func 0.5363    prepare 0.0463    bound 0.4763    transfer 0.0049    finalize 0.0085    
all_split False
======================Cut inference begins======================
max lb tensor(0.31074250) min lb tensor(-0.09447122)
Number of Verified Splits: 197 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 5
#cuts 4-6: 13
#cuts >= 20: 0
BICCOS time: 0.026738882064819336 
BICCOS Cumulative time: 0.06669282913208008
Preprocessing time: 0.011168718338012695 Inference time: 0.01033329963684082 Add cuts time: 0.004579782485961914 Cut analysis time: 0.0006570816040039062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02964 (4), -0.02944 (4), -0.02934 (4), -0.02889 (4), -0.02871 (4), -0.02772 (4), -0.02751 (4), -0.02748 (4), -0.02739 (4), -0.02730 (4), -0.02729 (4), -0.02722 (4), -0.02708 (4), -0.02706 (4), -0.02681 (4), -0.02519 (4), -0.02517 (4), -0.02484 (4), -0.02480 (4), -0.02172 (4), 
Length of domains: 50
Time: pickout 0.0008    decision 0.0195    set_bounds 0.0156    solve 0.1265    add 0.2552    
Accumulated time: pickout 0.0031    decision 0.5773    set_bounds 0.0529    solve 0.4817    add 0.4855    
Current (lb-rhs): -0.02963770553469658
200 domains visited
Cumulative time: 1.7287909984588623

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 97] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 97] [/input-12, 97] [/input-12, 61] [/input-12, 97] [/input-12, 90] 
split level 2: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 14] [/input-12, 14] [/input-12, 68] [/input-12, 61] [/input-12, 31] [/input-12, 61] [/input-12, 31] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 68] [/input-12, 68] [/input-12, 79] [/input-12, 31] [/input-8, 1266] [/input-12, 31] [/input-12, 68] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04713606834411621
10 lb beta sum: 0.5827181339263916, worst -0.011514842510223389
Time: prepare 0.0061    bound 0.1166    transfer 0.0008    finalize 0.0021    func 0.1287    
Accumulated time: func 0.6651    prepare 0.0527    bound 0.5929    transfer 0.0057    finalize 0.0106    
all_split False
======================Cut inference begins======================
max lb tensor(0.11834431) min lb tensor(-0.00258094)
Number of Verified Splits: 396 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 6
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.04252314567565918 
BICCOS Cumulative time: 0.10921597480773926
Preprocessing time: 0.011312007904052734 Inference time: 0.021996259689331055 Add cuts time: 0.008513450622558594 Cut analysis time: 0.0007014274597167969
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0200    set_bounds 0.0164    solve 0.1288    add 0.0269    
Accumulated time: pickout 0.0040    decision 0.5973    set_bounds 0.0693    solve 0.6105    add 0.5123    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
200 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 97] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 14] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 68] 
split level 7: [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.305580735206604
10 lb beta sum: 0.6105918884277344, worst -0.2953629493713379
Time: prepare 0.0037    bound 0.1127    transfer 0.0015    finalize 0.0015    func 0.1211    
Accumulated time: func 0.7862    prepare 0.0568    bound 0.7057    transfer 0.0072    finalize 0.0121    
all_split False
======================Cut inference begins======================
max lb tensor(1.10252070) min lb tensor(-0.29441369)
Number of Verified Splits: 188 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.38027656078338623
10 lb beta sum: 1.1322842836380005, worst -0.3465956449508667
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 6
#cuts 4-6: 31
#cuts 7-9: 7
#cuts >= 20: 0
BICCOS time: 0.22076034545898438 
BICCOS Cumulative time: 0.32997632026672363
Preprocessing time: 0.006337642669677734 Inference time: 0.20355701446533203 Add cuts time: 0.009223222732543945 Cut analysis time: 0.001642465591430664
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29441 (8), -0.29072 (8), -0.25837 (8), -0.24992 (8), -0.23308 (8), -0.23125 (8), -0.21744 (8), -0.21558 (8), -0.21293 (8), -0.20824 (8), -0.17836 (8), -0.17619 (8), -0.17125 (8), -0.16846 (8), -0.16243 (8), -0.15356 (8), -0.15352 (8), -0.14317 (8), -0.11533 (8), -0.10815 (8), 
Length of domains: 68
Time: pickout 0.0004    decision 0.0222    set_bounds 0.0170    solve 0.1212    add 0.0012    
Accumulated time: pickout 0.0044    decision 0.6195    set_bounds 0.0863    solve 0.7317    add 0.5135    
Current (lb-rhs): -0.294413685798645
268 domains visited
Cumulative time: 2.3523008823394775

BaB round 2
batch: 68
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28489744663238525
10 lb beta sum: 0.09204206615686417, worst -0.284187912940979
Time: prepare 0.0040    bound 0.1171    transfer 0.0006    finalize 0.0015    func 0.1251    
Accumulated time: func 0.9114    prepare 0.0611    bound 0.8228    transfer 0.0078    finalize 0.0136    
all_split False
======================Cut inference begins======================
max lb tensor(0.62516546) min lb tensor(-0.28399003)
Number of Verified Splits: 198 of 272
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39526939392089844
10 lb beta sum: 0.6597141027450562, worst -0.2298734486103058
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 63.
#cuts 1-3: 6
#cuts 4-6: 38
#cuts 7-9: 19
#cuts >= 20: 0
BICCOS time: 0.24558782577514648 
BICCOS Cumulative time: 0.5755641460418701
Preprocessing time: 0.007931947708129883 Inference time: 0.2227632999420166 Add cuts time: 0.012361764907836914 Cut analysis time: 0.002530813217163086
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.28399 (10), -0.28018 (10), -0.24878 (10), -0.24024 (10), -0.22264 (10), -0.22034 (10), -0.20790 (10), -0.20362 (10), -0.20128 (10), -0.19420 (10), -0.16551 (10), -0.16482 (10), -0.15953 (10), -0.15625 (10), -0.14847 (10), -0.14071 (10), -0.14060 (10), -0.13064 (10), -0.10704 (10), -0.10589 (10), 
Length of domains: 74
Time: pickout 0.0015    decision 0.0171    set_bounds 0.0129    solve 0.1252    add 0.0012    
Accumulated time: pickout 0.0059    decision 0.6366    set_bounds 0.0992    solve 0.8570    add 0.5147    
Current (lb-rhs): -0.2839900255203247
342 domains visited
Cumulative time: 2.757528066635132

BaB round 3
batch: 74
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 1: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-8, 1241] [/input-8, 1261] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25871598720550537
10 lb beta sum: 0.05479254201054573, worst -0.2584613561630249
Time: prepare 0.0048    bound 0.1176    transfer 0.0007    finalize 0.0017    func 0.1267    
Accumulated time: func 1.0381    prepare 0.0660    bound 0.9404    transfer 0.0085    finalize 0.0153    
all_split False
======================Cut inference begins======================
max lb tensor(0.44748843) min lb tensor(-0.25838697)
Number of Verified Splits: 183 of 296
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 13
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03368711471557617 
BICCOS Cumulative time: 0.6092512607574463
Preprocessing time: 0.009351730346679688 Inference time: 0.0191802978515625 Add cuts time: 0.004427909851074219 Cut analysis time: 0.0007271766662597656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25839 (12), -0.25707 (12), -0.25477 (12), -0.25325 (12), -0.22403 (12), -0.21661 (12), -0.21479 (12), -0.20429 (12), -0.19777 (12), -0.19552 (12), -0.19156 (12), -0.18947 (12), -0.18388 (12), -0.17977 (12), -0.17240 (12), -0.16738 (12), -0.16728 (12), -0.16718 (12), -0.16317 (12), -0.16194 (12), 
Length of domains: 113
Time: pickout 0.0016    decision 0.0177    set_bounds 0.0150    solve 0.1268    add 0.0032    
Accumulated time: pickout 0.0075    decision 0.6543    set_bounds 0.1142    solve 0.9838    add 0.5178    
Current (lb-rhs): -0.2583869695663452
455 domains visited
Cumulative time: 2.9566597938537598

BaB round 4
batch: 113
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1261] [/input-8, 1241] [/input-8, 1254] [/input-8, 1574] [/input-8, 1261] [/input-12, 92] [/input-12, 92] [/input-8, 1246] [/input-8, 1246] [/input-8, 1261] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2524111270904541
10 lb beta sum: 0.13745787739753723, worst -0.25227200984954834
Time: prepare 0.0046    bound 0.1195    transfer 0.0005    finalize 0.0013    func 0.1275    
Accumulated time: func 1.1655    prepare 0.0708    bound 1.0599    transfer 0.0091    finalize 0.0166    
all_split False
======================Cut inference begins======================
max lb tensor(0.51600683) min lb tensor(-0.25222123)
Number of Verified Splits: 124 of 226
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 15
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.021277666091918945 
BICCOS Cumulative time: 0.6305289268493652
Preprocessing time: 0.006822347640991211 Inference time: 0.011992931365966797 Add cuts time: 0.0019183158874511719 Cut analysis time: 0.0005440711975097656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25222 (13), -0.25058 (13), -0.24902 (13), -0.24714 (13), -0.24067 (13), -0.23914 (13), -0.23765 (13), -0.23603 (13), -0.21772 (13), -0.21108 (13), -0.20902 (13), -0.20756 (13), -0.20421 (13), -0.19814 (13), -0.19600 (13), -0.19167 (13), -0.18995 (13), -0.18878 (13), -0.18442 (13), -0.18380 (13), 
Length of domains: 102
Time: pickout 0.0022    decision 0.0179    set_bounds 0.0069    solve 0.1275    add 0.0014    
Accumulated time: pickout 0.0097    decision 0.6721    set_bounds 0.1211    solve 1.1113    add 0.5192    
Current (lb-rhs): -0.2522212266921997
557 domains visited
Cumulative time: 3.13468599319458

BaB round 5
batch: 102
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1254] [/input-8, 1246] [/input-8, 1257] [/input-8, 1261] [/input-8, 156] [/input-8, 1254] [/input-8, 1261] [/input-8, 1257] [/input-8, 1262] [/input-8, 1254] 
split level 1: [/input-8, 37] [/input-8, 37] [/input-8, 37] [/input-8, 26] [/input-8, 37] [/input-8, 37] [/input-8, 1254] [/input-8, 1254] [/input-8, 1257] [/input-8, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24429643154144287
10 lb beta sum: 0.36131352186203003, worst -0.2441272735595703
Time: prepare 0.0082    bound 0.1347    transfer 0.0028    finalize 0.0021    func 0.1511    
Accumulated time: func 1.3167    prepare 0.0792    bound 1.1947    transfer 0.0118    finalize 0.0187    
all_split False
======================Cut inference begins======================
max lb tensor(0.63007987) min lb tensor(-0.24408269)
Number of Verified Splits: 226 of 408
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 14
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.039999961853027344 
BICCOS Cumulative time: 0.6705288887023926
Preprocessing time: 0.011486053466796875 Inference time: 0.02481865882873535 Add cuts time: 0.003265857696533203 Cut analysis time: 0.00042939186096191406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24408 (15), -0.24311 (15), -0.24190 (15), -0.24094 (15), -0.23928 (15), -0.23907 (15), -0.23808 (15), -0.23601 (15), -0.22626 (15), -0.22588 (15), -0.22408 (15), -0.22216 (15), -0.22213 (15), -0.22034 (15), -0.21965 (15), -0.21756 (15), -0.20828 (15), -0.20552 (15), -0.20194 (15), -0.19983 (15), 
Length of domains: 182
Time: pickout 0.0023    decision 0.0196    set_bounds 0.0190    solve 0.1512    add 0.0012    
Accumulated time: pickout 0.0120    decision 0.6917    set_bounds 0.1401    solve 1.2625    add 0.5205    
Current (lb-rhs): -0.24408268928527832
739 domains visited
Cumulative time: 3.369511604309082

BaB round 6
batch: 182
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1574] [/input-8, 141] [/input-8, 1261] [/input-8, 165] [/input-8, 1261] [/input-8, 179] [/input-8, 1261] [/input-8, 1241] [/input-8, 1574] [/input-8, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24387478828430176
10 lb beta sum: 0.5195075273513794, worst -0.2438427209854126
Time: prepare 0.0075    bound 0.1309    transfer 0.0007    finalize 0.0020    func 0.1440    
Accumulated time: func 1.4607    prepare 0.0869    bound 1.3255    transfer 0.0125    finalize 0.0207    
all_split False
======================Cut inference begins======================
max lb tensor(0.83505869) min lb tensor(-0.24382532)
Number of Verified Splits: 266 of 364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 20
#cuts >= 20: 0
BICCOS time: 0.04359126091003418 
BICCOS Cumulative time: 0.7141201496124268
Preprocessing time: 0.010398387908935547 Inference time: 0.029556989669799805 Add cuts time: 0.003200531005859375 Cut analysis time: 0.0004353523254394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24383 (16), -0.24276 (16), -0.24148 (16), -0.24070 (16), -0.23886 (16), -0.23871 (16), -0.23781 (16), -0.23570 (16), -0.21273 (16), -0.21139 (16), -0.20736 (16), -0.20368 (16), -0.20323 (16), -0.20284 (16), -0.19538 (16), -0.19453 (16), -0.19377 (16), -0.19291 (16), -0.19164 (16), -0.19130 (16), 
Length of domains: 98
Time: pickout 0.0029    decision 0.0216    set_bounds 0.0154    solve 0.1441    add 0.0015    
Accumulated time: pickout 0.0149    decision 0.7134    set_bounds 0.1555    solve 1.4067    add 0.5220    
Current (lb-rhs): -0.24382531642913818
837 domains visited
Cumulative time: 3.6002113819122314

BaB round 7
batch: 98
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 912] [/input-8, 156] [/input-8, 1246] [/input-12, 71] [/input-8, 37] [/input-8, 1254] [/input-8, 1254] [/input-8, 37] [/input-8, 912] [/input-8, 1574] 
split level 1: [/input-8, 364] [/input-12, 71] [/input-8, 1254] [/input-8, 788] [/input-8, 156] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 364] [/input-8, 1254] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23054969310760498
10 lb beta sum: 1.6012650728225708, worst -0.21458685398101807
Time: prepare 0.0079    bound 0.1351    transfer 0.0017    finalize 0.0027    func 0.1500    
Accumulated time: func 1.6107    prepare 0.0950    bound 1.4607    transfer 0.0142    finalize 0.0234    
all_split False
======================Cut inference begins======================
max lb tensor(0.83928370) min lb tensor(-0.21441287)
Number of Verified Splits: 320 of 392
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.05331158638000488 
BICCOS Cumulative time: 0.7674317359924316
Preprocessing time: 0.011095762252807617 Inference time: 0.03835344314575195 Add cuts time: 0.003359079360961914 Cut analysis time: 0.0005033016204833984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21441 (18), -0.21303 (18), -0.21280 (18), -0.21247 (18), -0.21151 (18), -0.21097 (18), -0.20775 (18), -0.20706 (18), -0.16074 (18), -0.16005 (18), -0.15769 (18), -0.15595 (18), -0.15467 (18), -0.14669 (18), -0.14374 (18), -0.14188 (18), -0.13639 (18), -0.13621 (18), -0.13590 (18), -0.13440 (18), 
Length of domains: 72
Time: pickout 0.0021    decision 0.0197    set_bounds 0.0222    solve 0.1501    add 0.0010    
Accumulated time: pickout 0.0170    decision 0.7331    set_bounds 0.1776    solve 1.5567    add 0.5229    
Current (lb-rhs): -0.2144128680229187
909 domains visited
Cumulative time: 3.85027813911438

BaB round 8
batch: 72
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 141] [/input-8, 1574] [/input-8, 165] [/input-8, 156] [/input-8, 141] [/input-8, 141] [/input-8, 1262] [/input-8, 141] [/input-8, 156] [/input-8, 141] 
split level 1: [/input-8, 1246] [/input-12, 71] [/input-8, 1246] [/input-8, 944] [/input-8, 1246] [/input-8, 1246] [/input-8, 149] [/input-8, 1246] [/input-8, 944] [/input-8, 1246] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22170090675354004
10 lb beta sum: 2.1776957511901855, worst -0.1985691785812378
Time: prepare 0.0058    bound 0.1326    transfer 0.0006    finalize 0.0017    func 0.1426    
Accumulated time: func 1.7533    prepare 0.1010    bound 1.5933    transfer 0.0148    finalize 0.0251    
all_split False
======================Cut inference begins======================
max lb tensor(0.30594325) min lb tensor(-0.19846380)
Number of Verified Splits: 96 of 288
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.02357792854309082 
BICCOS Cumulative time: 0.7910096645355225
Preprocessing time: 0.008282899856567383 Inference time: 0.012464761734008789 Add cuts time: 0.0023505687713623047 Cut analysis time: 0.00047969818115234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19846 (20), -0.19761 (20), -0.19736 (20), -0.19671 (20), -0.19653 (20), -0.19635 (20), -0.19583 (20), -0.19537 (20), -0.19268 (20), -0.19209 (20), -0.19158 (20), -0.19101 (20), -0.18019 (20), -0.18008 (20), -0.17985 (20), -0.17983 (20), -0.17915 (20), -0.17914 (20), -0.17806 (20), -0.17795 (20), 
Length of domains: 192
Time: pickout 0.0016    decision 0.0184    set_bounds 0.0160    solve 0.1433    add 0.0015    
Accumulated time: pickout 0.0186    decision 0.7515    set_bounds 0.1936    solve 1.7001    add 0.5245    
Current (lb-rhs): -0.1984637975692749
1101 domains visited
Cumulative time: 4.055526256561279

BaB round 9
batch: 192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 141] [/input-8, 1262] [/input-8, 141] [/input-8, 165] [/input-8, 1246] [/input-8, 1262] [/input-8, 141] [/input-8, 1262] [/input-8, 1262] [/input-8, 141] 
cut re-enabled after branching node selection
0 lb beta sum: 2.469691276550293, worst -0.19846415519714355
10 lb beta sum: 2.469691276550293, worst -0.19835937023162842
Time: prepare 0.0166    bound 0.1295    transfer 0.0008    finalize 0.0020    func 0.1514    
Accumulated time: func 1.9047    prepare 0.1178    bound 1.7228    transfer 0.0156    finalize 0.0271    
all_split False
======================Cut inference begins======================
max lb tensor(0.14568186) min lb tensor(-0.19832587)
Number of Verified Splits: 64 of 384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.021654367446899414 
BICCOS Cumulative time: 0.8126640319824219
Preprocessing time: 0.010861635208129883 Inference time: 0.008661746978759766 Add cuts time: 0.0016551017761230469 Cut analysis time: 0.00047588348388671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19833 (21), -0.19749 (21), -0.19728 (21), -0.19657 (21), -0.19646 (21), -0.19625 (21), -0.19574 (21), -0.19529 (21), -0.19259 (21), -0.19192 (21), -0.19152 (21), -0.19096 (21), -0.18864 (21), -0.18855 (21), -0.18788 (21), -0.18766 (21), -0.18765 (21), -0.18696 (21), -0.18657 (21), -0.18611 (21), 
Length of domains: 320
Time: pickout 0.0037    decision 0.0215    set_bounds 0.0169    solve 0.1515    add 0.0027    
Accumulated time: pickout 0.0223    decision 0.7729    set_bounds 0.2105    solve 1.8516    add 0.5272    
Current (lb-rhs): -0.19832587242126465
1421 domains visited
Cumulative time: 4.274289131164551

BaB round 10
batch: 320
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 165] [/input-8, 165] [/input-8, 1262] [/input-8, 165] [/input-8, 165] [/input-12, 71] [/input-8, 1246] [/input-8, 1262] [/input-8, 1246] [/input-8, 1262] 
cut re-enabled after branching node selection
0 lb beta sum: 2.4709718227386475, worst -0.19832682609558105
10 lb beta sum: 2.4709718227386475, worst -0.19831275939941406
Time: prepare 0.0276    bound 0.1351    transfer 0.0019    finalize 0.0028    func 0.1716    
Accumulated time: func 2.0762    prepare 0.1456    bound 1.8578    transfer 0.0175    finalize 0.0299    
all_split False
======================Cut inference begins======================
max lb tensor(0.16570759) min lb tensor(-0.19829249)
Number of Verified Splits: 94 of 640
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.0342104434967041 
BICCOS Cumulative time: 0.846874475479126
Preprocessing time: 0.017938852310180664 Inference time: 0.013241291046142578 Add cuts time: 0.002553701400756836 Cut analysis time: 0.00047659873962402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19829 (22), -0.19745 (22), -0.19726 (22), -0.19654 (22), -0.19644 (22), -0.19621 (22), -0.19571 (22), -0.19525 (22), -0.19509 (22), -0.19400 (22), -0.19367 (22), -0.19256 (22), -0.19253 (22), -0.19187 (22), -0.19148 (22), -0.19094 (22), -0.18842 (22), -0.18829 (22), -0.18761 (22), -0.18744 (22), 
Length of domains: 546
Time: pickout 0.0051    decision 0.0287    set_bounds 0.0287    solve 0.1718    add 0.0046    
Accumulated time: pickout 0.0274    decision 0.8016    set_bounds 0.2392    solve 2.0233    add 0.5318    
Current (lb-rhs): -0.19829249382019043
1967 domains visited
Cumulative time: 4.548478364944458

BaB round 11
batch: 546
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1262] [/input-8, 1246] [/input-8, 1262] [/input-8, 1262] [/input-8, 1181] [/input-8, 779] [/input-8, 1181] [/input-8, 788] [/input-8, 1246] [/input-8, 147] 
cut re-enabled after branching node selection
0 lb beta sum: 2.477504014968872, worst -0.19492673873901367
10 lb beta sum: 2.477504014968872, worst -0.1948559284210205
Time: prepare 0.0476    bound 0.1423    transfer 0.0056    finalize 0.0074    func 0.2101    
Accumulated time: func 2.2863    prepare 0.1935    bound 2.0001    transfer 0.0231    finalize 0.0373    
all_split False
======================Cut inference begins======================
max lb tensor(0.18033719) min lb tensor(-0.19482303)
Number of Verified Splits: 163 of 1092
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.06075859069824219 
BICCOS Cumulative time: 0.9076330661773682
Preprocessing time: 0.03252387046813965 Inference time: 0.025417089462280273 Add cuts time: 0.0023300647735595703 Cut analysis time: 0.0004875659942626953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19482 (23), -0.19393 (23), -0.19390 (23), -0.19313 (23), -0.19299 (23), -0.19285 (23), -0.19203 (23), -0.19190 (23), -0.19085 (23), -0.18965 (23), -0.18944 (23), -0.18918 (23), -0.18888 (23), -0.18876 (23), -0.18848 (23), -0.18829 (23), -0.18800 (23), -0.18797 (23), -0.18780 (23), -0.18759 (23), 
Length of domains: 929
Time: pickout 0.0092    decision 0.0416    set_bounds 0.1998    solve 0.2103    add 0.0060    
Accumulated time: pickout 0.0366    decision 0.8432    set_bounds 0.4390    solve 2.2337    add 0.5377    
Current (lb-rhs): -0.1948230266571045
2896 domains visited
Cumulative time: 5.078161716461182

BaB round 12
batch: 929
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 788] [/input-8, 141] [/input-8, 788] [/input-8, 147] [/input-8, 941] [/input-8, 147] [/input-8, 1181] [/input-8, 1246] [/input-8, 147] [/input-8, 1574] 
cut re-enabled after branching node selection
0 lb beta sum: 2.4591596126556396, worst -0.1948237419128418
10 lb beta sum: 2.4591596126556396, worst -0.1948174238204956
Time: prepare 0.0799    bound 0.1626    transfer 0.0034    finalize 0.0096    func 0.2684    
Accumulated time: func 2.5547    prepare 0.2736    bound 2.1627    transfer 0.0265    finalize 0.0469    
all_split False
======================Cut inference begins======================
max lb tensor(0.23732996) min lb tensor(-0.19479680)
Number of Verified Splits: 141 of 1858
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.08273434638977051 
BICCOS Cumulative time: 0.9903674125671387
Preprocessing time: 0.05601000785827637 Inference time: 0.02375650405883789 Add cuts time: 0.0024564266204833984 Cut analysis time: 0.0005114078521728516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19480 (24), -0.19390 (24), -0.19387 (24), -0.19311 (24), -0.19299 (24), -0.19281 (24), -0.19201 (24), -0.19186 (24), -0.18885 (24), -0.18857 (24), -0.18835 (24), -0.18791 (24), -0.18771 (24), -0.18771 (24), -0.18756 (24), -0.18750 (24), -0.18741 (24), -0.18722 (24), -0.18717 (24), -0.18700 (24), 
Length of domains: 1717
Time: pickout 0.0195    decision 0.0620    set_bounds 0.0775    solve 0.2687    add 0.0122    
Accumulated time: pickout 0.0561    decision 0.9052    set_bounds 0.5165    solve 2.5024    add 0.5499    
Current (lb-rhs): -0.19479680061340332
4613 domains visited
Cumulative time: 5.603813409805298

BaB round 13
batch: 1717
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1574] [/input-8, 173] [/input-8, 1574] [/input-8, 779] [/input-8, 149] [/input-8, 779] [/input-8, 788] [/input-8, 779] [/input-8, 1181] [/input-8, 779] 
cut re-enabled after branching node selection
0 lb beta sum: 2.439870834350586, worst -0.1928083896636963
10 lb beta sum: 2.439870834350586, worst -0.1928025484085083
Time: prepare 0.1497    bound 0.2526    transfer 0.0103    finalize 0.1563    func 0.5917    
Accumulated time: func 3.1464    prepare 0.4236    bound 2.4153    transfer 0.0368    finalize 0.2032    
all_split False
======================Cut inference begins======================
max lb tensor(0.24695015) min lb tensor(-0.19278526)
Number of Verified Splits: 240 of 3434
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.1570272445678711 
BICCOS Cumulative time: 1.1473946571350098
Preprocessing time: 0.1074528694152832 Inference time: 0.043643951416015625 Add cuts time: 0.005231618881225586 Cut analysis time: 0.0006988048553466797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19279 (25), -0.19205 (25), -0.19183 (25), -0.19149 (25), -0.19112 (25), -0.19067 (25), -0.19026 (25), -0.18926 (25), -0.18780 (25), -0.18758 (25), -0.18687 (25), -0.18683 (25), -0.18663 (25), -0.18642 (25), -0.18636 (25), -0.18633 (25), -0.18615 (25), -0.18608 (25), -0.18590 (25), -0.18581 (25), 
Length of domains: 3194
Time: pickout 0.0279    decision 0.1043    set_bounds 0.1448    solve 0.5923    add 0.0107    
Accumulated time: pickout 0.0840    decision 1.0096    set_bounds 0.6613    solve 3.0947    add 0.5606    
Current (lb-rhs): -0.19278526306152344
7807 domains visited
Cumulative time: 6.647971868515015

BaB round 14
batch: 3194
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 149] [/input-8, 1748] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-8, 1238] [/input-12, 55] [/input-8, 1748] [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 2.425325393676758, worst -0.1920483112335205
10 lb beta sum: 2.425341844558716, worst -0.192047119140625
Time: prepare 0.4577    bound 0.4104    transfer 0.0239    finalize 0.0326    func 0.9668    
Accumulated time: func 4.1132    prepare 0.8816    bound 2.8257    transfer 0.0607    finalize 0.2358    
all_split False
======================Cut inference begins======================
max lb tensor(0.24276876) min lb tensor(-0.19203210)
Number of Verified Splits: 776 of 6388
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.36575937271118164 
BICCOS Cumulative time: 1.5131540298461914
Preprocessing time: 0.19559955596923828 Inference time: 0.153153657913208 Add cuts time: 0.016420364379882812 Cut analysis time: 0.0005857944488525391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19203 (26), -0.19148 (26), -0.19111 (26), -0.19067 (26), -0.19038 (26), -0.19023 (26), -0.18942 (26), -0.18924 (26), -0.18775 (26), -0.18675 (26), -0.18663 (26), -0.18603 (26), -0.18596 (26), -0.18581 (26), -0.18581 (26), -0.18573 (26), -0.18565 (26), -0.18565 (26), -0.18546 (26), -0.18528 (26), 
Length of domains: 5612
Time: pickout 0.0493    decision 0.1825    set_bounds 0.2742    solve 0.9684    add 0.0201    
Accumulated time: pickout 0.1332    decision 1.1921    set_bounds 0.9355    solve 4.0631    add 0.5807    
Current (lb-rhs): -0.1920320987701416
13419 domains visited
Cumulative time: 8.524480819702148

BaB round 15
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 141] [/input-12, 55] [/input-8, 141] [/input-8, 1262] [/input-8, 1241] [/input-8, 141] [/input-8, 1262] [/input-12, 55] [/input-8, 141] [/input-8, 141] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3631575107574463, worst -0.1920325756072998
10 lb beta sum: 2.3631834983825684, worst -0.19203507900238037
Time: prepare 0.3744    bound 0.5095    transfer 0.0382    finalize 0.0485    func 1.0241    
Accumulated time: func 5.1373    prepare 1.2562    bound 3.3352    transfer 0.0990    finalize 0.2843    
all_split False
======================Cut inference begins======================
max lb tensor(0.24414587) min lb tensor(-0.19202292)
Number of Verified Splits: 1386 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.7685031890869141 
BICCOS Cumulative time: 2.2816572189331055
Preprocessing time: 0.25705480575561523 Inference time: 0.46980881690979004 Add cuts time: 0.04104471206665039 Cut analysis time: 0.0005948543548583984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19202 (27), -0.19148 (27), -0.19110 (27), -0.19099 (27), -0.19067 (27), -0.19037 (27), -0.19013 (27), -0.18941 (27), -0.18924 (27), -0.18923 (27), -0.18843 (27), -0.18827 (27), -0.18654 (27), -0.18597 (27), -0.18590 (27), -0.18588 (27), -0.18581 (27), -0.18561 (27), -0.18556 (27), -0.18551 (27), 
Length of domains: 8322
Time: pickout 0.0662    decision 0.2254    set_bounds 0.5189    solve 1.0261    add 0.0285    
Accumulated time: pickout 0.1994    decision 1.4175    set_bounds 1.4545    solve 5.0893    add 0.6092    
Current (lb-rhs): -0.1920229196548462
20225 domains visited
current_vram/total_varm: 10.4GB/99.9GB, batch_size increase to 8192
Cumulative time: 11.184475183486938

BaB round 16
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 147] [/input-8, 1738] [/input-8, 147] [/input-8, 149] [/input-12, 55] [/input-8, 147] [/input-12, 55] [/input-8, 779] [/input-8, 147] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3696136474609375, worst -0.19034552574157715
10 lb beta sum: 2.3697543144226074, worst -0.19034326076507568
Time: prepare 0.7435    bound 0.9432    transfer 0.0756    finalize 0.1080    func 2.2143    
Accumulated time: func 7.3516    prepare 2.0000    bound 4.2784    transfer 0.1746    finalize 0.3923    
all_split False
======================Cut inference begins======================
max lb tensor(0.24533904) min lb tensor(-0.19032574)
Number of Verified Splits: 1832 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.977031946182251 
BICCOS Cumulative time: 3.2586891651153564
Preprocessing time: 0.5136229991912842 Inference time: 0.41141843795776367 Add cuts time: 0.05132794380187988 Cut analysis time: 0.0006625652313232422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19033 (28), -0.18976 (28), -0.18945 (28), -0.18916 (28), -0.18889 (28), -0.18867 (28), -0.18842 (28), -0.18822 (28), -0.18771 (28), -0.18768 (28), -0.18766 (28), -0.18751 (28), -0.18664 (28), -0.18652 (28), -0.18592 (28), -0.18584 (28), -0.18551 (28), -0.18499 (28), -0.18497 (28), -0.18493 (28), 
Length of domains: 14682
Time: pickout 0.1366    decision 0.4454    set_bounds 0.9451    solve 2.2174    add 0.0475    
Accumulated time: pickout 0.3360    decision 1.8629    set_bounds 2.3996    solve 7.3066    add 0.6566    
Current (lb-rhs): -0.19032573699951172
34777 domains visited
current_vram/total_varm: 24.4GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.992109537124634

BaB round 17
batch: 14682
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 141] [/input-8, 146] [/input-8, 173] [/input-8, 1181] [/input-8, 146] [/input-8, 162] [/input-8, 1181] [/input-8, 147] [/input-8, 173] [/input-8, 141] 
cut re-enabled after branching node selection
0 lb beta sum: 2.362114191055298, worst -0.1903238296508789
10 lb beta sum: 2.3623270988464355, worst -0.1903235912322998
Time: prepare 1.3322    bound 1.6364    transfer 0.1440    finalize 0.1941    func 3.5007    
Accumulated time: func 10.8523    prepare 3.3326    bound 5.9148    transfer 0.3186    finalize 0.5864    
all_split False
======================Cut inference begins======================
max lb tensor(0.24370623) min lb tensor(-0.19031727)
Number of Verified Splits: 2595 of 29364
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 1.9450228214263916 
BICCOS Cumulative time: 5.203711986541748
Preprocessing time: 1.2753727436065674 Inference time: 0.6014425754547119 Add cuts time: 0.06752800941467285 Cut analysis time: 0.0006794929504394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19032 (29), -0.18961 (29), -0.18944 (29), -0.18867 (29), -0.18866 (29), -0.18842 (29), -0.18832 (29), -0.18769 (29), -0.18766 (29), -0.18765 (29), -0.18750 (29), -0.18705 (29), -0.18645 (29), -0.18636 (29), -0.18619 (29), -0.18553 (29), -0.18496 (29), -0.18495 (29), -0.18482 (29), -0.18447 (29), 
Length of domains: 26769
Time: pickout 0.2875    decision 1.0603    set_bounds 1.8908    solve 3.5061    add 0.0831    
Accumulated time: pickout 0.6235    decision 2.9232    set_bounds 4.2904    solve 10.8127    add 0.7397    
Current (lb-rhs): -0.1903172731399536
61546 domains visited
Cumulative time: 24.824233531951904

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1241] [/input-8, 1181] [/input-8, 162] [/input-8, 779] [/input-8, 1372] [/input-8, 1757] [/input-8, 146] [/input-8, 146] [/input-8, 944] [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3614096641540527, worst -0.1891568899154663
10 lb beta sum: 2.3615570068359375, worst -0.18915283679962158
Time: prepare 1.4977    bound 1.8155    transfer 0.1493    finalize 0.2180    func 3.8981    
Accumulated time: func 14.7503    prepare 4.8307    bound 7.7303    transfer 0.4680    finalize 0.8044    
all_split False
======================Cut inference begins======================
max lb tensor(0.24546719) min lb tensor(-0.18867230)
Number of Verified Splits: 2315 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 25
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 2.1454293727874756 
BICCOS Cumulative time: 7.349141359329224
Preprocessing time: 1.5066897869110107 Inference time: 0.5730969905853271 Add cuts time: 0.06488943099975586 Cut analysis time: 0.0007531642913818359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18867 (30), -0.18866 (30), -0.18766 (30), -0.18765 (30), -0.18728 (30), -0.18705 (30), -0.18692 (30), -0.18637 (30), -0.18619 (30), -0.18530 (30), -0.18512 (30), -0.18504 (30), -0.18495 (30), -0.18482 (30), -0.18438 (30), -0.18430 (30), -0.18412 (30), -0.18411 (30), -0.18399 (30), -0.18397 (30), 
Length of domains: 40838
Time: pickout 0.2802    decision 1.7760    set_bounds 1.9182    solve 3.9045    add 0.1066    
Accumulated time: pickout 0.9037    decision 4.6993    set_bounds 6.2086    solve 14.7172    add 0.8463    
Current (lb-rhs): -0.18867230415344238
91999 domains visited
current_vram/total_varm: 35.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 35.024982213974

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1181] [/input-8, 146] [/input-8, 944] [/input-8, 147] [/input-8, 149] [/input-8, 162] [/input-8, 1265] [/input-8, 162] [/input-8, 147] [/input-8, 1257] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18932640552520752
10 lb beta sum: 1.3707189559936523, worst -0.18668857216835022
Time: prepare 1.5267    bound 8.7634    transfer 0.3009    finalize 0.4617    func 12.0950    
Accumulated time: func 26.8453    prepare 6.3578    bound 16.4937    transfer 0.7688    finalize 1.2661    
all_split False
======================Cut inference begins======================
max lb tensor(0.32980335) min lb tensor(-0.18667702)
Number of Verified Splits: 36660 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 12.16768503189087 
BICCOS Cumulative time: 19.516826391220093
Preprocessing time: 2.098161220550537 Inference time: 9.342827796936035 Add cuts time: 0.725853443145752 Cut analysis time: 0.0008425712585449219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18692 (30), -0.18668 (31), -0.18623 (31), -0.18524 (31), -0.18523 (31), -0.18512 (30), -0.18480 (31), -0.18459 (31), -0.18399 (30), -0.18391 (31), -0.18375 (31), -0.18310 (30), -0.18299 (31), -0.18285 (31), -0.18259 (31), -0.18254 (30), -0.18252 (31), -0.18231 (31), -0.18193 (31), -0.18184 (31), 
Length of domains: 36946
Time: pickout 0.5597    decision 3.3507    set_bounds 4.0753    solve 12.1057    add 0.0845    
Accumulated time: pickout 1.4635    decision 8.0500    set_bounds 10.2838    solve 26.8229    add 0.9308    
Current (lb-rhs): -0.18692326545715332
120875 domains visited
Cumulative time: 67.84149765968323

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 162] [/input-8, 1652] [/input-8, 147] [/input-8, 1265] [/input-8, 944] [/input-8, 162] [/input-8, 1181] [/input-8, 162] [/input-8, 779] [/input, 858] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0258980989456177, worst -0.18837344646453857
10 lb beta sum: 1.4667515754699707, worst -0.18444964289665222
Time: prepare 2.7095    bound 8.7640    transfer 0.3010    finalize 1.2278    func 13.4433    
Accumulated time: func 40.2886    prepare 9.0677    bound 25.2577    transfer 1.0698    finalize 2.4940    
all_split False
======================Cut inference begins======================
max lb tensor(0.35023320) min lb tensor(-0.18443036)
Number of Verified Splits: 16942 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 31
#cuts >= 20: 0
BICCOS time: 7.441009283065796 
BICCOS Cumulative time: 26.95783567428589
Preprocessing time: 2.174201488494873 Inference time: 4.87177038192749 Add cuts time: 0.3942081928253174 Cut analysis time: 0.0008292198181152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18480 (31), -0.18443 (31), -0.18399 (31), -0.18391 (31), -0.18377 (32), -0.18335 (32), -0.18285 (31), -0.18266 (31), -0.18259 (31), -0.18252 (31), -0.18229 (32), -0.18193 (31), -0.18184 (31), -0.18172 (32), -0.18151 (32), -0.18140 (32), -0.18103 (32), -0.18086 (31), -0.18082 (32), -0.18065 (31), 
Length of domains: 52772
Time: pickout 0.6501    decision 3.9166    set_bounds 4.3640    solve 13.4567    add 0.1530    
Accumulated time: pickout 2.1135    decision 11.9666    set_bounds 14.6478    solve 40.2796    add 1.0838    
Current (lb-rhs): -0.18480105698108673
169469 domains visited
Cumulative time: 98.1133394241333

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1574] [/input-8, 1574] [/input-8, 944] [/input-8, 147] [/input-8, 1241] [/input-8, 162] [/input-8, 347] [/input-8, 1738] [/input-8, 1748] [/input, 346] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18771672248840332
10 lb beta sum: 1.9697630405426025, worst -0.1794489026069641
Time: prepare 1.6064    bound 8.7780    transfer 0.3021    finalize 1.4541    func 12.5728    
Accumulated time: func 52.8614    prepare 10.6745    bound 34.0357    transfer 1.3719    finalize 3.9480    
all_split False
======================Cut inference begins======================
max lb tensor(0.79891980) min lb tensor(-0.17939347)
Number of Verified Splits: 44156 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 14.945674180984497 
BICCOS Cumulative time: 41.903509855270386
Preprocessing time: 2.1976003646850586 Inference time: 11.78693413734436 Add cuts time: 0.9605545997619629 Cut analysis time: 0.0005850791931152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18377 (32), -0.18335 (32), -0.18229 (32), -0.18172 (32), -0.18082 (32), -0.18055 (32), -0.18051 (32), -0.18011 (32), -0.17957 (32), -0.17956 (32), -0.17952 (32), -0.17939 (32), -0.17882 (32), -0.17869 (32), -0.17867 (32), -0.17845 (32), -0.17832 (32), -0.17822 (32), -0.17814 (32), -0.17812 (32), 
Length of domains: 41384
Time: pickout 0.6776    decision 3.7052    set_bounds 4.0253    solve 12.5872    add 0.0994    
Accumulated time: pickout 2.7912    decision 15.6718    set_bounds 18.6731    solve 52.8668    add 1.1831    
Current (lb-rhs): -0.1837701052427292
190849 domains visited
Cumulative time: 134.78938913345337

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 149] [/input-8, 1181] [/input-8, 1738] [/input-8, 1738] [/input-8, 1262] [/input-8, 1574] [/input-8, 162] [/input-8, 1372] [/input-8, 147] [/input-8, 149] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18510055541992188
10 lb beta sum: 0.2990209460258484, worst -0.009863704442977905
Time: prepare 1.6079    bound 7.9891    transfer 0.2979    finalize 0.5160    func 11.7722    
Accumulated time: func 64.6337    prepare 12.2828    bound 42.0248    transfer 1.6698    finalize 4.4640    
all_split False
======================Cut inference begins======================
max lb tensor(0.36562124) min lb tensor(1.13248825e-05)
Number of Verified Splits: 65536 of 65536
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 2.218271017074585 
BICCOS Cumulative time: 44.12178087234497
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17772 (32), -0.17630 (32), -0.17621 (33), -0.17514 (33), -0.17481 (33), -0.17455 (33), -0.17418 (32), -0.17361 (33), -0.17328 (33), -0.17298 (33), -0.17294 (33), -0.17288 (32), -0.17252 (33), -0.17164 (32), -0.17139 (33), -0.17020 (33), -0.16954 (33), -0.16946 (32), -0.16921 (33), -0.16910 (32), 
Length of domains: 8616
Time: pickout 0.6749    decision 4.0706    set_bounds 4.8147    solve 11.7858    add 0.0203    
Accumulated time: pickout 3.4660    decision 19.7424    set_bounds 23.4878    solve 64.6525    add 1.2034    
Current (lb-rhs): -0.1777157187461853
190849 domains visited
Cumulative time: 159.04019856452942

BaB round 23
batch: 8616
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1265] [/input-8, 507] [/input-8, 162] [/input-8, 1372] [/input-8, 1241] [/input-8, 347] [/input-8, 294] [/input-8, 2029] [/input-8, 1738] [/input-8, 2029] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1833096742630005
10 lb beta sum: 0.3029702305793762, worst -0.011393338441848755
Time: prepare 0.4265    bound 0.7792    transfer 0.0847    finalize 0.1186    func 1.9133    
Accumulated time: func 66.5470    prepare 12.7097    bound 42.8039    transfer 1.7545    finalize 4.5827    
all_split False
======================Cut inference begins======================
max lb tensor(0.35591158) min lb tensor(0.00224471)
Number of Verified Splits: 17232 of 17232
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.58821702003479 
BICCOS Cumulative time: 44.70999789237976
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.2007    decision 0.4853    set_bounds 0.8227    solve 1.9175    add 0.0026    
Accumulated time: pickout 3.6668    decision 20.2278    set_bounds 24.3105    solve 66.5700    add 1.2060    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
190849 domains visited
Cumulative time: 163.20539593696594


Properties batch 5, size 1
Remaining timeout: 34.168856143951416
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 34.16872262954712
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 34.16869139671326
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 34.16867017745972
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 165.8314 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.67420197, -25.24380302, -28.67889023, -28.16714287, -31.08404350,
         -29.38106728, -30.15142441, -31.47988510, -26.39269066, -27.12945747]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 131, 1, 576] with unstable size 130 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 576] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [130]; unstable size 130; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 130] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 130] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.58424473, 2.27789783, 1.83070660, 4.66640186, 2.88375139, 3.73132467,
         4.99384785, 0.22025633, 1.28892231]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0493 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.82417488, -22.89990807, -24.55294609, -25.83590508, -23.99347115,
         -26.13236237, -25.80495453, -25.02459717, -21.89008331, -22.53929710]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [969]; unstable size 969; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 342, 1, 969] with unstable size 341 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 969] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 969] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [341]; unstable size 341; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 341] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 341] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.74619865,  0.19975400,  1.29172349, -0.31224155,  1.47659171,
          0.91263294,  0.33260173, -2.13532114, -1.77720261]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.82417488, -22.89990807, -24.55294609, -25.83590508, -23.99347115,
         -26.13236237, -25.80495453, -25.02459717, -21.89008331, -22.53929710]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.82417488, -22.89990807, -24.55294800, -25.83590889, -23.99347305,
          -26.13236427, -25.80495453, -25.02459717, -21.89008522, -22.53930092],
         [-22.82417488, -22.89990807, -24.55294800, -25.83590889, -23.99347305,
          -26.13236427, -25.80495453, -25.02459717, -21.89008522, -22.53930092]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07573318,  1.16929817, -0.93408966, -0.28487396]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0484 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.59115791, -34.97940826, -33.80213165, -37.62691879, -34.83726883,
         -38.96181488, -38.03176880, -36.83436584, -27.23085785, -35.44748306]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 675] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 675] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 186] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.53111196,  6.68231106,  5.40997410,  9.09447956,  6.24459028,
         10.17940712,  9.45173359,  8.14738560,  7.13950682]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0533 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.97131920, -28.80028915, -23.13581467, -25.54052544, -23.92788124,
         -24.59213448, -25.03964615, -26.08118820, -27.66898346, -29.01627922]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 127, 1, 591] with unstable size 126 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 591] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 126] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.02588940,  2.80756712, -2.69469118, -0.18732285, -1.80930603,
         -1.25439477,  0.15932596,  1.76952982,  3.03217888]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.97131920, -28.80028915, -23.13581467, -25.54052544, -23.92788124,
         -24.59213448, -25.03964615, -26.08118820, -27.66898346, -29.01627922]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.97132111, -28.80028915, -23.13581467, -25.54052544, -23.92788315,
          -24.59213638, -25.03964615, -26.08118629, -27.66898155, -29.01628113],
         [-26.97132111, -28.80028915, -23.13581467, -25.54052544, -23.92788315,
          -24.59213638, -25.03964615, -26.08118629, -27.66898155, -29.01628113]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.90383148,  0.50087929, -1.11176300, -0.44750977]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0619 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
         -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1119]; unstable size 1119; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 1119] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 1119] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1119] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 286] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.60318422,  7.55680752,  1.79625511, -0.18556562,  1.88933873,
          1.24666607,  2.70503998,  5.15829563,  6.78245831]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
         -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.06it/s]100%|██████████| 1/1 [00:00<00:00,  9.05it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.81661415, -22.46876526, -13.03005505, -15.94738007, -13.62407589,
          -16.17176628, -15.44046783, -17.37049484, -19.77799225, -21.58205223]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59402084]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1131 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 31.233139038085938
alpha/beta optimization time: 1.1992042064666748
initial alpha-crown bounds: tensor([[ 3.65191150,  7.65019560,  1.84882545, -0.11801752,  1.94617414,
          1.30992150,  2.79970741,  5.27360058,  6.87081957]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.1180175244808197
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65432357788086
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6542854309082
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65426015853882
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.65423917770386
Verifying property 3 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11801752]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
        -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11801752]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1119
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 284
Node /15 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 1431
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010848045349121094
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11801591515541077
10 lb beta sum: 0.0, worst -0.11802157759666443
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    func 0.0532    
Accumulated time: func 0.0532    prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 67] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 10] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 68] 
split level 8: [/input-12, 79] 
split level 9: [/input-12, 55] 
split level 10: [/input-12, 83] 
split level 11: [/input-12, 42] 
split level 12: [/input-8, 2013] 
split level 13: [/input-12, 86] 
split level 14: [/input-8, 1069] 
split level 15: [/input-8, 1381] 
split level 16: [/input-8, 181] 
split level 17: [/input-8, 182] 
split level 18: [/input-8, 156] 
split level 19: [/input-8, 2009] 
split level 20: [/input-8, 1076] 
split level 21: [/input-8, 1389] 
split level 22: [/input-8, 1186] 
split level 23: [/input-8, 1372] 
split level 24: [/input-8, 1244] 
split level 25: [/input-8, 2005] 
split level 26: [/input-8, 1181] 
split level 27: [/input-8, 1390] 
split level 28: [/input-8, 171] 
split level 29: [/input-8, 1366] 
split level 30: [/input-12, 35] 
split level 31: [/input-8, 1373] 
split level 32: [/input, 3258] 
split level 33: [/input-8, 1365] 
split level 34: [/input-8, 2012] 
split level 35: [/input-8, 2010] 
split level 36: [/input-8, 101] 
split level 37: [/input, 3206] 
split level 38: [/input-8, 93] 
split level 39: [/input, 968] 
split level 40: [/input-8, 1356] 
split level 41: [/input-8, 354] 
split level 42: [/input, 3273] 
split level 43: [/input-8, 251] 
split level 44: [/input-8, 1367] 
split level 45: [/input, 920] 
split level 46: [/input, 3241] 
split level 47: [/input-8, 252] 
split level 48: [/input-8, 1358] 
split level 49: [/input, 629] 
split level 50: [/input-8, 907] 
split level 51: [/input, 819] 
split level 52: [/input-8, 1369] 
split level 53: [/input-8, 1378] 
split level 54: [/input-8, 102] 
split level 55: [/input-8, 1359] 
split level 56: [/input, 3188] 
split level 57: [/input, 2762] 
split level 58: [/input-8, 1174] 
split level 59: [/input-8, 2008] 
split level 60: [/input-8, 2031] 
split level 61: [/input-8, 1211] 
split level 62: [/input-8, 817] 
split level 63: [/input-8, 203] 
split level 64: [/input-8, 250] 
split level 65: [/input-8, 1385] 
split level 66: [/input-8, 16] 
split level 67: [/input-8, 1377] 
split level 68: [/input-8, 189] 
split level 69: [/input, 804] 
split level 70: [/input-8, 1361] 
split level 71: [/input, 3226] 
split level 72: [/input-8, 1147] 
split level 73: [/input, 2694] 
split level 74: [/input-8, 147] 
split level 75: [/input, 820] 
split level 76: [/input, 3222] 
split level 77: [/input-8, 188] 
split level 78: [/input, 3221] 
split level 79: [/input-8, 1146] 
split level 80: [/input-8, 1185] 
split level 81: [/input, 2867] 
split level 82: [/input, 3171] 
split level 83: [/input-8, 2003] 
split level 84: [/input-8, 23] 
split level 85: [/input-8, 24] 
split level 86: [/input-8, 774] 
split level 87: [/input, 2835] 
split level 88: [/input, 3532] 
split level 89: [/input-8, 337] 
split level 90: [/input, 836] 
split level 91: [/input, 3209] 
split level 92: [/input-8, 1061] 
split level 93: [/input, 835] 
split level 94: [/input, 2678] 
split level 95: [/input-8, 479] 
split level 96: [/input-8, 190] 
split level 97: [/input, 803] 
split level 98: [/input-8, 17] 
split level 99: [/input-8, 1386] 
split level 100: [/input, 81] 
split level 101: [/input, 3464] 
split level 102: [/input, 936] 
split level 103: [/input, 2883] 
split level 104: [/input, 825] 
split level 105: [/input, 2697] 
split level 106: [/input, 2865] 
split level 107: [/input, 2851] 
split level 108: [/input, 2866] 
split level 109: [/input-8, 1398] 
split level 110: [/input, 3238] 
split level 111: [/input, 940] 
split level 112: [/input-8, 249] 
split level 113: [/input, 2696] 
split level 114: [/input, 3187] 
split level 115: [/input-8, 1399] 
split level 116: [/input-8, 32] 
split level 117: [/input-8, 607] 
split level 118: [/input, 2882] 
split level 119: [/input-8, 809] 
split level 120: [/input-8, 336] 
split level 121: [/input, 3146] 
split level 122: [/input, 2881] 
split level 123: [/input, 2849] 
split level 124: [/input, 2748] 
split level 125: [/input, 3155] 
split level 126: [/input, 2764] 
split level 127: [/input, 3500] 
split level 128: [/input, 3484] 
split level 129: [/input, 909] 
split level 130: [/input-8, 992] 
split level 131: [/input, 49] 
split level 132: [/input, 50] 
split level 133: [/input, 808] 
split level 134: [/input, 78] 
split level 135: [/input, 1401] 
split level 136: [/input, 2852] 
split level 137: [/input, 841] 
split level 138: [/input, 97] 
split level 139: [/input, 2913] 
split level 140: [/input, 115] 
split level 141: [/input, 3303] 
split level 142: [/input, 293] 
split level 143: [/input, 3562] 
split level 144: [/input, 98] 
split level 145: [/input, 110] 
split level 146: [/input, 82] 
split level 147: [/input, 65] 
split level 148: [/input, 3530] 
split level 149: [/input, 142] 
split level 150: [/input, 910] 
split level 151: [/input, 934] 
split level 152: [/input-8, 323] 
split level 153: [/input, 957] 
split level 154: [/input-8, 1199] 
split level 155: [/input-8, 1603] 
split level 156: [/input-8, 1387] 
split level 157: [/input, 62] 
split level 158: [/input, 93] 
split level 159: [/input, 2731] 
split level 160: [/input, 2897] 
split level 161: [/input, 2510] 
split level 162: [/input, 126] 
split level 163: [/input-8, 97] 
split level 164: [/input-8, 255] 
split level 165: [/input, 3028] 
split level 166: [/input, 51] 
split level 167: [/input, 33] 
split level 168: [/input, 113] 
split level 169: [/input, 3006] 
split level 170: [/input, 990] 
split level 171: [/input-8, 85] 
split level 172: [/input, 77] 
split level 173: [/input, 3147] 
split level 174: [/input, 888] 
split level 175: [/input, 2158] 
split level 176: [/input, 2359] 
split level 177: [/input, 99] 
split level 178: [/input, 66] 
split level 179: [/input-8, 1198] 
split level 180: [/input, 2142] 
split level 181: [/input-8, 1355] 
split level 182: [/input, 114] 
split level 183: [/input-8, 771] 
split level 184: [/input, 61] 
split level 185: [/input, 2914] 
split level 186: [/input, 124] 
split level 187: [/input, 2869] 
split level 188: [/input, 2750] 
split level 189: [/input, 3483] 
split level 190: [/input, 2686] 
split level 191: [/input, 274] 
split level 192: [/input, 3469] 
split level 193: [/input, 3113] 
split level 194: [/input, 3517] 
split level 195: [/input, 3132] 
split level 196: [/input, 3114] 
split level 197: [/input, 60] 
split level 198: [/input, 3130] 
split level 199: [/input, 2858] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11798921227455139
10 lb beta sum: 0.0, worst -0.11799570918083191
Time: prepare 0.0115    bound 0.1060    transfer 0.0022    finalize 0.0027    func 0.1252    
Accumulated time: func 0.1783    prepare 0.0218    bound 0.1587    transfer 0.0023    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.26627386) min lb tensor(-0.11798921)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010576009750366211 
BICCOS Cumulative time: 0.010576009750366211
Preprocessing time: 0.009926557540893555 Inference time: 0.0002675056457519531 Add cuts time: 0.00011491775512695312 Cut analysis time: 0.00026702880859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10951 (1), -0.10950 (1), -0.10938 (1), -0.10927 (1), -0.10902 (1), -0.10894 (1), -0.10858 (1), -0.10842 (1), -0.10824 (1), -0.10817 (1), -0.10782 (1), -0.10661 (1), -0.10605 (1), -0.10542 (1), -0.10505 (1), -0.10492 (1), -0.10478 (1), -0.10475 (1), -0.10374 (1), -0.10358 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5201    set_bounds 0.0092    solve 0.1253    add 0.0708    
Accumulated time: pickout 0.0003    decision 0.5201    set_bounds 0.0092    solve 0.1253    add 0.0708    
Current (lb-rhs): -0.10950508713722229
50 domains visited
Cumulative time: 0.7947869300842285

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 4] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-12, 2] 
split level 2: [/input-12, 97] [/input-12, 4] [/input-12, 4] [/input-12, 97] [/input-12, 4] [/input-12, 97] [/input-12, 4] [/input-12, 4] [/input-12, 97] [/input-12, 4] 
split level 3: [/input-12, 10] [/input-12, 10] [/input-12, 97] [/input-12, 10] [/input-12, 97] [/input-12, 10] [/input-12, 97] [/input-12, 97] [/input-12, 10] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0710439383983612

all verified at 9th iter
Time: prepare 0.0074    bound 0.0582    transfer 0.0007    finalize 0.0024    func 0.0713    
Accumulated time: func 0.2497    prepare 0.0295    bound 0.2170    transfer 0.0030    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.15370351) min lb tensor(0.00017375)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03448939323425293 
BICCOS Cumulative time: 0.04506540298461914
Preprocessing time: 0.011541604995727539 Inference time: 0.015516519546508789 Add cuts time: 0.0072481632232666016 Cut analysis time: 0.00018310546875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0196    set_bounds 0.0127    solve 0.0714    add 0.0149    
Accumulated time: pickout 0.0015    decision 0.5397    set_bounds 0.0219    solve 0.1967    add 0.0857    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 97] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 79] 
split level 7: [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.22468352317810059

all verified at 0th iter
Time: prepare 0.0036    bound 0.0040    transfer 0.0020    finalize 0.0013    func 0.0126    
Accumulated time: func 0.2622    prepare 0.0335    bound 0.2210    transfer 0.0050    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.43007419) min lb tensor(0.22468352)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006474971771240234 
BICCOS Cumulative time: 0.051540374755859375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0166    solve 0.0126    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.5617    set_bounds 0.0385    solve 0.2093    add 0.0858    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.010744333267212


Properties batch 4, size 1
Remaining timeout: 197.3825237751007
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.38245129585266
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.38242769241333
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.3824064731598
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.38238739967346
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.6179 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.54049110, -19.17367935, -17.10903168, -14.96515083, -17.66605568,
         -15.88734627, -15.45722198, -17.64301682, -16.20054626, -17.64737320]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 153, 1, 578] with unstable size 152 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 578] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [152]; unstable size 152; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 152] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 152] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.58451474,  2.26354098,  0.51416540, -1.32597995,  0.81974971,
         -0.53718334,  0.88996929, -0.70218873,  0.60620284]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.54049110, -19.17367935, -17.10903168, -14.96515083, -17.66605568,
         -15.88734627, -15.45722198, -17.64301682, -16.20054626, -17.64737320]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.54049110, -19.17367935, -17.10903168, -14.96515179, -17.66605568,
          -15.88734627, -15.45722198, -17.64301872, -16.20054626, -17.64737320],
         [-17.54049110, -19.17367935, -17.10903168, -14.96515179, -17.66605568,
          -15.88734627, -15.45722198, -17.64301872, -16.20054626, -17.64737320]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.49207020,  0.43012428,  0.74332428]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0863 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
         -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [550]; unstable size 550; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 550] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 550] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 550] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 295] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.52899837,  3.35346794, -0.60972607,  1.57596004,  1.06331682,
         -0.42583442,  1.62264919,  1.54576707,  3.27385807]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
         -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.17it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.79688454, -20.48247719, -15.16759300, -17.41525078, -15.03807354,
          -17.04138947, -15.56449890, -17.84644318, -18.37698746, -20.11083412],
         [-16.79688454, -20.48247719, -15.16759300, -17.41525078, -15.03807354,
          -17.04138947, -15.56449890, -17.84644318, -18.37698746, -20.11083412]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.12951946, 0.52642536]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1119 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.63651180267334
alpha/beta optimization time: 1.1958565711975098
initial alpha-crown bounds: tensor([[ 0.60815501,  3.47484684, -0.55310094,  1.62192643,  1.11317539,
         -0.37937427,  1.72037339,  1.66001809,  3.37049150]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5531009435653687
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65209460258484
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65205574035645
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65202975273132
Verifying property 2 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55310094]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
        -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55310094]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 550
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 867
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010514259338378906
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5530989170074463
10 lb beta sum: 0.0, worst -0.5531027317047119
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 69] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 46] 
split level 7: [/input-12, 12] 
split level 8: [/input-12, 49] 
split level 9: [/input-12, 18] 
split level 10: [/input-8, 1726] 
split level 11: [/input-8, 1626] 
split level 12: [/input-12, 7] 
split level 13: [/input-8, 1692] 
split level 14: [/input-8, 1964] 
split level 15: [/input-8, 1693] 
split level 16: [/input-8, 1635] 
split level 17: [/input-12, 20] 
split level 18: [/input-8, 1708] 
split level 19: [/input-8, 420] 
split level 20: [/input-8, 1700] 
split level 21: [/input-8, 1044] 
split level 22: [/input-8, 1630] 
split level 23: [/input-8, 1636] 
split level 24: [/input-8, 1969] 
split level 25: [/input-8, 1622] 
split level 26: [/input-8, 1658] 
split level 27: [/input-8, 468] 
split level 28: [/input-8, 459] 
split level 29: [/input-8, 490] 
split level 30: [/input-8, 1716] 
split level 31: [/input-8, 633] 
split level 32: [/input-8, 1717] 
split level 33: [/input-8, 1650] 
split level 34: [/input-8, 473] 
split level 35: [/input-8, 593] 
split level 36: [/input-8, 1035] 
split level 37: [/input-8, 1403] 
split level 38: [/input-8, 425] 
split level 39: [/input-8, 795] 
split level 40: [/input-8, 466] 
split level 41: [/input-8, 1298] 
split level 42: [/input-8, 1686] 
split level 43: [/input-8, 497] 
split level 44: [/input-8, 458] 
split level 45: [/input-8, 505] 
split level 46: [/input-8, 1703] 
split level 47: [/input-8, 1633] 
split level 48: [/input-8, 1695] 
split level 49: [/input-8, 462] 
split level 50: [/input-8, 1659] 
split level 51: [/input-8, 1268] 
split level 52: [/input-8, 1660] 
split level 53: [/input-8, 1651] 
split level 54: [/input-8, 1972] 
split level 55: [/input-8, 1714] 
split level 56: [/input-8, 1929] 
split level 57: [/input-8, 498] 
split level 58: [/input-8, 433] 
split level 59: [/input-8, 1612] 
split level 60: [/input-8, 92] 
split level 61: [/input-8, 1339] 
split level 62: [/input-8, 1294] 
split level 63: [/input-8, 635] 
split level 64: [/input-8, 506] 
split level 65: [/input-8, 1226] 
split level 66: [/input-8, 939] 
split level 67: [/input, 394] 
split level 68: [/input-8, 1572] 
split level 69: [/input-8, 432] 
split level 70: [/input-8, 438] 
split level 71: [/input-8, 1310] 
split level 72: [/input-8, 1522] 
split level 73: [/input-8, 434] 
split level 74: [/input-8, 1713] 
split level 75: [/input, 2953] 
split level 76: [/input-8, 1252] 
split level 77: [/input-8, 626] 
split level 78: [/input-8, 1789] 
split level 79: [/input-8, 1683] 
split level 80: [/input-8, 1588] 
split level 81: [/input-8, 1306] 
split level 82: [/input, 2938] 
split level 83: [/input, 616] 
split level 84: [/input-8, 900] 
split level 85: [/input-8, 1244] 
split level 86: [/input-8, 1657] 
split level 87: [/input-8, 1314] 
split level 88: [/input-8, 1320] 
split level 89: [/input, 1418] 
split level 90: [/input-8, 439] 
split level 91: [/input-8, 931] 
split level 92: [/input-8, 636] 
split level 93: [/input, 385] 
split level 94: [/input, 2982] 
split level 95: [/input-8, 392] 
split level 96: [/input-8, 413] 
split level 97: [/input, 2931] 
split level 98: [/input-8, 1580] 
split level 99: [/input-8, 1676] 
split level 100: [/input-8, 1978] 
split level 101: [/input-8, 1973] 
split level 102: [/input-8, 76] 
split level 103: [/input-8, 1967] 
split level 104: [/input-8, 1704] 
split level 105: [/input-8, 1790] 
split level 106: [/input-8, 1267] 
split level 107: [/input-8, 329] 
split level 108: [/input, 2906] 
split level 109: [/input-8, 1563] 
split level 110: [/input-8, 918] 
split level 111: [/input-8, 803] 
split level 112: [/input, 1649] 
split level 113: [/input-8, 1649] 
split level 114: [/input-8, 75] 
split level 115: [/input, 1500] 
split level 116: [/input-8, 1531] 
split level 117: [/input, 151] 
split level 118: [/input-8, 1337] 
split level 119: [/input-8, 1331] 
split level 120: [/input-8, 486] 
split level 121: [/input-8, 1604] 
split level 122: [/input-8, 410] 
split level 123: [/input-8, 453] 
split level 124: [/input-8, 629] 
split level 125: [/input-8, 442] 
split level 126: [/input-8, 83] 
split level 127: [/input-8, 416] 
split level 128: [/input-8, 53] 
split level 129: [/input, 2173] 
split level 130: [/input-8, 229] 
split level 131: [/input, 2547] 
split level 132: [/input-8, 445] 
split level 133: [/input-8, 785] 
split level 134: [/input, 4005] 
split level 135: [/input-8, 407] 
split level 136: [/input-8, 74] 
split level 137: [/input-8, 1668] 
split level 138: [/input, 4035] 
split level 139: [/input-8, 73] 
split level 140: [/input, 2186] 
split level 141: [/input, 342] 
split level 142: [/input, 2454] 
split level 143: [/input, 1126] 
split level 144: [/input, 2555] 
split level 145: [/input-8, 15] 
split level 146: [/input, 328] 
split level 147: [/input-8, 319] 
split level 148: [/input-8, 400] 
split level 149: [/input, 2263] 
split level 150: [/input-8, 153] 
split level 151: [/input-8, 1269] 
split level 152: [/input, 169] 
split level 153: [/input, 2538] 
split level 154: [/input, 2961] 
split level 155: [/input-8, 805] 
split level 156: [/input, 2189] 
split level 157: [/input, 2157] 
split level 158: [/input-8, 1775] 
split level 159: [/input-8, 1517] 
split level 160: [/input-8, 1336] 
split level 161: [/input, 2460] 
split level 162: [/input-8, 899] 
split level 163: [/input-8, 311] 
split level 164: [/input-8, 1653] 
split level 165: [/input-8, 1773] 
split level 166: [/input, 3070] 
split level 167: [/input-8, 1289] 
split level 168: [/input-8, 1259] 
split level 169: [/input-8, 78] 
split level 170: [/input, 1512] 
split level 171: [/input, 311] 
split level 172: [/input-8, 1765] 
split level 173: [/input, 344] 
split level 174: [/input-8, 1761] 
split level 175: [/input, 2181] 
split level 176: [/input-8, 1921] 
split level 177: [/input, 2838] 
split level 178: [/input, 3922] 
split level 179: [/input, 3573] 
split level 180: [/input-8, 1776] 
split level 181: [/input, 3557] 
split level 182: [/input, 2165] 
split level 183: [/input, 2519] 
split level 184: [/input-8, 1770] 
split level 185: [/input, 2789] 
split level 186: [/input, 1788] 
split level 187: [/input, 2550] 
split level 188: [/input, 4078] 
split level 189: [/input, 1478] 
split level 190: [/input, 2252] 
split level 191: [/input, 1961] 
split level 192: [/input, 2506] 
split level 193: [/input, 3427] 
split level 194: [/input, 4021] 
split level 195: [/input, 2412] 
split level 196: [/input, 2261] 
split level 197: [/input, 2754] 
split level 198: [/input, 2977] 
split level 199: [/input, 2927] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5530394315719604
10 lb beta sum: 0.0, worst -0.5530365705490112
Time: prepare 0.0114    bound 0.0985    transfer 0.0024    finalize 0.0029    func 0.1178    
Accumulated time: func 0.1709    prepare 0.0214    bound 0.1512    transfer 0.0025    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(-0.02364135) min lb tensor(-0.55303574)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.010010004043579102 
BICCOS Cumulative time: 0.010010004043579102
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.53740 (1), -0.53731 (1), -0.53722 (1), -0.53664 (1), -0.53656 (1), -0.53620 (1), -0.53602 (1), -0.53593 (1), -0.53592 (1), -0.53563 (1), -0.53561 (1), -0.53534 (1), -0.53448 (1), -0.53391 (1), -0.53284 (1), -0.53260 (1), -0.53131 (1), -0.53113 (1), -0.53052 (1), -0.53031 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5129    set_bounds 0.0087    solve 0.1179    add 0.0687    
Accumulated time: pickout 0.0003    decision 0.5129    set_bounds 0.0087    solve 0.1179    add 0.0687    
Current (lb-rhs): -0.5374038219451904
50 domains visited
Cumulative time: 0.7798137664794922

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 53] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 53] [/input-12, 8] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 8] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 8] 
split level 2: [/input-12, 8] [/input-12, 69] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 8] [/input-12, 69] 
split level 3: [/input-12, 69] [/input-12, 46] [/input-12, 69] [/input-12, 69] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 69] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5079296827316284
10 lb beta sum: 0.0, worst -0.5074082612991333
Time: prepare 0.0124    bound 0.0954    transfer 0.0007    finalize 0.0021    func 0.1132    
Accumulated time: func 0.2841    prepare 0.0340    bound 0.2466    transfer 0.0032    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.18786716) min lb tensor(-0.50735486)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.012994050979614258 
BICCOS Cumulative time: 0.02300405502319336
Preprocessing time: 0.011577129364013672 Inference time: 0.0004324913024902344 Add cuts time: 0.0001926422119140625 Cut analysis time: 0.0007917881011962891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26148 (2), -0.26059 (2), -0.25961 (2), -0.25957 (2), -0.25947 (2), -0.25940 (2), -0.25897 (2), -0.25845 (2), -0.25821 (2), -0.25724 (2), -0.25682 (2), -0.25669 (2), -0.25668 (2), -0.25579 (2), -0.25551 (2), -0.25463 (2), -0.25428 (2), -0.25318 (2), -0.24828 (2), -0.24447 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0207    set_bounds 0.0131    solve 0.1133    add 0.0775    
Accumulated time: pickout 0.0014    decision 0.5336    set_bounds 0.0218    solve 0.2312    add 0.1462    
Current (lb-rhs): -0.2614772319793701
100 domains visited
Cumulative time: 1.0187063217163086

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 8] [/input-12, 8] [/input-12, 24] 
split level 1: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 8] 
split level 2: [/input-12, 69] [/input-12, 69] [/input-12, 46] [/input-12, 46] [/input-12, 69] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 69] 
split level 3: [/input-12, 46] [/input-12, 46] [/input-12, 12] [/input-12, 12] [/input-12, 46] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23587128520011902
10 lb beta sum: 0.233213871717453, worst -0.2388458400964737
Time: prepare 0.0065    bound 0.1164    transfer 0.0007    finalize 0.0020    func 0.1286    
Accumulated time: func 0.4128    prepare 0.0408    bound 0.3630    transfer 0.0039    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(0.42348215) min lb tensor(-0.23285283)
Number of Verified Splits: 60 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 6
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.015399456024169922 
BICCOS Cumulative time: 0.03840351104736328
Preprocessing time: 0.011326074600219727 Inference time: 0.0027306079864501953 Add cuts time: 0.0008907318115234375 Cut analysis time: 0.0004520416259765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06648 (3), -0.06645 (3), -0.06585 (3), -0.06578 (3), -0.06577 (3), -0.06481 (3), -0.06412 (3), -0.06218 (3), -0.05906 (3), -0.05663 (3), -0.05652 (3), -0.05622 (3), -0.05617 (3), -0.05568 (3), -0.05556 (3), -0.05457 (3), -0.05207 (3), -0.05170 (3), -0.05156 (3), -0.05066 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0192    set_bounds 0.0156    solve 0.1288    add 0.0895    
Accumulated time: pickout 0.0024    decision 0.5528    set_bounds 0.0373    solve 0.3599    add 0.2357    
Current (lb-rhs): -0.066476970911026
150 domains visited
Cumulative time: 1.2883718013763428

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 53] [/input-12, 24] [/input-12, 24] [/input-12, 8] [/input-12, 8] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 3: [/input-12, 12] [/input-12, 12] [/input-8, 1972] [/input-8, 1716] [/input-12, 12] [/input-12, 12] [/input-8, 1692] [/input-8, 1692] [/input-12, 12] [/input-12, 12] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06905651092529297
10 lb beta sum: 0.21527011692523956, worst -0.06374846398830414
Time: prepare 0.0061    bound 0.1163    transfer 0.0007    finalize 0.0019    func 0.1276    
Accumulated time: func 0.5404    prepare 0.0472    bound 0.4793    transfer 0.0046    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.23131445) min lb tensor(-0.02562736)
Number of Verified Splits: 375 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 9
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.03780007362365723 
BICCOS Cumulative time: 0.07620358467102051
Preprocessing time: 0.01152348518371582 Inference time: 0.0199737548828125 Add cuts time: 0.005877256393432617 Cut analysis time: 0.00042557716369628906
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0009    decision 0.0202    set_bounds 0.0155    solve 0.1277    add 0.0228    
Accumulated time: pickout 0.0033    decision 0.5729    set_bounds 0.0528    solve 0.4876    add 0.2585    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16993868350982666
10 lb beta sum: 0.21956539154052734, worst -0.1596594899892807
Time: prepare 0.0037    bound 0.1123    transfer 0.0015    finalize 0.0013    func 0.1205    
Accumulated time: func 0.6609    prepare 0.0513    bound 0.5917    transfer 0.0062    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.26764631) min lb tensor(-0.15941852)
Number of Verified Splits: 223 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.43198472261428833
10 lb beta sum: 0.697925865650177, worst -0.42153581976890564
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 11
#cuts 4-6: 13
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.3878207206726074 
BICCOS Cumulative time: 0.46402430534362793
Preprocessing time: 0.00632476806640625 Inference time: 0.37569332122802734 Add cuts time: 0.004347324371337891 Cut analysis time: 0.0014553070068359375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15942 (8), -0.15175 (8), -0.12979 (8), -0.12496 (8), -0.12262 (8), -0.11096 (8), -0.10441 (8), -0.08499 (8), -0.08242 (8), -0.08134 (8), -0.08003 (8), -0.07643 (8), -0.07445 (8), -0.07114 (8), -0.06001 (8), -0.04579 (8), -0.04360 (8), -0.04245 (8), -0.03901 (8), -0.03621 (8), 
Length of domains: 33
Time: pickout 0.0004    decision 0.0219    set_bounds 0.0167    solve 0.1206    add 0.0012    
Accumulated time: pickout 0.0037    decision 0.5949    set_bounds 0.0695    solve 0.6082    add 0.2597    
Current (lb-rhs): -0.159418523311615
183 domains visited
Cumulative time: 2.066516160964966

BaB round 2
batch: 33
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-8, 1635] 
split level 1: [/input-8, 1626] [/input-8, 1692] [/input-8, 1626] [/input-8, 1626] [/input-8, 1692] [/input-8, 1635] [/input-8, 1700] [/input-8, 1626] [/input-8, 1692] [/input-8, 1626] 
split level 2: [/input-8, 1716] [/input-8, 1626] [/input-8, 1700] [/input-8, 1700] [/input-8, 1626] [/input-8, 1626] [/input-8, 468] [/input-8, 1716] [/input-8, 1626] [/input-8, 1700] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1464361548423767
10 lb beta sum: 0.12823845446109772, worst -0.1442573070526123
Time: prepare 0.0053    bound 0.1191    transfer 0.0007    finalize 0.0014    func 0.1287    
Accumulated time: func 0.7896    prepare 0.0568    bound 0.7107    transfer 0.0069    finalize 0.0118    
all_split False
======================Cut inference begins======================
max lb tensor(0.52833366) min lb tensor(-0.14404888)
Number of Verified Splits: 174 of 264
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4172731041908264
10 lb beta sum: 0.6485994458198547, worst -0.2622614800930023
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 11
#cuts 4-6: 13
#cuts 7-9: 12
#cuts >= 20: 0
BICCOS time: 0.24060344696044922 
BICCOS Cumulative time: 0.7046277523040771
Preprocessing time: 0.0077021121978759766 Inference time: 0.22505903244018555 Add cuts time: 0.006371021270751953 Cut analysis time: 0.0014712810516357422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14405 (11), -0.13442 (11), -0.13435 (11), -0.13213 (11), -0.12409 (11), -0.12298 (11), -0.11243 (11), -0.10827 (11), -0.10790 (11), -0.10555 (11), -0.10440 (11), -0.10290 (11), -0.09746 (11), -0.09729 (11), -0.09707 (11), -0.09626 (11), -0.09363 (11), -0.09288 (11), -0.08698 (11), -0.08320 (11), 
Length of domains: 90
Time: pickout 0.0013    decision 0.0156    set_bounds 0.0172    solve 0.1288    add 0.0014    
Accumulated time: pickout 0.0050    decision 0.6105    set_bounds 0.0867    solve 0.7370    add 0.2611    
Current (lb-rhs): -0.14404888451099396
273 domains visited
Cumulative time: 2.473327875137329

BaB round 3
batch: 90
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1692] [/input-8, 1700] [/input-8, 1635] [/input-8, 1964] [/input-8, 1700] [/input-8, 1626] [/input-8, 1692] [/input-8, 1700] [/input-12, 72] [/input-8, 1692] 
split level 1: [/input-12, 7] [/input-8, 1716] [/input-8, 1964] [/input-8, 1692] [/input-8, 1630] [/input-8, 1692] [/input-8, 1635] [/input-8, 1716] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2781068682670593, worst -0.13178525865077972
10 lb beta sum: 0.2781068682670593, worst -0.13147373497486115
Time: prepare 0.0156    bound 0.1173    transfer 0.0013    finalize 0.0020    func 0.1386    
Accumulated time: func 0.9282    prepare 0.0726    bound 0.8280    transfer 0.0082    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.28523171) min lb tensor(-0.13133101)
Number of Verified Splits: 172 of 360
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 15
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.032265424728393555 
BICCOS Cumulative time: 0.7368931770324707
Preprocessing time: 0.010288715362548828 Inference time: 0.018468856811523438 Add cuts time: 0.0029294490814208984 Cut analysis time: 0.0005784034729003906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13133 (13), -0.12133 (13), -0.11887 (13), -0.11798 (13), -0.11263 (13), -0.11069 (13), -0.10844 (13), -0.10811 (13), -0.10638 (13), -0.10432 (13), -0.10187 (13), -0.10121 (13), -0.10040 (13), -0.10008 (13), -0.09645 (13), -0.09447 (13), -0.09420 (13), -0.09370 (13), -0.09066 (13), -0.09011 (13), 
Length of domains: 188
Time: pickout 0.0020    decision 0.0188    set_bounds 0.0227    solve 0.1387    add 0.0023    
Accumulated time: pickout 0.0070    decision 0.6293    set_bounds 0.1095    solve 0.8757    add 0.2634    
Current (lb-rhs): -0.13133101165294647
461 domains visited
Cumulative time: 2.691486358642578

BaB round 4
batch: 188
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-8, 1692] [/input-8, 1716] [/input-8, 468] [/input-8, 1964] [/input-8, 1716] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12501174211502075
10 lb beta sum: 0.282792866230011, worst -0.16162705421447754
Time: prepare 0.0076    bound 0.1297    transfer 0.0017    finalize 0.0019    func 0.1433    
Accumulated time: func 1.0715    prepare 0.0804    bound 0.9577    transfer 0.0099    finalize 0.0157    
all_split False
======================Cut inference begins======================
max lb tensor(0.17923009) min lb tensor(-0.12296197)
Number of Verified Splits: 165 of 376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 16
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.03149127960205078 
BICCOS Cumulative time: 0.7683844566345215
Preprocessing time: 0.010667562484741211 Inference time: 0.017757415771484375 Add cuts time: 0.0023856163024902344 Cut analysis time: 0.0006806850433349609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12296 (14), -0.12165 (14), -0.11282 (14), -0.11107 (14), -0.11054 (14), -0.10971 (14), -0.10815 (14), -0.10472 (14), -0.10256 (14), -0.10000 (14), -0.09975 (14), -0.09818 (14), -0.09647 (14), -0.09498 (14), -0.09392 (14), -0.09366 (14), -0.09337 (14), -0.09180 (14), -0.09104 (14), -0.09004 (14), 
Length of domains: 211
Time: pickout 0.0031    decision 0.0215    set_bounds 0.0165    solve 0.1434    add 0.0014    
Accumulated time: pickout 0.0102    decision 0.6508    set_bounds 0.1260    solve 1.0192    add 0.2648    
Current (lb-rhs): -0.12296196818351746
672 domains visited
Cumulative time: 2.9100942611694336

BaB round 5
batch: 211
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1708] [/input-8, 1708] [/input-8, 468] [/input-8, 1708] [/input-8, 1716] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11849719285964966
10 lb beta sum: 0.2690322995185852, worst -0.1165330708026886
Time: prepare 0.0083    bound 0.1365    transfer 0.0009    finalize 0.0020    func 0.1504    
Accumulated time: func 1.2219    prepare 0.0888    bound 1.0942    transfer 0.0108    finalize 0.0177    
all_split False
======================Cut inference begins======================
max lb tensor(0.04164718) min lb tensor(-0.11643097)
Number of Verified Splits: 80 of 422
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 17
#cuts 4-6: 20
#cuts >= 20: 0
BICCOS time: 0.025122404098510742 
BICCOS Cumulative time: 0.7935068607330322
Preprocessing time: 0.011935949325561523 Inference time: 0.009049654006958008 Add cuts time: 0.0030202865600585938 Cut analysis time: 0.0011165142059326172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11643 (15), -0.11570 (15), -0.10887 (15), -0.10642 (15), -0.10465 (15), -0.10453 (15), -0.10426 (15), -0.10336 (15), -0.10241 (15), -0.09975 (15), -0.09876 (15), -0.09701 (15), -0.09524 (15), -0.09467 (15), -0.09398 (15), -0.09281 (15), -0.09276 (15), -0.09166 (15), -0.09037 (15), -0.09029 (15), 
Length of domains: 342
Time: pickout 0.0034    decision 0.0220    set_bounds 0.0182    solve 0.1505    add 0.0054    
Accumulated time: pickout 0.0136    decision 0.6729    set_bounds 0.1441    solve 1.1696    add 0.2702    
Current (lb-rhs): -0.11643096804618835
1014 domains visited
Cumulative time: 3.1356289386749268

BaB round 6
batch: 342
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1969] [/input-8, 1716] [/input-8, 420] [/input-8, 1716] [/input-8, 1717] [/input-8, 468] [/input-8, 1964] [/input-8, 466] [/input-8, 1969] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11509215831756592
10 lb beta sum: 0.24043898284435272, worst -0.113186776638031
Time: prepare 0.0135    bound 0.1372    transfer 0.0029    finalize 0.0034    func 0.1616    
Accumulated time: func 1.3835    prepare 0.1025    bound 1.2315    transfer 0.0137    finalize 0.0211    
all_split False
======================Cut inference begins======================
max lb tensor(0.03364894) min lb tensor(-0.11314414)
Number of Verified Splits: 146 of 684
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 21
#cuts 4-6: 15
#cuts >= 20: 0
BICCOS time: 0.042037248611450195 
BICCOS Cumulative time: 0.8355441093444824
Preprocessing time: 0.01936197280883789 Inference time: 0.018427133560180664 Add cuts time: 0.003235340118408203 Cut analysis time: 0.0010128021240234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11314 (16), -0.11195 (16), -0.10600 (16), -0.10329 (16), -0.10297 (16), -0.10120 (16), -0.10068 (16), -0.09936 (16), -0.09862 (16), -0.09844 (16), -0.09756 (16), -0.09383 (16), -0.09270 (16), -0.09207 (16), -0.09146 (16), -0.09095 (16), -0.09034 (16), -0.08961 (16), -0.08917 (16), -0.08910 (16), 
Length of domains: 538
Time: pickout 0.0046    decision 0.0293    set_bounds 0.0294    solve 0.1618    add 0.0049    
Accumulated time: pickout 0.0182    decision 0.7021    set_bounds 0.1736    solve 1.3314    add 0.2751    
Current (lb-rhs): -0.11314414441585541
1552 domains visited
Cumulative time: 3.4092743396759033

BaB round 7
batch: 538
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 466] [/input-8, 1726] [/input-8, 1708] [/input-8, 1969] [/input-8, 1726] [/input-8, 466] [/input-8, 1726] [/input-8, 1635] [/input-8, 466] [/input-8, 1726] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11220419406890869
10 lb beta sum: 0.2523668706417084, worst -0.11032813787460327
Time: prepare 0.0209    bound 0.1406    transfer 0.0040    finalize 0.0057    func 0.1781    
Accumulated time: func 1.5615    prepare 0.1237    bound 1.3720    transfer 0.0176    finalize 0.0268    
all_split False
======================Cut inference begins======================
max lb tensor(0.19995996) min lb tensor(-0.11031413)
Number of Verified Splits: 244 of 1076
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 25
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.06870818138122559 
BICCOS Cumulative time: 0.904252290725708
Preprocessing time: 0.03216123580932617 Inference time: 0.030257463455200195 Add cuts time: 0.0049591064453125 Cut analysis time: 0.0013303756713867188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11031 (17), -0.10910 (17), -0.10282 (17), -0.09964 (17), -0.09840 (17), -0.09789 (17), -0.09785 (17), -0.09709 (17), -0.09541 (17), -0.09298 (17), -0.09239 (17), -0.09021 (17), -0.08974 (17), -0.08844 (17), -0.08831 (17), -0.08746 (17), -0.08661 (17), -0.08648 (17), -0.08637 (17), -0.08553 (17), 
Length of domains: 832
Time: pickout 0.0084    decision 0.0395    set_bounds 0.0464    solve 0.1784    add 0.0056    
Accumulated time: pickout 0.0266    decision 0.7416    set_bounds 0.2200    solve 1.5098    add 0.2807    
Current (lb-rhs): -0.11031413078308105
2384 domains visited
Cumulative time: 3.758913516998291

BaB round 8
batch: 832
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 459] [/input-8, 468] [/input-8, 459] [/input-8, 1716] [/input-8, 459] [/input-8, 1716] [/input-8, 459] [/input-8, 1716] [/input-8, 1716] [/input-8, 1630] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11108589172363281
10 lb beta sum: 0.2747596204280853, worst -0.10921970009803772
Time: prepare 0.0327    bound 0.1568    transfer 0.0030    finalize 0.0067    func 0.3338    
Accumulated time: func 1.8953    prepare 0.1566    bound 1.5288    transfer 0.0207    finalize 0.0335    
all_split False
======================Cut inference begins======================
max lb tensor(0.39052093) min lb tensor(-0.10920659)
Number of Verified Splits: 562 of 1664
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 23
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.13234710693359375 
BICCOS Cumulative time: 1.0365993976593018
Preprocessing time: 0.05062580108642578 Inference time: 0.07242918014526367 Add cuts time: 0.008531570434570312 Cut analysis time: 0.0007605552673339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10921 (18), -0.10795 (18), -0.10154 (18), -0.09850 (18), -0.09732 (18), -0.09670 (18), -0.09595 (18), -0.09498 (18), -0.09416 (18), -0.09003 (18), -0.08948 (18), -0.08904 (18), -0.08726 (18), -0.08714 (18), -0.08636 (18), -0.08532 (18), -0.08497 (18), -0.08488 (18), -0.08453 (18), -0.08386 (18), 
Length of domains: 1102
Time: pickout 0.0145    decision 0.0569    set_bounds 0.0698    solve 0.3342    add 0.0044    
Accumulated time: pickout 0.0411    decision 0.7985    set_bounds 0.2898    solve 1.8440    add 0.2850    
Current (lb-rhs): -0.10920658707618713
3486 domains visited
Cumulative time: 4.377729177474976

BaB round 9
batch: 1102
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1630] [/input-8, 466] [/input-8, 1630] [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 1708] [/input-8, 1630] [/input-8, 466] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10247880220413208
10 lb beta sum: 1.0735164880752563, worst -0.09816551208496094
Time: prepare 0.0443    bound 0.1796    transfer 0.0048    finalize 0.0097    func 0.2525    
Accumulated time: func 2.1478    prepare 0.2011    bound 1.7084    transfer 0.0255    finalize 0.0432    
all_split False
======================Cut inference begins======================
max lb tensor(0.89947093) min lb tensor(-0.09323561)
Number of Verified Splits: 1852 of 2204
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.3242032527923584 
BICCOS Cumulative time: 1.3608026504516602
Preprocessing time: 0.06704211235046387 Inference time: 0.23967814445495605 Add cuts time: 0.01673579216003418 Cut analysis time: 0.0007472038269042969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09324 (19), -0.09212 (19), -0.09198 (19), -0.09086 (19), -0.08142 (19), -0.08023 (19), -0.08007 (19), -0.07888 (19), -0.07562 (19), -0.07395 (19), -0.07065 (19), -0.07013 (19), -0.06899 (19), -0.06878 (19), -0.06847 (19), -0.06817 (19), -0.06766 (19), -0.06637 (19), -0.06628 (19), -0.06548 (19), 
Length of domains: 352
Time: pickout 0.0175    decision 0.0694    set_bounds 0.0935    solve 0.2529    add 0.0021    
Accumulated time: pickout 0.0586    decision 0.8679    set_bounds 0.3833    solve 2.0969    add 0.2871    
Current (lb-rhs): -0.09323561191558838
3838 domains visited
Cumulative time: 5.1530115604400635

BaB round 10
batch: 352
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 468] [/input-8, 1969] [/input-8, 1969] [/input-8, 1969] [/input-8, 468] [/input-8, 1969] [/input-8, 1969] [/input-8, 1969] [/input-8, 468] [/input-8, 1969] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1565486192703247, worst -0.24339818954467773
10 lb beta sum: 2.126974582672119, worst -0.07881999015808105
Time: prepare 0.0304    bound 0.1377    transfer 0.0011    finalize 0.0030    func 0.1775    
Accumulated time: func 2.3253    prepare 0.2317    bound 1.8462    transfer 0.0266    finalize 0.0462    
all_split False
======================Cut inference begins======================
max lb tensor(0.64390326) min lb tensor(-0.07871640)
Number of Verified Splits: 358 of 704
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 24
#cuts >= 20: 0
BICCOS time: 0.07256102561950684 
BICCOS Cumulative time: 1.433363676071167
Preprocessing time: 0.020120620727539062 Inference time: 0.04893159866333008 Add cuts time: 0.0030112266540527344 Cut analysis time: 0.0004975795745849609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07872 (20), -0.07814 (20), -0.07756 (20), -0.07698 (20), -0.07643 (20), -0.07585 (20), -0.07528 (20), -0.07470 (20), -0.06697 (20), -0.06620 (20), -0.06573 (20), -0.06495 (20), -0.06469 (20), -0.06416 (20), -0.06392 (20), -0.06345 (20), -0.06267 (20), -0.06246 (20), -0.05920 (20), -0.05887 (20), 
Length of domains: 346
Time: pickout 0.0069    decision 0.0306    set_bounds 0.0301    solve 0.1777    add 0.0019    
Accumulated time: pickout 0.0655    decision 0.8985    set_bounds 0.4134    solve 2.2746    add 0.2890    
Current (lb-rhs): -0.07871639728546143
4184 domains visited
Cumulative time: 5.4750847816467285

BaB round 11
batch: 346
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09090179204940796
10 lb beta sum: 1.5192680358886719, worst -0.0786365270614624
Time: prepare 0.0138    bound 0.1369    transfer 0.0011    finalize 0.0028    func 0.1597    
Accumulated time: func 2.4851    prepare 0.2457    bound 1.9830    transfer 0.0277    finalize 0.0490    
all_split False
======================Cut inference begins======================
max lb tensor(0.27585876) min lb tensor(-0.07858247)
Number of Verified Splits: 340 of 692
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.07149600982666016 
BICCOS Cumulative time: 1.5048596858978271
Preprocessing time: 0.020241498947143555 Inference time: 0.04798412322998047 Add cuts time: 0.0027039051055908203 Cut analysis time: 0.0005664825439453125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07858 (21), -0.07800 (21), -0.07742 (21), -0.07684 (21), -0.07630 (21), -0.07572 (21), -0.07514 (21), -0.07456 (21), -0.06682 (21), -0.06606 (21), -0.06559 (21), -0.06482 (21), -0.06454 (21), -0.06409 (21), -0.06379 (21), -0.06331 (21), -0.06255 (21), -0.06235 (21), -0.05913 (21), -0.05881 (21), 
Length of domains: 352
Time: pickout 0.0055    decision 0.0294    set_bounds 0.0292    solve 0.3084    add 0.0025    
Accumulated time: pickout 0.0711    decision 0.9279    set_bounds 0.4425    solve 2.5830    add 0.2915    
Current (lb-rhs): -0.07858246564865112
4536 domains visited
Cumulative time: 5.92425537109375

BaB round 12
batch: 352
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1708] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08518153429031372
10 lb beta sum: 1.5173301696777344, worst -0.07542818784713745
Time: prepare 0.0141    bound 0.1308    transfer 0.0011    finalize 0.0034    func 0.1539    
Accumulated time: func 2.6389    prepare 0.2600    bound 2.1138    transfer 0.0288    finalize 0.0524    
all_split False
======================Cut inference begins======================
max lb tensor(0.27172911) min lb tensor(-0.07537484)
Number of Verified Splits: 224 of 704
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 25
#cuts >= 20: 0
BICCOS time: 0.05417752265930176 
BICCOS Cumulative time: 1.559037208557129
Preprocessing time: 0.019566059112548828 Inference time: 0.03229403495788574 Add cuts time: 0.0018339157104492188 Cut analysis time: 0.00048351287841796875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07537 (22), -0.07488 (22), -0.07425 (22), -0.07375 (22), -0.07312 (22), -0.07263 (22), -0.07200 (22), -0.07150 (22), -0.06404 (22), -0.06391 (22), -0.06326 (22), -0.06267 (22), -0.06229 (22), -0.06203 (22), -0.06166 (22), -0.06100 (22), -0.06042 (22), -0.05978 (22), -0.05908 (22), -0.05877 (22), 
Length of domains: 480
Time: pickout 0.0068    decision 0.0276    set_bounds 0.0300    solve 0.1540    add 0.0032    
Accumulated time: pickout 0.0779    decision 0.9554    set_bounds 0.4725    solve 2.7370    add 0.2947    
Current (lb-rhs): -0.07537484169006348
5016 domains visited
Cumulative time: 6.201564311981201

BaB round 13
batch: 480
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6905080080032349, worst -0.06925034523010254
10 lb beta sum: 1.6905080080032349, worst -0.0691525936126709
Time: prepare 0.0414    bound 0.1394    transfer 0.0019    finalize 0.0039    func 0.1934    
Accumulated time: func 2.8323    prepare 0.3016    bound 2.2533    transfer 0.0306    finalize 0.0563    
all_split False
======================Cut inference begins======================
max lb tensor(0.24445200) min lb tensor(-0.06910849)
Number of Verified Splits: 382 of 960
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.08718657493591309 
BICCOS Cumulative time: 1.646223783493042
Preprocessing time: 0.028085708618164062 Inference time: 0.05535697937011719 Add cuts time: 0.0032334327697753906 Cut analysis time: 0.0005104541778564453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06911 (23), -0.06862 (23), -0.06798 (23), -0.06796 (23), -0.06749 (23), -0.06745 (23), -0.06683 (23), -0.06632 (23), -0.06620 (23), -0.06596 (23), -0.06571 (23), -0.06544 (23), -0.06507 (23), -0.06483 (23), -0.06458 (23), -0.06431 (23), -0.06236 (23), -0.06058 (23), -0.05764 (23), -0.05740 (23), 
Length of domains: 578
Time: pickout 0.0076    decision 0.0364    set_bounds 0.0411    solve 0.1936    add 0.0058    
Accumulated time: pickout 0.0854    decision 0.9918    set_bounds 0.5136    solve 2.9306    add 0.3006    
Current (lb-rhs): -0.06910848617553711
5594 domains visited
Cumulative time: 6.576247692108154

BaB round 14
batch: 578
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 466] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 466] [/input-8, 466] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07613804936408997
10 lb beta sum: 1.3656744956970215, worst -0.06754350662231445
Time: prepare 0.0226    bound 0.1418    transfer 0.0028    finalize 0.0053    func 0.1800    
Accumulated time: func 3.0123    prepare 0.3244    bound 2.3951    transfer 0.0334    finalize 0.0616    
all_split False
======================Cut inference begins======================
max lb tensor(0.27777809) min lb tensor(-0.06752098)
Number of Verified Splits: 407 of 1156
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.09847426414489746 
BICCOS Cumulative time: 1.7446980476379395
Preprocessing time: 0.03449511528015137 Inference time: 0.06105852127075195 Add cuts time: 0.0023605823516845703 Cut analysis time: 0.0005600452423095703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06752 (24), -0.06703 (24), -0.06644 (24), -0.06638 (24), -0.06595 (24), -0.06587 (24), -0.06530 (24), -0.06478 (24), -0.06460 (24), -0.06436 (24), -0.06411 (24), -0.06383 (24), -0.06352 (24), -0.06327 (24), -0.06303 (24), -0.06275 (24), -0.06232 (24), -0.06056 (24), -0.06046 (24), -0.05995 (24), 
Length of domains: 749
Time: pickout 0.0092    decision 0.0413    set_bounds 0.0495    solve 0.1803    add 0.0105    
Accumulated time: pickout 0.0947    decision 1.0331    set_bounds 0.5632    solve 3.1109    add 0.3110    
Current (lb-rhs): -0.06752097606658936
6343 domains visited
Cumulative time: 6.969411849975586

BaB round 15
batch: 749
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1630] [/input-8, 1635] [/input-8, 1630] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1630] [/input-8, 1635] [/input-8, 1635] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07300841808319092
10 lb beta sum: 1.3706165552139282, worst -0.06482785940170288
Time: prepare 0.0297    bound 0.1515    transfer 0.0052    finalize 0.0062    func 0.2032    
Accumulated time: func 3.2155    prepare 0.3544    bound 2.5466    transfer 0.0387    finalize 0.0678    
all_split False
======================Cut inference begins======================
max lb tensor(0.20008433) min lb tensor(-0.06480509)
Number of Verified Splits: 489 of 1498
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.12640118598937988 
BICCOS Cumulative time: 1.8710992336273193
Preprocessing time: 0.0446469783782959 Inference time: 0.07687211036682129 Add cuts time: 0.004280567169189453 Cut analysis time: 0.0006015300750732422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06481 (25), -0.06431 (25), -0.06378 (25), -0.06368 (25), -0.06329 (25), -0.06316 (25), -0.06266 (25), -0.06213 (25), -0.06188 (25), -0.06164 (25), -0.06138 (25), -0.06111 (25), -0.06086 (25), -0.06061 (25), -0.06036 (25), -0.06008 (25), -0.05983 (25), -0.05812 (25), -0.05768 (25), -0.05717 (25), 
Length of domains: 1009
Time: pickout 0.0134    decision 0.0518    set_bounds 0.0634    solve 0.2035    add 0.0047    
Accumulated time: pickout 0.1081    decision 1.0849    set_bounds 0.6266    solve 3.3144    add 0.3158    
Current (lb-rhs): -0.06480509042739868
7352 domains visited
Cumulative time: 7.43678879737854

BaB round 16
batch: 1009
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 438] [/input-8, 1972] [/input-8, 1714] [/input-8, 438] [/input-8, 438] [/input-8, 438] [/input-8, 438] [/input-8, 1714] [/input-8, 438] [/input-8, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6588927507400513, worst -0.06078064441680908
10 lb beta sum: 1.6588927507400513, worst -0.06075644493103027
Time: prepare 0.0859    bound 0.1688    transfer 0.0032    finalize 0.0087    func 0.2803    
Accumulated time: func 3.4957    prepare 0.4405    bound 2.7154    transfer 0.0418    finalize 0.0765    
all_split False
======================Cut inference begins======================
max lb tensor(0.22465026) min lb tensor(-0.06074452)
Number of Verified Splits: 476 of 2018
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.1431732177734375 
BICCOS Cumulative time: 2.014272451400757
Preprocessing time: 0.060690879821777344 Inference time: 0.07833194732666016 Add cuts time: 0.0035619735717773438 Cut analysis time: 0.0005884170532226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06074 (26), -0.05999 (26), -0.05968 (26), -0.05960 (26), -0.05893 (26), -0.05889 (26), -0.05877 (26), -0.05854 (26), -0.05782 (26), -0.05782 (26), -0.05770 (26), -0.05765 (26), -0.05756 (26), -0.05707 (26), -0.05684 (26), -0.05675 (26), -0.05667 (26), -0.05659 (26), -0.05659 (26), -0.05649 (26), 
Length of domains: 1542
Time: pickout 0.0203    decision 0.0665    set_bounds 0.2092    solve 0.2806    add 0.0071    
Accumulated time: pickout 0.1284    decision 1.1515    set_bounds 0.8358    solve 3.5950    add 0.3229    
Current (lb-rhs): -0.060744524002075195
8894 domains visited
Cumulative time: 8.170315504074097

BaB round 17
batch: 1542
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1972] [/input-8, 1714] [/input-8, 438] [/input-8, 1972] [/input-8, 1714] [/input-8, 1714] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6174360513687134, worst -0.05599522590637207
10 lb beta sum: 1.6174360513687134, worst -0.05596280097961426
Time: prepare 0.1317    bound 0.2297    transfer 0.0059    finalize 0.0172    func 0.4050    
Accumulated time: func 3.9007    prepare 0.5725    bound 2.9451    transfer 0.0477    finalize 0.0937    
all_split False
======================Cut inference begins======================
max lb tensor(0.00942683) min lb tensor(-0.05594444)
Number of Verified Splits: 613 of 3084
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.20601582527160645 
BICCOS Cumulative time: 2.2202882766723633
Preprocessing time: 0.09479379653930664 Inference time: 0.10569238662719727 Add cuts time: 0.004926443099975586 Cut analysis time: 0.0006031990051269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05594 (27), -0.05486 (27), -0.05482 (27), -0.05470 (27), -0.05466 (27), -0.05458 (27), -0.05457 (27), -0.05374 (27), -0.05362 (27), -0.05358 (27), -0.05357 (27), -0.05356 (27), -0.05349 (27), -0.05349 (27), -0.05348 (27), -0.05348 (27), -0.05323 (27), -0.05303 (27), -0.05277 (27), -0.05250 (27), 
Length of domains: 2471
Time: pickout 0.0311    decision 0.0943    set_bounds 0.1319    solve 0.4057    add 0.0197    
Accumulated time: pickout 0.1595    decision 1.2458    set_bounds 0.9677    solve 4.0007    add 0.3426    
Current (lb-rhs): -0.05594444274902344
11365 domains visited
Cumulative time: 9.067845344543457

BaB round 18
batch: 2471
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1695] [/input-8, 1695] [/input-8, 1035] [/input-8, 1035] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5894837379455566, worst -0.05072319507598877
10 lb beta sum: 1.5894837379455566, worst -0.050604820251464844
Time: prepare 0.2168    bound 0.3294    transfer 0.0184    finalize 0.0229    func 0.6200    
Accumulated time: func 4.5208    prepare 0.7895    bound 3.2745    transfer 0.0662    finalize 0.1166    
all_split False
======================Cut inference begins======================
max lb tensor(0.01290989) min lb tensor(-0.05054402)
Number of Verified Splits: 935 of 4942
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.3298201560974121 
BICCOS Cumulative time: 2.5501084327697754
Preprocessing time: 0.1530466079711914 Inference time: 0.16929388046264648 Add cuts time: 0.006711006164550781 Cut analysis time: 0.0007686614990234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05054 (28), -0.05053 (28), -0.05044 (28), -0.05037 (28), -0.04945 (28), -0.04944 (28), -0.04942 (28), -0.04941 (28), -0.04936 (28), -0.04935 (28), -0.04933 (28), -0.04932 (28), -0.04931 (28), -0.04929 (28), -0.04928 (28), -0.04926 (28), -0.04925 (28), -0.04924 (28), -0.04833 (28), -0.04832 (28), 
Length of domains: 4007
Time: pickout 0.0443    decision 0.2724    set_bounds 0.2150    solve 0.6211    add 0.0143    
Accumulated time: pickout 0.2038    decision 1.5182    set_bounds 1.1827    solve 4.6218    add 0.3569    
Current (lb-rhs): -0.050544023513793945
15372 domains visited
Cumulative time: 10.580438613891602

BaB round 19
batch: 4007
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5693995952606201, worst -0.05054426193237305
10 lb beta sum: 1.5693995952606201, worst -0.05050063133239746
Time: prepare 0.3485    bound 0.4887    transfer 0.0399    finalize 0.1945    func 1.1247    
Accumulated time: func 5.6455    prepare 1.1383    bound 3.7632    transfer 0.1061    finalize 0.3111    
all_split False
======================Cut inference begins======================
max lb tensor(0.01034272) min lb tensor(-0.05048573)
Number of Verified Splits: 1993 of 8014
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.6463556289672852 
BICCOS Cumulative time: 3.1964640617370605
Preprocessing time: 0.24829387664794922 Inference time: 0.3758840560913086 Add cuts time: 0.021453142166137695 Cut analysis time: 0.0007245540618896484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05049 (29), -0.05042 (29), -0.05040 (29), -0.05027 (29), -0.04939 (29), -0.04937 (29), -0.04933 (29), -0.04931 (29), -0.04930 (29), -0.04930 (29), -0.04928 (29), -0.04928 (29), -0.04922 (29), -0.04921 (29), -0.04918 (29), -0.04918 (29), -0.04916 (29), -0.04915 (29), -0.04827 (29), -0.04821 (29), 
Length of domains: 6021
Time: pickout 0.0826    decision 0.3877    set_bounds 0.3519    solve 1.1269    add 0.0161    
Accumulated time: pickout 0.2865    decision 1.9059    set_bounds 1.5347    solve 5.7487    add 0.3730    
Current (lb-rhs): -0.05048573017120361
21393 domains visited
Cumulative time: 13.221060276031494

BaB round 20
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1588] [/input-8, 439] [/input-8, 439] [/input-8, 1588] [/input-8, 439] [/input-8, 439] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05252335965633392
10 lb beta sum: 1.2502496242523193, worst -0.045579612255096436
Time: prepare 0.1706    bound 0.4967    transfer 0.0386    finalize 0.0400    func 0.7995    
Accumulated time: func 6.4450    prepare 1.3091    bound 4.2599    transfer 0.1446    finalize 0.3512    
all_split False
======================Cut inference begins======================
max lb tensor(0.25245178) min lb tensor(-0.04557562)
Number of Verified Splits: 2728 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 0.8095741271972656 
BICCOS Cumulative time: 4.006038188934326
Preprocessing time: 0.25385427474975586 Inference time: 0.530914306640625 Add cuts time: 0.024124860763549805 Cut analysis time: 0.0006806850433349609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04558 (30), -0.04471 (30), -0.04439 (30), -0.04429 (30), -0.04404 (30), -0.04394 (30), -0.04384 (30), -0.04378 (30), -0.04359 (30), -0.04358 (30), -0.04353 (30), -0.04344 (30), -0.04343 (30), -0.04343 (30), -0.04341 (30), -0.04341 (30), -0.04330 (30), -0.04320 (30), -0.04315 (30), -0.04310 (30), 
Length of domains: 7389
Time: pickout 0.0693    decision 0.2241    set_bounds 0.5290    solve 0.9773    add 0.0244    
Accumulated time: pickout 0.3558    decision 2.1300    set_bounds 2.0637    solve 6.7260    add 0.3974    
Current (lb-rhs): -0.045575618743896484
26857 domains visited
current_vram/total_varm: 10.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 15.895779848098755

BaB round 21
batch: 7389
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] [/input-8, 1588] 
cut re-enabled after branching node selection
0 lb beta sum: 1.1110807657241821, worst -0.044146373867988586
10 lb beta sum: 1.4756019115447998, worst -0.04281914234161377
Time: prepare 0.7477    bound 0.8440    transfer 0.0732    finalize 0.0733    func 1.8343    
Accumulated time: func 8.2793    prepare 2.0572    bound 5.1039    transfer 0.2178    finalize 0.4244    
all_split False
======================Cut inference begins======================
max lb tensor(0.24725962) min lb tensor(-0.04278564)
Number of Verified Splits: 5449 of 14778
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 29
#cuts >= 20: 0
BICCOS time: 1.8628649711608887 
BICCOS Cumulative time: 5.868903160095215
Preprocessing time: 0.4628424644470215 Inference time: 1.3409924507141113 Add cuts time: 0.05821967124938965 Cut analysis time: 0.0008103847503662109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04279 (31), -0.04217 (31), -0.04181 (31), -0.04170 (31), -0.04150 (31), -0.04133 (31), -0.04130 (31), -0.04103 (31), -0.04103 (31), -0.04099 (31), -0.04098 (31), -0.04087 (31), -0.04086 (31), -0.04083 (31), -0.04083 (31), -0.04072 (31), -0.04064 (31), -0.04062 (31), -0.04056 (31), -0.04051 (31), 
Length of domains: 9329
Time: pickout 0.1452    decision 0.4053    set_bounds 0.8435    solve 1.8378    add 0.0290    
Accumulated time: pickout 0.5010    decision 2.5353    set_bounds 2.9072    solve 8.5638    add 0.4264    
Current (lb-rhs): -0.04278564453125
36186 domains visited
Cumulative time: 21.091861724853516

BaB round 22
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5190834999084473, worst -0.03969350457191467
10 lb beta sum: 1.5190834999084473, worst -0.03984406590461731
Time: prepare 0.7310    bound 0.9255    transfer 0.0758    finalize 0.3347    func 2.1755    
Accumulated time: func 10.4548    prepare 2.7884    bound 6.0294    transfer 0.2935    finalize 0.7591    
all_split False
======================Cut inference begins======================
max lb tensor(0.10123038) min lb tensor(-0.03964290)
Number of Verified Splits: 5788 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 32
#cuts >= 20: 0
BICCOS time: 1.7620677947998047 
BICCOS Cumulative time: 7.6309709548950195
Preprocessing time: 0.5165543556213379 Inference time: 1.2062983512878418 Add cuts time: 0.03845715522766113 Cut analysis time: 0.0007579326629638672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04279 (31), -0.04098 (31), -0.04064 (31), -0.03964 (32), -0.03888 (32), -0.03885 (32), -0.03884 (31), -0.03855 (32), -0.03840 (32), -0.03828 (32), -0.03806 (32), -0.03802 (32), -0.03786 (32), -0.03782 (32), -0.03782 (31), -0.03779 (32), -0.03770 (32), -0.03763 (32), -0.03757 (32), -0.03757 (32), 
Length of domains: 11733
Time: pickout 0.1400    decision 0.4440    set_bounds 0.9517    solve 2.1790    add 0.0348    
Accumulated time: pickout 0.6409    decision 2.9793    set_bounds 3.8589    solve 10.7428    add 0.4612    
Current (lb-rhs): -0.04278564453125
46782 domains visited
current_vram/total_varm: 27.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 26.688345909118652

BaB round 23
batch: 11733
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04509250819683075
10 lb beta sum: 1.2609748840332031, worst -0.0427476167678833
Time: prepare 0.5216    bound 1.3023    transfer 0.1146    finalize 0.1406    func 2.2323    
Accumulated time: func 12.6871    prepare 3.3105    bound 7.3317    transfer 0.4082    finalize 0.8997    
all_split False
======================Cut inference begins======================
max lb tensor(0.47246867) min lb tensor(-0.04271878)
Number of Verified Splits: 18302 of 23466
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 37
#cuts >= 20: 0
BICCOS time: 4.974543809890747 
BICCOS Cumulative time: 12.605514764785767
Preprocessing time: 0.747002124786377 Inference time: 4.137963056564331 Add cuts time: 0.08878517150878906 Cut analysis time: 0.00079345703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04272 (32), -0.04092 (32), -0.04057 (32), -0.03877 (32), -0.03782 (32), -0.03730 (32), -0.03670 (32), -0.03619 (33), -0.03602 (32), -0.03593 (33), -0.03571 (33), -0.03567 (32), -0.03561 (33), -0.03550 (32), -0.03545 (33), -0.03537 (32), -0.03525 (33), -0.03515 (32), -0.03512 (33), -0.03501 (33), 
Length of domains: 5164
Time: pickout 0.2414    decision 0.8821    set_bounds 1.6254    solve 2.2369    add 0.0218    
Accumulated time: pickout 0.8823    decision 3.8614    set_bounds 5.4843    solve 12.9798    add 0.4830    
Current (lb-rhs): -0.042718783020973206
51946 domains visited
Cumulative time: 36.88902139663696

BaB round 24
batch: 5164
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04322145879268646
10 lb beta sum: 1.2537672519683838, worst -0.03275251388549805
Time: prepare 0.2270    bound 0.6120    transfer 0.0517    finalize 0.0505    func 1.0095    
Accumulated time: func 13.6966    prepare 3.5377    bound 7.9437    transfer 0.4599    finalize 0.9502    
all_split False
======================Cut inference begins======================
max lb tensor(0.26770759) min lb tensor(-0.03274804)
Number of Verified Splits: 8157 of 10328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 38
#cuts >= 20: 0
BICCOS time: 2.2998578548431396 
BICCOS Cumulative time: 14.905372619628906
Preprocessing time: 0.5571367740631104 Inference time: 1.6982591152191162 Add cuts time: 0.043653011322021484 Cut analysis time: 0.0008089542388916016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03275 (34), -0.03248 (34), -0.03226 (34), -0.03216 (34), -0.03199 (34), -0.03178 (34), -0.03167 (34), -0.03146 (34), -0.03143 (34), -0.03129 (34), -0.03116 (34), -0.03103 (34), -0.03098 (34), -0.03094 (34), -0.03084 (34), -0.03068 (34), -0.03054 (34), -0.03046 (34), -0.03036 (34), -0.03015 (34), 
Length of domains: 2171
Time: pickout 0.1013    decision 0.2842    set_bounds 0.6518    solve 1.0117    add 0.0089    
Accumulated time: pickout 0.9837    decision 4.1455    set_bounds 6.1361    solve 13.9914    add 0.4918    
Current (lb-rhs): -0.03274804353713989
54117 domains visited
Cumulative time: 41.34344983100891

BaB round 25
batch: 2171
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 505] [/input-8, 505] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.041615575551986694
10 lb beta sum: 1.4383647441864014, worst -0.030906736850738525
Time: prepare 0.0943    bound 0.2974    transfer 0.0170    finalize 0.1943    func 0.6312    
Accumulated time: func 14.3278    prepare 3.6322    bound 8.2411    transfer 0.4769    finalize 1.1445    
all_split False
======================Cut inference begins======================
max lb tensor(0.23306918) min lb tensor(-0.03090280)
Number of Verified Splits: 2030 of 4342
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 39
#cuts >= 20: 0
BICCOS time: 0.586144208908081 
BICCOS Cumulative time: 15.491516828536987
Preprocessing time: 0.13770222663879395 Inference time: 0.43318605422973633 Add cuts time: 0.014466524124145508 Cut analysis time: 0.0007894039154052734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03090 (35), -0.03064 (35), -0.03042 (35), -0.03031 (35), -0.03015 (35), -0.02993 (35), -0.02983 (35), -0.02963 (35), -0.02959 (35), -0.02945 (35), -0.02932 (35), -0.02918 (35), -0.02914 (35), -0.02910 (35), -0.02900 (35), -0.02884 (35), -0.02870 (35), -0.02862 (35), -0.02851 (35), -0.02850 (35), 
Length of domains: 2312
Time: pickout 0.0447    decision 0.1259    set_bounds 0.1936    solve 0.6320    add 0.0127    
Accumulated time: pickout 1.0284    decision 4.2715    set_bounds 6.3296    solve 14.6234    add 0.5045    
Current (lb-rhs): -0.03090280294418335
56429 domains visited
Cumulative time: 42.96479034423828

BaB round 26
batch: 2312
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1612] [/input-8, 1612] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03918862342834473
10 lb beta sum: 1.809948205947876, worst -0.027304232120513916
Time: prepare 0.0993    bound 0.3130    transfer 0.0173    finalize 0.0217    func 0.6279    
Accumulated time: func 14.9557    prepare 3.7318    bound 8.5540    transfer 0.4941    finalize 1.1662    
all_split False
======================Cut inference begins======================
max lb tensor(0.47296488) min lb tensor(-0.02728975)
Number of Verified Splits: 1914 of 4624
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 40
#cuts >= 20: 0
BICCOS time: 0.5746316909790039 
BICCOS Cumulative time: 16.06614851951599
Preprocessing time: 0.14290523529052734 Inference time: 0.41590237617492676 Add cuts time: 0.015049934387207031 Cut analysis time: 0.0007741451263427734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02729 (36), -0.02728 (36), -0.02702 (36), -0.02701 (36), -0.02680 (36), -0.02679 (36), -0.02671 (36), -0.02668 (36), -0.02654 (36), -0.02653 (36), -0.02632 (36), -0.02631 (36), -0.02622 (36), -0.02620 (36), -0.02612 (36), -0.02602 (36), -0.02601 (36), -0.02585 (36), -0.02584 (36), -0.02582 (36), 
Length of domains: 2710
Time: pickout 0.0478    decision 0.1331    set_bounds 0.2076    solve 0.6296    add 0.0089    
Accumulated time: pickout 1.0761    decision 4.4045    set_bounds 6.5372    solve 15.2531    add 0.5134    
Current (lb-rhs): -0.027289748191833496
59139 domains visited
Cumulative time: 44.5917911529541

BaB round 27
batch: 2710
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 438] [/input-8, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.037300094962120056
10 lb beta sum: 1.8478482961654663, worst -0.025295615196228027
Time: prepare 0.1157    bound 0.3563    transfer 0.0204    finalize 0.1836    func 0.7122    
Accumulated time: func 15.6679    prepare 3.8477    bound 8.9104    transfer 0.5145    finalize 1.3497    
all_split False
======================Cut inference begins======================
max lb tensor(0.24086219) min lb tensor(-0.02525926)
Number of Verified Splits: 3011 of 5420
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 41
#cuts >= 20: 0
BICCOS time: 0.8531100749969482 
BICCOS Cumulative time: 16.91925859451294
Preprocessing time: 0.1696910858154297 Inference time: 0.6625306606292725 Add cuts time: 0.02007603645324707 Cut analysis time: 0.0008122920989990234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02526 (37), -0.02494 (37), -0.02477 (37), -0.02468 (37), -0.02445 (37), -0.02425 (37), -0.02419 (37), -0.02406 (37), -0.02378 (37), -0.02377 (37), -0.02357 (37), -0.02346 (37), -0.02337 (37), -0.02329 (37), -0.02321 (37), -0.02298 (37), -0.02288 (37), -0.02277 (37), -0.02272 (37), -0.02258 (37), 
Length of domains: 2409
Time: pickout 0.0522    decision 0.1544    set_bounds 0.2439    solve 0.7132    add 0.0070    
Accumulated time: pickout 1.1284    decision 4.5589    set_bounds 6.7811    solve 15.9663    add 0.5204    
Current (lb-rhs): -0.02525925636291504
61548 domains visited
Cumulative time: 46.651097774505615

BaB round 28
batch: 2409
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034629881381988525
10 lb beta sum: 1.8206526041030884, worst -0.022612571716308594
Time: prepare 0.1021    bound 0.3248    transfer 0.0181    finalize 0.0236    func 0.5006    
Accumulated time: func 16.1685    prepare 3.9500    bound 9.2352    transfer 0.5326    finalize 1.3733    
all_split False
======================Cut inference begins======================
max lb tensor(0.23827529) min lb tensor(-0.02257448)
Number of Verified Splits: 2099 of 4818
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 42
#cuts >= 20: 0
BICCOS time: 0.6437270641326904 
BICCOS Cumulative time: 17.56298565864563
Preprocessing time: 0.1503582000732422 Inference time: 0.47605085372924805 Add cuts time: 0.01649308204650879 Cut analysis time: 0.0008249282836914062
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02257 (38), -0.02223 (38), -0.02209 (38), -0.02195 (38), -0.02174 (38), -0.02164 (38), -0.02146 (38), -0.02132 (38), -0.02115 (38), -0.02110 (38), -0.02084 (38), -0.02075 (38), -0.02075 (38), -0.02061 (38), -0.02047 (38), -0.02026 (38), -0.02026 (38), -0.02016 (38), -0.01998 (38), -0.01984 (38), 
Length of domains: 2719
Time: pickout 0.0568    decision 0.1402    set_bounds 0.3644    solve 0.5025    add 0.0077    
Accumulated time: pickout 1.1852    decision 4.6991    set_bounds 7.1455    solve 16.4688    add 0.5281    
Current (lb-rhs): -0.02257448434829712
64267 domains visited
Cumulative time: 48.394171476364136

BaB round 29
batch: 2719
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.031128451228141785
10 lb beta sum: 1.9032318592071533, worst -0.021102845668792725
Time: prepare 0.1150    bound 0.3566    transfer 0.0208    finalize 0.0266    func 0.5541    
Accumulated time: func 16.7226    prepare 4.0653    bound 9.5919    transfer 0.5534    finalize 1.3999    
all_split False
======================Cut inference begins======================
max lb tensor(0.24822235) min lb tensor(-0.02109200)
Number of Verified Splits: 2942 of 5438
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 43
#cuts >= 20: 0
BICCOS time: 1.048119306564331 
BICCOS Cumulative time: 18.61110496520996
Preprocessing time: 0.17406868934631348 Inference time: 0.8478124141693115 Add cuts time: 0.02541947364807129 Cut analysis time: 0.0008187294006347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02109 (39), -0.02066 (39), -0.02060 (39), -0.02037 (39), -0.02017 (39), -0.02014 (39), -0.01989 (39), -0.01974 (39), -0.01969 (39), -0.01965 (39), -0.01962 (39), -0.01926 (39), -0.01926 (39), -0.01921 (39), -0.01918 (39), -0.01916 (39), -0.01913 (39), -0.01898 (39), -0.01890 (39), -0.01877 (39), 
Length of domains: 2496
Time: pickout 0.0534    decision 0.1568    set_bounds 0.3922    solve 0.5559    add 0.0068    
Accumulated time: pickout 1.2386    decision 4.8559    set_bounds 7.5377    solve 17.0246    add 0.5349    
Current (lb-rhs): -0.021091997623443604
66763 domains visited
Cumulative time: 50.644465923309326

BaB round 30
batch: 2496
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1713] [/input-8, 1659] [/input-8, 1659] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029644638299942017
10 lb beta sum: 1.8696402311325073, worst -0.019614219665527344
Time: prepare 0.1050    bound 0.3328    transfer 0.0180    finalize 0.0244    func 0.5132    
Accumulated time: func 17.2358    prepare 4.1705    bound 9.9247    transfer 0.5714    finalize 1.4243    
all_split False
======================Cut inference begins======================
max lb tensor(0.23569059) min lb tensor(-0.01960951)
Number of Verified Splits: 2786 of 4992
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 45
#cuts >= 20: 0
BICCOS time: 1.004974603652954 
BICCOS Cumulative time: 19.616079568862915
Preprocessing time: 0.16202139854431152 Inference time: 0.8199846744537354 Add cuts time: 0.02214527130126953 Cut analysis time: 0.0008232593536376953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01961 (40), -0.01917 (40), -0.01912 (40), -0.01889 (40), -0.01869 (40), -0.01865 (40), -0.01841 (40), -0.01826 (40), -0.01818 (40), -0.01816 (40), -0.01813 (40), -0.01777 (40), -0.01774 (40), -0.01770 (40), -0.01769 (40), -0.01767 (40), -0.01765 (40), -0.01746 (40), -0.01741 (40), -0.01726 (40), 
Length of domains: 2206
Time: pickout 0.0547    decision 0.1434    set_bounds 0.2259    solve 0.5153    add 0.0092    
Accumulated time: pickout 1.2933    decision 4.9993    set_bounds 7.7636    solve 17.5399    add 0.5441    
Current (lb-rhs): -0.019609510898590088
68969 domains visited
Cumulative time: 52.63037610054016

BaB round 31
batch: 2206
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.026180565357208252
10 lb beta sum: 2.0126543045043945, worst -0.015006840229034424
Time: prepare 0.0927    bound 0.3034    transfer 0.0169    finalize 0.0212    func 0.4637    
Accumulated time: func 17.6995    prepare 4.2634    bound 10.2280    transfer 0.5884    finalize 1.4455    
all_split False
======================Cut inference begins======================
max lb tensor(0.23846114) min lb tensor(-0.01498872)
Number of Verified Splits: 2316 of 4412
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 46
#cuts >= 20: 0
BICCOS time: 0.8716447353363037 
BICCOS Cumulative time: 20.48772430419922
Preprocessing time: 0.1389756202697754 Inference time: 0.7165985107421875 Add cuts time: 0.015246152877807617 Cut analysis time: 0.0008244514465332031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01499 (41), -0.01455 (41), -0.01450 (41), -0.01445 (41), -0.01427 (41), -0.01407 (41), -0.01396 (41), -0.01396 (41), -0.01378 (41), -0.01363 (41), -0.01356 (41), -0.01352 (41), -0.01351 (41), -0.01347 (41), -0.01328 (41), -0.01315 (41), -0.01312 (41), -0.01307 (41), -0.01306 (41), -0.01303 (41), 
Length of domains: 2096
Time: pickout 0.0454    decision 0.1283    set_bounds 0.2036    solve 0.4652    add 0.0100    
Accumulated time: pickout 1.3386    decision 5.1275    set_bounds 7.9672    solve 18.0052    add 0.5541    
Current (lb-rhs): -0.014988720417022705
71065 domains visited
Cumulative time: 54.38329792022705

BaB round 32
batch: 2096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.023493990302085876
10 lb beta sum: 1.9749122858047485, worst -0.01444101333618164
Time: prepare 0.0885    bound 0.2914    transfer 0.0169    finalize 0.0202    func 0.4444    
Accumulated time: func 18.1439    prepare 4.3522    bound 10.5195    transfer 0.6053    finalize 1.4656    
all_split False
======================Cut inference begins======================
max lb tensor(0.47159958) min lb tensor(-0.01443505)
Number of Verified Splits: 2495 of 4192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 47
#cuts >= 20: 0
BICCOS time: 0.9080424308776855 
BICCOS Cumulative time: 21.395766735076904
Preprocessing time: 0.132216215133667 Inference time: 0.7610671520233154 Add cuts time: 0.013944864273071289 Cut analysis time: 0.0008141994476318359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01444 (42), -0.01425 (42), -0.01395 (42), -0.01376 (42), -0.01326 (42), -0.01300 (42), -0.01296 (42), -0.01282 (42), -0.01277 (42), -0.01277 (42), -0.01252 (42), -0.01247 (42), -0.01233 (42), -0.01228 (42), -0.01209 (42), -0.01183 (42), -0.01178 (42), -0.01175 (42), -0.01172 (42), -0.01161 (42), 
Length of domains: 1697
Time: pickout 0.0445    decision 0.1221    set_bounds 0.1874    solve 0.4454    add 0.0095    
Accumulated time: pickout 1.3831    decision 5.2496    set_bounds 8.1546    solve 18.4506    add 0.5636    
Current (lb-rhs): -0.014435052871704102
72762 domains visited
Cumulative time: 56.12904214859009

BaB round 33
batch: 1697
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] [/input-8, 1659] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.020201176404953003
10 lb beta sum: 1.977552890777588, worst -0.008259892463684082
Time: prepare 0.0709    bound 0.2480    transfer 0.0086    finalize 0.0176    func 0.3678    
Accumulated time: func 18.5116    prepare 4.4233    bound 10.7675    transfer 0.6139    finalize 1.4833    
all_split False
======================Cut inference begins======================
max lb tensor(0.24136168) min lb tensor(-0.00825751)
Number of Verified Splits: 2826 of 3394
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 47
#cuts >= 20: 0
BICCOS time: 0.8013265132904053 
BICCOS Cumulative time: 22.19709324836731
Preprocessing time: 0.10405230522155762 Inference time: 0.6854097843170166 Add cuts time: 0.011030197143554688 Cut analysis time: 0.0008342266082763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00826 (43), -0.00780 (43), -0.00777 (43), -0.00749 (43), -0.00731 (43), -0.00731 (43), -0.00723 (43), -0.00701 (43), -0.00683 (43), -0.00683 (43), -0.00682 (43), -0.00676 (43), -0.00674 (43), -0.00673 (43), -0.00647 (43), -0.00636 (43), -0.00635 (43), -0.00633 (43), -0.00632 (43), -0.00628 (43), 
Length of domains: 568
Time: pickout 0.0369    decision 0.1011    set_bounds 0.1516    solve 0.3685    add 0.0021    
Accumulated time: pickout 1.4201    decision 5.3508    set_bounds 8.3062    solve 18.8191    add 0.5657    
Current (lb-rhs): -0.008257508277893066
73330 domains visited
Cumulative time: 57.6203236579895

BaB round 34
batch: 568
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] 
cut re-enabled after branching node selection
0 lb beta sum: 2.02679443359375, worst -0.008257806301116943
10 lb beta sum: 2.02679443359375, worst -0.008256793022155762
Time: prepare 0.0498    bound 0.1416    transfer 0.0032    finalize 0.0049    func 0.2075    
Accumulated time: func 18.7192    prepare 4.4733    bound 10.9091    transfer 0.6171    finalize 1.4881    
all_split False
======================Cut inference begins======================
max lb tensor(0.00650954) min lb tensor(-0.00824857)
Number of Verified Splits: 550 of 1136
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 47
#cuts >= 20: 0
BICCOS time: 0.17274832725524902 
BICCOS Cumulative time: 22.36984157562256
Preprocessing time: 0.03549957275390625 Inference time: 0.1339116096496582 Add cuts time: 0.002575397491455078 Cut analysis time: 0.0007617473602294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00825 (44), -0.00779 (44), -0.00776 (44), -0.00749 (44), -0.00731 (44), -0.00730 (44), -0.00722 (44), -0.00701 (44), -0.00683 (44), -0.00682 (44), -0.00682 (44), -0.00675 (44), -0.00673 (44), -0.00672 (44), -0.00646 (44), -0.00636 (44), -0.00634 (44), -0.00633 (44), -0.00632 (44), -0.00627 (44), 
Length of domains: 586
Time: pickout 0.0153    decision 0.0416    set_bounds 0.0501    solve 0.3452    add 0.0021    
Accumulated time: pickout 1.4353    decision 5.3924    set_bounds 8.3563    solve 19.1644    add 0.5678    
Current (lb-rhs): -0.008248567581176758
73916 domains visited
Cumulative time: 58.25236654281616

BaB round 35
batch: 586
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 2.00478196144104, worst -0.006557941436767578
10 lb beta sum: 2.00478196144104, worst -0.006556272506713867
Time: prepare 0.0519    bound 0.1432    transfer 0.0019    finalize 0.0066    func 0.2113    
Accumulated time: func 18.9304    prepare 4.5255    bound 11.0522    transfer 0.6190    finalize 1.4948    
all_split False
======================Cut inference begins======================
max lb tensor(0.23706913) min lb tensor(-0.00655186)
Number of Verified Splits: 864 of 1172
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 47
#cuts >= 20: 0
BICCOS time: 0.2510359287261963 
BICCOS Cumulative time: 22.620877504348755
Preprocessing time: 0.03507661819458008 Inference time: 0.21236133575439453 Add cuts time: 0.002857208251953125 Cut analysis time: 0.0007407665252685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00655 (45), -0.00610 (45), -0.00606 (45), -0.00580 (45), -0.00561 (45), -0.00560 (45), -0.00552 (45), -0.00531 (45), -0.00513 (45), -0.00512 (45), -0.00512 (45), -0.00506 (45), -0.00505 (45), -0.00503 (45), -0.00477 (45), -0.00467 (45), -0.00465 (45), -0.00463 (45), -0.00462 (45), -0.00460 (45), 
Length of domains: 308
Time: pickout 0.0149    decision 0.0418    set_bounds 0.0509    solve 0.2115    add 0.0037    
Accumulated time: pickout 1.4503    decision 5.4341    set_bounds 8.4072    solve 19.3759    add 0.5715    
Current (lb-rhs): -0.006551861763000488
74224 domains visited
Cumulative time: 58.8329758644104

BaB round 36
batch: 308
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] [/input, 2953] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9263871908187866, worst -0.005118250846862793
10 lb beta sum: 1.9263871908187866, worst -0.0051125288009643555
Time: prepare 0.0300    bound 0.1374    transfer 0.0013    finalize 0.0030    func 0.1765    
Accumulated time: func 19.1069    prepare 4.5558    bound 11.1897    transfer 0.6203    finalize 1.4978    
all_split False
======================Cut inference begins======================
max lb tensor(0.00798953) min lb tensor(-0.00510699)
Number of Verified Splits: 461 of 616
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 48.
#cuts 1-3: 48
#cuts >= 20: 0
BICCOS time: 0.13125276565551758 
BICCOS Cumulative time: 22.752130270004272
Preprocessing time: 0.019036293029785156 Inference time: 0.1094672679901123 Add cuts time: 0.002004861831665039 Cut analysis time: 0.0007443428039550781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00511 (46), -0.00466 (46), -0.00462 (46), -0.00436 (46), -0.00417 (46), -0.00416 (46), -0.00408 (46), -0.00387 (46), -0.00369 (46), -0.00369 (46), -0.00368 (46), -0.00362 (46), -0.00360 (46), -0.00359 (46), -0.00333 (46), -0.00322 (46), -0.00320 (46), -0.00318 (46), -0.00318 (46), -0.00315 (46), 
Length of domains: 155
Time: pickout 0.0091    decision 0.0289    set_bounds 0.0155    solve 0.1767    add 0.0015    
Accumulated time: pickout 1.4594    decision 5.4631    set_bounds 8.4227    solve 19.5526    add 0.5730    
Current (lb-rhs): -0.005106985569000244
74379 domains visited
Cumulative time: 59.19900131225586

BaB round 37
batch: 155
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.012684538960456848
10 lb beta sum: 1.5759154558181763, worst -0.0016781091690063477
Time: prepare 0.0082    bound 0.1495    transfer 0.0007    finalize 0.0015    func 0.1620    
Accumulated time: func 19.2689    prepare 4.5642    bound 11.3392    transfer 0.6210    finalize 1.4993    
all_split False
======================Cut inference begins======================
max lb tensor(0.01037347) min lb tensor(-0.00166923)
Number of Verified Splits: 301 of 310
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 50.
#cuts 1-3: 50
#cuts >= 20: 0
BICCOS time: 0.08553361892700195 
BICCOS Cumulative time: 22.837663888931274
Preprocessing time: 0.009279966354370117 Inference time: 0.0730588436126709 Add cuts time: 0.002447366714477539 Cut analysis time: 0.0007474422454833984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00167 (46), -0.00132 (46), -0.00103 (47), -0.00062 (47), -0.00054 (47), -0.00032 (47), -0.00013 (47), -0.00009 (47), -0.00000 (47), 
Length of domains: 9
Time: pickout 0.0052    decision 0.0196    set_bounds 0.0132    solve 0.1621    add 0.0008    
Accumulated time: pickout 1.4646    decision 5.4827    set_bounds 8.4360    solve 19.7146    add 0.5738    
Current (lb-rhs): -0.0016692280769348145
74388 domains visited
Cumulative time: 59.487457036972046

BaB round 38
batch: 9
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2953] [/input, 2953] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] 
split level 1: [/input-8, 439] [/input-8, 439] [/input-8, 497] [/input-8, 497] [/input-8, 497] [/input-8, 497] [/input-8, 497] [/input-8, 497] [/input-8, 497] 
split level 2: [/input-8, 1651] [/input-8, 1651] [/input-8, 1339] [/input-8, 1339] [/input-8, 1339] [/input-8, 1339] [/input-8, 1339] [/input-8, 1339] [/input-8, 1339] 
split level 3: [/input-8, 1676] [/input-8, 1676] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] [/input-8, 1306] 
split level 4: [/input-8, 1660] [/input-8, 1660] [/input-8, 1314] [/input-8, 1314] [/input-8, 1314] [/input-8, 1314] [/input-8, 1314] [/input-8, 1314] [/input-8, 1314] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0016528517007827759

all verified at 1th iter
Time: prepare 0.0074    bound 0.0139    transfer 0.0009    finalize 0.0016    func 0.0256    
Accumulated time: func 19.2945    prepare 4.5718    bound 11.3531    transfer 0.6219    finalize 1.5009    
all_split False
======================Cut inference begins======================
max lb tensor(0.05806611) min lb tensor(0.00062329)
Number of Verified Splits: 288 of 288
No cut inferred: All or none verified.
Total number of valid cuts: 50.
#cuts 1-3: 50
#cuts >= 20: 0
BICCOS time: 0.008352279663085938 
BICCOS Cumulative time: 22.84601616859436
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0020    decision 0.0187    set_bounds 0.0210    solve 0.0257    add 0.0004    
Accumulated time: pickout 1.4666    decision 5.5014    set_bounds 8.4570    solve 19.7403    add 0.5742    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
74388 domains visited
Cumulative time: 59.56453347206116


Properties batch 3, size 1
Remaining timeout: 138.70519948005676
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 138.7043263912201
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 138.70428490638733
Verifying property 5 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37937427]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
        -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37937427]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 550
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 867
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001354217529296875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37937259674072266
10 lb beta sum: 0.0, worst -0.3793783187866211
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0557    transfer 0.0001    finalize 0.0001    func 0.0562    
Accumulated time: func 0.0562    prepare 0.0002    bound 0.0557    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3] 
split level 1: [/input-12, 49] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 43] 
split level 4: [/input-12, 18] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 6] 
split level 7: [/input-12, 57] 
split level 8: [/input-8, 1693] 
split level 9: [/input-8, 927] 
split level 10: [/input-12, 24] 
split level 11: [/input-8, 1044] 
split level 12: [/input-8, 1692] 
split level 13: [/input-12, 12] 
split level 14: [/input-8, 1057] 
split level 15: [/input-8, 619] 
split level 16: [/input-8, 1630] 
split level 17: [/input-8, 1068] 
split level 18: [/input-8, 1695] 
split level 19: [/input-12, 86] 
split level 20: [/input-8, 382] 
split level 21: [/input-8, 1622] 
split level 22: [/input-8, 1964] 
split level 23: [/input-8, 498] 
split level 24: [/input-8, 1972] 
split level 25: [/input-8, 1967] 
split level 26: [/input-8, 1069] 
split level 27: [/input-8, 626] 
split level 28: [/input-8, 1700] 
split level 29: [/input-8, 1974] 
split level 30: [/input-8, 1268] 
split level 31: [/input-8, 1686] 
split level 32: [/input-8, 593] 
split level 33: [/input-8, 227] 
split level 34: [/input-8, 629] 
split level 35: [/input-8, 1973] 
split level 36: [/input, 1649] 
split level 37: [/input-8, 1683] 
split level 38: [/input-8, 1314] 
split level 39: [/input-8, 635] 
split level 40: [/input-8, 490] 
split level 41: [/input, 2923] 
split level 42: [/input-8, 371] 
split level 43: [/input-8, 1306] 
split level 44: [/input-8, 1762] 
split level 45: [/input-8, 1765] 
split level 46: [/input-8, 1267] 
split level 47: [/input-8, 1403] 
split level 48: [/input-8, 367] 
split level 49: [/input-8, 505] 
split level 50: [/input-8, 633] 
split level 51: [/input-8, 506] 
split level 52: [/input-8, 1773] 
split level 53: [/input-8, 1035] 
split level 54: [/input-8, 934] 
split level 55: [/input-8, 1703] 
split level 56: [/input-8, 468] 
split level 57: [/input-8, 618] 
split level 58: [/input, 385] 
split level 59: [/input-8, 1076] 
split level 60: [/input-8, 1789] 
split level 61: [/input-8, 459] 
split level 62: [/input-8, 1714] 
split level 63: [/input-8, 1650] 
split level 64: [/input-8, 1626] 
split level 65: [/input-8, 462] 
split level 66: [/input-8, 1929] 
split level 67: [/input, 2906] 
split level 68: [/input-8, 636] 
split level 69: [/input-8, 918] 
split level 70: [/input, 1512] 
split level 71: [/input-8, 1659] 
split level 72: [/input-8, 1790] 
split level 73: [/input-8, 1298] 
split level 74: [/input-8, 1294] 
split level 75: [/input-12, 20] 
split level 76: [/input-8, 497] 
split level 77: [/input-8, 466] 
split level 78: [/input-8, 1726] 
split level 79: [/input-8, 380] 
split level 80: [/input-8, 1651] 
split level 81: [/input-8, 1713] 
split level 82: [/input, 2157] 
split level 83: [/input-8, 1997] 
split level 84: [/input-8, 1244] 
split level 85: [/input-8, 1704] 
split level 86: [/input, 1418] 
split level 87: [/input, 2506] 
split level 88: [/input-8, 1681] 
split level 89: [/input-8, 1252] 
split level 90: [/input-8, 1649] 
split level 91: [/input-8, 900] 
split level 92: [/input-8, 1633] 
split level 93: [/input, 2181] 
split level 94: [/input, 2953] 
split level 95: [/input-8, 1708] 
split level 96: [/input-8, 1653] 
split level 97: [/input-8, 1660] 
split level 98: [/input-8, 1746] 
split level 99: [/input-8, 1676] 
split level 100: [/input-8, 1310] 
split level 101: [/input, 110] 
split level 102: [/input-8, 1750] 
split level 103: [/input-8, 1716] 
split level 104: [/input-8, 1064] 
split level 105: [/input-8, 1522] 
split level 106: [/input-8, 1969] 
split level 107: [/input-8, 1612] 
split level 108: [/input-8, 1774] 
split level 109: [/input, 2460] 
split level 110: [/input-8, 898] 
split level 111: [/input, 4005] 
split level 112: [/input, 2412] 
split level 113: [/input-8, 329] 
split level 114: [/input, 2470] 
split level 115: [/input, 867] 
split level 116: [/input-8, 1766] 
split level 117: [/input, 2186] 
split level 118: [/input-8, 473] 
split level 119: [/input, 4023] 
split level 120: [/input-8, 1978] 
split level 121: [/input, 1500] 
split level 122: [/input-8, 1668] 
split level 123: [/input, 2931] 
split level 124: [/input, 2173] 
split level 125: [/input, 151] 
split level 126: [/input, 4021] 
split level 127: [/input, 2555] 
split level 128: [/input, 2440] 
split level 129: [/input-8, 1320] 
split level 130: [/input, 3517] 
split level 131: [/input, 2454] 
split level 132: [/input-8, 1331] 
split level 133: [/input-8, 1770] 
split level 134: [/input, 2982] 
split level 135: [/input, 1365] 
split level 136: [/input-8, 75] 
split level 137: [/input-8, 2028] 
split level 138: [/input, 169] 
split level 139: [/input-8, 1269] 
split level 140: [/input, 1526] 
split level 141: [/input, 881] 
split level 142: [/input-8, 420] 
split level 143: [/input, 89] 
split level 144: [/input, 2538] 
split level 145: [/input-8, 486] 
split level 146: [/input, 2165] 
split level 147: [/input, 2189] 
split level 148: [/input, 3427] 
split level 149: [/input, 2774] 
split level 150: [/input, 2263] 
split level 151: [/input, 3549] 
split level 152: [/input-8, 899] 
split level 153: [/input-8, 1161] 
split level 154: [/input, 2927] 
split level 155: [/input-8, 2029] 
split level 156: [/input, 1478] 
split level 157: [/input, 328] 
split level 158: [/input, 2776] 
split level 159: [/input-8, 1337] 
split level 160: [/input-8, 73] 
split level 161: [/input, 2252] 
split level 162: [/input, 3526] 
split level 163: [/input, 2231] 
split level 164: [/input-8, 410] 
split level 165: [/input-8, 1531] 
split level 166: [/input, 667] 
split level 167: [/input-8, 805] 
split level 168: [/input-8, 74] 
split level 169: [/input, 2519] 
split level 170: [/input-8, 908] 
split level 171: [/input, 2761] 
split level 172: [/input, 408] 
split level 173: [/input, 2374] 
split level 174: [/input, 2404] 
split level 175: [/input, 954] 
split level 176: [/input-8, 1761] 
split level 177: [/input, 1392] 
split level 178: [/input, 2550] 
split level 179: [/input, 1493] 
split level 180: [/input, 3279] 
split level 181: [/input, 3546] 
split level 182: [/input, 2838] 
split level 183: [/input, 2133] 
split level 184: [/input, 344] 
split level 185: [/input, 852] 
split level 186: [/input, 2961] 
split level 187: [/input, 4009] 
split level 188: [/input, 1391] 
split level 189: [/input, 278] 
split level 190: [/input, 3271] 
split level 191: [/input-8, 78] 
split level 192: [/input-8, 1743] 
split level 193: [/input, 141] 
split level 194: [/input, 215] 
split level 195: [/input, 2118] 
split level 196: [/input, 94] 
split level 197: [/input, 2542] 
split level 198: [/input, 2484] 
split level 199: [/input, 3579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3792421817779541
10 lb beta sum: 0.0, worst -0.37924742698669434
Time: prepare 0.0118    bound 0.1001    transfer 0.0039    finalize 0.0027    func 0.1212    
Accumulated time: func 0.1774    prepare 0.0220    bound 0.1558    transfer 0.0040    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.24518454) min lb tensor(-0.37924218)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010464668273925781 
BICCOS Cumulative time: 0.010464668273925781
Preprocessing time: 0.009684324264526367 Inference time: 0.00014853477478027344 Add cuts time: 5.936622619628906e-05 Cut analysis time: 0.0005724430084228516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36536 (1), -0.36534 (1), -0.36514 (1), -0.36460 (1), -0.36438 (1), -0.36371 (1), -0.36366 (1), -0.36343 (1), -0.36308 (1), -0.36247 (1), -0.36222 (1), -0.36154 (1), -0.36136 (1), -0.36056 (1), -0.35983 (1), -0.35897 (1), -0.35869 (1), -0.35734 (1), -0.35660 (1), -0.35591 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5168    set_bounds 0.0085    solve 0.1213    add 0.0865    
Accumulated time: pickout 0.0003    decision 0.5168    set_bounds 0.0085    solve 0.1213    add 0.0865    
Current (lb-rhs): -0.3653562068939209
50 domains visited
Cumulative time: 0.8056435585021973

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3] [/input-12, 49] [/input-12, 3] [/input-12, 49] [/input-12, 49] [/input-12, 3] [/input-12, 49] [/input-12, 3] [/input-12, 49] [/input-12, 49] 
split level 1: [/input-12, 83] [/input-12, 83] [/input-12, 49] [/input-12, 83] [/input-12, 83] [/input-12, 49] [/input-12, 83] [/input-12, 49] [/input-12, 83] [/input-12, 83] 
split level 2: [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 83] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] 
split level 3: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32822108268737793
10 lb beta sum: 0.5766316652297974, worst -0.3254571855068207
Time: prepare 0.0073    bound 0.1180    transfer 0.0007    finalize 0.0024    func 0.1311    
Accumulated time: func 0.3085    prepare 0.0296    bound 0.2738    transfer 0.0048    finalize 0.0052    
all_split False
======================Cut inference begins======================
max lb tensor(0.27090347) min lb tensor(-0.32541406)
Number of Verified Splits: 14 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.01291513442993164 
BICCOS Cumulative time: 0.023379802703857422
Preprocessing time: 0.011666059494018555 Inference time: 0.0006296634674072266 Add cuts time: 0.00030732154846191406 Cut analysis time: 0.0003120899200439453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10103 (2), -0.10096 (2), -0.10023 (2), -0.10005 (2), -0.09792 (2), -0.09732 (2), -0.09688 (2), -0.09667 (2), -0.09573 (2), -0.09552 (2), -0.09515 (2), -0.09497 (2), -0.09456 (2), -0.09160 (2), -0.09032 (2), -0.08948 (2), -0.08910 (2), -0.08859 (2), -0.08516 (2), -0.08476 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0124    solve 0.1312    add 0.0790    
Accumulated time: pickout 0.0014    decision 0.5363    set_bounds 0.0209    solve 0.2525    add 0.1655    
Current (lb-rhs): -0.10102689266204834
100 domains visited
Cumulative time: 1.062441349029541

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] [/input-12, 3] 
split level 1: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 43] [/input-12, 43] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
split level 2: [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 43] [/input-12, 43] 
split level 3: [/input-12, 53] [/input-12, 18] [/input-12, 18] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10227629542350769
10 lb beta sum: 0.9057179093360901, worst -0.028588250279426575
Time: prepare 0.0074    bound 0.1186    transfer 0.0008    finalize 0.0023    func 0.1323    
Accumulated time: func 0.4408    prepare 0.0372    bound 0.3924    transfer 0.0056    finalize 0.0075    
all_split False
======================Cut inference begins======================
max lb tensor(0.25396395) min lb tensor(-0.02376975)
Number of Verified Splits: 366 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.035294532775878906 
BICCOS Cumulative time: 0.05867433547973633
Preprocessing time: 0.011571645736694336 Inference time: 0.015349626541137695 Add cuts time: 0.008070230484008789 Cut analysis time: 0.00030303001403808594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0193    set_bounds 0.0156    solve 0.1324    add 0.0195    
Accumulated time: pickout 0.0025    decision 0.5556    set_bounds 0.0365    solve 0.3849    add 0.1850    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 3] 
split level 1: [/input-12, 49] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 43] 
split level 4: [/input-12, 18] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 24] 
split level 7: [/input-8, 1692] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12267231941223145
10 lb beta sum: 0.12485875934362411, worst -0.12006956338882446
Time: prepare 0.0051    bound 0.1145    transfer 0.0024    finalize 0.0014    func 0.1253    
Accumulated time: func 0.5661    prepare 0.0428    bound 0.5069    transfer 0.0080    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.45828962) min lb tensor(-0.11983740)
Number of Verified Splits: 238 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37937211990356445
10 lb beta sum: 0.519059419631958, worst -0.3115575313568115
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.2556016445159912 
BICCOS Cumulative time: 0.31427597999572754
Preprocessing time: 0.006933689117431641 Inference time: 0.24275684356689453 Add cuts time: 0.005137443542480469 Cut analysis time: 0.0007736682891845703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11984 (8), -0.10409 (8), -0.10356 (8), -0.08936 (8), -0.07662 (8), -0.07011 (8), -0.06219 (8), -0.05899 (8), -0.05775 (8), -0.05587 (8), -0.04661 (8), -0.04621 (8), -0.03353 (8), -0.02407 (8), -0.01909 (8), -0.01493 (8), -0.00842 (8), -0.00829 (8), 
Length of domains: 18
Time: pickout 0.0004    decision 0.0222    set_bounds 0.0210    solve 0.1253    add 0.0010    
Accumulated time: pickout 0.0029    decision 0.5778    set_bounds 0.0575    solve 0.5102    add 0.1860    
Current (lb-rhs): -0.11983740329742432
118 domains visited
Cumulative time: 1.716231107711792

BaB round 2
batch: 18
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1630] [/input-8, 1630] [/input-12, 12] [/input-8, 1972] [/input-12, 12] [/input-12, 12] [/input-8, 1972] [/input-12, 12] [/input-8, 1630] [/input-8, 1630] 
split level 1: [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-12, 12] [/input-8, 1630] [/input-8, 1630] [/input-12, 12] [/input-8, 1630] [/input-8, 1972] [/input-8, 1972] 
split level 2: [/input-8, 1967] [/input-8, 1967] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1630] [/input-8, 1695] [/input-8, 1967] [/input-8, 1967] 
split level 3: [/input-8, 1973] [/input-8, 1973] [/input-8, 1973] [/input-8, 1973] [/input-8, 1651] [/input-8, 1973] [/input-8, 1973] [/input-8, 1306] [/input-8, 1973] [/input-8, 1973] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09612011909484863
10 lb beta sum: 0.3946153223514557, worst -0.09398850798606873
Time: prepare 0.0058    bound 0.1287    transfer 0.0016    finalize 0.0017    func 0.1397    
Accumulated time: func 0.7058    prepare 0.0488    bound 0.6356    transfer 0.0096    finalize 0.0107    
all_split False
======================Cut inference begins======================
max lb tensor(0.05792975) min lb tensor(-0.09389722)
Number of Verified Splits: 171 of 288
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2426135540008545
10 lb beta sum: 0.8909589052200317, worst -0.13430503010749817
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 7
#cuts 4-6: 7
#cuts 7-9: 17
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.255950927734375 
BICCOS Cumulative time: 0.5702269077301025
Preprocessing time: 0.008214473724365234 Inference time: 0.24127197265625 Add cuts time: 0.004742145538330078 Cut analysis time: 0.0017223358154296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09390 (12), -0.09229 (12), -0.08629 (12), -0.08468 (12), -0.08424 (12), -0.08263 (12), -0.07968 (12), -0.07785 (12), -0.07757 (12), -0.07625 (12), -0.07589 (12), -0.07428 (12), -0.07046 (12), -0.07024 (12), -0.06864 (12), -0.06856 (12), -0.06842 (12), -0.06696 (12), -0.06492 (12), -0.06435 (12), 
Length of domains: 117
Time: pickout 0.0014    decision 0.0169    set_bounds 0.0234    solve 0.1404    add 0.0026    
Accumulated time: pickout 0.0043    decision 0.5947    set_bounds 0.0809    solve 0.6507    add 0.1886    
Current (lb-rhs): -0.09389722347259521
235 domains visited
Cumulative time: 2.158430814743042

BaB round 3
batch: 117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1972] [/input-8, 1630] [/input-8, 1068] [/input-8, 1972] [/input-8, 1314] [/input-8, 1630] [/input-8, 1068] [/input-8, 1972] [/input-8, 1314] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09127593040466309
10 lb beta sum: 0.5286834239959717, worst -0.08931076526641846
Time: prepare 0.0050    bound 0.1352    transfer 0.0009    finalize 0.0011    func 0.1437    
Accumulated time: func 0.8496    prepare 0.0540    bound 0.7708    transfer 0.0105    finalize 0.0118    
all_split False
======================Cut inference begins======================
max lb tensor(0.01638269) min lb tensor(-0.08925998)
Number of Verified Splits: 45 of 234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 48.
#cuts 1-3: 7
#cuts 4-6: 24
#cuts 7-9: 14
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.017539501190185547 
BICCOS Cumulative time: 0.5877664089202881
Preprocessing time: 0.007011890411376953 Inference time: 0.004685640335083008 Add cuts time: 0.0037381649017333984 Cut analysis time: 0.0021038055419921875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08926 (13), -0.08733 (13), -0.08160 (13), -0.07966 (13), -0.07959 (13), -0.07765 (13), -0.07506 (13), -0.07443 (13), -0.07379 (13), -0.07326 (13), -0.07237 (13), -0.07132 (13), -0.07111 (13), -0.06918 (13), -0.06742 (13), -0.06621 (13), -0.06576 (13), -0.06556 (13), -0.06543 (13), -0.06481 (13), 
Length of domains: 189
Time: pickout 0.0024    decision 0.0175    set_bounds 0.0119    solve 0.1438    add 0.0038    
Accumulated time: pickout 0.0067    decision 0.6121    set_bounds 0.0927    solve 0.7945    add 0.1924    
Current (lb-rhs): -0.08925998210906982
424 domains visited
Cumulative time: 2.3559796810150146

BaB round 4
batch: 189
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1967] [/input-8, 1967] [/input-8, 1068] [/input-8, 1967] [/input-8, 629] [/input-8, 1967] [/input-8, 1068] [/input-8, 1967] [/input-8, 1964] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08733916282653809
10 lb beta sum: 0.49358949065208435, worst -0.08544880151748657
Time: prepare 0.0078    bound 0.1374    transfer 0.0018    finalize 0.0017    func 0.1513    
Accumulated time: func 1.0009    prepare 0.0620    bound 0.9083    transfer 0.0123    finalize 0.0136    
all_split False
======================Cut inference begins======================
max lb tensor(0.02806163) min lb tensor(-0.08542979)
Number of Verified Splits: 102 of 378
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 13
#cuts 4-6: 21
#cuts 7-9: 11
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.02847886085510254 
BICCOS Cumulative time: 0.6162452697753906
Preprocessing time: 0.011026859283447266 Inference time: 0.010907888412475586 Add cuts time: 0.004701852798461914 Cut analysis time: 0.0018422603607177734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08543 (14), -0.08365 (14), -0.07805 (14), -0.07768 (14), -0.07590 (14), -0.07590 (14), -0.07572 (14), -0.07394 (14), -0.07136 (14), -0.07022 (14), -0.07011 (14), -0.06984 (14), -0.06937 (14), -0.06839 (14), -0.06823 (14), -0.06796 (14), -0.06759 (14), -0.06718 (14), -0.06625 (14), -0.06540 (14), 
Length of domains: 276
Time: pickout 0.0030    decision 0.1659    set_bounds 0.0169    solve 0.1514    add 0.0015    
Accumulated time: pickout 0.0096    decision 0.7781    set_bounds 0.1097    solve 0.9459    add 0.1939    
Current (lb-rhs): -0.08542978763580322
700 domains visited
Cumulative time: 2.7241971492767334

BaB round 5
batch: 276
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1314] [/input-8, 1700] [/input-8, 629] [/input-8, 1314] [/input-8, 1268] [/input-8, 1700] [/input-8, 629] [/input-8, 1964] [/input-8, 1700] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08278012275695801
10 lb beta sum: 0.5098941326141357, worst -0.08081728219985962
Time: prepare 0.0107    bound 0.1370    transfer 0.0027    finalize 0.0024    func 0.1563    
Accumulated time: func 1.1572    prepare 0.0729    bound 1.0453    transfer 0.0150    finalize 0.0159    
all_split False
======================Cut inference begins======================
max lb tensor(0.02220821) min lb tensor(-0.08076984)
Number of Verified Splits: 146 of 552
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 69.
#cuts 1-3: 14
#cuts 4-6: 36
#cuts 7-9: 17
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.04169344902038574 
BICCOS Cumulative time: 0.6579387187957764
Preprocessing time: 0.015584945678710938 Inference time: 0.017864704132080078 Add cuts time: 0.005586862564086914 Cut analysis time: 0.0026569366455078125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08077 (15), -0.07900 (15), -0.07411 (15), -0.07336 (15), -0.07303 (15), -0.07236 (15), -0.07126 (15), -0.07125 (15), -0.07091 (15), -0.06913 (15), -0.06676 (15), -0.06674 (15), -0.06637 (15), -0.06541 (15), -0.06522 (15), -0.06466 (15), -0.06459 (15), -0.06440 (15), -0.06416 (15), -0.06356 (15), 
Length of domains: 406
Time: pickout 0.0047    decision 0.0260    set_bounds 0.0234    solve 0.1565    add 0.0037    
Accumulated time: pickout 0.0143    decision 0.8040    set_bounds 0.1331    solve 1.1024    add 0.1976    
Current (lb-rhs): -0.08076983690261841
1106 domains visited
Cumulative time: 2.981525421142578

BaB round 6
batch: 406
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1314] [/input-8, 1964] [/input-8, 1314] [/input-8, 1973] [/input-8, 1964] [/input-8, 1964] [/input-8, 1314] [/input-8, 1268] [/input-8, 506] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07594513893127441
10 lb beta sum: 0.5245939493179321, worst -0.07399949431419373
Time: prepare 0.0159    bound 0.1377    transfer 0.0016    finalize 0.0033    func 0.1639    
Accumulated time: func 1.3211    prepare 0.0890    bound 1.1829    transfer 0.0166    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.01318812) min lb tensor(-0.07396209)
Number of Verified Splits: 173 of 812
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 82.
#cuts 1-3: 17
#cuts 4-6: 45
#cuts 7-9: 18
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.05747413635253906 
BICCOS Cumulative time: 0.7154128551483154
Preprocessing time: 0.02310466766357422 Inference time: 0.022778987884521484 Add cuts time: 0.008443355560302734 Cut analysis time: 0.003147125244140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07396 (16), -0.07297 (16), -0.07221 (16), -0.07122 (16), -0.06750 (16), -0.06654 (16), -0.06621 (16), -0.06615 (16), -0.06574 (16), -0.06556 (16), -0.06522 (16), -0.06445 (16), -0.06445 (16), -0.06439 (16), -0.06416 (16), -0.06346 (16), -0.06346 (16), -0.06318 (16), -0.06240 (16), -0.06142 (16), 
Length of domains: 639
Time: pickout 0.0067    decision 0.0341    set_bounds 0.0348    solve 0.1640    add 0.0023    
Accumulated time: pickout 0.0210    decision 0.8381    set_bounds 0.1679    solve 1.2665    add 0.1999    
Current (lb-rhs): -0.07396209239959717
1745 domains visited
Cumulative time: 3.2828102111816406

BaB round 7
batch: 639
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1700] [/input-8, 1964] [/input-8, 506] [/input-8, 1700] [/input-8, 1964] [/input-8, 1967] [/input-8, 1700] [/input-8, 1964] [/input-8, 1268] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07150411605834961
10 lb beta sum: 0.5349354147911072, worst -0.06961256265640259
Time: prepare 0.0250    bound 0.1455    transfer 0.0024    finalize 0.0058    func 0.1870    
Accumulated time: func 1.5080    prepare 0.1143    bound 1.3284    transfer 0.0190    finalize 0.0250    
all_split False
======================Cut inference begins======================
max lb tensor(0.02829799) min lb tensor(-0.06960654)
Number of Verified Splits: 289 of 1278
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 91.
#cuts 1-3: 17
#cuts 4-6: 49
#cuts 7-9: 23
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.09047698974609375 
BICCOS Cumulative time: 0.8058898448944092
Preprocessing time: 0.03805804252624512 Inference time: 0.03715372085571289 Add cuts time: 0.012036323547363281 Cut analysis time: 0.003228902816772461
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06961 (17), -0.06867 (17), -0.06776 (17), -0.06683 (17), -0.06300 (17), -0.06216 (17), -0.06181 (17), -0.06170 (17), -0.06123 (17), -0.06115 (17), -0.06089 (17), -0.05997 (17), -0.05996 (17), -0.05982 (17), -0.05982 (17), -0.05904 (17), -0.05903 (17), -0.05888 (17), -0.05797 (17), -0.05703 (17), 
Length of domains: 989
Time: pickout 0.0090    decision 0.0462    set_bounds 0.0540    solve 0.1872    add 0.0032    
Accumulated time: pickout 0.0300    decision 0.8843    set_bounds 0.2219    solve 1.4537    add 0.2031    
Current (lb-rhs): -0.06960654258728027
2734 domains visited
Cumulative time: 3.6774439811706543

BaB round 8
batch: 989
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1306] [/input-8, 1268] [/input-8, 1306] [/input-8, 1268] [/input-8, 1306] [/input-8, 1268] [/input-8, 1306] [/input-8, 1973] [/input-8, 1306] [/input-8, 1268] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06562232971191406
10 lb beta sum: 0.5390039086341858, worst -0.06349143385887146
Time: prepare 0.0389    bound 0.1713    transfer 0.0085    finalize 0.0086    func 0.2409    
Accumulated time: func 1.7490    prepare 0.1534    bound 1.4997    transfer 0.0275    finalize 0.0336    
all_split False
======================Cut inference begins======================
max lb tensor(0.01898158) min lb tensor(-0.06338775)
Number of Verified Splits: 338 of 1978
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 105.
#cuts 1-3: 23
#cuts 4-6: 47
#cuts 7-9: 33
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.1254711151123047 
BICCOS Cumulative time: 0.9313609600067139
Preprocessing time: 0.06070089340209961 Inference time: 0.04578804969787598 Add cuts time: 0.015066385269165039 Cut analysis time: 0.0039157867431640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06339 (18), -0.06227 (18), -0.06176 (18), -0.06154 (18), -0.06106 (18), -0.06044 (18), -0.05990 (18), -0.05922 (18), -0.05673 (18), -0.05594 (18), -0.05560 (18), -0.05528 (18), -0.05512 (18), -0.05492 (18), -0.05483 (18), -0.05449 (18), -0.05431 (18), -0.05405 (18), -0.05397 (18), -0.05376 (18), 
Length of domains: 1640
Time: pickout 0.0181    decision 0.0655    set_bounds 0.0834    solve 0.2414    add 0.0049    
Accumulated time: pickout 0.0481    decision 0.9498    set_bounds 0.3053    solve 1.6951    add 0.2080    
Current (lb-rhs): -0.06338775157928467
4374 domains visited
Cumulative time: 4.220907926559448

BaB round 9
batch: 1640
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] [/input-8, 1714] [/input-8, 1057] [/input-8, 1268] [/input-8, 1057] [/input-8, 1714] [/input-8, 1057] [/input-8, 1973] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.061804771423339844
10 lb beta sum: 0.5200138092041016, worst -0.059912264347076416
Time: prepare 0.0689    bound 0.2468    transfer 0.0085    finalize 0.0144    func 0.3608    
Accumulated time: func 2.1098    prepare 0.2225    bound 1.7465    transfer 0.0360    finalize 0.0480    
all_split False
======================Cut inference begins======================
max lb tensor(0.01724333) min lb tensor(-0.05990374)
Number of Verified Splits: 753 of 3280
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 120.
#cuts 1-3: 22
#cuts 4-6: 70
#cuts 7-9: 26
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.2433922290802002 
BICCOS Cumulative time: 1.174753189086914
Preprocessing time: 0.10102486610412598 Inference time: 0.10634994506835938 Add cuts time: 0.031223773956298828 Cut analysis time: 0.004793643951416016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05990 (19), -0.05889 (19), -0.05823 (19), -0.05806 (19), -0.05766 (19), -0.05705 (19), -0.05639 (19), -0.05581 (19), -0.05325 (19), -0.05244 (19), -0.05211 (19), -0.05188 (19), -0.05152 (19), -0.05143 (19), -0.05140 (19), -0.05110 (19), -0.05078 (19), -0.05057 (19), -0.05043 (19), -0.05026 (19), 
Length of domains: 2527
Time: pickout 0.0239    decision 0.2334    set_bounds 0.1408    solve 0.3615    add 0.0102    
Accumulated time: pickout 0.0720    decision 1.1832    set_bounds 0.4461    solve 2.0566    add 0.2181    
Current (lb-rhs): -0.059903740882873535
6901 domains visited
Cumulative time: 5.247292518615723

BaB round 10
batch: 2527
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 506] [/input-8, 1306] [/input-8, 506] [/input-8, 506] [/input-8, 1268] [/input-8, 1714] [/input-8, 506] [/input-8, 1306] [/input-8, 506] [/input-8, 468] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05744028091430664
10 lb beta sum: 0.5106186866760254, worst -0.06291317939758301
Time: prepare 0.1049    bound 0.3509    transfer 0.0263    finalize 0.0224    func 0.5385    
Accumulated time: func 2.6482    prepare 0.3277    bound 2.0974    transfer 0.0623    finalize 0.0704    
all_split False
======================Cut inference begins======================
max lb tensor(0.01573873) min lb tensor(-0.05549347)
Number of Verified Splits: 1378 of 5054
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 142.
#cuts 1-3: 28
#cuts 4-6: 77
#cuts 7-9: 35
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.4137246608734131 
BICCOS Cumulative time: 1.5884778499603271
Preprocessing time: 0.15717220306396484 Inference time: 0.20838332176208496 Add cuts time: 0.042528390884399414 Cut analysis time: 0.005640745162963867
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05549 (20), -0.05448 (20), -0.05378 (20), -0.05365 (20), -0.05324 (20), -0.05277 (20), -0.05263 (20), -0.05195 (20), -0.05177 (20), -0.05139 (20), -0.05106 (20), -0.05092 (20), -0.05053 (20), -0.04992 (20), -0.04922 (20), -0.04883 (20), -0.04869 (20), -0.04801 (20), -0.04770 (20), -0.04742 (20), 
Length of domains: 3676
Time: pickout 0.0359    decision 0.1459    set_bounds 0.3482    solve 0.5396    add 0.0179    
Accumulated time: pickout 0.1079    decision 1.3291    set_bounds 0.7943    solve 2.5962    add 0.2360    
Current (lb-rhs): -0.05549347400665283
10577 domains visited
Cumulative time: 6.766946792602539

BaB round 11
batch: 3676
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1068] [/input-8, 629] [/input-8, 1068] [/input-8, 1068] [/input-8, 1068] [/input-8, 629] [/input-8, 1068] [/input-8, 1068] [/input-8, 629] [/input-8, 1068] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05504035949707031
10 lb beta sum: 0.5048708915710449, worst -0.05317479372024536
Time: prepare 0.1537    bound 0.4810    transfer 0.0369    finalize 0.1820    func 0.9027    
Accumulated time: func 3.5510    prepare 0.4817    bound 2.5784    transfer 0.0992    finalize 0.2524    
all_split False
======================Cut inference begins======================
max lb tensor(0.21608485) min lb tensor(-0.05316839)
Number of Verified Splits: 3013 of 7352
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 170.
#cuts 1-3: 25
#cuts 4-6: 112
#cuts 7-9: 31
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.8008770942687988 
BICCOS Cumulative time: 2.389354944229126
Preprocessing time: 0.22856473922729492 Inference time: 0.4858365058898926 Add cuts time: 0.07947635650634766 Cut analysis time: 0.006999492645263672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05317 (21), -0.05214 (21), -0.05147 (21), -0.05138 (21), -0.05091 (21), -0.05045 (21), -0.05035 (21), -0.04968 (21), -0.04944 (21), -0.04912 (21), -0.04876 (21), -0.04866 (21), -0.04821 (21), -0.04765 (21), -0.04695 (21), -0.04652 (21), -0.04642 (21), -0.04568 (21), -0.04537 (21), -0.04505 (21), 
Length of domains: 4339
Time: pickout 0.0652    decision 0.3675    set_bounds 0.3255    solve 0.9042    add 0.0145    
Accumulated time: pickout 0.1731    decision 1.6966    set_bounds 1.1198    solve 3.5004    add 0.2505    
Current (lb-rhs): -0.05316838622093201
14916 domains visited
Cumulative time: 9.27902603149414

BaB round 12
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1068] [/input-8, 1622] [/input-8, 1622] [/input-8, 1068] [/input-8, 1622] [/input-8, 1622] [/input-8, 1068] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.052580833435058594
10 lb beta sum: 0.5789356827735901, worst -0.050703585147857666
Time: prepare 0.1799    bound 0.5353    transfer 0.0394    finalize 0.0485    func 1.0230    
Accumulated time: func 4.5740    prepare 0.6619    bound 3.1137    transfer 0.1386    finalize 0.3009    
all_split False
======================Cut inference begins======================
max lb tensor(0.38925207) min lb tensor(-0.05069217)
Number of Verified Splits: 4980 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 145.
#cuts 1-3: 25
#cuts 4-6: 104
#cuts 7-9: 14
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.1756269931793213 
BICCOS Cumulative time: 3.5649819374084473
Preprocessing time: 0.2565333843231201 Inference time: 0.8043277263641357 Add cuts time: 0.10964226722717285 Cut analysis time: 0.005123615264892578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05069 (22), -0.04967 (22), -0.04900 (22), -0.04890 (22), -0.04843 (22), -0.04797 (22), -0.04788 (22), -0.04721 (22), -0.04697 (22), -0.04663 (22), -0.04627 (22), -0.04618 (22), -0.04573 (22), -0.04518 (22), -0.04449 (22), -0.04404 (22), -0.04394 (22), -0.04321 (22), -0.04300 (22), -0.04255 (22), 
Length of domains: 3455
Time: pickout 0.0624    decision 0.2248    set_bounds 0.5263    solve 1.0244    add 0.0155    
Accumulated time: pickout 0.2355    decision 1.9214    set_bounds 1.6461    solve 4.5248    add 0.2660    
Current (lb-rhs): -0.05069217085838318
18128 domains visited
current_vram/total_varm: 9.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 12.370460033416748

BaB round 13
batch: 3455
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05109882354736328
10 lb beta sum: 0.6865778565406799, worst -0.04617077112197876
Time: prepare 0.1504    bound 0.4599    transfer 0.0354    finalize 0.0371    func 0.7284    
Accumulated time: func 5.3023    prepare 0.8126    bound 3.5737    transfer 0.1741    finalize 0.3379    
all_split False
======================Cut inference begins======================
max lb tensor(0.03963369) min lb tensor(-0.04616234)
Number of Verified Splits: 4628 of 6910
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 119.
#cuts 1-3: 24
#cuts 4-6: 84
#cuts 7-9: 9
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 1.221592664718628 
BICCOS Cumulative time: 4.786574602127075
Preprocessing time: 0.22036981582641602 Inference time: 0.9155797958374023 Add cuts time: 0.08158731460571289 Cut analysis time: 0.00405573844909668
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04616 (23), -0.04513 (23), -0.04446 (23), -0.04436 (23), -0.04388 (23), -0.04340 (23), -0.04332 (23), -0.04265 (23), -0.04239 (23), -0.04207 (23), -0.04169 (23), -0.04160 (23), -0.04114 (23), -0.04059 (23), -0.03989 (23), -0.03959 (23), -0.03934 (23), -0.03864 (23), -0.03850 (23), -0.03807 (23), 
Length of domains: 2282
Time: pickout 0.0515    decision 0.1929    set_bounds 0.4617    solve 0.7303    add 0.0234    
Accumulated time: pickout 0.2870    decision 2.1143    set_bounds 2.1078    solve 5.2551    add 0.2894    
Current (lb-rhs): -0.04616233706474304
20410 domains visited
Cumulative time: 15.099348306655884

BaB round 14
batch: 2282
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04801797866821289
10 lb beta sum: 0.8240928053855896, worst -0.08415237069129944
Time: prepare 0.0988    bound 0.3222    transfer 0.0230    finalize 0.0248    func 0.4986    
Accumulated time: func 5.8009    prepare 0.9117    bound 3.8958    transfer 0.1970    finalize 0.3627    
all_split False
======================Cut inference begins======================
max lb tensor(0.70358407) min lb tensor(-0.04615983)
Number of Verified Splits: 3247 of 4564
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 101.
#cuts 1-3: 19
#cuts 4-6: 73
#cuts 7-9: 7
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.743720293045044 
BICCOS Cumulative time: 5.530294895172119
Preprocessing time: 0.1437969207763672 Inference time: 0.5413599014282227 Add cuts time: 0.05522489547729492 Cut analysis time: 0.0033385753631591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04616 (24), -0.04512 (24), -0.04436 (24), -0.04340 (24), -0.04332 (24), -0.04238 (24), -0.04160 (24), -0.04103 (24), -0.04058 (24), -0.04045 (24), -0.03921 (24), -0.03864 (24), -0.03863 (24), -0.03827 (24), -0.03774 (24), -0.03771 (24), -0.03760 (24), -0.03691 (24), -0.03669 (24), -0.03652 (24), 
Length of domains: 1317
Time: pickout 0.0548    decision 0.1321    set_bounds 0.1972    solve 0.6699    add 0.0094    
Accumulated time: pickout 0.3418    decision 2.2465    set_bounds 2.3049    solve 5.9250    add 0.2987    
Current (lb-rhs): -0.046159833669662476
21727 domains visited
Cumulative time: 16.940637826919556

BaB round 15
batch: 1317
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0445857048034668
10 lb beta sum: 0.7416979670524597, worst -0.07680466771125793
Time: prepare 0.0548    bound 0.2130    transfer 0.0103    finalize 0.0148    func 0.3100    
Accumulated time: func 6.1109    prepare 0.9668    bound 4.1088    transfer 0.2073    finalize 0.3776    
all_split False
======================Cut inference begins======================
max lb tensor(0.38264406) min lb tensor(-0.04272902)
Number of Verified Splits: 1096 of 2634
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 85.
#cuts 1-3: 24
#cuts 4-6: 52
#cuts 7-9: 7
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.2922039031982422 
BICCOS Cumulative time: 5.822498798370361
Preprocessing time: 0.08173513412475586 Inference time: 0.18715977668762207 Add cuts time: 0.02072906494140625 Cut analysis time: 0.002579927444458008
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04273 (25), -0.04169 (25), -0.04102 (25), -0.04091 (25), -0.04045 (25), -0.03987 (25), -0.03920 (25), -0.03863 (25), -0.03838 (25), -0.03737 (25), -0.03657 (25), -0.03655 (25), -0.03652 (25), -0.03556 (25), -0.03551 (25), -0.03551 (25), -0.03528 (25), -0.03472 (25), -0.03454 (25), -0.03424 (25), 
Length of domains: 1538
Time: pickout 0.0277    decision 0.0808    set_bounds 0.1161    solve 0.3111    add 0.0048    
Accumulated time: pickout 0.3695    decision 2.3273    set_bounds 2.4210    solve 6.2361    add 0.3036    
Current (lb-rhs): -0.04272902011871338
23265 domains visited
Cumulative time: 17.78760051727295

BaB round 16
batch: 1538
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 86] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1651] [/input-8, 1626] [/input-8, 1626] [/input-12, 86] [/input-12, 86] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04192781448364258
10 lb beta sum: 0.6800697445869446, worst -0.08036255836486816
Time: prepare 0.0629    bound 0.2359    transfer 0.0120    finalize 0.0156    func 0.3472    
Accumulated time: func 6.4582    prepare 1.0299    bound 4.3447    transfer 0.2193    finalize 0.3931    
all_split False
======================Cut inference begins======================
max lb tensor(0.38614523) min lb tensor(-0.04006898)
Number of Verified Splits: 1627 of 3076
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 90.
#cuts 1-3: 29
#cuts 4-6: 53
#cuts 7-9: 6
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.40896010398864746 
BICCOS Cumulative time: 6.231458902359009
Preprocessing time: 0.09505295753479004 Inference time: 0.283430814743042 Add cuts time: 0.027806758880615234 Cut analysis time: 0.0026695728302001953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04007 (26), -0.03903 (26), -0.03836 (26), -0.03805 (26), -0.03779 (26), -0.03702 (26), -0.03635 (26), -0.03577 (26), -0.03570 (26), -0.03470 (26), -0.03389 (26), -0.03385 (26), -0.03369 (26), -0.03331 (26), -0.03286 (26), -0.03284 (26), -0.03272 (26), -0.03268 (26), -0.03183 (26), -0.03179 (26), 
Length of domains: 1449
Time: pickout 0.0268    decision 0.2308    set_bounds 0.1344    solve 0.3479    add 0.0058    
Accumulated time: pickout 0.3963    decision 2.5581    set_bounds 2.5554    solve 6.5840    add 0.3094    
Current (lb-rhs): -0.040068984031677246
24714 domains visited
Cumulative time: 18.962137699127197

BaB round 17
batch: 1449
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-12, 86] [/input-8, 1268] [/input-8, 1268] [/input-8, 1268] [/input-8, 1268] [/input-8, 1268] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03865480422973633
10 lb beta sum: 0.6357008218765259, worst -0.09529769420623779
Time: prepare 0.0590    bound 0.2265    transfer 0.0113    finalize 0.0161    func 0.3322    
Accumulated time: func 6.7904    prepare 1.0891    bound 4.5712    transfer 0.2306    finalize 0.4092    
all_split False
======================Cut inference begins======================
max lb tensor(0.29611671) min lb tensor(-0.03678524)
Number of Verified Splits: 1313 of 2898
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 96.
#cuts 1-3: 33
#cuts 4-6: 57
#cuts 7-9: 4
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.35617566108703613 
BICCOS Cumulative time: 6.587634563446045
Preprocessing time: 0.08970761299133301 Inference time: 0.23756957054138184 Add cuts time: 0.026096582412719727 Cut analysis time: 0.0028018951416015625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03679 (27), -0.03575 (27), -0.03508 (27), -0.03491 (27), -0.03450 (27), -0.03387 (27), -0.03321 (27), -0.03263 (27), -0.03253 (27), -0.03153 (27), -0.03071 (27), -0.03068 (27), -0.03068 (27), -0.03030 (27), -0.03003 (27), -0.02967 (27), -0.02967 (27), -0.02967 (27), -0.02944 (27), -0.02926 (27), 
Length of domains: 1585
Time: pickout 0.0260    decision 0.0875    set_bounds 0.2546    solve 0.3329    add 0.0051    
Accumulated time: pickout 0.4223    decision 2.6456    set_bounds 2.8100    solve 6.9169    add 0.3145    
Current (lb-rhs): -0.036785244941711426
26299 domains visited
Cumulative time: 20.042370080947876

BaB round 18
batch: 1585
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 86] [/input-8, 1716] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] [/input-8, 1714] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03338456153869629
10 lb beta sum: 0.5991031527519226, worst -0.09007155895233154
Time: prepare 0.0659    bound 0.2414    transfer 0.0124    finalize 0.1488    func 0.4890    
Accumulated time: func 7.2794    prepare 1.1553    bound 4.8125    transfer 0.2430    finalize 0.5580    
all_split False
======================Cut inference begins======================
max lb tensor(0.43317109) min lb tensor(-0.03147206)
Number of Verified Splits: 1276 of 3170
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 76.
#cuts 1-3: 27
#cuts 4-6: 46
#cuts 7-9: 1
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.3527371883392334 
BICCOS Cumulative time: 6.940371751785278
Preprocessing time: 0.09675955772399902 Inference time: 0.23389601707458496 Add cuts time: 0.019913196563720703 Cut analysis time: 0.002168416976928711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03147 (28), -0.03048 (28), -0.03046 (28), -0.02977 (28), -0.02960 (28), -0.02949 (28), -0.02921 (28), -0.02910 (28), -0.02878 (28), -0.02861 (28), -0.02859 (28), -0.02824 (28), -0.02810 (28), -0.02789 (28), -0.02762 (28), -0.02739 (28), -0.02734 (28), -0.02725 (28), -0.02723 (28), -0.02690 (28), 
Length of domains: 1894
Time: pickout 0.0277    decision 0.0955    set_bounds 0.1381    solve 0.4902    add 0.0060    
Accumulated time: pickout 0.4500    decision 2.7411    set_bounds 2.9481    solve 7.4071    add 0.3205    
Current (lb-rhs): -0.03147205710411072
28193 domains visited
Cumulative time: 21.169886827468872

BaB round 19
batch: 1894
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] [/input-8, 505] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.031200885772705078
10 lb beta sum: 0.5591222643852234, worst -0.04478156566619873
Time: prepare 0.0791    bound 0.2731    transfer 0.0145    finalize 0.0181    func 0.4096    
Accumulated time: func 7.6889    prepare 1.2346    bound 5.0857    transfer 0.2575    finalize 0.5761    
all_split False
======================Cut inference begins======================
max lb tensor(0.04917353) min lb tensor(-0.02932939)
Number of Verified Splits: 1766 of 3788
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 108.
#cuts 1-3: 31
#cuts 4-6: 74
#cuts 7-9: 1
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.6236655712127686 
BICCOS Cumulative time: 7.564037322998047
Preprocessing time: 0.11727595329284668 Inference time: 0.4754629135131836 Add cuts time: 0.027960538864135742 Cut analysis time: 0.002966165542602539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02933 (29), -0.02832 (29), -0.02801 (29), -0.02762 (29), -0.02746 (29), -0.02707 (29), -0.02705 (29), -0.02699 (29), -0.02645 (29), -0.02630 (29), -0.02613 (29), -0.02605 (29), -0.02575 (29), -0.02575 (29), -0.02534 (29), -0.02520 (29), -0.02518 (29), -0.02511 (29), -0.02501 (29), -0.02480 (29), 
Length of domains: 2022
Time: pickout 0.0374    decision 0.1118    set_bounds 0.1705    solve 0.4105    add 0.0069    
Accumulated time: pickout 0.4874    decision 2.8528    set_bounds 3.1186    solve 7.8176    add 0.3275    
Current (lb-rhs): -0.029329389333724976
30215 domains visited
Cumulative time: 22.552385091781616

BaB round 20
batch: 2022
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] [/input-8, 468] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0259859561920166
10 lb beta sum: 0.4858652949333191, worst -0.023963570594787598
Time: prepare 0.0836    bound 0.2903    transfer 0.0153    finalize 0.0194    func 0.4355    
Accumulated time: func 8.1244    prepare 1.3185    bound 5.3760    transfer 0.2728    finalize 0.5955    
all_split False
======================Cut inference begins======================
max lb tensor(0.01374829) min lb tensor(-0.02389017)
Number of Verified Splits: 1904 of 4044
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 80.
#cuts 1-3: 30
#cuts 4-6: 47
#cuts 7-9: 1
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.6707391738891602 
BICCOS Cumulative time: 8.234776496887207
Preprocessing time: 0.12418746948242188 Inference time: 0.5187556743621826 Add cuts time: 0.02567124366760254 Cut analysis time: 0.002124786376953125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02389 (30), -0.02319 (30), -0.02294 (30), -0.02256 (30), -0.02217 (30), -0.02210 (30), -0.02202 (30), -0.02186 (30), -0.02160 (30), -0.02159 (30), -0.02153 (30), -0.02147 (30), -0.02131 (30), -0.02107 (30), -0.02101 (30), -0.02090 (30), -0.02082 (30), -0.02078 (30), -0.02069 (30), -0.02067 (30), 
Length of domains: 2140
Time: pickout 0.0372    decision 0.1174    set_bounds 0.1804    solve 0.4364    add 0.0085    
Accumulated time: pickout 0.5245    decision 2.9702    set_bounds 3.2990    solve 8.2540    add 0.3360    
Current (lb-rhs): -0.023890167474746704
32355 domains visited
Cumulative time: 24.027892589569092

BaB round 21
batch: 2140
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.023197650909423828
10 lb beta sum: 0.43258264660835266, worst -0.02129417657852173
Time: prepare 0.0894    bound 0.3006    transfer 0.0166    finalize 0.0209    func 0.4553    
Accumulated time: func 8.5797    prepare 1.4081    bound 5.6766    transfer 0.2894    finalize 0.6164    
all_split False
======================Cut inference begins======================
max lb tensor(0.01621592) min lb tensor(-0.02127281)
Number of Verified Splits: 2729 of 4280
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 55.
#cuts 1-3: 49
#cuts 4-6: 3
#cuts 7-9: 1
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.8422298431396484 
BICCOS Cumulative time: 9.077006340026855
Preprocessing time: 0.13444900512695312 Inference time: 0.6797671318054199 Add cuts time: 0.026662588119506836 Cut analysis time: 0.0013511180877685547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02127 (31), -0.02062 (31), -0.02030 (31), -0.01994 (31), -0.01960 (31), -0.01953 (31), -0.01940 (31), -0.01929 (31), -0.01900 (31), -0.01899 (31), -0.01895 (31), -0.01890 (31), -0.01875 (31), -0.01846 (31), -0.01843 (31), -0.01834 (31), -0.01826 (31), -0.01820 (31), -0.01807 (31), -0.01803 (31), 
Length of domains: 1551
Time: pickout 0.0385    decision 0.1232    set_bounds 0.1898    solve 0.4564    add 0.0055    
Accumulated time: pickout 0.5630    decision 3.0934    set_bounds 3.4888    solve 8.7105    add 0.3416    
Current (lb-rhs): -0.02127280831336975
33906 domains visited
Cumulative time: 25.712172746658325

BaB round 22
batch: 1551
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] [/input-8, 1773] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02129364013671875
10 lb beta sum: 0.5281249284744263, worst -0.03783988952636719
Time: prepare 0.0631    bound 0.2344    transfer 0.0053    finalize 0.0150    func 0.3386    
Accumulated time: func 8.9184    prepare 1.4715    bound 5.9110    transfer 0.2947    finalize 0.6314    
all_split False
======================Cut inference begins======================
max lb tensor(0.01868835) min lb tensor(-0.01942480)
Number of Verified Splits: 2168 of 3102
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 56.
#cuts 1-3: 51
#cuts 4-6: 2
#cuts 7-9: 1
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.5484535694122314 
BICCOS Cumulative time: 9.625459909439087
Preprocessing time: 0.09730672836303711 Inference time: 0.43192219734191895 Add cuts time: 0.01792001724243164 Cut analysis time: 0.00130462646484375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01942 (32), -0.01877 (32), -0.01844 (32), -0.01809 (32), -0.01775 (32), -0.01768 (32), -0.01748 (32), -0.01744 (32), -0.01716 (32), -0.01714 (32), -0.01709 (32), -0.01705 (32), -0.01683 (32), -0.01660 (32), -0.01650 (32), -0.01649 (32), -0.01641 (32), -0.01635 (32), -0.01616 (32), -0.01615 (32), 
Length of domains: 934
Time: pickout 0.0331    decision 0.0949    set_bounds 0.1390    solve 0.3393    add 0.0039    
Accumulated time: pickout 0.5961    decision 3.1883    set_bounds 3.6278    solve 9.0498    add 0.3454    
Current (lb-rhs): -0.019424796104431152
34840 domains visited
Cumulative time: 26.89351797103882

BaB round 23
batch: 934
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] [/input-8, 626] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01825714111328125
10 lb beta sum: 0.4215444028377533, worst -0.01635652780532837
Time: prepare 0.0400    bound 0.1658    transfer 0.0028    finalize 0.0090    func 0.2307    
Accumulated time: func 9.1491    prepare 1.5117    bound 6.0768    transfer 0.2975    finalize 0.6405    
all_split False
======================Cut inference begins======================
max lb tensor(0.01106310) min lb tensor(-0.01634082)
Number of Verified Splits: 1190 of 1868
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 30
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.3061790466308594 
BICCOS Cumulative time: 9.931638956069946
Preprocessing time: 0.058141231536865234 Inference time: 0.2366044521331787 Add cuts time: 0.010640382766723633 Cut analysis time: 0.0007929801940917969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01634 (33), -0.01569 (33), -0.01564 (33), -0.01532 (33), -0.01499 (33), -0.01464 (33), -0.01464 (33), -0.01460 (33), -0.01440 (33), -0.01408 (33), -0.01396 (33), -0.01395 (33), -0.01393 (33), -0.01390 (33), -0.01375 (33), -0.01370 (33), -0.01349 (33), -0.01337 (33), -0.01337 (33), -0.01329 (33), 
Length of domains: 678
Time: pickout 0.0196    decision 0.0606    set_bounds 0.2059    solve 0.2311    add 0.0034    
Accumulated time: pickout 0.6157    decision 3.2489    set_bounds 3.8337    solve 9.2809    add 0.3489    
Current (lb-rhs): -0.016340821981430054
35518 domains visited
Cumulative time: 27.731811046600342

BaB round 24
batch: 678
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] [/input-8, 618] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.014639616012573242
10 lb beta sum: 0.5494349002838135, worst -0.012771427631378174
Time: prepare 0.0277    bound 0.1476    transfer 0.0056    finalize 0.0064    func 0.1960    
Accumulated time: func 9.3451    prepare 1.5397    bound 6.2245    transfer 0.3031    finalize 0.6468    
all_split False
======================Cut inference begins======================
max lb tensor(0.23856723) min lb tensor(-0.01275524)
Number of Verified Splits: 888 of 1356
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 33
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.22913336753845215 
BICCOS Cumulative time: 10.160772323608398
Preprocessing time: 0.04128432273864746 Inference time: 0.18087458610534668 Add cuts time: 0.006227731704711914 Cut analysis time: 0.0007467269897460938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01276 (34), -0.01210 (34), -0.01201 (34), -0.01186 (34), -0.01137 (34), -0.01120 (34), -0.01108 (34), -0.01098 (34), -0.01081 (34), -0.01066 (34), -0.01062 (34), -0.01047 (34), -0.01044 (34), -0.01036 (34), -0.01018 (34), -0.01018 (34), -0.01016 (34), -0.01008 (34), -0.01007 (34), -0.00999 (34), 
Length of domains: 468
Time: pickout 0.0156    decision 0.0473    set_bounds 0.0596    solve 0.1963    add 0.0033    
Accumulated time: pickout 0.6313    decision 3.2961    set_bounds 3.8933    solve 9.4773    add 0.3522    
Current (lb-rhs): -0.012755244970321655
35986 domains visited
Cumulative time: 28.289287090301514

BaB round 25
batch: 468
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.010897397994995117
10 lb beta sum: 0.5099223256111145, worst -0.009018480777740479
Time: prepare 0.0189    bound 0.1377    transfer 0.0016    finalize 0.0043    func 0.1685    
Accumulated time: func 9.5136    prepare 1.5588    bound 6.3621    transfer 0.3046    finalize 0.6511    
all_split False
======================Cut inference begins======================
max lb tensor(0.00493811) min lb tensor(-0.00901237)
Number of Verified Splits: 654 of 936
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 33
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.169478178024292 
BICCOS Cumulative time: 10.33025050163269
Preprocessing time: 0.02847456932067871 Inference time: 0.13550019264221191 Add cuts time: 0.004774808883666992 Cut analysis time: 0.000728607177734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00901 (35), -0.00843 (35), -0.00836 (35), -0.00831 (35), -0.00778 (35), -0.00776 (35), -0.00767 (35), -0.00765 (35), -0.00725 (35), -0.00724 (35), -0.00711 (35), -0.00707 (35), -0.00697 (35), -0.00692 (35), -0.00687 (35), -0.00682 (35), -0.00672 (35), -0.00668 (35), -0.00667 (35), -0.00664 (35), 
Length of domains: 282
Time: pickout 0.0112    decision 0.0359    set_bounds 0.0409    solve 0.1687    add 0.0034    
Accumulated time: pickout 0.6425    decision 3.3320    set_bounds 3.9342    solve 9.6459    add 0.3555    
Current (lb-rhs): -0.009012371301651001
36268 domains visited
Cumulative time: 28.723159313201904

BaB round 26
batch: 282
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1651] [/input-8, 1626] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0885206460952759, worst -0.006441265344619751
10 lb beta sum: 1.0885206460952759, worst -0.006384998559951782
Time: prepare 0.0245    bound 0.1385    transfer 0.0016    finalize 0.0025    func 0.1709    
Accumulated time: func 9.6844    prepare 1.5836    bound 6.5006    transfer 0.3062    finalize 0.6536    
all_split False
======================Cut inference begins======================
max lb tensor(0.00576401) min lb tensor(-0.00637189)
Number of Verified Splits: 387 of 564
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 34
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.10136270523071289 
BICCOS Cumulative time: 10.431613206863403
Preprocessing time: 0.016360044479370117 Inference time: 0.08127212524414062 Add cuts time: 0.002996206283569336 Cut analysis time: 0.0007343292236328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00637 (36), -0.00572 (36), -0.00572 (36), -0.00507 (36), -0.00502 (36), -0.00461 (36), -0.00443 (36), -0.00437 (36), -0.00432 (36), -0.00429 (36), -0.00426 (36), -0.00408 (36), -0.00395 (36), -0.00389 (36), -0.00385 (36), -0.00383 (36), -0.00378 (36), -0.00377 (36), -0.00363 (36), -0.00361 (36), 
Length of domains: 177
Time: pickout 0.0068    decision 0.0263    set_bounds 0.0243    solve 0.1710    add 0.0030    
Accumulated time: pickout 0.6493    decision 3.3583    set_bounds 3.9585    solve 9.8170    add 0.3586    
Current (lb-rhs): -0.006371885538101196
36445 domains visited
Cumulative time: 29.05840253829956

BaB round 27
batch: 177
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1713] [/input-8, 1626] [/input-8, 1626] [/input-8, 1713] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.004878997802734375
10 lb beta sum: 0.30822357535362244, worst -0.002315342426300049
Time: prepare 0.0072    bound 0.1355    transfer 0.0008    finalize 0.0016    func 0.1475    
Accumulated time: func 9.8320    prepare 1.5910    bound 6.6361    transfer 0.3070    finalize 0.6553    
all_split False
======================Cut inference begins======================
max lb tensor(0.00516507) min lb tensor(-0.00229940)
Number of Verified Splits: 337 of 354
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.08461308479309082 
BICCOS Cumulative time: 10.516226291656494
Preprocessing time: 0.010271072387695312 Inference time: 0.07121109962463379 Add cuts time: 0.00237274169921875 Cut analysis time: 0.0007581710815429688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00230 (37), -0.00228 (37), -0.00163 (37), -0.00118 (37), -0.00115 (37), -0.00111 (37), -0.00091 (37), -0.00088 (37), -0.00081 (37), -0.00066 (37), -0.00061 (37), -0.00051 (37), -0.00044 (37), -0.00043 (37), -0.00026 (37), -0.00017 (37), -0.00000 (37), 
Length of domains: 17
Time: pickout 0.0046    decision 0.0209    set_bounds 0.0154    solve 0.1476    add 0.0008    
Accumulated time: pickout 0.6539    decision 3.3792    set_bounds 3.9738    solve 9.9646    add 0.3594    
Current (lb-rhs): -0.002299398183822632
36462 domains visited
Cumulative time: 29.33428192138672

BaB round 28
batch: 17
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] [/input, 1649] 
split level 1: [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1064] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1969] 
split level 2: [/input-8, 1676] [/input-8, 1676] [/input-8, 1676] [/input-8, 1676] [/input-8, 1676] [/input-8, 1969] [/input-8, 1676] [/input-8, 1676] [/input-8, 1676] [/input-8, 1064] 
split level 3: [/input-8, 1064] [/input-8, 1064] [/input-8, 1064] [/input-8, 1064] [/input-8, 1064] [/input-8, 1676] [/input-8, 1064] [/input-8, 1064] [/input-8, 1064] [/input-8, 1676] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.005735158920288086

all verified at 0th iter
Time: prepare 0.0067    bound 0.0051    transfer 0.0005    finalize 0.0015    func 0.0155    
Accumulated time: func 9.8474    prepare 1.5979    bound 6.6412    transfer 0.3075    finalize 0.6567    
all_split False
======================Cut inference begins======================
max lb tensor(0.01737809) min lb tensor(0.00573516)
Number of Verified Splits: 272 of 272
No cut inferred: All or none verified.
Total number of valid cuts: 39.
#cuts 1-3: 37
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.007992029190063477 
BICCOS Cumulative time: 10.524218320846558
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0016    decision 0.0170    set_bounds 0.0205    solve 0.0155    add 0.0001    
Accumulated time: pickout 0.6555    decision 3.3961    set_bounds 3.9943    solve 9.9801    add 0.3595    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
36462 domains visited
Cumulative time: 29.398266077041626


Properties batch 6, size 1
Remaining timeout: 109.13316655158997
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 109.13249516487122
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 109.13244867324829
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 90.8676 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
         -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1165]; unstable size 1165; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 251, 1, 1165] with unstable size 250 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 1165] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1165] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [250]; unstable size 250; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 250] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.62490320,  8.33701801,  2.59462070, -0.24409169,  2.26730275,
          1.36074936,  2.49958348,  5.18873596,  7.07310247]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
         -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.62it/s]100%|██████████| 1/1 [00:00<00:00,  8.61it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.16810417, -25.43053436, -15.60754871, -19.06594658, -15.93624115,
          -18.74472427, -17.98241234, -19.17751884, -22.21742058, -24.08210182]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.32869244]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1190 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.29866027832031
alpha/beta optimization time: 1.185276746749878
initial alpha-crown bounds: tensor([[ 3.68976235,  8.44124031,  2.63029718, -0.18903518,  2.30742717,
          1.40437758,  2.56474018,  5.28525257,  7.16459942]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.18903517723083496
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6436150074005
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64357328414917
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64355039596558
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.64352941513062
Verifying property 3 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18903518]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
        -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18903518]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1165
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 246
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 1435
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010919570922851562
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18903401494026184
10 lb beta sum: 0.0, worst -0.18903332948684692
Time: prepare 0.0002    bound 0.0875    transfer 0.0001    finalize 0.0001    func 0.0880    
Accumulated time: func 0.0880    prepare 0.0002    bound 0.0875    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 68] 
split level 8: [/input-12, 83] 
split level 9: [/input-12, 55] 
split level 10: [/input-8, 165] 
split level 11: [/input-12, 86] 
split level 12: [/input-8, 907] 
split level 13: [/input-8, 2010] 
split level 14: [/input-8, 877] 
split level 15: [/input-8, 182] 
split level 16: [/input-8, 1186] 
split level 17: [/input-12, 35] 
split level 18: [/input-8, 2017] 
split level 19: [/input-8, 173] 
split level 20: [/input-8, 2018] 
split level 21: [/input-8, 1178] 
split level 22: [/input-8, 1363] 
split level 23: [/input-8, 1193] 
split level 24: [/input-8, 2003] 
split level 25: [/input-8, 1354] 
split level 26: [/input-8, 1185] 
split level 27: [/input-8, 2026] 
split level 28: [/input-8, 140] 
split level 29: [/input-8, 2000] 
split level 30: [/input-8, 2002] 
split level 31: [/input-8, 1993] 
split level 32: [/input-8, 817] 
split level 33: [/input-8, 801] 
split level 34: [/input-8, 2014] 
split level 35: [/input-8, 1203] 
split level 36: [/input-8, 809] 
split level 37: [/input-8, 1356] 
split level 38: [/input-8, 1992] 
split level 39: [/input-8, 2027] 
split level 40: [/input-8, 175] 
split level 41: [/input-8, 2033] 
split level 42: [/input-8, 1078] 
split level 43: [/input-8, 149] 
split level 44: [/input-8, 810] 
split level 45: [/input, 3147] 
split level 46: [/input-8, 1372] 
split level 47: [/input, 955] 
split level 48: [/input-8, 1382] 
split level 49: [/input, 939] 
split level 50: [/input-8, 39] 
split level 51: [/input, 3131] 
split level 52: [/input-8, 1201] 
split level 53: [/input-8, 1204] 
split level 54: [/input-8, 2008] 
split level 55: [/input, 3548] 
split level 56: [/input, 891] 
split level 57: [/input, 3026] 
split level 58: [/input-8, 150] 
split level 59: [/input-8, 30] 
split level 60: [/input-8, 793] 
split level 61: [/input-8, 1172] 
split level 62: [/input, 947] 
split level 63: [/input, 963] 
split level 64: [/input, 923] 
split level 65: [/input-8, 47] 
split level 66: [/input-8, 591] 
split level 67: [/input-8, 1383] 
split level 68: [/input, 793] 
split level 69: [/input, 3515] 
split level 70: [/input-8, 19] 
split level 71: [/input, 901] 
split level 72: [/input-8, 1081] 
split level 73: [/input, 3522] 
split level 74: [/input, 3097] 
split level 75: [/input, 3507] 
split level 76: [/input, 1592] 
split level 77: [/input-8, 811] 
split level 78: [/input-8, 1177] 
split level 79: [/input, 917] 
split level 80: [/input, 3221] 
split level 81: [/input-8, 1567] 
split level 82: [/input-8, 167] 
split level 83: [/input, 3538] 
split level 84: [/input, 468] 
split level 85: [/input, 2584] 
split level 86: [/input, 907] 
split level 87: [/input, 3141] 
split level 88: [/input, 481] 
split level 89: [/input, 809] 
split level 90: [/input, 922] 
split level 91: [/input-8, 1357] 
split level 92: [/input, 3190] 
split level 93: [/input, 3491] 
split level 94: [/input-8, 2023] 
split level 95: [/input, 938] 
split level 96: [/input, 3523] 
split level 97: [/input, 3206] 
split level 98: [/input, 3238] 
split level 99: [/input, 3539] 
split level 100: [/input-8, 1381] 
split level 101: [/input, 3158] 
split level 102: [/input, 1340] 
split level 103: [/input, 3499] 
split level 104: [/input, 906] 
split level 105: [/input-8, 802] 
split level 106: [/input, 1357] 
split level 107: [/input, 1358] 
split level 108: [/input, 2637] 
split level 109: [/input, 937] 
split level 110: [/input-8, 623] 
split level 111: [/input, 2850] 
split level 112: [/input-8, 24] 
split level 113: [/input-8, 583] 
split level 114: [/input, 948] 
split level 115: [/input, 3386] 
split level 116: [/input, 846] 
split level 117: [/input, 54] 
split level 118: [/input, 3252] 
split level 119: [/input, 670] 
split level 120: [/input, 142] 
split level 121: [/input, 465] 
split level 122: [/input, 2914] 
split level 123: [/input, 2638] 
split level 124: [/input-8, 1347] 
split level 125: [/input, 158] 
split level 126: [/input, 3506] 
split level 127: [/input, 2913] 
split level 128: [/input, 885] 
split level 129: [/input, 3174] 
split level 130: [/input, 2853] 
split level 131: [/input, 1341] 
split level 132: [/input, 97] 
split level 133: [/input, 3483] 
split level 134: [/input, 2583] 
split level 135: [/input, 2427] 
split level 136: [/input, 2846] 
split level 137: [/input, 3157] 
split level 138: [/input, 65] 
split level 139: [/input, 979] 
split level 140: [/input, 2654] 
split level 141: [/input, 876] 
split level 142: [/input, 869] 
split level 143: [/input, 3058] 
split level 144: [/input, 3459] 
split level 145: [/input, 2851] 
split level 146: [/input, 2087] 
split level 147: [/input, 964] 
split level 148: [/input, 2670] 
split level 149: [/input, 2837] 
split level 150: [/input, 334] 
split level 151: [/input, 78] 
split level 152: [/input, 33] 
split level 153: [/input, 21] 
split level 154: [/input, 3948] 
split level 155: [/input, 3259] 
split level 156: [/input, 791] 
split level 157: [/input-8, 1197] 
split level 158: [/input, 3027] 
split level 159: [/input, 2577] 
split level 160: [/input, 46] 
split level 161: [/input-8, 324] 
split level 162: [/input, 341] 
split level 163: [/input-8, 1268] 
split level 164: [/input, 2881] 
split level 165: [/input, 2882] 
split level 166: [/input, 38] 
split level 167: [/input, 34] 
split level 168: [/input, 53] 
split level 169: [/input, 62] 
split level 170: [/input, 2606] 
split level 171: [/input, 980] 
split level 172: [/input, 836] 
split level 173: [/input, 20] 
split level 174: [/input, 3124] 
split level 175: [/input, 2836] 
split level 176: [/input, 113] 
split level 177: [/input, 3269] 
split level 178: [/input, 2897] 
split level 179: [/input, 87] 
split level 180: [/input, 3140] 
split level 181: [/input, 342] 
split level 182: [/input, 3243] 
split level 183: [/input, 114] 
split level 184: [/input, 36] 
split level 185: [/input, 2578] 
split level 186: [/input, 2661] 
split level 187: [/input, 2898] 
split level 188: [/input, 2110] 
split level 189: [/input, 1486] 
split level 190: [/input, 3475] 
split level 191: [/input, 17] 
split level 192: [/input, 3125] 
split level 193: [/input, 2845] 
split level 194: [/input, 30] 
split level 195: [/input, 1470] 
split level 196: [/input, 951] 
split level 197: [/input, 29] 
split level 198: [/input, 2134] 
split level 199: [/input, 2835] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18894445896148682
10 lb beta sum: 0.0, worst -0.18894442915916443
Time: prepare 0.0118    bound 0.0979    transfer 0.0028    finalize 0.0033    func 0.1185    
Accumulated time: func 0.2065    prepare 0.0219    bound 0.1854    transfer 0.0029    finalize 0.0034    
all_split False
======================Cut inference begins======================
max lb tensor(0.23748720) min lb tensor(-0.18894249)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010452985763549805 
BICCOS Cumulative time: 0.010452985763549805
Preprocessing time: 0.009822368621826172 Inference time: 0.00026988983154296875 Add cuts time: 0.00010251998901367188 Cut analysis time: 0.0002582073211669922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18312 (1), -0.18308 (1), -0.18300 (1), -0.18289 (1), -0.18271 (1), -0.18260 (1), -0.18215 (1), -0.18209 (1), -0.18173 (1), -0.18166 (1), -0.18164 (1), -0.18146 (1), -0.18106 (1), -0.18100 (1), -0.18096 (1), -0.18091 (1), -0.18089 (1), -0.18062 (1), -0.18051 (1), -0.18028 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5178    set_bounds 0.0090    solve 0.1186    add 0.0929    
Accumulated time: pickout 0.0003    decision 0.5178    set_bounds 0.0090    solve 0.1186    add 0.0929    
Current (lb-rhs): -0.18312451243400574
50 domains visited
Cumulative time: 0.842031717300415

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 4] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 2] [/input-12, 2] [/input-12, 10] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 10] [/input-12, 10] [/input-12, 2] [/input-12, 2] 
split level 2: [/input-12, 10] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 10] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 3: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 90] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16106456518173218
10 lb beta sum: 1.0347514152526855, worst -0.11165079474449158
Time: prepare 0.0071    bound 0.1158    transfer 0.0008    finalize 0.0021    func 0.1283    
Accumulated time: func 0.3348    prepare 0.0293    bound 0.3012    transfer 0.0037    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.39300817) min lb tensor(-0.11151171)
Number of Verified Splits: 139 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 12
#cuts >= 20: 0
BICCOS time: 0.019771814346313477 
BICCOS Cumulative time: 0.03022480010986328
Preprocessing time: 0.011583089828491211 Inference time: 0.005781412124633789 Add cuts time: 0.0020818710327148438 Cut analysis time: 0.0003254413604736328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05648 (2), -0.05449 (2), -0.05428 (2), -0.05422 (2), -0.05421 (2), -0.05405 (2), -0.05404 (2), -0.05104 (2), -0.05027 (2), -0.04870 (2), -0.04842 (2), -0.04812 (2), -0.04795 (2), -0.04780 (2), -0.04761 (2), -0.04740 (2), -0.04719 (2), -0.04648 (2), -0.04639 (2), -0.04612 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0198    set_bounds 0.0130    solve 0.1284    add 0.0887    
Accumulated time: pickout 0.0013    decision 0.5376    set_bounds 0.0220    solve 0.2470    add 0.1816    
Current (lb-rhs): -0.05647808313369751
100 domains visited
Cumulative time: 1.1130168437957764

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 10] [/input-12, 90] [/input-12, 90] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 10] [/input-12, 10] [/input-12, 90] 
split level 2: [/input-12, 90] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 90] [/input-12, 90] [/input-12, 10] 
split level 3: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 90] [/input-12, 90] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12350040674209595

all verified at 2th iter
Time: prepare 0.0073    bound 0.0173    transfer 0.0031    finalize 0.0027    func 0.0330    
Accumulated time: func 0.3678    prepare 0.0368    bound 0.3185    transfer 0.0068    finalize 0.0083    
all_split False
======================Cut inference begins======================
max lb tensor(0.35968328) min lb tensor(0.01185456)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 56.
#cuts 1-3: 56
#cuts >= 20: 0
BICCOS time: 0.038182735443115234 
BICCOS Cumulative time: 0.06840753555297852
Preprocessing time: 0.01143956184387207 Inference time: 0.015905380249023438 Add cuts time: 0.00971531867980957 Cut analysis time: 0.0011224746704101562
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0192    set_bounds 0.0160    solve 0.0330    add 0.0223    
Accumulated time: pickout 0.0024    decision 0.5568    set_bounds 0.0380    solve 0.2800    add 0.2040    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0024712979793548584

all verified at 1th iter
Time: prepare 0.0037    bound 0.0127    transfer 0.0013    finalize 0.0015    func 0.0208    
Accumulated time: func 0.3886    prepare 0.0410    bound 0.3312    transfer 0.0081    finalize 0.0097    
all_split False
======================Cut inference begins======================
max lb tensor(0.63385439) min lb tensor(0.01322511)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 56.
#cuts 1-3: 56
#cuts >= 20: 0
BICCOS time: 0.006376981735229492 
BICCOS Cumulative time: 0.07478451728820801
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0172    solve 0.0209    add 0.0001    
Accumulated time: pickout 0.0027    decision 0.5787    set_bounds 0.0552    solve 0.3009    add 0.2040    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.3134181499481201


Properties batch 4, size 1
Remaining timeout: 197.16383409500122
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.16358065605164
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.16355299949646
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.16353344917297
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.1635138988495
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.8365 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.55639648, -33.09785080, -28.00553131, -27.40239906, -25.07222748,
         -27.10820198, -28.42906952, -22.25778961, -33.87366104, -32.03707886]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 701] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 701] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 288] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.60428333, 8.63137341, 4.23884392, 3.83983850, 1.92058945, 3.60424948,
         4.34731722, 9.57411480, 7.57268620]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0463 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.15664101, -31.39657593, -29.82341003, -30.75438118, -29.41454315,
         -31.94305992, -31.96259689, -30.53670311, -26.03734589, -29.66164589]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 659] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 659] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 197] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.00890553, 3.93031931, 2.37446547, 3.40709352, 1.97647166, 4.41568375,
         4.39016771, 2.74542451, 2.46872377]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0315 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.57001877, -21.33278465, -16.48242188, -17.88305855, -15.84688187,
         -18.45724487, -14.43099213, -19.91347122, -21.41075134, -23.09995651]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [825]; unstable size 825; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 238, 1, 825] with unstable size 237 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 825] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 825] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [237]; unstable size 237; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 237] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 237] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.65802503, 4.90856361, 1.05104423, 2.50940728, 0.27425551, 2.85676765,
         3.60879087, 4.98581076, 6.49914980]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0472 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.83767509, -29.44007301, -28.61532784, -29.34156609, -28.70956039,
         -30.31670189, -29.03779984, -30.47285080, -29.20039749, -29.62815285]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [642]; unstable size 642; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 642] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 642] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 206] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.54947042, 1.96131420, 2.40498400, 1.83005643, 3.13335943, 2.10148048,
         3.19824529, 2.43338394, 2.73391533]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0451 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.50596523, -18.77488327, -14.69626808, -14.34110641, -15.01922321,
         -14.73676872, -15.22504807, -16.18593597, -16.79512215, -17.35581017]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 654] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 654] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 215] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30025935,  2.79075527, -0.64695966, -0.28283525, -0.00568271,
          0.09187210,  0.48905253,  0.94048774,  1.32147741]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.50596523, -18.77488327, -14.69626808, -14.34110641, -15.01922321,
         -14.73676872, -15.22504807, -16.18593597, -16.79512215, -17.35581017]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.16070747, -18.60272026, -14.32037830, -14.41568756, -14.80318546,
          -14.87370014, -15.22083282, -16.08508301, -16.55334473, -17.22670746],
         [-15.16070747, -18.60272026, -14.32037830, -14.41568756, -14.80318546,
          -14.87370014, -15.22083282, -16.08508301, -16.55334473, -17.22670746]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.74501991, -0.09530926,  0.38749790,  0.45801258]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0583 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.66821480, -25.16157913, -20.16737556, -19.99334526, -19.84637260,
         -20.53302574, -17.62543488, -22.75561523, -24.62155914, -24.01429939]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [562]; unstable size 562; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 562] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 562] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 562] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 328] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.44212198, 5.09512997, 1.39435589, 1.28885651, 0.93852186, 1.63264406,
         3.03026295, 4.88076496, 3.91813183]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0357 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.91881180, -32.59530640, -30.29003906, -30.00774956, -29.24390221,
         -30.22264290, -30.82009125, -25.47676849, -32.91277695, -30.89614296]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [668]; unstable size 668; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 668] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 668] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 668] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 226] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.83449841, 5.22893476, 3.33997393, 3.20848727, 2.84958339, 3.43617320,
         3.74271941, 5.64434624, 3.49464059]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0432 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.62759590, -34.41730499, -33.84094238, -35.56791306, -34.24832153,
         -36.28593826, -34.87154770, -35.38038635, -33.02691269, -33.01538467]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [642]; unstable size 642; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 642] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 642] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 208] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.30125892, 1.11236954, 2.63641596, 1.30713129, 3.22894788, 1.90847683,
         2.05579567, 0.40490249, 0.05632424]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0275 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
         -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 579] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 579] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 231] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.71136570,  4.01701736, -0.51415777,  0.11190534,  0.39652181,
          0.75778306,  1.25336623,  4.93492031,  2.87650204]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
         -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.06it/s]100%|██████████| 1/1 [00:00<00:00,  9.05it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.90902328, -21.90532684, -16.25102234, -16.58778763, -17.33627510,
          -16.20533562, -17.73783112, -18.40386963, -22.94217110, -20.61736488]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04568672]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1133 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.178878784179688
alpha/beta optimization time: 1.1879351139068604
initial alpha-crown bounds: tensor([[ 2.79542160,  4.10366678, -0.45930839,  0.13562950,  0.45598030,
          0.80009270,  1.31134081,  5.06682587,  2.96922922]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.459308385848999
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66523838043213
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.66520023345947
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.66517758369446
Verifying property 2 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.45930839]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
        -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.45930839]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 579
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 226
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 825
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010466575622558594
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4593045711517334
10 lb beta sum: 0.0, worst -0.45931458473205566
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    func 0.0527    
Accumulated time: func 0.0527    prepare 0.0002    bound 0.0522    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 72] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 17] 
split level 6: [/input-12, 4] 
split level 7: [/input-12, 64] 
split level 8: [/input-8, 1699] 
split level 9: [/input-8, 1949] 
split level 10: [/input-12, 71] 
split level 11: [/input-8, 226] 
split level 12: [/input-8, 1684] 
split level 13: [/input-8, 217] 
split level 14: [/input-8, 1946] 
split level 15: [/input-8, 437] 
split level 16: [/input-8, 1579] 
split level 17: [/input-8, 219] 
split level 18: [/input-8, 1637] 
split level 19: [/input-8, 254] 
split level 20: [/input-8, 427] 
split level 21: [/input-8, 428] 
split level 22: [/input-8, 253] 
split level 23: [/input-8, 209] 
split level 24: [/input-8, 212] 
split level 25: [/input-8, 434] 
split level 26: [/input-8, 410] 
split level 27: [/input-8, 733] 
split level 28: [/input-8, 47] 
split level 29: [/input-8, 249] 
split level 30: [/input-8, 250] 
split level 31: [/input-8, 55] 
split level 32: [/input-8, 1711] 
split level 33: [/input, 3543] 
split level 34: [/input-8, 423] 
split level 35: [/input-8, 435] 
split level 36: [/input-8, 1107] 
split level 37: [/input-8, 415] 
split level 38: [/input-8, 1686] 
split level 39: [/input-8, 1583] 
split level 40: [/input-8, 438] 
split level 41: [/input-8, 366] 
split level 42: [/input-8, 1316] 
split level 43: [/input-8, 227] 
split level 44: [/input, 985] 
split level 45: [/input, 3285] 
split level 46: [/input-8, 237] 
split level 47: [/input-8, 224] 
split level 48: [/input-8, 402] 
split level 49: [/input-8, 218] 
split level 50: [/input-8, 213] 
split level 51: [/input-8, 216] 
split level 52: [/input-8, 929] 
split level 53: [/input-8, 1338] 
split level 54: [/input-8, 281] 
split level 55: [/input-8, 229] 
split level 56: [/input, 1691] 
split level 57: [/input-8, 204] 
split level 58: [/input-8, 222] 
split level 59: [/input, 2789] 
split level 60: [/input, 473] 
split level 61: [/input-8, 198] 
split level 62: [/input-8, 1938] 
split level 63: [/input-8, 407] 
split level 64: [/input-8, 228] 
split level 65: [/input, 3130] 
split level 66: [/input-8, 195] 
split level 67: [/input, 1001] 
split level 68: [/input-8, 412] 
split level 69: [/input-8, 44] 
split level 70: [/input-8, 1389] 
split level 71: [/input-8, 248] 
split level 72: [/input, 2794] 
split level 73: [/input-8, 232] 
split level 74: [/input, 3305] 
split level 75: [/input-8, 578] 
split level 76: [/input, 2865] 
split level 77: [/input, 3233] 
split level 78: [/input-8, 1669] 
split level 79: [/input, 2793] 
split level 80: [/input, 2755] 
split level 81: [/input-8, 923] 
split level 82: [/input-8, 371] 
split level 83: [/input-8, 61] 
split level 84: [/input, 2713] 
split level 85: [/input, 2714] 
split level 86: [/input-8, 252] 
split level 87: [/input-8, 146] 
split level 88: [/input-8, 262] 
split level 89: [/input, 1996] 
split level 90: [/input-8, 240] 
split level 91: [/input-8, 255] 
split level 92: [/input, 2762] 
split level 93: [/input-8, 295] 
split level 94: [/input-8, 251] 
split level 95: [/input, 3302] 
split level 96: [/input-8, 401] 
split level 97: [/input, 2792] 
split level 98: [/input, 3198] 
split level 99: [/input-8, 1743] 
split level 100: [/input, 984] 
split level 101: [/input, 1948] 
split level 102: [/input-8, 1759] 
split level 103: [/input-8, 1517] 
split level 104: [/input, 987] 
split level 105: [/input-8, 1337] 
split level 106: [/input, 2759] 
split level 107: [/input, 3544] 
split level 108: [/input, 2739] 
split level 109: [/input, 167] 
split level 110: [/input, 2805] 
split level 111: [/input, 3268] 
split level 112: [/input, 2265] 
split level 113: [/input, 2722] 
split level 114: [/input, 471] 
split level 115: [/input, 2760] 
split level 116: [/input, 1507] 
split level 117: [/input, 2738] 
split level 118: [/input-8, 193] 
split level 119: [/input, 2249] 
split level 120: [/input-8, 239] 
split level 121: [/input, 3269] 
split level 122: [/input, 1964] 
split level 123: [/input, 3218] 
split level 124: [/input, 3235] 
split level 125: [/input, 2867] 
split level 126: [/input, 1411] 
split level 127: [/input-8, 207] 
split level 128: [/input, 2779] 
split level 129: [/input-8, 0] 
split level 130: [/input, 3306] 
split level 131: [/input, 2774] 
split level 132: [/input, 2806] 
split level 133: [/input, 1675] 
split level 134: [/input, 3307] 
split level 135: [/input, 2741] 
split level 136: [/input, 1978] 
split level 137: [/input, 824] 
split level 138: [/input, 974] 
split level 139: [/input, 147] 
split level 140: [/input-8, 1762] 
split level 141: [/input-8, 142] 
split level 142: [/input-8, 981] 
split level 143: [/input, 3989] 
split level 144: [/input, 2537] 
split level 145: [/input-8, 1272] 
split level 146: [/input, 2233] 
split level 147: [/input, 2723] 
split level 148: [/input, 2522] 
split level 149: [/input-8, 1786] 
split level 150: [/input, 1003] 
split level 151: [/input, 1398] 
split level 152: [/input, 18] 
split level 153: [/input, 1382] 
split level 154: [/input, 2490] 
split level 155: [/input, 3131] 
split level 156: [/input, 684] 
split level 157: [/input, 1997] 
split level 158: [/input, 152] 
split level 159: [/input, 1474] 
split level 160: [/input, 1316] 
split level 161: [/input, 235] 
split level 162: [/input, 3103] 
split level 163: [/input, 811] 
split level 164: [/input, 2473] 
split level 165: [/input, 291] 
split level 166: [/input, 2436] 
split level 167: [/input, 2179] 
split level 168: [/input, 97] 
split level 169: [/input, 277] 
split level 170: [/input, 17] 
split level 171: [/input, 3371] 
split level 172: [/input, 2780] 
split level 173: [/input, 2488] 
split level 174: [/input, 2692] 
split level 175: [/input, 1177] 
split level 176: [/input, 1162] 
split level 177: [/input, 278] 
split level 178: [/input, 2733] 
split level 179: [/input, 215] 
split level 180: [/input, 2781] 
split level 181: [/input, 1980] 
split level 182: [/input, 2217] 
split level 183: [/input, 478] 
split level 184: [/input, 236] 
split level 185: [/input, 2854] 
split level 186: [/input-8, 335] 
split level 187: [/input, 2523] 
split level 188: [/input, 2770] 
split level 189: [/input, 4050] 
split level 190: [/input, 1178] 
split level 191: [/input, 1194] 
split level 192: [/input, 2195] 
split level 193: [/input, 2539] 
split level 194: [/input, 3368] 
split level 195: [/input, 210] 
split level 196: [/input, 3549] 
split level 197: [/input, 2450] 
split level 198: [/input, 2635] 
split level 199: [/input, 793] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4592766761779785
10 lb beta sum: 0.0, worst -0.4592721462249756
Time: prepare 0.0118    bound 0.0958    transfer 0.0007    finalize 0.0029    func 0.1139    
Accumulated time: func 0.1666    prepare 0.0218    bound 0.1480    transfer 0.0008    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.08568859) min lb tensor(-0.45926952)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010350227355957031 
BICCOS Cumulative time: 0.010350227355957031
Preprocessing time: 0.009723901748657227 Inference time: 7.05718994140625e-05 Add cuts time: 3.337860107421875e-05 Cut analysis time: 0.0005223751068115234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.44584 (1), -0.44482 (1), -0.44479 (1), -0.44427 (1), -0.44414 (1), -0.44397 (1), -0.44395 (1), -0.44354 (1), -0.44226 (1), -0.44224 (1), -0.44213 (1), -0.44194 (1), -0.44129 (1), -0.44062 (1), -0.43977 (1), -0.43804 (1), -0.43702 (1), -0.43640 (1), -0.43586 (1), -0.43536 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5100    set_bounds 0.0085    solve 0.1140    add 0.0703    
Accumulated time: pickout 0.0003    decision 0.5100    set_bounds 0.0085    solve 0.1140    add 0.0703    
Current (lb-rhs): -0.4458432197570801
50 domains visited
Cumulative time: 0.7711648941040039

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 72] [/input-12, 24] [/input-12, 72] [/input-12, 24] [/input-12, 24] [/input-12, 72] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 17] [/input-12, 7] [/input-12, 7] [/input-12, 72] [/input-12, 72] [/input-12, 7] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 3: [/input-8, 929] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.430957555770874
10 lb beta sum: 0.16623170673847198, worst -0.4308431148529053
Time: prepare 0.0074    bound 0.1148    transfer 0.0007    finalize 0.0024    func 0.1279    
Accumulated time: func 0.2945    prepare 0.0295    bound 0.2628    transfer 0.0015    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.20923138) min lb tensor(-0.43080664)
Number of Verified Splits: 59 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.01525735855102539 
BICCOS Cumulative time: 0.025607585906982422
Preprocessing time: 0.011594533920288086 Inference time: 0.0021049976348876953 Add cuts time: 0.0012946128845214844 Cut analysis time: 0.000263214111328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17821 (2), -0.17755 (2), -0.17655 (2), -0.17640 (2), -0.17576 (2), -0.17473 (2), -0.17471 (2), -0.17469 (2), -0.17371 (2), -0.17167 (2), -0.17104 (2), -0.17068 (2), -0.16905 (2), -0.16892 (2), -0.16855 (2), -0.16706 (2), -0.16687 (2), -0.16657 (2), -0.16366 (2), -0.16282 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0123    solve 0.1280    add 0.0806    
Accumulated time: pickout 0.0014    decision 0.5296    set_bounds 0.0208    solve 0.2420    add 0.1509    
Current (lb-rhs): -0.17821459472179413
100 domains visited
Cumulative time: 1.028299331665039

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 72] [/input-12, 24] [/input-12, 24] [/input-12, 7] [/input-12, 7] [/input-12, 24] [/input-12, 24] [/input-12, 72] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 7] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 17] 
split level 3: [/input-12, 17] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-8, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18099689483642578
10 lb beta sum: 0.5780530571937561, worst -0.14108751714229584
Time: prepare 0.0076    bound 0.1172    transfer 0.0008    finalize 0.0025    func 0.1314    
Accumulated time: func 0.4259    prepare 0.0374    bound 0.3799    transfer 0.0023    finalize 0.0080    
all_split False
======================Cut inference begins======================
max lb tensor(0.38406777) min lb tensor(-0.13903773)
Number of Verified Splits: 280 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 4
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.02924370765686035 
BICCOS Cumulative time: 0.05485129356384277
Preprocessing time: 0.011548757553100586 Inference time: 0.011788368225097656 Add cuts time: 0.005617618560791016 Cut analysis time: 0.00028896331787109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11754 (3), -0.11740 (3), -0.11676 (3), -0.11402 (3), -0.11397 (3), -0.10944 (3), -0.10941 (3), -0.10869 (3), -0.10776 (3), -0.10684 (3), -0.10636 (3), -0.10585 (3), -0.10466 (3), -0.10408 (3), -0.10359 (3), -0.10356 (3), -0.09835 (3), -0.09827 (3), -0.09816 (3), -0.09811 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0191    set_bounds 0.0152    solve 0.1315    add 0.1003    
Accumulated time: pickout 0.0025    decision 0.5487    set_bounds 0.0361    solve 0.3734    add 0.2511    
Current (lb-rhs): -0.1175435483455658
150 domains visited
Cumulative time: 1.3249609470367432

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 2: [/input-12, 7] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 7] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
split level 3: [/input-12, 4] [/input-12, 4] [/input-8, 1699] [/input-8, 1699] [/input-12, 4] [/input-8, 1699] [/input-12, 4] [/input-8, 1699] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15088510513305664
10 lb beta sum: 0.5791546702384949, worst -0.11268562078475952
Time: prepare 0.0068    bound 0.1160    transfer 0.0007    finalize 0.0021    func 0.1288    
Accumulated time: func 0.5547    prepare 0.0445    bound 0.4960    transfer 0.0030    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.40095180) min lb tensor(-0.11160049)
Number of Verified Splits: 133 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 4
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.021561861038208008 
BICCOS Cumulative time: 0.07641315460205078
Preprocessing time: 0.01133418083190918 Inference time: 0.007014274597167969 Add cuts time: 0.0027456283569335938 Cut analysis time: 0.0004677772521972656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04091 (4), -0.04066 (4), -0.04061 (4), -0.03920 (4), -0.03751 (4), -0.03743 (4), -0.03667 (4), -0.03517 (4), -0.03488 (4), -0.03485 (4), -0.03260 (4), -0.03259 (4), -0.03240 (4), -0.03217 (4), -0.03149 (4), -0.03143 (4), -0.03036 (4), -0.02791 (4), -0.02763 (4), -0.02762 (4), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0149    solve 0.1289    add 0.2158    
Accumulated time: pickout 0.0036    decision 0.5681    set_bounds 0.0510    solve 0.5023    add 0.4669    
Current (lb-rhs): -0.040912941098213196
200 domains visited
Cumulative time: 1.7268640995025635

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 2: [/input-8, 1699] [/input-8, 1699] [/input-12, 17] [/input-8, 1699] [/input-8, 1699] [/input-12, 7] [/input-12, 17] [/input-12, 7] [/input-12, 64] [/input-12, 64] 
split level 3: [/input-12, 4] [/input-12, 4] [/input-12, 64] [/input-12, 4] [/input-12, 4] [/input-8, 1699] [/input-12, 64] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08553433418273926
10 lb beta sum: 0.7026250958442688, worst -0.04811707139015198
Time: prepare 0.0075    bound 0.1321    transfer 0.0008    finalize 0.0024    func 0.1455    
Accumulated time: func 0.7001    prepare 0.0523    bound 0.6281    transfer 0.0038    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.28789508) min lb tensor(-0.04014754)
Number of Verified Splits: 287 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 4
#cuts 4-6: 18
#cuts >= 20: 0
BICCOS time: 0.03387165069580078 
BICCOS Cumulative time: 0.11028480529785156
Preprocessing time: 0.011428356170654297 Inference time: 0.014472723007202148 Add cuts time: 0.007153511047363281 Cut analysis time: 0.0008170604705810547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02277 (5), -0.02277 (5), -0.02277 (5), -0.02262 (5), -0.02259 (5), -0.02258 (5), -0.02256 (5), -0.02254 (5), -0.02249 (5), -0.02099 (5), -0.02075 (5), -0.02056 (5), -0.01985 (5), -0.01922 (5), -0.01846 (5), -0.01770 (5), -0.01765 (5), -0.01701 (5), -0.01618 (5), -0.01592 (5), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0192    set_bounds 0.0154    solve 0.1455    add 0.1089    
Accumulated time: pickout 0.0047    decision 0.5874    set_bounds 0.0664    solve 0.6479    add 0.5758    
Current (lb-rhs): -0.022773265838623047
250 domains visited
Cumulative time: 2.051270008087158


Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 72] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 17] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 64] 
split level 7: [/input-8, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21507620811462402
10 lb beta sum: 0.3072945177555084, worst -0.20588485896587372
Time: prepare 0.0051    bound 0.1286    transfer 0.0024    finalize 0.0013    func 0.1392    
Accumulated time: func 0.8393    prepare 0.0578    bound 0.7567    transfer 0.0062    finalize 0.0139    
all_split False
======================Cut inference begins======================
max lb tensor(0.69926637) min lb tensor(-0.20568711)
Number of Verified Splits: 222 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.45931386947631836
10 lb beta sum: 0.7099460959434509, worst -0.4079306721687317
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 21.
#cuts 1-3: 4
#cuts 4-6: 15
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.2639198303222656 
BICCOS Cumulative time: 0.3742046356201172
Preprocessing time: 0.007087230682373047 Inference time: 0.2502455711364746 Add cuts time: 0.005780696868896484 Cut analysis time: 0.0008063316345214844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20569 (8), -0.19990 (8), -0.19510 (8), -0.18641 (8), -0.18258 (8), -0.17750 (8), -0.17469 (8), -0.16686 (8), -0.10558 (8), -0.10416 (8), -0.10161 (8), -0.09631 (8), -0.09052 (8), -0.07890 (8), -0.07635 (8), -0.07306 (8), -0.06852 (8), -0.06826 (8), -0.06386 (8), -0.06016 (8), 
Length of domains: 34
Time: pickout 0.0003    decision 0.0223    set_bounds 0.0203    solve 0.1393    add 0.0014    
Accumulated time: pickout 0.0050    decision 0.6097    set_bounds 0.0867    solve 0.7871    add 0.5772    
Current (lb-rhs): -0.20568710565567017
284 domains visited
Cumulative time: 2.502812385559082

BaB round 2
batch: 34
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-8, 1949] [/input-8, 435] [/input-8, 1949] [/input-8, 410] [/input-8, 1949] [/input-8, 410] [/input-8, 1316] [/input-8, 410] [/input-8, 410] [/input-12, 71] 
split level 2: [/input-8, 435] [/input-8, 1686] [/input-8, 435] [/input-8, 435] [/input-8, 410] [/input-8, 435] [/input-8, 923] [/input-8, 1316] [/input-8, 435] [/input-8, 1316] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1987628936767578
10 lb beta sum: 0.2181737869977951, worst -0.1946251392364502
Time: prepare 0.0055    bound 0.1277    transfer 0.0011    finalize 0.0020    func 0.1381    
Accumulated time: func 0.9775    prepare 0.0636    bound 0.8844    transfer 0.0073    finalize 0.0159    
all_split False
======================Cut inference begins======================
max lb tensor(0.31341237) min lb tensor(-0.19456053)
Number of Verified Splits: 156 of 272
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.35503602027893066
10 lb beta sum: 0.6528016924858093, worst -0.09461399912834167
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 4
#cuts 4-6: 15
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.2411670684814453 
BICCOS Cumulative time: 0.6153717041015625
Preprocessing time: 0.007839679718017578 Inference time: 0.22567319869995117 Add cuts time: 0.006534576416015625 Cut analysis time: 0.0011196136474609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19456 (11), -0.19189 (11), -0.18861 (11), -0.18542 (11), -0.18376 (11), -0.18103 (11), -0.17613 (11), -0.17379 (11), -0.17346 (11), -0.17115 (11), -0.17026 (11), -0.16997 (11), -0.16886 (11), -0.16688 (11), -0.16633 (11), -0.16632 (11), -0.16591 (11), -0.16536 (11), -0.16366 (11), -0.16316 (11), 
Length of domains: 116
Time: pickout 0.0015    decision 0.0152    set_bounds 0.0220    solve 0.1382    add 0.0020    
Accumulated time: pickout 0.0065    decision 0.6249    set_bounds 0.1087    solve 0.9254    add 0.5792    
Current (lb-rhs): -0.19456052780151367
400 domains visited
Cumulative time: 2.924415349960327

BaB round 3
batch: 116
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-8, 1949] [/input-12, 71] [/input-8, 1949] [/input-12, 71] [/input-8, 1949] [/input-8, 1949] [/input-8, 1949] [/input-12, 71] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19456076622009277
10 lb beta sum: 0.16737230122089386, worst -0.1944899559020996
Time: prepare 0.0049    bound 0.1344    transfer 0.0013    finalize 0.0013    func 0.1440    
Accumulated time: func 1.1215    prepare 0.0687    bound 1.0188    transfer 0.0086    finalize 0.0173    
all_split False
======================Cut inference begins======================
max lb tensor(0.37636280) min lb tensor(-0.19446898)
Number of Verified Splits: 76 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 5
#cuts 4-6: 15
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.017483234405517578 
BICCOS Cumulative time: 0.6328549385070801
Preprocessing time: 0.006997346878051758 Inference time: 0.007118940353393555 Add cuts time: 0.0024564266204833984 Cut analysis time: 0.0009105205535888672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19447 (12), -0.19177 (12), -0.18852 (12), -0.18529 (12), -0.18364 (12), -0.18087 (12), -0.17544 (12), -0.17360 (12), -0.17274 (12), -0.17086 (12), -0.16892 (12), -0.16612 (12), -0.16601 (12), -0.16539 (12), -0.16537 (12), -0.16498 (12), -0.16410 (12), -0.16321 (12), -0.16217 (12), -0.16096 (12), 
Length of domains: 156
Time: pickout 0.0023    decision 0.0176    set_bounds 0.0102    solve 0.1441    add 0.0023    
Accumulated time: pickout 0.0088    decision 0.6425    set_bounds 0.1190    solve 1.0694    add 0.5814    
Current (lb-rhs): -0.19446897506713867
556 domains visited
Cumulative time: 3.11909818649292

BaB round 4
batch: 156
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 410] [/input-8, 410] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 237] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19097113609313965
10 lb beta sum: 0.10027501732110977, worst -0.19093704223632812
Time: prepare 0.0064    bound 0.1345    transfer 0.0018    finalize 0.0017    func 0.1465    
Accumulated time: func 1.2679    prepare 0.0752    bound 1.1533    transfer 0.0105    finalize 0.0190    
all_split False
======================Cut inference begins======================
max lb tensor(0.47683597) min lb tensor(-0.19091249)
Number of Verified Splits: 93 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 7
#cuts 4-6: 17
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.022027969360351562 
BICCOS Cumulative time: 0.6548829078674316
Preprocessing time: 0.008964300155639648 Inference time: 0.009155988693237305 Add cuts time: 0.002941608428955078 Cut analysis time: 0.0009660720825195312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19091 (13), -0.18819 (13), -0.18543 (13), -0.18223 (13), -0.18008 (13), -0.17728 (13), -0.17144 (13), -0.16895 (13), -0.16872 (13), -0.16600 (13), -0.16532 (13), -0.16517 (13), -0.16460 (13), -0.16399 (13), -0.16328 (13), -0.16313 (13), -0.16180 (13), -0.16091 (13), -0.16060 (13), -0.16040 (13), 
Length of domains: 219
Time: pickout 0.0025    decision 0.0192    set_bounds 0.0135    solve 0.1465    add 0.0012    
Accumulated time: pickout 0.0112    decision 0.6617    set_bounds 0.1324    solve 1.2160    add 0.5826    
Current (lb-rhs): -0.19091248512268066
775 domains visited
Cumulative time: 3.324934482574463

BaB round 5
batch: 219
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1107] [/input-8, 733] [/input-8, 227] [/input-12, 71] [/input-12, 71] [/input-8, 733] [/input-8, 438] [/input-8, 209] [/input-12, 71] [/input-12, 71] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18507885932922363
10 lb beta sum: 0.11841662228107452, worst -0.18505382537841797
Time: prepare 0.0087    bound 0.1384    transfer 0.0034    finalize 0.0023    func 0.1557    
Accumulated time: func 1.4237    prepare 0.0841    bound 1.2917    transfer 0.0138    finalize 0.0213    
all_split False
======================Cut inference begins======================
max lb tensor(0.49584007) min lb tensor(-0.18502784)
Number of Verified Splits: 67 of 438
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 29.
#cuts 1-3: 10
#cuts 4-6: 18
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.023533344268798828 
BICCOS Cumulative time: 0.6784162521362305
Preprocessing time: 0.012469768524169922 Inference time: 0.007225513458251953 Add cuts time: 0.0028417110443115234 Cut analysis time: 0.0009963512420654297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18503 (14), -0.18458 (14), -0.18228 (14), -0.18183 (14), -0.17862 (14), -0.17802 (14), -0.17520 (14), -0.17459 (14), -0.17426 (14), -0.17365 (14), -0.17140 (14), -0.17079 (14), -0.16600 (14), -0.16533 (14), -0.16489 (14), -0.16376 (14), -0.16258 (14), -0.16229 (14), -0.16221 (14), -0.16214 (14), 
Length of domains: 371
Time: pickout 0.0029    decision 0.0223    set_bounds 0.0191    solve 0.1559    add 0.0041    
Accumulated time: pickout 0.0141    decision 0.6841    set_bounds 0.1515    solve 1.3719    add 0.5867    
Current (lb-rhs): -0.1850278377532959
1146 domains visited
Cumulative time: 3.553783893585205

BaB round 6
batch: 371
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1107] [/input-8, 438] [/input-8, 227] [/input-8, 366] [/input-8, 438] [/input-8, 438] [/input-8, 1316] [/input-8, 733] [/input-8, 415] [/input-8, 438] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18054533004760742
10 lb beta sum: 0.1355462521314621, worst -0.18052148818969727
Time: prepare 0.0147    bound 0.1361    transfer 0.0033    finalize 0.0035    func 0.1624    
Accumulated time: func 1.5861    prepare 0.0990    bound 1.4278    transfer 0.0171    finalize 0.0248    
all_split False
======================Cut inference begins======================
max lb tensor(0.35997877) min lb tensor(-0.18050003)
Number of Verified Splits: 211 of 742
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 14
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.05053901672363281 
BICCOS Cumulative time: 0.7289552688598633
Preprocessing time: 0.020919322967529297 Inference time: 0.025249481201171875 Add cuts time: 0.0038805007934570312 Cut analysis time: 0.0004897117614746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18050 (15), -0.18006 (15), -0.17873 (15), -0.17829 (15), -0.17773 (15), -0.17729 (15), -0.17621 (15), -0.17577 (15), -0.17301 (15), -0.17244 (15), -0.17210 (15), -0.17154 (15), -0.16983 (15), -0.16960 (15), -0.16922 (15), -0.16903 (15), -0.16865 (15), -0.16807 (15), -0.16692 (15), -0.16679 (15), 
Length of domains: 531
Time: pickout 0.0072    decision 0.0320    set_bounds 0.0317    solve 0.1632    add 0.0019    
Accumulated time: pickout 0.0213    decision 0.7161    set_bounds 0.1832    solve 1.5351    add 0.5886    
Current (lb-rhs): -0.18050003051757812
1677 domains visited
Cumulative time: 3.8422248363494873

BaB round 7
batch: 531
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 929] [/input-8, 929] [/input-8, 1686] [/input-8, 1316] [/input-8, 237] [/input-8, 366] [/input-8, 366] [/input-8, 227] [/input-8, 437] [/input-8, 237] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17758440971374512
10 lb beta sum: 0.5792851448059082, worst -0.1760561466217041
Time: prepare 0.0210    bound 0.1408    transfer 0.0036    finalize 0.0042    func 0.1766    
Accumulated time: func 1.7627    prepare 0.1202    bound 1.5687    transfer 0.0207    finalize 0.0290    
all_split False
======================Cut inference begins======================
max lb tensor(0.62454534) min lb tensor(-0.17603970)
Number of Verified Splits: 303 of 1062
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 14
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.07339668273925781 
BICCOS Cumulative time: 0.8023519515991211
Preprocessing time: 0.031665802001953125 Inference time: 0.0359952449798584 Add cuts time: 0.005254030227661133 Cut analysis time: 0.00048160552978515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17604 (16), -0.17560 (16), -0.17427 (16), -0.17384 (16), -0.17324 (16), -0.17281 (16), -0.17173 (16), -0.17130 (16), -0.17080 (16), -0.17035 (16), -0.16905 (16), -0.16859 (16), -0.16799 (16), -0.16755 (16), -0.16690 (16), -0.16682 (16), -0.16646 (16), -0.16602 (16), -0.16590 (16), -0.16490 (16), 
Length of domains: 759
Time: pickout 0.0070    decision 0.0391    set_bounds 0.1936    solve 0.1775    add 0.0068    
Accumulated time: pickout 0.0283    decision 0.7552    set_bounds 0.3768    solve 1.7126    add 0.5955    
Current (lb-rhs): -0.1760396957397461
2436 domains visited
Cumulative time: 4.342640161514282

BaB round 8
batch: 759
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 218] [/input-8, 218] [/input-8, 209] [/input-8, 437] [/input-8, 227] [/input-8, 209] [/input-8, 237] [/input-8, 437] [/input-8, 1316] [/input-8, 209] 
cut re-enabled after branching node selection
0 lb beta sum: 0.703728437423706, worst -0.471309632062912
10 lb beta sum: 1.3719168901443481, worst -0.17217549681663513
Time: prepare 0.0642    bound 0.1508    transfer 0.0034    finalize 0.0066    func 0.2349    
Accumulated time: func 1.9976    prepare 0.1846    bound 1.7195    transfer 0.0241    finalize 0.0356    
all_split False
======================Cut inference begins======================
max lb tensor(0.69712389) min lb tensor(-0.17183989)
Number of Verified Splits: 891 of 1518
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 17
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.17409586906433105 
BICCOS Cumulative time: 0.9764478206634521
Preprocessing time: 0.04702639579772949 Inference time: 0.11172294616699219 Add cuts time: 0.014687061309814453 Cut analysis time: 0.0006594657897949219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17184 (17), -0.17138 (17), -0.17012 (17), -0.16968 (17), -0.16903 (17), -0.16864 (17), -0.16752 (17), -0.16710 (17), -0.16664 (17), -0.16623 (17), -0.16485 (17), -0.16442 (17), -0.16389 (17), -0.16342 (17), -0.16227 (17), -0.16184 (17), -0.16027 (17), -0.15926 (17), -0.15827 (17), -0.15769 (17), 
Length of domains: 627
Time: pickout 0.0124    decision 0.0527    set_bounds 0.0648    solve 0.2353    add 0.0036    
Accumulated time: pickout 0.0408    decision 0.8079    set_bounds 0.4417    solve 1.9479    add 0.5991    
Current (lb-rhs): -0.1718398928642273
3063 domains visited
Cumulative time: 4.89205265045166

BaB round 9
batch: 627
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 415] [/input-8, 415] [/input-8, 415] [/input-8, 415] [/input-8, 415] [/input-8, 415] [/input-8, 415] [/input-8, 415] [/input-8, 209] [/input-8, 415] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17364788055419922
10 lb beta sum: 1.1301376819610596, worst -0.16938510537147522
Time: prepare 0.0256    bound 0.1450    transfer 0.0071    finalize 0.0052    func 0.1911    
Accumulated time: func 2.1887    prepare 0.2105    bound 1.8645    transfer 0.0312    finalize 0.0408    
all_split False
======================Cut inference begins======================
max lb tensor(0.68126822) min lb tensor(-0.16900650)
Number of Verified Splits: 376 of 1254
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.09223461151123047 
BICCOS Cumulative time: 1.0686824321746826
Preprocessing time: 0.037573814392089844 Inference time: 0.04783010482788086 Add cuts time: 0.006348848342895508 Cut analysis time: 0.0004818439483642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16901 (18), -0.16860 (18), -0.16726 (18), -0.16681 (18), -0.16622 (18), -0.16586 (18), -0.16509 (18), -0.16468 (18), -0.16468 (18), -0.16419 (18), -0.16378 (18), -0.16335 (18), -0.16334 (18), -0.16289 (18), -0.16231 (18), -0.16197 (18), -0.16194 (18), -0.16154 (18), -0.16097 (18), -0.16077 (18), 
Length of domains: 878
Time: pickout 0.0105    decision 0.0458    set_bounds 0.0533    solve 0.1921    add 0.0048    
Accumulated time: pickout 0.0513    decision 0.8537    set_bounds 0.4950    solve 2.1400    add 0.6039    
Current (lb-rhs): -0.16900649666786194
3941 domains visited
Cumulative time: 5.294244289398193

BaB round 10
batch: 878
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 218] [/input-8, 1316] [/input-8, 209] [/input-8, 218] [/input-8, 1316] [/input-8, 209] [/input-8, 218] [/input-8, 237] [/input-8, 1316] [/input-8, 237] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16836977005004883
10 lb beta sum: 1.83716881275177, worst -0.15918079018592834
Time: prepare 0.1749    bound 0.1600    transfer 0.0065    finalize 0.0072    func 0.3609    
Accumulated time: func 2.5496    prepare 0.3856    bound 2.0246    transfer 0.0377    finalize 0.0480    
all_split False
======================Cut inference begins======================
max lb tensor(0.92832428) min lb tensor(-0.15915065)
Number of Verified Splits: 1353 of 1756
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.25452542304992676 
BICCOS Cumulative time: 1.3232078552246094
Preprocessing time: 0.053212881088256836 Inference time: 0.18160176277160645 Add cuts time: 0.019135475158691406 Cut analysis time: 0.0005753040313720703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15915 (19), -0.15873 (19), -0.15746 (19), -0.15704 (19), -0.15639 (19), -0.15596 (19), -0.15491 (19), -0.15480 (19), -0.15446 (19), -0.15437 (19), -0.15397 (19), -0.15354 (19), -0.15304 (19), -0.15261 (19), -0.15227 (19), -0.15205 (19), -0.15185 (19), -0.15161 (19), -0.15124 (19), -0.15077 (19), 
Length of domains: 403
Time: pickout 0.0169    decision 0.0592    set_bounds 0.0748    solve 0.3614    add 0.0033    
Accumulated time: pickout 0.0682    decision 0.9129    set_bounds 0.5698    solve 2.5014    add 0.6072    
Current (lb-rhs): -0.1591506451368332
4344 domains visited
Cumulative time: 6.076255559921265

BaB round 11
batch: 403
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 733] [/input-8, 1579] [/input-8, 733] [/input-8, 733] [/input-8, 237] [/input-8, 237] [/input-8, 437] [/input-8, 733] [/input-8, 437] [/input-8, 733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16767477989196777
10 lb beta sum: 2.2771639823913574, worst -0.14952069520950317
Time: prepare 0.0160    bound 0.1369    transfer 0.0022    finalize 0.0034    func 0.1646    
Accumulated time: func 2.7143    prepare 0.4019    bound 2.1615    transfer 0.0399    finalize 0.0514    
all_split False
======================Cut inference begins======================
max lb tensor(0.56606317) min lb tensor(-0.14949119)
Number of Verified Splits: 470 of 806
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 26
#cuts >= 20: 0
BICCOS time: 0.09682369232177734 
BICCOS Cumulative time: 1.4200315475463867
Preprocessing time: 0.022974729537963867 Inference time: 0.06705713272094727 Add cuts time: 0.0062713623046875 Cut analysis time: 0.0005204677581787109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14949 (20), -0.14933 (20), -0.14905 (20), -0.14890 (20), -0.14674 (20), -0.14657 (20), -0.14631 (20), -0.14614 (20), -0.14418 (20), -0.14380 (20), -0.14375 (20), -0.14336 (20), -0.14143 (20), -0.14104 (20), -0.14100 (20), -0.14060 (20), -0.13921 (20), -0.13862 (20), -0.13634 (20), -0.13586 (20), 
Length of domains: 336
Time: pickout 0.0086    decision 0.0337    set_bounds 0.0348    solve 0.1648    add 0.0029    
Accumulated time: pickout 0.0768    decision 0.9466    set_bounds 0.6046    solve 2.6663    add 0.6101    
Current (lb-rhs): -0.14949119091033936
4680 domains visited
Cumulative time: 6.420978307723999

BaB round 12
batch: 336
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 733] [/input-8, 733] [/input-8, 1579] [/input-8, 733] [/input-8, 733] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] [/input-8, 412] 
cut re-enabled after branching node selection
0 lb beta sum: 2.464749336242676, worst -0.14949166774749756
10 lb beta sum: 2.464749336242676, worst -0.1494847536087036
Time: prepare 0.0287    bound 0.1389    transfer 0.0040    finalize 0.0029    func 0.1796    
Accumulated time: func 2.8939    prepare 0.4307    bound 2.3003    transfer 0.0439    finalize 0.0543    
all_split False
======================Cut inference begins======================
max lb tensor(0.17187607) min lb tensor(-0.14947975)
Number of Verified Splits: 198 of 672
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.05082249641418457 
BICCOS Cumulative time: 1.4708540439605713
Preprocessing time: 0.018960237503051758 Inference time: 0.029169559478759766 Add cuts time: 0.002194643020629883 Cut analysis time: 0.0004980564117431641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14948 (21), -0.14930 (21), -0.14904 (21), -0.14887 (21), -0.14673 (21), -0.14655 (21), -0.14629 (21), -0.14612 (21), -0.14406 (21), -0.14374 (21), -0.14365 (21), -0.14330 (21), -0.14135 (21), -0.14100 (21), -0.14087 (21), -0.14055 (21), -0.13919 (21), -0.13861 (21), -0.13633 (21), -0.13584 (21), 
Length of domains: 474
Time: pickout 0.0058    decision 0.0292    set_bounds 0.0287    solve 0.1798    add 0.0024    
Accumulated time: pickout 0.0826    decision 0.9757    set_bounds 0.6333    solve 2.8461    add 0.6125    
Current (lb-rhs): -0.14947974681854248
5154 domains visited
Cumulative time: 6.719295978546143

BaB round 13
batch: 474
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] [/input-8, 209] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16193461418151855
10 lb beta sum: 2.0780093669891357, worst -0.14948183298110962
Time: prepare 0.0194    bound 0.1366    transfer 0.0015    finalize 0.0038    func 0.1673    
Accumulated time: func 3.0612    prepare 0.4503    bound 2.4370    transfer 0.0454    finalize 0.0581    
all_split False
======================Cut inference begins======================
max lb tensor(0.29297423) min lb tensor(-0.14947614)
Number of Verified Splits: 301 of 948
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.08004903793334961 
BICCOS Cumulative time: 1.550903081893921
Preprocessing time: 0.027921676635742188 Inference time: 0.04538083076477051 Add cuts time: 0.0062291622161865234 Cut analysis time: 0.0005173683166503906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14948 (22), -0.14929 (22), -0.14904 (22), -0.14886 (22), -0.14673 (22), -0.14654 (22), -0.14629 (22), -0.14611 (22), -0.14404 (22), -0.14373 (22), -0.14360 (22), -0.14329 (22), -0.14129 (22), -0.14095 (22), -0.14085 (22), -0.14053 (22), -0.13919 (22), -0.13861 (22), -0.13633 (22), -0.13584 (22), 
Length of domains: 647
Time: pickout 0.0084    decision 0.0361    set_bounds 0.0408    solve 0.1676    add 0.0028    
Accumulated time: pickout 0.0910    decision 1.0118    set_bounds 0.6741    solve 3.0136    add 0.6154    
Current (lb-rhs): -0.14947614073753357
5801 domains visited
Cumulative time: 7.057300329208374

BaB round 14
batch: 647
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] [/input-8, 434] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3465211391448975, worst -0.14947590231895447
10 lb beta sum: 2.3465211391448975, worst -0.1494821012020111
Time: prepare 0.0551    bound 0.1456    transfer 0.0095    finalize 0.0059    func 0.2245    
Accumulated time: func 3.2856    prepare 0.5057    bound 2.5825    transfer 0.0548    finalize 0.0641    
all_split False
======================Cut inference begins======================
max lb tensor(0.23937368) min lb tensor(-0.14947399)
Number of Verified Splits: 282 of 1294
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.08837628364562988 
BICCOS Cumulative time: 1.6392793655395508
Preprocessing time: 0.03823518753051758 Inference time: 0.04516959190368652 Add cuts time: 0.004442691802978516 Cut analysis time: 0.0005288124084472656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14947 (23), -0.14928 (23), -0.14904 (23), -0.14886 (23), -0.14672 (23), -0.14653 (23), -0.14628 (23), -0.14611 (23), -0.14404 (23), -0.14371 (23), -0.14360 (23), -0.14326 (23), -0.14129 (23), -0.14095 (23), -0.14084 (23), -0.14053 (23), -0.13919 (23), -0.13861 (23), -0.13633 (23), -0.13584 (23), 
Length of domains: 1012
Time: pickout 0.0099    decision 0.0451    set_bounds 0.0551    solve 0.2248    add 0.0037    
Accumulated time: pickout 0.1009    decision 1.0568    set_bounds 0.7292    solve 3.2384    add 0.6191    
Current (lb-rhs): -0.14947399497032166
6813 domains visited
Cumulative time: 7.487323522567749

BaB round 15
batch: 1012
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 227] [/input-8, 227] [/input-8, 1686] [/input-8, 227] [/input-8, 227] [/input-8, 1686] [/input-8, 227] [/input-8, 227] [/input-8, 1686] [/input-8, 227] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3055686950683594, worst -0.14947351813316345
10 lb beta sum: 2.3055686950683594, worst -0.14947852492332458
Time: prepare 0.0870    bound 0.1705    transfer 0.0039    finalize 0.0095    func 0.2847    
Accumulated time: func 3.5703    prepare 0.5929    bound 2.7530    transfer 0.0587    finalize 0.0735    
all_split False
======================Cut inference begins======================
max lb tensor(0.24151039) min lb tensor(-0.14947352)
Number of Verified Splits: 875 of 2024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.21745705604553223 
BICCOS Cumulative time: 1.856736421585083
Preprocessing time: 0.06088852882385254 Inference time: 0.1454181671142578 Add cuts time: 0.010561227798461914 Cut analysis time: 0.0005891323089599609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14947 (24), -0.14928 (24), -0.14904 (24), -0.14886 (24), -0.14672 (24), -0.14653 (24), -0.14628 (24), -0.14611 (24), -0.14403 (24), -0.14371 (24), -0.14360 (24), -0.14326 (24), -0.14129 (24), -0.14095 (24), -0.14084 (24), -0.14052 (24), -0.13919 (24), -0.13861 (24), -0.13633 (24), -0.13584 (24), 
Length of domains: 1149
Time: pickout 0.0188    decision 0.1966    set_bounds 0.0860    solve 0.2850    add 0.0042    
Accumulated time: pickout 0.1196    decision 1.2535    set_bounds 0.8152    solve 3.5234    add 0.6233    
Current (lb-rhs): -0.14947351813316345
7962 domains visited
Cumulative time: 8.306331396102905

BaB round 16
batch: 1149
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 434] [/input-8, 1938] [/input-8, 227] [/input-8, 434] [/input-8, 213] [/input-8, 434] [/input-8, 415] [/input-8, 1938] [/input-8, 213] [/input-8, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 2.305830955505371, worst -0.14947351813316345
10 lb beta sum: 2.305830955505371, worst -0.14947852492332458
Time: prepare 0.1006    bound 0.1863    transfer 0.0037    finalize 0.0121    func 0.3183    
Accumulated time: func 3.8886    prepare 0.6937    bound 2.9393    transfer 0.0624    finalize 0.0856    
all_split False
======================Cut inference begins======================
max lb tensor(0.23829615) min lb tensor(-0.14947352)
Number of Verified Splits: 741 of 2298
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.34692978858947754 
BICCOS Cumulative time: 2.2036662101745605
Preprocessing time: 0.06957125663757324 Inference time: 0.26727914810180664 Add cuts time: 0.009451866149902344 Cut analysis time: 0.0006275177001953125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14947 (25), -0.14928 (25), -0.14904 (25), -0.14886 (25), -0.14672 (25), -0.14653 (25), -0.14628 (25), -0.14611 (25), -0.14403 (25), -0.14371 (25), -0.14360 (25), -0.14326 (25), -0.14129 (25), -0.14095 (25), -0.14084 (25), -0.14052 (25), -0.13919 (25), -0.13860 (25), -0.13633 (25), -0.13584 (25), 
Length of domains: 1557
Time: pickout 0.0180    decision 0.0719    set_bounds 0.0943    solve 0.3187    add 0.0050    
Accumulated time: pickout 0.1377    decision 1.3254    set_bounds 0.9096    solve 3.8420    add 0.6283    
Current (lb-rhs): -0.14947351813316345
9519 domains visited
Cumulative time: 9.170262098312378

BaB round 17
batch: 1557
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2759] [/input, 2759] [/input-8, 578] [/input-8, 578] [/input, 2741] [/input, 2741] [/input, 2759] [/input, 2759] [/input, 2741] [/input, 2759] 
cut re-enabled after branching node selection
0 lb beta sum: 2.294126033782959, worst -0.14947351813316345
10 lb beta sum: 2.294126033782959, worst -0.1494787633419037
Time: prepare 0.1434    bound 0.2317    transfer 0.0057    finalize 0.0156    func 0.4174    
Accumulated time: func 4.3060    prepare 0.8374    bound 3.1710    transfer 0.0681    finalize 0.1012    
all_split False
======================Cut inference begins======================
max lb tensor(0.24025524) min lb tensor(-0.14947328)
Number of Verified Splits: 994 of 3114
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.2845797538757324 
BICCOS Cumulative time: 2.488245964050293
Preprocessing time: 0.09640145301818848 Inference time: 0.17061138153076172 Add cuts time: 0.01693272590637207 Cut analysis time: 0.0006341934204101562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14947 (26), -0.14928 (26), -0.14904 (26), -0.14886 (26), -0.14672 (26), -0.14653 (26), -0.14628 (26), -0.14611 (26), -0.14403 (26), -0.14371 (26), -0.14360 (26), -0.14326 (26), -0.14129 (26), -0.14095 (26), -0.14084 (26), -0.14052 (26), -0.13919 (26), -0.13860 (26), -0.13633 (26), -0.13584 (26), 
Length of domains: 2120
Time: pickout 0.0313    decision 0.0927    set_bounds 0.1205    solve 0.4180    add 0.0089    
Accumulated time: pickout 0.1690    decision 1.4181    set_bounds 1.0301    solve 4.2600    add 0.6372    
Current (lb-rhs): -0.14947327971458435
11639 domains visited
Cumulative time: 10.140262365341187

BaB round 18
batch: 2120
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3268] [/input, 3268] [/input, 2759] [/input, 2759] [/input-8, 578] [/input, 3268] [/input, 2741] [/input, 2741] [/input-8, 578] [/input, 3268] 
cut re-enabled after branching node selection
0 lb beta sum: 2.292602062225342, worst -0.14714846014976501
10 lb beta sum: 2.292602062225342, worst -0.14715346693992615
Time: prepare 0.2037    bound 0.2904    transfer 0.0162    finalize 0.0276    func 0.5668    
Accumulated time: func 4.8727    prepare 1.0414    bound 3.4614    transfer 0.0843    finalize 0.1288    
all_split False
======================Cut inference begins======================
max lb tensor(0.24016082) min lb tensor(-0.14714655)
Number of Verified Splits: 692 of 4240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.2688412666320801 
BICCOS Cumulative time: 2.757087230682373
Preprocessing time: 0.1316967010498047 Inference time: 0.1233358383178711 Add cuts time: 0.013172388076782227 Cut analysis time: 0.0006363391876220703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14715 (27), -0.14696 (27), -0.14671 (27), -0.14653 (27), -0.14563 (27), -0.14544 (27), -0.14520 (27), -0.14501 (27), -0.14439 (27), -0.14420 (27), -0.14396 (27), -0.14378 (27), -0.14288 (27), -0.14269 (27), -0.14245 (27), -0.14227 (27), -0.14170 (27), -0.14138 (27), -0.14127 (27), -0.14094 (27), 
Length of domains: 3548
Time: pickout 0.0365    decision 0.1215    set_bounds 0.3135    solve 0.5679    add 0.0163    
Accumulated time: pickout 0.2055    decision 1.5396    set_bounds 1.3435    solve 4.8279    add 0.6535    
Current (lb-rhs): -0.1471465528011322
15187 domains visited
Cumulative time: 11.475675582885742

BaB round 19
batch: 3548
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 578] [/input-8, 578] [/input-12, 57] [/input, 3268] [/input, 3268] [/input-8, 578] [/input-8, 578] [/input-8, 578] [/input, 3268] [/input-8, 578] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2780604362487793, worst -0.14594945311546326
10 lb beta sum: 2.2780604362487793, worst -0.14594563841819763
Time: prepare 0.3464    bound 0.4411    transfer 0.0271    finalize 0.0426    func 0.9037    
Accumulated time: func 5.7765    prepare 1.3880    bound 3.9024    transfer 0.1114    finalize 0.1714    
all_split False
======================Cut inference begins======================
max lb tensor(0.24002600) min lb tensor(-0.14594015)
Number of Verified Splits: 576 of 7096
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.35100245475769043 
BICCOS Cumulative time: 3.1080896854400635
Preprocessing time: 0.2245616912841797 Inference time: 0.11410737037658691 Add cuts time: 0.011695384979248047 Cut analysis time: 0.0006380081176757812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14594 (28), -0.14577 (28), -0.14551 (28), -0.14534 (28), -0.14442 (28), -0.14425 (28), -0.14399 (28), -0.14383 (28), -0.14319 (28), -0.14301 (28), -0.14275 (28), -0.14259 (28), -0.14167 (28), -0.14149 (28), -0.14123 (28), -0.14107 (28), -0.14052 (28), -0.14018 (28), -0.14008 (28), -0.13974 (28), 
Length of domains: 6520
Time: pickout 0.0751    decision 0.4398    set_bounds 0.4700    solve 0.9051    add 0.0196    
Accumulated time: pickout 0.2806    decision 1.9794    set_bounds 1.8135    solve 5.7330    add 0.6731    
Current (lb-rhs): -0.1459401547908783
21707 domains visited
Cumulative time: 13.750227451324463

BaB round 20
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 213] [/input-8, 213] [/input, 3268] [/input-8, 44] [/input, 3268] [/input, 3268] [/input-8, 213] [/input-8, 213] [/input-8, 213] [/input, 3268] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2581095695495605, worst -0.14288148283958435
10 lb beta sum: 2.2581095695495605, worst -0.14288553595542908
Time: prepare 0.4102    bound 0.4961    transfer 0.0387    finalize 0.0495    func 1.0476    
Accumulated time: func 6.8241    prepare 1.7986    bound 4.3986    transfer 0.1501    finalize 0.2209    
all_split False
======================Cut inference begins======================
max lb tensor(0.23953485) min lb tensor(-0.14287934)
Number of Verified Splits: 1454 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.8097145557403564 
BICCOS Cumulative time: 3.91780424118042
Preprocessing time: 0.26165199279785156 Inference time: 0.5045843124389648 Add cuts time: 0.042786359786987305 Cut analysis time: 0.0006918907165527344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14288 (29), -0.14271 (29), -0.14245 (29), -0.14229 (29), -0.14211 (29), -0.14194 (29), -0.14168 (29), -0.14152 (29), -0.14136 (29), -0.14119 (29), -0.14093 (29), -0.14077 (29), -0.14059 (29), -0.14042 (29), -0.14016 (29), -0.14009 (29), -0.14000 (29), -0.13991 (29), -0.13965 (29), -0.13953 (29), 
Length of domains: 9162
Time: pickout 0.0732    decision 0.4235    set_bounds 0.3671    solve 1.0498    add 0.0231    
Accumulated time: pickout 0.3538    decision 2.4029    set_bounds 2.1806    solve 6.7829    add 0.6962    
Current (lb-rhs): -0.14287933707237244
28445 domains visited
current_vram/total_varm: 9.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 16.521706104278564

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1938] [/input-8, 1938] [/input-8, 733] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] [/input-8, 1938] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2556450366973877, worst -0.14129123091697693
10 lb beta sum: 2.2556450366973877, worst -0.14129242300987244
Time: prepare 0.8045    bound 0.9235    transfer 0.0750    finalize 0.1004    func 2.0104    
Accumulated time: func 8.8345    prepare 2.6034    bound 5.3220    transfer 0.2251    finalize 0.3213    
all_split False
======================Cut inference begins======================
max lb tensor(0.23999560) min lb tensor(-0.14128694)
Number of Verified Splits: 2547 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 1.378356695175171 
BICCOS Cumulative time: 5.296160936355591
Preprocessing time: 0.7794249057769775 Inference time: 0.5449345111846924 Add cuts time: 0.05335712432861328 Cut analysis time: 0.0006401538848876953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14129 (30), -0.14112 (30), -0.14085 (30), -0.14070 (30), -0.14049 (30), -0.14032 (30), -0.14006 (30), -0.13990 (30), -0.13977 (30), -0.13960 (30), -0.13933 (30), -0.13918 (30), -0.13897 (30), -0.13880 (30), -0.13854 (30), -0.13849 (30), -0.13838 (30), -0.13832 (30), -0.13806 (30), -0.13794 (30), 
Length of domains: 14807
Time: pickout 0.1435    decision 0.4497    set_bounds 0.9633    solve 2.0138    add 0.0361    
Accumulated time: pickout 0.4973    decision 2.8526    set_bounds 3.1440    solve 8.7967    add 0.7323    
Current (lb-rhs): -0.1412869393825531
42282 domains visited
current_vram/total_varm: 18.4GB/99.9GB, batch_size increase to 16384
Cumulative time: 21.54926061630249

BaB round 22
batch: 14807
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 204] [/input-8, 217] [/input, 2865] [/input-8, 204] [/input, 2865] [/input-8, 204] [/input-8, 204] [/input-8, 204] [/input-8, 204] [/input-8, 204] 
cut re-enabled after branching node selection
0 lb beta sum: 2.244577169418335, worst -0.13910803198814392
10 lb beta sum: 2.244577169418335, worst -0.13911494612693787
Time: prepare 1.4778    bound 1.6163    transfer 0.1454    finalize 0.1980    func 3.6322    
Accumulated time: func 12.4667    prepare 4.0816    bound 6.9383    transfer 0.3705    finalize 0.5194    
all_split False
======================Cut inference begins======================
max lb tensor(0.24023378) min lb tensor(-0.13910803)
Number of Verified Splits: 4240 of 29614
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 2.3146276473999023 
BICCOS Cumulative time: 7.610788583755493
Preprocessing time: 1.2772541046142578 Inference time: 0.9533839225769043 Add cuts time: 0.0832967758178711 Cut analysis time: 0.0006928443908691406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13911 (31), -0.13894 (31), -0.13868 (31), -0.13852 (31), -0.13831 (31), -0.13814 (31), -0.13787 (31), -0.13775 (31), -0.13772 (31), -0.13759 (31), -0.13758 (31), -0.13742 (31), -0.13732 (31), -0.13716 (31), -0.13715 (31), -0.13700 (31), -0.13695 (31), -0.13679 (31), -0.13678 (31), -0.13662 (31), 
Length of domains: 25374
Time: pickout 0.3077    decision 1.0986    set_bounds 1.6388    solve 3.6388    add 0.0644    
Accumulated time: pickout 0.8049    decision 3.9512    set_bounds 4.7828    solve 12.4355    add 0.7967    
Current (lb-rhs): -0.13910803198814392
67656 domains visited
Cumulative time: 30.684049367904663

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2865] [/input, 3233] [/input-8, 204] [/input, 2865] [/input-8, 204] [/input, 2865] [/input-8, 1938] [/input, 2865] [/input-8, 1938] [/input-8, 1938] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2354319095611572, worst -0.13663586974143982
10 lb beta sum: 2.2354319095611572, worst -0.13664135336875916
Time: prepare 1.6707    bound 1.7777    transfer 0.1486    finalize 0.2194    func 4.0315    
Accumulated time: func 16.4982    prepare 5.7526    bound 8.7160    transfer 0.5191    finalize 0.7388    
all_split False
======================Cut inference begins======================
max lb tensor(0.23995316) min lb tensor(-0.13663587)
Number of Verified Splits: 3861 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 2.453730344772339 
BICCOS Cumulative time: 10.064518928527832
Preprocessing time: 1.4892621040344238 Inference time: 0.8843939304351807 Add cuts time: 0.0793907642364502 Cut analysis time: 0.0006835460662841797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13695 (31), -0.13678 (31), -0.13664 (32), -0.13651 (31), -0.13647 (32), -0.13636 (31), -0.13620 (32), -0.13604 (32), -0.13584 (32), -0.13567 (32), -0.13543 (31), -0.13540 (32), -0.13528 (32), -0.13526 (31), -0.13525 (32), -0.13511 (32), -0.13507 (32), -0.13500 (31), -0.13490 (32), -0.13485 (32), 
Length of domains: 37897
Time: pickout 0.3057    decision 1.7755    set_bounds 1.8598    solve 4.0380    add 0.0897    
Accumulated time: pickout 1.1106    decision 5.7267    set_bounds 6.6426    solve 16.4735    add 0.8864    
Current (lb-rhs): -0.13695058226585388
96563 domains visited
current_vram/total_varm: 34.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 41.28308320045471

BaB round 24
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2759] [/input-8, 929] [/input-8, 929] [/input-8, 204] [/input-8, 204] [/input-8, 929] [/input-8, 929] [/input-8, 923] [/input-8, 923] [/input-8, 929] 
cut re-enabled after branching node selection
0 lb beta sum: 2.224202871322632, worst -0.1349235475063324
10 lb beta sum: 2.224202871322632, worst -0.13492855429649353
Time: prepare 3.3707    bound 8.6893    transfer 0.3000    finalize 0.4466    func 13.8458    
Accumulated time: func 30.3440    prepare 9.1238    bound 17.4053    transfer 0.8191    finalize 1.1853    
all_split False
======================Cut inference begins======================
max lb tensor(0.24046338) min lb tensor(-0.13492355)
Number of Verified Splits: 6616 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 4.610893964767456 
BICCOS Cumulative time: 14.675412893295288
Preprocessing time: 2.0943384170532227 Inference time: 2.233438730239868 Add cuts time: 0.282301664352417 Cut analysis time: 0.0008151531219482422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13492 (33), -0.13476 (33), -0.13472 (33), -0.13457 (33), -0.13448 (32), -0.13431 (32), -0.13412 (33), -0.13405 (32), -0.13396 (33), -0.13393 (33), -0.13389 (32), -0.13377 (33), -0.13357 (33), -0.13340 (33), -0.13337 (33), -0.13335 (33), -0.13321 (33), -0.13319 (33), -0.13315 (33), -0.13300 (33), 
Length of domains: 64049
Time: pickout 0.6085    decision 3.3190    set_bounds 3.9576    solve 13.8572    add 0.1459    
Accumulated time: pickout 1.7191    decision 9.0457    set_bounds 10.6002    solve 30.3307    add 1.0323    
Current (lb-rhs): -0.1349235475063324
155483 domains visited
Cumulative time: 67.90759611129761

BaB round 25
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 232] [/input, 2760] [/input-8, 929] [/input, 2760] [/input-8, 733] [/input, 2722] [/input-8, 415] [/input-8, 232] [/input-8, 44] [/input, 2865] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2157559394836426, worst -0.13276681303977966
10 lb beta sum: 2.2157559394836426, worst -0.13279113173484802
Time: prepare 3.3896    bound 8.6893    transfer 0.2957    finalize 1.2755    func 14.0767    
Accumulated time: func 44.4207    prepare 12.5137    bound 26.0946    transfer 1.1147    finalize 2.4608    
all_split False
======================Cut inference begins======================
max lb tensor(0.24033284) min lb tensor(-0.13276681)
Number of Verified Splits: 6698 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 5.046378135681152 
BICCOS Cumulative time: 19.72179102897644
Preprocessing time: 2.2680139541625977 Inference time: 2.5885109901428223 Add cuts time: 0.1890268325805664 Cut analysis time: 0.0008263587951660156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13492 (33), -0.13476 (33), -0.13472 (33), -0.13457 (33), -0.13412 (33), -0.13396 (33), -0.13393 (33), -0.13377 (33), -0.13357 (33), -0.13340 (33), -0.13337 (33), -0.13335 (33), -0.13321 (33), -0.13319 (33), -0.13315 (33), -0.13300 (33), -0.13277 (33), -0.13260 (33), -0.13257 (33), -0.13256 (33), 
Length of domains: 90119
Time: pickout 0.6326    decision 3.3016    set_bounds 3.8096    solve 14.0895    add 13.3906    
Accumulated time: pickout 2.3517    decision 12.3473    set_bounds 14.4098    solve 44.4202    add 14.4229    
Current (lb-rhs): -0.1349235475063324
214321 domains visited
Cumulative time: 108.33253216743469

BaB round 26
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 217] [/input-8, 44] [/input-8, 44] [/input-8, 232] [/input-8, 232] [/input, 2865] [/input, 2865] [/input-8, 217] [/input, 3233] [/input-8, 217] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2187485694885254, worst -0.1349235475063324
10 lb beta sum: 2.2187485694885254, worst -0.13492855429649353
Time: prepare 3.4258    bound 8.6859    transfer 0.2955    finalize 0.4639    func 13.2937    
Accumulated time: func 57.7144    prepare 15.9399    bound 34.7805    transfer 1.4102    finalize 2.9247    
all_split False
======================Cut inference begins======================
max lb tensor(0.24030924) min lb tensor(-0.13492355)
Number of Verified Splits: 8194 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 3.949068307876587 
BICCOS Cumulative time: 23.670859336853027
Preprocessing time: 2.005176305770874 Inference time: 1.7978699207305908 Add cuts time: 0.14513349533081055 Cut analysis time: 0.0008885860443115234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13492 (34), -0.13476 (34), -0.13472 (34), -0.13457 (34), -0.13412 (34), -0.13396 (34), -0.13393 (34), -0.13376 (34), -0.13357 (34), -0.13340 (34), -0.13337 (34), -0.13335 (34), -0.13321 (34), -0.13319 (34), -0.13315 (34), -0.13300 (34), -0.13277 (33), -0.13260 (33), -0.13257 (33), -0.13256 (34), 
Length of domains: 114693
Time: pickout 0.6450    decision 3.3091    set_bounds 4.0809    solve 14.3497    add 0.1747    
Accumulated time: pickout 2.9967    decision 15.6564    set_bounds 18.4907    solve 58.7699    add 14.5976    
Current (lb-rhs): -0.1349235475063324
271663 domains visited
Cumulative time: 135.0186803340912

BaB round 27
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 929] [/input-8, 402] [/input-8, 929] [/input-8, 929] [/input-8, 402] [/input-8, 44] [/input-8, 929] [/input-8, 402] [/input-8, 402] [/input, 2865] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13309764862060547
10 lb beta sum: 1.4526948928833008, worst -0.13279065489768982
Time: prepare 1.8917    bound 8.6985    transfer 0.2983    finalize 1.8082    func 13.1250    
Accumulated time: func 70.8393    prepare 17.8320    bound 43.4790    transfer 1.7085    finalize 4.7329    
all_split False
======================Cut inference begins======================
max lb tensor(0.32309008) min lb tensor(-0.13276681)
Number of Verified Splits: 8938 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 5.547598361968994 
BICCOS Cumulative time: 29.21845769882202
Preprocessing time: 1.967055082321167 Inference time: 3.3907344341278076 Add cuts time: 0.18886828422546387 Cut analysis time: 0.0009405612945556641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13492 (34), -0.13476 (34), -0.13472 (34), -0.13457 (34), -0.13412 (34), -0.13396 (34), -0.13393 (34), -0.13376 (34), -0.13357 (34), -0.13340 (34), -0.13337 (34), -0.13335 (34), -0.13321 (34), -0.13319 (34), -0.13315 (34), -0.13300 (34), -0.13277 (34), -0.13260 (34), -0.13257 (34), -0.13256 (34), 
Length of domains: 138523
Time: pickout 0.6584    decision 4.0448    set_bounds 3.0171    solve 13.1366    add 0.1387    
Accumulated time: pickout 3.6551    decision 19.7013    set_bounds 21.5078    solve 71.9066    add 14.7364    
Current (lb-rhs): -0.1349235475063324
328261 domains visited
Cumulative time: 161.76263308525085

BaB round 28
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 929] [/input-8, 929] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 217] [/input-8, 217] [/input-8, 217] [/input, 2865] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1315298080444336
10 lb beta sum: 1.4617576599121094, worst -0.1312466263771057
Time: prepare 1.9147    bound 8.7014    transfer 0.3031    finalize 2.0751    func 13.4161    
Accumulated time: func 84.2554    prepare 19.7471    bound 52.1803    transfer 2.0116    finalize 6.8080    
all_split False
======================Cut inference begins======================
max lb tensor(0.32166302) min lb tensor(-0.13119659)
Number of Verified Splits: 10873 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 4.602872848510742 
BICCOS Cumulative time: 33.821330547332764
Preprocessing time: 2.021160840988159 Inference time: 2.380671977996826 Add cuts time: 0.20018672943115234 Cut analysis time: 0.0008533000946044922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13492 (34), -0.13476 (34), -0.13472 (34), -0.13457 (34), -0.13412 (34), -0.13396 (34), -0.13393 (34), -0.13376 (34), -0.13357 (34), -0.13340 (34), -0.13337 (34), -0.13335 (34), -0.13321 (34), -0.13319 (34), -0.13315 (34), -0.13300 (34), -0.13277 (34), -0.13260 (34), -0.13257 (34), -0.13256 (34), 
Length of domains: 160418
Time: pickout 0.6602    decision 3.3209    set_bounds 3.2399    solve 13.4290    add 0.1532    
Accumulated time: pickout 4.3154    decision 23.0222    set_bounds 24.7477    solve 85.3356    add 14.8896    
Current (lb-rhs): -0.1349235475063324
382924 domains visited
Cumulative time: 187.38839864730835

BaB round 29
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3218] [/input, 3218] [/input, 3218] [/input, 3218] [/input, 3218] [/input, 3218] [/input-8, 434] [/input-8, 434] [/input-8, 923] [/input, 3218] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13381028175354004
10 lb beta sum: 1.4770278930664062, worst -0.13342586159706116
Time: prepare 1.9058    bound 8.7032    transfer 0.3584    finalize 2.3191    func 13.7089    
Accumulated time: func 97.9643    prepare 21.6533    bound 60.8835    transfer 2.3700    finalize 9.1271    
all_split False
======================Cut inference begins======================
max lb tensor(0.31936693) min lb tensor(-0.13339548)
Number of Verified Splits: 7128 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 30
#cuts >= 20: 0
BICCOS time: 3.8221542835235596 
BICCOS Cumulative time: 37.64348483085632
Preprocessing time: 2.0218586921691895 Inference time: 1.6413521766662598 Add cuts time: 0.1582021713256836 Cut analysis time: 0.0007412433624267578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13357 (34), -0.13340 (34), -0.13340 (35), -0.13337 (34), -0.13323 (35), -0.13321 (34), -0.13320 (35), -0.13304 (35), -0.13277 (34), -0.13260 (34), -0.13260 (35), -0.13257 (34), -0.13243 (35), -0.13241 (35), -0.13241 (34), -0.13224 (35), -0.13200 (34), -0.13183 (34), -0.13182 (35), -0.13180 (34), 
Length of domains: 186058
Time: pickout 0.6620    decision 4.9282    set_bounds 3.1221    solve 13.7241    add 0.2179    
Accumulated time: pickout 4.9773    decision 27.9504    set_bounds 27.8699    solve 99.0596    add 15.1075    
Current (lb-rhs): -0.1335669457912445
441332 domains visited
Time out!!!!!!!!
Result: unknown in 217.2337 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
         -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [679]; unstable size 679; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 679] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 679] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 185] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.08787823,  0.95483637,  4.05660629,  3.03147221,  3.64727974,
          3.09590125,  4.17433357,  4.76398993, -0.51713562]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
         -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.11it/s]100%|██████████| 1/1 [00:00<00:00,  9.10it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.81932449, -25.24547768, -28.96639633, -27.77052689, -28.75254059,
          -27.98299408, -28.93449783, -30.10167694, -23.77865982, -23.70247650]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07618332]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1126 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.71731948852539
alpha/beta optimization time: 1.201500654220581
initial alpha-crown bounds: tensor([[ 2.13841915,  0.97674716,  4.10323906,  3.07848287,  3.70226955,
          3.14509630,  4.22430420,  4.82284546, -0.47408342]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.47408342361450195
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.62665581703186
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.62661457061768
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.62658882141113
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.62656664848328
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.62654829025269
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.62652945518494
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.62651085853577
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.62649202346802
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.626473903656
Verifying property 8 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47408342]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
        -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47408342]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 679
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 180
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 875
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001010894775390625
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.47408390045166016
10 lb beta sum: 0.0, worst -0.4740877151489258
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    func 0.0530    
Accumulated time: func 0.0530    prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 24] 
split level 3: [/input-8, 1973] 
split level 4: [/input-12, 92] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 46] 
split level 8: [/input-8, 1971] 
split level 9: [/input-12, 34] 
split level 10: [/input-8, 940] 
split level 11: [/input-8, 1706] 
split level 12: [/input-8, 1965] 
split level 13: [/input-12, 2] 
split level 14: [/input-8, 1967] 
split level 15: [/input-8, 1950] 
split level 16: [/input-8, 1379] 
split level 17: [/input-8, 1647] 
split level 18: [/input-12, 90] 
split level 19: [/input-8, 766] 
split level 20: [/input-8, 1655] 
split level 21: [/input-8, 354] 
split level 22: [/input, 4071] 
split level 23: [/input-8, 891] 
split level 24: [/input-8, 1388] 
split level 25: [/input-8, 1391] 
split level 26: [/input-8, 1399] 
split level 27: [/input-8, 253] 
split level 28: [/input, 3315] 
split level 29: [/input-8, 1502] 
split level 30: [/input-8, 363] 
split level 31: [/input-8, 158] 
split level 32: [/input-8, 255] 
split level 33: [/input-8, 247] 
split level 34: [/input, 3571] 
split level 35: [/input, 1463] 
split level 36: [/input-8, 733] 
split level 37: [/input-8, 1595] 
split level 38: [/input-8, 1510] 
split level 39: [/input-8, 510] 
split level 40: [/input-8, 1812] 
split level 41: [/input-8, 1981] 
split level 42: [/input, 2744] 
split level 43: [/input-8, 243] 
split level 44: [/input, 1012] 
split level 45: [/input-8, 1704] 
split level 46: [/input-8, 254] 
split level 47: [/input, 1250] 
split level 48: [/input, 646] 
split level 49: [/input, 1251] 
split level 50: [/input-8, 752] 
split level 51: [/input, 1445] 
split level 52: [/input-8, 1955] 
split level 53: [/input-8, 764] 
split level 54: [/input-8, 285] 
split level 55: [/input, 1491] 
split level 56: [/input-8, 246] 
split level 57: [/input, 1252] 
split level 58: [/input, 2637] 
split level 59: [/input-8, 149] 
split level 60: [/input-8, 429] 
split level 61: [/input, 3165] 
split level 62: [/input, 1271] 
split level 63: [/input-8, 598] 
split level 64: [/input, 2195] 
split level 65: [/input-8, 142] 
split level 66: [/input, 2467] 
split level 67: [/input-8, 313] 
split level 68: [/input, 1234] 
split level 69: [/input, 2708] 
split level 70: [/input, 2005] 
split level 71: [/input, 3272] 
split level 72: [/input, 1021] 
split level 73: [/input-8, 1551] 
split level 74: [/input-8, 1527] 
split level 75: [/input, 1490] 
split level 76: [/input, 166] 
split level 77: [/input-8, 1633] 
split level 78: [/input, 4089] 
split level 79: [/input, 2451] 
split level 80: [/input, 2787] 
split level 81: [/input, 386] 
split level 82: [/input, 2026] 
split level 83: [/input-8, 1662] 
split level 84: [/input, 2021] 
split level 85: [/input, 1480] 
split level 86: [/input, 2006] 
split level 87: [/input, 3416] 
split level 88: [/input-8, 1598] 
split level 89: [/input-8, 1154] 
split level 90: [/input, 2020] 
split level 91: [/input, 385] 
split level 92: [/input, 2470] 
split level 93: [/input, 195] 
split level 94: [/input, 2785] 
split level 95: [/input, 2214] 
split level 96: [/input, 645] 
split level 97: [/input, 1398] 
split level 98: [/input, 1272] 
split level 99: [/input, 152] 
split level 100: [/input, 2022] 
split level 101: [/input, 2458] 
split level 102: [/input, 387] 
split level 103: [/input-8, 605] 
split level 104: [/input, 356] 
split level 105: [/input-12, 79] 
split level 106: [/input, 2212] 
split level 107: [/input, 1233] 
split level 108: [/input-8, 591] 
split level 109: [/input, 2422] 
split level 110: [/input, 168] 
split level 111: [/input, 1263] 
split level 112: [/input, 2004] 
split level 113: [/input, 193] 
split level 114: [/input, 2670] 
split level 115: [/input, 1691] 
split level 116: [/input, 843] 
split level 117: [/input, 2452] 
split level 118: [/input, 2211] 
split level 119: [/input, 3256] 
split level 120: [/input, 723] 
split level 121: [/input-8, 240] 
split level 122: [/input, 194] 
split level 123: [/input, 2438] 
split level 124: [/input, 2023] 
split level 125: [/input, 2024] 
split level 126: [/input, 3151] 
split level 127: [/input, 2216] 
split level 128: [/input, 2760] 
split level 129: [/input, 2450] 
split level 130: [/input, 185] 
split level 131: [/input, 899] 
split level 132: [/input-8, 379] 
split level 133: [/input-8, 1155] 
split level 134: [/input, 1275] 
split level 135: [/input, 401] 
split level 136: [/input, 2025] 
split level 137: [/input, 2724] 
split level 138: [/input, 897] 
split level 139: [/input-8, 1529] 
split level 140: [/input, 884] 
split level 141: [/input, 2392] 
split level 142: [/input, 2484] 
split level 143: [/input, 148] 
split level 144: [/input-8, 1631] 
split level 145: [/input, 915] 
split level 146: [/input-8, 248] 
split level 147: [/input, 2930] 
split level 148: [/input, 827] 
split level 149: [/input, 1274] 
split level 150: [/input, 2639] 
split level 151: [/input, 2455] 
split level 152: [/input, 828] 
split level 153: [/input, 388] 
split level 154: [/input-8, 1211] 
split level 155: [/input, 436] 
split level 156: [/input, 1789] 
split level 157: [/input, 2437] 
split level 158: [/input-8, 1770] 
split level 159: [/input-8, 1156] 
split level 160: [/input, 2914] 
split level 161: [/input, 1986] 
split level 162: [/input-8, 893] 
split level 163: [/input, 3491] 
split level 164: [/input-8, 1934] 
split level 165: [/input, 1273] 
split level 166: [/input-8, 1530] 
split level 167: [/input, 857] 
split level 168: [/input, 1023] 
split level 169: [/input, 165] 
split level 170: [/input, 3417] 
split level 171: [/input, 3441] 
split level 172: [/input, 3220] 
split level 173: [/input, 2029] 
split level 174: [/input-8, 1172] 
split level 175: [/input-8, 1702] 
split level 176: [/input, 420] 
split level 177: [/input, 694] 
split level 178: [/input, 2393] 
split level 179: [/input, 856] 
split level 180: [/input, 913] 
split level 181: [/input-8, 263] 
split level 182: [/input, 1900] 
split level 183: [/input, 2742] 
split level 184: [/input, 2408] 
split level 185: [/input, 435] 
split level 186: [/input, 1990] 
split level 187: [/input, 1989] 
split level 188: [/input, 662] 
split level 189: [/input, 3028] 
split level 190: [/input, 2846] 
split level 191: [/input-8, 1158] 
split level 192: [/input, 1020] 
split level 193: [/input, 3402] 
split level 194: [/input, 3135] 
split level 195: [/input, 2913] 
split level 196: [/input, 2232] 
split level 197: [/input, 2465] 
split level 198: [/input, 2420] 
split level 199: [/input, 2623] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4740304946899414
10 lb beta sum: 0.0, worst -0.47403669357299805
Time: prepare 0.0119    bound 0.0967    transfer 0.0020    finalize 0.0025    func 0.1158    
Accumulated time: func 0.1687    prepare 0.0221    bound 0.1492    transfer 0.0021    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(-0.11546898) min lb tensor(-0.47403049)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009775876998901367 
BICCOS Cumulative time: 0.009775876998901367
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46135 (1), -0.46118 (1), -0.46104 (1), -0.46091 (1), -0.46057 (1), -0.46045 (1), -0.46033 (1), -0.46029 (1), -0.46028 (1), -0.45985 (1), -0.45964 (1), -0.45950 (1), -0.45907 (1), -0.45902 (1), -0.45819 (1), -0.45791 (1), -0.45764 (1), -0.45639 (1), -0.45626 (1), -0.45387 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5124    set_bounds 0.0086    solve 0.1158    add 0.0680    
Accumulated time: pickout 0.0003    decision 0.5124    set_bounds 0.0086    solve 0.1158    add 0.0680    
Current (lb-rhs): -0.46135473251342773
50 domains visited
Cumulative time: 0.7735481262207031

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 85] [/input-12, 6] [/input-12, 6] [/input-12, 85] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 1: [/input-12, 85] [/input-12, 85] [/input-12, 24] [/input-12, 24] [/input-12, 85] [/input-12, 24] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 2: [/input-12, 24] [/input-12, 24] [/input-12, 46] [/input-12, 92] [/input-12, 92] [/input-8, 1973] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 3: [/input-12, 46] [/input-12, 46] [/input-8, 1971] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4388442039489746
10 lb beta sum: 0.0, worst -0.43829917907714844
Time: prepare 0.0128    bound 0.0964    transfer 0.0007    finalize 0.0023    func 0.1149    
Accumulated time: func 0.2836    prepare 0.0352    bound 0.2457    transfer 0.0029    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(0.17789650) min lb tensor(-0.43820190)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.012162446975708008 
BICCOS Cumulative time: 0.021938323974609375
Preprocessing time: 0.01152801513671875 Inference time: 0.0002655982971191406 Add cuts time: 0.00013637542724609375 Cut analysis time: 0.00023245811462402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24605 (2), -0.24072 (2), -0.24049 (2), -0.23992 (2), -0.23974 (2), -0.23747 (2), -0.23515 (2), -0.23448 (2), -0.22775 (2), -0.22636 (2), -0.22423 (2), -0.22258 (2), -0.21659 (2), -0.20666 (2), -0.20592 (2), -0.20343 (2), -0.20304 (2), -0.20268 (2), -0.20180 (2), -0.20118 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0243    set_bounds 0.0126    solve 0.1149    add 0.0785    
Accumulated time: pickout 0.0014    decision 0.5367    set_bounds 0.0212    solve 0.2308    add 0.1466    
Current (lb-rhs): -0.2460494041442871
100 domains visited
Cumulative time: 1.0180203914642334

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 85] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 6] [/input-12, 6] 
split level 1: [/input-12, 24] [/input-12, 85] [/input-12, 24] [/input-12, 85] [/input-12, 85] [/input-12, 24] [/input-12, 92] [/input-12, 92] [/input-12, 85] [/input-12, 24] 
split level 2: [/input-12, 92] [/input-12, 46] [/input-12, 92] [/input-12, 46] [/input-12, 46] [/input-12, 92] [/input-12, 46] [/input-12, 46] [/input-12, 92] [/input-12, 46] 
split level 3: [/input-12, 46] [/input-8, 1971] [/input-12, 46] [/input-8, 1706] [/input-8, 1706] [/input-12, 46] [/input-8, 1971] [/input-8, 1971] [/input-12, 46] [/input-8, 1971] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2273235321044922
10 lb beta sum: 0.2894163727760315, worst -0.22361087799072266
Time: prepare 0.0067    bound 0.1160    transfer 0.0008    finalize 0.0021    func 0.1282    
Accumulated time: func 0.4118    prepare 0.0422    bound 0.3617    transfer 0.0036    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.19695288) min lb tensor(-0.22194290)
Number of Verified Splits: 107 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 6
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.019885778427124023 
BICCOS Cumulative time: 0.0418241024017334
Preprocessing time: 0.011429548263549805 Inference time: 0.004695415496826172 Add cuts time: 0.003262042999267578 Cut analysis time: 0.0004987716674804688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06647 (3), -0.06641 (3), -0.06621 (3), -0.06559 (3), -0.06524 (3), -0.06467 (3), -0.06378 (3), -0.06320 (3), -0.06118 (3), -0.06059 (3), -0.06054 (3), -0.06014 (3), -0.05972 (3), -0.05711 (3), -0.05642 (3), -0.05551 (3), -0.05535 (3), -0.05391 (3), -0.05353 (3), -0.05297 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0153    solve 0.1283    add 0.0911    
Accumulated time: pickout 0.0024    decision 0.5560    set_bounds 0.0365    solve 0.3591    add 0.2377    
Current (lb-rhs): -0.06647388637065887
150 domains visited
Cumulative time: 1.2931797504425049

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 85] [/input-12, 85] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 6] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 24] [/input-12, 92] [/input-12, 92] 
split level 2: [/input-12, 38] [/input-12, 46] [/input-12, 46] [/input-8, 1971] [/input-8, 1971] [/input-8, 1971] [/input-8, 1971] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 3: [/input-12, 46] [/input-8, 1971] [/input-8, 1971] [/input-8, 1706] [/input-8, 1706] [/input-8, 1706] [/input-8, 1706] [/input-8, 1965] [/input-8, 1971] [/input-8, 1971] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06540203094482422
10 lb beta sum: 0.7384713292121887, worst -0.050685275346040726
Time: prepare 0.0072    bound 0.1318    transfer 0.0008    finalize 0.0021    func 0.1445    
Accumulated time: func 0.5563    prepare 0.0496    bound 0.4935    transfer 0.0044    finalize 0.0092    
all_split False
======================Cut inference begins======================
max lb tensor(0.47153330) min lb tensor(-0.04470727)
Number of Verified Splits: 370 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 13
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.03835296630859375 
BICCOS Cumulative time: 0.08017706871032715
Preprocessing time: 0.011511087417602539 Inference time: 0.017279863357543945 Add cuts time: 0.008851289749145508 Cut analysis time: 0.0007107257843017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02448 (4), -0.01066 (4), -0.00437 (4), -0.00205 (4), 
Length of domains: 4
Time: pickout 0.0010    decision 0.0198    set_bounds 0.0150    solve 0.1446    add 0.1163    
Accumulated time: pickout 0.0034    decision 0.5758    set_bounds 0.0515    solve 0.5037    add 0.3540    
Current (lb-rhs): -0.024476051330566406
154 domains visited
Cumulative time: 1.6284704208374023

Shallow-BaB round 5
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-8, 1973] 
split level 1: [/input-8, 1973] [/input-8, 1973] [/input-8, 1973] [/input-12, 92] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 56] [/input-12, 56] 
split level 3: [/input-12, 56] [/input-12, 56] [/input-12, 46] [/input-8, 1971] 
split level 4: [/input-8, 1971] [/input-12, 46] [/input-8, 1971] [/input-12, 46] 
split level 5: [/input-8, 1967] [/input-8, 1967] [/input-8, 1967] [/input-8, 1967] 
split level 6: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] 
split level 7: [/input-8, 1706] [/input-8, 1706] [/input-8, 1706] [/input-8, 1706] 
split level 8: [/input-8, 1965] [/input-8, 1965] [/input-8, 1965] [/input-8, 1965] 
split level 9: [/input-8, 1950] [/input-8, 1950] [/input-8, 1950] [/input-8, 1950] 
split level 10: [/input-8, 766] [/input-8, 766] [/input-8, 766] [/input-8, 766] 
split level 11: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] 
split level 12: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 13: [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] 
split level 14: [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] 
split level 15: [/input-8, 429] [/input-8, 429] [/input-8, 429] [/input-8, 429] 
split level 16: [/input-8, 1655] [/input-8, 1655] [/input-8, 1655] [/input-8, 1655] 
split level 17: [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] 
split level 18: [/input-8, 764] [/input-8, 764] [/input-8, 764] [/input-8, 764] 
split level 19: [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] 
split level 20: [/input-8, 752] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] 
split level 21: [/input-8, 1981] [/input-8, 752] [/input-8, 752] [/input-8, 1981] 
split level 22: [/input-8, 1388] [/input-8, 1981] [/input-8, 1981] [/input-8, 752] 
split level 23: [/input-8, 1510] [/input-8, 1510] [/input-8, 1399] [/input-8, 1510] 
split level 24: [/input-8, 1399] [/input-8, 1399] [/input-8, 1510] [/input-8, 1399] 
split level 25: [/input-8, 1502] [/input-8, 1704] [/input-8, 1704] [/input-8, 1502] 
split level 26: [/input-8, 1704] [/input-8, 1502] [/input-8, 1502] [/input, 3571] 
split level 27: [/input, 3571] [/input, 3571] [/input, 3571] [/input-8, 1704] 
split level 28: [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] 
split level 29: [/input-8, 1633] [/input-8, 1633] [/input-8, 149] [/input-8, 510] 
split level 30: [/input-8, 1700] [/input-8, 1700] [/input-8, 1700] [/input-8, 149] 
split level 31: [/input-8, 285] [/input-8, 1691] [/input-8, 1633] [/input-8, 1633] 
split level 32: [/input-8, 510] [/input-8, 149] [/input-8, 285] [/input-8, 285] 
split level 33: [/input-8, 149] [/input-8, 285] [/input-8, 1691] [/input-8, 1691] 
split level 34: [/input-8, 1691] [/input-8, 510] [/input-8, 510] [/input-8, 1700] 
split level 35: [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] 
split level 36: [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3417] 
split level 37: [/input-8, 1527] [/input-8, 1527] [/input, 3417] [/input, 3165] 
split level 38: [/input, 3417] [/input, 3417] [/input-8, 1527] [/input-8, 341] 
split level 39: [/input, 2408] [/input-8, 341] [/input-8, 313] [/input-8, 1527] 
split level 40: [/input-8, 313] [/input-8, 313] [/input, 2438] [/input-8, 313] 
split level 41: [/input, 359] [/input, 2438] [/input, 359] [/input, 2438] 
split level 42: [/input-8, 341] [/input, 359] [/input-8, 341] [/input-8, 1629] 
split level 43: [/input-8, 1631] [/input-8, 1631] [/input-8, 1631] [/input-8, 1631] 
split level 44: [/input-8, 1629] [/input-8, 1629] [/input-8, 1629] [/input, 359] 
split level 45: [/input-8, 1211] [/input-8, 1211] [/input-8, 1211] [/input-8, 1211] 
split level 46: [/input-8, 1934] [/input-8, 1934] [/input-8, 1934] [/input-8, 1934] 
split level 47: [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] [/input-8, 1702] 
split level 48: [/input-8, 379] [/input-8, 605] [/input-8, 379] [/input-8, 605] 
split level 49: [/input-8, 605] [/input-8, 379] [/input-8, 605] [/input-8, 379] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.056939125061035156

all verified at 1th iter
Time: prepare 0.0082    bound 0.0136    transfer 0.0008    finalize 0.0028    func 0.1855    
Accumulated time: func 0.7418    prepare 0.0604    bound 0.5071    transfer 0.0052    finalize 0.0120    
all_split False
======================Cut inference begins======================
max lb tensor(0.21572679) min lb tensor(0.00632572)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 13
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.04580068588256836 
BICCOS Cumulative time: 0.1259777545928955
Preprocessing time: 0.012440681457519531 Inference time: 0.01955413818359375 Add cuts time: 0.013068675994873047 Cut analysis time: 0.0007371902465820312
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0007    decision 0.1374    set_bounds 0.0123    solve 0.1856    add 0.0307    
Accumulated time: pickout 0.0040    decision 0.7132    set_bounds 0.0638    solve 0.6893    add 0.3847    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
154 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 6] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 24] 
split level 3: [/input-8, 1973] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 46] 
split level 6: [/input-8, 1971] 
split level 7: [/input-8, 1965] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1543731689453125
10 lb beta sum: 0.47959354519844055, worst -0.14692354202270508
Time: prepare 0.0051    bound 0.1303    transfer 0.0008    finalize 0.0014    func 0.1393    
Accumulated time: func 0.8812    prepare 0.0660    bound 0.6374    transfer 0.0060    finalize 0.0134    
all_split False
======================Cut inference begins======================
max lb tensor(0.62812698) min lb tensor(-0.14653063)
Number of Verified Splits: 209 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40507078170776367
10 lb beta sum: 1.0589990615844727, worst -0.3972642123699188
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 14
#cuts 4-6: 20
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.2527279853820801 
BICCOS Cumulative time: 0.3787057399749756
Preprocessing time: 0.007080078125 Inference time: 0.23764657974243164 Add cuts time: 0.006900310516357422 Cut analysis time: 0.0011010169982910156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14653 (8), -0.14355 (8), -0.13707 (8), -0.13484 (8), -0.13382 (8), -0.13009 (8), -0.12788 (8), -0.12326 (8), -0.08475 (8), -0.08410 (8), -0.07672 (8), -0.07568 (8), -0.07276 (8), -0.07218 (8), -0.07004 (8), -0.06960 (8), -0.06474 (8), -0.06308 (8), -0.06277 (8), -0.06162 (8), 
Length of domains: 47
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0205    solve 0.1394    add 0.0011    
Accumulated time: pickout 0.0045    decision 0.7361    set_bounds 0.0844    solve 0.8287    add 0.3858    
Current (lb-rhs): -0.1465306282043457
201 domains visited
Cumulative time: 2.483356237411499

BaB round 2
batch: 47
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-8, 1706] [/input-8, 1706] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-8, 1706] 
split level 2: [/input-8, 1950] [/input-8, 1706] [/input-8, 1950] [/input-8, 1950] [/input-12, 2] [/input-8, 1706] [/input-8, 1950] [/input-8, 1950] [/input-8, 1950] [/input-8, 1950] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12329435348510742
10 lb beta sum: 0.3250342607498169, worst -0.1162729263305664
Time: prepare 0.0076    bound 0.1281    transfer 0.0011    finalize 0.0020    func 0.1412    
Accumulated time: func 1.0224    prepare 0.0737    bound 0.7655    transfer 0.0072    finalize 0.0154    
all_split False
======================Cut inference begins======================
max lb tensor(0.35052019) min lb tensor(-0.11599207)
Number of Verified Splits: 252 of 376
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.37134695053100586
10 lb beta sum: 1.0173841714859009, worst -0.25997233390808105
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 65.
#cuts 1-3: 14
#cuts 4-6: 22
#cuts 7-9: 24
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.3106269836425781 
BICCOS Cumulative time: 0.6893327236175537
Preprocessing time: 0.010680437088012695 Inference time: 0.28398728370666504 Add cuts time: 0.013152599334716797 Cut analysis time: 0.0028066635131835938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11599 (11), -0.11246 (11), -0.10964 (11), -0.10671 (11), -0.10640 (11), -0.10597 (11), -0.10495 (11), -0.10445 (11), -0.10268 (11), -0.10005 (11), -0.09987 (11), -0.09938 (11), -0.09855 (11), -0.09819 (11), -0.09772 (11), -0.09701 (11), -0.09612 (11), -0.09594 (11), -0.09577 (11), -0.09301 (11), 
Length of domains: 124
Time: pickout 0.0015    decision 0.0142    set_bounds 0.0302    solve 0.1413    add 0.0013    
Accumulated time: pickout 0.0059    decision 0.7503    set_bounds 0.1146    solve 0.9700    add 0.3870    
Current (lb-rhs): -0.11599206924438477
325 domains visited
Cumulative time: 2.984920024871826

BaB round 3
batch: 124
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-8, 1950] [/input-12, 56] [/input-12, 2] [/input-8, 1655] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.118865966796875
10 lb beta sum: 0.3723151683807373, worst -0.11574745178222656
Time: prepare 0.0052    bound 0.1300    transfer 0.0009    finalize 0.0017    func 0.1395    
Accumulated time: func 1.1619    prepare 0.0791    bound 0.8955    transfer 0.0080    finalize 0.0171    
all_split False
======================Cut inference begins======================
max lb tensor(0.56954294) min lb tensor(-0.11559248)
Number of Verified Splits: 93 of 248
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 17
#cuts 4-6: 18
#cuts 7-9: 10
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.022649526596069336 
BICCOS Cumulative time: 0.711982250213623
Preprocessing time: 0.0073239803314208984 Inference time: 0.008447647094726562 Add cuts time: 0.0050890445709228516 Cut analysis time: 0.0017888545989990234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11559 (12), -0.11211 (12), -0.10919 (12), -0.10631 (12), -0.10600 (12), -0.10553 (12), -0.10463 (12), -0.10383 (12), -0.10234 (12), -0.09966 (12), -0.09957 (12), -0.09878 (12), -0.09805 (12), -0.09782 (12), -0.09738 (12), -0.09628 (12), -0.09571 (12), -0.09548 (12), -0.09544 (12), -0.09273 (12), 
Length of domains: 155
Time: pickout 0.0026    decision 0.0179    set_bounds 0.0108    solve 0.1395    add 0.0016    
Accumulated time: pickout 0.0085    decision 0.7682    set_bounds 0.1254    solve 1.1096    add 0.3886    
Current (lb-rhs): -0.11559247970581055
480 domains visited
Cumulative time: 3.180797815322876

BaB round 4
batch: 155
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1655] [/input-8, 1950] [/input-8, 1655] [/input-8, 1950] [/input-8, 1655] [/input-8, 1950] [/input-8, 1655] [/input-8, 1950] [/input-8, 1655] [/input-8, 1655] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11196660995483398
10 lb beta sum: 0.4033702611923218, worst -0.13309240341186523
Time: prepare 0.0064    bound 0.1289    transfer 0.0014    finalize 0.0017    func 0.1403    
Accumulated time: func 1.3022    prepare 0.0857    bound 1.0244    transfer 0.0094    finalize 0.0187    
all_split False
======================Cut inference begins======================
max lb tensor(0.56987816) min lb tensor(-0.10878944)
Number of Verified Splits: 114 of 310
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 39.
#cuts 1-3: 17
#cuts 4-6: 17
#cuts 7-9: 4
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.02560734748840332 
BICCOS Cumulative time: 0.7375895977020264
Preprocessing time: 0.008932828903198242 Inference time: 0.011835098266601562 Add cuts time: 0.0035037994384765625 Cut analysis time: 0.0013356208801269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10879 (13), -0.10533 (13), -0.10411 (13), -0.10236 (13), -0.10069 (13), -0.09940 (13), -0.09909 (13), -0.09871 (13), -0.09864 (13), -0.09697 (13), -0.09610 (13), -0.09548 (13), -0.09406 (13), -0.09371 (13), -0.09357 (13), -0.09353 (13), -0.09265 (13), -0.09190 (13), -0.09182 (13), -0.09139 (13), 
Length of domains: 196
Time: pickout 0.0024    decision 0.0168    set_bounds 0.0133    solve 0.1404    add 0.0012    
Accumulated time: pickout 0.0110    decision 0.7850    set_bounds 0.1387    solve 1.2500    add 0.3898    
Current (lb-rhs): -0.10878944396972656
676 domains visited
Cumulative time: 3.381507158279419

BaB round 5
batch: 196
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 733] [/input-8, 1399] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10703468322753906
10 lb beta sum: 0.5027132630348206, worst -0.10400867462158203
Time: prepare 0.0079    bound 0.1342    transfer 0.0008    finalize 0.0020    func 0.1475    
Accumulated time: func 1.4497    prepare 0.0938    bound 1.1586    transfer 0.0102    finalize 0.0208    
all_split False
======================Cut inference begins======================
max lb tensor(0.31920063) min lb tensor(-0.10392666)
Number of Verified Splits: 113 of 392
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 17
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.026861190795898438 
BICCOS Cumulative time: 0.7644507884979248
Preprocessing time: 0.011270999908447266 Inference time: 0.012335062026977539 Add cuts time: 0.0026977062225341797 Cut analysis time: 0.0005574226379394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10393 (14), -0.10031 (14), -0.09925 (14), -0.09750 (14), -0.09746 (14), -0.09563 (14), -0.09444 (14), -0.09422 (14), -0.09422 (14), -0.09405 (14), -0.09366 (14), -0.09283 (14), -0.09197 (14), -0.09114 (14), -0.09102 (14), -0.09048 (14), -0.08951 (14), -0.08915 (14), -0.08890 (14), -0.08889 (14), 
Length of domains: 279
Time: pickout 0.0029    decision 0.0213    set_bounds 0.0170    solve 0.1476    add 0.0018    
Accumulated time: pickout 0.0138    decision 0.8062    set_bounds 0.1557    solve 1.3976    add 0.3916    
Current (lb-rhs): -0.1039266586303711
955 domains visited
Cumulative time: 3.6001155376434326

BaB round 6
batch: 279
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10453414916992188
10 lb beta sum: 1.0678200721740723, worst -0.1001700758934021
Time: prepare 0.0114    bound 0.1372    transfer 0.0024    finalize 0.0038    func 0.1584    
Accumulated time: func 1.6081    prepare 0.1054    bound 1.2958    transfer 0.0126    finalize 0.0246    
all_split False
======================Cut inference begins======================
max lb tensor(0.42916942) min lb tensor(-0.10008915)
Number of Verified Splits: 463 of 558
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 19
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.07176351547241211 
BICCOS Cumulative time: 0.8362143039703369
Preprocessing time: 0.01581287384033203 Inference time: 0.051045894622802734 Add cuts time: 0.0042912960052490234 Cut analysis time: 0.0006134510040283203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10009 (15), -0.09649 (15), -0.09539 (15), -0.09379 (15), -0.09364 (15), -0.09183 (15), -0.09038 (15), -0.09037 (15), -0.08999 (15), -0.08894 (15), -0.08732 (15), -0.08666 (15), -0.08572 (15), -0.08528 (15), -0.08472 (15), -0.08439 (15), -0.08406 (15), -0.08391 (15), -0.08384 (15), -0.08268 (15), 
Length of domains: 95
Time: pickout 0.0041    decision 0.0268    set_bounds 0.0239    solve 0.1586    add 0.0015    
Accumulated time: pickout 0.0179    decision 0.8330    set_bounds 0.1797    solve 1.5562    add 0.3931    
Current (lb-rhs): -0.10008914768695831
1050 domains visited
Cumulative time: 3.889597177505493

BaB round 7
batch: 95
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] [/input-8, 1388] 
split level 1: [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09534740447998047
10 lb beta sum: 1.0529999732971191, worst -0.0901978611946106
Time: prepare 0.0075    bound 0.1342    transfer 0.0007    finalize 0.0018    func 0.1467    
Accumulated time: func 1.7549    prepare 0.1131    bound 1.4300    transfer 0.0133    finalize 0.0263    
all_split False
======================Cut inference begins======================
max lb tensor(0.02916086) min lb tensor(-0.09017622)
Number of Verified Splits: 82 of 380
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 20
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.021914958953857422 
BICCOS Cumulative time: 0.8581292629241943
Preprocessing time: 0.011099576950073242 Inference time: 0.009264469146728516 Add cuts time: 0.0009703636169433594 Cut analysis time: 0.0005805492401123047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09018 (17), -0.08869 (17), -0.08694 (17), -0.08544 (17), -0.08538 (17), -0.08528 (17), -0.08397 (17), -0.08389 (17), -0.08381 (17), -0.08380 (17), -0.08231 (17), -0.08228 (17), -0.08227 (17), -0.08116 (17), -0.08091 (17), -0.08077 (17), -0.08074 (17), -0.08035 (17), -0.08019 (17), -0.07961 (17), 
Length of domains: 298
Time: pickout 0.0029    decision 0.0197    set_bounds 0.0178    solve 0.1469    add 0.0016    
Accumulated time: pickout 0.0208    decision 0.8527    set_bounds 0.1975    solve 1.7031    add 0.3947    
Current (lb-rhs): -0.09017622470855713
1348 domains visited
Cumulative time: 4.101876974105835

BaB round 8
batch: 298
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0923910140991211
10 lb beta sum: 1.3023630380630493, worst -0.08858275413513184
Time: prepare 0.0121    bound 0.1367    transfer 0.0020    finalize 0.0029    func 0.1576    
Accumulated time: func 1.9125    prepare 0.1254    bound 1.5667    transfer 0.0153    finalize 0.0293    
all_split False
======================Cut inference begins======================
max lb tensor(0.44355178) min lb tensor(-0.08856457)
Number of Verified Splits: 299 of 596
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 20
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.06039547920227051 
BICCOS Cumulative time: 0.9185247421264648
Preprocessing time: 0.01694512367248535 Inference time: 0.039382219314575195 Add cuts time: 0.003462553024291992 Cut analysis time: 0.0006055831909179688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08856 (18), -0.08717 (18), -0.08535 (18), -0.08385 (18), -0.08382 (18), -0.08339 (18), -0.08279 (18), -0.08244 (18), -0.08220 (18), -0.08199 (18), -0.08111 (18), -0.08078 (18), -0.08068 (18), -0.07971 (18), -0.07945 (18), -0.07919 (18), -0.07880 (18), -0.07875 (18), -0.07861 (18), -0.07806 (18), 
Length of domains: 297
Time: pickout 0.0043    decision 0.0268    set_bounds 0.0256    solve 0.1578    add 0.0018    
Accumulated time: pickout 0.0251    decision 0.8795    set_bounds 0.2231    solve 1.8609    add 0.3965    
Current (lb-rhs): -0.08856457471847534
1645 domains visited
Cumulative time: 4.38058614730835

BaB round 9
batch: 297
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] 
cut re-enabled after branching node selection
0 lb beta sum: 1.4298079013824463, worst -0.08742207288742065
10 lb beta sum: 1.4298079013824463, worst -0.0874130129814148
Time: prepare 0.0255    bound 0.1388    transfer 0.0010    finalize 0.0026    func 0.1718    
Accumulated time: func 2.0843    prepare 0.1512    bound 1.7055    transfer 0.0163    finalize 0.0319    
all_split False
======================Cut inference begins======================
max lb tensor(0.25495362) min lb tensor(-0.08741063)
Number of Verified Splits: 43 of 594
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 21
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.024832725524902344 
BICCOS Cumulative time: 0.9433574676513672
Preprocessing time: 0.017048120498657227 Inference time: 0.005301952362060547 Add cuts time: 0.0008594989776611328 Cut analysis time: 0.0016231536865234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08741 (19), -0.08608 (19), -0.08396 (19), -0.08267 (19), -0.08255 (19), -0.08198 (19), -0.08135 (19), -0.08103 (19), -0.08089 (19), -0.08066 (19), -0.07968 (19), -0.07926 (19), -0.07909 (19), -0.07800 (19), -0.07787 (19), -0.07778 (19), -0.07745 (19), -0.07743 (19), -0.07741 (19), -0.07658 (19), 
Length of domains: 551
Time: pickout 0.0045    decision 0.0271    set_bounds 0.0258    solve 0.1720    add 0.0026    
Accumulated time: pickout 0.0296    decision 0.9066    set_bounds 0.2488    solve 2.0329    add 0.3991    
Current (lb-rhs): -0.08741062879562378
2196 domains visited
Cumulative time: 4.638705015182495

BaB round 10
batch: 551
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08785867691040039
10 lb beta sum: 1.3000643253326416, worst -0.08399558067321777
Time: prepare 0.0229    bound 0.1417    transfer 0.0019    finalize 0.0058    func 0.1795    
Accumulated time: func 2.2637    prepare 0.1743    bound 1.8472    transfer 0.0182    finalize 0.0377    
all_split False
======================Cut inference begins======================
max lb tensor(0.31712794) min lb tensor(-0.08398741)
Number of Verified Splits: 820 of 1102
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.15868759155273438 
BICCOS Cumulative time: 1.1020450592041016
Preprocessing time: 0.0328524112701416 Inference time: 0.11469602584838867 Add cuts time: 0.010467529296875 Cut analysis time: 0.0006716251373291016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08399 (20), -0.08268 (20), -0.08059 (20), -0.07925 (20), -0.07919 (20), -0.07795 (20), -0.07759 (20), -0.07747 (20), -0.07627 (20), -0.07591 (20), -0.07573 (20), -0.07453 (20), -0.07441 (20), -0.07400 (20), -0.07395 (20), -0.07286 (20), -0.07278 (20), -0.07261 (20), -0.07257 (20), -0.07256 (20), 
Length of domains: 282
Time: pickout 0.0097    decision 0.0395    set_bounds 0.1913    solve 0.1797    add 0.0019    
Accumulated time: pickout 0.0394    decision 0.9461    set_bounds 0.4401    solve 2.2126    add 0.4010    
Current (lb-rhs): -0.08398741483688354
2478 domains visited
Cumulative time: 5.225740671157837

BaB round 11
batch: 282
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] [/input-8, 1399] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08367300033569336
10 lb beta sum: 1.4280316829681396, worst -0.07887715101242065
Time: prepare 0.0114    bound 0.1318    transfer 0.0024    finalize 0.0029    func 0.1521    
Accumulated time: func 2.4158    prepare 0.1859    bound 1.9790    transfer 0.0206    finalize 0.0405    
all_split False
======================Cut inference begins======================
max lb tensor(0.00315236) min lb tensor(-0.07885820)
Number of Verified Splits: 8 of 564
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.019725561141967773 
BICCOS Cumulative time: 1.1217706203460693
Preprocessing time: 0.016170978546142578 Inference time: 0.001407623291015625 Add cuts time: 0.0006802082061767578 Cut analysis time: 0.0014667510986328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07886 (21), -0.07756 (21), -0.07570 (21), -0.07555 (21), -0.07440 (21), -0.07415 (21), -0.07412 (21), -0.07282 (21), -0.07236 (21), -0.07233 (21), -0.07216 (21), -0.07100 (21), -0.07097 (21), -0.07088 (21), -0.07074 (21), -0.07063 (21), -0.06968 (21), -0.06949 (21), -0.06937 (21), -0.06925 (21), 
Length of domains: 556
Time: pickout 0.0053    decision 0.0242    set_bounds 0.0241    solve 0.1522    add 0.0022    
Accumulated time: pickout 0.0447    decision 0.9703    set_bounds 0.4642    solve 2.3648    add 0.4032    
Current (lb-rhs): -0.07885819673538208
3034 domains visited
Cumulative time: 5.454103469848633

BaB round 12
batch: 556
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 1.697373390197754, worst -0.07503539323806763
10 lb beta sum: 1.697373390197754, worst -0.07501918077468872
Time: prepare 0.0475    bound 0.1414    transfer 0.0016    finalize 0.0054    func 0.2030    
Accumulated time: func 2.6189    prepare 0.2336    bound 2.1204    transfer 0.0221    finalize 0.0459    
all_split False
======================Cut inference begins======================
max lb tensor(0.24488866) min lb tensor(-0.07500297)
Number of Verified Splits: 70 of 1112
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.04547691345214844 
BICCOS Cumulative time: 1.1672475337982178
Preprocessing time: 0.03285551071166992 Inference time: 0.010608673095703125 Add cuts time: 0.0014078617095947266 Cut analysis time: 0.0006048679351806641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07500 (22), -0.07370 (22), -0.07363 (22), -0.07230 (22), -0.07175 (22), -0.07163 (22), -0.07044 (22), -0.07038 (22), -0.07026 (22), -0.07023 (22), -0.07020 (22), -0.06905 (22), -0.06897 (22), -0.06890 (22), -0.06876 (22), -0.06849 (22), -0.06846 (22), -0.06814 (22), -0.06761 (22), -0.06713 (22), 
Length of domains: 1042
Time: pickout 0.0085    decision 0.0422    set_bounds 0.0467    solve 0.2033    add 0.0079    
Accumulated time: pickout 0.0532    decision 1.0125    set_bounds 0.5110    solve 2.5681    add 0.4111    
Current (lb-rhs): -0.07500296831130981
4076 domains visited
Cumulative time: 5.810015916824341

BaB round 13
batch: 1042
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7115124464035034, worst -0.07392817735671997
10 lb beta sum: 1.7115124464035034, worst -0.07385188341140747
Time: prepare 0.1002    bound 0.1737    transfer 0.0076    finalize 0.0103    func 0.3057    
Accumulated time: func 2.9246    prepare 0.3341    bound 2.2941    transfer 0.0297    finalize 0.0562    
all_split False
======================Cut inference begins======================
max lb tensor(0.00890803) min lb tensor(-0.07384998)
Number of Verified Splits: 195 of 2084
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.09621930122375488 
BICCOS Cumulative time: 1.2634668350219727
Preprocessing time: 0.06327509880065918 Inference time: 0.02930164337158203 Add cuts time: 0.00298309326171875 Cut analysis time: 0.0006594657897949219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07385 (23), -0.07254 (23), -0.07188 (23), -0.07057 (23), -0.07055 (23), -0.07048 (23), -0.06926 (23), -0.06911 (23), -0.06907 (23), -0.06858 (23), -0.06843 (23), -0.06781 (23), -0.06733 (23), -0.06730 (23), -0.06724 (23), -0.06716 (23), -0.06700 (23), -0.06693 (23), -0.06598 (23), -0.06586 (23), 
Length of domains: 1889
Time: pickout 0.0164    decision 0.0677    set_bounds 0.0504    solve 0.3062    add 0.0096    
Accumulated time: pickout 0.0696    decision 1.0803    set_bounds 0.5614    solve 2.8743    add 0.4207    
Current (lb-rhs): -0.07384997606277466
5965 domains visited
Cumulative time: 6.360227584838867

BaB round 14
batch: 1889
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] [/input, 4071] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6985853910446167, worst -0.07080775499343872
10 lb beta sum: 1.6985853910446167, worst -0.07071954011917114
Time: prepare 0.1845    bound 0.2680    transfer 0.0334    finalize 0.0199    func 0.5309    
Accumulated time: func 3.4555    prepare 0.5188    bound 2.5621    transfer 0.0631    finalize 0.0761    
all_split False
======================Cut inference begins======================
max lb tensor(0.00917995) min lb tensor(-0.07071954)
Number of Verified Splits: 409 of 3778
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 24
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.19223308563232422 
BICCOS Cumulative time: 1.4556999206542969
Preprocessing time: 0.11629009246826172 Inference time: 0.06854414939880371 Add cuts time: 0.006609916687011719 Cut analysis time: 0.0007889270782470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07072 (24), -0.06940 (24), -0.06938 (24), -0.06933 (24), -0.06806 (24), -0.06801 (24), -0.06740 (24), -0.06729 (24), -0.06609 (24), -0.06608 (24), -0.06601 (24), -0.06600 (24), -0.06592 (24), -0.06591 (24), -0.06586 (24), -0.06477 (24), -0.06469 (24), -0.06463 (24), -0.06462 (24), -0.06461 (24), 
Length of domains: 3369
Time: pickout 0.0392    decision 0.2564    set_bounds 0.1653    solve 0.5318    add 0.0107    
Accumulated time: pickout 0.1088    decision 1.3367    set_bounds 0.7267    solve 3.4062    add 0.4314    
Current (lb-rhs): -0.07071954011917114
9334 domains visited
Cumulative time: 7.563210487365723

BaB round 15
batch: 3369
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] [/input-8, 285] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0727682113647461
10 lb beta sum: 1.6843496561050415, worst -0.06729340553283691
Time: prepare 0.1789    bound 0.5755    transfer 0.0332    finalize 0.0376    func 0.8700    
Accumulated time: func 4.3254    prepare 0.6980    bound 3.1376    transfer 0.0963    finalize 0.1137    
all_split False
======================Cut inference begins======================
max lb tensor(0.47111309) min lb tensor(-0.06725383)
Number of Verified Splits: 3551 of 6738
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.8392350673675537 
BICCOS Cumulative time: 2.2949349880218506
Preprocessing time: 0.2100062370300293 Inference time: 0.5799360275268555 Add cuts time: 0.04841184616088867 Cut analysis time: 0.0008809566497802734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06725 (25), -0.06724 (25), -0.06595 (25), -0.06592 (25), -0.06554 (25), -0.06549 (25), -0.06422 (25), -0.06416 (25), -0.06395 (25), -0.06389 (25), -0.06355 (25), -0.06354 (25), -0.06255 (25), -0.06251 (25), -0.06250 (25), -0.06248 (25), -0.06225 (25), -0.06224 (25), -0.06219 (25), -0.06209 (25), 
Length of domains: 3187
Time: pickout 0.0566    decision 0.1876    set_bounds 0.4311    solve 0.8712    add 0.0241    
Accumulated time: pickout 0.1654    decision 1.5243    set_bounds 1.1578    solve 4.2773    add 0.4555    
Current (lb-rhs): -0.06725382804870605
12521 domains visited
Cumulative time: 10.005785703659058

BaB round 16
batch: 3187
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 510] [/input-8, 510] [/input-8, 510] [/input-8, 510] [/input-8, 510] [/input-8, 1704] [/input-8, 510] [/input-8, 510] [/input-8, 510] [/input-8, 510] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06918668746948242
10 lb beta sum: 1.7997901439666748, worst -0.0635492205619812
Time: prepare 0.1697    bound 0.5517    transfer 0.0246    finalize 0.0394    func 0.8274    
Accumulated time: func 5.1528    prepare 0.8680    bound 3.6892    transfer 0.1210    finalize 0.1531    
all_split False
======================Cut inference begins======================
max lb tensor(0.01150250) min lb tensor(-0.06349200)
Number of Verified Splits: 983 of 6374
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.5930593013763428 
BICCOS Cumulative time: 2.8879942893981934
Preprocessing time: 0.1993398666381836 Inference time: 0.3704202175140381 Add cuts time: 0.02238607406616211 Cut analysis time: 0.0009131431579589844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06349 (26), -0.06349 (26), -0.06285 (26), -0.06283 (26), -0.06220 (26), -0.06219 (26), -0.06177 (26), -0.06177 (26), -0.06154 (26), -0.06150 (26), -0.06112 (26), -0.06108 (26), -0.06048 (26), -0.06045 (26), -0.06024 (26), -0.06024 (26), -0.06002 (26), -0.05979 (26), -0.05978 (26), -0.05976 (26), 
Length of domains: 5391
Time: pickout 0.0728    decision 0.3279    set_bounds 0.2809    solve 0.8295    add 0.0184    
Accumulated time: pickout 0.2382    decision 1.8521    set_bounds 1.4387    solve 5.1068    add 0.4739    
Current (lb-rhs): -0.06349200010299683
17912 domains visited
Cumulative time: 12.143289566040039

BaB round 17
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1967] [/input-8, 1967] [/input-8, 1967] [/input-8, 1704] [/input-8, 1704] [/input-8, 510] [/input, 1012] [/input-8, 1704] [/input-8, 1967] [/input-8, 1967] 
cut re-enabled after branching node selection
0 lb beta sum: 2.1026010513305664, worst -0.06349104642868042
10 lb beta sum: 2.1026010513305664, worst -0.06344670057296753
Time: prepare 0.4087    bound 0.6819    transfer 0.0289    finalize 0.0474    func 1.2218    
Accumulated time: func 6.3746    prepare 1.2770    bound 4.3711    transfer 0.1498    finalize 0.2005    
all_split False
======================Cut inference begins======================
max lb tensor(0.01066899) min lb tensor(-0.06342620)
Number of Verified Splits: 1438 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.7346925735473633 
BICCOS Cumulative time: 3.6226868629455566
Preprocessing time: 0.44173383712768555 Inference time: 0.2712879180908203 Add cuts time: 0.020836591720581055 Cut analysis time: 0.0008342266082763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06343 (27), -0.06342 (27), -0.06280 (27), -0.06278 (27), -0.06213 (27), -0.06213 (27), -0.06177 (26), -0.06169 (27), -0.06149 (27), -0.06106 (27), -0.06102 (27), -0.06048 (26), -0.06038 (27), -0.05978 (26), -0.05976 (26), -0.05973 (27), -0.05910 (27), -0.05910 (27), -0.05905 (27), -0.05902 (27), 
Length of domains: 8049
Time: pickout 0.0718    decision 0.2261    set_bounds 0.3686    solve 1.2233    add 0.0223    
Accumulated time: pickout 0.3100    decision 2.0782    set_bounds 1.8073    solve 6.3301    add 0.4962    
Current (lb-rhs): -0.0634261965751648
24666 domains visited
current_vram/total_varm: 23.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 14.814560413360596

BaB round 18
batch: 8049
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1967] [/input-8, 1967] [/input-8, 510] [/input-8, 1967] [/input-8, 1967] [/input-8, 1967] [/input-8, 1967] [/input-8, 510] [/input-8, 1967] [/input-8, 510] 
cut re-enabled after branching node selection
0 lb beta sum: 2.0820488929748535, worst -0.06177544593811035
10 lb beta sum: 2.0820488929748535, worst -0.06171870231628418
Time: prepare 0.8041    bound 1.2660    transfer 0.0784    finalize 0.0951    func 2.3481    
Accumulated time: func 8.7226    prepare 2.0814    bound 5.6371    transfer 0.2282    finalize 0.2956    
all_split False
======================Cut inference begins======================
max lb tensor(0.24170947) min lb tensor(-0.06169534)
Number of Verified Splits: 3188 of 16098
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 27
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.1991045475006104 
BICCOS Cumulative time: 4.821791410446167
Preprocessing time: 0.511016845703125 Inference time: 0.5967826843261719 Add cuts time: 0.09044790267944336 Cut analysis time: 0.0008571147918701172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06170 (27), -0.06111 (28), -0.06110 (28), -0.06045 (28), -0.06043 (28), -0.06039 (27), -0.05974 (28), -0.05973 (28), -0.05972 (27), -0.05971 (27), -0.05937 (28), -0.05905 (28), -0.05899 (28), -0.05870 (28), -0.05867 (28), -0.05843 (27), -0.05842 (27), -0.05798 (28), -0.05784 (28), -0.05784 (28), 
Length of domains: 12910
Time: pickout 0.1655    decision 0.4426    set_bounds 0.9157    solve 2.5721    add 0.0427    
Accumulated time: pickout 0.4755    decision 2.5208    set_bounds 2.7230    solve 8.9022    add 0.5389    
Current (lb-rhs): -0.06169533729553223
37576 domains visited
Cumulative time: 20.197494506835938

BaB round 19
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1704] [/input-8, 510] [/input-8, 1704] [/input-8, 1704] [/input-8, 510] [/input-8, 510] [/input-8, 510] [/input-8, 1704] [/input-8, 1704] [/input-8, 510] 
cut re-enabled after branching node selection
0 lb beta sum: 2.050616979598999, worst -0.05939173698425293
10 lb beta sum: 2.050616979598999, worst -0.05938982963562012
Time: prepare 0.8190    bound 1.2872    transfer 0.0752    finalize 0.0952    func 2.6623    
Accumulated time: func 11.3849    prepare 2.9008    bound 6.9243    transfer 0.3034    finalize 0.3908    
all_split False
======================Cut inference begins======================
max lb tensor(0.24266875) min lb tensor(-0.05937505)
Number of Verified Splits: 3854 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.328019618988037 
BICCOS Cumulative time: 6.149811029434204
Preprocessing time: 0.5377681255340576 Inference time: 0.7382292747497559 Add cuts time: 0.05111527442932129 Cut analysis time: 0.0009069442749023438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06111 (28), -0.06110 (28), -0.06045 (28), -0.05974 (28), -0.05973 (28), -0.05938 (28), -0.05937 (28), -0.05905 (28), -0.05870 (28), -0.05842 (29), -0.05800 (28), -0.05798 (28), -0.05740 (28), -0.05739 (28), -0.05728 (28), -0.05696 (29), -0.05674 (28), -0.05674 (28), -0.05664 (29), -0.05622 (28), 
Length of domains: 17248
Time: pickout 0.1479    decision 0.7036    set_bounds 0.7575    solve 2.6661    add 0.0431    
Accumulated time: pickout 0.6234    decision 3.2244    set_bounds 3.4804    solve 11.5683    add 0.5820    
Current (lb-rhs): -0.061108291149139404
50106 domains visited
current_vram/total_varm: 34.4GB/99.9GB, batch_size increase to 16384
Cumulative time: 25.901560068130493

BaB round 20
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input-8, 254] [/input, 1463] [/input, 1463] [/input, 1463] [/input-8, 1812] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06422138214111328
10 lb beta sum: 1.6017327308654785, worst -0.06111502647399902
Time: prepare 0.9046    bound 2.5009    transfer 0.1527    finalize 0.5498    func 4.3261    
Accumulated time: func 15.7110    prepare 3.8058    bound 9.4252    transfer 0.4561    finalize 0.9406    
all_split False
======================Cut inference begins======================
max lb tensor(0.47427201) min lb tensor(-0.06110358)
Number of Verified Splits: 19012 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 28
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 5.448875904083252 
BICCOS Cumulative time: 11.598686933517456
Preprocessing time: 1.062211275100708 Inference time: 4.144415616989136 Add cuts time: 0.2412397861480713 Cut analysis time: 0.001009225845336914
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06110 (29), -0.06110 (29), -0.06043 (29), -0.05972 (29), -0.05937 (29), -0.05937 (29), -0.05842 (29), -0.05799 (29), -0.05772 (29), -0.05739 (29), -0.05738 (29), -0.05695 (29), -0.05695 (30), -0.05672 (29), -0.05671 (29), -0.05664 (29), -0.05662 (29), -0.05621 (29), -0.05601 (29), -0.05600 (29), 
Length of domains: 14620
Time: pickout 0.3021    decision 1.9188    set_bounds 1.8202    solve 4.3326    add 0.0477    
Accumulated time: pickout 0.9255    decision 5.1432    set_bounds 5.3006    solve 15.9009    add 0.6297    
Current (lb-rhs): -0.06110358238220215
63862 domains visited
current_vram/total_varm: 40.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 39.98289442062378

BaB round 21
batch: 14620
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1463] [/input-8, 254] [/input, 1463] [/input-8, 1812] [/input, 1463] [/input-8, 254] [/input, 1463] [/input-8, 1812] [/input-8, 254] [/input, 1463] 
cut re-enabled after branching node selection
0 lb beta sum: 1.7384943962097168, worst -0.062244534492492676
10 lb beta sum: 2.142566680908203, worst -0.05913436412811279
Time: prepare 1.4591    bound 2.2409    transfer 0.1455    finalize 0.5159    func 4.5521    
Accumulated time: func 20.2632    prepare 5.2652    bound 11.6661    transfer 0.6015    finalize 1.4565    
all_split False
======================Cut inference begins======================
max lb tensor(0.70423388) min lb tensor(-0.05912733)
Number of Verified Splits: 19562 of 29240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 30
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 5.566819906234741 
BICCOS Cumulative time: 17.165506839752197
Preprocessing time: 0.9927551746368408 Inference time: 4.394496917724609 Add cuts time: 0.17836523056030273 Cut analysis time: 0.0012025833129882812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05913 (30), -0.05906 (30), -0.05841 (30), -0.05837 (30), -0.05771 (30), -0.05766 (30), -0.05695 (30), -0.05607 (30), -0.05600 (30), -0.05541 (30), -0.05535 (30), -0.05535 (30), -0.05495 (31), -0.05472 (30), -0.05469 (30), -0.05466 (30), -0.05462 (30), -0.05422 (30), -0.05415 (30), -0.05402 (30), 
Length of domains: 9678
Time: pickout 0.2918    decision 0.8263    set_bounds 1.6900    solve 4.5606    add 0.0333    
Accumulated time: pickout 1.2173    decision 5.9695    set_bounds 6.9906    solve 20.4615    add 0.6630    
Current (lb-rhs): -0.0591273307800293
73540 domains visited
Cumulative time: 53.153082609176636

BaB round 22
batch: 9678
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] [/input-8, 254] [/input, 1463] [/input-8, 142] [/input, 1463] [/input-8, 254] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06024646759033203
10 lb beta sum: 1.5132006406784058, worst -0.05709242820739746
Time: prepare 0.5508    bound 1.5256    transfer 0.0946    finalize 0.1116    func 2.7123    
Accumulated time: func 22.9755    prepare 5.8163    bound 13.1917    transfer 0.6962    finalize 1.5681    
all_split False
======================Cut inference begins======================
max lb tensor(0.47542870) min lb tensor(-0.05706471)
Number of Verified Splits: 11562 of 19356
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 33
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 3.0700008869171143 
BICCOS Cumulative time: 20.23550772666931
Preprocessing time: 0.6623654365539551 Inference time: 2.2842555046081543 Add cuts time: 0.12245345115661621 Cut analysis time: 0.0009264945983886719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05706 (31), -0.05699 (31), -0.05633 (31), -0.05630 (31), -0.05571 (31), -0.05565 (31), -0.05494 (31), -0.05377 (32), -0.05337 (31), -0.05328 (31), -0.05267 (31), -0.05261 (31), -0.05254 (32), -0.05253 (32), -0.05216 (31), -0.05211 (31), -0.05209 (31), -0.05203 (31), -0.05194 (31), -0.05187 (31), 
Length of domains: 7794
Time: pickout 0.2375    decision 0.5372    set_bounds 1.1853    solve 2.7165    add 0.0437    
Accumulated time: pickout 1.4548    decision 6.5067    set_bounds 8.1759    solve 23.1780    add 0.7067    
Current (lb-rhs): -0.057064712047576904
81334 domains visited
Cumulative time: 61.07103204727173

BaB round 23
batch: 7794
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1463] [/input-8, 1812] [/input-8, 1812] [/input-8, 1812] [/input, 1463] [/input, 1463] [/input-8, 149] [/input-8, 149] [/input-8, 149] [/input, 3165] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.059076786041259766
10 lb beta sum: 1.7442008256912231, worst -0.054412126541137695
Time: prepare 0.4367    bound 1.2462    transfer 0.0776    finalize 0.3486    func 2.2132    
Accumulated time: func 25.1887    prepare 6.2533    bound 14.4380    transfer 0.7738    finalize 1.9167    
all_split False
======================Cut inference begins======================
max lb tensor(0.48178113) min lb tensor(-0.05438012)
Number of Verified Splits: 9750 of 15588
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 34
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.8908817768096924 
BICCOS Cumulative time: 23.126389503479004
Preprocessing time: 0.5238046646118164 Inference time: 2.2682840824127197 Add cuts time: 0.09784340858459473 Cut analysis time: 0.0009496212005615234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05438 (32), -0.05431 (32), -0.05363 (32), -0.05360 (32), -0.05301 (32), -0.05297 (32), -0.05223 (32), -0.05002 (32), -0.04993 (32), -0.04982 (33), -0.04949 (32), -0.04940 (32), -0.04929 (32), -0.04926 (32), -0.04921 (32), -0.04912 (32), -0.04898 (32), -0.04893 (32), -0.04867 (32), -0.04860 (32), 
Length of domains: 5838
Time: pickout 0.1584    decision 0.6552    set_bounds 0.7210    solve 2.2176    add 0.0280    
Accumulated time: pickout 1.6131    decision 7.1620    set_bounds 8.8970    solve 25.3956    add 0.7347    
Current (lb-rhs): -0.05438011884689331
87172 domains visited
Cumulative time: 67.84423446655273

BaB round 24
batch: 5838
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 149] [/input-8, 149] [/input, 1463] [/input, 3315] [/input-8, 149] [/input-8, 149] [/input-8, 149] [/input, 3315] [/input, 3315] [/input, 3315] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05754995346069336
10 lb beta sum: 1.7469909191131592, worst -0.05199837684631348
Time: prepare 0.3250    bound 0.9546    transfer 0.0433    finalize 0.0706    func 1.4709    
Accumulated time: func 26.6596    prepare 6.5787    bound 15.3926    transfer 0.8171    finalize 1.9873    
all_split False
======================Cut inference begins======================
max lb tensor(0.47688365) min lb tensor(-0.05196351)
Number of Verified Splits: 6586 of 11676
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 34
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.8225667476654053 
BICCOS Cumulative time: 24.94895625114441
Preprocessing time: 0.3897225856781006 Inference time: 1.3533580303192139 Add cuts time: 0.07854986190795898 Cut analysis time: 0.0009362697601318359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05196 (33), -0.05182 (33), -0.05120 (33), -0.05110 (33), -0.05059 (33), -0.05049 (33), -0.04979 (34), -0.04973 (33), -0.04853 (34), -0.04846 (34), -0.04767 (34), -0.04764 (34), -0.04761 (33), -0.04744 (33), -0.04708 (33), -0.04707 (34), -0.04701 (34), -0.04692 (33), -0.04686 (33), -0.04678 (33), 
Length of domains: 5090
Time: pickout 0.1232    decision 0.3243    set_bounds 0.5357    solve 1.7055    add 0.0229    
Accumulated time: pickout 1.7364    decision 7.4862    set_bounds 9.4327    solve 27.1011    add 0.7577    
Current (lb-rhs): -0.05196350812911987
92262 domains visited
Cumulative time: 72.45240020751953

BaB round 25
batch: 5090
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input, 3315] [/input-8, 142] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9583430290222168, worst -0.051962077617645264
10 lb beta sum: 1.9583430290222168, worst -0.051939189434051514
Time: prepare 0.5144    bound 0.8349    transfer 0.0358    finalize 0.0621    func 1.5135    
Accumulated time: func 28.1731    prepare 7.0933    bound 16.2275    transfer 0.8529    finalize 2.0494    
all_split False
======================Cut inference begins======================
max lb tensor(0.24116623) min lb tensor(-0.05192822)
Number of Verified Splits: 3897 of 10180
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 35
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.4219639301300049 
BICCOS Cumulative time: 26.370920181274414
Preprocessing time: 0.34102678298950195 Inference time: 1.0378332138061523 Add cuts time: 0.0421900749206543 Cut analysis time: 0.0009138584136962891
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05193 (34), -0.05117 (34), -0.05057 (34), -0.04985 (34), -0.04971 (34), -0.04915 (34), -0.04853 (34), -0.04787 (35), -0.04766 (34), -0.04757 (34), -0.04706 (34), -0.04693 (34), -0.04683 (34), -0.04673 (34), -0.04665 (35), -0.04658 (35), -0.04652 (34), -0.04633 (34), -0.04623 (34), -0.04598 (34), 
Length of domains: 6283
Time: pickout 0.1061    decision 0.2838    set_bounds 0.6442    solve 1.5165    add 0.0273    
Accumulated time: pickout 1.8425    decision 7.7700    set_bounds 10.0768    solve 28.6177    add 0.7849    
Current (lb-rhs): -0.05192822217941284
98545 domains visited
Cumulative time: 76.49672174453735

BaB round 26
batch: 6283
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05355978012084961
10 lb beta sum: 1.6126283407211304, worst -0.049111127853393555
Time: prepare 0.3481    bound 1.0266    transfer 0.0624    finalize 0.2747    func 1.7976    
Accumulated time: func 29.9707    prepare 7.4417    bound 17.2541    transfer 0.9153    finalize 2.3242    
all_split False
======================Cut inference begins======================
max lb tensor(0.25365019) min lb tensor(-0.04910249)
Number of Verified Splits: 5084 of 12566
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 35
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.8445765972137451 
BICCOS Cumulative time: 28.21549677848816
Preprocessing time: 0.4134941101074219 Inference time: 1.3557534217834473 Add cuts time: 0.07443356513977051 Cut analysis time: 0.0008955001831054688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04910 (35), -0.04835 (35), -0.04775 (35), -0.04702 (35), -0.04696 (36), -0.04690 (35), -0.04632 (35), -0.04575 (36), -0.04571 (35), -0.04568 (36), -0.04489 (36), -0.04486 (36), -0.04479 (35), -0.04474 (35), -0.04430 (36), -0.04424 (36), -0.04423 (35), -0.04409 (35), -0.04400 (35), -0.04386 (35), 
Length of domains: 7482
Time: pickout 0.1606    decision 0.3492    set_bounds 0.5735    solve 1.8014    add 0.0310    
Accumulated time: pickout 2.0031    decision 8.1192    set_bounds 10.6503    solve 30.4191    add 0.8159    
Current (lb-rhs): -0.04910248517990112
106027 domains visited
Cumulative time: 81.31381940841675

BaB round 27
batch: 7482
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2022] [/input, 2022] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input, 2006] [/input, 2022] 
cut re-enabled after branching node selection
0 lb beta sum: 1.9115005731582642, worst -0.049102962017059326
10 lb beta sum: 1.9115005731582642, worst -0.04910010099411011
Time: prepare 0.7546    bound 1.1999    transfer 0.0548    finalize 0.3445    func 2.4517    
Accumulated time: func 32.4224    prepare 8.1966    bound 18.4540    transfer 0.9702    finalize 2.6686    
all_split False
======================Cut inference begins======================
max lb tensor(0.24760079) min lb tensor(-0.04909104)
Number of Verified Splits: 5752 of 14964
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 37
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.119694948196411 
BICCOS Cumulative time: 30.33519172668457
Preprocessing time: 0.4920358657836914 Inference time: 1.560472011566162 Add cuts time: 0.06624960899353027 Cut analysis time: 0.0009374618530273438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04909 (36), -0.04834 (36), -0.04774 (36), -0.04702 (36), -0.04689 (36), -0.04632 (36), -0.04571 (36), -0.04535 (37), -0.04479 (36), -0.04473 (36), -0.04422 (36), -0.04415 (37), -0.04409 (36), -0.04405 (37), -0.04399 (36), -0.04382 (36), -0.04370 (36), -0.04347 (36), -0.04339 (36), -0.04329 (37), 
Length of domains: 9212
Time: pickout 0.1563    decision 0.4178    set_bounds 0.6877    solve 2.4558    add 0.0243    
Accumulated time: pickout 2.1594    decision 8.5370    set_bounds 11.3379    solve 32.8749    add 0.8402    
Current (lb-rhs): -0.04909104108810425
115239 domains visited
Cumulative time: 87.24128675460815

BaB round 28
batch: 9212
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2006] [/input-8, 891] [/input, 2006] [/input, 2006] [/input-8, 891] [/input-8, 891] [/input, 2022] [/input, 2022] [/input, 2022] [/input, 2022] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05073213577270508
10 lb beta sum: 1.6138662099838257, worst -0.04553484916687012
Time: prepare 0.5098    bound 1.4591    transfer 0.0914    finalize 0.1110    func 2.2933    
Accumulated time: func 34.7157    prepare 8.7068    bound 19.9131    transfer 1.0616    finalize 2.7797    
all_split False
======================Cut inference begins======================
max lb tensor(0.72859550) min lb tensor(-0.04551905)
Number of Verified Splits: 12244 of 18424
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 39
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 3.8764209747314453 
BICCOS Cumulative time: 34.211612701416016
Preprocessing time: 0.9062671661376953 Inference time: 2.8285892009735107 Add cuts time: 0.1406097412109375 Cut analysis time: 0.0009548664093017578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04552 (37), -0.04509 (37), -0.04477 (37), -0.04470 (37), -0.04417 (37), -0.04379 (37), -0.04335 (37), -0.04151 (38), -0.04116 (37), -0.04070 (37), -0.04042 (37), -0.04034 (38), -0.04033 (37), -0.04031 (37), -0.04024 (38), -0.04021 (37), -0.04019 (37), -0.04012 (37), -0.03982 (37), -0.03971 (37), 
Length of domains: 6180
Time: pickout 0.1924    decision 0.5105    set_bounds 1.0961    solve 2.2981    add 0.0185    
Accumulated time: pickout 2.3518    decision 9.0475    set_bounds 12.4340    solve 35.1730    add 0.8587    
Current (lb-rhs): -0.04551905393600464
121419 domains visited
Cumulative time: 95.35826754570007

BaB round 29
batch: 6180
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04906749725341797
10 lb beta sum: 1.7680745124816895, worst -0.043604135513305664
Time: prepare 0.3389    bound 1.0132    transfer 0.0736    finalize 0.0801    func 1.5870    
Accumulated time: func 36.3027    prepare 9.0460    bound 20.9263    transfer 1.1352    finalize 2.8598    
all_split False
======================Cut inference begins======================
max lb tensor(0.70141804) min lb tensor(-0.04358834)
Number of Verified Splits: 8561 of 12360
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 39
#cuts 4-6: 3
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.7201249599456787 
BICCOS Cumulative time: 36.931737661361694
Preprocessing time: 0.6517989635467529 Inference time: 1.9668433666229248 Add cuts time: 0.10046696662902832 Cut analysis time: 0.0010156631469726562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04359 (38), -0.04347 (38), -0.04284 (38), -0.04277 (38), -0.04226 (38), -0.04217 (38), -0.04145 (38), -0.04038 (39), -0.03922 (38), -0.03909 (38), -0.03908 (39), -0.03897 (39), -0.03871 (38), -0.03858 (38), -0.03849 (38), -0.03839 (38), -0.03825 (39), -0.03824 (38), -0.03820 (38), -0.03817 (39), 
Length of domains: 3799
Time: pickout 0.1350    decision 0.5447    set_bounds 0.5770    solve 1.5908    add 0.0194    
Accumulated time: pickout 2.4868    decision 9.5922    set_bounds 13.0110    solve 36.7638    add 0.8782    
Current (lb-rhs): -0.043588340282440186
125218 domains visited
Cumulative time: 101.0296688079834

BaB round 30
batch: 3799
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04784059524536133
10 lb beta sum: 1.6721152067184448, worst -0.042326271533966064
Time: prepare 0.2159    bound 0.6463    transfer 0.0440    finalize 0.2220    func 1.1785    
Accumulated time: func 37.4812    prepare 9.2622    bound 21.5726    transfer 1.1792    finalize 3.0818    
all_split False
======================Cut inference begins======================
max lb tensor(0.24140370) min lb tensor(-0.04231566)
Number of Verified Splits: 3140 of 7598
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 40
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.0382137298583984 
BICCOS Cumulative time: 37.96995139122009
Preprocessing time: 0.24804377555847168 Inference time: 0.746260404586792 Add cuts time: 0.0429537296295166 Cut analysis time: 0.0009558200836181641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04232 (39), -0.04219 (39), -0.04158 (39), -0.04150 (39), -0.04113 (39), -0.04104 (39), -0.04032 (39), -0.03934 (40), -0.03795 (39), -0.03786 (40), -0.03782 (39), -0.03776 (40), -0.03743 (39), -0.03731 (39), -0.03723 (39), -0.03712 (39), -0.03704 (40), -0.03696 (40), -0.03693 (39), -0.03681 (39), 
Length of domains: 4458
Time: pickout 0.0890    decision 0.2138    set_bounds 0.3553    solve 1.1804    add 0.0180    
Accumulated time: pickout 2.5759    decision 9.8060    set_bounds 13.3663    solve 37.9441    add 0.8961    
Current (lb-rhs): -0.042315661907196045
129676 domains visited
Cumulative time: 103.96027541160583

BaB round 31
batch: 4458
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1595] [/input-8, 1595] [/input-8, 142] [/input-8, 1955] [/input-8, 1595] [/input-8, 142] [/input-8, 142] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] 
cut re-enabled after branching node selection
0 lb beta sum: 1.877224326133728, worst -0.04248541593551636
10 lb beta sum: 2.2394049167633057, worst -0.03990185260772705
Time: prepare 0.4499    bound 0.7444    transfer 0.0328    finalize 0.0500    func 1.3360    
Accumulated time: func 38.8171    prepare 9.7123    bound 22.3169    transfer 1.2119    finalize 3.1318    
all_split False
======================Cut inference begins======================
max lb tensor(0.24776840) min lb tensor(-0.03986537)
Number of Verified Splits: 4256 of 8916
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 43.
#cuts 1-3: 40
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.55320405960083 
BICCOS Cumulative time: 39.52315545082092
Preprocessing time: 0.28835558891296387 Inference time: 1.2188458442687988 Add cuts time: 0.045049190521240234 Cut analysis time: 0.0009534358978271484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03987 (40), -0.03973 (40), -0.03913 (40), -0.03904 (40), -0.03887 (40), -0.03877 (40), -0.03812 (41), -0.03806 (40), -0.03664 (41), -0.03654 (41), -0.03582 (41), -0.03574 (41), -0.03556 (41), -0.03549 (40), -0.03547 (41), -0.03535 (40), -0.03498 (40), -0.03484 (40), -0.03478 (40), -0.03469 (41), 
Length of domains: 4660
Time: pickout 0.0987    decision 0.2474    set_bounds 0.5905    solve 1.3392    add 0.0117    
Accumulated time: pickout 2.6745    decision 10.0534    set_bounds 13.9568    solve 39.2833    add 0.9078    
Current (lb-rhs): -0.03986537456512451
134336 domains visited
Cumulative time: 107.84538888931274

BaB round 32
batch: 4660
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 1595] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] 
cut re-enabled after branching node selection
0 lb beta sum: 2.3484647274017334, worst -0.03986680507659912
10 lb beta sum: 2.350517988204956, worst -0.03985488414764404
Time: prepare 0.4684    bound 0.7740    transfer 0.0349    finalize 0.0535    func 1.5803    
Accumulated time: func 40.3974    prepare 10.1809    bound 23.0910    transfer 1.2469    finalize 3.1852    
all_split False
======================Cut inference begins======================
max lb tensor(0.24324226) min lb tensor(-0.03984582)
Number of Verified Splits: 4316 of 9320
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.405146598815918 
BICCOS Cumulative time: 40.92830204963684
Preprocessing time: 0.30483412742614746 Inference time: 1.0578532218933105 Add cuts time: 0.041396379470825195 Cut analysis time: 0.0010628700256347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03985 (41), -0.03972 (41), -0.03911 (41), -0.03903 (41), -0.03887 (41), -0.03877 (41), -0.03811 (42), -0.03806 (41), -0.03662 (42), -0.03652 (42), -0.03580 (42), -0.03572 (42), -0.03555 (42), -0.03547 (41), -0.03547 (42), -0.03533 (41), -0.03496 (41), -0.03482 (41), -0.03476 (41), -0.03468 (42), 
Length of domains: 5004
Time: pickout 0.1223    decision 0.2593    set_bounds 0.4237    solve 1.5832    add 0.0157    
Accumulated time: pickout 2.7969    decision 10.3127    set_bounds 14.3805    solve 40.8665    add 0.9235    
Current (lb-rhs): -0.039845824241638184
139340 domains visited
Cumulative time: 111.70030975341797

BaB round 33
batch: 5004
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] [/input-8, 142] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0429692268371582
10 lb beta sum: 1.4854657649993896, worst -0.03984808921813965
Time: prepare 0.2771    bound 0.8267    transfer 0.0375    finalize 0.0604    func 1.2667    
Accumulated time: func 41.6641    prepare 10.4583    bound 23.9176    transfer 1.2844    finalize 3.2456    
all_split False
======================Cut inference begins======================
max lb tensor(0.24580598) min lb tensor(-0.03983724)
Number of Verified Splits: 3476 of 10008
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.466156244277954 
BICCOS Cumulative time: 42.394458293914795
Preprocessing time: 0.33185553550720215 Inference time: 1.088057041168213 Add cuts time: 0.045287370681762695 Cut analysis time: 0.0009562969207763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03984 (42), -0.03971 (42), -0.03910 (42), -0.03902 (42), -0.03886 (42), -0.03877 (42), -0.03806 (42), -0.03612 (43), -0.03580 (43), -0.03546 (42), -0.03533 (42), -0.03510 (43), -0.03494 (42), -0.03481 (42), -0.03475 (42), -0.03471 (43), -0.03468 (43), -0.03465 (42), -0.03465 (43), -0.03461 (43), 
Length of domains: 6532
Time: pickout 0.1110    decision 0.2795    set_bounds 0.6381    solve 1.2696    add 0.0271    
Accumulated time: pickout 2.9079    decision 10.5921    set_bounds 15.0186    solve 42.1361    add 0.9507    
Current (lb-rhs): -0.03983724117279053
145872 domains visited
Cumulative time: 115.53231501579285

BaB round 34
batch: 6532
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1527] [/input-8, 1527] [/input, 3256] [/input-8, 1527] [/input-8, 1527] [/input, 3256] [/input-8, 1527] [/input-8, 1527] [/input-8, 1527] [/input, 386] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6706280708312988, worst -0.037866950035095215
10 lb beta sum: 1.6706280708312988, worst -0.03786027431488037
Time: prepare 0.6634    bound 1.0638    transfer 0.0488    finalize 0.0788    func 1.9415    
Accumulated time: func 43.6056    prepare 11.1220    bound 24.9814    transfer 1.3332    finalize 3.3244    
all_split False
======================Cut inference begins======================
max lb tensor(0.24291301) min lb tensor(-0.03785503)
Number of Verified Splits: 2980 of 13064
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 1.502091646194458 
BICCOS Cumulative time: 43.89654994010925
Preprocessing time: 0.432391881942749 Inference time: 0.7874770164489746 Add cuts time: 0.2811896800994873 Cut analysis time: 0.0010330677032470703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03786 (43), -0.03773 (43), -0.03711 (43), -0.03703 (43), -0.03687 (43), -0.03684 (43), -0.03679 (43), -0.03673 (43), -0.03611 (44), -0.03610 (43), -0.03607 (43), -0.03603 (43), -0.03586 (43), -0.03579 (43), -0.03506 (43), -0.03503 (44), -0.03470 (44), -0.03388 (44), -0.03381 (44), -0.03363 (44), 
Length of domains: 10084
Time: pickout 0.1491    decision 0.3670    set_bounds 0.8236    solve 1.9449    add 0.0259    
Accumulated time: pickout 3.0570    decision 10.9591    set_bounds 15.8422    solve 44.0811    add 0.9766    
Current (lb-rhs): -0.03785502910614014
155956 domains visited
Cumulative time: 120.38678979873657

BaB round 35
batch: 10084
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 386] [/input, 386] [/input, 386] [/input, 386] [/input, 386] [/input, 386] [/input-8, 1955] [/input, 3165] [/input, 386] [/input-8, 1955] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6281136274337769, worst -0.03619420528411865
10 lb beta sum: 1.6281136274337769, worst -0.03619706630706787
Time: prepare 1.0297    bound 1.5941    transfer 0.0990    finalize 0.1347    func 2.9890    
Accumulated time: func 46.5946    prepare 12.1521    bound 26.5755    transfer 1.4322    finalize 3.4591    
all_split False
======================Cut inference begins======================
max lb tensor(0.23832178) min lb tensor(-0.03618610)
Number of Verified Splits: 4773 of 20168
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 2.3061723709106445 
BICCOS Cumulative time: 46.2027223110199
Preprocessing time: 0.9428145885467529 Inference time: 1.3002560138702393 Add cuts time: 0.062073469161987305 Cut analysis time: 0.001028299331665039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03619 (44), -0.03607 (44), -0.03546 (44), -0.03511 (44), -0.03510 (44), -0.03500 (44), -0.03497 (44), -0.03492 (44), -0.03475 (44), -0.03468 (44), -0.03459 (44), -0.03438 (44), -0.03415 (44), -0.03414 (44), -0.03404 (44), -0.03403 (44), -0.03400 (45), -0.03396 (44), -0.03392 (44), -0.03383 (44), 
Length of domains: 15395
Time: pickout 0.2332    decision 0.5609    set_bounds 1.1760    solve 2.9940    add 0.0511    
Accumulated time: pickout 3.2902    decision 11.5200    set_bounds 17.0181    solve 47.0751    add 1.0277    
Current (lb-rhs): -0.0361860990524292
171351 domains visited
Cumulative time: 127.77275586128235

BaB round 36
batch: 15395
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3165] [/input, 3165] [/input, 3165] [/input, 1012] [/input, 3165] [/input, 1012] [/input, 385] [/input-8, 1955] [/input-8, 1527] [/input-8, 1955] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5884044170379639, worst -0.03400266170501709
10 lb beta sum: 1.5884044170379639, worst -0.03400313854217529
Time: prepare 1.5801    bound 2.3807    transfer 0.1465    finalize 0.1743    func 4.4835    
Accumulated time: func 51.0781    prepare 13.7326    bound 28.9562    transfer 1.5787    finalize 3.6335    
all_split False
======================Cut inference begins======================
max lb tensor(0.23840475) min lb tensor(-0.03399503)
Number of Verified Splits: 7541 of 30790
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 3.3230912685394287 
BICCOS Cumulative time: 49.525813579559326
Preprocessing time: 1.0432178974151611 Inference time: 2.165745496749878 Add cuts time: 0.11301088333129883 Cut analysis time: 0.0011169910430908203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03400 (45), -0.03389 (45), -0.03365 (45), -0.03353 (45), -0.03335 (45), -0.03327 (45), -0.03309 (45), -0.03302 (45), -0.03302 (45), -0.03293 (45), -0.03292 (45), -0.03287 (45), -0.03284 (45), -0.03281 (45), -0.03280 (45), -0.03276 (45), -0.03257 (45), -0.03251 (45), -0.03246 (45), -0.03244 (46), 
Length of domains: 23249
Time: pickout 0.4212    decision 1.1470    set_bounds 1.7470    solve 4.8431    add 0.0630    
Accumulated time: pickout 3.7114    decision 12.6670    set_bounds 18.7652    solve 51.9182    add 1.0906    
Current (lb-rhs): -0.03399503231048584
194600 domains visited
Cumulative time: 139.41409397125244

BaB round 37
batch: 23249
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1012] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] 
cut re-enabled after branching node selection
0 lb beta sum: 1.549300193786621, worst -0.03399550914764404
10 lb beta sum: 1.549300193786621, worst -0.033998847007751465
Time: prepare 2.3639    bound 3.5737    transfer 0.2250    finalize 0.2683    func 6.7389    
Accumulated time: func 57.8170    prepare 16.0969    bound 32.5300    transfer 1.8037    finalize 3.9018    
all_split False
======================Cut inference begins======================
max lb tensor(0.23853314) min lb tensor(-0.03398931)
Number of Verified Splits: 13659 of 46498
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 42
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 6.3103556632995605 
BICCOS Cumulative time: 55.83616924285889
Preprocessing time: 1.537567138671875 Inference time: 4.526414632797241 Add cuts time: 0.2452998161315918 Cut analysis time: 0.001074075698852539
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03399 (46), -0.03389 (46), -0.03364 (46), -0.03352 (46), -0.03335 (46), -0.03327 (46), -0.03309 (46), -0.03302 (46), -0.03301 (46), -0.03292 (46), -0.03292 (46), -0.03287 (46), -0.03282 (46), -0.03280 (46), -0.03273 (46), -0.03255 (46), -0.03247 (46), -0.03246 (46), -0.03242 (46), -0.03239 (46), 
Length of domains: 32839
Time: pickout 0.5522    decision 3.0247    set_bounds 2.7066    solve 7.2011    add 0.1503    
Accumulated time: pickout 4.2636    decision 15.6917    set_bounds 21.4718    solve 59.1192    add 1.2409    
Current (lb-rhs): -0.0339893102645874
227439 domains visited
Cumulative time: 159.5258650779724

BaB round 38
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3165] [/input, 1012] [/input-8, 1391] [/input-8, 1391] [/input-8, 1955] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] [/input, 3165] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5067524909973145, worst -0.03260457515716553
10 lb beta sum: 1.5067524909973145, worst -0.03260934352874756
Time: prepare 3.3628    bound 10.2001    transfer 0.3276    finalize 0.4740    func 15.4058    
Accumulated time: func 73.2227    prepare 19.4601    bound 42.7301    transfer 2.1313    finalize 4.3758    
all_split False
======================Cut inference begins======================
max lb tensor(0.23844576) min lb tensor(-0.03259933)
Number of Verified Splits: 24235 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 43
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 10.575000286102295 
BICCOS Cumulative time: 66.41116952896118
Preprocessing time: 2.2313477993011475 Inference time: 7.923204183578491 Add cuts time: 0.4193427562713623 Cut analysis time: 0.0011055469512939453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03260 (47), -0.03250 (47), -0.03225 (47), -0.03213 (47), -0.03196 (47), -0.03189 (47), -0.03170 (47), -0.03163 (47), -0.03163 (47), -0.03153 (47), -0.03153 (47), -0.03148 (47), -0.03142 (47), -0.03141 (47), -0.03132 (47), -0.03116 (47), -0.03108 (47), -0.03105 (47), -0.03103 (47), -0.03101 (47), 
Length of domains: 41372
Time: pickout 0.7843    decision 3.3790    set_bounds 3.7801    solve 15.4195    add 0.1735    
Accumulated time: pickout 5.0479    decision 19.0707    set_bounds 25.2518    solve 74.5387    add 1.4144    
Current (lb-rhs): -0.03259932994842529
268740 domains visited
Cumulative time: 193.94515657424927

BaB round 39
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1012] [/input, 386] [/input-8, 1527] [/input-8, 1527] [/input, 1012] [/input-8, 1527] [/input-8, 1527] [/input-8, 1631] [/input-8, 1527] [/input, 1012] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03328847885131836
10 lb beta sum: 1.0163651704788208, worst -0.03147917985916138
Time: prepare 1.8769    bound 10.2036    transfer 0.3349    finalize 0.5032    func 14.1103    
Accumulated time: func 87.3330    prepare 21.3374    bound 52.9337    transfer 2.4662    finalize 4.8789    
all_split False
======================Cut inference begins======================
max lb tensor(0.24551851) min lb tensor(-0.03147468)
Number of Verified Splits: 32370 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 46.
#cuts 1-3: 43
#cuts 4-6: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 13.52633023262024 
BICCOS Cumulative time: 79.93749976158142
Preprocessing time: 2.152914524078369 Inference time: 10.873312950134277 Add cuts time: 0.49877333641052246 Cut analysis time: 0.0013294219970703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03147 (48), -0.03137 (48), -0.03110 (48), -0.03099 (48), -0.03083 (48), -0.03076 (48), -0.03057 (48), -0.03050 (48), -0.03049 (48), -0.03040 (48), -0.03039 (48), -0.03035 (48), -0.03028 (48), -0.03024 (48), -0.03017 (48), -0.03002 (48), -0.02995 (48), -0.02992 (48), -0.02989 (48), -0.02988 (48), 
Length of domains: 41770
Time: pickout 0.8148    decision 3.4810    set_bounds 3.9313    solve 14.1248    add 0.1626    
Accumulated time: pickout 5.8627    decision 22.5517    set_bounds 29.1832    solve 88.6635    add 1.5770    
Current (lb-rhs): -0.031474679708480835
301906 domains visited
Time out!!!!!!!!
Result: unknown in 232.3783 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.75459862, -19.03087234, -15.81020927, -15.02808094, -15.45583725,
         -15.58429432, -14.96899986, -17.89657974, -19.61580658, -19.36780739]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 632] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 632] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 328] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.01773739,  1.41905212, -0.42905188, -0.71989632,  0.09239095,
         -1.24160242,  0.88482034,  2.33327007,  1.89770031]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.75459862, -19.03087234, -15.81020927, -15.02808094, -15.45583725,
         -15.58429432, -14.96899986, -17.89657974, -19.61580658, -19.36780739]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.75459862, -19.03087234, -15.81020832, -15.02808094, -15.45583725,
          -15.58429337, -14.96900177, -17.89657784, -19.61580658, -19.36780930],
         [-17.75459862, -19.03087234, -15.81020832, -15.02808094, -15.45583725,
          -15.58429337, -14.96900177, -17.89657784, -19.61580658, -19.36780930]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.78212738,  0.42775631, -0.05907917]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0481 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.35046577, -23.71506119, -23.35945511, -21.45649910, -20.70935822,
         -20.53724480, -22.38616753, -16.30188179, -26.53351212, -22.39307404]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [460]; unstable size 460; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 248, 1, 460] with unstable size 247 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 460] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 460] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [247]; unstable size 247; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 247] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 247] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.23471165, 4.94442558, 5.38546658, 3.64118934, 3.33296251, 2.72332454,
         4.26009846, 8.15480995, 3.82787871]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0479 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.09100723, -29.06959343, -25.09518623, -27.86755753, -24.83033943,
         -28.04232597, -26.05955124, -26.36453247, -25.66234589, -27.72757912]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [899]; unstable size 899; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 899] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 899] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 899] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 310] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97617173, -1.48784208,  0.95436430, -1.87956285,  0.93106556,
         -1.03131604, -0.85329700, -0.83899242,  0.88107014]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.09100723, -29.06959343, -25.09518623, -27.86755753, -24.83033943,
         -28.04232597, -26.05955124, -26.36453247, -25.66234589, -27.72757912]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.09101105, -29.06959724, -25.09518623, -27.86755753, -24.83034134,
          -28.04232597, -26.05955315, -26.36453438, -25.66234589, -27.72757912],
         [-25.09101105, -29.06959724, -25.09518623, -27.86755753, -24.83034134,
          -28.04232597, -26.05955315, -26.36453438, -25.66234589, -27.72757912]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.00417519, -0.26066971,  0.96854210,  1.27352333,  0.57133484]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0519 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.78340530, -27.09945488, -17.72372437, -21.88307762, -18.28152275,
         -20.99545860, -20.59827042, -22.34070778, -24.70541382, -26.47000694]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [950]; unstable size 950; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 950] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 950] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 950] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 208] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.15953612, 7.92398405, 3.57421231, 0.07925244, 2.58815289, 1.97291231,
         3.73509598, 5.73443413, 7.39504910]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0379 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.82749367, -26.77242661, -22.68888855, -21.92727852, -23.00431252,
         -21.88382530, -22.72205544, -24.54189873, -26.69390106, -25.28289032]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 306, 1, 743] with unstable size 305 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 743] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [305]; unstable size 305; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 305] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 305] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.55621195,  2.72794223, -0.34306383, -0.31645530, -0.10541511,
         -0.28819263,  1.26013124,  2.92125010,  1.60254693]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.82749367, -26.77242661, -22.68888855, -21.92727852, -23.00431252,
         -21.88382530, -22.72205544, -24.54189873, -26.69390106, -25.28289032]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.17584038, -27.13981628, -23.11540031, -22.38797569, -23.44976807,
          -22.53939438, -23.10030365, -25.11281586, -26.95533371, -25.84247017],
         [-25.17584038, -27.13981628, -23.11540031, -22.38797569, -23.44976807,
          -22.53939438, -23.10030365, -25.11281586, -26.95533371, -25.84247017]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.57600594, -0.15141869,  0.91037369,  0.56090927]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0071 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0359 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
         -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 573] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 573] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 256] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.53955317,  0.16099811,  2.22247696,  1.41359806,  1.53142834,
          1.82894993,  2.34312296,  1.67316580, -0.55013943]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
         -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.21it/s]100%|██████████| 1/1 [00:00<00:00,  9.21it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.72954750, -25.00329971, -27.98002243, -26.96814156, -27.40962029,
          -27.52673721, -28.15061378, -27.60468102, -24.36431122, -24.20353508]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.16077614]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1110 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.869607925415039
alpha/beta optimization time: 1.1932766437530518
initial alpha-crown bounds: tensor([[ 0.62231779,  0.20233983,  2.31166840,  1.48120880,  1.62453079,
          1.90319824,  2.41159058,  1.76273108, -0.44997740]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.44997739791870117
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6644525527954
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.66441440582275
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6643888950348
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.6643671989441
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6643488407135
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.66432976722717
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.66431140899658
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.66429233551025
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.66427397727966
Verifying property 8 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44997740]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
        -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44997740]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 573
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 251
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 843
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011086463928222656
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.44997692108154297
10 lb beta sum: 0.0, worst -0.4499812126159668
Time: prepare 0.0002    bound 0.0879    transfer 0.0001    finalize 0.0001    func 0.0884    
Accumulated time: func 0.0884    prepare 0.0002    bound 0.0879    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 55] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 69] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 34] 
split level 8: [/input-12, 56] 
split level 9: [/input-8, 715] 
split level 10: [/input-8, 883] 
split level 11: [/input-8, 1392] 
split level 12: [/input-8, 885] 
split level 13: [/input-8, 884] 
split level 14: [/input-8, 1649] 
split level 15: [/input-12, 50] 
split level 16: [/input-8, 117] 
split level 17: [/input-8, 1240] 
split level 18: [/input-8, 493] 
split level 19: [/input-8, 1402] 
split level 20: [/input-8, 1389] 
split level 21: [/input-8, 500] 
split level 22: [/input-8, 1395] 
split level 23: [/input-8, 1388] 
split level 24: [/input-8, 886] 
split level 25: [/input-8, 1965] 
split level 26: [/input-8, 1384] 
split level 27: [/input-8, 116] 
split level 28: [/input-8, 819] 
split level 29: [/input-8, 424] 
split level 30: [/input-8, 1396] 
split level 31: [/input-12, 42] 
split level 32: [/input-8, 881] 
split level 33: [/input-8, 1393] 
split level 34: [/input-8, 1398] 
split level 35: [/input-8, 430] 
split level 36: [/input-8, 1397] 
split level 37: [/input-8, 742] 
split level 38: [/input-8, 1185] 
split level 39: [/input-8, 433] 
split level 40: [/input-8, 1955] 
split level 41: [/input-8, 1394] 
split level 42: [/input-8, 417] 
split level 43: [/input-8, 1958] 
split level 44: [/input-8, 246] 
split level 45: [/input-8, 638] 
split level 46: [/input-8, 1097] 
split level 47: [/input, 2422] 
split level 48: [/input, 509] 
split level 49: [/input-8, 1390] 
split level 50: [/input-8, 931] 
split level 51: [/input-8, 1705] 
split level 52: [/input, 1430] 
split level 53: [/input-8, 891] 
split level 54: [/input-8, 1403] 
split level 55: [/input-8, 139] 
split level 56: [/input-8, 1654] 
split level 57: [/input-8, 1376] 
split level 58: [/input-8, 1325] 
split level 59: [/input, 1006] 
split level 60: [/input-8, 420] 
split level 61: [/input-8, 1713] 
split level 62: [/input-8, 1650] 
split level 63: [/input-8, 1698] 
split level 64: [/input, 1018] 
split level 65: [/input-8, 1383] 
split level 66: [/input-8, 893] 
split level 67: [/input-8, 401] 
split level 68: [/input, 167] 
split level 69: [/input, 697] 
split level 70: [/input, 1479] 
split level 71: [/input-8, 1380] 
split level 72: [/input-8, 1168] 
split level 73: [/input, 699] 
split level 74: [/input, 1021] 
split level 75: [/input-8, 1385] 
split level 76: [/input, 505] 
split level 77: [/input, 491] 
split level 78: [/input, 1005] 
split level 79: [/input-8, 1697] 
split level 80: [/input-8, 1372] 
split level 81: [/input, 990] 
split level 82: [/input, 1004] 
split level 83: [/input-8, 1641] 
split level 84: [/input, 1384] 
split level 85: [/input-8, 1938] 
split level 86: [/input, 1015] 
split level 87: [/input-8, 251] 
split level 88: [/input-8, 1663] 
split level 89: [/input, 1013] 
split level 90: [/input, 507] 
split level 91: [/input, 1020] 
split level 92: [/input, 494] 
split level 93: [/input-8, 488] 
split level 94: [/input, 1768] 
split level 95: [/input-8, 1377] 
split level 96: [/input-8, 241] 
split level 97: [/input-8, 242] 
split level 98: [/input-8, 485] 
split level 99: [/input, 493] 
split level 100: [/input-8, 1597] 
split level 101: [/input-8, 1940] 
split level 102: [/input, 1707] 
split level 103: [/input, 3194] 
split level 104: [/input, 1476] 
split level 105: [/input-8, 1583] 
split level 106: [/input, 1003] 
split level 107: [/input-8, 823] 
split level 108: [/input-8, 815] 
split level 109: [/input-8, 1379] 
split level 110: [/input, 1016] 
split level 111: [/input-8, 409] 
split level 112: [/input, 120] 
split level 113: [/input, 1366] 
split level 114: [/input, 1466] 
split level 115: [/input-8, 361] 
split level 116: [/input, 2678] 
split level 117: [/input, 1002] 
split level 118: [/input-8, 1184] 
split level 119: [/input, 3571] 
split level 120: [/input-8, 890] 
split level 121: [/input-8, 1528] 
split level 122: [/input, 1478] 
split level 123: [/input, 681] 
split level 124: [/input, 183] 
split level 125: [/input, 103] 
split level 126: [/input-8, 1378] 
split level 127: [/input-8, 250] 
split level 128: [/input-8, 364] 
split level 129: [/input-8, 1760] 
split level 130: [/input-8, 1925] 
split level 131: [/input-8, 876] 
split level 132: [/input-8, 191] 
split level 133: [/input, 806] 
split level 134: [/input, 682] 
split level 135: [/input, 2181] 
split level 136: [/input, 121] 
split level 137: [/input-8, 295] 
split level 138: [/input, 989] 
split level 139: [/input-8, 1368] 
split level 140: [/input, 3366] 
split level 141: [/input, 2426] 
split level 142: [/input, 3113] 
split level 143: [/input-8, 399] 
split level 144: [/input-8, 1505] 
split level 145: [/input, 822] 
split level 146: [/input, 2442] 
split level 147: [/input, 135] 
split level 148: [/input, 2728] 
split level 149: [/input-8, 1783] 
split level 150: [/input, 988] 
split level 151: [/input, 1755] 
split level 152: [/input-8, 431] 
split level 153: [/input, 3129] 
split level 154: [/input, 185] 
split level 155: [/input, 891] 
split level 156: [/input, 3521] 
split level 157: [/input-8, 2044] 
split level 158: [/input, 2438] 
split level 159: [/input, 700] 
split level 160: [/input, 2557] 
split level 161: [/input, 117] 
split level 162: [/input-8, 2033] 
split level 163: [/input-8, 1371] 
split level 164: [/input, 3552] 
split level 165: [/input, 890] 
split level 166: [/input-8, 504] 
split level 167: [/input, 3054] 
split level 168: [/input, 489] 
split level 169: [/input, 1367] 
split level 170: [/input, 3053] 
split level 171: [/input, 1477] 
split level 172: [/input-8, 877] 
split level 173: [/input, 2865] 
split level 174: [/input, 995] 
split level 175: [/input-8, 238] 
split level 176: [/input, 2428] 
split level 177: [/input, 2027] 
split level 178: [/input, 892] 
split level 179: [/input, 236] 
split level 180: [/input-8, 38] 
split level 181: [/input-8, 402] 
split level 182: [/input, 2545] 
split level 183: [/input, 2554] 
split level 184: [/input-8, 1369] 
split level 185: [/input, 213] 
split level 186: [/input, 196] 
split level 187: [/input, 663] 
split level 188: [/input, 3195] 
split level 189: [/input, 3446] 
split level 190: [/input, 809] 
split level 191: [/input, 2435] 
split level 192: [/input, 2300] 
split level 193: [/input, 2555] 
split level 194: [/input, 1183] 
split level 195: [/input, 3299] 
split level 196: [/input, 2179] 
split level 197: [/input, 2797] 
split level 198: [/input, 2635] 
split level 199: [/input, 2782] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4498929977416992
10 lb beta sum: 0.0, worst -0.44991159439086914
Time: prepare 0.0115    bound 0.0965    transfer 0.0018    finalize 0.0026    func 0.1150    
Accumulated time: func 0.2034    prepare 0.0216    bound 0.1844    transfer 0.0019    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.26730633) min lb tensor(-0.44989300)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010654449462890625 
BICCOS Cumulative time: 0.010654449462890625
Preprocessing time: 0.009859085083007812 Inference time: 0.00014781951904296875 Add cuts time: 5.745887756347656e-05 Cut analysis time: 0.0005900859832763672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.43550 (1), -0.43516 (1), -0.43458 (1), -0.43380 (1), -0.43299 (1), -0.43278 (1), -0.43242 (1), -0.43085 (1), -0.42959 (1), -0.42943 (1), -0.42916 (1), -0.42846 (1), -0.42767 (1), -0.42722 (1), -0.42716 (1), -0.42674 (1), -0.42619 (1), -0.42588 (1), -0.42545 (1), -0.42439 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5153    set_bounds 0.0093    solve 0.1151    add 0.0690    
Accumulated time: pickout 0.0003    decision 0.5153    set_bounds 0.0093    solve 0.1151    add 0.0690    
Current (lb-rhs): -0.4354991912841797
50 domains visited
Cumulative time: 0.8129808902740479

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] 
split level 1: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 2: [/input-12, 49] [/input-12, 49] [/input-12, 4] [/input-12, 49] [/input-12, 49] [/input-12, 4] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 49] 
split level 3: [/input-12, 4] [/input-12, 4] [/input-12, 29] [/input-12, 4] [/input-12, 29] [/input-12, 29] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40700721740722656
10 lb beta sum: 0.6506443619728088, worst -0.3830842077732086
Time: prepare 0.0075    bound 0.1180    transfer 0.0008    finalize 0.0026    func 0.1316    
Accumulated time: func 0.3350    prepare 0.0294    bound 0.3024    transfer 0.0027    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.39271060) min lb tensor(-0.38296038)
Number of Verified Splits: 109 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.01824045181274414 
BICCOS Cumulative time: 0.028894901275634766
Preprocessing time: 0.011834144592285156 Inference time: 0.0047376155853271484 Add cuts time: 0.0013473033905029297 Cut analysis time: 0.00032138824462890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08645 (2), -0.08633 (2), -0.08422 (2), -0.08337 (2), -0.07785 (2), -0.07516 (2), -0.07143 (2), -0.06918 (2), -0.06911 (2), -0.06723 (2), -0.06694 (2), -0.06518 (2), -0.06473 (2), -0.06151 (2), -0.06101 (2), -0.06042 (2), -0.06032 (2), -0.06027 (2), -0.05998 (2), -0.05904 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0226    set_bounds 0.0124    solve 0.1316    add 0.0861    
Accumulated time: pickout 0.0014    decision 0.5379    set_bounds 0.0217    solve 0.2467    add 0.1551    
Current (lb-rhs): -0.08645033836364746
100 domains visited
Cumulative time: 1.0853850841522217

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] 
split level 1: [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] [/input-12, 85] 
split level 2: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 49] [/input-12, 4] [/input-12, 4] [/input-12, 69] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
split level 3: [/input-12, 69] [/input-12, 69] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12287712097167969
10 lb beta sum: 0.774941086769104, worst -0.02055943012237549
Time: prepare 0.0075    bound 0.1171    transfer 0.0008    finalize 0.0023    func 0.1309    
Accumulated time: func 0.4659    prepare 0.0371    bound 0.4196    transfer 0.0035    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.37249243) min lb tensor(-0.00659823)
Number of Verified Splits: 398 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.035573720932006836 
BICCOS Cumulative time: 0.0644686222076416
Preprocessing time: 0.011521339416503906 Inference time: 0.016318082809448242 Add cuts time: 0.007449626922607422 Cut analysis time: 0.0002846717834472656
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0191    set_bounds 0.0157    solve 0.1310    add 0.0194    
Accumulated time: pickout 0.0025    decision 0.5569    set_bounds 0.0373    solve 0.3777    add 0.1745    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 55] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 69] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 56] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14706897735595703
10 lb beta sum: 0.047785453498363495, worst -0.14532366394996643
Time: prepare 0.0037    bound 0.1129    transfer 0.0006    finalize 0.0013    func 0.1202    
Accumulated time: func 0.5861    prepare 0.0413    bound 0.5324    transfer 0.0041    finalize 0.0089    
all_split False
======================Cut inference begins======================
max lb tensor(0.76951957) min lb tensor(-0.14488606)
Number of Verified Splits: 252 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.34925031661987305
10 lb beta sum: 0.7744401693344116, worst -0.19562143087387085
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.24651598930358887 
BICCOS Cumulative time: 0.31098461151123047
Preprocessing time: 0.006531476974487305 Inference time: 0.23524904251098633 Add cuts time: 0.004451274871826172 Cut analysis time: 0.0002841949462890625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14489 (8), -0.13616 (8), -0.01835 (8), -0.00571 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0173    solve 0.1203    add 0.0008    
Accumulated time: pickout 0.0030    decision 0.5801    set_bounds 0.0546    solve 0.4980    add 0.1752    
Current (lb-rhs): -0.1448860615491867
104 domains visited
Cumulative time: 1.720630168914795

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1392] [/input-8, 1392] [/input-8, 1392] [/input-8, 1392] 
split level 1: [/input-8, 1396] [/input-8, 1388] [/input-8, 1395] [/input-8, 1388] 
split level 2: [/input-8, 1097] [/input-8, 1384] [/input-8, 1396] [/input-8, 1389] 
split level 3: [/input-8, 116] [/input-8, 1396] [/input-8, 116] [/input-8, 1396] 
split level 4: [/input-8, 1398] [/input-8, 116] [/input-8, 1397] [/input-8, 1397] 
split level 5: [/input-8, 1185] [/input-8, 1397] [/input-8, 1398] [/input-8, 116] 
cut re-enabled after branching node selection
0 lb beta sum: 0.2264959216117859, worst -0.09938721358776093
10 lb beta sum: 0.2264959216117859, worst -0.09808926284313202
Time: prepare 0.0109    bound 0.1131    transfer 0.0006    finalize 0.0013    func 0.1275    
Accumulated time: func 0.7136    prepare 0.0525    bound 0.6455    transfer 0.0047    finalize 0.0102    
all_split False
======================Cut inference begins======================
max lb tensor(0.07370131) min lb tensor(-0.09746937)
Number of Verified Splits: 128 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.21566526591777802, worst -0.253662645816803
10 lb beta sum: 1.1180086135864258, worst -0.007099151611328125

all verified at 13th iter
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 7
#cuts 4-6: 2
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.19215035438537598 
BICCOS Cumulative time: 0.5031349658966064
Preprocessing time: 0.007489919662475586 Inference time: 0.17728567123413086 Add cuts time: 0.006170749664306641 Cut analysis time: 0.0012040138244628906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09747 (14), -0.09583 (14), -0.09259 (14), -0.09164 (14), -0.08950 (14), -0.08823 (14), -0.08821 (14), -0.08595 (14), -0.08524 (14), -0.08521 (14), -0.08500 (14), -0.08485 (14), -0.08465 (14), -0.08455 (14), -0.08447 (14), -0.08442 (14), -0.08401 (14), -0.08395 (14), -0.08394 (14), -0.08338 (14), 
Length of domains: 128
Time: pickout 0.0017    decision 0.0174    set_bounds 0.0151    solve 0.1276    add 0.0014    
Accumulated time: pickout 0.0047    decision 0.5975    set_bounds 0.0698    solve 0.6255    add 0.1766    
Current (lb-rhs): -0.09746937453746796
232 domains visited
Cumulative time: 2.0771186351776123

BaB round 3
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09357452392578125
10 lb beta sum: 0.19730767607688904, worst -0.09253208339214325
Time: prepare 0.0055    bound 0.1278    transfer 0.0006    finalize 0.0017    func 0.1373    
Accumulated time: func 0.8508    prepare 0.0581    bound 0.7733    transfer 0.0053    finalize 0.0119    
all_split False
======================Cut inference begins======================
max lb tensor(0.04306726) min lb tensor(-0.09240729)
Number of Verified Splits: 16 of 256
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 8
#cuts 4-6: 2
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.012454032897949219 
BICCOS Cumulative time: 0.5155889987945557
Preprocessing time: 0.007452487945556641 Inference time: 0.0019216537475585938 Add cuts time: 0.001556396484375 Cut analysis time: 0.0015234947204589844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09241 (15), -0.09076 (15), -0.08655 (15), -0.08511 (15), -0.08444 (15), -0.08326 (15), -0.08177 (15), -0.08034 (15), -0.07961 (15), -0.07941 (15), -0.07927 (15), -0.07896 (15), -0.07837 (15), -0.07815 (15), -0.07796 (15), -0.07793 (15), -0.07781 (15), -0.07779 (15), -0.07762 (15), -0.07738 (15), 
Length of domains: 240
Time: pickout 0.0024    decision 0.0161    set_bounds 0.0111    solve 0.1373    add 0.0013    
Accumulated time: pickout 0.0071    decision 0.6136    set_bounds 0.0809    solve 0.7629    add 0.1779    
Current (lb-rhs): -0.09240728616714478
472 domains visited
Cumulative time: 2.258269786834717

BaB round 4
batch: 240
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1389] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08733272552490234
10 lb beta sum: 0.29596152901649475, worst -0.08666792511940002
Time: prepare 0.0108    bound 0.1370    transfer 0.0015    finalize 0.0031    func 0.1556    
Accumulated time: func 1.0064    prepare 0.0691    bound 0.9103    transfer 0.0068    finalize 0.0150    
all_split False
======================Cut inference begins======================
max lb tensor(0.28810591) min lb tensor(-0.08657555)
Number of Verified Splits: 208 of 480
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 8
#cuts 4-6: 2
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.04423069953918457 
BICCOS Cumulative time: 0.5598196983337402
Preprocessing time: 0.013735294342041016 Inference time: 0.025290250778198242 Add cuts time: 0.004015207290649414 Cut analysis time: 0.0011899471282958984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08658 (16), -0.08494 (16), -0.08068 (16), -0.07931 (16), -0.07746 (16), -0.07590 (16), -0.07453 (16), -0.07367 (16), -0.07342 (16), -0.07303 (16), -0.07303 (16), -0.07231 (16), -0.07218 (16), -0.07204 (16), -0.07199 (16), -0.07195 (16), -0.07159 (16), -0.07148 (16), -0.07132 (16), -0.07099 (16), 
Length of domains: 272
Time: pickout 0.0034    decision 0.0213    set_bounds 0.0200    solve 0.1557    add 0.0022    
Accumulated time: pickout 0.0105    decision 0.6349    set_bounds 0.1009    solve 0.9186    add 0.1801    
Current (lb-rhs): -0.08657555282115936
744 domains visited
Cumulative time: 2.506596565246582

BaB round 5
batch: 272
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1389] 
cut re-enabled after branching node selection
0 lb beta sum: 0.26285043358802795, worst -0.08123879134654999
10 lb beta sum: 0.26285043358802795, worst -0.08108143508434296
Time: prepare 0.0233    bound 0.1363    transfer 0.0022    finalize 0.0023    func 0.1680    
Accumulated time: func 1.1744    prepare 0.0926    bound 1.0466    transfer 0.0090    finalize 0.0174    
all_split False
======================Cut inference begins======================
max lb tensor(0.22652048) min lb tensor(-0.08102803)
Number of Verified Splits: 32 of 544
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.023770570755004883 
BICCOS Cumulative time: 0.5835902690887451
Preprocessing time: 0.015741586685180664 Inference time: 0.004133462905883789 Add cuts time: 0.0027146339416503906 Cut analysis time: 0.001180887222290039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08103 (17), -0.07940 (17), -0.07508 (17), -0.07376 (17), -0.07295 (17), -0.07106 (17), -0.07039 (17), -0.06982 (17), -0.06897 (17), -0.06837 (17), -0.06819 (17), -0.06763 (17), -0.06750 (17), -0.06686 (17), -0.06673 (17), -0.06650 (17), -0.06638 (17), -0.06636 (17), -0.06608 (17), -0.06588 (17), 
Length of domains: 512
Time: pickout 0.0042    decision 0.0256    set_bounds 0.0236    solve 0.1682    add 0.0022    
Accumulated time: pickout 0.0147    decision 0.6605    set_bounds 0.1245    solve 1.0868    add 0.1823    
Current (lb-rhs): -0.0810280293226242
1256 domains visited
Cumulative time: 2.7549750804901123

BaB round 6
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1384] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1384] [/input-8, 1393] [/input-8, 1384] 
cut re-enabled after branching node selection
0 lb beta sum: 0.24975770711898804, worst -0.0746174305677414
10 lb beta sum: 0.4470653533935547, worst -0.07394883036613464
Time: prepare 0.0439    bound 0.1375    transfer 0.0042    finalize 0.0042    func 0.1964    
Accumulated time: func 1.3708    prepare 0.1367    bound 1.1841    transfer 0.0131    finalize 0.0215    
all_split False
======================Cut inference begins======================
max lb tensor(0.00078663) min lb tensor(-0.07389867)
Number of Verified Splits: 2 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.035275936126708984 
BICCOS Cumulative time: 0.6188662052154541
Preprocessing time: 0.03211474418640137 Inference time: 0.0005340576171875 Add cuts time: 0.0014357566833496094 Cut analysis time: 0.0011913776397705078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07390 (18), -0.07227 (18), -0.06934 (18), -0.06797 (18), -0.06771 (18), -0.06723 (18), -0.06659 (18), -0.06526 (18), -0.06341 (18), -0.06322 (18), -0.06285 (18), -0.06204 (18), -0.06191 (18), -0.06186 (18), -0.06123 (18), -0.06122 (18), -0.06111 (18), -0.06038 (18), -0.06038 (18), -0.05994 (18), 
Length of domains: 1022
Time: pickout 0.0087    decision 0.0399    set_bounds 0.0433    solve 0.1966    add 0.0052    
Accumulated time: pickout 0.0234    decision 0.7004    set_bounds 0.1678    solve 1.2834    add 0.1875    
Current (lb-rhs): -0.07389867305755615
2278 domains visited
Cumulative time: 3.085566997528076

BaB round 7
batch: 1022
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] 
cut re-enabled after branching node selection
0 lb beta sum: 0.483730673789978, worst -0.06924283504486084
10 lb beta sum: 0.483730673789978, worst -0.06915032863616943
Time: prepare 0.0884    bound 0.1651    transfer 0.0116    finalize 0.0100    func 0.2884    
Accumulated time: func 1.6591    prepare 0.2254    bound 1.3492    transfer 0.0248    finalize 0.0315    
all_split False
======================Cut inference begins======================
max lb tensor(0.00764459) min lb tensor(-0.06910169)
Number of Verified Splits: 49 of 2044
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 31.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts 7-9: 21
#cuts >= 20: 0
BICCOS time: 0.07616591453552246 
BICCOS Cumulative time: 0.6950321197509766
Preprocessing time: 0.06183290481567383 Inference time: 0.009788274765014648 Add cuts time: 0.0029006004333496094 Cut analysis time: 0.001644134521484375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06910 (19), -0.06574 (19), -0.06435 (19), -0.06383 (19), -0.06220 (19), -0.06180 (19), -0.06175 (19), -0.06100 (19), -0.06011 (19), -0.05908 (19), -0.05873 (19), -0.05824 (19), -0.05755 (19), -0.05746 (19), -0.05746 (19), -0.05713 (19), -0.05702 (19), -0.05698 (19), -0.05654 (19), -0.05642 (19), 
Length of domains: 1995
Time: pickout 0.0179    decision 0.0655    set_bounds 0.3036    solve 0.2887    add 0.0089    
Accumulated time: pickout 0.0413    decision 0.7659    set_bounds 0.4715    solve 1.5721    add 0.1964    
Current (lb-rhs): -0.06910169124603271
4273 domains visited
Cumulative time: 3.849473714828491

BaB round 8
batch: 1995
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 742] [/input-8, 742] [/input-8, 742] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06248188018798828
10 lb beta sum: 0.2749471962451935, worst -0.061885759234428406
Time: prepare 0.0833    bound 0.2772    transfer 0.0195    finalize 0.0235    func 0.4289    
Accumulated time: func 2.0880    prepare 0.3089    bound 1.6263    transfer 0.0442    finalize 0.0550    
all_split False
======================Cut inference begins======================
max lb tensor(0.09135252) min lb tensor(-0.06184298)
Number of Verified Splits: 2051 of 3990
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 74.
#cuts 1-3: 9
#cuts 4-6: 4
#cuts 7-9: 60
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.48769092559814453 
BICCOS Cumulative time: 1.182723045349121
Preprocessing time: 0.12085175514221191 Inference time: 0.31690287590026855 Add cuts time: 0.046057939529418945 Cut analysis time: 0.003878355026245117
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06184 (20), -0.06092 (20), -0.06016 (20), -0.05741 (20), -0.05698 (20), -0.05687 (20), -0.05640 (20), -0.05607 (20), -0.05579 (20), -0.05530 (20), -0.05485 (20), -0.05459 (20), -0.05273 (20), -0.05270 (20), -0.05268 (20), -0.05260 (20), -0.05215 (20), -0.05198 (20), -0.05198 (20), -0.05174 (20), 
Length of domains: 1939
Time: pickout 0.0284    decision 0.1161    set_bounds 0.1683    solve 0.5811    add 0.0094    
Accumulated time: pickout 0.0697    decision 0.8819    set_bounds 0.6397    solve 2.1532    add 0.2057    
Current (lb-rhs): -0.06184297800064087
6212 domains visited
Cumulative time: 5.2657151222229

BaB round 9
batch: 1939
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.055871009826660156
10 lb beta sum: 0.1755480021238327, worst -0.055273935198783875
Time: prepare 0.0819    bound 0.2772    transfer 0.0049    finalize 0.0198    func 0.4101    
Accumulated time: func 2.4981    prepare 0.3910    bound 1.9035    transfer 0.0492    finalize 0.0748    
all_split False
======================Cut inference begins======================
max lb tensor(0.05828291) min lb tensor(-0.05524451)
Number of Verified Splits: 1032 of 3878
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 159.
#cuts 1-3: 9
#cuts 4-6: 11
#cuts 7-9: 138
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.35312914848327637 
BICCOS Cumulative time: 1.5358521938323975
Preprocessing time: 0.11901164054870605 Inference time: 0.17008543014526367 Add cuts time: 0.05562019348144531 Cut analysis time: 0.008411884307861328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05524 (21), -0.05432 (21), -0.05355 (21), -0.05082 (21), -0.05049 (21), -0.05027 (21), -0.04980 (21), -0.04935 (21), -0.04896 (21), -0.04856 (21), -0.04849 (21), -0.04795 (21), -0.04753 (21), -0.04631 (21), -0.04619 (21), -0.04589 (21), -0.04566 (21), -0.04564 (21), -0.04551 (21), -0.04542 (21), 
Length of domains: 2846
Time: pickout 0.0358    decision 0.1132    set_bounds 0.1652    solve 0.5498    add 0.0141    
Accumulated time: pickout 0.1055    decision 0.9952    set_bounds 0.8049    solve 2.7030    add 0.2199    
Current (lb-rhs): -0.055244505405426025
9058 domains visited
Cumulative time: 6.511793375015259

BaB round 10
batch: 2846
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04998588562011719
10 lb beta sum: 0.14982159435749054, worst -0.049352556467056274
Time: prepare 0.1213    bound 0.3923    transfer 0.0276    finalize 0.1845    func 0.7633    
Accumulated time: func 3.2614    prepare 0.5126    bound 2.2958    transfer 0.0768    finalize 0.2593    
all_split False
======================Cut inference begins======================
max lb tensor(0.05155474) min lb tensor(-0.04932790)
Number of Verified Splits: 2089 of 5692
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 323.
#cuts 1-3: 9
#cuts 4-6: 106
#cuts 7-9: 206
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.7060964107513428 
BICCOS Cumulative time: 2.2419486045837402
Preprocessing time: 0.1768028736114502 Inference time: 0.3542630672454834 Add cuts time: 0.15984773635864258 Cut analysis time: 0.015182733535766602
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04933 (22), -0.04840 (22), -0.04763 (22), -0.04488 (22), -0.04448 (22), -0.04428 (22), -0.04389 (22), -0.04334 (22), -0.04298 (22), -0.04261 (22), -0.04241 (22), -0.04203 (22), -0.04193 (22), -0.04169 (22), -0.04109 (22), -0.04032 (22), -0.04029 (22), -0.04025 (22), -0.03982 (22), -0.03973 (22), 
Length of domains: 3603
Time: pickout 0.0421    decision 0.1613    set_bounds 0.2491    solve 0.7649    add 0.0096    
Accumulated time: pickout 0.1477    decision 1.1565    set_bounds 1.0540    solve 3.4680    add 0.2295    
Current (lb-rhs): -0.04932789504528046
12661 domains visited
Cumulative time: 8.47830319404602

BaB round 11
batch: 3603
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 883] [/input-8, 493] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04665088653564453
10 lb beta sum: 0.11584299057722092, worst -0.062342569231987
Time: prepare 0.1573    bound 0.5169    transfer 0.0286    finalize 0.0401    func 0.7913    
Accumulated time: func 4.0527    prepare 0.6701    bound 2.8127    transfer 0.1054    finalize 0.2994    
all_split False
======================Cut inference begins======================
max lb tensor(0.04802616) min lb tensor(-0.04601964)
Number of Verified Splits: 4474 of 7206
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 270.
#cuts 1-3: 14
#cuts 4-6: 214
#cuts 7-9: 42
#cuts >= 20: 0
BICCOS time: 1.3845341205596924 
BICCOS Cumulative time: 3.6264827251434326
Preprocessing time: 0.2279219627380371 Inference time: 0.9240097999572754 Add cuts time: 0.22229385375976562 Cut analysis time: 0.010308504104614258
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04602 (23), -0.04508 (23), -0.04432 (23), -0.04157 (23), -0.04117 (23), -0.04094 (23), -0.04058 (23), -0.04000 (23), -0.03968 (23), -0.03925 (23), -0.03909 (23), -0.03872 (23), -0.03834 (23), -0.03799 (23), -0.03723 (23), -0.03701 (23), -0.03693 (23), -0.03673 (23), -0.03648 (23), -0.03637 (23), 
Length of domains: 2732
Time: pickout 0.0692    decision 0.2022    set_bounds 0.4699    solve 0.7937    add 0.0174    
Accumulated time: pickout 0.2169    decision 1.3588    set_bounds 1.5239    solve 4.2616    add 0.2469    
Current (lb-rhs): -0.04601964354515076
15393 domains visited
Cumulative time: 11.46785831451416

BaB round 12
batch: 2732
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04263019561767578
10 lb beta sum: 0.16998007893562317, worst -0.09813384711742401
Time: prepare 0.1172    bound 0.3979    transfer 0.0221    finalize 0.1811    func 0.7555    
Accumulated time: func 4.8083    prepare 0.7876    bound 3.2107    transfer 0.1276    finalize 0.4805    
all_split False
======================Cut inference begins======================
max lb tensor(0.39217830) min lb tensor(-0.04201895)
Number of Verified Splits: 3936 of 5464
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 262.
#cuts 1-3: 20
#cuts 4-6: 205
#cuts 7-9: 37
#cuts >= 20: 0
BICCOS time: 1.0364775657653809 
BICCOS Cumulative time: 4.6629602909088135
Preprocessing time: 0.1736609935760498 Inference time: 0.6722040176391602 Add cuts time: 0.18071985244750977 Cut analysis time: 0.009892702102661133
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04202 (24), -0.04112 (24), -0.04033 (24), -0.03759 (24), -0.03690 (24), -0.03685 (24), -0.03657 (24), -0.03600 (24), -0.03572 (24), -0.03522 (24), -0.03474 (24), -0.03470 (24), -0.03401 (24), -0.03390 (24), -0.03316 (24), -0.03261 (24), -0.03258 (24), -0.03249 (24), -0.03248 (24), -0.03230 (24), 
Length of domains: 1528
Time: pickout 0.0570    decision 0.1566    set_bounds 0.2448    solve 0.7566    add 0.0192    
Accumulated time: pickout 0.2739    decision 1.5153    set_bounds 1.7687    solve 5.0182    add 0.2662    
Current (lb-rhs): -0.04201894998550415
16921 domains visited
Cumulative time: 13.785162448883057

BaB round 13
batch: 1528
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 1394] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 1394] [/input-8, 493] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.038791656494140625
10 lb beta sum: 0.16365551948547363, worst -0.07593624293804169
Time: prepare 0.0637    bound 0.2510    transfer 0.0054    finalize 0.0158    func 0.3565    
Accumulated time: func 5.1648    prepare 0.8516    bound 3.4616    transfer 0.1330    finalize 0.4963    
all_split False
======================Cut inference begins======================
max lb tensor(0.23233120) min lb tensor(-0.03814988)
Number of Verified Splits: 1969 of 3056
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 178.
#cuts 1-3: 16
#cuts 4-6: 144
#cuts 7-9: 18
#cuts >= 20: 0
BICCOS time: 0.5086205005645752 
BICCOS Cumulative time: 5.171580791473389
Preprocessing time: 0.09675097465515137 Inference time: 0.331587553024292 Add cuts time: 0.07382392883300781 Cut analysis time: 0.0064580440521240234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03815 (25), -0.03735 (25), -0.03640 (25), -0.03365 (25), -0.03307 (25), -0.03304 (25), -0.03268 (25), -0.03224 (25), -0.03187 (25), -0.03130 (25), -0.03080 (25), -0.03074 (25), -0.03022 (25), -0.02978 (25), -0.02920 (25), -0.02872 (25), -0.02864 (25), -0.02854 (25), -0.02854 (25), -0.02842 (25), 
Length of domains: 1087
Time: pickout 0.0269    decision 0.0924    set_bounds 0.2971    solve 0.3575    add 0.0135    
Accumulated time: pickout 0.3008    decision 1.6077    set_bounds 2.0658    solve 5.3757    add 0.2797    
Current (lb-rhs): -0.0381498783826828
18008 domains visited
Cumulative time: 15.103580474853516

BaB round 14
batch: 1087
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 885] [/input-8, 1240] [/input-8, 1240] [/input-8, 885] [/input-8, 1240] [/input-8, 1240] [/input-8, 883] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03574371337890625
10 lb beta sum: 0.36364561319351196, worst -0.028892427682876587
Time: prepare 0.0449    bound 0.1887    transfer 0.0035    finalize 0.0112    func 0.2647    
Accumulated time: func 5.4294    prepare 0.8968    bound 3.6503    transfer 0.1365    finalize 0.5076    
all_split False
======================Cut inference begins======================
max lb tensor(0.40184397) min lb tensor(-0.02882390)
Number of Verified Splits: 1878 of 2174
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 29
#cuts 4-6: 1
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.5670232772827148 
BICCOS Cumulative time: 5.7386040687561035
Preprocessing time: 0.06814026832580566 Inference time: 0.45949292182922363 Add cuts time: 0.038466453552246094 Cut analysis time: 0.0009236335754394531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02882 (26), -0.02775 (26), -0.02725 (26), -0.02438 (26), -0.02366 (26), -0.02336 (26), -0.02259 (26), -0.02228 (26), -0.02209 (26), -0.02166 (26), -0.02028 (26), -0.01939 (26), -0.01921 (26), -0.01871 (26), -0.01864 (26), -0.01818 (26), -0.01816 (26), -0.01802 (26), -0.01712 (26), -0.01650 (26), 
Length of domains: 296
Time: pickout 0.0213    decision 0.0686    set_bounds 0.0948    solve 0.2651    add 0.0016    
Accumulated time: pickout 0.3221    decision 1.6763    set_bounds 2.1606    solve 5.6408    add 0.2813    
Current (lb-rhs): -0.02882389724254608
18304 domains visited
Cumulative time: 16.14081907272339

BaB round 15
batch: 296
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.033743858337402344
10 lb beta sum: 1.0841922760009766, worst -0.012177392840385437
Time: prepare 0.0125    bound 0.1370    transfer 0.0028    finalize 0.0030    func 0.1592    
Accumulated time: func 5.5886    prepare 0.9095    bound 3.7873    transfer 0.1393    finalize 0.5106    
all_split False
======================Cut inference begins======================
max lb tensor(1.18520880) min lb tensor(-0.01207739)
Number of Verified Splits: 580 of 592
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.12278199195861816 
BICCOS Cumulative time: 5.861386060714722
Preprocessing time: 0.01719808578491211 Inference time: 0.09935688972473145 Add cuts time: 0.006014108657836914 Cut analysis time: 0.0002129077911376953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01208 (27), -0.01031 (27), -0.00691 (27), -0.00663 (27), -0.00517 (27), -0.00470 (27), -0.00388 (27), -0.00222 (27), -0.00219 (27), -0.00144 (27), -0.00057 (27), -0.00044 (27), 
Length of domains: 12
Time: pickout 0.0078    decision 0.0277    set_bounds 0.0258    solve 0.1593    add 0.0008    
Accumulated time: pickout 0.3299    decision 1.7040    set_bounds 2.1864    solve 5.8001    add 0.2821    
Current (lb-rhs): -0.012077391147613525
18316 domains visited
Cumulative time: 16.48882794380188

BaB round 16
batch: 12
splitting decisions: 
split level 0: [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] 
split level 1: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 2: [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] 
split level 3: [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 139] 
split level 4: [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.00014591217041015625

all verified at 1th iter
Time: prepare 0.0077    bound 0.0103    transfer 0.0007    finalize 0.0022    func 0.0233    
Accumulated time: func 5.6119    prepare 0.9175    bound 3.7976    transfer 0.1399    finalize 0.5128    
all_split False
======================Cut inference begins======================
max lb tensor(0.04889182) min lb tensor(0.00139427)
Number of Verified Splits: 384 of 384
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010851144790649414 
BICCOS Cumulative time: 5.872237205505371
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0014    decision 0.0169    set_bounds 0.0354    solve 0.0234    add 0.0005    
Accumulated time: pickout 0.3313    decision 1.7209    set_bounds 2.2218    solve 5.8235    add 0.2826    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
18316 domains visited
Cumulative time: 16.579151391983032

Result: safe in 18.1696 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.62381744, -28.09670830, -18.92805672, -21.62400627, -18.04868507,
         -20.67170334, -18.38792801, -22.29936600, -26.56884384, -27.05737495]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 230, 1, 686] with unstable size 229 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 686] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [229]; unstable size 229; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 229] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 229] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.50022173,  8.58374882,  0.05487382,  2.84900141,  1.87417698,
         -0.72468829,  3.40504527,  7.17037439,  7.46117973]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.62381744, -28.09670830, -18.92805672, -21.62400627, -18.04868507,
         -20.67170334, -18.38792801, -22.29936600, -26.56884384, -27.05737495]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.62763786, -27.96693420, -18.82089806, -21.58105659, -18.18916893,
          -20.65969467, -17.92498779, -22.51766396, -26.59140778, -26.94355965]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26418114]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0555 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.05389786, -20.54568100, -25.38948441, -26.07571030, -24.92573357,
         -26.81814766, -25.31372643, -25.39832497, -22.18379402, -23.40080070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 595] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 595] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 232] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74438739, 2.89176846, 3.72229528, 2.51304722, 4.30712318, 2.80102062,
         3.10480404, 0.20504236, 1.77497375]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0488 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.32361412, -25.52174950, -20.63148117, -22.61431122, -22.40266609,
         -22.09627724, -23.98217392, -22.95088196, -26.26723480, -25.69747353]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [912]; unstable size 912; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 912] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 912] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 912] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 239] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.74784994, 3.37162113, 1.17322958, 0.89480472, 0.68540317, 2.25614309,
         1.51441813, 4.23806047, 3.34960651]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0290 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.69555855, -19.83600044, -17.26213837, -16.53295326, -15.76759911,
         -16.55274010, -15.97445679, -15.69591236, -22.56094933, -18.99766541]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [484]; unstable size 484; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 223, 1, 484] with unstable size 222 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 484] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 484] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [222]; unstable size 222; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 222] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 222] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.12594318,  2.36834168,  0.02151179, -0.42955136, -0.99394369,
         -0.44192910, -1.36477041,  4.78464222,  1.58999276]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.69555855, -19.83600044, -17.26213837, -16.53295326, -15.76759911,
         -16.55274010, -15.97445679, -15.69591236, -22.56094933, -18.99766541]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.89224243, -20.05119324, -17.43051529, -16.67961121, -15.76606178,
          -16.74633598, -15.92820740, -16.27584839, -22.73025513, -19.33327484],
         [-21.89224243, -20.05119324, -17.43051529, -16.67961121, -15.76606178,
          -16.74633598, -15.92820740, -16.27584839, -22.73025513, -19.33327484]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.40376282, -0.50978661,  0.47048759, -0.34764099]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0403 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.74517250, -27.26931763, -22.31864548, -21.42955971, -22.42046928,
         -21.44980049, -22.51526642, -20.76612473, -26.78885269, -23.30550575]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [399]; unstable size 399; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 176, 1, 399] with unstable size 175 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 399] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 399] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [175]; unstable size 175; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 175] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 175] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.71335793,  3.37155747, -1.61985373, -0.57951510, -1.65425396,
         -0.81910729, -2.40787268,  3.42854500, -0.36425352]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.74517250, -27.26931763, -22.31864548, -21.42955971, -22.42046928,
         -21.44980049, -22.51526642, -20.76612473, -26.78885269, -23.30550575]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.74517059, -27.26931572, -22.31864166, -21.42955780, -22.42046738,
          -21.44979858, -22.51526833, -20.76612663, -26.78884697, -23.30550766],
         [-25.74517059, -27.26931572, -22.31864166, -21.42955780, -22.42046738,
          -21.44979858, -22.51526833, -20.76612663, -26.78884697, -23.30550766]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.88908386,  0.10182571, -0.86884308,  0.19662666, -1.55251503,
           0.98686600]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0438 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.06668091, -12.17250633, -18.19817734, -17.74991226, -18.22573662,
         -18.83922386, -18.43832207, -18.79791641, -13.75891685, -14.38429832]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 591] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 591] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.43584061, 4.09200811, 4.03862000, 4.51079750, 5.00953007, 4.46496391,
         5.03482962, 0.23301744, 1.42504895]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0444 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.34238243, -16.93456459, -14.43105412, -14.20242596, -14.38679028,
         -14.68807125, -15.41123962, -15.82969379, -17.16383553, -15.87702465]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [859]; unstable size 859; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 248, 1, 859] with unstable size 247 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 859] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 859] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [247]; unstable size 247; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 247] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 247] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.60208184, -0.84272003, -2.06194019, -2.20308495, -2.22541571,
         -1.86848927, -1.36994243, -0.36857545, -1.56844425]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.34238243, -16.93456459, -14.43105412, -14.20242596, -14.38679028,
         -14.68807125, -15.41123962, -15.82969379, -17.16383553, -15.87702465]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.34238243, -16.93456650, -14.43105221, -14.20242500, -14.38679028,
          -14.68807125, -15.41123772, -15.82969379, -17.16383553, -15.87702370],
         [-16.34238243, -16.93456650, -14.43105221, -14.20242500, -14.38679028,
          -14.68807125, -15.41123772, -15.82969379, -17.16383553, -15.87702370]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.93114471,  1.52332878, -0.98018551, -1.20881271, -1.02444744,
          -0.72316647,  0.41845608,  1.75259781,  0.46578598]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0612 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.16949272, -23.99048996, -31.56820297, -31.41168404, -30.28091240,
         -31.78048897, -32.67536545, -30.17310143, -29.00139236, -24.21942329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 740] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 740] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 244] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.38111258,  5.21995306,  5.14613342,  3.91153526,  5.43957043,
          6.09781647,  3.61251354,  3.57682633, -0.52638078]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.16949272, -23.99048996, -31.56820297, -31.41168404, -30.28091240,
         -31.78048897, -32.67536545, -30.17310143, -29.00139236, -24.21942329]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.39106178, -23.67284584, -30.69213867, -30.40574837, -29.33213806,
          -30.76441956, -31.73852158, -29.12598610, -28.38734436, -23.48725510]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18559074]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0053 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0501 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.87058258, -22.74460030, -18.83897781, -17.07898903, -18.22540092,
         -16.89878654, -19.11079788, -18.79213715, -26.21196175, -21.30853462]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [669]; unstable size 669; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 669] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 669] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 669] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 240] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.66332340,  4.03361559,  0.93628287, -0.12254727,  0.23944330,
          1.05922604,  0.79270160,  7.63720131,  2.90536690]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.87058258, -22.74460030, -18.83897781, -17.07898903, -18.22540092,
         -16.89878654, -19.11079788, -18.79213715, -26.21196175, -21.30853462]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.51282120, -22.28214264, -18.49987793, -16.76547241, -17.89261055,
          -16.77055550, -18.66166306, -18.61735344, -25.76009750, -20.99545097]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00508308]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0379 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
         -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 266, 1, 740] with unstable size 265 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 740] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [265]; unstable size 265; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 265] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 265] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.72773457,  3.26004553,  3.78023982,  3.84159517,  3.89679265,
          4.82130098,  3.72940326, -0.13638735,  0.71589279]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
         -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.24it/s]100%|██████████| 1/1 [00:00<00:00,  9.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.77746010, -17.05466080, -21.88848305, -22.15901375, -22.44706535,
          -22.50233269, -23.34392357, -22.66395569, -17.36938095, -18.43949699]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31472015]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1108 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.383888244628906
alpha/beta optimization time: 1.194488286972046
initial alpha-crown bounds: tensor([[ 1.80881190,  3.35405731,  3.86240530,  3.93695402,  3.99371886,
          4.90125322,  3.85100222, -0.08674765,  0.76243436]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.08674764633178711
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66421580314636
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6641776561737
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6641526222229
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.66413068771362
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.66411185264587
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.66409301757812
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.66407442092896
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.66405248641968
Verifying property 7 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08674765]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
        -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08674765]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 740
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 259
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 1015
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001125335693359375
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08674812316894531
10 lb beta sum: 0.0, worst -0.08675050735473633
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    func 0.0530    
Accumulated time: func 0.0530    prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 64] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 29] 
split level 5: [/input-12, 42] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 2] 
split level 8: [/input-12, 69] 
split level 9: [/input-12, 12] 
split level 10: [/input-8, 1973] 
split level 11: [/input-12, 61] 
split level 12: [/input-8, 1392] 
split level 13: [/input-8, 940] 
split level 14: [/input-8, 1971] 
split level 15: [/input-8, 717] 
split level 16: [/input-8, 1490] 
split level 17: [/input-8, 1641] 
split level 18: [/input-8, 821] 
split level 19: [/input-8, 746] 
split level 20: [/input, 887] 
split level 21: [/input-8, 1704] 
split level 22: [/input-8, 1697] 
split level 23: [/input-8, 1974] 
split level 24: [/input-8, 923] 
split level 25: [/input-8, 931] 
split level 26: [/input-8, 757] 
split level 27: [/input, 2698] 
split level 28: [/input-8, 916] 
split level 29: [/input-8, 337] 
split level 30: [/input-8, 758] 
split level 31: [/input-8, 1333] 
split level 32: [/input-8, 1649] 
split level 33: [/input-8, 1505] 
split level 34: [/input-8, 825] 
split level 35: [/input, 3578] 
split level 36: [/input-8, 827] 
split level 37: [/input-8, 1593] 
split level 38: [/input, 1218] 
split level 39: [/input-8, 355] 
split level 40: [/input-8, 755] 
split level 41: [/input-8, 934] 
split level 42: [/input-8, 742] 
split level 43: [/input-8, 1677] 
split level 44: [/input-8, 1390] 
split level 45: [/input, 4035] 
split level 46: [/input-8, 1184] 
split level 47: [/input, 3449] 
split level 48: [/input-8, 715] 
split level 49: [/input, 2762] 
split level 50: [/input, 661] 
split level 51: [/input, 3448] 
split level 52: [/input-8, 330] 
split level 53: [/input-8, 1975] 
split level 54: [/input, 886] 
split level 55: [/input-8, 415] 
split level 56: [/input-8, 331] 
split level 57: [/input, 2758] 
split level 58: [/input-8, 1594] 
split level 59: [/input-8, 589] 
split level 60: [/input-8, 250] 
split level 61: [/input-8, 1686] 
split level 62: [/input, 1015] 
split level 63: [/input-8, 580] 
split level 64: [/input-8, 1678] 
split level 65: [/input, 326] 
split level 66: [/input, 949] 
split level 67: [/input, 1016] 
split level 68: [/input-8, 251] 
split level 69: [/input, 1014] 
split level 70: [/input-8, 1655] 
split level 71: [/input-8, 1176] 
split level 72: [/input, 1217] 
split level 73: [/input-8, 1027] 
split level 74: [/input, 2408] 
split level 75: [/input-8, 1688] 
split level 76: [/input-8, 753] 
split level 77: [/input, 2389] 
split level 78: [/input-8, 413] 
split level 79: [/input-8, 1987] 
split level 80: [/input, 2151] 
split level 81: [/input-8, 732] 
split level 82: [/input, 2152] 
split level 83: [/input, 1019] 
split level 84: [/input, 3572] 
split level 85: [/input, 679] 
split level 86: [/input, 1012] 
split level 87: [/input, 2136] 
split level 88: [/input, 4012] 
split level 89: [/input, 667] 
split level 90: [/input, 2425] 
split level 91: [/input-8, 1707] 
split level 92: [/input-8, 241] 
split level 93: [/input-8, 756] 
split level 94: [/input-8, 1647] 
split level 95: [/input, 1085] 
split level 96: [/input-8, 1034] 
split level 97: [/input, 885] 
split level 98: [/input, 856] 
split level 99: [/input, 666] 
split level 100: [/input, 2153] 
split level 101: [/input, 2150] 
split level 102: [/input-8, 838] 
split level 103: [/input-8, 254] 
split level 104: [/input, 2407] 
split level 105: [/input, 681] 
split level 106: [/input, 1228] 
split level 107: [/input, 1278] 
split level 108: [/input, 1469] 
split level 109: [/input-8, 819] 
split level 110: [/input, 346] 
split level 111: [/input, 730] 
split level 112: [/input, 3194] 
split level 113: [/input, 2555] 
split level 114: [/input, 874] 
split level 115: [/input, 869] 
split level 116: [/input, 1260] 
split level 117: [/input, 677] 
split level 118: [/input-8, 246] 
split level 119: [/input, 4039] 
split level 120: [/input, 2137] 
split level 121: [/input-8, 24] 
split level 122: [/input, 1102] 
split level 123: [/input, 2405] 
split level 124: [/input, 682] 
split level 125: [/input-8, 1381] 
split level 126: [/input, 1453] 
split level 127: [/input, 2749] 
split level 128: [/input, 2406] 
split level 129: [/input-8, 1663] 
split level 130: [/input, 2553] 
split level 131: [/input, 193] 
split level 132: [/input, 2409] 
split level 133: [/input-8, 406] 
split level 134: [/input, 2149] 
split level 135: [/input, 1250] 
split level 136: [/input-8, 6] 
split level 137: [/input, 3195] 
split level 138: [/input, 2549] 
split level 139: [/input, 116] 
split level 140: [/input, 2931] 
split level 141: [/input, 2550] 
split level 142: [/input-8, 1098] 
split level 143: [/input, 2102] 
split level 144: [/input, 1266] 
split level 145: [/input, 2133] 
split level 146: [/input, 1006] 
split level 147: [/input, 3445] 
split level 148: [/input, 854] 
split level 149: [/input, 2932] 
split level 150: [/input, 1045] 
split level 151: [/input, 372] 
split level 152: [/input-8, 752] 
split level 153: [/input, 2118] 
split level 154: [/input, 2376] 
split level 155: [/input, 2404] 
split level 156: [/input-8, 958] 
split level 157: [/input, 2884] 
split level 158: [/input, 1245] 
split level 159: [/input, 2552] 
split level 160: [/input, 2551] 
split level 161: [/input-8, 1986] 
split level 162: [/input, 728] 
split level 163: [/input, 678] 
split level 164: [/input, 1244] 
split level 165: [/input, 2216] 
split level 166: [/input, 2419] 
split level 167: [/input-8, 399] 
split level 168: [/input, 2296] 
split level 169: [/input-8, 1613] 
split level 170: [/input, 2295] 
split level 171: [/input, 2867] 
split level 172: [/input, 727] 
split level 173: [/input, 329] 
split level 174: [/input, 857] 
split level 175: [/input, 1058] 
split level 176: [/input, 1676] 
split level 177: [/input, 2784] 
split level 178: [/input, 209] 
split level 179: [/input, 2010] 
split level 180: [/input, 1277] 
split level 181: [/input, 1457] 
split level 182: [/input, 115] 
split level 183: [/input, 3495] 
split level 184: [/input, 2768] 
split level 185: [/input, 900] 
split level 186: [/input-8, 1158] 
split level 187: [/input, 852] 
split level 188: [/input, 1105] 
split level 189: [/input, 2171] 
split level 190: [/input, 67] 
split level 191: [/input, 1133] 
split level 192: [/input, 2012] 
split level 193: [/input, 2132] 
split level 194: [/input-8, 7] 
split level 195: [/input, 2298] 
split level 196: [/input, 1134] 
split level 197: [/input, 3869] 
split level 198: [/input, 2545] 
split level 199: [/input, 1216] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0867147445678711
10 lb beta sum: 0.0, worst -0.08671331405639648
Time: prepare 0.0116    bound 0.0959    transfer 0.0023    finalize 0.0030    func 0.1154    
Accumulated time: func 0.1684    prepare 0.0216    bound 0.1484    transfer 0.0024    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.35328817) min lb tensor(-0.08670807)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.010709285736083984 
BICCOS Cumulative time: 0.010709285736083984
Preprocessing time: 0.009930133819580078 Inference time: 0.0003654956817626953 Add cuts time: 0.00013399124145507812 Cut analysis time: 0.0002796649932861328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07826 (1), -0.07810 (1), -0.07780 (1), -0.07775 (1), -0.07746 (1), -0.07703 (1), -0.07690 (1), -0.07689 (1), -0.07678 (1), -0.07632 (1), -0.07632 (1), -0.07620 (1), -0.07588 (1), -0.07571 (1), -0.07553 (1), -0.07548 (1), -0.07546 (1), -0.07512 (1), -0.07476 (1), -0.07432 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5117    set_bounds 0.0087    solve 0.1155    add 0.0713    
Accumulated time: pickout 0.0003    decision 0.5117    set_bounds 0.0087    solve 0.1155    add 0.0713    
Current (lb-rhs): -0.0782613754272461
50 domains visited
Cumulative time: 0.7765188217163086

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 31] [/input-12, 24] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 1: [/input-12, 64] [/input-12, 24] [/input-12, 31] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 42] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 3: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 42] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 42] [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06420087814331055

all verified at 1th iter
Time: prepare 0.0076    bound 0.0124    transfer 0.0007    finalize 0.0025    func 0.0258    
Accumulated time: func 0.1942    prepare 0.0294    bound 0.1608    transfer 0.0032    finalize 0.0056    
all_split False
======================Cut inference begins======================
max lb tensor(0.16282099) min lb tensor(0.00339031)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03462648391723633 
BICCOS Cumulative time: 0.04533576965332031
Preprocessing time: 0.011713504791259766 Inference time: 0.014234066009521484 Add cuts time: 0.00848841667175293 Cut analysis time: 0.00019049644470214844
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0251    set_bounds 0.0118    solve 0.0259    add 0.0152    
Accumulated time: pickout 0.0014    decision 0.5369    set_bounds 0.0206    solve 0.1414    add 0.0865    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 64] 
split level 3: [/input-12, 29] 
split level 4: [/input-12, 42] 
split level 5: [/input-12, 59] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.06227302551269531

all verified at 0th iter
Time: prepare 0.0037    bound 0.0044    transfer 0.0011    finalize 0.0013    func 0.0122    
Accumulated time: func 0.2064    prepare 0.0335    bound 0.1652    transfer 0.0043    finalize 0.0070    
all_split False
======================Cut inference begins======================
max lb tensor(0.44969940) min lb tensor(0.06227303)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006306171417236328 
BICCOS Cumulative time: 0.05164194107055664
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0169    solve 0.0122    add 0.0003    
Accumulated time: pickout 0.0018    decision 0.5592    set_bounds 0.0375    solve 0.1536    add 0.0868    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 0.9524376392364502


Properties batch 8, size 1
Remaining timeout: 197.55347084999084
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.4471 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
         -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 511] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 511] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 148] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.11264575,  7.84995317,  2.51627040,  2.42221284,  2.71285629,
          2.42410803,  5.54274893,  0.54273701,  7.53125095]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
         -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
          -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.66014290]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0639 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.89297295, -27.33354378, -29.85372162, -29.49278831, -29.63881493,
         -29.50118065, -28.79456902, -32.01272583, -30.67852783, -30.54553604]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [545]; unstable size 545; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 545] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 545] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 545] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 206] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.09797335,  0.63166428,  0.38092375,  0.26649189,  0.20289612,
          0.00656462,  2.20104027,  2.04292107,  2.05919981]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.89297295, -27.33354378, -29.85372162, -29.49278831, -29.63881493,
         -29.50118065, -28.79456902, -32.01272583, -30.67852783, -30.54553604]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.34124565, -27.52548599, -29.41050339, -29.07751274, -29.21006012,
          -29.12439346, -28.47667313, -31.67535019, -30.41997719, -30.50797653]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18424034]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0346 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.40174294, -21.80084610, -13.97534084, -16.28988266, -14.66720581,
         -15.45098114, -14.34288788, -16.27135849, -21.38418579, -20.94428825]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [473]; unstable size 473; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 473] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 473] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 473] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 261] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.13220155,  5.32813597, -1.68543756,  0.95246255, -1.03167844,
         -0.07594633,  0.28766239,  5.26238632,  4.65756130]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.40174294, -21.80084610, -13.97534084, -16.28988266, -14.66720581,
         -15.45098114, -14.34288788, -16.27135849, -21.38418579, -20.94428825]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.40174294, -21.80084610, -13.97533989, -16.28988647, -14.66720772,
          -15.45098114, -14.34288788, -16.27136040, -21.38418961, -20.94428825],
         [-17.40174294, -21.80084610, -13.97533989, -16.28988647, -14.66720772,
          -15.45098114, -14.34288788, -16.27136040, -21.38418961, -20.94428825]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36754799,  0.32431984,  1.10809326]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0534 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
         -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1135]; unstable size 1135; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 418, 1, 1135] with unstable size 417 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1135] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1135] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [417]; unstable size 417; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 417] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 417] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.41564417,  4.65418386,  0.18066603, -0.18956989,  0.62921107,
         -0.03981161,  1.17113996,  2.01148963,  3.41380835]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
         -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.09it/s]100%|██████████| 1/1 [00:00<00:00,  9.08it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.83646393, -22.39689064, -14.86150932, -16.11657333, -15.43437386,
          -16.66946793, -16.04981232, -17.15288162, -19.10764885, -20.77401161],
         [-17.83646393, -22.39689064, -14.86150932, -16.11657333, -15.43437386,
          -16.66946793, -16.04981232, -17.15288162, -19.10764885, -20.77401161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.57286453, 1.18830299]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1129 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.512422561645508
alpha/beta optimization time: 1.1921780109405518
initial alpha-crown bounds: tensor([[ 1.54290390,  4.87704706,  0.28549960, -0.07817429,  0.74323356,
          0.05855030,  1.29010916,  2.20426631,  3.58898783]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.07817429304122925
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64384484291077
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64380550384521
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64378237724304
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.64376068115234
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07817429]], device='cuda:0') need to verify.
Model prediction is: tensor([-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
        -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07817429]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1135
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 400
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1562
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010228157043457031
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07817345857620239
10 lb beta sum: 0.0, worst -0.07818335294723511
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    func 0.0529    
Accumulated time: func 0.0529    prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 83] 
split level 8: [/input-12, 55] 
split level 9: [/input-8, 173] 
split level 10: [/input-8, 1186] 
split level 11: [/input-12, 86] 
split level 12: [/input-8, 2018] 
split level 13: [/input-8, 163] 
split level 14: [/input-8, 1187] 
split level 15: [/input-8, 1069] 
split level 16: [/input-8, 164] 
split level 17: [/input-8, 2010] 
split level 18: [/input-8, 1178] 
split level 19: [/input-8, 1070] 
split level 20: [/input-8, 1378] 
split level 21: [/input-8, 2025] 
split level 22: [/input-8, 2009] 
split level 23: [/input-8, 132] 
split level 24: [/input-8, 141] 
split level 25: [/input-8, 874] 
split level 26: [/input-8, 877] 
split level 27: [/input-8, 130] 
split level 28: [/input-8, 1185] 
split level 29: [/input-8, 156] 
split level 30: [/input, 631] 
split level 31: [/input-8, 1361] 
split level 32: [/input-8, 869] 
split level 33: [/input, 2798] 
split level 34: [/input-12, 35] 
split level 35: [/input-8, 1370] 
split level 36: [/input, 2781] 
split level 37: [/input-8, 1386] 
split level 38: [/input-8, 1268] 
split level 39: [/input-8, 878] 
split level 40: [/input-8, 2019] 
split level 41: [/input-8, 1382] 
split level 42: [/input-8, 906] 
split level 43: [/input-8, 876] 
split level 44: [/input-8, 33] 
split level 45: [/input, 823] 
split level 46: [/input-8, 866] 
split level 47: [/input-8, 1379] 
split level 48: [/input, 3913] 
split level 49: [/input-8, 865] 
split level 50: [/input-8, 1383] 
split level 51: [/input, 3164] 
split level 52: [/input-8, 1390] 
split level 53: [/input-8, 189] 
split level 54: [/input-8, 1179] 
split level 55: [/input-8, 291] 
split level 56: [/input, 3147] 
split level 57: [/input-8, 857] 
split level 58: [/input-8, 1385] 
split level 59: [/input-8, 1251] 
split level 60: [/input-8, 884] 
split level 61: [/input, 3197] 
split level 62: [/input, 825] 
split level 63: [/input-8, 1253] 
split level 64: [/input, 1345] 
split level 65: [/input-8, 2011] 
split level 66: [/input-8, 868] 
split level 67: [/input-8, 1763] 
split level 68: [/input-8, 362] 
split level 69: [/input-8, 1391] 
split level 70: [/input-8, 219] 
split level 71: [/input-8, 2020] 
split level 72: [/input-8, 34] 
split level 73: [/input-8, 881] 
split level 74: [/input-8, 851] 
split level 75: [/input-8, 32] 
split level 76: [/input-8, 290] 
split level 77: [/input-8, 1375] 
split level 78: [/input, 824] 
split level 79: [/input, 826] 
split level 80: [/input, 2834] 
split level 81: [/input, 2763] 
split level 82: [/input, 954] 
split level 83: [/input-8, 1561] 
split level 84: [/input-8, 1269] 
split level 85: [/input, 3277] 
split level 86: [/input-8, 1078] 
split level 87: [/input-8, 1748] 
split level 88: [/input-8, 1396] 
split level 89: [/input, 2669] 
split level 90: [/input, 3279] 
split level 91: [/input, 2765] 
split level 92: [/input, 3097] 
split level 93: [/input-8, 867] 
split level 94: [/input-8, 216] 
split level 95: [/input-8, 210] 
split level 96: [/input-8, 323] 
split level 97: [/input-8, 1358] 
split level 98: [/input-8, 217] 
split level 99: [/input, 2779] 
split level 100: [/input-8, 220] 
split level 101: [/input-8, 862] 
split level 102: [/input, 2634] 
split level 103: [/input, 2635] 
split level 104: [/input-8, 218] 
split level 105: [/input, 807] 
split level 106: [/input, 3295] 
split level 107: [/input, 2780] 
split level 108: [/input-8, 1177] 
split level 109: [/input, 3366] 
split level 110: [/input-8, 209] 
split level 111: [/input-8, 883] 
split level 112: [/input, 3323] 
split level 113: [/input, 3269] 
split level 114: [/input, 2818] 
split level 115: [/input, 839] 
split level 116: [/input-8, 1233] 
split level 117: [/input, 2652] 
split level 118: [/input, 2585] 
split level 119: [/input-12, 43] 
split level 120: [/input-8, 820] 
split level 121: [/input-8, 1347] 
split level 122: [/input, 2685] 
split level 123: [/input-8, 1562] 
split level 124: [/input-8, 886] 
split level 125: [/input, 2686] 
split level 126: [/input, 842] 
split level 127: [/input-8, 201] 
split level 128: [/input, 1927] 
split level 129: [/input, 1911] 
split level 130: [/input, 923] 
split level 131: [/input-8, 1181] 
split level 132: [/input-8, 1373] 
split level 133: [/input, 956] 
split level 134: [/input-8, 599] 
split level 135: [/input, 775] 
split level 136: [/input, 907] 
split level 137: [/input, 2921] 
split level 138: [/input-8, 1514] 
split level 139: [/input, 3270] 
split level 140: [/input, 679] 
split level 141: [/input-8, 1765] 
split level 142: [/input, 792] 
split level 143: [/input, 67] 
split level 144: [/input-8, 604] 
split level 145: [/input, 2087] 
split level 146: [/input, 2653] 
split level 147: [/input, 105] 
split level 148: [/input-8, 1189] 
split level 149: [/input, 581] 
split level 150: [/input, 805] 
split level 151: [/input, 3381] 
split level 152: [/input, 2839] 
split level 153: [/input-8, 1995] 
split level 154: [/input-8, 843] 
split level 155: [/input, 3383] 
split level 156: [/input, 937] 
split level 157: [/input, 840] 
split level 158: [/input-8, 1252] 
split level 159: [/input-8, 1750] 
split level 160: [/input, 2748] 
split level 161: [/input, 986] 
split level 162: [/input, 2870] 
split level 163: [/input, 972] 
split level 164: [/input-8, 863] 
split level 165: [/input, 3081] 
split level 166: [/input, 939] 
split level 167: [/input, 1405] 
split level 168: [/input, 3384] 
split level 169: [/input-8, 208] 
split level 170: [/input, 791] 
split level 171: [/input-8, 238] 
split level 172: [/input, 315] 
split level 173: [/input, 1356] 
split level 174: [/input, 2665] 
split level 175: [/input-8, 1384] 
split level 176: [/input-8, 887] 
split level 177: [/input, 113] 
split level 178: [/input, 3043] 
split level 179: [/input, 659] 
split level 180: [/input-8, 810] 
split level 181: [/input, 77] 
split level 182: [/input, 3096] 
split level 183: [/input, 87] 
split level 184: [/input-8, 792] 
split level 185: [/input, 3468] 
split level 186: [/input-8, 242] 
split level 187: [/input-8, 1495] 
split level 188: [/input, 801] 
split level 189: [/input, 116] 
split level 190: [/input, 178] 
split level 191: [/input-8, 1349] 
split level 192: [/input, 820] 
split level 193: [/input-8, 1773] 
split level 194: [/input-8, 895] 
split level 195: [/input-8, 858] 
split level 196: [/input, 2126] 
split level 197: [/input, 450] 
split level 198: [/input-8, 364] 
split level 199: [/input, 177] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0780782699584961
10 lb beta sum: 0.0, worst -0.07808929681777954
Time: prepare 0.0115    bound 0.0972    transfer 0.0013    finalize 0.0032    func 0.1158    
Accumulated time: func 0.1687    prepare 0.0214    bound 0.1496    transfer 0.0014    finalize 0.0033    
all_split False
======================Cut inference begins======================
max lb tensor(0.16974878) min lb tensor(-0.07807475)
Number of Verified Splits: 8 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.01110219955444336 
BICCOS Cumulative time: 0.01110219955444336
Preprocessing time: 0.009988069534301758 Inference time: 0.00034356117248535156 Add cuts time: 0.00011754035949707031 Cut analysis time: 0.0006530284881591797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06938 (1), -0.06922 (1), -0.06872 (1), -0.06862 (1), -0.06856 (1), -0.06854 (1), -0.06785 (1), -0.06722 (1), -0.06717 (1), -0.06715 (1), -0.06694 (1), -0.06679 (1), -0.06658 (1), -0.06618 (1), -0.06564 (1), -0.06563 (1), -0.06563 (1), -0.06492 (1), -0.06462 (1), -0.06376 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5116    set_bounds 0.0089    solve 0.1159    add 0.0705    
Accumulated time: pickout 0.0003    decision 0.5116    set_bounds 0.0089    solve 0.1159    add 0.0705    
Current (lb-rhs): -0.06938141584396362
50 domains visited
Cumulative time: 0.7764787673950195

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 59] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 59] [/input-12, 4] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 4] [/input-12, 59] 
split level 2: [/input-12, 4] [/input-12, 67] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 67] [/input-12, 4] [/input-12, 67] [/input-12, 4] 
split level 3: [/input-12, 67] [/input-12, 97] [/input-12, 67] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.031697988510131836

all verified at 1th iter
Time: prepare 0.0075    bound 0.0118    transfer 0.0008    finalize 0.0026    func 0.0252    
Accumulated time: func 0.1939    prepare 0.0292    bound 0.1614    transfer 0.0022    finalize 0.0059    
all_split False
======================Cut inference begins======================
max lb tensor(0.24257231) min lb tensor(0.00017685)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03501725196838379 
BICCOS Cumulative time: 0.04611945152282715
Preprocessing time: 0.01166534423828125 Inference time: 0.014405965805053711 Add cuts time: 0.008760452270507812 Cut analysis time: 0.00018548965454101562
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0193    set_bounds 0.0122    solve 0.0253    add 0.0151    
Accumulated time: pickout 0.0014    decision 0.5309    set_bounds 0.0212    solve 0.1412    add 0.0855    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 55] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.19604650139808655

all verified at 0th iter
Time: prepare 0.0036    bound 0.0040    transfer 0.0009    finalize 0.0013    func 0.0115    
Accumulated time: func 0.2055    prepare 0.0333    bound 0.1655    transfer 0.0031    finalize 0.0072    
all_split False
======================Cut inference begins======================
max lb tensor(0.85378242) min lb tensor(0.19604650)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006316661834716797 
BICCOS Cumulative time: 0.052436113357543945
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0166    solve 0.0116    add 0.0003    
Accumulated time: pickout 0.0018    decision 0.5529    set_bounds 0.0377    solve 0.1528    add 0.0858    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 0.9453551769256592


Properties batch 4, size 1
Remaining timeout: 197.51677227020264
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.51669836044312
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.5166745185852
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.51665472984314
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.51609182357788
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.4840 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.06963348, -22.13847923, -19.43040848, -17.05935478, -17.91039848,
         -16.70587921, -18.83517647, -19.20193481, -21.40512085, -23.21081352]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [821]; unstable size 821; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 821] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 821] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 821] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 267] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.66440070,  3.63743830,  1.26127386,  0.04986423, -0.05376530,
          0.98364007,  0.99622256,  2.72314191,  4.88065529]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.06963348, -22.13847923, -19.43040848, -17.05935478, -17.91039848,
         -16.70587921, -18.83517647, -19.20193481, -21.40512085, -23.21081352]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.17it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.14386940, -22.24015808, -19.51546097, -17.41148949, -17.76541138,
          -17.10868263, -19.04941940, -19.17812157, -21.50530815, -23.38755035]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.65672874]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1117 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 3th iter
best_l after optimization: 16.60454750061035
alpha/beta optimization time: 0.04395174980163574
initial alpha-crown bounds: tensor([[1.72636855e+00, 3.70138049e+00, 1.30631208e+00, 6.20777905e-02,
         6.06596470e-04, 1.02092099e+00, 1.04711568e+00, 2.80543780e+00,
         4.93432808e+00]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.0006065964698791504
verified with init bound!
Result: safe-incomplete in 0.2140 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.15164471, -15.32303524, -10.34104061, -11.69358635, -11.02870369,
         -12.56815910, -10.29522896, -13.35671329, -14.96125889, -15.40310478]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1104]; unstable size 1104; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 266, 1, 1104] with unstable size 265 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1104] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1104] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [265]; unstable size 265; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 265] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 265] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.64230919,  2.91880131, -0.80557775,  0.38735592, -0.40144277,
          1.09796834,  1.71821177,  2.96996117,  2.98997855]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.15164471, -15.32303524, -10.34104061, -11.69358635, -11.02870369,
         -12.56815910, -10.29522896, -13.35671329, -14.96125889, -15.40310478]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.88836288, -15.24282074,  -9.95007992, -11.49615860, -10.75760651,
          -12.33977604, -10.26209450, -13.06920719, -14.77008438, -15.26176357],
         [-13.88836288, -15.24282074,  -9.95007992, -11.49615860, -10.75760651,
          -12.33977604, -10.26209450, -13.06920719, -14.77008438, -15.26176357]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31201458,  0.49551201]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.15521240, -20.46267700, -15.48517609, -15.11612129, -15.12829685,
         -14.53323936, -17.56829453, -16.12021637, -20.15639496, -18.95636940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 775] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 775] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 275] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.33888245,  3.17010045, -0.78345764, -1.16919303, -0.99560732,
          1.16705418, -0.86630487,  3.00003290,  1.93420315]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.15521240, -20.46267700, -15.48517609, -15.11612129, -15.12829685,
         -14.53323936, -17.56829453, -16.12021637, -20.15639496, -18.95636940]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.15521240, -20.46267509, -15.48517513, -15.11611938, -15.12829590,
          -14.53323841, -17.56829262, -16.12021637, -20.15639305, -18.95636940],
         [-18.15521240, -20.46267509, -15.48517513, -15.11611938, -15.12829590,
          -14.53323841, -17.56829262, -16.12021637, -20.15639305, -18.95636940]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36905575,  0.01217651, -0.58288097,  1.00409698]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0575 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.25936890, -36.14345932, -37.27095795, -38.62052536, -37.58951950,
         -39.79058075, -40.22500229, -39.67473602, -32.04320145, -35.54521942]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1007]; unstable size 1007; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 1007] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 1007] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1007] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 260] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62466043,  2.95583415,  3.49480033,  5.00074291,  3.80081701,
          5.96756887,  6.38276482,  5.76929665,  2.46701241]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.25936890, -36.14345932, -37.27095795, -38.62052536, -37.58951950,
         -39.79058075, -40.22500229, -39.67473602, -32.04320145, -35.54521942]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.95611572, -35.97737122, -36.92116928, -38.44849014, -37.25425720,
          -39.54434204, -39.96480942, -39.30963898, -32.26206589, -35.37592697]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.30595016]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0709 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.35278130, -31.36741257, -23.66108131, -25.04328346, -24.10462570,
         -25.23495674, -26.15161133, -25.66592026, -29.01111603, -29.58918571]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [744]; unstable size 744; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 744] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 744] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 272] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.79987323,  5.21834946, -1.55336547, -0.28184509, -0.22590351,
          0.73269248,  0.47210923,  3.03186011,  3.45756841]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.35278130, -31.36741257, -23.66108131, -25.04328346, -24.10462570,
         -25.23495674, -26.15161133, -25.66592026, -29.01111603, -29.58918571]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.35277939, -31.36741257, -23.66108322, -25.04328346, -24.10462570,
          -25.23495865, -26.15161514, -25.66592407, -29.01112175, -29.58918571],
         [-27.35277939, -31.36741257, -23.66108322, -25.04328346, -24.10462570,
          -25.23495865, -26.15161514, -25.66592407, -29.01112175, -29.58918571]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44354248,  0.93865776,  1.13033295]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0703 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.22183990, -23.66624069, -16.29309082, -19.27029610, -15.39398766,
         -19.13426781, -17.66785431, -19.55938721, -21.54466057, -23.50271797]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1067]; unstable size 1067; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 267, 1, 1067] with unstable size 266 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 1067] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1067] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [266]; unstable size 266; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 266] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.72265196, 6.91143370, 0.00909695, 2.97993946, 2.78059316, 0.93534529,
         3.08999944, 4.73980522, 6.88012981]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
         -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [905]; unstable size 905; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 307, 1, 905] with unstable size 306 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 905] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 905] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [306]; unstable size 306; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 306] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 306] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86118615,  2.95259595, -0.24725604,  1.06830442,  0.89491749,
          1.90242493,  0.80980372,  3.26965952,  2.34717917]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
         -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.58it/s]100%|██████████| 1/1 [00:00<00:00,  8.58it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.15029907, -24.19763947, -19.80143929, -20.63853264, -21.10856056,
          -19.26048470, -22.10736084, -21.32276344, -24.41694641, -23.30249786]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.54095459]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1192 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.521697998046875
alpha/beta optimization time: 1.2389423847198486
initial alpha-crown bounds: tensor([[ 1.94473135,  3.04443955, -0.17711711,  1.08993316,  0.95973778,
          1.94066286,  0.88277930,  3.39136600,  2.44516468]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.17711710929870605
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.58746480941772
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.5874228477478
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.5873999595642
Verifying property 2 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17711711]], device='cuda:0') need to verify.
Model prediction is: tensor([-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
        -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17711711]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 905
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 297
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 1224
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.989738464355469e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17711663246154785
10 lb beta sum: 0.0, worst -0.17712068557739258
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0548    transfer 0.0001    finalize 0.0001    func 0.0552    
Accumulated time: func 0.0552    prepare 0.0002    bound 0.0548    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 32] 
split level 5: [/input-12, 7] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 50] 
split level 8: [/input-8, 421] 
split level 9: [/input-8, 403] 
split level 10: [/input-8, 218] 
split level 11: [/input-8, 1709] 
split level 12: [/input-8, 1947] 
split level 13: [/input-8, 1651] 
split level 14: [/input-8, 414] 
split level 15: [/input-8, 1636] 
split level 16: [/input-8, 220] 
split level 17: [/input-8, 1659] 
split level 18: [/input-8, 400] 
split level 19: [/input-8, 1684] 
split level 20: [/input-8, 410] 
split level 21: [/input-8, 725] 
split level 22: [/input-8, 1644] 
split level 23: [/input-8, 1971] 
split level 24: [/input-8, 232] 
split level 25: [/input-8, 1661] 
split level 26: [/input-8, 747] 
split level 27: [/input-8, 406] 
split level 28: [/input-8, 1339] 
split level 29: [/input-8, 1716] 
split level 30: [/input-8, 1949] 
split level 31: [/input-8, 217] 
split level 32: [/input-8, 233] 
split level 33: [/input, 1401] 
split level 34: [/input-8, 1972] 
split level 35: [/input-8, 930] 
split level 36: [/input-8, 415] 
split level 37: [/input-8, 430] 
split level 38: [/input-8, 210] 
split level 39: [/input-8, 1206] 
split level 40: [/input-12, 6] 
split level 41: [/input-8, 240] 
split level 42: [/input-8, 1365] 
split level 43: [/input-8, 225] 
split level 44: [/input-8, 408] 
split level 45: [/input-8, 1332] 
split level 46: [/input-8, 431] 
split level 47: [/input-8, 1388] 
split level 48: [/input-8, 423] 
split level 49: [/input-8, 980] 
split level 50: [/input-8, 424] 
split level 51: [/input-8, 241] 
split level 52: [/input-8, 202] 
split level 53: [/input-8, 1957] 
split level 54: [/input-8, 224] 
split level 55: [/input-8, 938] 
split level 56: [/input-8, 1953] 
split level 57: [/input-8, 1198] 
split level 58: [/input-8, 1396] 
split level 59: [/input-8, 1650] 
split level 60: [/input-8, 248] 
split level 61: [/input-8, 1707] 
split level 62: [/input, 1385] 
split level 63: [/input-8, 1404] 
split level 64: [/input-8, 292] 
split level 65: [/input-8, 416] 
split level 66: [/input-8, 1395] 
split level 67: [/input-8, 1669] 
split level 68: [/input-8, 230] 
split level 69: [/input-8, 1973] 
split level 70: [/input-8, 309] 
split level 71: [/input-8, 216] 
split level 72: [/input-8, 1525] 
split level 73: [/input, 3557] 
split level 74: [/input-8, 1325] 
split level 75: [/input-8, 227] 
split level 76: [/input-8, 1658] 
split level 77: [/input-8, 212] 
split level 78: [/input-8, 236] 
split level 79: [/input-8, 271] 
split level 80: [/input-8, 1519] 
split level 81: [/input-8, 1978] 
split level 82: [/input-8, 16] 
split level 83: [/input-8, 249] 
split level 84: [/input-8, 214] 
split level 85: [/input-8, 1782] 
split level 86: [/input-8, 1961] 
split level 87: [/input-8, 811] 
split level 88: [/input-8, 963] 
split level 89: [/input-8, 209] 
split level 90: [/input-8, 1648] 
split level 91: [/input-8, 285] 
split level 92: [/input-8, 290] 
split level 93: [/input-8, 203] 
split level 94: [/input, 1406] 
split level 95: [/input-8, 244] 
split level 96: [/input, 2983] 
split level 97: [/input-8, 1100] 
split level 98: [/input-8, 1386] 
split level 99: [/input-8, 439] 
split level 100: [/input-8, 828] 
split level 101: [/input-8, 1497] 
split level 102: [/input-8, 912] 
split level 103: [/input-12, 56] 
split level 104: [/input, 2014] 
split level 105: [/input-8, 1621] 
split level 106: [/input-8, 286] 
split level 107: [/input, 1997] 
split level 108: [/input-8, 829] 
split level 109: [/input, 2013] 
split level 110: [/input, 2622] 
split level 111: [/input, 1998] 
split level 112: [/input, 1965] 
split level 113: [/input, 507] 
split level 114: [/input, 1332] 
split level 115: [/input, 2030] 
split level 116: [/input, 1421] 
split level 117: [/input-8, 1230] 
split level 118: [/input, 2684] 
split level 119: [/input-8, 1335] 
split level 120: [/input, 153] 
split level 121: [/input, 2869] 
split level 122: [/input, 1022] 
split level 123: [/input-8, 197] 
split level 124: [/input, 1980] 
split level 125: [/input, 1966] 
split level 126: [/input-8, 1690] 
split level 127: [/input-8, 196] 
split level 128: [/input-8, 397] 
split level 129: [/input-8, 946] 
split level 130: [/input, 509] 
split level 131: [/input, 68] 
split level 132: [/input, 124] 
split level 133: [/input, 2029] 
split level 134: [/input-8, 964] 
split level 135: [/input, 1996] 
split level 136: [/input, 2046] 
split level 137: [/input, 1434] 
split level 138: [/input, 1964] 
split level 139: [/input, 1316] 
split level 140: [/input-8, 1656] 
split level 141: [/input, 141] 
split level 142: [/input-8, 208] 
split level 143: [/input-8, 962] 
split level 144: [/input, 2666] 
split level 145: [/input, 1982] 
split level 146: [/input, 3150] 
split level 147: [/input, 117] 
split level 148: [/input, 1981] 
split level 149: [/input, 2028] 
split level 150: [/input, 2034] 
split level 151: [/input, 109] 
split level 152: [/input, 81] 
split level 153: [/input, 3406] 
split level 154: [/input, 65] 
split level 155: [/input, 2897] 
split level 156: [/input, 1732] 
split level 157: [/input, 1373] 
split level 158: [/input-8, 394] 
split level 159: [/input, 1006] 
split level 160: [/input, 142] 
split level 161: [/input, 1812] 
split level 162: [/input-8, 1262] 
split level 163: [/input, 2649] 
split level 164: [/input-8, 586] 
split level 165: [/input, 2673] 
split level 166: [/input, 98] 
split level 167: [/input, 122] 
split level 168: [/input, 113] 
split level 169: [/input, 2913] 
split level 170: [/input, 21] 
split level 171: [/input, 2012] 
split level 172: [/input, 731] 
split level 173: [/input, 2278] 
split level 174: [/input, 2008] 
split level 175: [/input, 123] 
split level 176: [/input, 1017] 
split level 177: [/input-8, 1405] 
split level 178: [/input, 37] 
split level 179: [/input, 2644] 
split level 180: [/input-8, 636] 
split level 181: [/input, 790] 
split level 182: [/input-8, 1518] 
split level 183: [/input-8, 1552] 
split level 184: [/input, 2589] 
split level 185: [/input-8, 1640] 
split level 186: [/input, 84] 
split level 187: [/input, 3578] 
split level 188: [/input, 635] 
split level 189: [/input, 2045] 
split level 190: [/input, 23] 
split level 191: [/input, 36] 
split level 192: [/input, 2945] 
split level 193: [/input, 1979] 
split level 194: [/input, 2898] 
split level 195: [/input, 2753] 
split level 196: [/input, 2946] 
split level 197: [/input, 1723] 
split level 198: [/input, 2926] 
split level 199: [/input, 1328] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1770336627960205
10 lb beta sum: 0.0, worst -0.17703604698181152
Time: prepare 0.0116    bound 0.1009    transfer 0.0020    finalize 0.0030    func 0.1200    
Accumulated time: func 0.1752    prepare 0.0223    bound 0.1556    transfer 0.0021    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.24898696) min lb tensor(-0.17703080)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.010416269302368164 
BICCOS Cumulative time: 0.010416269302368164
Preprocessing time: 0.009914159774780273 Inference time: 0.00018787384033203125 Add cuts time: 8.106231689453125e-05 Cut analysis time: 0.00023317337036132812
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16366 (1), -0.16340 (1), -0.16283 (1), -0.16248 (1), -0.16180 (1), -0.16066 (1), -0.16018 (1), -0.16015 (1), -0.15940 (1), -0.15937 (1), -0.15912 (1), -0.15893 (1), -0.15881 (1), -0.15875 (1), -0.15874 (1), -0.15862 (1), -0.15845 (1), -0.15827 (1), -0.15796 (1), -0.15775 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5352    set_bounds 0.0086    solve 0.1201    add 0.0823    
Accumulated time: pickout 0.0003    decision 0.5352    set_bounds 0.0086    solve 0.1201    add 0.0823    
Current (lb-rhs): -0.16365742683410645
50 domains visited
Cumulative time: 0.8170404434204102

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 8] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 8] [/input-12, 46] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 3: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13065457344055176

all verified at 6th iter
Time: prepare 0.0076    bound 0.0422    transfer 0.0009    finalize 0.0027    func 0.0559    
Accumulated time: func 0.2311    prepare 0.0301    bound 0.1978    transfer 0.0030    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.38207290) min lb tensor(0.00023222)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03555607795715332 
BICCOS Cumulative time: 0.045972347259521484
Preprocessing time: 0.012119054794311523 Inference time: 0.014729738235473633 Add cuts time: 0.008501529693603516 Cut analysis time: 0.00020575523376464844
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0201    set_bounds 0.0125    solve 0.0559    add 0.0152    
Accumulated time: pickout 0.0015    decision 0.5553    set_bounds 0.0212    solve 0.1760    add 0.0975    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 59] 
split level 6: [/input-12, 50] 
split level 7: [/input-8, 421] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.1698923110961914

all verified at 0th iter
Time: prepare 0.0052    bound 0.0043    transfer 0.0009    finalize 0.0015    func 0.0135    
Accumulated time: func 0.2445    prepare 0.0358    bound 0.2021    transfer 0.0039    finalize 0.0072    
all_split False
======================Cut inference begins======================
max lb tensor(0.58409774) min lb tensor(0.16989231)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.0072672367095947266 
BICCOS Cumulative time: 0.05323958396911621
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0235    set_bounds 0.0204    solve 0.0135    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.5787    set_bounds 0.0416    solve 0.1895    add 0.0976    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.0272390842437744


Properties batch 3, size 1
Remaining timeout: 197.4191563129425
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.41907811164856
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.41905426979065
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.41903471946716
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.41901445388794
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.41899156570435
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.5811 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.51308250, -22.43931961, -18.50501633, -19.17534065, -19.69705963,
         -19.25070381, -20.29491043, -19.66059494, -20.88692856, -21.50129509]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [811]; unstable size 811; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 811] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 811] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 811] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 308] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.88940120,  0.17124438, -2.58539438, -1.63983202, -1.31377983,
         -1.55795729, -0.86024141, -1.02569330, -0.27762127]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.51308250, -22.43931961, -18.50501633, -19.17534065, -19.69705963,
         -19.25070381, -20.29491043, -19.66059494, -20.88692856, -21.50129509]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.51308632, -22.43931770, -18.50501251, -19.17533684, -19.69705772,
          -19.25070381, -20.29491043, -19.66059494, -20.88693047, -21.50129509],
         [-19.51308632, -22.43931770, -18.50501251, -19.17533684, -19.69705772,
          -19.25070381, -20.29491043, -19.66059494, -20.88693047, -21.50129509]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.14750862, -1.15558243, -0.48525810,  0.03646278, -0.40989113,
           0.63431549,  1.22633553,  1.84070015]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0626 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
         -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [794]; unstable size 794; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 794] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 794] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 794] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 220] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78699064,  3.17528439,  2.83466101,  2.43643188,  3.92167902,
          3.64071035,  3.01097012, -1.71908045,  0.30822110]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
         -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
          -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21599770]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.74126989,  0.74126989,  0.77301592,  ...,  0.36031753,
             0.31269848,  0.28095245],
           [ 0.72539687,  0.70952386,  0.74126989,  ...,  0.32857150,
             0.29682547,  0.24920642],
           [ 0.70952386,  0.70952386,  0.72539687,  ...,  0.34444451,
             0.31269848,  0.28095245],
           ...,
           [-0.89365077, -0.89365077, -0.87777776,  ..., -1.43333328,
            -1.30634916, -1.22698402],
           [-0.95714283, -0.94126981, -0.90952379,  ..., -1.33809519,
            -1.24285710, -1.22698402],
           [-1.00476182, -0.94126981, -0.94126981,  ..., -1.24285710,
            -1.21111107, -1.19523799]],

          [[ 0.99838978,  0.99838978,  1.03059590,  ...,  0.67632860,
             0.62801939,  0.59581327],
           [ 0.96618366,  0.96618366,  0.99838978,  ...,  0.64412248,
             0.59581327,  0.56360716],
           [ 0.96618366,  0.96618366,  0.99838978,  ...,  0.61191636,
             0.57971025,  0.53140104],
           ...,
           [-0.78904986, -0.80515295, -0.78904986,  ..., -1.35265696,
            -1.22383249, -1.14331722],
           [-0.86956519, -0.85346210, -0.82125598,  ..., -1.25603855,
            -1.15942025, -1.14331722],
           [-0.90177131, -0.85346210, -0.85346210,  ..., -1.14331722,
            -1.12721407, -1.11111104]],

          [[ 1.21589243,  1.18590748,  1.18590748,  ...,  0.90104967,
             0.87106466,  0.84107965],
           [ 1.18590748,  1.15592217,  1.14092970,  ...,  0.87106466,
             0.84107965,  0.79610211],
           [ 1.15592217,  1.12593722,  1.09595215,  ...,  0.82608712,
             0.79610211,  0.76611710],
           ...,
           [-0.58320838, -0.59820086, -0.58320838,  ..., -1.13793111,
            -1.01799107, -0.94302845],
           [-0.68815589, -0.65817088, -0.64317840,  ..., -1.09295356,
            -0.97301346, -0.92803597],
           [-0.73313338, -0.67316341, -0.67316341,  ..., -1.01799107,
            -0.94302845, -0.89805096]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0322 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.65453911, -28.29750824, -25.45104980, -28.11194038, -25.15310860,
         -28.19610023, -28.02035522, -26.93565750, -23.93723679, -27.98169518]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 701] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 701] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 240] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.39394474, 1.70092034, 3.99040174, 1.13504887, 3.87649226, 3.90128398,
         2.66181946, 0.08498135, 3.97777367]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0512 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.15261269, -17.94160461, -14.95448303, -13.92990398, -14.40570259,
         -14.65692043, -13.89788246, -15.86449909, -18.80389977, -17.83309364]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [800]; unstable size 800; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 364, 1, 800] with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 800] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 800] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 363] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 363] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.67310333,  1.51413095, -0.13763928, -0.79897404,  0.29746613,
         -1.22556412,  0.01225722,  2.61003256,  1.46175122]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.15261269, -17.94160461, -14.95448303, -13.92990398, -14.40570259,
         -14.65692043, -13.89788246, -15.86449909, -18.80389977, -17.83309364]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.15261078, -17.94160461, -14.95448208, -13.92990494, -14.40570354,
          -14.65692043, -13.89788151, -15.86450100, -18.80390167, -17.83309174],
         [-17.15261078, -17.94160461, -14.95448208, -13.92990494, -14.40570354,
          -14.65692043, -13.89788151, -15.86450100, -18.80390167, -17.83309174]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.02457714,  0.47579861, -0.03202343]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0580 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.79030228, -30.41434669, -27.64798355, -28.61847115, -28.48152161,
         -29.57408333, -29.43395233, -30.51341820, -29.47771645, -30.12065697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [497]; unstable size 497; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 140, 1, 497] with unstable size 139 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 497] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 497] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [139]; unstable size 139; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 139] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.35675907, 3.17424965, 3.96514416, 3.89233851, 4.75903225, 4.93405867,
         5.60336399, 4.77322054, 5.42915201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.93199348, -23.69929504, -17.71457291, -17.07846260, -17.30852318,
         -18.18094444, -14.50052071, -20.42077255, -23.73473549, -24.23317528]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 358, 1, 523] with unstable size 357 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 523] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [357]; unstable size 357; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 357] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 357] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.54993963, 6.75454903, 1.88174152, 1.26384234, 1.37097120, 2.10497546,
         3.85746741, 6.81311560, 7.42777681]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0493 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
         -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [707]; unstable size 707; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 707] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 707] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 707] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 285] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.54880214,  4.78813887, -0.27670145,  2.23500395,  2.02165794,
          1.09089088,  1.08386564,  4.23047543,  4.55613518]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
         -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.08it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.62423515, -22.64641190, -16.24180603, -18.99898338, -15.90926933,
          -18.73514366, -18.09658813, -18.31100082, -22.13391876, -22.22410011]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33253670]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1129 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.334938049316406
alpha/beta optimization time: 1.193547010421753
initial alpha-crown bounds: tensor([[ 2.69250393,  4.96834755, -0.15371311,  2.31067300,  2.06917930,
          1.21068358,  1.12954426,  4.43741512,  4.67030382]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.15371310710906982
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64208984375
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64205145835876
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64202547073364
Verifying property 2 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15371311]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
        -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15371311]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 707
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 281
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1014
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010180473327636719
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15371179580688477
10 lb beta sum: 0.0, worst -0.15372216701507568
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 24] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 0] 
split level 8: [/input-12, 32] 
split level 9: [/input-8, 1700] 
split level 10: [/input-12, 38] 
split level 11: [/input-8, 1701] 
split level 12: [/input-12, 49] 
split level 13: [/input-8, 1628] 
split level 14: [/input-8, 929] 
split level 15: [/input-8, 1627] 
split level 16: [/input-8, 1630] 
split level 17: [/input-8, 476] 
split level 18: [/input-12, 7] 
split level 19: [/input-8, 1635] 
split level 20: [/input-8, 930] 
split level 21: [/input-8, 939] 
split level 22: [/input-8, 1637] 
split level 23: [/input-8, 474] 
split level 24: [/input-12, 57] 
split level 25: [/input-8, 1622] 
split level 26: [/input-8, 468] 
split level 27: [/input-8, 1261] 
split level 28: [/input-8, 795] 
split level 29: [/input-8, 1638] 
split level 30: [/input-8, 484] 
split level 31: [/input-8, 285] 
split level 32: [/input-8, 490] 
split level 33: [/input-8, 577] 
split level 34: [/input-8, 1614] 
split level 35: [/input-8, 1710] 
split level 36: [/input-8, 1708] 
split level 37: [/input-8, 1678] 
split level 38: [/input-8, 1970] 
split level 39: [/input-8, 797] 
split level 40: [/input-8, 1957] 
split level 41: [/input-8, 794] 
split level 42: [/input-8, 1053] 
split level 43: [/input-8, 788] 
split level 44: [/input-8, 596] 
split level 45: [/input-8, 1260] 
split level 46: [/input-8, 1684] 
split level 47: [/input-8, 1958] 
split level 48: [/input-8, 1716] 
split level 49: [/input-8, 1717] 
split level 50: [/input-8, 274] 
split level 51: [/input-8, 1949] 
split level 52: [/input-8, 1922] 
split level 53: [/input-8, 1035] 
split level 54: [/input-8, 90] 
split level 55: [/input-8, 492] 
split level 56: [/input-8, 1259] 
split level 57: [/input-8, 1052] 
split level 58: [/input-8, 1250] 
split level 59: [/input-8, 949] 
split level 60: [/input-8, 1713] 
split level 61: [/input-8, 1338] 
split level 62: [/input-8, 1262] 
split level 63: [/input-8, 1337] 
split level 64: [/input-8, 604] 
split level 65: [/input-8, 1313] 
split level 66: [/input-8, 460] 
split level 67: [/input-8, 401] 
split level 68: [/input-8, 1978] 
split level 69: [/input-8, 1643] 
split level 70: [/input-8, 422] 
split level 71: [/input-8, 1633] 
split level 72: [/input-8, 1617] 
split level 73: [/input-8, 1578] 
split level 74: [/input-8, 798] 
split level 75: [/input-8, 423] 
split level 76: [/input-8, 1659] 
split level 77: [/input-8, 307] 
split level 78: [/input-8, 108] 
split level 79: [/input-8, 1030] 
split level 80: [/input-8, 1951] 
split level 81: [/input-8, 493] 
split level 82: [/input-8, 1292] 
split level 83: [/input-8, 51] 
split level 84: [/input-8, 828] 
split level 85: [/input-8, 1625] 
split level 86: [/input-8, 1305] 
split level 87: [/input-8, 1623] 
split level 88: [/input-8, 811] 
split level 89: [/input-8, 98] 
split level 90: [/input-8, 829] 
split level 91: [/input-8, 1721] 
split level 92: [/input, 1163] 
split level 93: [/input-8, 413] 
split level 94: [/input-8, 45] 
split level 95: [/input-8, 330] 
split level 96: [/input, 183] 
split level 97: [/input-8, 50] 
split level 98: [/input-8, 505] 
split level 99: [/input-8, 82] 
split level 100: [/input-8, 1932] 
split level 101: [/input-8, 441] 
split level 102: [/input-8, 106] 
split level 103: [/input-8, 365] 
split level 104: [/input-8, 905] 
split level 105: [/input-8, 402] 
split level 106: [/input-8, 1615] 
split level 107: [/input-8, 830] 
split level 108: [/input-8, 1754] 
split level 109: [/input-8, 1595] 
split level 110: [/input-8, 1606] 
split level 111: [/input-8, 1712] 
split level 112: [/input-8, 627] 
split level 113: [/input, 1416] 
split level 114: [/input-8, 812] 
split level 115: [/input, 185] 
split level 116: [/input-8, 1646] 
split level 117: [/input-8, 498] 
split level 118: [/input-8, 1334] 
split level 119: [/input-8, 793] 
split level 120: [/input-8, 941] 
split level 121: [/input, 184] 
split level 122: [/input-8, 372] 
split level 123: [/input, 2949] 
split level 124: [/input, 2951] 
split level 125: [/input-8, 116] 
split level 126: [/input, 152] 
split level 127: [/input, 186] 
split level 128: [/input-8, 1609] 
split level 129: [/input, 3005] 
split level 130: [/input, 2504] 
split level 131: [/input-8, 446] 
split level 132: [/input, 3021] 
split level 133: [/input-8, 137] 
split level 134: [/input, 1435] 
split level 135: [/input-8, 958] 
split level 136: [/input-8, 1654] 
split level 137: [/input, 2475] 
split level 138: [/input-8, 777] 
split level 139: [/input-8, 1736] 
split level 140: [/input-8, 306] 
split level 141: [/input, 138] 
split level 142: [/input-8, 1762] 
split level 143: [/input, 1180] 
split level 144: [/input-8, 104] 
split level 145: [/input, 1607] 
split level 146: [/input-8, 1607] 
split level 147: [/input-8, 1297] 
split level 148: [/input, 1514] 
split level 149: [/input, 2440] 
split level 150: [/input, 151] 
split level 151: [/input-8, 1265] 
split level 152: [/input, 2489] 
split level 153: [/input, 2474] 
split level 154: [/input-8, 115] 
split level 155: [/input, 2491] 
split level 156: [/input-8, 117] 
split level 157: [/input, 3019] 
split level 158: [/input-8, 21] 
split level 159: [/input-8, 1251] 
split level 160: [/input, 3541] 
split level 161: [/input, 2522] 
split level 162: [/input-8, 1603] 
split level 163: [/input-8, 1108] 
split level 164: [/input-8, 447] 
split level 165: [/input, 2217] 
split level 166: [/input-12, 36] 
split level 167: [/input-8, 97] 
split level 168: [/input, 494] 
split level 169: [/input-8, 22] 
split level 170: [/input, 88] 
split level 171: [/input-8, 1746] 
split level 172: [/input-8, 1624] 
split level 173: [/input-8, 500] 
split level 174: [/input, 1015] 
split level 175: [/input, 217] 
split level 176: [/input, 199] 
split level 177: [/input, 2487] 
split level 178: [/input, 3301] 
split level 179: [/input, 2248] 
split level 180: [/input, 2408] 
split level 181: [/input, 1317] 
split level 182: [/input-8, 1027] 
split level 183: [/input-8, 956] 
split level 184: [/input, 2183] 
split level 185: [/input, 2455] 
split level 186: [/input, 3052] 
split level 187: [/input, 232] 
split level 188: [/input-8, 452] 
split level 189: [/input-8, 126] 
split level 190: [/input, 2792] 
split level 191: [/input, 1014] 
split level 192: [/input, 3038] 
split level 193: [/input, 1195] 
split level 194: [/input, 2791] 
split level 195: [/input, 1515] 
split level 196: [/input, 2250] 
split level 197: [/input-12, 92] 
split level 198: [/input, 2153] 
split level 199: [/input-8, 908] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15361309051513672
10 lb beta sum: 0.0, worst -0.15361487865447998
Time: prepare 0.0121    bound 0.0971    transfer 0.0013    finalize 0.0029    func 0.1161    
Accumulated time: func 0.1692    prepare 0.0221    bound 0.1498    transfer 0.0014    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.17703763) min lb tensor(-0.15360165)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010607004165649414 
BICCOS Cumulative time: 0.010607004165649414
Preprocessing time: 0.010002851486206055 Inference time: 0.0002605915069580078 Add cuts time: 8.988380432128906e-05 Cut analysis time: 0.0002536773681640625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13946 (1), -0.13899 (1), -0.13871 (1), -0.13871 (1), -0.13858 (1), -0.13771 (1), -0.13699 (1), -0.13661 (1), -0.13640 (1), -0.13609 (1), -0.13552 (1), -0.13469 (1), -0.13451 (1), -0.13432 (1), -0.13412 (1), -0.13407 (1), -0.13332 (1), -0.13254 (1), -0.13219 (1), -0.13146 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5112    set_bounds 0.0085    solve 0.1162    add 0.0706    
Accumulated time: pickout 0.0003    decision 0.5112    set_bounds 0.0085    solve 0.1162    add 0.0706    
Current (lb-rhs): -0.1394561529159546
50 domains visited
Cumulative time: 0.7752847671508789

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 2: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 0] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 3: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13810348510742188
10 lb beta sum: 0.730224072933197, worst -0.06081956624984741
Time: prepare 0.0072    bound 0.1155    transfer 0.0008    finalize 0.0022    func 0.1284    
Accumulated time: func 0.2976    prepare 0.0296    bound 0.2653    transfer 0.0022    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.29600036) min lb tensor(-0.06070590)
Number of Verified Splits: 201 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.023190736770629883 
BICCOS Cumulative time: 0.0337977409362793
Preprocessing time: 0.011678218841552734 Inference time: 0.007803201675415039 Add cuts time: 0.0032622814178466797 Cut analysis time: 0.0004470348358154297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01174 (2), -0.01157 (2), -0.01129 (2), -0.01123 (2), -0.01109 (2), -0.01104 (2), -0.01089 (2), -0.01070 (2), -0.01060 (2), -0.01046 (2), -0.00998 (2), -0.00978 (2), -0.00953 (2), -0.00942 (2), -0.00933 (2), -0.00930 (2), -0.00913 (2), -0.00885 (2), -0.00847 (2), -0.00829 (2), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0123    solve 0.1284    add 0.0924    
Accumulated time: pickout 0.0014    decision 0.5304    set_bounds 0.0208    solve 0.2446    add 0.1630    
Current (lb-rhs): -0.011741399765014648
100 domains visited
Cumulative time: 1.0521728992462158

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 2: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 3: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 49] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10868167877197266

all verified at 6th iter
Time: prepare 0.0074    bound 0.0459    transfer 0.0008    finalize 0.0020    func 0.0586    
Accumulated time: func 0.3562    prepare 0.0373    bound 0.3112    transfer 0.0030    finalize 0.0073    
all_split False
======================Cut inference begins======================
max lb tensor(0.24589014) min lb tensor(0.04230970)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.04062056541442871 
BICCOS Cumulative time: 0.07441830635070801
Preprocessing time: 0.011461019515991211 Inference time: 0.015913724899291992 Add cuts time: 0.013059139251708984 Cut analysis time: 0.00018668174743652344
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0190    set_bounds 0.0161    solve 0.0587    add 0.0196    
Accumulated time: pickout 0.0024    decision 0.5494    set_bounds 0.0368    solve 0.3033    add 0.1827    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 0] 
split level 5: [/input-12, 32] 
split level 6: [/input-12, 49] 
split level 7: [/input-8, 1627] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.032213449478149414

all verified at 0th iter
Time: prepare 0.0051    bound 0.0040    transfer 0.0005    finalize 0.0015    func 0.0127    
Accumulated time: func 0.3689    prepare 0.0428    bound 0.3152    transfer 0.0035    finalize 0.0087    
all_split False
======================Cut inference begins======================
max lb tensor(0.82850277) min lb tensor(0.03221345)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006964921951293945 
BICCOS Cumulative time: 0.08138322830200195
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0202    solve 0.0127    add 0.0001    
Accumulated time: pickout 0.0027    decision 0.5715    set_bounds 0.0570    solve 0.3161    add 0.1827    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.2736926078796387


Properties batch 3, size 1
Remaining timeout: 197.20162773132324
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.2015528678894
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.2015302181244
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.2015106678009
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.201491355896
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.20147252082825
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.7992 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.02572250, -27.23712921, -27.95742416, -26.55063438, -28.86597252,
         -27.63702202, -28.59363937, -27.52897644, -25.43346977, -24.92130852]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 654] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 654] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 239] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.94611096,  1.33183825,  1.31211615,  0.27194166,  2.35654211,
          1.27423668,  2.06728792,  0.98784971, -0.88770485]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.02572250, -27.23712921, -27.95742416, -26.55063438, -28.86597252,
         -27.63702202, -28.59363937, -27.52897644, -25.43346977, -24.92130852]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.50359154, -27.88374138, -28.51186180, -27.05513573, -29.40580559,
          -28.19179726, -29.20458603, -28.14871597, -25.54721451, -25.68577957]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13856506]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0530 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
         -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [904]; unstable size 904; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 904] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 904] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 904] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 246] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.46684718,  3.44482756,  0.77367592,  1.71358061, -0.53734136,
          2.20122433,  1.18286562,  4.27326107,  2.94509697]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
         -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
          -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.23146915]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0562 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.03265953, -29.80158615, -28.01462746, -29.49231339, -27.82477570,
         -29.74157143, -29.00487137, -29.65236473, -26.56688309, -30.04109955]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 952] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 952] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.56631374, 3.00716305, 4.34157467, 2.61966324, 4.48081446, 3.68361425,
         4.35380077, 1.53697205, 5.00381374]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0464 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.37767220, -22.63599205, -16.68470383, -17.56246567, -14.84348488,
         -17.98977852, -17.40301132, -16.78604507, -20.68542862, -22.37132454]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [762]; unstable size 762; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 332, 1, 762] with unstable size 331 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 762] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 762] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [331]; unstable size 331; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 331] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 331] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.03614426, 5.42467785, 1.01491451, 1.54336691, 1.87700081, 1.22836113,
         1.06106329, 4.09441233, 4.97289753]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0627 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.56104851, -25.43757248, -22.30799866, -20.47185135, -22.67837715,
         -19.94359779, -23.14790916, -21.03846169, -23.14024353, -23.94003487]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [756]; unstable size 756; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 756] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 756] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 756] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 261] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.01937914, 3.41801023, 1.25207281, 0.18682456, 1.56868887, 2.03725815,
         0.10003203, 1.46886158, 2.03972673]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0311 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.62328815, -18.18186188, -18.71482468, -19.00971794, -17.99854279,
         -20.46262550, -20.13095474, -20.09570503, -10.99292850, -16.95243645]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [626]; unstable size 626; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 626] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 626] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 626] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 200] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.72617197, 5.95293760, 6.50314140, 6.90349865, 5.91612148, 8.26207733,
         7.94433403, 7.78404760, 4.84170914]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0427 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.57911682, -18.01341438, -21.32861328, -22.58253288, -23.55420685,
         -22.23183250, -24.82959557, -22.38050079, -21.57038307, -21.39789391]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [445]; unstable size 445; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 445] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 445] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 445] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 172] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.14326191, 1.50190973, 2.99028397, 3.75917006, 2.42487884, 5.00067997,
         2.60955691, 1.96376371, 2.50974631]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0308 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.73344231, -25.29462242, -19.50235748, -18.98530388, -19.31733131,
         -19.14581299, -19.42850494, -19.97113991, -22.87136459, -23.31713867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [875]; unstable size 875; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 356, 1, 875] with unstable size 355 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 875] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 875] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [355]; unstable size 355; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 355] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 355] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.85499263,  3.47037864, -0.90604115, -0.95058966, -0.23341925,
         -0.53099990, -0.42522985,  1.47124839,  1.91838479]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.73344231, -25.29462242, -19.50235748, -18.98530388, -19.31733131,
         -19.14581299, -19.42850494, -19.97113991, -22.87136459, -23.31713867]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.94274139, -25.66132355, -19.52083969, -19.54301643, -19.51924324,
          -19.72516251, -19.77233505, -20.36951065, -23.25295830, -23.81954956],
         [-21.94274139, -25.66132355, -19.52083969, -19.54301643, -19.51924324,
          -19.72516251, -19.77233505, -20.36951065, -23.25295830, -23.81954956]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.02217674, -0.02377319,  0.18214607,  0.22931862,  0.82649422]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0117 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0460 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
         -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [867]; unstable size 867; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 867] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 867] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 867] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 165] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.32719994, -0.10789108,  0.04068613,  2.53268123,  0.74327803,
          2.51675272,  1.46775699,  8.13148308,  8.55004978]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
         -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.30it/s]100%|██████████| 1/1 [00:00<00:00,  9.29it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.14986801, -45.41040802, -35.38068390, -35.74518204, -38.33306503,
          -36.46290207, -38.23206711, -37.45825958, -43.79046249, -44.53758621]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.23081589]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1101 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.40303039550781
alpha/beta optimization time: 1.184072732925415
initial alpha-crown bounds: tensor([[ 9.34874249, -0.09103370,  0.06384516,  2.55859995,  0.76943398,
          2.53152704,  1.50653601,  8.14646530,  8.56891346]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.0910336971282959
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6520345211029
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65199756622314
Verifying property 1 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09103370]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
        -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09103370]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 867
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 159
Node /15 input 0: size torch.Size([100]) unstable 10
-----------------
# of unstable neurons: 1036
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.894371032714844e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0910336971282959
10 lb beta sum: 0.0, worst -0.09103751182556152
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    func 0.0525    
Accumulated time: func 0.0525    prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 5] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 90] 
split level 7: [/input-8, 217] 
split level 8: [/input-8, 225] 
split level 9: [/input-8, 226] 
split level 10: [/input-8, 1835] 
split level 11: [/input-8, 209] 
split level 12: [/input-8, 1188] 
split level 13: [/input-8, 233] 
split level 14: [/input-8, 1815] 
split level 15: [/input-8, 1029] 
split level 16: [/input-8, 234] 
split level 17: [/input-8, 1817] 
split level 18: [/input-8, 241] 
split level 19: [/input-8, 201] 
split level 20: [/input-8, 239] 
split level 21: [/input-8, 803] 
split level 22: [/input-8, 250] 
split level 23: [/input-8, 1371] 
split level 24: [/input, 3124] 
split level 25: [/input, 648] 
split level 26: [/input, 477] 
split level 27: [/input-8, 249] 
split level 28: [/input, 631] 
split level 29: [/input-8, 1834] 
split level 30: [/input-8, 428] 
split level 31: [/input-8, 1816] 
split level 32: [/input-8, 1826] 
split level 33: [/input-8, 247] 
split level 34: [/input, 3242] 
split level 35: [/input, 953] 
split level 36: [/input, 969] 
split level 37: [/input-8, 253] 
split level 38: [/input-8, 1847] 
split level 39: [/input-8, 902] 
split level 40: [/input-8, 635] 
split level 41: [/input-8, 508] 
split level 42: [/input, 3256] 
split level 43: [/input, 1002] 
split level 44: [/input, 917] 
split level 45: [/input-8, 634] 
split level 46: [/input-8, 901] 
split level 47: [/input, 933] 
split level 48: [/input-8, 60] 
split level 49: [/input, 3272] 
split level 50: [/input-8, 1808] 
split level 51: [/input-8, 1844] 
split level 52: [/input-8, 181] 
split level 53: [/input-8, 202] 
split level 54: [/input, 2907] 
split level 55: [/input, 3257] 
split level 56: [/input-8, 507] 
split level 57: [/input, 1004] 
split level 58: [/input-8, 586] 
split level 59: [/input-8, 576] 
split level 60: [/input, 3016] 
split level 61: [/input, 3052] 
split level 62: [/input-8, 246] 
split level 63: [/input, 3105] 
split level 64: [/input-8, 1622] 
split level 65: [/input-8, 192] 
split level 66: [/input-8, 235] 
split level 67: [/input, 3022] 
split level 68: [/input, 3676] 
split level 69: [/input, 2215] 
split level 70: [/input-8, 1379] 
split level 71: [/input, 919] 
split level 72: [/input, 3692] 
split level 73: [/input-8, 821] 
split level 74: [/input, 3691] 
split level 75: [/input, 2600] 
split level 76: [/input, 2263] 
split level 77: [/input, 2248] 
split level 78: [/input, 230] 
split level 79: [/input, 3006] 
split level 80: [/input-8, 2004] 
split level 81: [/input-8, 1800] 
split level 82: [/input, 2520] 
split level 83: [/input, 3496] 
split level 84: [/input-8, 452] 
split level 85: [/input-8, 911] 
split level 86: [/input-8, 193] 
split level 87: [/input, 2247] 
split level 88: [/input, 3379] 
split level 89: [/input, 3273] 
split level 90: [/input, 2199] 
split level 91: [/input, 2231] 
split level 92: [/input, 2844] 
split level 93: [/input, 3051] 
split level 94: [/input, 3287] 
split level 95: [/input, 229] 
split level 96: [/input, 2615] 
split level 97: [/input, 216] 
split level 98: [/input, 2519] 
split level 99: [/input, 3122] 
split level 100: [/input, 228] 
split level 101: [/input-8, 943] 
split level 102: [/input-8, 1833] 
split level 103: [/input, 2631] 
split level 104: [/input-8, 1843] 
split level 105: [/input, 2517] 
split level 106: [/input, 3268] 
split level 107: [/input, 614] 
split level 108: [/input, 2261] 
split level 109: [/input, 1336] 
split level 110: [/input, 2535] 
split level 111: [/input, 301] 
split level 112: [/input-8, 1596] 
split level 113: [/input, 199] 
split level 114: [/input, 222] 
split level 115: [/input, 699] 
split level 116: [/input, 227] 
split level 117: [/input, 2486] 
split level 118: [/input-8, 205] 
split level 119: [/input, 200] 
split level 120: [/input, 231] 
split level 121: [/input, 2616] 
split level 122: [/input, 214] 
split level 123: [/input-8, 1825] 
split level 124: [/input, 212] 
split level 125: [/input-8, 190] 
split level 126: [/input, 2471] 
split level 127: [/input, 3300] 
split level 128: [/input, 2244] 
split level 129: [/input-8, 506] 
split level 130: [/input, 213] 
split level 131: [/input, 2198] 
split level 132: [/input, 2265] 
split level 133: [/input, 232] 
split level 134: [/input, 215] 
split level 135: [/input, 2230] 
split level 136: [/input, 2502] 
split level 137: [/input, 1963] 
split level 138: [/input, 653] 
split level 139: [/input, 2213] 
split level 140: [/input, 2246] 
split level 141: [/input, 206] 
split level 142: [/input, 2232] 
split level 143: [/input, 3121] 
split level 144: [/input, 2843] 
split level 145: [/input, 3579] 
split level 146: [/input, 2534] 
split level 147: [/input, 715] 
split level 148: [/input, 2277] 
split level 149: [/input, 2280] 
split level 150: [/input, 2846] 
split level 151: [/input-8, 951] 
split level 152: [/input, 177] 
split level 153: [/input, 1964] 
split level 154: [/input-8, 1848] 
split level 155: [/input, 3301] 
split level 156: [/input, 2542] 
split level 157: [/input, 843] 
split level 158: [/input, 331] 
split level 159: [/input, 217] 
split level 160: [/input, 2845] 
split level 161: [/input, 3580] 
split level 162: [/input, 1979] 
split level 163: [/input, 198] 
split level 164: [/input, 2228] 
split level 165: [/input, 193] 
split level 166: [/input, 3675] 
split level 167: [/input, 3578] 
split level 168: [/input, 226] 
split level 169: [/input, 1833] 
split level 170: [/input, 196] 
split level 171: [/input, 2501] 
split level 172: [/input, 3380] 
split level 173: [/input, 238] 
split level 174: [/input, 210] 
split level 175: [/input, 2485] 
split level 176: [/input, 184] 
split level 177: [/input, 183] 
split level 178: [/input, 1948] 
split level 179: [/input, 46] 
split level 180: [/input, 1811] 
split level 181: [/input, 197] 
split level 182: [/input, 3708] 
split level 183: [/input, 2521] 
split level 184: [/input, 3383] 
split level 185: [/input, 1862] 
split level 186: [/input, 683] 
split level 187: [/input, 195] 
split level 188: [/input, 2455] 
split level 189: [/input, 3299] 
split level 190: [/input, 27] 
split level 191: [/input, 537] 
split level 192: [/input, 194] 
split level 193: [/input, 598] 
split level 194: [/input, 3581] 
split level 195: [/input, 28] 
split level 196: [/input, 29] 
split level 197: [/input, 2059] 
split level 198: [/input, 3577] 
split level 199: [/input, 536] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0909421443939209
10 lb beta sum: 0.0, worst -0.09093952178955078
Time: prepare 0.0115    bound 0.0961    transfer 0.0018    finalize 0.0028    func 0.1147    
Accumulated time: func 0.1673    prepare 0.0215    bound 0.1482    transfer 0.0019    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.13612843) min lb tensor(-0.09093642)
Number of Verified Splits: 4 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.010330438613891602 
BICCOS Cumulative time: 0.010330438613891602
Preprocessing time: 0.009811878204345703 Inference time: 0.00018548965454101562 Add cuts time: 9.560585021972656e-05 Cut analysis time: 0.00023746490478515625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08741 (1), -0.08730 (1), -0.08716 (1), -0.08697 (1), -0.08685 (1), -0.08680 (1), -0.08671 (1), -0.08632 (1), -0.08619 (1), -0.08608 (1), -0.08578 (1), -0.08554 (1), -0.08543 (1), -0.08542 (1), -0.08529 (1), -0.08498 (1), -0.08465 (1), -0.08457 (1), -0.08454 (1), -0.08446 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5155    set_bounds 0.0087    solve 0.1148    add 0.0698    
Accumulated time: pickout 0.0003    decision 0.5155    set_bounds 0.0087    solve 0.1148    add 0.0698    
Current (lb-rhs): -0.08740520477294922
50 domains visited
Cumulative time: 0.7770869731903076

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 5] [/input-12, 5] [/input-12, 5] [/input-12, 5] [/input-12, 5] [/input-12, 5] [/input-12, 5] [/input-12, 5] [/input-12, 5] 
split level 1: [/input-12, 42] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
split level 2: [/input-12, 59] [/input-12, 42] [/input-12, 42] [/input-12, 59] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 3: [/input-12, 31] [/input-12, 31] [/input-12, 59] [/input-12, 31] [/input-12, 31] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07100129127502441
10 lb beta sum: 0.44343894720077515, worst -0.003879368305206299

all verified at 13th iter
Time: prepare 0.0076    bound 0.0809    transfer 0.0007    finalize 0.0024    func 0.0942    
Accumulated time: func 0.2615    prepare 0.0294    bound 0.2291    transfer 0.0026    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.28334892) min lb tensor(0.00102186)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03387880325317383 
BICCOS Cumulative time: 0.04420924186706543
Preprocessing time: 0.01158761978149414 Inference time: 0.014127254486083984 Add cuts time: 0.007980823516845703 Cut analysis time: 0.00018310546875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0118    solve 0.0943    add 0.0150    
Accumulated time: pickout 0.0015    decision 0.5349    set_bounds 0.0204    solve 0.2091    add 0.0849    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 5] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 90] 
split level 7: [/input-8, 1835] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08337593078613281

all verified at 0th iter
Time: prepare 0.0051    bound 0.0040    transfer 0.0007    finalize 0.0013    func 0.0128    
Accumulated time: func 0.2742    prepare 0.0349    bound 0.2331    transfer 0.0033    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.47932315) min lb tensor(0.08337593)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006920814514160156 
BICCOS Cumulative time: 0.051130056381225586
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0200    solve 0.0128    add 0.0003    
Accumulated time: pickout 0.0018    decision 0.5570    set_bounds 0.0404    solve 0.2219    add 0.0852    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.018711805343628


Properties batch 2, size 1
Remaining timeout: 197.49420499801636
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 197.4941337108612
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.4941098690033
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.49409008026123
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.49407124519348
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.49405193328857
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.49403381347656
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.5060 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.40458870, -23.24298668, -27.73333549, -27.90799141, -27.40376663,
         -28.05864906, -28.91640854, -27.54826736, -27.30009651, -25.52873611]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [684]; unstable size 684; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 684] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 684] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 684] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 285] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.35218525, 2.28642845, 2.51820374, 1.68908215, 2.53085232, 3.30504513,
         2.17191410, 2.28330231, 1.35116172]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0468 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.14629936, -20.71539307, -24.46714020, -24.97179604, -24.83234215,
         -25.31670189, -27.17220497, -25.32540894, -20.97597122, -23.65787697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 206, 1, 595] with unstable size 205 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 595] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [205]; unstable size 205; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 205] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 205] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.96349621,  1.88203239,  2.57148743,  2.24077988,  2.77335262,
          4.53415489,  2.59828901, -0.94698811,  1.90783095]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.14629936, -20.71539307, -24.46714020, -24.97179604, -24.83234215,
         -25.31670189, -27.17220497, -25.32540894, -20.97597122, -23.65787697]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.84978294, -20.93986130, -24.20811844, -24.78613472, -24.63944435,
          -25.15346718, -27.01600456, -25.25593185, -20.52700806, -23.77411842]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.41285324]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0514 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
         -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [448]; unstable size 448; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 448] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 448] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 448] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 263] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.72115147,  3.32613277,  0.34109926,  2.45504808,  2.08227682,
          2.35139227,  1.41229212,  3.91198707,  5.09997845]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
         -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
          -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.47766113]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0385 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.54057121, -21.40389442, -20.55339050, -20.58682060, -20.08682251,
         -21.26310730, -20.37835312, -20.33173752, -21.91990280, -21.46942329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 326, 1, 799] with unstable size 325 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 799] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [325]; unstable size 325; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 325] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 325] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.38908577, -1.18870044, -2.95449877, -2.60739851, -3.34873199,
         -1.96987033, -3.07361555, -3.06156182, -1.16480780]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.54057121, -21.40389442, -20.55339050, -20.58682060, -20.08682251,
         -21.26310730, -20.37835312, -20.33173752, -21.91990280, -21.46942329]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.54056931, -21.40389061, -20.55338860, -20.58681679, -20.08682060,
          -21.26310539, -20.37835312, -20.33173943, -21.91990280, -21.46942520],
         [-21.54056931, -21.40389061, -20.55338860, -20.58681679, -20.08682060,
          -21.26310539, -20.37835312, -20.33173943, -21.91990280, -21.46942520]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07114410, -0.06553459, -0.91603661, -0.88260841, -1.38260460,
          -0.20631981, -1.09107208, -1.13768578,  0.45047760]]],
       device='cuda:0')
number of violation:  7
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0582 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.34185982, -18.34316826, -19.90431023, -19.60602570, -20.92833138,
         -19.82821465, -22.19347191, -21.69088936, -18.03870010, -18.59241867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [703]; unstable size 703; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 703] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 703] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 221] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.52273822, -0.96111453, -0.21341276, -0.24194908,  0.79662275,
         -0.12263918,  1.94754934,  1.67940402, -2.02313328]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.34185982, -18.34316826, -19.90431023, -19.60602570, -20.92833138,
         -19.82821465, -22.19347191, -21.69088936, -18.03870010, -18.59241867]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.34185982, -18.34316635, -19.90431023, -19.60602379, -20.92833138,
          -19.82821274, -22.19347000, -21.69088745, -18.03870010, -18.59241676],
         [-19.34185982, -18.34316635, -19.90431023, -19.60602379, -20.92833138,
          -19.82821274, -22.19347000, -21.69088745, -18.03870010, -18.59241676]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.74944305, -0.24925041,  1.31189346,  1.01360703,  1.23579597,
          -0.55371666]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0651 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.60500145, -24.89141464, -19.17918777, -20.05367851, -18.86228371,
         -19.76714134, -19.96246719, -19.42761040, -24.32711601, -22.82327843]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 640] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 640] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 243] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.29259634,  3.78634834, -0.83907104,  0.12916952, -0.20247698,
         -0.06445077, -0.28860736,  3.43386030,  1.86539841]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.60500145, -24.89141464, -19.17918777, -20.05367851, -18.86228371,
         -19.76714134, -19.96246719, -19.42761040, -24.32711601, -22.82327843]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.97348404, -25.25050926, -19.38525391, -20.47401237, -19.55496788,
          -20.18207741, -20.31973648, -20.18347740, -24.64109039, -23.26975060],
         [-22.97348404, -25.25050926, -19.38525391, -20.47401237, -19.55496788,
          -20.18207741, -20.31973648, -20.18347740, -24.64109039, -23.26975060]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16971397,  0.62710953,  0.76476860,  0.62850952]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0360 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
         -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [953]; unstable size 953; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 256, 1, 953] with unstable size 255 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 953] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 953] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [255]; unstable size 255; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 255] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.24769056,  1.62967825, -0.30106115, -0.63823378, -0.46131372,
          0.13329828,  1.71760333,  0.29797333,  0.64501810]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
         -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.78it/s]100%|██████████| 1/1 [00:00<00:00,  8.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.69080544, -28.02049828, -25.76778221, -25.07657433, -25.68251801,
          -26.00996780, -27.59398842, -26.61277580, -24.82239151, -26.61855125],
         [-25.69080544, -28.02049828, -25.76778221, -25.07657433, -25.68251801,
          -26.00996780, -27.59398842, -26.61277580, -24.82239151, -26.61855125]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.86841393, 0.94539070, 0.25418282, 0.86012650]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1168 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.304443836212158
alpha/beta optimization time: 1.1921730041503906
initial alpha-crown bounds: tensor([[-0.19642836,  1.68688869, -0.24070215, -0.57431930, -0.39791703,
          0.20313507,  1.77232838,  0.36443228,  0.68702626]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.5743193030357361
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6476173400879
Verifying property 0 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19642836]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19642836]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.942054748535156e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 79] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 2] 
split level 7: [/input-8, 1690] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.09960979223251343

all verified at 0th iter
Time: prepare 0.0032    bound 0.0041    transfer 0.0009    finalize 0.0016    func 0.0114    
Accumulated time: func 0.0114    prepare 0.0036    bound 0.0041    transfer 0.0009    finalize 0.0016    
all_split False
======================Cut inference begins======================
max lb tensor(0.95460415) min lb tensor(0.09960979)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.007433652877807617 
BICCOS Cumulative time: 0.007433652877807617
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0176    solve 0.0115    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0176    solve 0.0115    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06544375419616699


Properties batch 1, size 1
Remaining timeout: 198.41590285301208
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.4155113697052
Verifying property 2 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24070215]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24070215]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010037422180175781
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 46] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 32] 
split level 7: [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.19787979125976562

all verified at 0th iter
Time: prepare 0.0018    bound 0.0040    transfer 0.0005    finalize 0.0014    func 0.0095    
Accumulated time: func 0.0095    prepare 0.0022    bound 0.0040    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.96342611) min lb tensor(0.19787979)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006591081619262695 
BICCOS Cumulative time: 0.006591081619262695
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0223    set_bounds 0.0160    solve 0.0096    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0223    set_bounds 0.0160    solve 0.0096    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.059961557388305664


Properties batch 3, size 1
Remaining timeout: 198.23510837554932
Verifying property 3 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.57431930]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.57431930]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010514259338378906
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 58] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27161455154418945
10 lb beta sum: 0.0, worst -0.27103620767593384
Time: prepare 0.0019    bound 0.0935    transfer 0.0005    finalize 0.0014    func 0.0990    
Accumulated time: func 0.0990    prepare 0.0023    bound 0.0935    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.39298385) min lb tensor(-0.27084154)
Number of Verified Splits: 207 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5743167996406555
10 lb beta sum: 0.0, worst -0.5743213295936584
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 2
#cuts 4-6: 20
#cuts 7-9: 8
#cuts >= 20: 0
BICCOS time: 0.1947803497314453 
BICCOS Cumulative time: 0.1947803497314453
Preprocessing time: 0.0065648555755615234 Inference time: 0.1822211742401123 Add cuts time: 0.004625797271728516 Cut analysis time: 0.0013685226440429688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.27084 (8), -0.25784 (8), -0.25034 (8), -0.23723 (8), -0.22955 (8), -0.22296 (8), -0.21785 (8), -0.20952 (8), -0.19601 (8), -0.18239 (8), -0.15783 (8), -0.15412 (8), -0.15274 (8), -0.15162 (8), -0.14523 (8), -0.13825 (8), -0.12764 (8), -0.12664 (8), -0.12378 (8), -0.12198 (8), 
Length of domains: 49
Time: pickout 0.0004    decision 0.0219    set_bounds 0.0161    solve 0.0991    add 0.0011    
Accumulated time: pickout 0.0004    decision 0.0219    set_bounds 0.0161    solve 0.0991    add 0.0011    
Current (lb-rhs): -0.2708415389060974
49 domains visited
Cumulative time: 0.33850550651550293

BaB round 2
batch: 49
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 337] [/input-12, 29] [/input-8, 337] [/input-12, 29] 
split level 1: [/input-8, 1690] [/input-8, 1690] [/input-8, 1690] [/input-8, 1052] [/input-8, 338] [/input-8, 1053] [/input-8, 338] [/input-8, 1698] [/input-8, 338] [/input-8, 1698] 
split level 2: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1053] [/input-8, 1943] [/input-8, 933] [/input-8, 1943] [/input-8, 1052] [/input-8, 1943] [/input-8, 933] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24558210372924805
10 lb beta sum: 0.0, worst -0.24515992403030396
Time: prepare 0.0078    bound 0.1147    transfer 0.0025    finalize 0.0024    func 0.1299    
Accumulated time: func 0.2289    prepare 0.0102    bound 0.2082    transfer 0.0030    finalize 0.0038    
all_split False
======================Cut inference begins======================
max lb tensor(0.11814356) min lb tensor(-0.24496871)
Number of Verified Splits: 152 of 392
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.40806394815444946
10 lb beta sum: 0.11737508326768875, worst -0.28562265634536743
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 2
#cuts 4-6: 20
#cuts 7-9: 20
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.22222399711608887 
BICCOS Cumulative time: 0.4170043468475342
Preprocessing time: 0.01115870475769043 Inference time: 0.20480942726135254 Add cuts time: 0.003968954086303711 Cut analysis time: 0.0022869110107421875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24497 (11), -0.24392 (11), -0.22772 (11), -0.22540 (11), -0.22404 (11), -0.22173 (11), -0.21691 (11), -0.21629 (11), -0.21619 (11), -0.21479 (11), -0.21407 (11), -0.20818 (11), -0.20037 (11), -0.19916 (11), -0.19799 (11), -0.19768 (11), -0.19716 (11), -0.19654 (11), -0.19642 (11), -0.19551 (11), 
Length of domains: 240
Time: pickout 0.0014    decision 0.0172    set_bounds 0.0128    solve 0.1300    add 0.0015    
Accumulated time: pickout 0.0018    decision 0.0391    set_bounds 0.0289    solve 0.2291    add 0.0026    
Current (lb-rhs): -0.2449687123298645
289 domains visited
Cumulative time: 0.7247953414916992

BaB round 3
batch: 240
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-12, 29] [/input-12, 29] [/input-8, 1626] [/input-12, 29] [/input-8, 1690] [/input-12, 29] [/input-12, 29] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24041739106178284
10 lb beta sum: 0.0, worst -0.240267813205719
Time: prepare 0.0097    bound 0.1307    transfer 0.0013    finalize 0.0025    func 0.1478    
Accumulated time: func 0.3767    prepare 0.0202    bound 0.3389    transfer 0.0043    finalize 0.0063    
all_split False
======================Cut inference begins======================
max lb tensor(0.05590820) min lb tensor(-0.24020475)
Number of Verified Splits: 126 of 480
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 9
#cuts 4-6: 16
#cuts 7-9: 7
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.03192710876464844 
BICCOS Cumulative time: 0.4489314556121826
Preprocessing time: 0.013849496841430664 Inference time: 0.01334071159362793 Add cuts time: 0.003439664840698242 Cut analysis time: 0.0012972354888916016
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.24020 (12), -0.23914 (12), -0.22703 (12), -0.22508 (12), -0.22212 (12), -0.21984 (12), -0.21947 (12), -0.21724 (12), -0.20958 (12), -0.20777 (12), -0.20741 (12), -0.20576 (12), -0.20560 (12), -0.20497 (12), -0.20492 (12), -0.20132 (12), -0.20094 (12), -0.20020 (12), -0.19386 (12), -0.19225 (12), 
Length of domains: 354
Time: pickout 0.0036    decision 0.0214    set_bounds 0.0128    solve 0.1479    add 0.0017    
Accumulated time: pickout 0.0054    decision 0.0605    set_bounds 0.0418    solve 0.3770    add 0.0043    
Current (lb-rhs): -0.24020475149154663
643 domains visited
Cumulative time: 0.9451699256896973

BaB round 4
batch: 354
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1610] [/input-12, 29] [/input-8, 1690] [/input-8, 1690] [/input-8, 1053] [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-8, 1610] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23304608464241028
10 lb beta sum: 0.0088089844211936, worst -0.23290172219276428
Time: prepare 0.0140    bound 0.1343    transfer 0.0020    finalize 0.0041    func 0.1590    
Accumulated time: func 0.5356    prepare 0.0344    bound 0.4732    transfer 0.0063    finalize 0.0104    
all_split False
======================Cut inference begins======================
max lb tensor(0.10862477) min lb tensor(-0.23284587)
Number of Verified Splits: 145 of 708
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 9
#cuts 4-6: 14
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.040586233139038086 
BICCOS Cumulative time: 0.4895176887512207
Preprocessing time: 0.020339250564575195 Inference time: 0.0169525146484375 Add cuts time: 0.0024051666259765625 Cut analysis time: 0.0008893013000488281
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23285 (13), -0.23154 (13), -0.23079 (13), -0.22621 (13), -0.22197 (13), -0.21909 (13), -0.21909 (13), -0.21704 (13), -0.21685 (13), -0.21494 (13), -0.21436 (13), -0.20425 (13), -0.20157 (13), -0.20154 (13), -0.19948 (13), -0.19881 (13), -0.19721 (13), -0.19707 (13), -0.19677 (13), -0.19668 (13), 
Length of domains: 563
Time: pickout 0.0050    decision 0.0298    set_bounds 0.0190    solve 0.1591    add 0.0027    
Accumulated time: pickout 0.0104    decision 0.0904    set_bounds 0.0608    solve 0.5361    add 0.0070    
Current (lb-rhs): -0.23284587264060974
1206 domains visited
Cumulative time: 1.2029638290405273

BaB round 5
batch: 563
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1626] [/input-8, 1611] [/input-8, 1618] [/input-8, 1052] [/input-8, 933] [/input-8, 1611] [/input-8, 1953] [/input-8, 1953] [/input-8, 1626] [/input-8, 1626] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23032808303833008
10 lb beta sum: 0.010601320303976536, worst -0.23028019070625305
Time: prepare 0.0221    bound 0.1418    transfer 0.0033    finalize 0.0068    func 0.1824    
Accumulated time: func 0.7181    prepare 0.0568    bound 0.6149    transfer 0.0096    finalize 0.0172    
all_split False
======================Cut inference begins======================
max lb tensor(0.03892601) min lb tensor(-0.23024762)
Number of Verified Splits: 167 of 1126
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 10
#cuts 4-6: 24
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.05777621269226074 
BICCOS Cumulative time: 0.5472939014434814
Preprocessing time: 0.03430509567260742 Inference time: 0.01918625831604004 Add cuts time: 0.003057241439819336 Cut analysis time: 0.0012276172637939453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23025 (14), -0.22894 (14), -0.22821 (14), -0.22392 (14), -0.21624 (14), -0.21444 (14), -0.21422 (14), -0.21359 (14), -0.21251 (14), -0.21209 (14), -0.21202 (14), -0.21100 (14), -0.21047 (14), -0.21005 (14), -0.20741 (14), -0.20158 (14), -0.20085 (14), -0.19883 (14), -0.19860 (14), -0.19831 (14), 
Length of domains: 959
Time: pickout 0.0091    decision 0.0416    set_bounds 0.0319    solve 0.1826    add 0.0034    
Accumulated time: pickout 0.0195    decision 0.1320    set_bounds 0.0928    solve 0.7187    add 0.0104    
Current (lb-rhs): -0.2302476167678833
2165 domains visited
Cumulative time: 1.5316543579101562

BaB round 6
batch: 959
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1690] [/input-8, 1618] [/input-8, 1053] [/input-8, 1713] [/input-8, 1953] [/input-8, 1611] [/input-12, 29] [/input-8, 1690] [/input-12, 61] [/input-8, 1618] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22847628593444824
10 lb beta sum: 0.017077799886465073, worst -0.22844809293746948
Time: prepare 0.0397    bound 0.1673    transfer 0.0033    finalize 0.0113    func 0.2341    
Accumulated time: func 0.9521    prepare 0.0967    bound 0.7823    transfer 0.0129    finalize 0.0285    
all_split False
======================Cut inference begins======================
max lb tensor(0.38202119) min lb tensor(-0.22842991)
Number of Verified Splits: 282 of 1918
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 12
#cuts 4-6: 29
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.0997316837310791 
BICCOS Cumulative time: 0.6470255851745605
Preprocessing time: 0.05840182304382324 Inference time: 0.034772396087646484 Add cuts time: 0.0051114559173583984 Cut analysis time: 0.0014460086822509766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22843 (15), -0.22706 (15), -0.22231 (15), -0.22133 (15), -0.21339 (15), -0.21261 (15), -0.21205 (15), -0.21136 (15), -0.21065 (15), -0.21039 (15), -0.21016 (15), -0.20922 (15), -0.20883 (15), -0.20838 (15), -0.20803 (15), -0.20538 (15), -0.20346 (15), -0.19820 (15), -0.19691 (15), -0.19575 (15), 
Length of domains: 1636
Time: pickout 0.0163    decision 0.0643    set_bounds 0.1956    solve 0.2344    add 0.0075    
Accumulated time: pickout 0.0358    decision 0.1962    set_bounds 0.2883    solve 0.9531    add 0.0179    
Current (lb-rhs): -0.228429913520813
3801 domains visited
Cumulative time: 2.1548686027526855

BaB round 7
batch: 1636
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1953] [/input-8, 1713] [/input-8, 932] [/input-8, 1611] [/input-8, 625] [/input-8, 1626] [/input-8, 1724] [/input-12, 61] [/input-8, 1052] [/input-8, 1716] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22238197922706604
10 lb beta sum: 0.013794881291687489, worst -0.2223774492740631
Time: prepare 0.0689    bound 0.2442    transfer 0.0092    finalize 0.0193    func 0.3635    
Accumulated time: func 1.3156    prepare 0.1659    bound 1.0265    transfer 0.0221    finalize 0.0478    
all_split False
======================Cut inference begins======================
max lb tensor(0.48510295) min lb tensor(-0.22236735)
Number of Verified Splits: 597 of 3272
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 44.
#cuts 1-3: 13
#cuts 4-6: 27
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.18659687042236328 
BICCOS Cumulative time: 0.8336224555969238
Preprocessing time: 0.1009376049041748 Inference time: 0.07465887069702148 Add cuts time: 0.009361505508422852 Cut analysis time: 0.0016388893127441406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.22237 (16), -0.22094 (16), -0.22051 (16), -0.21520 (16), -0.21407 (16), -0.21155 (16), -0.21008 (16), -0.20738 (16), -0.20618 (16), -0.20553 (16), -0.20536 (16), -0.20462 (16), -0.20430 (16), -0.20367 (16), -0.20323 (16), -0.20267 (16), -0.20249 (16), -0.20181 (16), -0.20122 (16), -0.19862 (16), 
Length of domains: 2675
Time: pickout 0.0233    decision 0.0978    set_bounds 0.0896    solve 0.3642    add 0.0150    
Accumulated time: pickout 0.0591    decision 0.2940    set_bounds 0.3779    solve 1.3173    add 0.0329    
Current (lb-rhs): -0.22236734628677368
6476 domains visited
Cumulative time: 2.940892219543457

BaB round 8
batch: 2675
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1626] [/input-8, 934] [/input-8, 934] [/input-8, 604] [/input-8, 1713] [/input-8, 1690] [/input-8, 1053] [/input-8, 1716] [/input-12, 61] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21657773852348328
10 lb beta sum: 0.2118394672870636, worst -0.21285250782966614
Time: prepare 0.1173    bound 0.3571    transfer 0.0212    finalize 0.0366    func 0.5680    
Accumulated time: func 1.8837    prepare 0.2834    bound 1.3835    transfer 0.0433    finalize 0.0843    
all_split False
======================Cut inference begins======================
max lb tensor(0.77576041) min lb tensor(-0.21284622)
Number of Verified Splits: 1948 of 5350
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 93.
#cuts 1-3: 15
#cuts 4-6: 49
#cuts 7-9: 29
#cuts >= 20: 0
BICCOS time: 0.5938675403594971 
BICCOS Cumulative time: 1.427489995956421
Preprocessing time: 0.3022332191467285 Inference time: 0.2532672882080078 Add cuts time: 0.03450202941894531 Cut analysis time: 0.0038650035858154297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21285 (17), -0.21101 (17), -0.20985 (17), -0.20808 (17), -0.20573 (17), -0.20535 (17), -0.20441 (17), -0.20351 (17), -0.20122 (17), -0.20047 (17), -0.19838 (17), -0.19781 (17), -0.19719 (17), -0.19696 (17), -0.19657 (17), -0.19598 (17), -0.19582 (17), -0.19402 (17), -0.19373 (17), -0.19345 (17), 
Length of domains: 3402
Time: pickout 0.0405    decision 0.2774    set_bounds 0.1455    solve 0.5691    add 0.0213    
Accumulated time: pickout 0.0996    decision 0.5714    set_bounds 0.5233    solve 1.8865    add 0.0542    
Current (lb-rhs): -0.21284621953964233
9878 domains visited
Cumulative time: 4.613110065460205

BaB round 9
batch: 3402
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1707] [/input-8, 1943] [/input-8, 1716] [/input-8, 1690] [/input-8, 1053] [/input-8, 1626] [/input, 2231] [/input-8, 1053] [/input-8, 1707] [/input-8, 1716] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20838630199432373
10 lb beta sum: 0.17012478411197662, worst -0.20457524061203003
Time: prepare 0.1533    bound 0.6117    transfer 0.0090    finalize 0.0410    func 0.8600    
Accumulated time: func 2.7437    prepare 0.4371    bound 1.9952    transfer 0.0523    finalize 0.1254    
all_split False
======================Cut inference begins======================
max lb tensor(0.76728028) min lb tensor(-0.20453677)
Number of Verified Splits: 1079 of 6804
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 125.
#cuts 1-3: 15
#cuts 4-6: 82
#cuts 7-9: 27
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.4172985553741455 
BICCOS Cumulative time: 1.8447885513305664
Preprocessing time: 0.2122173309326172 Inference time: 0.16158032417297363 Add cuts time: 0.03849077224731445 Cut analysis time: 0.005010128021240234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20454 (18), -0.20404 (18), -0.20345 (18), -0.20275 (18), -0.20227 (18), -0.20163 (18), -0.19835 (18), -0.19698 (18), -0.19656 (18), -0.19651 (18), -0.19599 (18), -0.19594 (18), -0.19533 (18), -0.19523 (18), -0.19498 (18), -0.19478 (18), -0.19419 (18), -0.19199 (18), -0.19131 (18), -0.19106 (18), 
Length of domains: 5725
Time: pickout 0.0683    decision 0.1923    set_bounds 0.3455    solve 0.8614    add 0.0169    
Accumulated time: pickout 0.1679    decision 0.7638    set_bounds 0.8689    solve 2.7479    add 0.0711    
Current (lb-rhs): -0.20453676581382751
15603 domains visited
Cumulative time: 6.53437066078186

BaB round 10
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1953] [/input, 393] [/input-8, 1943] [/input-8, 1707] [/input-12, 61] [/input, 3016] [/input, 2471] [/input-12, 61] [/input-8, 1953] [/input-8, 1943] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2040349841117859
10 lb beta sum: 0.16429424285888672, worst -0.308478444814682
Time: prepare 0.1939    bound 0.7264    transfer 0.0155    finalize 0.0519    func 1.0430    
Accumulated time: func 3.7868    prepare 0.6312    bound 2.7216    transfer 0.0678    finalize 0.1773    
all_split False
======================Cut inference begins======================
max lb tensor(0.62301350) min lb tensor(-0.20399565)
Number of Verified Splits: 1669 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 143.
#cuts 1-3: 7
#cuts 4-6: 93
#cuts 7-9: 40
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 0.7517073154449463 
BICCOS Cumulative time: 2.5964958667755127
Preprocessing time: 0.4292161464691162 Inference time: 0.25920796394348145 Add cuts time: 0.05714154243469238 Cut analysis time: 0.00614166259765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20454 (18), -0.20400 (19), -0.20333 (19), -0.20275 (18), -0.20227 (18), -0.20153 (19), -0.19834 (19), -0.19694 (19), -0.19656 (18), -0.19643 (19), -0.19594 (18), -0.19589 (19), -0.19525 (19), -0.19520 (19), -0.19492 (19), -0.19470 (19), -0.19408 (19), -0.19199 (18), -0.19131 (18), -0.19096 (19), 
Length of domains: 8152
Time: pickout 0.0588    decision 0.3839    set_bounds 0.2221    solve 1.0452    add 0.0236    
Accumulated time: pickout 0.2267    decision 1.1477    set_bounds 1.0910    solve 3.7931    add 0.0947    
Current (lb-rhs): -0.20453676581382751
22126 domains visited
current_vram/total_varm: 11.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.048280000686646

BaB round 11
batch: 8152
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1618] [/input-8, 1052] [/input-8, 932] [/input-12, 61] [/input-8, 939] [/input-8, 934] [/input-8, 1618] [/input-12, 61] [/input-8, 1707] [/input-8, 1943] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20453572273254395
10 lb beta sum: 0.15439894795417786, worst -0.30735060572624207
Time: prepare 0.3925    bound 1.4007    transfer 0.0923    finalize 0.3030    func 2.2946    
Accumulated time: func 6.0814    prepare 1.0241    bound 4.1223    transfer 0.1601    finalize 0.4803    
all_split False
======================Cut inference begins======================
max lb tensor(0.81548882) min lb tensor(-0.20452338)
Number of Verified Splits: 3208 of 16304
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 234.
#cuts 1-3: 7
#cuts 4-6: 125
#cuts 7-9: 95
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 1.4430594444274902 
BICCOS Cumulative time: 4.039555311203003
Preprocessing time: 0.5192742347717285 Inference time: 0.7626149654388428 Add cuts time: 0.15038180351257324 Cut analysis time: 0.010788440704345703
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20452 (19), -0.20273 (19), -0.20224 (19), -0.19970 (20), -0.19754 (20), -0.19651 (19), -0.19591 (19), -0.19576 (20), -0.19538 (20), -0.19401 (20), -0.19358 (20), -0.19270 (20), -0.19259 (20), -0.19208 (20), -0.19195 (19), -0.19126 (19), -0.19094 (20), -0.19084 (20), -0.19034 (20), -0.19012 (20), 
Length of domains: 13096
Time: pickout 0.1451    decision 0.4494    set_bounds 0.6183    solve 2.2986    add 0.0476    
Accumulated time: pickout 0.3717    decision 1.5970    set_bounds 1.7093    solve 6.0917    add 0.1423    
Current (lb-rhs): -0.20452338457107544
35222 domains visited
Cumulative time: 14.099926233291626

BaB round 12
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1716] [/input-8, 933] [/input-8, 604] [/input, 393] [/input-12, 61] [/input-8, 1707] [/input-8, 1713] [/input-8, 1724] [/input-8, 946] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20027178525924683
10 lb beta sum: 0.15622146427631378, worst -0.2972782254219055
Time: prepare 0.4094    bound 1.4985    transfer 0.0578    finalize 0.1053    func 2.1862    
Accumulated time: func 8.2675    prepare 1.4338    bound 5.6208    transfer 0.2179    finalize 0.5856    
all_split False
======================Cut inference begins======================
max lb tensor(0.80987811) min lb tensor(-0.20022324)
Number of Verified Splits: 3272 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 309.
#cuts 1-3: 7
#cuts 4-6: 171
#cuts 7-9: 120
#cuts 10-12: 11
#cuts >= 20: 0
BICCOS time: 1.574178695678711 
BICCOS Cumulative time: 5.613734006881714
Preprocessing time: 0.8269541263580322 Inference time: 0.5509078502655029 Add cuts time: 0.18207240104675293 Cut analysis time: 0.014244318008422852
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20022 (20), -0.19970 (20), -0.19844 (20), -0.19793 (20), -0.19754 (20), -0.19576 (20), -0.19401 (20), -0.19312 (20), -0.19259 (20), -0.19229 (20), -0.19208 (20), -0.19165 (20), -0.19133 (20), -0.19114 (21), -0.19094 (20), -0.19093 (20), -0.19084 (20), -0.19034 (20), -0.19012 (20), -0.18935 (21), 
Length of domains: 18016
Time: pickout 0.1304    decision 0.4604    set_bounds 0.6840    solve 2.1905    add 0.0466    
Accumulated time: pickout 0.5022    decision 2.0575    set_bounds 2.3933    solve 8.2822    add 0.1889    
Current (lb-rhs): -0.20022323727607727
48334 domains visited
current_vram/total_varm: 27.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 19.24698567390442

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input, 3466] [/input-8, 1953] [/input, 2231] [/input-8, 604] [/input, 2231] [/input, 393] [/input, 393] [/input, 3016] [/input-8, 934] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19367730617523193
10 lb beta sum: 0.1423405259847641, worst -0.2917155921459198
Time: prepare 0.8413    bound 3.0952    transfer 0.1509    finalize 0.5312    func 4.8358    
Accumulated time: func 13.1033    prepare 2.2755    bound 8.7160    transfer 0.3688    finalize 1.1167    
all_split False
======================Cut inference begins======================
max lb tensor(0.79971194) min lb tensor(-0.19356900)
Number of Verified Splits: 6718 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 391.
#cuts 1-3: 7
#cuts 4-6: 217
#cuts 7-9: 139
#cuts 10-12: 28
#cuts >= 20: 0
BICCOS time: 3.0210020542144775 
BICCOS Cumulative time: 8.634736061096191
Preprocessing time: 1.0687179565429688 Inference time: 1.560746669769287 Add cuts time: 0.37345194816589355 Cut analysis time: 0.018085479736328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20022 (20), -0.19844 (20), -0.19793 (20), -0.19357 (21), -0.19322 (21), -0.19229 (20), -0.19200 (21), -0.19165 (20), -0.19142 (21), -0.18805 (21), -0.18767 (20), -0.18728 (21), -0.18699 (22), -0.18696 (20), -0.18677 (21), -0.18622 (21), -0.18607 (21), -0.18595 (21), -0.18576 (21), -0.18550 (21), 
Length of domains: 27682
Time: pickout 0.2660    decision 1.6999    set_bounds 1.2042    solve 4.8423    add 0.0839    
Accumulated time: pickout 0.7682    decision 3.7574    set_bounds 3.5975    solve 13.1245    add 0.2728    
Current (lb-rhs): -0.20022323727607727
74384 domains visited
Cumulative time: 30.465097188949585

BaB round 14
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 933] [/input, 2185] [/input-8, 1649] [/input-8, 1713] [/input-8, 934] [/input-8, 1690] [/input-8, 1713] [/input-8, 1713] [/input, 2185] [/input-8, 1713] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1944761574268341
10 lb beta sum: 0.1360873579978943, worst -0.2886904776096344
Time: prepare 0.8658    bound 3.2873    transfer 0.1512    finalize 0.6280    func 5.1465    
Accumulated time: func 18.2498    prepare 3.1416    bound 12.0033    transfer 0.5200    finalize 1.7447    
all_split False
======================Cut inference begins======================
max lb tensor(0.83284575) min lb tensor(-0.19440031)
Number of Verified Splits: 7340 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 451.
#cuts 1-3: 8
#cuts 4-6: 222
#cuts 7-9: 205
#cuts 10-12: 16
#cuts >= 20: 0
BICCOS time: 3.3789896965026855 
BICCOS Cumulative time: 12.013725757598877
Preprocessing time: 1.5762324333190918 Inference time: 1.2879533767700195 Add cuts time: 0.49373340606689453 Cut analysis time: 0.021070480346679688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19440 (21), -0.19357 (21), -0.19322 (21), -0.19262 (21), -0.19247 (21), -0.19179 (21), -0.19142 (21), -0.19068 (21), -0.19023 (21), -0.18805 (21), -0.18789 (22), -0.18728 (21), -0.18699 (22), -0.18677 (21), -0.18632 (21), -0.18595 (21), -0.18576 (21), -0.18572 (21), -0.18550 (21), -0.18520 (22), 
Length of domains: 36726
Time: pickout 0.2793    decision 1.6486    set_bounds 1.3044    solve 5.1540    add 0.0947    
Accumulated time: pickout 1.0475    decision 5.4059    set_bounds 4.9019    solve 18.2785    add 0.3675    
Current (lb-rhs): -0.19440031051635742
99812 domains visited
Cumulative time: 42.43501400947571

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3000] [/input, 2232] [/input-12, 61] [/input-8, 1943] [/input, 2232] [/input-12, 61] [/input-8, 1713] [/input, 3000] [/input-12, 61] [/input-8, 1943] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18953341245651245
10 lb beta sum: 0.12371590733528137, worst -0.2043818086385727
Time: prepare 0.8739    bound 3.3847    transfer 0.1526    finalize 0.7502    func 5.3743    
Accumulated time: func 23.6241    prepare 4.0159    bound 15.3879    transfer 0.6726    finalize 2.4949    
all_split False
======================Cut inference begins======================
max lb tensor(0.88113523) min lb tensor(-0.18950921)
Number of Verified Splits: 7929 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 478.
#cuts 1-3: 8
#cuts 4-6: 222
#cuts 7-9: 212
#cuts 10-12: 36
#cuts >= 20: 0
BICCOS time: 3.7051637172698975 
BICCOS Cumulative time: 15.718889474868774
Preprocessing time: 1.088172435760498 Inference time: 2.0041284561157227 Add cuts time: 0.5901498794555664 Cut analysis time: 0.02271294593811035
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19440 (21), -0.19262 (21), -0.19179 (21), -0.18951 (22), -0.18906 (22), -0.18832 (22), -0.18789 (22), -0.18726 (22), -0.18654 (22), -0.18632 (21), -0.18611 (22), -0.18572 (21), -0.18398 (22), -0.18306 (22), -0.18290 (21), -0.18235 (22), -0.18214 (22), -0.18183 (22), -0.18174 (21), -0.18163 (22), 
Length of domains: 45181
Time: pickout 0.2792    decision 1.8962    set_bounds 0.9503    solve 5.3821    add 0.0746    
Accumulated time: pickout 1.3267    decision 7.3021    set_bounds 5.8521    solve 23.6607    add 0.4420    
Current (lb-rhs): -0.19440031051635742
124651 domains visited
Cumulative time: 54.83806848526001

BaB round 16
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2471] [/input-8, 604] [/input, 3000] [/input-8, 1953] [/input-8, 913] [/input, 2231] [/input, 2471] [/input-12, 61] [/input, 2232] [/input, 2471] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.19027197360992432
10 lb beta sum: 0.1206771731376648, worst -0.2919420599937439
Time: prepare 0.8829    bound 3.4258    transfer 0.1507    finalize 0.2369    func 4.9138    
Accumulated time: func 28.5379    prepare 4.8992    bound 18.8137    transfer 0.8233    finalize 2.7318    
all_split False
======================Cut inference begins======================
max lb tensor(0.87862396) min lb tensor(-0.19023079)
Number of Verified Splits: 8359 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 478.
#cuts 1-3: 11
#cuts 4-6: 197
#cuts 7-9: 227
#cuts 10-12: 43
#cuts >= 20: 0
BICCOS time: 3.2487218379974365 
BICCOS Cumulative time: 18.96761131286621
Preprocessing time: 1.08713960647583 Inference time: 1.5045959949493408 Add cuts time: 0.6334710121154785 Cut analysis time: 0.02351522445678711
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19023 (22), -0.18951 (22), -0.18906 (22), -0.18845 (22), -0.18832 (22), -0.18772 (22), -0.18726 (22), -0.18654 (22), -0.18611 (22), -0.18398 (22), -0.18306 (22), -0.18235 (22), -0.18221 (22), -0.18163 (22), -0.18158 (22), -0.18133 (22), -0.18125 (22), -0.18098 (23), -0.18082 (23), -0.18068 (22), 
Length of domains: 53206
Time: pickout 0.2843    decision 1.6624    set_bounds 1.5179    solve 5.5446    add 0.0813    
Accumulated time: pickout 1.6110    decision 8.9645    set_bounds 7.3700    solve 29.2053    add 0.5233    
Current (lb-rhs): -0.19023078680038452
149060 domains visited
Cumulative time: 67.30350828170776

BaB round 17
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 913] [/input-8, 625] [/input-8, 932] [/input, 2231] [/input-8, 1943] [/input, 2231] [/input, 3000] [/input-8, 913] [/input-8, 625] [/input, 3466] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1773536205291748
10 lb beta sum: 0.1795794665813446, worst -0.17731744050979614
Time: prepare 0.8818    bound 3.4242    transfer 0.1518    finalize 0.9533    func 5.6284    
Accumulated time: func 34.1663    prepare 5.7814    bound 22.2379    transfer 0.9751    finalize 3.6851    
all_split False
======================Cut inference begins======================
max lb tensor(1.16170120) min lb tensor(-0.17731446)
Number of Verified Splits: 9477 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 193.
#cuts 1-3: 21
#cuts 4-6: 74
#cuts 7-9: 80
#cuts 10-12: 18
#cuts >= 20: 0
BICCOS time: 4.107811689376831 
BICCOS Cumulative time: 23.075423002243042
Preprocessing time: 1.1156039237976074 Inference time: 2.560957431793213 Add cuts time: 0.42182135581970215 Cut analysis time: 0.009428977966308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19023 (22), -0.18951 (22), -0.18906 (22), -0.18845 (22), -0.18832 (22), -0.18772 (22), -0.18726 (22), -0.18654 (22), -0.18611 (22), -0.18398 (22), -0.18306 (22), -0.18235 (22), -0.18221 (22), -0.18163 (22), -0.18158 (22), -0.18133 (22), -0.18125 (22), -0.18098 (23), -0.18082 (23), -0.18068 (22), 
Length of domains: 60113
Time: pickout 0.2961    decision 2.0937    set_bounds 0.9567    solve 5.6367    add 0.0705    
Accumulated time: pickout 1.9071    decision 11.0583    set_bounds 8.3267    solve 34.8419    add 0.5937    
Current (lb-rhs): -0.19023078680038452
172351 domains visited
Cumulative time: 80.61593103408813

BaB round 18
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2473] [/input-8, 625] [/input, 2471] [/input-8, 625] [/input-12, 61] [/input, 2231] [/input, 2201] [/input-12, 61] [/input, 2457] [/input-8, 946] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18274345993995667
10 lb beta sum: 0.6362824440002441, worst -0.18268221616744995
Time: prepare 0.8870    bound 2.8719    transfer 0.1526    finalize 0.2553    func 4.3835    
Accumulated time: func 38.5498    prepare 6.6688    bound 25.1098    transfer 1.1277    finalize 3.9404    
all_split False
======================Cut inference begins======================
max lb tensor(1.17427921) min lb tensor(-0.18265808)
Number of Verified Splits: 17603 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 31
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 5.621065855026245 
BICCOS Cumulative time: 28.696488857269287
Preprocessing time: 1.1259922981262207 Inference time: 4.027935266494751 Add cuts time: 0.46611928939819336 Cut analysis time: 0.0010190010070800781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19023 (22), -0.18845 (22), -0.18772 (22), -0.18266 (23), -0.18247 (23), -0.18221 (22), -0.18198 (23), -0.18178 (23), -0.18158 (22), -0.18134 (23), -0.18116 (23), -0.18098 (23), -0.18082 (23), -0.18012 (23), -0.18003 (23), -0.17947 (23), -0.17942 (23), -0.17914 (23), -0.17906 (23), -0.17760 (22), 
Length of domains: 58894
Time: pickout 0.3024    decision 1.6585    set_bounds 1.7641    solve 4.3950    add 0.0620    
Accumulated time: pickout 2.2095    decision 12.7167    set_bounds 10.0908    solve 39.2370    add 0.6557    
Current (lb-rhs): -0.19023078680038452
187516 domains visited
Cumulative time: 94.63848876953125

BaB round 19
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2456] [/input, 2232] [/input, 2456] [/input-8, 939] [/input, 2232] [/input, 2456] [/input-8, 1610] [/input-8, 933] [/input, 3016] [/input, 2457] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1834212839603424
10 lb beta sum: 3.1113333702087402, worst -0.1554933786392212
Time: prepare 0.8971    bound 1.8120    transfer 0.1503    finalize 0.2584    func 3.3323    
Accumulated time: func 41.8821    prepare 7.5662    bound 26.9217    transfer 1.2781    finalize 4.1988    
all_split False
======================Cut inference begins======================
max lb tensor(1.40637577) min lb tensor(-0.15541792)
Number of Verified Splits: 32223 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 8.377193450927734 
BICCOS Cumulative time: 37.07368230819702
Preprocessing time: 1.1591737270355225 Inference time: 6.679222106933594 Add cuts time: 0.5383827686309814 Cut analysis time: 0.00041484832763671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18266 (23), -0.18247 (23), -0.18198 (23), -0.18178 (23), -0.18134 (23), -0.18116 (23), -0.18082 (23), -0.18012 (23), -0.18003 (23), -0.17947 (23), -0.17942 (23), -0.17914 (23), -0.17906 (23), -0.17757 (23), -0.17731 (24), -0.17701 (23), -0.17677 (23), -0.17491 (23), -0.17443 (23), -0.17374 (24), 
Length of domains: 43055
Time: pickout 0.3237    decision 1.6538    set_bounds 1.7587    solve 3.3418    add 0.0187    
Accumulated time: pickout 2.5332    decision 14.3706    set_bounds 11.8495    solve 42.5787    add 0.6744    
Current (lb-rhs): -0.18265807628631592
188061 domains visited
Cumulative time: 110.46456789970398

BaB round 20
batch: 16384
splitting decisions: 
split level 0: [/input, 2184] [/input, 2456] [/input-8, 913] [/input, 2232] [/input-8, 1953] [/input, 3017] [/input, 3017] [/input, 3000] [/input-8, 1707] [/input, 3016] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17820867896080017
10 lb beta sum: 0.2309304177761078, worst -0.00703844428062439
Time: prepare 0.9016    bound 1.4097    transfer 0.1504    finalize 0.9272    func 3.6074    
Accumulated time: func 45.4896    prepare 8.4681    bound 28.3314    transfer 1.4285    finalize 5.1260    
all_split False
======================Cut inference begins======================
max lb tensor(0.68105501) min lb tensor(2.20537186e-06)
Number of Verified Splits: 32768 of 32768
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.1653547286987305 
BICCOS Cumulative time: 38.23903703689575
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18266 (23), -0.18247 (23), -0.18198 (23), -0.18178 (23), -0.18134 (23), -0.18116 (23), -0.18012 (23), -0.18003 (23), -0.17947 (23), -0.17942 (23), -0.17914 (23), -0.17906 (23), -0.17757 (23), -0.17731 (24), -0.17701 (23), -0.17677 (23), -0.17374 (24), -0.17353 (23), -0.17339 (23), -0.17329 (23), 
Length of domains: 26671
Time: pickout 0.3634    decision 2.0693    set_bounds 0.9508    solve 3.6149    add 0.0138    
Accumulated time: pickout 2.8966    decision 16.4398    set_bounds 12.8003    solve 46.1936    add 0.6883    
Current (lb-rhs): -0.18265807628631592
188061 domains visited
Cumulative time: 118.96836519241333

BaB round 21
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 61] [/input-8, 822] [/input-8, 956] [/input, 393] [/input-8, 1618] [/input-8, 939] [/input-8, 1043] [/input, 3017] [/input, 2201] [/input, 2169] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18004024028778076
10 lb beta sum: 0.23214837908744812, worst -0.007291346788406372
Time: prepare 0.8903    bound 1.4107    transfer 0.1509    finalize 0.7302    func 3.3964    
Accumulated time: func 48.8860    prepare 9.3588    bound 29.7421    transfer 1.5794    finalize 5.8562    
all_split False
======================Cut inference begins======================
max lb tensor(0.67774719) min lb tensor(2.26497650e-06)
Number of Verified Splits: 32768 of 32768
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.1538643836975098 
BICCOS Cumulative time: 39.39290142059326
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18247 (23), -0.18178 (23), -0.18116 (23), -0.18003 (23), -0.17942 (23), -0.17906 (23), -0.17677 (23), -0.17329 (23), -0.17319 (24), -0.17316 (23), -0.17256 (23), -0.17227 (23), -0.17130 (24), -0.17053 (23), -0.16970 (23), -0.16950 (23), -0.16878 (23), -0.16874 (23), -0.16872 (24), -0.16828 (23), 
Length of domains: 10287
Time: pickout 0.3401    decision 1.6577    set_bounds 1.4330    solve 3.4044    add 0.0438    
Accumulated time: pickout 3.2367    decision 18.0976    set_bounds 14.2334    solve 49.5980    add 0.7321    
Current (lb-rhs): -0.1824740469455719
188061 domains visited
Cumulative time: 127.32412338256836

BaB round 22
batch: 10287
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1149] [/input-8, 1610] [/input-8, 1610] [/input-8, 1149] [/input, 2471] [/input, 3000] [/input-8, 897] [/input-8, 1618] [/input-8, 1626] [/input-8, 625] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18097004294395447
10 lb beta sum: 0.2326028048992157, worst -0.005867332220077515
Time: prepare 0.5594    bound 0.9070    transfer 0.1014    finalize 0.1438    func 2.1895    
Accumulated time: func 51.0755    prepare 9.9185    bound 30.6491    transfer 1.6808    finalize 6.0000    
all_split False
======================Cut inference begins======================
max lb tensor(0.63305992) min lb tensor(1.48415565e-05)
Number of Verified Splits: 20574 of 20574
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.7065744400024414 
BICCOS Cumulative time: 40.0994758605957
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.2121    decision 0.5725    set_bounds 0.8971    solve 2.1941    add 0.0030    
Accumulated time: pickout 3.4488    decision 18.6700    set_bounds 15.1305    solve 51.7921    add 0.7351    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
188061 domains visited
Cumulative time: 132.08599424362183


Properties batch 4, size 1
Remaining timeout: 66.01045799255371
Verifying property 4 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39791703]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39791703]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0004169940948486328
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 2] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.03173685073852539

all verified at 0th iter
Time: prepare 0.0018    bound 0.0041    transfer 0.0005    finalize 0.0014    func 0.0095    
Accumulated time: func 0.0095    prepare 0.0022    bound 0.0041    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.63773608) min lb tensor(0.03173685)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006601810455322266 
BICCOS Cumulative time: 0.006601810455322266
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0161    solve 0.0096    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0223    set_bounds 0.0161    solve 0.0096    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.060080766677856445


Properties batch 5, size 1
Remaining timeout: 65.717200756073
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 65.7171311378479
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 65.71697282791138
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 65.71694874763489
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 134.2831 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.50119209, -19.03553009, -15.22840977, -15.80129242, -14.75272465,
         -15.83410263, -14.41858292, -16.04555511, -18.78121948, -17.07835579]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 277, 1, 566] with unstable size 276 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 566] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [276]; unstable size 276; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 276] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.08655161,  2.27971601, -0.70720375,  0.21668983, -1.24121785,
          0.14262724, -0.35904801,  2.26373291,  0.64331341]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.50119209, -19.03553009, -15.22840977, -15.80129242, -14.75272465,
         -15.83410263, -14.41858292, -16.04555511, -18.78121948, -17.07835579]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.99808788, -18.69559097, -14.74748039, -15.45328903, -14.09618664,
          -15.44491768, -14.31151581, -15.40262127, -18.31984901, -16.73563576],
         [-15.99808788, -18.69559097, -14.74748039, -15.45328903, -14.09618664,
          -15.44491768, -14.31151581, -15.40262127, -18.31984901, -16.73563576]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.43596458, -0.21532917,  1.09110546]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0572 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.34526443, -29.08344650, -25.10714531, -24.64510918, -24.53378105,
         -24.57837105, -26.13238144, -26.32098007, -25.42654800, -28.22369576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [589]; unstable size 589; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 279, 1, 589] with unstable size 278 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 589] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 589] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [278]; unstable size 278; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 278] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 278] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.90512037,  2.61773014, -0.68264675, -0.29089302, -1.19851422,
          0.45634866,  0.37348247, -0.85104167,  1.92439842]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.34526443, -29.08344650, -25.10714531, -24.64510918, -24.53378105,
         -24.57837105, -26.13238144, -26.32098007, -25.42654800, -28.22369576]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.34526443, -29.08345222, -25.10714912, -24.64510918, -24.53377914,
          -24.57837105, -26.13237953, -26.32098007, -25.42654991, -28.22369576],
         [-25.34526443, -29.08345222, -25.10714912, -24.64510918, -24.53377914,
          -24.57837105, -26.13237953, -26.32098007, -25.42654991, -28.22369576]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.76689339,  0.52877808,  0.06673813, -0.04459190,  0.84817886]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0437 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.30639458, -26.81990623, -22.08092117, -22.72490120, -20.55580521,
         -22.10051918, -22.94018555, -20.62528801, -29.47222137, -25.84111977]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [482]; unstable size 482; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 210, 1, 482] with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 482] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 209] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.94138551,  2.94850802, -1.16203499,  0.27302694, -2.38051224,
         -0.17814422, -2.52197599,  5.83368587,  2.26016045]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.30639458, -26.81990623, -22.08092117, -22.72490120, -20.55580521,
         -22.10051918, -22.94018555, -20.62528801, -29.47222137, -25.84111977]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.30639648, -26.81990433, -22.08091927, -22.72489929, -20.55580711,
          -22.10051918, -22.94018173, -20.62528992, -29.47222328, -25.84112358],
         [-25.30639648, -26.81990433, -22.08091927, -22.72489929, -20.55580711,
          -22.10051918, -22.94018173, -20.62528992, -29.47222328, -25.84112358]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01959991, -1.54471207,  0.83966255, -1.47522926]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0393 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.38834953, -31.51884651, -29.35291672, -31.02542496, -30.66601372,
         -31.39447021, -32.53964615, -32.87446594, -24.85302734, -31.34247780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [590]; unstable size 590; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 208, 1, 590] with unstable size 207 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 590] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [207]; unstable size 207; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 207] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 207] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.28638101, 5.51830292, 2.94133282, 4.63216543, 3.96261096, 4.82937765,
         6.07474279, 5.84654760, 5.52136803]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0596 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
         -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 595] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 595] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 232] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.10743809,  5.94192934,  6.68529749,  5.16697359,  7.68069744,
          6.76295090,  6.25848007,  0.80630207, -0.04625976]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
         -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.18it/s]100%|██████████| 1/1 [00:00<00:00,  9.17it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.74093628, -32.63446808, -39.92547989, -40.66252518, -39.21731186,
          -41.79864883, -40.77612686, -40.37427521, -34.67422867, -33.05698013]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.42251205]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1116 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 41.187747955322266
alpha/beta optimization time: 1.1958041191101074
initial alpha-crown bounds: tensor([[ 1.18385458,  6.04057693,  6.78337097,  5.29151678,  7.78996420,
          6.85149002,  6.37167645,  0.88482285, -0.00952530]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.009525299072265625
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65974807739258
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6597101688385
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65968561172485
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.65966391563416
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.65964603424072
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.65962767601013
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.65960955619812
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.65958833694458
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.65957021713257
Verifying property 8 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00952530]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
        -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00952530]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 595
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 227
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 838
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.870529174804688e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.00952446460723877
10 lb beta sum: 0.0, worst -0.009534239768981934
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    func 0.0530    
Accumulated time: func 0.0530    prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 59] 
split level 2: [/input-8, 156] 
split level 3: [/input-12, 12] 
split level 4: [/input-12, 15] 
split level 5: [/input-8, 1123] 
split level 6: [/input-8, 1122] 
split level 7: [/input-8, 157] 
split level 8: [/input-12, 89] 
split level 9: [/input-12, 36] 
split level 10: [/input-8, 1971] 
split level 11: [/input-12, 10] 
split level 12: [/input-8, 1763] 
split level 13: [/input-12, 2] 
split level 14: [/input-8, 1627] 
split level 15: [/input-8, 164] 
split level 16: [/input-8, 1628] 
split level 17: [/input-8, 147] 
split level 18: [/input-8, 793] 
split level 19: [/input-8, 1626] 
split level 20: [/input-8, 1755] 
split level 21: [/input-8, 1050] 
split level 22: [/input-8, 1067] 
split level 23: [/input-8, 1762] 
split level 24: [/input, 3177] 
split level 25: [/input, 904] 
split level 26: [/input-8, 598] 
split level 27: [/input-8, 814] 
split level 28: [/input-8, 747] 
split level 29: [/input-8, 308] 
split level 30: [/input, 3467] 
split level 31: [/input, 3210] 
split level 32: [/input-8, 748] 
split level 33: [/input-12, 13] 
split level 34: [/input-8, 1756] 
split level 35: [/input, 3146] 
split level 36: [/input-12, 8] 
split level 37: [/input-8, 1386] 
split level 38: [/input-12, 24] 
split level 39: [/input-8, 806] 
split level 40: [/input, 876] 
split level 41: [/input-8, 1500] 
split level 42: [/input-8, 1963] 
split level 43: [/input-8, 1517] 
split level 44: [/input-8, 749] 
split level 45: [/input-8, 1969] 
split level 46: [/input-8, 1968] 
split level 47: [/input-8, 1387] 
split level 48: [/input, 3464] 
split level 49: [/input-8, 1683] 
split level 50: [/input-8, 1119] 
split level 51: [/input-8, 1498] 
split level 52: [/input, 150] 
split level 53: [/input-8, 1561] 
split level 54: [/input-8, 588] 
split level 55: [/input-8, 1085] 
split level 56: [/input, 980] 
split level 57: [/input-8, 1943] 
split level 58: [/input, 3211] 
split level 59: [/input-8, 628] 
split level 60: [/input-8, 1395] 
split level 61: [/input, 4001] 
split level 62: [/input, 923] 
split level 63: [/input, 1671] 
split level 64: [/input, 3181] 
split level 65: [/input, 3499] 
split level 66: [/input-8, 973] 
split level 67: [/input-8, 1086] 
split level 68: [/input, 3441] 
split level 69: [/input, 380] 
split level 70: [/input-8, 1388] 
split level 71: [/input-8, 478] 
split level 72: [/input-8, 949] 
split level 73: [/input, 3196] 
split level 74: [/input-8, 1314] 
split level 75: [/input, 3302] 
split level 76: [/input, 857] 
split level 77: [/input-8, 1333] 
split level 78: [/input-8, 1390] 
split level 79: [/input-8, 1620] 
split level 80: [/input, 369] 
split level 81: [/input-8, 213] 
split level 82: [/input, 454] 
split level 83: [/input, 2266] 
split level 84: [/input, 3539] 
split level 85: [/input, 1442] 
split level 86: [/input, 2267] 
split level 87: [/input-8, 482] 
split level 88: [/input-8, 828] 
split level 89: [/input-8, 1033] 
split level 90: [/input, 882] 
split level 91: [/input, 2489] 
split level 92: [/input-8, 1385] 
split level 93: [/input-8, 1389] 
split level 94: [/input, 387] 
split level 95: [/input, 2278] 
split level 96: [/input, 2788] 
split level 97: [/input, 874] 
split level 98: [/input-8, 1929] 
split level 99: [/input, 2261] 
split level 100: [/input-8, 1393] 
split level 101: [/input, 883] 
split level 102: [/input, 839] 
split level 103: [/input, 833] 
split level 104: [/input, 983] 
split level 105: [/input, 2538] 
split level 106: [/input, 3483] 
split level 107: [/input, 2277] 
split level 108: [/input-8, 902] 
split level 109: [/input, 899] 
split level 110: [/input-8, 214] 
split level 111: [/input, 2518] 
split level 112: [/input, 2724] 
split level 113: [/input, 151] 
split level 114: [/input, 996] 
split level 115: [/input-8, 975] 
split level 116: [/input-8, 1973] 
split level 117: [/input, 3545] 
split level 118: [/input, 840] 
split level 119: [/input-8, 901] 
split level 120: [/input, 866] 
split level 121: [/input-8, 1820] 
split level 122: [/input-8, 1397] 
split level 123: [/input, 2534] 
split level 124: [/input-8, 1952] 
split level 125: [/input-8, 1214] 
split level 126: [/input, 982] 
split level 127: [/input, 3044] 
split level 128: [/input-8, 1644] 
split level 129: [/input, 2523] 
split level 130: [/input, 2274] 
split level 131: [/input, 314] 
split level 132: [/input, 2264] 
split level 133: [/input, 999] 
split level 134: [/input-8, 1315] 
split level 135: [/input-8, 1641] 
split level 136: [/input, 4039] 
split level 137: [/input, 175] 
split level 138: [/input-8, 1621] 
split level 139: [/input, 2725] 
split level 140: [/input, 2275] 
split level 141: [/input, 2260] 
split level 142: [/input-8, 1115] 
split level 143: [/input, 421] 
split level 144: [/input, 2487] 
split level 145: [/input, 2262] 
split level 146: [/input, 2281] 
split level 147: [/input, 978] 
split level 148: [/input, 2259] 
split level 149: [/input-8, 1757] 
split level 150: [/input, 2537] 
split level 151: [/input, 313] 
split level 152: [/input, 2279] 
split level 153: [/input, 3041] 
split level 154: [/input-8, 141] 
split level 155: [/input, 2282] 
split level 156: [/input, 405] 
split level 157: [/input, 2471] 
split level 158: [/input-8, 153] 
split level 159: [/input, 422] 
split level 160: [/input, 2244] 
split level 161: [/input, 1004] 
split level 162: [/input, 2143] 
split level 163: [/input-8, 911] 
split level 164: [/input-8, 202] 
split level 165: [/input, 2127] 
split level 166: [/input, 893] 
split level 167: [/input, 2215] 
split level 168: [/input, 822] 
split level 169: [/input-8, 1049] 
split level 170: [/input, 2539] 
split level 171: [/input-8, 201] 
split level 172: [/input, 3299] 
split level 173: [/input, 2752] 
split level 174: [/input, 2257] 
split level 175: [/input, 933] 
split level 176: [/input-8, 359] 
split level 177: [/input, 2542] 
split level 178: [/input, 3303] 
split level 179: [/input, 886] 
split level 180: [/input, 2273] 
split level 181: [/input, 2541] 
split level 182: [/input, 2533] 
split level 183: [/input, 2284] 
split level 184: [/input, 817] 
split level 185: [/input, 323] 
split level 186: [/input, 28] 
split level 187: [/input, 3480] 
split level 188: [/input, 819] 
split level 189: [/input, 76] 
split level 190: [/input, 2470] 
split level 191: [/input, 2519] 
split level 192: [/input, 2545] 
split level 193: [/input, 2706] 
split level 194: [/input, 3421] 
split level 195: [/input, 2111] 
split level 196: [/input-8, 1579] 
split level 197: [/input, 901] 
split level 198: [/input, 2228] 
split level 199: [/input, 1329] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.009444952011108398
10 lb beta sum: 0.0, worst -0.00942230224609375
Time: prepare 0.0117    bound 0.0955    transfer 0.0013    finalize 0.0027    func 0.1138    
Accumulated time: func 0.1668    prepare 0.0219    bound 0.1481    transfer 0.0014    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.24686581) min lb tensor(-0.00941086)
Number of Verified Splits: 56 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.013006925582885742 
BICCOS Cumulative time: 0.013006925582885742
Preprocessing time: 0.00983285903930664 Inference time: 0.002093076705932617 Add cuts time: 0.0009129047393798828 Cut analysis time: 0.00016808509826660156
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5190    set_bounds 0.0087    solve 0.1139    add 0.0100    
Accumulated time: pickout 0.0003    decision 0.5190    set_bounds 0.0087    solve 0.1139    add 0.0100    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-8, 156] 
split level 2: [/input-12, 12] 
split level 3: [/input-12, 15] 
split level 4: [/input-8, 1122] 
split level 5: [/input-12, 89] 
split level 6: [/input-12, 2] 
split level 7: [/input-8, 164] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.1750791072845459

all verified at 0th iter
Time: prepare 0.0051    bound 0.0039    transfer 0.0008    finalize 0.0014    func 0.0128    
Accumulated time: func 0.1796    prepare 0.0274    bound 0.1520    transfer 0.0022    finalize 0.0042    
all_split False
======================Cut inference begins======================
max lb tensor(0.41384041) min lb tensor(0.17507911)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006848335266113281 
BICCOS Cumulative time: 0.019855260848999023
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0215    set_bounds 0.0203    solve 0.0128    add 0.0003    
Accumulated time: pickout 0.0007    decision 0.5405    set_bounds 0.0289    solve 0.1267    add 0.0103    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.789928674697876

Result: safe in 2.3849 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.45841980, -44.35070419, -34.18724823, -36.62807846, -41.51102829,
         -36.81817245, -39.17654037, -38.88699341, -42.89539719, -42.96294785]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [414]; unstable size 414; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 108, 1, 414] with unstable size 107 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 414] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 414] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [107]; unstable size 107; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 107] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 107] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.80952764, 9.28114986, 1.87684715, 6.70495224, 2.04463530, 4.42981815,
         4.07691669, 7.95990801, 7.91283512]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0395 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
         -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 952] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 952] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 267] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86406422,  0.76336551,  2.41063428,  2.30971551,  3.50218773,
          1.55449831,  4.16273117, -1.88281870,  0.94847775]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
         -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
          -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.72462654]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0435 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
         -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [503]; unstable size 503; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 503] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 503] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 503] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 221] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.14191866,  3.64040279,  2.98625946,  2.87868071,  3.34063101,
          4.70360136,  3.04852629,  1.37090325, -0.29452491]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
         -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.20it/s]100%|██████████| 1/1 [00:00<00:00,  9.19it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.27663136, -10.99063969, -16.15567589, -15.54304314, -15.45358086,
          -16.03116608, -17.35605240, -15.81715107, -13.23739529, -11.18209076]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.19145107]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1113 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.24104118347168
alpha/beta optimization time: 1.194854974746704
initial alpha-crown bounds: tensor([[ 3.18642426,  3.68983221,  3.03233528,  2.93258476,  3.39427710,
          4.75412703,  3.10958529,  1.40874815, -0.26687288]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2668728828430176
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65749168395996
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.65745329856873
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65743017196655
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.6574091911316
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.65739035606384
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.65737199783325
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.65735387802124
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.65733456611633
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.65731644630432
Verifying property 8 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26687288]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
        -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26687288]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 503
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 219
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 745
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010442733764648438
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.26687192916870117
10 lb beta sum: 0.0, worst -0.2668790817260742
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    func 0.0528    
Accumulated time: func 0.0528    prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 89] 
split level 5: [/input-8, 164] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 97] 
split level 8: [/input-8, 156] 
split level 9: [/input-12, 36] 
split level 10: [/input-12, 2] 
split level 11: [/input-8, 163] 
split level 12: [/input-12, 79] 
split level 13: [/input-12, 10] 
split level 14: [/input-8, 419] 
split level 15: [/input, 406] 
split level 16: [/input-12, 24] 
split level 17: [/input-8, 313] 
split level 18: [/input-8, 1626] 
split level 19: [/input-8, 1634] 
split level 20: [/input-8, 469] 
split level 21: [/input-8, 1321] 
split level 22: [/input, 3478] 
split level 23: [/input-8, 166] 
split level 24: [/input-8, 403] 
split level 25: [/input, 391] 
split level 26: [/input-8, 1618] 
split level 27: [/input, 936] 
split level 28: [/input, 407] 
split level 29: [/input-12, 13] 
split level 30: [/input-8, 477] 
split level 31: [/input-8, 915] 
split level 32: [/input-8, 1068] 
split level 33: [/input-8, 592] 
split level 34: [/input-8, 405] 
split level 35: [/input-8, 932] 
split level 36: [/input, 916] 
split level 37: [/input, 886] 
split level 38: [/input-8, 906] 
split level 39: [/input-8, 269] 
split level 40: [/input-8, 745] 
split level 41: [/input-8, 1610] 
split level 42: [/input-8, 942] 
split level 43: [/input-8, 844] 
split level 44: [/input-8, 1298] 
split level 45: [/input-8, 802] 
split level 46: [/input, 3496] 
split level 47: [/input-8, 1677] 
split level 48: [/input-8, 1069] 
split level 49: [/input, 3493] 
split level 50: [/input-8, 1651] 
split level 51: [/input-8, 1355] 
split level 52: [/input-8, 1625] 
split level 53: [/input, 887] 
split level 54: [/input-8, 1590] 
split level 55: [/input-8, 46] 
split level 56: [/input-8, 1614] 
split level 57: [/input-8, 1572] 
split level 58: [/input, 932] 
split level 59: [/input-8, 783] 
split level 60: [/input-8, 1554] 
split level 61: [/input-8, 474] 
split level 62: [/input, 3464] 
split level 63: [/input-8, 1658] 
split level 64: [/input-8, 951] 
split level 65: [/input, 3556] 
split level 66: [/input-8, 1040] 
split level 67: [/input-8, 1230] 
split level 68: [/input, 358] 
split level 69: [/input, 3494] 
split level 70: [/input-8, 843] 
split level 71: [/input-8, 1779] 
split level 72: [/input, 1942] 
split level 73: [/input-8, 406] 
split level 74: [/input, 996] 
split level 75: [/input-8, 1599] 
split level 76: [/input, 501] 
split level 77: [/input-8, 1393] 
split level 78: [/input, 931] 
split level 79: [/input-8, 286] 
split level 80: [/input-8, 777] 
split level 81: [/input, 1012] 
split level 82: [/input-8, 810] 
split level 83: [/input-8, 1678] 
split level 84: [/input-8, 910] 
split level 85: [/input, 1304] 
split level 86: [/input-8, 1356] 
split level 87: [/input-8, 489] 
split level 88: [/input, 504] 
split level 89: [/input-8, 846] 
split level 90: [/input, 2952] 
split level 91: [/input-8, 948] 
split level 92: [/input-8, 1497] 
split level 93: [/input-8, 1296] 
split level 94: [/input-8, 957] 
split level 95: [/input-8, 1666] 
split level 96: [/input-8, 909] 
split level 97: [/input, 87] 
split level 98: [/input-8, 1498] 
split level 99: [/input, 1303] 
split level 100: [/input-8, 1367] 
split level 101: [/input-8, 1315] 
split level 102: [/input, 506] 
split level 103: [/input, 3002] 
split level 104: [/input-8, 1780] 
split level 105: [/input, 510] 
split level 106: [/input, 2709] 
split level 107: [/input, 3221] 
split level 108: [/input-8, 395] 
split level 109: [/input, 3021] 
split level 110: [/input, 982] 
split level 111: [/input-8, 1360] 
split level 112: [/input, 2327] 
split level 113: [/input, 3570] 
split level 114: [/input, 3576] 
split level 115: [/input, 1926] 
split level 116: [/input, 3577] 
split level 117: [/input, 3572] 
split level 118: [/input-8, 1935] 
split level 119: [/input, 1013] 
split level 120: [/input, 1912] 
split level 121: [/input, 2278] 
split level 122: [/input-8, 1306] 
split level 123: [/input, 921] 
split level 124: [/input, 997] 
split level 125: [/input, 2916] 
split level 126: [/input-8, 1170] 
split level 127: [/input, 2885] 
split level 128: [/input, 4035] 
split level 129: [/input, 2887] 
split level 130: [/input, 1014] 
split level 131: [/input-8, 219] 
split level 132: [/input, 505] 
split level 133: [/input, 998] 
split level 134: [/input-8, 1696] 
split level 135: [/input, 2215] 
split level 136: [/input, 2715] 
split level 137: [/input, 2275] 
split level 138: [/input-8, 301] 
split level 139: [/input, 508] 
split level 140: [/input, 2214] 
split level 141: [/input, 1925] 
split level 142: [/input, 2072] 
split level 143: [/input-8, 371] 
split level 144: [/input, 2264] 
split level 145: [/input-8, 33] 
split level 146: [/input, 4034] 
split level 147: [/input-8, 1743] 
split level 148: [/input-8, 812] 
split level 149: [/input, 2707] 
split level 150: [/input-8, 913] 
split level 151: [/input, 509] 
split level 152: [/input, 1990] 
split level 153: [/input, 507] 
split level 154: [/input-8, 329] 
split level 155: [/input-8, 263] 
split level 156: [/input-8, 1091] 
split level 157: [/input, 23] 
split level 158: [/input, 2550] 
split level 159: [/input, 2549] 
split level 160: [/input-8, 39] 
split level 161: [/input, 2087] 
split level 162: [/input, 3020] 
split level 163: [/input, 1883] 
split level 164: [/input, 2535] 
split level 165: [/input-8, 1504] 
split level 166: [/input, 2263] 
split level 167: [/input, 3252] 
split level 168: [/input, 1334] 
split level 169: [/input, 206] 
split level 170: [/input, 3582] 
split level 171: [/input, 2231] 
split level 172: [/input, 1460] 
split level 173: [/input, 2519] 
split level 174: [/input-8, 835] 
split level 175: [/input, 2280] 
split level 176: [/input, 1867] 
split level 177: [/input, 3436] 
split level 178: [/input, 1989] 
split level 179: [/input, 873] 
split level 180: [/input, 281] 
split level 181: [/input-8, 1687] 
split level 182: [/input, 2959] 
split level 183: [/input, 1851] 
split level 184: [/input, 2233] 
split level 185: [/input, 1924] 
split level 186: [/input, 853] 
split level 187: [/input, 113] 
split level 188: [/input-8, 775] 
split level 189: [/input, 2281] 
split level 190: [/input-8, 496] 
split level 191: [/input, 2830] 
split level 192: [/input, 3578] 
split level 193: [/input, 648] 
split level 194: [/input, 2056] 
split level 195: [/input-8, 210] 
split level 196: [/input, 875] 
split level 197: [/input, 2893] 
split level 198: [/input, 2213] 
split level 199: [/input-8, 326] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2667868137359619
10 lb beta sum: 0.0, worst -0.26678454875946045
Time: prepare 0.0117    bound 0.0966    transfer 0.0007    finalize 0.0026    func 0.1143    
Accumulated time: func 0.1671    prepare 0.0218    bound 0.1490    transfer 0.0008    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(-0.07029152) min lb tensor(-0.26677918)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.00986027717590332 
BICCOS Cumulative time: 0.00986027717590332
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25838 (1), -0.25774 (1), -0.25718 (1), -0.25708 (1), -0.25698 (1), -0.25651 (1), -0.25638 (1), -0.25605 (1), -0.25589 (1), -0.25549 (1), -0.25532 (1), -0.25421 (1), -0.25325 (1), -0.25261 (1), -0.25239 (1), -0.25140 (1), -0.25080 (1), -0.25010 (1), -0.25007 (1), -0.24904 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5148    set_bounds 0.0086    solve 0.1143    add 0.0678    
Accumulated time: pickout 0.0003    decision 0.5148    set_bounds 0.0086    solve 0.1143    add 0.0678    
Current (lb-rhs): -0.2583763599395752
50 domains visited
Cumulative time: 0.775374174118042

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 20] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 68] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
split level 1: [/input-12, 20] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 20] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 2: [/input-12, 32] [/input-12, 32] [/input-12, 20] [/input-12, 20] [/input-12, 32] [/input-12, 20] [/input-12, 32] [/input-12, 20] [/input-12, 20] [/input-12, 20] 
split level 3: [/input-12, 12] [/input-12, 12] [/input-12, 32] [/input-12, 12] [/input-12, 12] [/input-12, 32] [/input-12, 12] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2401587963104248
10 lb beta sum: 0.0, worst -0.2400531768798828
Time: prepare 0.0127    bound 0.0974    transfer 0.0007    finalize 0.0023    func 0.1158    
Accumulated time: func 0.2828    prepare 0.0348    bound 0.2464    transfer 0.0015    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.11847851) min lb tensor(-0.24003470)
Number of Verified Splits: 25 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 8.
#cuts 1-3: 8
#cuts >= 20: 0
BICCOS time: 0.013688802719116211 
BICCOS Cumulative time: 0.02354907989501953
Preprocessing time: 0.011787652969360352 Inference time: 0.0011196136474609375 Add cuts time: 0.00042128562927246094 Cut analysis time: 0.00036025047302246094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07046 (2), -0.07039 (2), -0.07000 (2), -0.06966 (2), -0.06952 (2), -0.06902 (2), -0.06901 (2), -0.06894 (2), -0.06758 (2), -0.06705 (2), -0.06702 (2), -0.06641 (2), -0.06610 (2), -0.06562 (2), -0.06428 (2), -0.06404 (2), -0.06400 (2), -0.06115 (2), -0.06073 (2), -0.05999 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0199    set_bounds 0.0130    solve 0.1158    add 0.0849    
Accumulated time: pickout 0.0015    decision 0.5348    set_bounds 0.0215    solve 0.2302    add 0.1527    
Current (lb-rhs): -0.07046008110046387
100 domains visited
Cumulative time: 1.024700403213501

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 68] [/input-12, 20] [/input-12, 20] [/input-12, 68] [/input-12, 20] [/input-12, 68] [/input-12, 68] [/input-12, 20] 
split level 1: [/input-12, 68] [/input-12, 68] [/input-12, 20] [/input-12, 68] [/input-12, 68] [/input-12, 20] [/input-12, 68] [/input-12, 20] [/input-12, 20] [/input-12, 68] 
split level 2: [/input-12, 89] [/input-12, 89] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 89] [/input-12, 32] [/input-12, 89] [/input-12, 32] [/input-12, 32] 
split level 3: [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05320930480957031
10 lb beta sum: 0.5451804399490356, worst -0.03321361541748047
Time: prepare 0.0071    bound 0.1227    transfer 0.0007    finalize 0.0024    func 0.1363    
Accumulated time: func 0.4191    prepare 0.0421    bound 0.3691    transfer 0.0022    finalize 0.0075    
all_split False
======================Cut inference begins======================
max lb tensor(0.29121792) min lb tensor(-0.02850437)
Number of Verified Splits: 389 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03733348846435547 
BICCOS Cumulative time: 0.060882568359375
Preprocessing time: 0.011851787567138672 Inference time: 0.0170745849609375 Add cuts time: 0.007955074310302734 Cut analysis time: 0.0004520416259765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02850 (3), -0.02805 (3), -0.01247 (3), -0.01216 (3), -0.00101 (3), -0.00060 (3), -0.00051 (3), -0.00042 (3), 
Length of domains: 8
Time: pickout 0.0012    decision 0.0196    set_bounds 0.0173    solve 0.1363    add 0.1108    
Accumulated time: pickout 0.0027    decision 0.5544    set_bounds 0.0388    solve 0.3665    add 0.2635    
Current (lb-rhs): -0.028504371643066406
108 domains visited
Cumulative time: 1.3475921154022217

Shallow-BaB round 4
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 32] [/input-12, 32] 
split level 1: [/input-12, 89] [/input-12, 32] [/input-12, 89] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 89] [/input-12, 89] 
split level 2: [/input-8, 164] [/input-12, 89] [/input-8, 164] [/input-12, 89] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] 
split level 3: [/input-12, 12] [/input-8, 164] [/input-12, 12] [/input-8, 164] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] 
split level 4: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
split level 5: [/input-8, 156] [/input-8, 156] [/input-8, 156] [/input-8, 156] [/input-8, 156] [/input-8, 156] [/input-8, 156] [/input-8, 156] 
split level 6: [/input-12, 2] [/input-12, 36] [/input-12, 2] [/input-12, 36] [/input-12, 2] [/input-12, 2] [/input-12, 36] [/input-12, 2] 
split level 7: [/input-12, 36] [/input-12, 2] [/input-12, 36] [/input-12, 2] [/input-12, 36] [/input-12, 36] [/input-12, 2] [/input-12, 36] 
split level 8: [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-8, 163] [/input-8, 163] [/input-8, 163] 
split level 9: [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
split level 10: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] 
split level 11: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 12: [/input-8, 1626] [/input-8, 166] [/input-8, 1626] [/input-8, 166] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] [/input-8, 1626] 
split level 13: [/input-8, 166] [/input-8, 1626] [/input-8, 166] [/input-8, 1626] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] 
split level 14: [/input-8, 1321] [/input-8, 915] [/input-8, 1321] [/input-8, 915] [/input-8, 1321] [/input-8, 1321] [/input-8, 1321] [/input-8, 1321] 
split level 15: [/input, 3478] [/input-8, 1321] [/input, 3478] [/input-8, 1321] [/input, 3478] [/input, 3478] [/input, 3478] [/input, 3478] 
split level 16: [/input-8, 915] [/input, 3478] [/input-8, 915] [/input, 3478] [/input-8, 915] [/input-8, 915] [/input-8, 915] [/input-8, 915] 
split level 17: [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] [/input, 391] 
split level 18: [/input-8, 477] [/input-8, 906] [/input-8, 477] [/input-8, 906] [/input-8, 477] [/input-8, 477] [/input-8, 477] [/input-8, 477] 
split level 19: [/input, 407] [/input, 407] [/input, 407] [/input, 407] [/input, 407] [/input, 407] [/input-8, 906] [/input-8, 906] 
split level 20: [/input-8, 906] [/input-8, 1677] [/input-8, 906] [/input-8, 1677] [/input-8, 1677] [/input-8, 906] [/input, 407] [/input, 407] 
split level 21: [/input-8, 942] [/input-8, 1554] [/input-8, 1554] [/input-8, 1554] [/input-8, 1554] [/input-8, 1554] [/input-8, 1554] [/input-8, 1554] 
split level 22: [/input-8, 1554] [/input-8, 942] [/input-8, 942] [/input-8, 942] [/input-8, 942] [/input-8, 942] [/input-8, 942] [/input-8, 942] 
split level 23: [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input, 916] 
split level 24: [/input-8, 1678] [/input-8, 1678] [/input-8, 1678] [/input-8, 1678] [/input-8, 1678] [/input-8, 1678] [/input-8, 1678] [/input-8, 1678] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.035919904708862305

all verified at 5th iter
Time: prepare 0.0074    bound 0.0398    transfer 0.0007    finalize 0.0023    func 0.0528    
Accumulated time: func 0.4719    prepare 0.0508    bound 0.4089    transfer 0.0029    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.28778213) min lb tensor(0.00172281)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 14
#cuts >= 20: 0
BICCOS time: 0.03645014762878418 
BICCOS Cumulative time: 0.09733271598815918
Preprocessing time: 0.011272430419921875 Inference time: 0.018926620483398438 Add cuts time: 0.0058171749114990234 Cut analysis time: 0.00043392181396484375
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0006    decision 0.0738    set_bounds 0.0127    solve 0.0529    add 0.1540    
Accumulated time: pickout 0.0033    decision 0.6282    set_bounds 0.0515    solve 0.4194    add 0.4175    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
108 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.021750569343566895
10 lb beta sum: 0.016956128180027008, worst -0.01490834355354309
Time: prepare 0.0037    bound 0.1277    transfer 0.0010    finalize 0.0013    func 0.1354    
Accumulated time: func 0.6073    prepare 0.0550    bound 0.5366    transfer 0.0038    finalize 0.0111    
all_split False
======================Cut inference begins======================
max lb tensor(0.33459544) min lb tensor(-0.01463810)
Number of Verified Splits: 248 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18693161010742188
10 lb beta sum: 1.1614643335342407, worst -0.2064591646194458
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 10
#cuts 4-6: 5
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.257861852645874 
BICCOS Cumulative time: 0.3551945686340332
Preprocessing time: 0.006425380706787109 Inference time: 0.24494433403015137 Add cuts time: 0.005910634994506836 Cut analysis time: 0.0005815029144287109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01464 (8), -0.01282 (8), -0.01204 (8), -0.00962 (8), -0.00522 (8), -0.00336 (8), -0.00289 (8), -0.00009 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0168    solve 0.1355    add 0.0010    
Accumulated time: pickout 0.0037    decision 0.6513    set_bounds 0.0682    solve 0.5549    add 0.4184    
Current (lb-rhs): -0.01463809609413147
116 domains visited
Cumulative time: 2.118575096130371

BaB round 2
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] 
split level 1: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 2: [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] 
split level 3: [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] 
split level 4: [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.012709379196166992

all verified at 0th iter
Time: prepare 0.0051    bound 0.0044    transfer 0.0009    finalize 0.0012    func 0.0132    
Accumulated time: func 0.6205    prepare 0.0604    bound 0.5410    transfer 0.0047    finalize 0.0123    
all_split False
======================Cut inference begins======================
max lb tensor(0.08344531) min lb tensor(0.01270938)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 16.
#cuts 1-3: 10
#cuts 4-6: 5
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.007662296295166016 
BICCOS Cumulative time: 0.3628568649291992
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0157    set_bounds 0.0212    solve 0.0133    add 0.0001    
Accumulated time: pickout 0.0049    decision 0.6670    set_bounds 0.0894    solve 0.5681    add 0.4185    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
116 domains visited
Cumulative time: 2.1785809993743896

Result: safe in 3.7288 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.03878975, -27.34531403, -23.53932953, -24.00347710, -23.92297554,
         -24.22077560, -25.12296104, -25.69461441, -24.00042725, -27.72712517]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [585]; unstable size 585; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 585] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 585] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 195] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.34309053, 0.87681007, 1.16531003, 1.17494893, 1.34177256, 2.16514802,
         2.73782158, 1.01523054, 4.69900179]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0474 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
         -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [438]; unstable size 438; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 438] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 438] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 438] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 275] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.22114396,  4.09420586, -0.54178798,  0.56779718, -0.32674569,
          0.62577593,  1.91951942,  3.76403713,  3.22747231]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
         -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.14it/s]100%|██████████| 1/1 [00:00<00:00,  9.14it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.04311180, -21.13624954, -15.83210659, -16.94238091, -16.04538727,
          -17.10531425, -15.73818588, -18.64249992, -21.03587151, -20.26518440],
         [-20.04311180, -21.13624954, -15.83210659, -16.94238091, -16.04538727,
          -17.10531425, -15.73818588, -18.64249992, -21.03587151, -20.26518440]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.09392071, 0.30720139]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1122 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.21331214904785
alpha/beta optimization time: 1.1830413341522217
initial alpha-crown bounds: tensor([[ 3.30038834,  4.16773224, -0.48484516,  0.61480343, -0.26430178,
          0.68667251,  2.01555824,  3.85170507,  3.32559872]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4848451614379883
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66005063056946
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.66001152992249
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.65998888015747
Verifying property 2 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48484516]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
        -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48484516]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 438
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 724
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.965896606445312e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48484236001968384
10 lb beta sum: 0.0, worst -0.4848473072052002
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 56] 
split level 5: [/input-12, 61] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 7] 
split level 8: [/input-12, 34] 
split level 9: [/input-12, 6] 
split level 10: [/input-8, 1635] 
split level 11: [/input-12, 68] 
split level 12: [/input-8, 474] 
split level 13: [/input-8, 1619] 
split level 14: [/input-8, 811] 
split level 15: [/input-8, 157] 
split level 16: [/input-8, 1636] 
split level 17: [/input-8, 91] 
split level 18: [/input-8, 1249] 
split level 19: [/input-8, 804] 
split level 20: [/input-8, 1259] 
split level 21: [/input-8, 1939] 
split level 22: [/input-8, 476] 
split level 23: [/input-8, 1725] 
split level 24: [/input-8, 44] 
split level 25: [/input-8, 1580] 
split level 26: [/input-12, 20] 
split level 27: [/input-8, 99] 
split level 28: [/input-8, 1718] 
split level 29: [/input-8, 1963] 
split level 30: [/input-8, 803] 
split level 31: [/input-8, 418] 
split level 32: [/input-8, 161] 
split level 33: [/input-8, 92] 
split level 34: [/input-8, 269] 
split level 35: [/input-12, 97] 
split level 36: [/input-8, 932] 
split level 37: [/input-8, 757] 
split level 38: [/input-8, 1954] 
split level 39: [/input-8, 406] 
split level 40: [/input-8, 98] 
split level 41: [/input-8, 54] 
split level 42: [/input-8, 1644] 
split level 43: [/input-8, 1962] 
split level 44: [/input-8, 428] 
split level 45: [/input-8, 146] 
split level 46: [/input-8, 481] 
split level 47: [/input-8, 1645] 
split level 48: [/input-8, 1581] 
split level 49: [/input-8, 1258] 
split level 50: [/input-8, 43] 
split level 51: [/input-8, 482] 
split level 52: [/input-8, 914] 
split level 53: [/input-8, 38] 
split level 54: [/input-8, 153] 
split level 55: [/input-8, 284] 
split level 56: [/input-8, 107] 
split level 57: [/input-8, 1241] 
split level 58: [/input-8, 426] 
split level 59: [/input-8, 755] 
split level 60: [/input-8, 28] 
split level 61: [/input-8, 1929] 
split level 62: [/input-8, 483] 
split level 63: [/input-8, 922] 
split level 64: [/input-8, 1568] 
split level 65: [/input, 2988] 
split level 66: [/input-8, 785] 
split level 67: [/input-8, 347] 
split level 68: [/input-8, 441] 
split level 69: [/input-8, 1650] 
split level 70: [/input-8, 491] 
split level 71: [/input-8, 1556] 
split level 72: [/input-8, 790] 
split level 73: [/input-8, 1579] 
split level 74: [/input, 3054] 
split level 75: [/input-8, 40] 
split level 76: [/input-8, 401] 
split level 77: [/input-8, 465] 
split level 78: [/input-8, 404] 
split level 79: [/input-8, 931] 
split level 80: [/input, 172] 
split level 81: [/input-8, 722] 
split level 82: [/input-8, 166] 
split level 83: [/input-8, 899] 
split level 84: [/input-8, 66] 
split level 85: [/input-8, 505] 
split level 86: [/input-8, 1614] 
split level 87: [/input-8, 588] 
split level 88: [/input-8, 1187] 
split level 89: [/input-8, 397] 
split level 90: [/input-8, 333] 
split level 91: [/input-8, 145] 
split level 92: [/input-8, 1027] 
split level 93: [/input-8, 1936] 
split level 94: [/input-8, 186] 
split level 95: [/input-8, 749] 
split level 96: [/input-8, 41] 
split level 97: [/input-8, 490] 
split level 98: [/input-8, 65] 
split level 99: [/input-8, 913] 
split level 100: [/input-8, 357] 
split level 101: [/input-8, 1248] 
split level 102: [/input-8, 612] 
split level 103: [/input-8, 1931] 
split level 104: [/input-8, 63] 
split level 105: [/input-8, 1283] 
split level 106: [/input, 378] 
split level 107: [/input-8, 1603] 
split level 108: [/input-8, 1242] 
split level 109: [/input-8, 25] 
split level 110: [/input-8, 312] 
split level 111: [/input-8, 1238] 
split level 112: [/input-8, 449] 
split level 113: [/input, 3383] 
split level 114: [/input, 3034] 
split level 115: [/input-8, 1193] 
split level 116: [/input-8, 342] 
split level 117: [/input-8, 1395] 
split level 118: [/input, 3038] 
split level 119: [/input-8, 1706] 
split level 120: [/input, 3167] 
split level 121: [/input-8, 1602] 
split level 122: [/input, 1124] 
split level 123: [/input-8, 177] 
split level 124: [/input-8, 1240] 
split level 125: [/input, 3300] 
split level 126: [/input, 1332] 
split level 127: [/input-8, 1596] 
split level 128: [/input-8, 1243] 
split level 129: [/input-8, 101] 
split level 130: [/input-8, 1224] 
split level 131: [/input-8, 1693] 
split level 132: [/input, 3161] 
split level 133: [/input-8, 1529] 
split level 134: [/input-8, 1642] 
split level 135: [/input-8, 1214] 
split level 136: [/input, 1196] 
split level 137: [/input-8, 236] 
split level 138: [/input-8, 326] 
split level 139: [/input-8, 169] 
split level 140: [/input-8, 2018] 
split level 141: [/input-8, 716] 
split level 142: [/input-8, 138] 
split level 143: [/input-8, 1167] 
split level 144: [/input-8, 587] 
split level 145: [/input-8, 1545] 
split level 146: [/input-8, 139] 
split level 147: [/input, 1450] 
split level 148: [/input-8, 175] 
split level 149: [/input-8, 1331] 
split level 150: [/input, 1080] 
split level 151: [/input, 669] 
split level 152: [/input, 476] 
split level 153: [/input-8, 248] 
split level 154: [/input, 501] 
split level 155: [/input-8, 1164] 
split level 156: [/input, 1400] 
split level 157: [/input-8, 2047] 
split level 158: [/input-8, 440] 
split level 159: [/input-8, 589] 
split level 160: [/input-8, 1694] 
split level 161: [/input, 1334] 
split level 162: [/input-8, 1175] 
split level 163: [/input, 1021] 
split level 164: [/input, 4068] 
split level 165: [/input, 1686] 
split level 166: [/input, 2613] 
split level 167: [/input-8, 204] 
split level 168: [/input-8, 238] 
split level 169: [/input, 3286] 
split level 170: [/input-8, 1699] 
split level 171: [/input, 377] 
split level 172: [/input, 974] 
split level 173: [/input-8, 395] 
split level 174: [/input-8, 1225] 
split level 175: [/input, 218] 
split level 176: [/input, 3926] 
split level 177: [/input, 3125] 
split level 178: [/input, 1599] 
split level 179: [/input, 1565] 
split level 180: [/input, 1652] 
split level 181: [/input, 1018] 
split level 182: [/input-8, 334] 
split level 183: [/input, 748] 
split level 184: [/input-8, 1705] 
split level 185: [/input, 1615] 
split level 186: [/input-8, 1775] 
split level 187: [/input-8, 1165] 
split level 188: [/input, 1180] 
split level 189: [/input-8, 865] 
split level 190: [/input-8, 1154] 
split level 191: [/input, 3541] 
split level 192: [/input-8, 1714] 
split level 193: [/input-8, 134] 
split level 194: [/input, 209] 
split level 195: [/input, 3166] 
split level 196: [/input-8, 227] 
split level 197: [/input, 3437] 
split level 198: [/input, 1490] 
split level 199: [/input, 2645] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.48483777046203613
10 lb beta sum: 0.0, worst -0.48483502864837646
Time: prepare 0.0115    bound 0.0961    transfer 0.0013    finalize 0.0025    func 0.1140    
Accumulated time: func 0.1671    prepare 0.0215    bound 0.1488    transfer 0.0013    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(-0.05249643) min lb tensor(-0.48483193)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.009786844253540039 
BICCOS Cumulative time: 0.009786844253540039
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.46542 (1), -0.46539 (1), -0.46526 (1), -0.46516 (1), -0.46444 (1), -0.46420 (1), -0.46408 (1), -0.46403 (1), -0.46206 (1), -0.46177 (1), -0.46133 (1), -0.46098 (1), -0.46044 (1), -0.45939 (1), -0.45896 (1), -0.45891 (1), -0.45799 (1), -0.45754 (1), -0.45753 (1), -0.45485 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5114    set_bounds 0.0084    solve 0.1141    add 0.0679    
Accumulated time: pickout 0.0003    decision 0.5114    set_bounds 0.0084    solve 0.1141    add 0.0679    
Current (lb-rhs): -0.4654207229614258
50 domains visited
Cumulative time: 0.7697186470031738

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 31] [/input-12, 31] [/input-12, 8] [/input-12, 31] 
split level 1: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 59] [/input-12, 8] [/input-12, 59] [/input-12, 8] 
split level 2: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 72] [/input-12, 59] [/input-12, 72] [/input-12, 59] 
split level 3: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 6] [/input-12, 72] [/input-12, 6] [/input-12, 6] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.445298433303833
10 lb beta sum: 0.0, worst -0.4451831579208374
Time: prepare 0.0124    bound 0.0950    transfer 0.0007    finalize 0.0023    func 0.1130    
Accumulated time: func 0.2801    prepare 0.0342    bound 0.2439    transfer 0.0020    finalize 0.0050    
all_split False
======================Cut inference begins======================
max lb tensor(0.24742842) min lb tensor(-0.44515109)
Number of Verified Splits: 27 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.014046192169189453 
BICCOS Cumulative time: 0.023833036422729492
Preprocessing time: 0.011591672897338867 Inference time: 0.0011773109436035156 Add cuts time: 0.0006952285766601562 Cut analysis time: 0.0005819797515869141
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.19721 (2), -0.19663 (2), -0.19512 (2), -0.19194 (2), -0.18706 (2), -0.18079 (2), -0.18070 (2), -0.17756 (2), -0.17713 (2), -0.17694 (2), -0.17566 (2), -0.17544 (2), -0.16936 (2), -0.15780 (2), -0.15107 (2), -0.14526 (2), -0.14252 (2), -0.14146 (2), -0.13971 (2), -0.13862 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0127    solve 0.1131    add 0.0813    
Accumulated time: pickout 0.0014    decision 0.5309    set_bounds 0.0210    solve 0.2272    add 0.1492    
Current (lb-rhs): -0.19721388816833496
100 domains visited
Cumulative time: 1.012345790863037

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 59] [/input-12, 59] [/input-12, 31] [/input-12, 8] [/input-12, 31] 
split level 1: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 31] [/input-12, 72] [/input-12, 72] [/input-12, 59] [/input-12, 31] [/input-12, 72] 
split level 2: [/input-12, 72] [/input-12, 72] [/input-12, 61] [/input-12, 61] [/input-12, 72] [/input-12, 6] [/input-12, 61] [/input-12, 72] [/input-12, 72] [/input-12, 6] 
split level 3: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-8, 1636] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1755073070526123
10 lb beta sum: 0.771496057510376, worst -0.14859643578529358
Time: prepare 0.0062    bound 0.1164    transfer 0.0007    finalize 0.0024    func 0.1283    
Accumulated time: func 0.4085    prepare 0.0406    bound 0.3602    transfer 0.0027    finalize 0.0074    
all_split False
======================Cut inference begins======================
max lb tensor(0.73487532) min lb tensor(-0.14463858)
Number of Verified Splits: 250 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 15
#cuts 4-6: 9
#cuts >= 20: 0
BICCOS time: 0.029768943786621094 
BICCOS Cumulative time: 0.053601980209350586
Preprocessing time: 0.011370420455932617 Inference time: 0.011960983276367188 Add cuts time: 0.005761146545410156 Cut analysis time: 0.0006763935089111328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11632 (3), -0.11607 (3), -0.11482 (3), -0.11201 (3), -0.11144 (3), -0.11024 (3), -0.11016 (3), -0.10989 (3), -0.10925 (3), -0.10795 (3), -0.10681 (3), -0.10649 (3), -0.10524 (3), -0.10361 (3), -0.10191 (3), -0.10186 (3), -0.09926 (3), -0.09781 (3), -0.09188 (3), -0.09028 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0154    solve 0.1284    add 0.1047    
Accumulated time: pickout 0.0024    decision 0.5502    set_bounds 0.0365    solve 0.3556    add 0.2539    
Current (lb-rhs): -0.11631982028484344
150 domains visited
Cumulative time: 1.311249017715454

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 59] [/input-12, 31] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 31] 
split level 1: [/input-12, 61] [/input-12, 61] [/input-12, 59] [/input-12, 59] [/input-12, 72] [/input-12, 59] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 59] 
split level 2: [/input-12, 6] [/input-12, 6] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 72] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 6] 
split level 3: [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-12, 6] [/input-8, 1619] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1618468165397644
10 lb beta sum: 1.7259042263031006, worst -0.04894834756851196
Time: prepare 0.0068    bound 0.1314    transfer 0.0007    finalize 0.0020    func 0.1435    
Accumulated time: func 0.5520    prepare 0.0477    bound 0.4916    transfer 0.0034    finalize 0.0094    
all_split False
======================Cut inference begins======================
max lb tensor(0.50891417) min lb tensor(-0.04643667)
Number of Verified Splits: 312 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 12
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.03554177284240723 
BICCOS Cumulative time: 0.08914375305175781
Preprocessing time: 0.011433839797973633 Inference time: 0.014892578125 Add cuts time: 0.00852823257446289 Cut analysis time: 0.0006871223449707031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04644 (4), -0.04642 (4), -0.04641 (4), -0.04640 (4), -0.04636 (4), -0.04634 (4), -0.04560 (4), -0.04550 (4), -0.04486 (4), -0.04486 (4), -0.04484 (4), -0.04479 (4), -0.03941 (4), -0.03940 (4), -0.03836 (4), -0.03815 (4), -0.03063 (4), -0.03061 (4), -0.03043 (4), -0.02889 (4), 
Length of domains: 48
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0151    solve 0.1436    add 0.2340    
Accumulated time: pickout 0.0034    decision 0.5698    set_bounds 0.0515    solve 0.4992    add 0.4879    
Current (lb-rhs): -0.04643666744232178
198 domains visited
Cumulative time: 1.7603492736816406

Shallow-BaB round 5
batch: 48
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 59] [/input-12, 72] [/input-12, 59] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-8, 1636] [/input-8, 1636] [/input-12, 6] [/input-12, 6] [/input-12, 12] [/input-12, 12] [/input-8, 1259] [/input-8, 1259] 
split level 3: [/input-12, 12] [/input-12, 12] [/input-8, 1259] [/input-8, 1259] [/input-8, 1259] [/input-8, 1259] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 1.8460386991500854, worst -0.5160455107688904
10 lb beta sum: 2.360321044921875, worst -0.014736175537109375
Time: prepare 0.0160    bound 0.1300    transfer 0.0012    finalize 0.0022    func 0.1520    
Accumulated time: func 0.7040    prepare 0.0640    bound 0.6216    transfer 0.0047    finalize 0.0116    
all_split False
======================Cut inference begins======================
max lb tensor(0.64480090) min lb tensor(-0.01285321)
Number of Verified Splits: 354 of 384
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 12.
#cuts 1-3: 10
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.03666806221008301 
BICCOS Cumulative time: 0.12581181526184082
Preprocessing time: 0.011020421981811523 Inference time: 0.018936872482299805 Add cuts time: 0.006322145462036133 Cut analysis time: 0.0003886222839355469
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0228    set_bounds 0.0144    solve 0.1521    add 0.0255    
Accumulated time: pickout 0.0045    decision 0.5925    set_bounds 0.0660    solve 0.6513    add 0.5134    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
198 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 6] 
split level 6: [/input-8, 1619] 
split level 7: [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1770370900630951
10 lb beta sum: 0.5427367091178894, worst -0.15272927284240723
Time: prepare 0.0051    bound 0.1131    transfer 0.0005    finalize 0.0014    func 0.1218    
Accumulated time: func 0.8258    prepare 0.0695    bound 0.7348    transfer 0.0052    finalize 0.0130    
all_split False
======================Cut inference begins======================
max lb tensor(1.26888382) min lb tensor(-0.15242624)
Number of Verified Splits: 241 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.42202210426330566
10 lb beta sum: 1.681415319442749, worst -0.31932419538497925
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 10
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.26023316383361816 
BICCOS Cumulative time: 0.386044979095459
Preprocessing time: 0.007040500640869141 Inference time: 0.24554681777954102 Add cuts time: 0.006986856460571289 Cut analysis time: 0.0006589889526367188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15243 (8), -0.14627 (8), -0.13143 (8), -0.12808 (8), -0.12492 (8), -0.12166 (8), -0.10498 (8), -0.09843 (8), -0.08499 (8), -0.07861 (8), -0.05990 (8), -0.05330 (8), -0.03124 (8), -0.02341 (8), -0.00626 (8), 
Length of domains: 15
Time: pickout 0.0004    decision 0.0219    set_bounds 0.0202    solve 0.1219    add 0.0009    
Accumulated time: pickout 0.0049    decision 0.6145    set_bounds 0.0862    solve 0.7732    add 0.5143    
Current (lb-rhs): -0.15242624282836914
213 domains visited
Cumulative time: 2.4435455799102783

BaB round 2
batch: 15
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] 
split level 2: [/input-12, 34] [/input-8, 99] [/input-12, 34] [/input-8, 99] [/input-12, 34] [/input-8, 99] [/input-12, 34] [/input-8, 99] [/input-12, 34] [/input-8, 1644] 
split level 3: [/input-8, 1718] [/input-8, 1644] [/input-8, 476] [/input-8, 428] [/input-8, 1718] [/input-8, 1644] [/input-8, 476] [/input-8, 428] [/input-8, 1718] [/input-8, 99] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1500500738620758
10 lb beta sum: 0.5754807591438293, worst -0.14397388696670532
Time: prepare 0.0049    bound 0.1343    transfer 0.0021    finalize 0.0014    func 0.1443    
Accumulated time: func 0.9700    prepare 0.0747    bound 0.8691    transfer 0.0073    finalize 0.0144    
all_split False
======================Cut inference begins======================
max lb tensor(1.29207754) min lb tensor(-0.14379436)
Number of Verified Splits: 203 of 240
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3685634136199951
10 lb beta sum: 1.6729381084442139, worst -0.09844154119491577
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 10
#cuts 4-6: 10
#cuts 7-9: 6
#cuts >= 20: 0
BICCOS time: 0.27491307258605957 
BICCOS Cumulative time: 0.6609580516815186
Preprocessing time: 0.007105827331542969 Inference time: 0.25870609283447266 Add cuts time: 0.008072376251220703 Cut analysis time: 0.0010287761688232422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14379 (12), -0.14232 (12), -0.13763 (12), -0.13615 (12), -0.12297 (12), -0.12150 (12), -0.12082 (12), -0.11644 (12), -0.11497 (12), -0.11369 (12), -0.11358 (12), -0.10908 (12), -0.09822 (12), -0.09098 (12), -0.08919 (12), -0.08510 (12), -0.06524 (12), -0.06452 (12), -0.06268 (12), -0.06163 (12), 
Length of domains: 37
Time: pickout 0.0014    decision 0.0140    set_bounds 0.0210    solve 0.1444    add 0.0011    
Accumulated time: pickout 0.0063    decision 0.6284    set_bounds 0.1071    solve 0.9176    add 0.5154    
Current (lb-rhs): -0.14379435777664185
250 domains visited
Cumulative time: 2.902132511138916

BaB round 3
batch: 37
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-8, 1259] [/input-12, 34] [/input-8, 1259] [/input-12, 34] [/input-8, 1259] 
split level 1: [/input-8, 1249] [/input-8, 476] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-8, 476] [/input-8, 1249] [/input-8, 1718] [/input-8, 476] [/input-8, 476] 
split level 2: [/input-8, 91] [/input-8, 426] [/input-8, 91] [/input-8, 91] [/input-8, 91] [/input-8, 99] [/input-8, 91] [/input-8, 99] [/input-8, 426] [/input-8, 99] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13171318173408508
10 lb beta sum: 0.47727125883102417, worst -0.12581878900527954
Time: prepare 0.0060    bound 0.1293    transfer 0.0014    finalize 0.0013    func 0.1399    
Accumulated time: func 1.1100    prepare 0.0808    bound 0.9984    transfer 0.0086    finalize 0.0157    
all_split False
======================Cut inference begins======================
max lb tensor(0.27736193) min lb tensor(-0.12569332)
Number of Verified Splits: 116 of 296
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 13
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.02412271499633789 
BICCOS Cumulative time: 0.6850807666778564
Preprocessing time: 0.008550882339477539 Inference time: 0.013020992279052734 Add cuts time: 0.001967906951904297 Cut analysis time: 0.0005829334259033203
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12569 (15), -0.12446 (15), -0.12419 (15), -0.12296 (15), -0.11867 (15), -0.11845 (15), -0.11829 (15), -0.11820 (15), -0.11717 (15), -0.11694 (15), -0.11694 (15), -0.11678 (15), -0.11670 (15), -0.11543 (15), -0.11442 (15), -0.11412 (15), -0.11295 (15), -0.11292 (15), -0.11261 (15), -0.11143 (15), 
Length of domains: 180
Time: pickout 0.0017    decision 0.0157    set_bounds 0.0209    solve 0.1400    add 0.0022    
Accumulated time: pickout 0.0080    decision 0.6441    set_bounds 0.1280    solve 1.0576    add 0.5176    
Current (lb-rhs): -0.12569332122802734
430 domains visited
Cumulative time: 3.107624053955078

BaB round 4
batch: 180
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 91] [/input-8, 1249] [/input-8, 91] [/input-8, 1249] [/input-8, 1249] [/input-8, 428] [/input-8, 91] [/input-8, 1249] [/input-8, 91] [/input-8, 1249] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12681803107261658
10 lb beta sum: 0.7342753410339355, worst -0.12099272012710571
Time: prepare 0.0072    bound 0.1311    transfer 0.0006    finalize 0.0021    func 0.1434    
Accumulated time: func 1.2534    prepare 0.0882    bound 1.1295    transfer 0.0093    finalize 0.0179    
all_split False
======================Cut inference begins======================
max lb tensor(0.46973032) min lb tensor(-0.12093472)
Number of Verified Splits: 204 of 360
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 19
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.03714251518249512 
BICCOS Cumulative time: 0.7222232818603516
Preprocessing time: 0.010224580764770508 Inference time: 0.02363419532775879 Add cuts time: 0.0027337074279785156 Cut analysis time: 0.0005500316619873047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12093 (16), -0.11968 (16), -0.11941 (16), -0.11816 (16), -0.11354 (16), -0.11308 (16), -0.11208 (16), -0.11202 (16), -0.11156 (16), -0.11056 (16), -0.10961 (16), -0.10809 (16), -0.10491 (16), -0.10468 (16), -0.10385 (16), -0.10340 (16), -0.10315 (16), -0.10296 (16), -0.10234 (16), -0.10144 (16), 
Length of domains: 156
Time: pickout 0.0028    decision 0.0227    set_bounds 0.0155    solve 0.1435    add 0.0019    
Accumulated time: pickout 0.0108    decision 0.6668    set_bounds 0.1435    solve 1.2011    add 0.5195    
Current (lb-rhs): -0.12093472480773926
586 domains visited
Cumulative time: 3.3324170112609863

BaB round 5
batch: 156
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1249] [/input-8, 1580] [/input-8, 1249] [/input-8, 1580] [/input-8, 1249] [/input-8, 1580] [/input-8, 1249] [/input-8, 1580] [/input-8, 1241] [/input-8, 1249] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12308090925216675
10 lb beta sum: 1.0969001054763794, worst -0.11728426814079285
Time: prepare 0.0063    bound 0.1309    transfer 0.0015    finalize 0.0014    func 0.1423    
Accumulated time: func 1.3957    prepare 0.0948    bound 1.2604    transfer 0.0108    finalize 0.0193    
all_split False
======================Cut inference begins======================
max lb tensor(0.62374890) min lb tensor(-0.11723292)
Number of Verified Splits: 223 of 312
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.03976607322692871 
BICCOS Cumulative time: 0.7619893550872803
Preprocessing time: 0.009028911590576172 Inference time: 0.027373790740966797 Add cuts time: 0.0028221607208251953 Cut analysis time: 0.0005412101745605469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11723 (17), -0.11595 (17), -0.11569 (17), -0.11441 (17), -0.10976 (17), -0.10928 (17), -0.10835 (17), -0.10821 (17), -0.10774 (17), -0.10680 (17), -0.10588 (17), -0.10434 (17), -0.10097 (17), -0.10089 (17), -0.09984 (17), -0.09943 (17), -0.09934 (17), -0.09914 (17), -0.09867 (17), -0.09830 (17), 
Length of domains: 89
Time: pickout 0.0027    decision 0.0169    set_bounds 0.0133    solve 0.1424    add 0.0010    
Accumulated time: pickout 0.0135    decision 0.6838    set_bounds 0.1567    solve 1.3434    add 0.5205    
Current (lb-rhs): -0.11723291873931885
675 domains visited
Cumulative time: 3.549772262573242

BaB round 6
batch: 89
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1580] [/input-8, 1580] [/input-8, 428] [/input-8, 1580] [/input-8, 428] [/input-8, 428] [/input-8, 1580] [/input-8, 428] [/input-8, 1580] [/input-8, 1580] 
split level 1: [/input-8, 428] [/input-8, 428] [/input-8, 28] [/input-8, 428] [/input-8, 28] [/input-8, 28] [/input-8, 428] [/input-8, 28] [/input-8, 803] [/input-8, 803] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.112856924533844
10 lb beta sum: 1.1880385875701904, worst -0.10712403059005737
Time: prepare 0.0070    bound 0.1359    transfer 0.0006    finalize 0.0017    func 0.1475    
Accumulated time: func 1.5431    prepare 0.1020    bound 1.3963    transfer 0.0115    finalize 0.0209    
all_split False
======================Cut inference begins======================
max lb tensor(0.42875338) min lb tensor(-0.10708350)
Number of Verified Splits: 242 of 356
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 20
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.04582095146179199 
BICCOS Cumulative time: 0.8078103065490723
Preprocessing time: 0.010313749313354492 Inference time: 0.032077789306640625 Add cuts time: 0.0027594566345214844 Cut analysis time: 0.0006699562072753906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10708 (19), -0.10581 (19), -0.10554 (19), -0.10468 (19), -0.10427 (19), -0.10313 (19), -0.10289 (19), -0.10134 (19), -0.09967 (19), -0.09918 (19), -0.09812 (19), -0.09764 (19), -0.09755 (19), -0.09691 (19), -0.09600 (19), -0.09598 (19), -0.09536 (19), -0.09527 (19), -0.09456 (19), -0.09444 (19), 
Length of domains: 114
Time: pickout 0.0022    decision 0.0222    set_bounds 0.0164    solve 0.1476    add 0.0023    
Accumulated time: pickout 0.0156    decision 0.7060    set_bounds 0.1732    solve 1.4910    add 0.5227    
Current (lb-rhs): -0.10708349943161011
789 domains visited
Cumulative time: 3.78743839263916

BaB round 7
batch: 114
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 476] [/input-8, 1929] [/input-8, 476] [/input-8, 1929] [/input-8, 1929] [/input-8, 1929] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11063066124916077
10 lb beta sum: 1.076538324356079, worst -0.10491243004798889
Time: prepare 0.0047    bound 0.1335    transfer 0.0006    finalize 0.0012    func 0.1415    
Accumulated time: func 1.6846    prepare 0.1068    bound 1.5297    transfer 0.0120    finalize 0.0221    
all_split False
======================Cut inference begins======================
max lb tensor(0.00894511) min lb tensor(-0.10489595)
Number of Verified Splits: 32 of 228
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 20
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.012992620468139648 
BICCOS Cumulative time: 0.8208029270172119
Preprocessing time: 0.006966829299926758 Inference time: 0.004223823547363281 Add cuts time: 0.0008094310760498047 Cut analysis time: 0.0009925365447998047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10490 (20), -0.10378 (20), -0.10335 (20), -0.10248 (20), -0.10224 (20), -0.10093 (20), -0.10076 (20), -0.09921 (20), -0.09726 (20), -0.09682 (20), -0.09572 (20), -0.09543 (20), -0.09528 (20), -0.09444 (20), -0.09388 (20), -0.09358 (20), -0.09306 (20), -0.09289 (20), -0.09255 (20), -0.09203 (20), 
Length of domains: 196
Time: pickout 0.0024    decision 0.0150    set_bounds 0.0097    solve 0.1415    add 0.0015    
Accumulated time: pickout 0.0180    decision 0.7210    set_bounds 0.1828    solve 1.6325    add 0.5242    
Current (lb-rhs): -0.1048959493637085
985 domains visited
Cumulative time: 3.971004009246826

BaB round 8
batch: 196
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1929] [/input-8, 1929] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 428] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 428] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.10386335849761963
10 lb beta sum: 1.1143856048583984, worst -0.09660500288009644
Time: prepare 0.0078    bound 0.1334    transfer 0.0007    finalize 0.0017    func 0.1461    
Accumulated time: func 1.8307    prepare 0.1148    bound 1.6632    transfer 0.0128    finalize 0.0238    
all_split False
======================Cut inference begins======================
max lb tensor(0.04106337) min lb tensor(-0.09658813)
Number of Verified Splits: 45 of 392
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 21
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.019678115844726562 
BICCOS Cumulative time: 0.8404810428619385
Preprocessing time: 0.011274337768554688 Inference time: 0.0061855316162109375 Add cuts time: 0.0009729862213134766 Cut analysis time: 0.001245260238647461
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09659 (21), -0.09518 (21), -0.09511 (21), -0.09509 (21), -0.09476 (21), -0.09412 (21), -0.09368 (21), -0.09362 (21), -0.09327 (21), -0.09296 (21), -0.09260 (21), -0.09208 (21), -0.09181 (21), -0.09143 (21), -0.09056 (21), -0.09029 (21), -0.08849 (21), -0.08816 (21), -0.08811 (21), -0.08791 (21), 
Length of domains: 347
Time: pickout 0.0031    decision 0.0193    set_bounds 0.0173    solve 0.1463    add 0.0033    
Accumulated time: pickout 0.0211    decision 0.7403    set_bounds 0.2001    solve 1.7788    add 0.5275    
Current (lb-rhs): -0.096588134765625
1332 domains visited
Cumulative time: 4.180636405944824

BaB round 9
batch: 347
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09967991709709167
10 lb beta sum: 1.1093580722808838, worst -0.09240764379501343
Time: prepare 0.0138    bound 0.1421    transfer 0.0013    finalize 0.1545    func 0.3162    
Accumulated time: func 2.1469    prepare 0.1288    bound 1.8052    transfer 0.0141    finalize 0.1782    
all_split False
======================Cut inference begins======================
max lb tensor(0.04167056) min lb tensor(-0.09238255)
Number of Verified Splits: 144 of 694
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 23
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.04634499549865723 
BICCOS Cumulative time: 0.8868260383605957
Preprocessing time: 0.020359516143798828 Inference time: 0.02300286293029785 Add cuts time: 0.002305746078491211 Cut analysis time: 0.0006768703460693359
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09238 (22), -0.09094 (22), -0.09092 (22), -0.09089 (22), -0.09045 (22), -0.08989 (22), -0.08944 (22), -0.08942 (22), -0.08896 (22), -0.08868 (22), -0.08837 (22), -0.08791 (22), -0.08749 (22), -0.08716 (22), -0.08663 (22), -0.08639 (22), -0.08597 (22), -0.08514 (22), -0.08495 (22), -0.08444 (22), 
Length of domains: 550
Time: pickout 0.0062    decision 0.0339    set_bounds 0.0301    solve 0.3164    add 0.0045    
Accumulated time: pickout 0.0273    decision 0.7742    set_bounds 0.2302    solve 2.0951    add 0.5320    
Current (lb-rhs): -0.09238255023956299
1882 domains visited
Cumulative time: 4.619783878326416

BaB round 10
batch: 550
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 803] [/input-8, 1963] [/input-8, 476] [/input-8, 1963] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09528025984764099
10 lb beta sum: 1.1391868591308594, worst -0.0880441665649414
Time: prepare 0.0223    bound 0.1431    transfer 0.0033    finalize 0.0051    func 0.1810    
Accumulated time: func 2.3279    prepare 0.1513    bound 1.9483    transfer 0.0174    finalize 0.1834    
all_split False
======================Cut inference begins======================
max lb tensor(0.30256838) min lb tensor(-0.08803183)
Number of Verified Splits: 273 of 1100
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.07901668548583984 
BICCOS Cumulative time: 0.9658427238464355
Preprocessing time: 0.032703399658203125 Inference time: 0.04181361198425293 Add cuts time: 0.003930091857910156 Cut analysis time: 0.0005695819854736328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08803 (23), -0.08665 (23), -0.08660 (23), -0.08653 (23), -0.08615 (23), -0.08576 (23), -0.08515 (23), -0.08510 (23), -0.08465 (23), -0.08453 (23), -0.08425 (23), -0.08372 (23), -0.08332 (23), -0.08302 (23), -0.08219 (23), -0.08215 (23), -0.08181 (23), -0.08091 (23), -0.08065 (23), -0.08032 (23), 
Length of domains: 827
Time: pickout 0.0086    decision 0.0456    set_bounds 0.0482    solve 0.1813    add 0.0050    
Accumulated time: pickout 0.0359    decision 0.8198    set_bounds 0.2783    solve 2.2764    add 0.5369    
Current (lb-rhs): -0.0880318284034729
2709 domains visited
Cumulative time: 4.9900758266448975

BaB round 11
batch: 827
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1963] [/input-8, 1579] [/input-8, 28] [/input-8, 28] [/input-8, 28] [/input-8, 1579] [/input-8, 1579] [/input-8, 426] [/input-8, 426] [/input-8, 28] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08915343880653381
10 lb beta sum: 1.364572286605835, worst -0.07977133989334106
Time: prepare 0.0326    bound 0.1605    transfer 0.0026    finalize 0.0074    func 0.2138    
Accumulated time: func 2.5417    prepare 0.1841    bound 2.1088    transfer 0.0200    finalize 0.1908    
all_split False
======================Cut inference begins======================
max lb tensor(0.09484953) min lb tensor(-0.07975763)
Number of Verified Splits: 429 of 1654
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.12540960311889648 
BICCOS Cumulative time: 1.091252326965332
Preprocessing time: 0.05002546310424805 Inference time: 0.06910443305969238 Add cuts time: 0.005667924880981445 Cut analysis time: 0.0006117820739746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07976 (24), -0.07962 (24), -0.07838 (24), -0.07832 (24), -0.07827 (24), -0.07826 (24), -0.07820 (24), -0.07813 (24), -0.07796 (24), -0.07775 (24), -0.07749 (24), -0.07732 (24), -0.07688 (24), -0.07683 (24), -0.07677 (24), -0.07671 (24), -0.07646 (24), -0.07625 (24), -0.07622 (24), -0.07620 (24), 
Length of domains: 1225
Time: pickout 0.0157    decision 0.0608    set_bounds 0.0710    solve 0.2141    add 0.0091    
Accumulated time: pickout 0.0517    decision 0.8806    set_bounds 0.3494    solve 2.4905    add 0.5460    
Current (lb-rhs): -0.07975763082504272
3934 domains visited
Cumulative time: 5.490561485290527

BaB round 12
batch: 1225
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 28] [/input-8, 1579] [/input-8, 426] [/input-8, 426] [/input-8, 28] [/input-8, 28] [/input-8, 28] [/input-8, 28] [/input-8, 1579] [/input-8, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 1.6065034866333008, worst -0.0752066969871521
10 lb beta sum: 1.6065034866333008, worst -0.07515400648117065
Time: prepare 0.1048    bound 0.1996    transfer 0.0099    finalize 0.1399    func 0.4707    
Accumulated time: func 3.0123    prepare 0.2892    bound 2.3084    transfer 0.0299    finalize 0.3307    
all_split False
======================Cut inference begins======================
max lb tensor(0.00694382) min lb tensor(-0.07513565)
Number of Verified Splits: 186 of 2450
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.10832786560058594 
BICCOS Cumulative time: 1.199580192565918
Preprocessing time: 0.0742037296295166 Inference time: 0.03140878677368164 Add cuts time: 0.002074003219604492 Cut analysis time: 0.0006413459777832031
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07514 (25), -0.07493 (25), -0.07370 (25), -0.07368 (25), -0.07367 (25), -0.07364 (25), -0.07352 (25), -0.07350 (25), -0.07344 (25), -0.07331 (25), -0.07330 (25), -0.07317 (25), -0.07286 (25), -0.07265 (25), -0.07221 (25), -0.07218 (25), -0.07217 (25), -0.07202 (25), -0.07200 (25), -0.07199 (25), 
Length of domains: 2264
Time: pickout 0.0226    decision 0.0803    set_bounds 0.1048    solve 0.4712    add 0.0133    
Accumulated time: pickout 0.0743    decision 0.9609    set_bounds 0.4541    solve 2.9617    add 0.5593    
Current (lb-rhs): -0.07513564825057983
6198 domains visited
Cumulative time: 6.295318365097046

BaB round 13
batch: 2264
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
cut re-enabled after branching node selection
0 lb beta sum: 1.600246548652649, worst -0.07513588666915894
10 lb beta sum: 1.600246548652649, worst -0.07512599229812622
Time: prepare 0.1981    bound 0.3087    transfer 0.0427    finalize 0.0220    func 0.6012    
Accumulated time: func 3.6135    prepare 0.4875    bound 2.6172    transfer 0.0726    finalize 0.3527    
all_split False
======================Cut inference begins======================
max lb tensor(0.33017778) min lb tensor(-0.07512122)
Number of Verified Splits: 2285 of 4528
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 22
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.7169189453125 
BICCOS Cumulative time: 1.916499137878418
Preprocessing time: 0.13861298561096191 Inference time: 0.556710958480835 Add cuts time: 0.020911693572998047 Cut analysis time: 0.0006833076477050781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07512 (26), -0.07488 (26), -0.07366 (26), -0.07365 (26), -0.07365 (26), -0.07362 (26), -0.07344 (26), -0.07338 (26), -0.07335 (26), -0.07325 (26), -0.07315 (26), -0.07311 (26), -0.07284 (26), -0.07258 (26), -0.07217 (26), -0.07216 (26), -0.07215 (26), -0.07194 (26), -0.07185 (26), -0.07183 (26), 
Length of domains: 2243
Time: pickout 0.0374    decision 0.1373    set_bounds 0.1869    solve 0.6024    add 0.0472    
Accumulated time: pickout 0.1116    decision 1.0982    set_bounds 0.6410    solve 3.5641    add 0.6066    
Current (lb-rhs): -0.07512122392654419
8441 domains visited
Cumulative time: 8.047536134719849

BaB round 14
batch: 2243
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
cut re-enabled after branching node selection
0 lb beta sum: 1.5996243953704834, worst -0.07175678014755249
10 lb beta sum: 1.5996243953704834, worst -0.07174378633499146
Time: prepare 0.1981    bound 0.3084    transfer 0.0124    finalize 0.0246    func 0.5738    
Accumulated time: func 4.1873    prepare 0.6858    bound 2.9256    transfer 0.0850    finalize 0.3773    
all_split False
======================Cut inference begins======================
max lb tensor(0.05691409) min lb tensor(-0.07173783)
Number of Verified Splits: 2195 of 4486
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 22
#cuts 4-6: 14
#cuts >= 20: 0
BICCOS time: 0.7497456073760986 
BICCOS Cumulative time: 2.6662447452545166
Preprocessing time: 0.13805222511291504 Inference time: 0.5734424591064453 Add cuts time: 0.03725552558898926 Cut analysis time: 0.0009953975677490234
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07174 (27), -0.07155 (27), -0.07030 (27), -0.07029 (27), -0.07028 (27), -0.07023 (27), -0.07012 (27), -0.07004 (27), -0.06994 (27), -0.06987 (27), -0.06979 (27), -0.06968 (27), -0.06944 (27), -0.06923 (27), -0.06880 (27), -0.06879 (27), -0.06877 (27), -0.06862 (27), -0.06844 (27), -0.06843 (27), 
Length of domains: 2291
Time: pickout 0.0444    decision 0.1332    set_bounds 0.1955    solve 0.5750    add 0.0064    
Accumulated time: pickout 0.1561    decision 1.2314    set_bounds 0.8366    solve 4.1391    add 0.6129    
Current (lb-rhs): -0.07173782587051392
10732 domains visited
Cumulative time: 9.777001857757568

BaB round 15
batch: 2291
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 418] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07266435027122498
10 lb beta sum: 1.1081652641296387, worst -0.066020667552948
Time: prepare 0.0971    bound 0.3150    transfer 0.0062    finalize 0.0204    func 0.4689    
Accumulated time: func 4.6562    prepare 0.7832    bound 3.2406    transfer 0.0911    finalize 0.3977    
all_split False
======================Cut inference begins======================
max lb tensor(0.23169261) min lb tensor(-0.06600875)
Number of Verified Splits: 394 of 4582
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 25
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.22166705131530762 
BICCOS Cumulative time: 2.887911796569824
Preprocessing time: 0.1411452293395996 Inference time: 0.07342672348022461 Add cuts time: 0.006369829177856445 Cut analysis time: 0.0007252693176269531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06601 (28), -0.06592 (28), -0.06581 (28), -0.06570 (28), -0.06470 (28), -0.06470 (28), -0.06462 (28), -0.06450 (28), -0.06448 (28), -0.06445 (28), -0.06444 (28), -0.06441 (28), -0.06440 (28), -0.06439 (28), -0.06430 (28), -0.06430 (28), -0.06420 (28), -0.06419 (28), -0.06418 (28), -0.06413 (28), 
Length of domains: 4188
Time: pickout 0.0415    decision 0.1361    set_bounds 0.2042    solve 0.4703    add 0.0105    
Accumulated time: pickout 0.1975    decision 1.3675    set_bounds 1.0408    solve 4.6094    add 0.6234    
Current (lb-rhs): -0.06600874662399292
14920 domains visited
Cumulative time: 10.87106442451477

BaB round 16
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.069149911403656
10 lb beta sum: 1.3277660608291626, worst -0.06249713897705078
Time: prepare 0.1724    bound 0.4959    transfer 0.0289    finalize 0.1975    func 0.9483    
Accumulated time: func 5.6045    prepare 0.9558    bound 3.7365    transfer 0.1201    finalize 0.5952    
all_split False
======================Cut inference begins======================
max lb tensor(0.48082030) min lb tensor(-0.06247002)
Number of Verified Splits: 6284 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 32
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 1.7566680908203125 
BICCOS Cumulative time: 4.644579887390137
Preprocessing time: 0.25903820991516113 Inference time: 1.4303536415100098 Add cuts time: 0.06644511222839355 Cut analysis time: 0.0008311271667480469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06439 (28), -0.06288 (28), -0.06268 (28), -0.06247 (29), -0.06237 (29), -0.06226 (29), -0.06218 (29), -0.06180 (28), -0.06140 (29), -0.06123 (29), -0.06117 (28), -0.06102 (29), -0.06101 (29), -0.06100 (29), -0.06098 (29), -0.06096 (29), -0.06087 (29), -0.06086 (29), -0.06075 (29), -0.06072 (29), 
Length of domains: 2000
Time: pickout 0.0683    decision 0.4024    set_bounds 0.3621    solve 0.9501    add 0.0093    
Accumulated time: pickout 0.2658    decision 1.7699    set_bounds 1.4028    solve 5.5595    add 0.6327    
Current (lb-rhs): -0.06438565254211426
16828 domains visited
current_vram/total_varm: 9.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 14.49311089515686

BaB round 17
batch: 2000
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06759834289550781
10 lb beta sum: 1.836090087890625, worst -0.06092560291290283
Time: prepare 0.0811    bound 0.2831    transfer 0.0113    finalize 0.0186    func 0.4202    
Accumulated time: func 6.0248    prepare 1.0372    bound 4.0196    transfer 0.1314    finalize 0.6138    
all_split False
======================Cut inference begins======================
max lb tensor(0.27918917) min lb tensor(-0.06091142)
Number of Verified Splits: 2112 of 4000
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 34
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.5486471652984619 
BICCOS Cumulative time: 5.193227052688599
Preprocessing time: 0.12668132781982422 Inference time: 0.4031214714050293 Add cuts time: 0.017914295196533203 Cut analysis time: 0.0009300708770751953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06091 (29), -0.05941 (29), -0.05908 (29), -0.05849 (30), -0.05836 (29), -0.05830 (30), -0.05757 (29), -0.05713 (30), -0.05713 (30), -0.05700 (30), -0.05698 (30), -0.05695 (29), -0.05686 (30), -0.05685 (29), -0.05682 (30), -0.05679 (30), -0.05676 (30), -0.05674 (30), -0.05667 (30), -0.05661 (30), 
Length of domains: 1888
Time: pickout 0.0342    decision 0.1206    set_bounds 0.1752    solve 0.4209    add 0.0077    
Accumulated time: pickout 0.2999    decision 1.8905    set_bounds 1.5780    solve 5.9804    add 0.6405    
Current (lb-rhs): -0.06091141700744629
18716 domains visited
Cumulative time: 15.823192119598389

BaB round 18
batch: 1888
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 755] [/input-8, 755] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06361132860183716
10 lb beta sum: 2.042666435241699, worst -0.0534592866897583
Time: prepare 0.0783    bound 0.2715    transfer 0.0163    finalize 0.0179    func 0.4084    
Accumulated time: func 6.4332    prepare 1.1158    bound 4.2911    transfer 0.1477    finalize 0.6317    
all_split False
======================Cut inference begins======================
max lb tensor(0.00774676) min lb tensor(-0.05339289)
Number of Verified Splits: 24 of 3776
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 34
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.12480878829956055 
BICCOS Cumulative time: 5.318035840988159
Preprocessing time: 0.11638379096984863 Inference time: 0.0063860416412353516 Add cuts time: 0.001268625259399414 Cut analysis time: 0.0007703304290771484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05339 (30), -0.05202 (30), -0.05187 (30), -0.05167 (31), -0.05162 (30), -0.05146 (31), -0.05092 (30), -0.05050 (30), -0.05028 (31), -0.05016 (31), -0.05014 (30), -0.05012 (30), -0.05010 (31), -0.05008 (31), -0.05006 (31), -0.05004 (31), -0.05004 (31), -0.04994 (31), -0.04982 (31), -0.04968 (31), 
Length of domains: 3752
Time: pickout 0.0324    decision 0.1143    set_bounds 0.3073    solve 0.4096    add 0.0115    
Accumulated time: pickout 0.3324    decision 2.0048    set_bounds 1.8853    solve 6.3900    add 0.6520    
Current (lb-rhs): -0.053392887115478516
22468 domains visited
Cumulative time: 16.831207990646362

BaB round 19
batch: 3752
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] 
cut re-enabled after branching node selection
0 lb beta sum: 2.416321277618408, worst -0.05027437210083008
10 lb beta sum: 2.416321277618408, worst -0.05027031898498535
Time: prepare 0.3279    bound 0.4669    transfer 0.0271    finalize 0.0336    func 0.9047    
Accumulated time: func 7.3378    prepare 1.4439    bound 4.7580    transfer 0.1748    finalize 0.6654    
all_split False
======================Cut inference begins======================
max lb tensor(0.00725198) min lb tensor(-0.05024409)
Number of Verified Splits: 537 of 7504
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 34
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.3633592128753662 
BICCOS Cumulative time: 5.681395053863525
Preprocessing time: 0.23191404342651367 Inference time: 0.12199926376342773 Add cuts time: 0.008632659912109375 Cut analysis time: 0.0008132457733154297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05024 (31), -0.04886 (31), -0.04874 (31), -0.04816 (31), -0.04795 (32), -0.04773 (32), -0.04753 (31), -0.04735 (31), -0.04665 (31), -0.04663 (31), -0.04649 (32), -0.04648 (32), -0.04645 (32), -0.04642 (32), -0.04632 (32), -0.04630 (32), -0.04623 (32), -0.04618 (32), -0.04609 (32), -0.04602 (31), 
Length of domains: 6967
Time: pickout 0.0741    decision 0.2188    set_bounds 0.4785    solve 0.9066    add 0.0253    
Accumulated time: pickout 0.4065    decision 2.2236    set_bounds 2.3638    solve 7.2966    add 0.6773    
Current (lb-rhs): -0.05024409294128418
29435 domains visited
Cumulative time: 18.912883043289185

BaB round 20
batch: 6967
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] 
cut re-enabled after branching node selection
0 lb beta sum: 2.385211944580078, worst -0.04795205593109131
10 lb beta sum: 2.385211944580078, worst -0.04795253276824951
Time: prepare 0.6079    bound 0.8060    transfer 0.0522    finalize 0.0635    func 1.6210    
Accumulated time: func 8.9589    prepare 2.0521    bound 5.5640    transfer 0.2270    finalize 0.7289    
all_split False
======================Cut inference begins======================
max lb tensor(0.00593948) min lb tensor(-0.04794490)
Number of Verified Splits: 1200 of 13934
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 34
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.9666438102722168 
BICCOS Cumulative time: 6.648038864135742
Preprocessing time: 0.6575567722320557 Inference time: 0.28618741035461426 Add cuts time: 0.021929025650024414 Cut analysis time: 0.0009706020355224609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04794 (33), -0.04773 (33), -0.04644 (33), -0.04640 (32), -0.04639 (33), -0.04629 (33), -0.04622 (33), -0.04617 (33), -0.04617 (33), -0.04607 (33), -0.04594 (33), -0.04585 (33), -0.04555 (33), -0.04534 (33), -0.04500 (32), -0.04490 (32), -0.04488 (33), -0.04479 (33), -0.04478 (33), -0.04474 (33), 
Length of domains: 12734
Time: pickout 0.1380    decision 0.5590    set_bounds 0.7987    solve 1.6237    add 0.0412    
Accumulated time: pickout 0.5446    decision 2.7826    set_bounds 3.1626    solve 8.9204    add 0.7185    
Current (lb-rhs): -0.04794490337371826
42169 domains visited
Cumulative time: 23.068910598754883

BaB round 21
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1241] [/input-8, 1241] [/input-8, 722] [/input-8, 755] [/input-8, 755] [/input-8, 722] [/input-8, 722] [/input-8, 755] [/input-8, 755] [/input-8, 722] 
cut re-enabled after branching node selection
0 lb beta sum: 2.340696096420288, worst -0.04556030035018921
10 lb beta sum: 2.340696096420288, worst -0.04551196098327637
Time: prepare 0.7158    bound 0.9320    transfer 0.0752    finalize 0.3056    func 2.1362    
Accumulated time: func 11.0950    prepare 2.7682    bound 6.4960    transfer 0.3022    finalize 1.0345    
all_split False
======================Cut inference begins======================
max lb tensor(0.01063347) min lb tensor(-0.04550445)
Number of Verified Splits: 5097 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 34
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 2.0809271335601807 
BICCOS Cumulative time: 8.728965997695923
Preprocessing time: 0.5393927097320557 Inference time: 1.4787929058074951 Add cuts time: 0.061835527420043945 Cut analysis time: 0.0009059906005859375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04640 (32), -0.04639 (33), -0.04617 (33), -0.04550 (34), -0.04529 (34), -0.04500 (32), -0.04490 (32), -0.04488 (33), -0.04474 (33), -0.04467 (33), -0.04460 (33), -0.04452 (33), -0.04444 (32), -0.04440 (33), -0.04432 (33), -0.04401 (33), -0.04400 (34), -0.04388 (34), -0.04385 (34), -0.04378 (34), 
Length of domains: 15829
Time: pickout 0.1398    decision 0.4445    set_bounds 0.9804    solve 2.1392    add 0.0321    
Accumulated time: pickout 0.6844    decision 3.2271    set_bounds 4.1430    solve 11.0595    add 0.7506    
Current (lb-rhs): -0.04639875888824463
53456 domains visited
current_vram/total_varm: 22.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 28.961182117462158

BaB round 22
batch: 15829
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05300867557525635
10 lb beta sum: 1.9058936834335327, worst -0.04643082618713379
Time: prepare 0.6635    bound 1.7285    transfer 0.1560    finalize 0.1758    func 2.9303    
Accumulated time: func 14.0254    prepare 3.4321    bound 8.2245    transfer 0.4582    finalize 1.2103    
all_split False
======================Cut inference begins======================
max lb tensor(0.24792480) min lb tensor(-0.04639876)
Number of Verified Splits: 7072 of 31658
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 35
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 2.7921249866485596 
BICCOS Cumulative time: 11.521090984344482
Preprocessing time: 1.0140717029571533 Inference time: 1.6912055015563965 Add cuts time: 0.08593416213989258 Cut analysis time: 0.0009136199951171875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04640 (33), -0.04499 (33), -0.04488 (33), -0.04481 (33), -0.04399 (34), -0.04378 (34), -0.04371 (33), -0.04350 (33), -0.04341 (33), -0.04331 (33), -0.04249 (34), -0.04237 (34), -0.04235 (34), -0.04226 (34), -0.04221 (33), -0.04212 (34), -0.04209 (33), -0.04209 (33), -0.04206 (33), -0.04193 (33), 
Length of domains: 24586
Time: pickout 0.3213    decision 0.8761    set_bounds 2.0384    solve 3.2559    add 0.0707    
Accumulated time: pickout 1.0057    decision 4.1033    set_bounds 6.1814    solve 14.3155    add 0.8213    
Current (lb-rhs): -0.04639875888824463
78042 domains visited
Cumulative time: 38.42302751541138

BaB round 23
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 401] [/input-8, 401] 
cut re-enabled after branching node selection
0 lb beta sum: 2.2014408111572266, worst -0.044148802757263184
10 lb beta sum: 2.214519500732422, worst -0.044105350971221924
Time: prepare 1.4513    bound 1.7883    transfer 0.1500    finalize 0.1672    func 3.7704    
Accumulated time: func 17.7957    prepare 4.8838    bound 10.0129    transfer 0.6082    finalize 1.3774    
all_split False
======================Cut inference begins======================
max lb tensor(0.23933339) min lb tensor(-0.04409617)
Number of Verified Splits: 9850 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 40.
#cuts 1-3: 36
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 4.116046905517578 
BICCOS Cumulative time: 15.63713788986206
Preprocessing time: 1.0647690296173096 Inference time: 2.868919849395752 Add cuts time: 0.18132853507995605 Cut analysis time: 0.0010294914245605469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04410 (34), -0.04269 (34), -0.04259 (34), -0.04257 (34), -0.04119 (34), -0.04117 (34), -0.04113 (34), -0.04105 (34), -0.04045 (35), -0.04024 (35), -0.04010 (35), -0.03989 (35), -0.03966 (34), -0.03961 (34), -0.03958 (34), -0.03952 (34), -0.03946 (34), -0.03923 (36), -0.03903 (35), -0.03894 (35), 
Length of domains: 31120
Time: pickout 0.2999    decision 1.9695    set_bounds 2.3110    solve 3.7768    add 0.0569    
Accumulated time: pickout 1.3056    decision 6.0727    set_bounds 8.4924    solve 18.0922    add 0.8782    
Current (lb-rhs): -0.044096171855926514
100960 domains visited
current_vram/total_varm: 36.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 51.119014501571655

BaB round 24
batch: 31120
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 401] [/input-8, 722] [/input-8, 722] [/input-8, 401] [/input-8, 401] [/input-8, 401] [/input-8, 401] [/input-8, 755] [/input-8, 722] [/input-8, 401] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04681199789047241
10 lb beta sum: 1.8635313510894775, worst -0.04020661115646362
Time: prepare 1.3014    bound 3.3660    transfer 0.3111    finalize 0.3723    func 6.2848    
Accumulated time: func 24.0805    prepare 6.1856    bound 13.3788    transfer 0.9193    finalize 1.7497    
all_split False
======================Cut inference begins======================
max lb tensor(0.48347235) min lb tensor(-0.04018420)
Number of Verified Splits: 19178 of 62240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 39
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 7.782691240310669 
BICCOS Cumulative time: 23.41982913017273
Preprocessing time: 2.003662586212158 Inference time: 5.509507417678833 Add cuts time: 0.2683069705963135 Cut analysis time: 0.0012142658233642578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04018 (35), -0.03906 (35), -0.03876 (35), -0.03871 (35), -0.03869 (35), -0.03813 (36), -0.03784 (36), -0.03776 (36), -0.03764 (35), -0.03756 (35), -0.03748 (36), -0.03743 (35), -0.03728 (35), -0.03727 (35), -0.03724 (35), -0.03719 (35), -0.03684 (35), -0.03673 (36), -0.03663 (36), -0.03647 (36), 
Length of domains: 43062
Time: pickout 0.6697    decision 3.1448    set_bounds 3.9493    solve 6.2946    add 0.1190    
Accumulated time: pickout 1.9753    decision 9.2175    set_bounds 12.4417    solve 24.3869    add 0.9972    
Current (lb-rhs): -0.040184199810028076
144022 domains visited
Cumulative time: 73.35727119445801

BaB round 25
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.044448405504226685
10 lb beta sum: 1.9029743671417236, worst -0.037854552268981934
Time: prepare 1.4213    bound 8.7170    transfer 0.3255    finalize 0.3996    func 11.2959    
Accumulated time: func 35.3764    prepare 7.6074    bound 22.0959    transfer 1.2447    finalize 2.1493    
all_split False
======================Cut inference begins======================
max lb tensor(0.48126054) min lb tensor(-0.03783405)
Number of Verified Splits: 26224 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 41.
#cuts 1-3: 37
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 10.888710021972656 
BICCOS Cumulative time: 34.308539152145386
Preprocessing time: 2.8876140117645264 Inference time: 7.542030572891235 Add cuts time: 0.4579615592956543 Cut analysis time: 0.0011038780212402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03783 (36), -0.03743 (35), -0.03673 (36), -0.03647 (36), -0.03642 (36), -0.03635 (36), -0.03632 (36), -0.03632 (37), -0.03618 (36), -0.03602 (37), -0.03600 (35), -0.03592 (35), -0.03533 (36), -0.03523 (36), -0.03522 (36), -0.03514 (35), -0.03510 (37), -0.03497 (36), -0.03494 (36), -0.03494 (36), 
Length of domains: 49606
Time: pickout 0.6142    decision 3.3968    set_bounds 4.4622    solve 11.3107    add 0.1058    
Accumulated time: pickout 2.5895    decision 12.6143    set_bounds 16.9039    solve 35.6975    add 1.1030    
Current (lb-rhs): -0.0378340482711792
183334 domains visited
Cumulative time: 104.51451301574707

BaB round 26
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04181474447250366
10 lb beta sum: 1.9654855728149414, worst -0.03496861457824707
Time: prepare 1.4521    bound 8.7201    transfer 0.3309    finalize 0.3799    func 11.3138    
Accumulated time: func 46.6902    prepare 9.0599    bound 30.8160    transfer 1.5757    finalize 2.5291    
all_split False
======================Cut inference begins======================
max lb tensor(0.47393751) min lb tensor(-0.03493655)
Number of Verified Splits: 56141 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 19.086371421813965 
BICCOS Cumulative time: 53.39491057395935
Preprocessing time: 3.1761789321899414 Inference time: 15.293871402740479 Add cuts time: 0.6158714294433594 Cut analysis time: 0.0004496574401855469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03673 (36), -0.03635 (36), -0.03533 (36), -0.03523 (36), -0.03510 (37), -0.03494 (36), -0.03494 (37), -0.03485 (36), -0.03484 (37), -0.03480 (37), -0.03455 (37), -0.03445 (36), -0.03382 (36), -0.03369 (37), -0.03368 (36), -0.03359 (37), -0.03355 (37), -0.03353 (37), -0.03346 (36), -0.03343 (37), 
Length of domains: 26233
Time: pickout 0.6417    decision 3.3063    set_bounds 4.6972    solve 11.3242    add 0.0483    
Accumulated time: pickout 3.2311    decision 15.9206    set_bounds 21.6011    solve 47.0217    add 1.1513    
Current (lb-rhs): -0.03673452138900757
192729 domains visited
Cumulative time: 144.3614957332611

BaB round 27
batch: 26233
splitting decisions: 
split level 0: [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 1644] [/input-8, 1644] [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 465] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0404205322265625

all verified at 1th iter
Time: prepare 1.1478    bound 0.1856    transfer 0.2559    finalize 0.2705    func 2.7602    
Accumulated time: func 49.4504    prepare 10.2080    bound 31.0016    transfer 1.8316    finalize 2.7996    
all_split False
======================Cut inference begins======================
max lb tensor(0.04794307) min lb tensor(0.00952236)
Number of Verified Splits: 52466 of 52466
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.8195719718933105 
BICCOS Cumulative time: 55.21448254585266
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.5306    decision 2.6178    set_bounds 3.5499    solve 2.7691    add 0.0030    
Accumulated time: pickout 3.7617    decision 18.5384    set_bounds 25.1510    solve 49.7908    add 1.1542    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
192729 domains visited
Cumulative time: 156.11120128631592


Properties batch 3, size 1
Remaining timeout: 42.400028228759766
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 42.39989900588989
Verifying property 4 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26430178]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
        -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26430178]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 438
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 724
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001385211944580078
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2643009424209595
10 lb beta sum: 0.0, worst -0.2643001079559326
Time: prepare 0.0002    bound 0.0914    transfer 0.0002    finalize 0.0001    func 0.0920    
Accumulated time: func 0.0920    prepare 0.0002    bound 0.0914    transfer 0.0002    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 56] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 68] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 34] 
split level 7: [/input-8, 1249] 
split level 8: [/input-8, 1939] 
split level 9: [/input-12, 7] 
split level 10: [/input-8, 157] 
split level 11: [/input-8, 44] 
split level 12: [/input-8, 1259] 
split level 13: [/input-8, 612] 
split level 14: [/input-8, 804] 
split level 15: [/input-8, 811] 
split level 16: [/input-8, 1241] 
split level 17: [/input-8, 1258] 
split level 18: [/input-8, 38] 
split level 19: [/input-8, 1635] 
split level 20: [/input-8, 790] 
split level 21: [/input-8, 347] 
split level 22: [/input-8, 1581] 
split level 23: [/input-8, 139] 
split level 24: [/input-8, 166] 
split level 25: [/input-8, 174] 
split level 26: [/input-8, 1580] 
split level 27: [/input-8, 146] 
split level 28: [/input-8, 42] 
split level 29: [/input-8, 43] 
split level 30: [/input-8, 757] 
split level 31: [/input-8, 1242] 
split level 32: [/input-8, 2030] 
split level 33: [/input-12, 8] 
split level 34: [/input-8, 54] 
split level 35: [/input-8, 803] 
split level 36: [/input-8, 25] 
split level 37: [/input, 3149] 
split level 38: [/input-8, 28] 
split level 39: [/input-8, 161] 
split level 40: [/input-8, 2017] 
split level 41: [/input-8, 1636] 
split level 42: [/input-8, 132] 
split level 43: [/input-8, 153] 
split level 44: [/input-8, 406] 
split level 45: [/input, 3054] 
split level 46: [/input-8, 1644] 
split level 47: [/input-8, 1193] 
split level 48: [/input-8, 755] 
split level 49: [/input-8, 588] 
split level 50: [/input, 3176] 
split level 51: [/input-8, 491] 
split level 52: [/input-8, 1187] 
split level 53: [/input, 3167] 
split level 54: [/input-8, 2018] 
split level 55: [/input-8, 1382] 
split level 56: [/input-8, 441] 
split level 57: [/input, 3165] 
split level 58: [/input-12, 72] 
split level 59: [/input, 3161] 
split level 60: [/input, 3382] 
split level 61: [/input-8, 40] 
split level 62: [/input, 2602] 
split level 63: [/input-8, 41] 
split level 64: [/input-8, 932] 
split level 65: [/input-8, 145] 
split level 66: [/input-8, 2016] 
split level 67: [/input-8, 404] 
split level 68: [/input, 3300] 
split level 69: [/input-8, 1579] 
split level 70: [/input, 3113] 
split level 71: [/input-8, 1248] 
split level 72: [/input-8, 1931] 
split level 73: [/input-8, 204] 
split level 74: [/input-8, 134] 
split level 75: [/input, 2603] 
split level 76: [/input-8, 1164] 
split level 77: [/input, 3162] 
split level 78: [/input, 2601] 
split level 79: [/input-8, 785] 
split level 80: [/input, 873] 
split level 81: [/input-8, 138] 
split level 82: [/input-8, 1240] 
split level 83: [/input, 3146] 
split level 84: [/input, 2680] 
split level 85: [/input-8, 914] 
split level 86: [/input, 2652] 
split level 87: [/input, 476] 
split level 88: [/input-8, 1556] 
split level 89: [/input, 3166] 
split level 90: [/input-8, 1238] 
split level 91: [/input-8, 171] 
split level 92: [/input, 3125] 
split level 93: [/input-8, 342] 
split level 94: [/input-8, 922] 
split level 95: [/input-8, 1214] 
split level 96: [/input-8, 1596] 
split level 97: [/input-8, 1224] 
split level 98: [/input-8, 1645] 
split level 99: [/input-8, 63] 
split level 100: [/input, 2586] 
split level 101: [/input, 3038] 
split level 102: [/input-8, 175] 
split level 103: [/input, 1124] 
split level 104: [/input-8, 397] 
split level 105: [/input-8, 357] 
split level 106: [/input-8, 248] 
split level 107: [/input, 2637] 
split level 108: [/input-8, 589] 
split level 109: [/input-8, 465] 
split level 110: [/input-8, 931] 
split level 111: [/input, 682] 
split level 112: [/input-8, 2009] 
split level 113: [/input-8, 1165] 
split level 114: [/input-8, 722] 
split level 115: [/input-8, 1376] 
split level 116: [/input, 669] 
split level 117: [/input, 3383] 
split level 118: [/input, 3222] 
split level 119: [/input-8, 326] 
split level 120: [/input, 2649] 
split level 121: [/input, 2988] 
split level 122: [/input-8, 1393] 
split level 123: [/input, 748] 
split level 124: [/input-8, 1399] 
split level 125: [/input, 1652] 
split level 126: [/input-8, 1383] 
split level 127: [/input-8, 2047] 
split level 128: [/input-8, 98] 
split level 129: [/input-8, 1529] 
split level 130: [/input-8, 91] 
split level 131: [/input, 2572] 
split level 132: [/input-8, 1665] 
split level 133: [/input, 2666] 
split level 134: [/input, 3034] 
split level 135: [/input-8, 312] 
split level 136: [/input-8, 333] 
split level 137: [/input, 3973] 
split level 138: [/input-8, 418] 
split level 139: [/input-8, 238] 
split level 140: [/input-8, 899] 
split level 141: [/input-8, 1993] 
split level 142: [/input, 3286] 
split level 143: [/input, 3419] 
split level 144: [/input, 2896] 
split level 145: [/input, 1565] 
split level 146: [/input, 1599] 
split level 147: [/input-8, 401] 
split level 148: [/input, 875] 
split level 149: [/input, 823] 
split level 150: [/input, 4068] 
split level 151: [/input, 3354] 
split level 152: [/input-8, 1375] 
split level 153: [/input, 839] 
split level 154: [/input, 3235] 
split level 155: [/input-8, 1619] 
split level 156: [/input, 2880] 
split level 157: [/input, 745] 
split level 158: [/input, 1021] 
split level 159: [/input, 788] 
split level 160: [/input-8, 1331] 
split level 161: [/input, 1748] 
split level 162: [/input, 276] 
split level 163: [/input, 1615] 
split level 164: [/input-8, 1545] 
split level 165: [/input-8, 177] 
split level 166: [/input-8, 1718] 
split level 167: [/input-8, 749] 
split level 168: [/input-8, 395] 
split level 169: [/input-8, 865] 
split level 170: [/input, 837] 
split level 171: [/input, 1400] 
split level 172: [/input, 2571] 
split level 173: [/input, 1581] 
split level 174: [/input-8, 169] 
split level 175: [/input, 1686] 
split level 176: [/input-8, 440] 
split level 177: [/input, 1490] 
split level 178: [/input, 2645] 
split level 179: [/input-8, 2008] 
split level 180: [/input, 986] 
split level 181: [/input-8, 490] 
split level 182: [/input-8, 1929] 
split level 183: [/input-8, 1963] 
split level 184: [/input, 974] 
split level 185: [/input, 3281] 
split level 186: [/input, 1018] 
split level 187: [/input, 2613] 
split level 188: [/input, 853] 
split level 189: [/input-8, 2001] 
split level 190: [/input-8, 334] 
split level 191: [/input-8, 107] 
split level 192: [/input, 2028] 
split level 193: [/input, 275] 
split level 194: [/input, 681] 
split level 195: [/input, 790] 
split level 196: [/input, 903] 
split level 197: [/input-8, 587] 
split level 198: [/input, 209] 
split level 199: [/input, 773] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.26429545879364014
10 lb beta sum: 0.0, worst -0.264298677444458
Time: prepare 0.0114    bound 0.0959    transfer 0.0013    finalize 0.0025    func 0.1137    
Accumulated time: func 0.2057    prepare 0.0214    bound 0.1874    transfer 0.0014    finalize 0.0026    
all_split False
======================Cut inference begins======================
max lb tensor(0.11695147) min lb tensor(-0.26429540)
Number of Verified Splits: 6 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 6.
#cuts 1-3: 6
#cuts >= 20: 0
BICCOS time: 0.010800838470458984 
BICCOS Cumulative time: 0.010800838470458984
Preprocessing time: 0.009818553924560547 Inference time: 0.00025844573974609375 Add cuts time: 9.703636169433594e-05 Cut analysis time: 0.0006268024444580078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25035 (1), -0.25029 (1), -0.25001 (1), -0.24989 (1), -0.24984 (1), -0.24972 (1), -0.24953 (1), -0.24941 (1), -0.24936 (1), -0.24912 (1), -0.24890 (1), -0.24852 (1), -0.24845 (1), -0.24807 (1), -0.24656 (1), -0.24620 (1), -0.24565 (1), -0.24526 (1), -0.24488 (1), -0.24445 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5118    set_bounds 0.0084    solve 0.1138    add 0.0696    
Accumulated time: pickout 0.0003    decision 0.5118    set_bounds 0.0084    solve 0.1138    add 0.0696    
Current (lb-rhs): -0.2503546476364136
50 domains visited
Cumulative time: 0.8147239685058594

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 56] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-12, 56] [/input-12, 56] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 56] [/input-12, 97] [/input-12, 97] [/input-12, 56] [/input-12, 97] 
split level 2: [/input-12, 97] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 97] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 61] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.230890691280365
10 lb beta sum: 1.161550760269165, worst -0.16426265239715576
Time: prepare 0.0076    bound 0.1177    transfer 0.0013    finalize 0.0024    func 0.1316    
Accumulated time: func 0.3374    prepare 0.0293    bound 0.3051    transfer 0.0028    finalize 0.0050    
all_split False
======================Cut inference begins======================
max lb tensor(0.45590103) min lb tensor(-0.16405362)
Number of Verified Splits: 122 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.019214153289794922 
BICCOS Cumulative time: 0.030014991760253906
Preprocessing time: 0.011624813079833984 Inference time: 0.005044221878051758 Add cuts time: 0.0020694732666015625 Cut analysis time: 0.0004756450653076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05229 (2), -0.04797 (2), -0.04223 (2), -0.04183 (2), -0.04128 (2), -0.04121 (2), -0.03833 (2), -0.03722 (2), -0.03566 (2), -0.03409 (2), -0.03236 (2), -0.03235 (2), -0.03210 (2), -0.03204 (2), -0.03143 (2), -0.02993 (2), -0.02851 (2), -0.02815 (2), -0.02772 (2), -0.02711 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0209    set_bounds 0.0119    solve 0.1317    add 0.0859    
Accumulated time: pickout 0.0014    decision 0.5327    set_bounds 0.0204    solve 0.2455    add 0.1555    
Current (lb-rhs): -0.0522916316986084
100 domains visited
Cumulative time: 1.085710048675537

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 2: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
split level 3: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 34] [/input-12, 31] [/input-12, 34] [/input-12, 31] [/input-12, 31] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1415991187095642
10 lb beta sum: 2.5313782691955566, worst -0.0258023738861084
Time: prepare 0.0077    bound 0.1331    transfer 0.0008    finalize 0.0027    func 0.1468    
Accumulated time: func 0.4842    prepare 0.0372    bound 0.4382    transfer 0.0035    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.62370151) min lb tensor(-0.02521497)
Number of Verified Splits: 394 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 13
#cuts >= 20: 0
BICCOS time: 0.03790712356567383 
BICCOS Cumulative time: 0.06792211532592773
Preprocessing time: 0.011446237564086914 Inference time: 0.015903949737548828 Add cuts time: 0.010172605514526367 Cut analysis time: 0.00038433074951171875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0156    solve 0.1469    add 0.0202    
Accumulated time: pickout 0.0026    decision 0.5522    set_bounds 0.0359    solve 0.3924    add 0.1757    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 56] 
split level 2: [/input-12, 97] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 31] 
split level 5: [/input-12, 34] 
split level 6: [/input-8, 1249] 
split level 7: [/input-8, 1259] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06819382309913635
10 lb beta sum: 0.09788309037685394, worst -0.059276044368743896
Time: prepare 0.0051    bound 0.1318    transfer 0.0005    finalize 0.0013    func 0.1404    
Accumulated time: func 0.6246    prepare 0.0427    bound 0.5700    transfer 0.0041    finalize 0.0090    
all_split False
======================Cut inference begins======================
max lb tensor(0.38986251) min lb tensor(-0.05893636)
Number of Verified Splits: 250 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2203681468963623
10 lb beta sum: 1.2185710668563843, worst -0.09511792659759521
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.28380513191223145 
BICCOS Cumulative time: 0.3517272472381592
Preprocessing time: 0.0069828033447265625 Inference time: 0.2704308032989502 Add cuts time: 0.005934953689575195 Cut analysis time: 0.0004565715789794922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05894 (8), -0.05141 (8), -0.03135 (8), -0.02921 (8), -0.02799 (8), -0.02350 (8), 
Length of domains: 6
Time: pickout 0.0004    decision 0.0219    set_bounds 0.0204    solve 0.1405    add 0.0008    
Accumulated time: pickout 0.0030    decision 0.5741    set_bounds 0.0564    solve 0.5329    add 0.1765    
Current (lb-rhs): -0.058936357498168945
106 domains visited
Cumulative time: 1.7999789714813232

BaB round 2
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 1: [/input-8, 44] [/input-8, 44] [/input-8, 1241] [/input-8, 44] [/input-8, 44] [/input-8, 1241] 
split level 2: [/input-8, 1241] [/input-8, 1241] [/input-8, 166] [/input-8, 1241] [/input-8, 1241] [/input-8, 166] 
split level 3: [/input-8, 166] [/input-8, 166] [/input-8, 28] [/input-8, 166] [/input-8, 166] [/input-8, 28] 
split level 4: [/input-8, 28] [/input-8, 28] [/input-8, 1644] [/input-8, 28] [/input-8, 28] [/input-8, 803] 
split level 5: [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 1644] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.038575053215026855
10 lb beta sum: 0.25177282094955444, worst -0.03343093395233154
Time: prepare 0.0075    bound 0.1311    transfer 0.0007    finalize 0.0016    func 0.1435    
Accumulated time: func 0.7681    prepare 0.0506    bound 0.7011    transfer 0.0048    finalize 0.0106    
all_split False
======================Cut inference begins======================
max lb tensor(0.06555900) min lb tensor(-0.03325999)
Number of Verified Splits: 326 of 384
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1911412477493286
10 lb beta sum: 1.6086219549179077, worst -0.058637142181396484
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts 7-9: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.3779792785644531 
BICCOS Cumulative time: 0.7297065258026123
Preprocessing time: 0.010917425155639648 Inference time: 0.3596963882446289 Add cuts time: 0.006730318069458008 Cut analysis time: 0.0006351470947265625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03326 (14), -0.03286 (14), -0.03222 (14), -0.03178 (14), -0.02964 (14), -0.02904 (14), -0.02883 (14), -0.02860 (14), -0.02843 (14), -0.02804 (14), -0.02796 (14), -0.02760 (14), -0.02528 (14), -0.02521 (14), -0.02516 (14), -0.02461 (14), -0.02442 (14), -0.02419 (14), -0.02412 (14), -0.02378 (14), 
Length of domains: 58
Time: pickout 0.0013    decision 0.0205    set_bounds 0.0381    solve 0.1436    add 0.0017    
Accumulated time: pickout 0.0042    decision 0.5946    set_bounds 0.0944    solve 0.6766    add 0.1781    
Current (lb-rhs): -0.03325998783111572
164 domains visited
Cumulative time: 2.386354446411133

BaB round 3
batch: 58
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] [/input-8, 1258] 
split level 1: [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.030227303504943848
10 lb beta sum: 0.5579044818878174, worst -0.025287270545959473
Time: prepare 0.0047    bound 0.1308    transfer 0.0014    finalize 0.0015    func 0.1399    
Accumulated time: func 0.9081    prepare 0.0555    bound 0.8319    transfer 0.0062    finalize 0.0121    
all_split False
======================Cut inference begins======================
max lb tensor(0.01663193) min lb tensor(-0.02517107)
Number of Verified Splits: 133 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 16
#cuts 4-6: 1
#cuts 7-9: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.024256467819213867 
BICCOS Cumulative time: 0.7539629936218262
Preprocessing time: 0.006864786148071289 Inference time: 0.015247583389282227 Add cuts time: 0.0014576911926269531 Cut analysis time: 0.0006864070892333984
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02517 (16), -0.02456 (16), -0.02410 (16), -0.02341 (16), -0.02144 (16), -0.02075 (16), -0.02071 (16), -0.02036 (16), -0.02014 (16), -0.01996 (16), -0.01956 (16), -0.01928 (16), -0.01915 (16), -0.01881 (16), -0.01866 (16), -0.01843 (16), -0.01835 (16), -0.01827 (16), -0.01805 (16), -0.01767 (16), 
Length of domains: 99
Time: pickout 0.0021    decision 0.0139    set_bounds 0.0111    solve 0.1400    add 0.0010    
Accumulated time: pickout 0.0063    decision 0.6085    set_bounds 0.1055    solve 0.8166    add 0.1792    
Current (lb-rhs): -0.02517107129096985
263 domains visited
Cumulative time: 2.5795738697052

BaB round 4
batch: 99
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] [/input-8, 491] 
split level 1: [/input-8, 1636] [/input-8, 755] [/input-8, 1636] [/input-8, 755] [/input-8, 1636] [/input-8, 755] [/input-8, 1636] [/input-8, 755] [/input-8, 755] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02359563112258911
10 lb beta sum: 0.7100087404251099, worst -0.018734455108642578
Time: prepare 0.0077    bound 0.1373    transfer 0.0011    finalize 0.0017    func 0.1512    
Accumulated time: func 1.0593    prepare 0.0634    bound 0.9691    transfer 0.0074    finalize 0.0139    
all_split False
======================Cut inference begins======================
max lb tensor(0.24117124) min lb tensor(-0.01867545)
Number of Verified Splits: 153 of 396
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 18
#cuts 4-6: 2
#cuts 7-9: 2
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.034750938415527344 
BICCOS Cumulative time: 0.7887139320373535
Preprocessing time: 0.011364221572875977 Inference time: 0.0205080509185791 Add cuts time: 0.0021872520446777344 Cut analysis time: 0.0006914138793945312
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01868 (18), -0.01770 (18), -0.01760 (18), -0.01653 (18), -0.01629 (18), -0.01604 (18), -0.01511 (18), -0.01496 (18), -0.01495 (18), -0.01426 (18), -0.01418 (18), -0.01390 (18), -0.01389 (18), -0.01346 (18), -0.01340 (18), -0.01328 (18), -0.01310 (18), -0.01273 (18), -0.01249 (18), -0.01238 (18), 
Length of domains: 243
Time: pickout 0.0020    decision 0.0227    set_bounds 0.0183    solve 0.1513    add 0.0013    
Accumulated time: pickout 0.0083    decision 0.6311    set_bounds 0.1238    solve 0.9679    add 0.1804    
Current (lb-rhs): -0.01867544651031494
506 domains visited
Cumulative time: 2.8107597827911377

BaB round 5
batch: 243
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] [/input-8, 612] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.021904081106185913
10 lb beta sum: 0.49677160382270813, worst -0.01711374521255493
Time: prepare 0.0098    bound 0.1429    transfer 0.0036    finalize 0.0028    func 0.1621    
Accumulated time: func 1.2214    prepare 0.0734    bound 1.1120    transfer 0.0109    finalize 0.0167    
all_split False
======================Cut inference begins======================
max lb tensor(0.32852459) min lb tensor(-0.01708221)
Number of Verified Splits: 355 of 486
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 22
#cuts >= 20: 0
BICCOS time: 0.06416869163513184 
BICCOS Cumulative time: 0.8528826236724854
Preprocessing time: 0.013912200927734375 Inference time: 0.046144962310791016 Add cuts time: 0.003625631332397461 Cut analysis time: 0.0004858970642089844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01708 (19), -0.01608 (19), -0.01592 (19), -0.01483 (19), -0.01471 (19), -0.01452 (19), -0.01345 (19), -0.01338 (19), -0.01336 (19), -0.01256 (19), -0.01243 (19), -0.01234 (19), -0.01223 (19), -0.01170 (19), -0.01170 (19), -0.01153 (19), -0.01127 (19), -0.01108 (19), -0.01096 (19), -0.01082 (19), 
Length of domains: 131
Time: pickout 0.0038    decision 0.0273    set_bounds 0.0204    solve 0.1623    add 0.0026    
Accumulated time: pickout 0.0121    decision 0.6584    set_bounds 0.1442    solve 1.1301    add 0.1830    
Current (lb-rhs): -0.01708221435546875
637 domains visited
Cumulative time: 3.0935959815979004

BaB round 6
batch: 131
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1636] [/input-8, 1644] [/input-8, 1636] [/input-8, 1644] [/input-8, 1636] [/input-8, 1636] [/input-8, 1644] [/input-8, 1636] [/input-8, 1644] [/input-8, 1636] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.017462164163589478
10 lb beta sum: 1.0481396913528442, worst -0.01275646686553955
Time: prepare 0.0054    bound 0.1401    transfer 0.0006    finalize 0.0013    func 0.1497    
Accumulated time: func 1.3711    prepare 0.0790    bound 1.2521    transfer 0.0115    finalize 0.0180    
all_split False
======================Cut inference begins======================
max lb tensor(0.23828322) min lb tensor(-0.01273680)
Number of Verified Splits: 152 of 262
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 23
#cuts >= 20: 0
BICCOS time: 0.0307614803314209 
BICCOS Cumulative time: 0.8836441040039062
Preprocessing time: 0.007691621780395508 Inference time: 0.020604372024536133 Add cuts time: 0.001981496810913086 Cut analysis time: 0.0004839897155761719
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01274 (20), -0.01214 (20), -0.01184 (20), -0.01171 (20), -0.01108 (20), -0.01086 (20), -0.01073 (20), -0.01057 (20), -0.01038 (20), -0.00982 (20), -0.00953 (20), -0.00945 (20), -0.00934 (20), -0.00917 (20), -0.00903 (20), -0.00902 (20), -0.00844 (20), -0.00824 (20), -0.00810 (20), -0.00801 (20), 
Length of domains: 110
Time: pickout 0.0026    decision 0.0227    set_bounds 0.0110    solve 0.1498    add 0.0012    
Accumulated time: pickout 0.0147    decision 0.6812    set_bounds 0.1552    solve 1.2799    add 0.1842    
Current (lb-rhs): -0.012736797332763672
747 domains visited
Cumulative time: 3.312734365463257

BaB round 7
batch: 110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input, 3161] [/input, 3161] [/input, 3161] [/input, 3161] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.014590859413146973
10 lb beta sum: 1.0197218656539917, worst -0.009155631065368652
Time: prepare 0.0049    bound 0.1402    transfer 0.0011    finalize 0.0012    func 0.1488    
Accumulated time: func 1.5200    prepare 0.0841    bound 1.3923    transfer 0.0126    finalize 0.0192    
all_split False
======================Cut inference begins======================
max lb tensor(0.01293850) min lb tensor(-0.00913161)
Number of Verified Splits: 138 of 220
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 27
#cuts >= 20: 0
BICCOS time: 0.027757644653320312 
BICCOS Cumulative time: 0.9114017486572266
Preprocessing time: 0.006608724594116211 Inference time: 0.01884746551513672 Add cuts time: 0.0017800331115722656 Cut analysis time: 0.0005214214324951172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00913 (21), -0.00875 (21), -0.00792 (21), -0.00764 (21), -0.00713 (21), -0.00647 (21), -0.00627 (21), -0.00583 (21), -0.00563 (21), -0.00553 (21), -0.00545 (21), -0.00535 (21), -0.00510 (21), -0.00508 (21), -0.00454 (21), -0.00454 (21), -0.00432 (21), -0.00426 (21), -0.00424 (21), -0.00415 (21), 
Length of domains: 82
Time: pickout 0.0024    decision 0.0204    set_bounds 0.0088    solve 0.1489    add 0.0012    
Accumulated time: pickout 0.0171    decision 0.7016    set_bounds 0.1640    solve 1.4288    add 0.1854    
Current (lb-rhs): -0.00913161039352417
829 domains visited
Cumulative time: 3.523228645324707

BaB round 8
batch: 82
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-8, 790] [/input-8, 790] [/input-8, 790] [/input-12, 8] [/input-12, 8] [/input-8, 790] [/input-8, 790] [/input-8, 790] 
split level 1: [/input-8, 1242] [/input-8, 1644] [/input, 3161] [/input-8, 1242] [/input-8, 1242] [/input-8, 1242] [/input-8, 1242] [/input, 3161] [/input, 3161] [/input-8, 1644] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01005503535270691
10 lb beta sum: 0.6334298253059387, worst -0.006224304437637329
Time: prepare 0.0078    bound 0.1377    transfer 0.0007    finalize 0.0021    func 0.1505    
Accumulated time: func 1.6704    prepare 0.0920    bound 1.5299    transfer 0.0133    finalize 0.0213    
all_split False
======================Cut inference begins======================
max lb tensor(0.56233561) min lb tensor(-0.00620037)
Number of Verified Splits: 307 of 328
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.05550217628479004 
BICCOS Cumulative time: 0.9669039249420166
Preprocessing time: 0.009719610214233398 Inference time: 0.042951107025146484 Add cuts time: 0.0022881031036376953 Cut analysis time: 0.0005433559417724609
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00620 (23), -0.00512 (23), -0.00505 (23), -0.00392 (23), -0.00336 (23), -0.00304 (23), -0.00252 (23), -0.00252 (23), -0.00243 (23), -0.00230 (23), -0.00212 (23), -0.00196 (23), -0.00155 (23), -0.00145 (23), -0.00137 (23), -0.00132 (23), -0.00130 (23), -0.00089 (23), -0.00082 (23), -0.00023 (23), 
Length of domains: 21
Time: pickout 0.0020    decision 0.0211    set_bounds 0.0205    solve 0.1505    add 0.0009    
Accumulated time: pickout 0.0192    decision 0.7226    set_bounds 0.1845    solve 1.5794    add 0.1863    
Current (lb-rhs): -0.00620037317276001
850 domains visited
Cumulative time: 3.7752926349639893

BaB round 9
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1242] [/input, 3161] [/input, 3161] [/input-8, 1242] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 1: [/input, 3161] [/input-8, 1242] [/input-8, 1248] [/input, 3161] [/input-8, 1242] [/input-8, 1248] [/input-8, 1242] [/input-8, 1644] [/input-8, 1242] [/input-8, 1248] 
split level 2: [/input-8, 1248] [/input-8, 1248] [/input-8, 1242] [/input-8, 1248] [/input-8, 1248] [/input-8, 1242] [/input-8, 1248] [/input-8, 1248] [/input-8, 1248] [/input-8, 1242] 
split level 3: [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] [/input-8, 1579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0006132721900939941

all verified at 1th iter
Time: prepare 0.0084    bound 0.0151    transfer 0.0006    finalize 0.0019    func 0.0281    
Accumulated time: func 1.6985    prepare 0.1007    bound 1.5450    transfer 0.0139    finalize 0.0232    
all_split False
======================Cut inference begins======================
max lb tensor(0.01381296) min lb tensor(0.00010586)
Number of Verified Splits: 336 of 336
No cut inferred: All or none verified.
Total number of valid cuts: 28.
#cuts 1-3: 28
#cuts >= 20: 0
BICCOS time: 0.009608745574951172 
BICCOS Cumulative time: 0.9765126705169678
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0017    decision 0.0148    set_bounds 0.0276    solve 0.0282    add 0.0005    
Accumulated time: pickout 0.0209    decision 0.7374    set_bounds 0.2121    solve 1.6076    add 0.1868    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
850 domains visited
Cumulative time: 3.859001874923706


Properties batch 5, size 1
Remaining timeout: 38.303173542022705
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 38.30309796333313
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 38.3030743598938
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 38.302410364151
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 161.6977 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
         -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [598]; unstable size 598; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 213, 1, 598] with unstable size 212 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 598] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 598] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [212]; unstable size 212; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 212] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 212] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.89664304,  0.67908716,  0.19554520,  0.18955159,  0.73444772,
          0.71419168,  0.94188905,  0.96517777, -1.17427909]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
         -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
          -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05045319]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.98194313, -18.68232346, -13.41521168, -15.12617874, -13.36238766,
         -15.23961639, -11.65827942, -15.93192387, -18.96205139, -18.87558174]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [486]; unstable size 486; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 486] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 486] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 486] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 298] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.17125177, 4.88726807, 0.27176952, 2.09688020, 0.18416548, 2.01368856,
         2.31736946, 5.04107523, 4.79337215]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0654 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.01308823, -19.76593781, -25.22100067, -25.57647514, -25.42583656,
         -26.01211357, -25.51028061, -24.41519165, -23.07863426, -17.48029327]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [532]; unstable size 532; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 532] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 532] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 532] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 203] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.27216339, 1.49679112, 6.10778522, 6.38268948, 6.18334293, 6.67020035,
         6.18721390, 4.92642689, 4.46745014]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0463 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.90496635, -15.11729813, -17.63558197, -17.40718079, -18.01904297,
         -18.32819939, -17.60610199, -17.95012093, -15.46633625, -14.21533680]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [703]; unstable size 703; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 270, 1, 703] with unstable size 269 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 703] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [269]; unstable size 269; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 269] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 269] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.32847333,  0.70178175,  0.40967298,  0.70709515,  1.10043955,
          0.47019672,  0.52032566, -0.85370064, -1.78019547]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.90496635, -15.11729813, -17.63558197, -17.40718079, -18.01904297,
         -18.32819939, -17.60610199, -17.95012093, -15.46633625, -14.21533680]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.90496635, -15.11729908, -17.63558006, -17.40718079, -18.01904488,
          -18.32819939, -17.60610390, -17.95012093, -15.46633720, -14.21533775],
         [-16.90496635, -15.11729908, -17.63558006, -17.40718079, -18.01904488,
          -18.32819939, -17.60610390, -17.95012093, -15.46633720, -14.21533775]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.34903812, -0.90196133]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0390 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.14345169, -26.23081017, -22.50061417, -23.41731834, -23.96586800,
         -24.21544456, -20.18602753, -25.76428032, -26.53347778, -25.24602318]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [390]; unstable size 390; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 390] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 390] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 390] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 311] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.16251516, 3.85129428, 1.07807207, 2.04974079, 2.45816231, 2.71345639,
         3.85838270, 4.14238691, 3.23237896]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0471 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.55906677, -26.64030838, -19.33113098, -21.43922997, -19.03748703,
         -20.97289085, -20.39774704, -20.86362457, -27.58946419, -25.17458534]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [519]; unstable size 519; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 519] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 519] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 519] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 219] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02097797,  5.33160543, -0.73743320,  1.28090441,  0.87938392,
          0.03270626,  0.89394522,  6.65467310,  4.26477146]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.55906677, -26.64030838, -19.33113098, -21.43922997, -19.03748703,
         -20.97289085, -20.39774704, -20.86362457, -27.58946419, -25.17458534]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.90825081, -26.12090302, -18.51591682, -20.78538132, -18.67061234,
          -20.35578346, -19.77608490, -20.64961624, -26.99978256, -24.73842430]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15469551]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0495 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.72182465, -25.40373611, -21.20227242, -20.08390617, -21.28728104,
         -19.64896584, -22.07214165, -21.57941437, -23.54422569, -23.66501617]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [553]; unstable size 553; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 225, 1, 553] with unstable size 224 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 553] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 553] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [224]; unstable size 224; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 224] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 224] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.95499563, 4.21736193, 0.73983389, 0.09517530, 0.76654398, 1.38522911,
         0.98252261, 2.42742300, 2.46281242]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0421 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.44517517, -24.66761017, -18.86577606, -18.69302559, -20.38499641,
         -19.18245506, -20.75661469, -21.50863075, -24.90008926, -24.19531822]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [771]; unstable size 771; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 771] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 771] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 771] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 252] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.21118426,  4.10176945, -1.16934407, -0.72179770,  0.25676191,
          0.67854691,  1.19206476,  4.31922340,  3.50376534]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.44517517, -24.66761017, -18.86577606, -18.69302559, -20.38499641,
         -19.18245506, -20.75661469, -21.50863075, -24.90008926, -24.19531822]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.44517326, -24.66760826, -18.86577415, -18.69302559, -20.38499451,
          -19.18245316, -20.75661469, -21.50863075, -24.90009117, -24.19531822],
         [-21.44517326, -24.66760826, -18.86577415, -18.69302559, -20.38499451,
          -19.18245316, -20.75661469, -21.50863075, -24.90009117, -24.19531822]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31667900, -0.48942757]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]],


         [[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0332 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.38232803, -35.89345551, -38.77233124, -38.86247635, -39.62222672,
         -39.86164474, -39.87382126, -39.40642929, -30.93457031, -36.03558350]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 499] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 499] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 197] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.37971139, 3.87611699, 6.40737152, 6.38697433, 7.03273010, 7.19149971,
         7.20581627, 6.50212955, 4.14408016]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0408 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.24032974, -37.65886307, -32.76491928, -35.87559128, -36.34276581,
         -36.02743912, -34.61969757, -36.23526382, -36.62348938, -40.18959427]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [734]; unstable size 734; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 734] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 734] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 734] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 228] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.42341971, 3.43717337, 2.28934193, 2.53784943, 2.29687023, 0.88679004,
         1.92648363, 2.44576836, 5.71752644]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0380 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.79258919, -17.99694252, -16.45632553, -15.40058136, -16.56349564,
         -14.87314796, -17.80143356, -13.41994190, -19.54096222, -16.64786148]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [937]; unstable size 937; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 937] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 937] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 937] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 249] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.73422527, 2.70791626, 1.68733311, 0.95580459, 2.14770579, 0.50132060,
         2.85892677, 3.87416124, 1.62221122]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0318 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.01166153, -22.78888702, -15.86253738, -18.02544975, -16.82504082,
         -17.96582985, -15.98325729, -20.20303345, -22.22256470, -22.36408424]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [720]; unstable size 720; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 334, 1, 720] with unstable size 333 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 720] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 720] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [333]; unstable size 333; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 333] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 333] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.70876288,  4.66763592,  1.06026244, -0.11882293,  0.88787556,
         -0.96121335,  2.31396723,  4.62897253,  4.35728979]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.01166153, -22.78888702, -15.86253738, -18.02544975, -16.82504082,
         -17.96582985, -15.98325729, -20.20303345, -22.22256470, -22.36408424]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.39785576, -22.92395973, -16.30167580, -18.20151138, -17.08473396,
          -18.17427635, -15.85140800, -20.40995026, -22.59860229, -22.46858406],
         [-20.39785576, -22.92395973, -16.30167580, -18.20151138, -17.08473396,
          -18.17427635, -15.85140800, -20.40995026, -22.59860229, -22.46858406]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.78305817, -0.45026779]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0481 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.39692688, -33.50623703, -38.63787079, -39.79333878, -37.69999313,
         -41.03482437, -40.31786346, -38.34481812, -33.13186264, -33.37991333]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [788]; unstable size 788; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 788] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 788] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 788] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 259] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.16784906,  2.02646780,  3.53692102,  1.20165110,  4.52165222,
          3.78477287,  1.66250515, -2.21134424, -1.22387242]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.39692688, -33.50623703, -38.63787079, -39.79333878, -37.69999313,
         -41.03482437, -40.31786346, -38.34481812, -33.13186264, -33.37991333]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.39692307, -33.50624084, -38.63787079, -39.79333115, -37.69999313,
          -41.03482437, -40.31786346, -38.34482574, -33.13185501, -33.37990952],
         [-33.39692307, -33.50624084, -38.63787079, -39.79333115, -37.69999313,
          -41.03482437, -40.31786346, -38.34482574, -33.13185501, -33.37990952]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.10931778, -0.37438583, -0.12633133]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0414 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.86795235, -23.21092606, -17.76663589, -16.98049545, -18.63553619,
         -17.40380287, -19.50118446, -17.26604271, -23.47448921, -21.17066383]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 654] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 654] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 260] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.18142748,  4.33078861, -0.50892031, -0.65947908,  0.37091148,
          1.13457894, -0.94743347,  4.42701244,  2.60953665]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.86795235, -23.21092606, -17.76663589, -16.98049545, -18.63553619,
         -17.40380287, -19.50118446, -17.26604271, -23.47448921, -21.17066383]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.86795235, -23.21092987, -17.76663589, -16.98049545, -18.63553619,
          -17.40380287, -19.50118637, -17.26604462, -23.47449112, -21.17066383],
         [-21.86795235, -23.21092987, -17.76663589, -16.98049545, -18.63553619,
          -17.40380287, -19.50118637, -17.26604462, -23.47449112, -21.17066383]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36283302, -0.42330742, -0.13775826]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0357 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
         -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [494]; unstable size 494; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 494] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 494] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 494] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 270] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.14928722,  4.51440096,  1.64132595, -1.13099432,  1.91445708,
          0.33408660,  1.53952146,  3.79073119,  4.14098597]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
         -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
          -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05387688]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-9.41269815e-01, -9.09523785e-01, -1.33809519e+00,  ...,
            -6.39682531e-01,  7.46032670e-02,  1.85714364e-01],
           [-5.28571427e-01, -7.98412681e-01, -1.25873005e+00,  ...,
            -5.76190472e-01, -2.42857039e-01,  1.06349289e-01],
           [-4.65079248e-01, -4.01587188e-01, -7.66666651e-01,  ...,
            -3.85714173e-01, -3.53968143e-01, -1.63491964e-01],
           ...,
           [ 1.97936535e+00,  1.10634947e+00,  1.42380977e+00,  ...,
             1.94761932e+00,  1.94761932e+00,  1.97936535e+00],
           [ 1.94761932e+00,  1.47142887e+00,  1.37619078e+00,  ...,
             1.96349227e+00,  1.82063520e+00,  1.80476213e+00],
           [ 1.99523830e+00,  1.78888917e+00,  1.85238123e+00,  ...,
             1.99523830e+00,  1.99523830e+00,  1.94761932e+00]],

          [[-1.12721294e-01, -1.44927412e-01, -6.28019273e-01,  ...,
            -2.25442708e-01,  3.54267418e-01,  6.28019392e-01],
           [ 2.09339887e-01, -1.12721294e-01, -5.47504008e-01,  ...,
            -2.89854944e-01,  1.22934580e-07,  5.47504127e-01],
           [ 1.93236828e-01,  2.25442946e-01, -1.61029361e-02,  ...,
            -8.05151686e-02, -8.05151686e-02,  2.89855182e-01],
           ...,
           [ 1.70692456e+00,  8.37359190e-01,  1.14331758e+00,  ...,
             1.75523376e+00,  1.73913074e+00,  1.78743994e+00],
           [ 1.73913074e+00,  1.20772982e+00,  1.04669893e+00,  ...,
             1.72302771e+00,  1.57810009e+00,  1.61030626e+00],
           [ 1.85185218e+00,  1.57810009e+00,  1.56199706e+00,  ...,
             1.75523376e+00,  1.75523376e+00,  1.73913074e+00]],

          [[-1.39280367e+00, -1.30284870e+00, -1.61769128e+00,  ...,
            -1.27286363e+00, -7.48125911e-01, -3.73313308e-01],
           [-1.19790113e+00, -1.39280367e+00, -1.60269880e+00,  ...,
            -1.25787115e+00, -1.03298354e+00, -4.33283329e-01],
           [-1.13793111e+00, -1.21289361e+00, -1.45277369e+00,  ...,
            -1.18290865e+00, -1.03298354e+00, -7.18140900e-01],
           ...,
           [ 1.84557760e+00,  9.76012170e-01,  1.24587750e+00,  ...,
             1.87556267e+00,  1.84557760e+00,  1.87556267e+00],
           [ 1.87556267e+00,  1.33583248e+00,  1.15592217e+00,  ...,
             1.83058512e+00,  1.69565260e+00,  1.69565260e+00],
           [ 1.96551764e+00,  1.69565260e+00,  1.68066013e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.84557760e+00]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0525 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.82804489, -23.63042831, -29.23712158, -28.24177551, -29.14320946,
         -29.41248703, -29.22246933, -29.10352325, -24.23150253, -21.39186287]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [726]; unstable size 726; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 726] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 726] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 726] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 264] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.64157295, 1.36549711, 5.86060524, 5.40555239, 5.76025915, 6.48044825,
         6.13686466, 6.01794577, 1.13634682]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0300 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
         -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [942]; unstable size 942; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 942] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 942] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 942] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 241] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.41716480,  5.54713631,  0.52021480, -0.06935591, -0.04526925,
          0.63125217,  1.37135768,  2.56105852,  5.77544594]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
         -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.16it/s]100%|██████████| 1/1 [00:00<00:00,  9.15it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.30881500, -30.56450272, -25.00361443, -23.76336479, -24.40058708,
          -23.71853256, -24.78523254, -26.12451744, -27.38202095, -30.68591499],
         [-29.30881500, -30.56450272, -25.00361443, -23.76336479, -24.40058708,
          -23.71853256, -24.78523254, -26.12451744, -27.38202095, -30.68591499]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04483223, 0.68205452]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1119 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.08385467529297
alpha/beta optimization time: 1.200474500656128
initial alpha-crown bounds: tensor([[ 4.47514009,  5.59848642,  0.56283236, -0.05797213, -0.01270890,
          0.67102301,  1.41879439,  2.60586262,  5.82239723]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.05797213315963745
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64974904060364
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64970898628235
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6496856212616
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.64966583251953
Verifying property 3 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05797213]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
        -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05797213]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 942
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 235
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 1190
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00011372566223144531
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05797213315963745
10 lb beta sum: 0.0, worst -0.05797374248504639
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0532    transfer 0.0001    finalize 0.0001    func 0.0537    
Accumulated time: func 0.0537    prepare 0.0002    bound 0.0532    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 72] 
split level 3: [/input-8, 1699] 
split level 4: [/input-12, 31] 
split level 5: [/input-8, 403] 
split level 6: [/input-8, 770] 
split level 7: [/input-8, 1732] 
split level 8: [/input-8, 1722] 
split level 9: [/input-8, 140] 
split level 10: [/input-8, 1706] 
split level 11: [/input-8, 1731] 
split level 12: [/input-8, 1713] 
split level 13: [/input-8, 405] 
split level 14: [/input-8, 141] 
split level 15: [/input-8, 771] 
split level 16: [/input-8, 418] 
split level 17: [/input-8, 592] 
split level 18: [/input-8, 1301] 
split level 19: [/input-8, 1716] 
split level 20: [/input-8, 779] 
split level 21: [/input-8, 453] 
split level 22: [/input-8, 443] 
split level 23: [/input-8, 1325] 
split level 24: [/input-8, 138] 
split level 25: [/input-8, 1499] 
split level 26: [/input-8, 906] 
split level 27: [/input-8, 1834] 
split level 28: [/input-8, 1701] 
split level 29: [/input-8, 1171] 
split level 30: [/input, 1510] 
split level 31: [/input-8, 1028] 
split level 32: [/input-8, 588] 
split level 33: [/input-8, 580] 
split level 34: [/input, 1448] 
split level 35: [/input, 2968] 
split level 36: [/input-8, 731] 
split level 37: [/input-8, 1261] 
split level 38: [/input, 2662] 
split level 39: [/input-8, 772] 
split level 40: [/input-8, 87] 
split level 41: [/input-8, 56] 
split level 42: [/input-8, 1089] 
split level 43: [/input-8, 1029] 
split level 44: [/input-8, 582] 
split level 45: [/input-8, 1733] 
split level 46: [/input-8, 994] 
split level 47: [/input-8, 1782] 
split level 48: [/input-8, 1147] 
split level 49: [/input-8, 382] 
split level 50: [/input, 1499] 
split level 51: [/input-8, 406] 
split level 52: [/input-8, 579] 
split level 53: [/input-8, 1337] 
split level 54: [/input-8, 397] 
split level 55: [/input-8, 1662] 
split level 56: [/input-8, 97] 
split level 57: [/input-8, 595] 
split level 58: [/input-8, 75] 
split level 59: [/input-8, 1270] 
split level 60: [/input-8, 578] 
split level 61: [/input-8, 1265] 
split level 62: [/input-8, 454] 
split level 63: [/input-8, 1730] 
split level 64: [/input, 581] 
split level 65: [/input-8, 1302] 
split level 66: [/input-8, 1342] 
split level 67: [/input, 1913] 
split level 68: [/input-8, 105] 
split level 69: [/input, 1449] 
split level 70: [/input-8, 1953] 
split level 71: [/input-8, 993] 
split level 72: [/input-8, 95] 
split level 73: [/input-8, 235] 
split level 74: [/input-8, 1593] 
split level 75: [/input-8, 374] 
split level 76: [/input, 3262] 
split level 77: [/input-8, 142] 
split level 78: [/input-8, 91] 
split level 79: [/input, 3010] 
split level 80: [/input-8, 1576] 
split level 81: [/input-8, 1294] 
split level 82: [/input, 1912] 
split level 83: [/input-8, 218] 
split level 84: [/input-8, 945] 
split level 85: [/input-8, 57] 
split level 86: [/input-8, 1842] 
split level 87: [/input-8, 32] 
split level 88: [/input-8, 956] 
split level 89: [/input-8, 226] 
split level 90: [/input-8, 1752] 
split level 91: [/input, 1396] 
split level 92: [/input, 1491] 
split level 93: [/input, 2730] 
split level 94: [/input, 2742] 
split level 95: [/input, 131] 
split level 96: [/input, 3347] 
split level 97: [/input, 56] 
split level 98: [/input-8, 149] 
split level 99: [/input-8, 1293] 
split level 100: [/input-8, 379] 
split level 101: [/input, 2516] 
split level 102: [/input, 292] 
split level 103: [/input, 2660] 
split level 104: [/input, 1497] 
split level 105: [/input, 3345] 
split level 106: [/input, 1478] 
split level 107: [/input, 3637] 
split level 108: [/input-8, 103] 
split level 109: [/input-8, 1791] 
split level 110: [/input-8, 1965] 
split level 111: [/input, 803] 
split level 112: [/input-8, 424] 
split level 113: [/input-8, 584] 
split level 114: [/input, 3351] 
split level 115: [/input, 787] 
split level 116: [/input-8, 79] 
split level 117: [/input-8, 1959] 
split level 118: [/input, 2474] 
split level 119: [/input-8, 432] 
split level 120: [/input, 2765] 
split level 121: [/input-8, 1283] 
split level 122: [/input, 807] 
split level 123: [/input-8, 1310] 
split level 124: [/input-8, 423] 
split level 125: [/input, 2663] 
split level 126: [/input, 3228] 
split level 127: [/input-8, 150] 
split level 128: [/input-8, 1284] 
split level 129: [/input, 940] 
split level 130: [/input-8, 143] 
split level 131: [/input-8, 236] 
split level 132: [/input, 819] 
split level 133: [/input, 424] 
split level 134: [/input, 2498] 
split level 135: [/input, 2750] 
split level 136: [/input-8, 1591] 
split level 137: [/input, 168] 
split level 138: [/input-8, 1758] 
split level 139: [/input, 177] 
split level 140: [/input, 2897] 
split level 141: [/input, 55] 
split level 142: [/input, 141] 
split level 143: [/input-8, 1971] 
split level 144: [/input, 179] 
split level 145: [/input, 2502] 
split level 146: [/input, 3566] 
split level 147: [/input, 282] 
split level 148: [/input, 791] 
split level 149: [/input, 792] 
split level 150: [/input-8, 151] 
split level 151: [/input-8, 1729] 
split level 152: [/input, 1706] 
split level 153: [/input, 2851] 
split level 154: [/input-8, 442] 
split level 155: [/input-8, 1851] 
split level 156: [/input-8, 1774] 
split level 157: [/input, 293] 
split level 158: [/input, 3123] 
split level 159: [/input, 2282] 
split level 160: [/input, 2540] 
split level 161: [/input, 308] 
split level 162: [/input, 2749] 
split level 163: [/input, 3279] 
split level 164: [/input, 809] 
split level 165: [/input, 934] 
split level 166: [/input-8, 1735] 
split level 167: [/input, 1525] 
split level 168: [/input, 467] 
split level 169: [/input, 2547] 
split level 170: [/input, 1489] 
split level 171: [/input, 1714] 
split level 172: [/input, 2103] 
split level 173: [/input, 2686] 
split level 174: [/input, 283] 
split level 175: [/input, 3116] 
split level 176: [/input-8, 2038] 
split level 177: [/input, 3419] 
split level 178: [/input, 194] 
split level 179: [/input, 215] 
split level 180: [/input-12, 61] 
split level 181: [/input, 924] 
split level 182: [/input, 811] 
split level 183: [/input, 810] 
split level 184: [/input, 348] 
split level 185: [/input, 296] 
split level 186: [/input, 3361] 
split level 187: [/input, 362] 
split level 188: [/input-8, 1271] 
split level 189: [/input, 298] 
split level 190: [/input, 2269] 
split level 191: [/input, 785] 
split level 192: [/input, 2481] 
split level 193: [/input, 346] 
split level 194: [/input, 2852] 
split level 195: [/input, 3311] 
split level 196: [/input, 2246] 
split level 197: [/input, 3511] 
split level 198: [/input, 769] 
split level 199: [/input, 140] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.057936012744903564
10 lb beta sum: 0.0, worst -0.05793261528015137
Time: prepare 0.0116    bound 0.1005    transfer 0.0018    finalize 0.0026    func 0.1190    
Accumulated time: func 0.1727    prepare 0.0216    bound 0.1537    transfer 0.0019    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.09598307) min lb tensor(-0.05792987)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010219573974609375 
BICCOS Cumulative time: 0.010219573974609375
Preprocessing time: 0.009827136993408203 Inference time: 0.00011730194091796875 Add cuts time: 5.698204040527344e-05 Cut analysis time: 0.0002181529998779297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05414 (1), -0.05389 (1), -0.05389 (1), -0.05388 (1), -0.05380 (1), -0.05374 (1), -0.05374 (1), -0.05365 (1), -0.05364 (1), -0.05344 (1), -0.05333 (1), -0.05316 (1), -0.05313 (1), -0.05308 (1), -0.05307 (1), -0.05298 (1), -0.05287 (1), -0.05277 (1), -0.05268 (1), -0.05248 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5134    set_bounds 0.0084    solve 0.1191    add 0.0681    
Accumulated time: pickout 0.0003    decision 0.5134    set_bounds 0.0084    solve 0.1191    add 0.0681    
Current (lb-rhs): -0.05413895845413208
50 domains visited
Cumulative time: 0.7846205234527588

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 31] [/input-12, 31] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 2: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-8, 403] [/input-8, 403] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 3: [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 140] [/input-8, 140] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.052787601947784424
10 lb beta sum: 0.36995184421539307, worst -0.0508044958114624
Time: prepare 0.0077    bound 0.1171    transfer 0.0007    finalize 0.0026    func 0.1307    
Accumulated time: func 0.3034    prepare 0.0296    bound 0.2707    transfer 0.0026    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.06798027) min lb tensor(-0.05075520)
Number of Verified Splits: 50 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.014703989028930664 
BICCOS Cumulative time: 0.02492356300354004
Preprocessing time: 0.011568069458007812 Inference time: 0.0016741752624511719 Add cuts time: 0.0012359619140625 Cut analysis time: 0.0002257823944091797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03598 (2), -0.03594 (2), -0.03589 (2), -0.03582 (2), -0.03578 (2), -0.03569 (2), -0.03545 (2), -0.03529 (2), -0.03526 (2), -0.03490 (2), -0.03488 (2), -0.03486 (2), -0.03480 (2), -0.03462 (2), -0.03449 (2), -0.03438 (2), -0.03436 (2), -0.03423 (2), -0.03415 (2), -0.03399 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0200    set_bounds 0.0123    solve 0.1308    add 0.0813    
Accumulated time: pickout 0.0015    decision 0.5334    set_bounds 0.0207    solve 0.2499    add 0.1494    
Current (lb-rhs): -0.03598193824291229
100 domains visited
Cumulative time: 1.0451812744140625

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 72] 
split level 1: [/input-12, 31] [/input-12, 31] [/input-12, 72] [/input-12, 31] [/input-12, 72] [/input-12, 72] [/input-12, 31] [/input-12, 72] [/input-12, 72] [/input-12, 31] 
split level 2: [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-12, 31] [/input-8, 403] [/input-12, 31] [/input-8, 403] [/input-8, 403] 
split level 3: [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] 
cut re-enabled after branching node selection
0 lb beta sum: 0.46294793486595154, worst -0.03598181903362274
10 lb beta sum: 0.46294793486595154, worst -0.03606751561164856
Time: prepare 0.0175    bound 0.1180    transfer 0.0007    finalize 0.0025    func 0.1414    
Accumulated time: func 0.4448    prepare 0.0473    bound 0.3888    transfer 0.0034    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.07998669) min lb tensor(-0.03591523)
Number of Verified Splits: 48 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.01514291763305664 
BICCOS Cumulative time: 0.04006648063659668
Preprocessing time: 0.011664867401123047 Inference time: 0.0018181800842285156 Add cuts time: 0.001424551010131836 Cut analysis time: 0.0002353191375732422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01575 (3), -0.01568 (3), -0.01559 (3), -0.01543 (3), -0.01540 (3), -0.01539 (3), -0.01483 (3), -0.01435 (3), -0.01434 (3), -0.01357 (3), -0.01356 (3), -0.01348 (3), -0.01347 (3), -0.01302 (3), -0.01298 (3), -0.01253 (3), -0.01252 (3), -0.01245 (3), -0.01239 (3), -0.01238 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0152    solve 0.1415    add 0.0875    
Accumulated time: pickout 0.0026    decision 0.5531    set_bounds 0.0359    solve 0.3914    add 0.2369    
Current (lb-rhs): -0.015750914812088013
150 domains visited
Cumulative time: 1.3254263401031494

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-12, 31] [/input-12, 31] 
split level 2: [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] [/input-8, 140] 
split level 3: [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4651600420475006, worst -0.01575055718421936
10 lb beta sum: 0.4651600420475006, worst -0.015763908624649048
Time: prepare 0.0173    bound 0.1175    transfer 0.0013    finalize 0.0022    func 0.1415    
Accumulated time: func 0.5863    prepare 0.0649    bound 0.5062    transfer 0.0047    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.08410218) min lb tensor(-0.01530287)
Number of Verified Splits: 56 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 2
#cuts 4-6: 2
#cuts >= 20: 0
BICCOS time: 0.01563429832458496 
BICCOS Cumulative time: 0.05570077896118164
Preprocessing time: 0.011609077453613281 Inference time: 0.002334117889404297 Add cuts time: 0.0007982254028320312 Cut analysis time: 0.0008928775787353516
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00274 (4), -0.00272 (4), -0.00271 (4), -0.00270 (4), -0.00270 (4), -0.00269 (4), -0.00266 (4), -0.00266 (4), -0.00258 (4), -0.00258 (4), -0.00242 (4), -0.00239 (4), -0.00217 (4), -0.00211 (4), -0.00202 (4), -0.00200 (4), -0.00196 (4), -0.00188 (4), -0.00177 (4), -0.00174 (4), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0193    set_bounds 0.0156    solve 0.1416    add 0.2201    
Accumulated time: pickout 0.0036    decision 0.5723    set_bounds 0.0515    solve 0.5330    add 0.4570    
Current (lb-rhs): -0.002739042043685913
200 domains visited
Cumulative time: 1.7389345169067383

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 140] [/input-8, 140] [/input-8, 1713] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 140] [/input-8, 140] [/input-8, 140] 
split level 2: [/input-8, 771] [/input-8, 771] [/input-8, 140] [/input-8, 771] [/input-8, 771] [/input-8, 771] [/input-8, 771] [/input-8, 771] [/input-8, 771] [/input-8, 771] 
split level 3: [/input-8, 418] [/input-8, 418] [/input-8, 771] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.005363523960113525
10 lb beta sum: 0.36026012897491455, worst -0.0029265284538269043
Time: prepare 0.0080    bound 0.1347    transfer 0.0008    finalize 0.0025    func 0.1486    
Accumulated time: func 0.7349    prepare 0.0732    bound 0.6409    transfer 0.0055    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.24081039) min lb tensor(-0.00249052)
Number of Verified Splits: 327 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 3
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.031993865966796875 
BICCOS Cumulative time: 0.08769464492797852
Preprocessing time: 0.011481523513793945 Inference time: 0.01566028594970703 Add cuts time: 0.004397153854370117 Cut analysis time: 0.00045490264892578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00249 (5), -0.00248 (5), -0.00123 (5), -0.00118 (5), -0.00106 (5), -0.00101 (5), -0.00085 (5), -0.00084 (5), 
Length of domains: 8
Time: pickout 0.0012    decision 0.0206    set_bounds 0.0159    solve 0.1487    add 0.1091    
Accumulated time: pickout 0.0048    decision 0.5930    set_bounds 0.0674    solve 0.6817    add 0.5660    
Current (lb-rhs): -0.002490520477294922
208 domains visited
Cumulative time: 2.066716194152832


Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 72] 
split level 2: [/input-12, 31] 
split level 3: [/input-8, 403] 
split level 4: [/input-8, 140] 
split level 5: [/input-8, 1713] 
split level 6: [/input-8, 771] 
split level 7: [/input-8, 418] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03128010034561157
10 lb beta sum: 0.39908215403556824, worst -0.032390058040618896
Time: prepare 0.0051    bound 0.1335    transfer 0.0012    finalize 0.0017    func 0.1432    
Accumulated time: func 0.8781    prepare 0.0787    bound 0.7744    transfer 0.0066    finalize 0.0143    
all_split False
======================Cut inference begins======================
max lb tensor(0.07132323) min lb tensor(-0.03025371)
Number of Verified Splits: 128 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03554046154022217
10 lb beta sum: 0.46999698877334595, worst -0.009173288941383362
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 3
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.21169352531433105 
BICCOS Cumulative time: 0.29938817024230957
Preprocessing time: 0.007235527038574219 Inference time: 0.1999220848083496 Add cuts time: 0.004085540771484375 Cut analysis time: 0.00045037269592285156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03025 (8), -0.03003 (8), -0.02929 (8), -0.02853 (8), -0.02838 (8), -0.02828 (8), -0.02825 (8), -0.02799 (8), -0.02753 (8), -0.02735 (8), -0.02655 (8), -0.02652 (8), -0.02642 (8), -0.02616 (8), -0.02580 (8), -0.02559 (8), -0.02537 (8), -0.02526 (8), -0.02478 (8), -0.02469 (8), 
Length of domains: 128
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0200    solve 0.1433    add 0.0020    
Accumulated time: pickout 0.0052    decision 0.6155    set_bounds 0.0874    solve 0.8250    add 0.5681    
Current (lb-rhs): -0.030253708362579346
336 domains visited
Cumulative time: 2.469165086746216

BaB round 2
batch: 128
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] 
cut re-enabled after branching node selection
0 lb beta sum: 0.3535093069076538, worst -0.029781997203826904
10 lb beta sum: 0.35345458984375, worst -0.029745876789093018
Time: prepare 0.0112    bound 0.1291    transfer 0.0007    finalize 0.0013    func 0.1441    
Accumulated time: func 1.0222    prepare 0.0901    bound 0.9036    transfer 0.0073    finalize 0.0156    
all_split False
======================Cut inference begins======================
max lb tensor(-0.00377798) min lb tensor(-0.02972585)
Number of Verified Splits: 0 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 9.
#cuts 1-3: 3
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.007569313049316406 
BICCOS Cumulative time: 0.306957483291626
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02973 (9), -0.02951 (9), -0.02875 (9), -0.02793 (9), -0.02785 (9), -0.02769 (9), -0.02768 (9), -0.02741 (9), -0.02696 (9), -0.02677 (9), -0.02595 (9), -0.02589 (9), -0.02584 (9), -0.02552 (9), -0.02520 (9), -0.02497 (9), -0.02480 (9), -0.02470 (9), -0.02418 (9), -0.02417 (9), 
Length of domains: 256
Time: pickout 0.0024    decision 0.0158    set_bounds 0.0110    solve 0.1441    add 0.0019    
Accumulated time: pickout 0.0076    decision 0.6313    set_bounds 0.0984    solve 0.9691    add 0.5700    
Current (lb-rhs): -0.029725849628448486
592 domains visited
Cumulative time: 2.652397394180298

BaB round 3
batch: 256
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] [/input-8, 1731] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-8, 1731] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-8, 1731] 
cut re-enabled after branching node selection
0 lb beta sum: 0.35351797938346863, worst -0.02972579002380371
10 lb beta sum: 0.35350561141967773, worst -0.0297086238861084
Time: prepare 0.0223    bound 0.1354    transfer 0.0036    finalize 0.0026    func 0.1673    
Accumulated time: func 1.1895    prepare 0.1126    bound 1.0390    transfer 0.0109    finalize 0.0182    
all_split False
======================Cut inference begins======================
max lb tensor(0.26340622) min lb tensor(-0.02969873)
Number of Verified Splits: 103 of 512
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.35585474967956543, worst -0.7336610555648804
10 lb beta sum: 0.3431205451488495, worst -0.03523370623588562
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 3
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.22226572036743164 
BICCOS Cumulative time: 0.5292232036590576
Preprocessing time: 0.014342546463012695 Inference time: 0.2039341926574707 Add cuts time: 0.0035359859466552734 Cut analysis time: 0.00045299530029296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02970 (10), -0.02881 (10), -0.02874 (10), -0.02781 (10), -0.02766 (10), -0.02721 (10), -0.02697 (10), -0.02697 (10), -0.02677 (10), -0.02629 (10), -0.02583 (10), -0.02542 (10), -0.02504 (10), -0.02491 (10), -0.02477 (10), -0.02466 (10), -0.02450 (10), -0.02436 (10), -0.02413 (10), -0.02403 (10), 
Length of domains: 409
Time: pickout 0.0032    decision 0.0222    set_bounds 0.0225    solve 0.1680    add 0.0016    
Accumulated time: pickout 0.0108    decision 0.6534    set_bounds 0.1209    solve 1.1371    add 0.5716    
Current (lb-rhs): -0.029698729515075684
1001 domains visited
Cumulative time: 3.093684434890747

BaB round 4
batch: 409
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.35292887687683105, worst -0.029050469398498535
10 lb beta sum: 0.352908730506897, worst -0.029029548168182373
Time: prepare 0.0354    bound 0.1440    transfer 0.0017    finalize 0.0047    func 0.1911    
Accumulated time: func 1.3806    prepare 0.1483    bound 1.1830    transfer 0.0126    finalize 0.0229    
all_split False
======================Cut inference begins======================
max lb tensor(0.26838163) min lb tensor(-0.02901757)
Number of Verified Splits: 250 of 818
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 9
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.05254960060119629 
BICCOS Cumulative time: 0.5817728042602539
Preprocessing time: 0.023241758346557617 Inference time: 0.025426149368286133 Add cuts time: 0.003528118133544922 Cut analysis time: 0.0003535747528076172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02902 (11), -0.02879 (11), -0.02808 (11), -0.02722 (11), -0.02718 (11), -0.02695 (11), -0.02694 (11), -0.02681 (11), -0.02632 (11), -0.02626 (11), -0.02539 (11), -0.02502 (11), -0.02486 (11), -0.02483 (11), -0.02450 (11), -0.02432 (11), -0.02395 (11), -0.02392 (11), -0.02382 (11), -0.02379 (11), 
Length of domains: 568
Time: pickout 0.0059    decision 0.0373    set_bounds 0.0352    solve 0.1913    add 0.0029    
Accumulated time: pickout 0.0167    decision 0.6907    set_bounds 0.1562    solve 1.3285    add 0.5746    
Current (lb-rhs): -0.02901756763458252
1569 domains visited
Cumulative time: 3.4210386276245117

BaB round 5
batch: 568
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.028189003467559814
10 lb beta sum: 0.6585089564323425, worst -0.02815234661102295
Time: prepare 0.0225    bound 0.1396    transfer 0.0047    finalize 0.0061    func 0.1804    
Accumulated time: func 1.5610    prepare 0.1710    bound 1.3226    transfer 0.0173    finalize 0.0291    
all_split False
======================Cut inference begins======================
max lb tensor(0.64137608) min lb tensor(-0.02812713)
Number of Verified Splits: 882 of 1136
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.2609100341796875 
BICCOS Cumulative time: 0.8426828384399414
Preprocessing time: 0.03383159637451172 Inference time: 0.21501851081848145 Add cuts time: 0.011550426483154297 Cut analysis time: 0.0005095005035400391
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02813 (12), -0.02783 (12), -0.02717 (12), -0.02675 (12), -0.02625 (12), -0.02618 (12), -0.02598 (12), -0.02577 (12), -0.02534 (12), -0.02501 (12), -0.02438 (12), -0.02405 (12), -0.02404 (12), -0.02346 (12), -0.02303 (12), -0.02278 (12), -0.02277 (12), -0.02257 (12), -0.02241 (12), -0.02240 (12), 
Length of domains: 254
Time: pickout 0.0089    decision 0.0405    set_bounds 0.0486    solve 0.1807    add 0.0020    
Accumulated time: pickout 0.0256    decision 0.7312    set_bounds 0.2047    solve 1.5091    add 0.5765    
Current (lb-rhs): -0.02812713384628296
1823 domains visited
Cumulative time: 3.971201181411743

BaB round 6
batch: 254
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 772] [/input-8, 772] [/input-8, 1701] [/input-8, 772] [/input-8, 772] [/input-8, 1731] [/input-8, 772] [/input-8, 772] [/input-8, 1701] [/input-8, 772] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.026831865310668945
10 lb beta sum: 0.9590715169906616, worst -0.025736868381500244
Time: prepare 0.0101    bound 0.1445    transfer 0.0010    finalize 0.0023    func 0.1613    
Accumulated time: func 1.7222    prepare 0.1813    bound 1.4671    transfer 0.0183    finalize 0.0314    
all_split False
======================Cut inference begins======================
max lb tensor(0.38060904) min lb tensor(-0.02570851)
Number of Verified Splits: 150 of 508
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.03430581092834473 
BICCOS Cumulative time: 0.8769886493682861
Preprocessing time: 0.01470327377319336 Inference time: 0.017101526260375977 Add cuts time: 0.002134084701538086 Cut analysis time: 0.0003669261932373047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02571 (13), -0.02531 (13), -0.02499 (13), -0.02462 (13), -0.02413 (13), -0.02405 (13), -0.02392 (13), -0.02382 (13), -0.02377 (13), -0.02348 (13), -0.02343 (13), -0.02310 (13), -0.02275 (13), -0.02237 (13), -0.02223 (13), -0.02220 (13), -0.02219 (13), -0.02216 (13), -0.02105 (13), -0.02078 (13), 
Length of domains: 358
Time: pickout 0.0044    decision 0.0298    set_bounds 0.0221    solve 0.1614    add 0.0024    
Accumulated time: pickout 0.0300    decision 0.7610    set_bounds 0.2268    solve 1.6706    add 0.5790    
Current (lb-rhs): -0.025708511471748352
2181 domains visited
Cumulative time: 4.227075099945068

BaB round 7
batch: 358
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 731] [/input-8, 1261] [/input-8, 731] [/input-8, 1261] [/input-8, 731] [/input-8, 1261] [/input-8, 731] [/input-8, 772] [/input-8, 1261] [/input-8, 731] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0837414264678955, worst -0.025708451867103577
10 lb beta sum: 1.0837414264678955, worst -0.025683358311653137
Time: prepare 0.0307    bound 0.1357    transfer 0.0034    finalize 0.0032    func 0.1778    
Accumulated time: func 1.9000    prepare 0.2122    bound 1.6029    transfer 0.0217    finalize 0.0346    
all_split False
======================Cut inference begins======================
max lb tensor(0.00147533) min lb tensor(-0.02567156)
Number of Verified Splits: 12 of 716
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.022971391677856445 
BICCOS Cumulative time: 0.8999600410461426
Preprocessing time: 0.02070760726928711 Inference time: 0.0015506744384765625 Add cuts time: 0.0003457069396972656 Cut analysis time: 0.0003674030303955078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02567 (14), -0.02438 (14), -0.02405 (14), -0.02397 (14), -0.02397 (14), -0.02378 (14), -0.02358 (14), -0.02333 (14), -0.02331 (14), -0.02296 (14), -0.02294 (14), -0.02276 (14), -0.02272 (14), -0.02272 (14), -0.02253 (14), -0.02250 (14), -0.02245 (14), -0.02223 (14), -0.02216 (14), -0.02211 (14), 
Length of domains: 704
Time: pickout 0.0057    decision 0.0288    set_bounds 0.0323    solve 0.1780    add 0.0033    
Accumulated time: pickout 0.0357    decision 0.7898    set_bounds 0.2591    solve 1.8486    add 0.5822    
Current (lb-rhs): -0.02567155659198761
2885 domains visited
Cumulative time: 4.500612735748291

BaB round 8
batch: 704
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1261] [/input-8, 1716] [/input-8, 1261] [/input-8, 1716] [/input-8, 1261] [/input-8, 1716] [/input-8, 1261] [/input-8, 1261] [/input-8, 1716] [/input-8, 1261] 
cut re-enabled after branching node selection
0 lb beta sum: 1.0771684646606445, worst -0.024032965302467346
10 lb beta sum: 1.0771684646606445, worst -0.024019554257392883
Time: prepare 0.0605    bound 0.1515    transfer 0.0117    finalize 0.0060    func 0.2398    
Accumulated time: func 2.1398    prepare 0.2730    bound 1.7544    transfer 0.0334    finalize 0.0405    
all_split False
======================Cut inference begins======================
max lb tensor(0.23854256) min lb tensor(-0.02401252)
Number of Verified Splits: 229 of 1408
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 12
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.07704734802246094 
BICCOS Cumulative time: 0.9770073890686035
Preprocessing time: 0.04540657997131348 Inference time: 0.028551101684570312 Add cuts time: 0.002637147903442383 Cut analysis time: 0.0004525184631347656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02401 (15), -0.02393 (15), -0.02306 (15), -0.02271 (15), -0.02268 (15), -0.02263 (15), -0.02245 (15), -0.02242 (15), -0.02239 (15), -0.02237 (15), -0.02230 (15), -0.02230 (15), -0.02213 (15), -0.02210 (15), -0.02207 (15), -0.02205 (15), -0.02204 (15), -0.02182 (15), -0.02171 (15), -0.02154 (15), 
Length of domains: 1179
Time: pickout 0.0097    decision 0.0547    set_bounds 0.0600    solve 0.2401    add 0.0038    
Accumulated time: pickout 0.0454    decision 0.8445    set_bounds 0.3191    solve 2.0887    add 0.5861    
Current (lb-rhs): -0.024012520909309387
4064 domains visited
Cumulative time: 4.94978928565979

BaB round 9
batch: 1179
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] [/input-8, 1701] 
cut re-enabled after branching node selection
0 lb beta sum: 1.054120659828186, worst -0.0234500914812088
10 lb beta sum: 1.054120659828186, worst -0.023436203598976135
Time: prepare 0.1022    bound 0.1966    transfer 0.0132    finalize 0.0107    func 0.3393    
Accumulated time: func 2.4791    prepare 0.3755    bound 1.9510    transfer 0.0466    finalize 0.0512    
all_split False
======================Cut inference begins======================
max lb tensor(0.01008892) min lb tensor(-0.02343060)
Number of Verified Splits: 284 of 2358
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.11295199394226074 
BICCOS Cumulative time: 1.0899593830108643
Preprocessing time: 0.0719597339630127 Inference time: 0.03762316703796387 Add cuts time: 0.002849578857421875 Cut analysis time: 0.0005195140838623047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02343 (16), -0.02332 (16), -0.02243 (16), -0.02241 (16), -0.02212 (16), -0.02205 (16), -0.02203 (16), -0.02202 (16), -0.02177 (16), -0.02168 (16), -0.02158 (16), -0.02154 (16), -0.02151 (16), -0.02149 (16), -0.02148 (16), -0.02147 (16), -0.02144 (16), -0.02144 (16), -0.02135 (16), -0.02135 (16), 
Length of domains: 2074
Time: pickout 0.0166    decision 0.0799    set_bounds 0.1004    solve 0.3398    add 0.0123    
Accumulated time: pickout 0.0620    decision 0.9244    set_bounds 0.4194    solve 2.4285    add 0.5984    
Current (lb-rhs): -0.02343060076236725
6138 domains visited
Cumulative time: 5.617832183837891

BaB round 10
batch: 2074
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] [/input-8, 1716] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.022610723972320557
10 lb beta sum: 0.7926555275917053, worst -0.022605180740356445
Time: prepare 0.0858    bound 0.2927    transfer 0.0234    finalize 0.0189    func 0.4483    
Accumulated time: func 2.9273    prepare 0.4616    bound 2.2437    transfer 0.0700    finalize 0.0701    
all_split False
======================Cut inference begins======================
max lb tensor(0.22707689) min lb tensor(-0.02260041)
Number of Verified Splits: 1451 of 4148
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.3289828300476074 
BICCOS Cumulative time: 1.4189422130584717
Preprocessing time: 0.12680935859680176 Inference time: 0.18969297409057617 Add cuts time: 0.011937618255615234 Cut analysis time: 0.0005428791046142578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02260 (17), -0.02249 (17), -0.02185 (17), -0.02182 (17), -0.02148 (17), -0.02147 (17), -0.02144 (17), -0.02137 (17), -0.02128 (17), -0.02119 (17), -0.02104 (17), -0.02095 (17), -0.02095 (17), -0.02093 (17), -0.02093 (17), -0.02092 (17), -0.02089 (17), -0.02086 (17), -0.02072 (17), -0.02071 (17), 
Length of domains: 2697
Time: pickout 0.0284    decision 0.2788    set_bounds 0.1776    solve 0.4496    add 0.0112    
Accumulated time: pickout 0.0904    decision 1.2032    set_bounds 0.5970    solve 2.8781    add 0.6096    
Current (lb-rhs): -0.022600412368774414
8835 domains visited
Cumulative time: 6.912066698074341

BaB round 11
batch: 2697
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.9046577215194702, worst -0.021347880363464355
10 lb beta sum: 0.9289095997810364, worst -0.021337568759918213
Time: prepare 0.2366    bound 0.3586    transfer 0.0345    finalize 0.0306    func 0.6970    
Accumulated time: func 3.6243    prepare 0.6985    bound 2.6023    transfer 0.1045    finalize 0.1007    
all_split False
======================Cut inference begins======================
max lb tensor(0.00180221) min lb tensor(-0.02133340)
Number of Verified Splits: 351 of 5394
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.38022375106811523 
BICCOS Cumulative time: 1.799165964126587
Preprocessing time: 0.16517877578735352 Inference time: 0.2107706069946289 Add cuts time: 0.0037622451782226562 Cut analysis time: 0.0005121231079101562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02133 (18), -0.02123 (18), -0.02118 (18), -0.02116 (18), -0.02096 (18), -0.02085 (18), -0.02081 (18), -0.02078 (18), -0.02041 (18), -0.02031 (18), -0.02031 (18), -0.02029 (18), -0.02025 (18), -0.02023 (18), -0.02020 (18), -0.02011 (18), -0.02009 (18), -0.02002 (18), -0.02001 (18), -0.02000 (18), 
Length of domains: 5043
Time: pickout 0.0463    decision 0.3126    set_bounds 0.2368    solve 0.6982    add 0.0205    
Accumulated time: pickout 0.1367    decision 1.5158    set_bounds 0.8338    solve 3.5763    add 0.6301    
Current (lb-rhs): -0.021333396434783936
13878 domains visited
Cumulative time: 8.616217136383057

BaB round 12
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 772] [/input-8, 731] [/input-8, 772] [/input-8, 731] [/input-8, 772] [/input-8, 772] [/input-8, 772] [/input-8, 772] [/input-8, 731] [/input-8, 731] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8757501840591431, worst -0.021183520555496216
10 lb beta sum: 0.8872147798538208, worst -0.021181732416152954
Time: prepare 0.3639    bound 0.5018    transfer 0.0256    finalize 0.2113    func 1.1564    
Accumulated time: func 4.7807    prepare 1.0626    bound 3.1041    transfer 0.1301    finalize 0.3120    
all_split False
======================Cut inference begins======================
max lb tensor(0.00992012) min lb tensor(-0.02118072)
Number of Verified Splits: 2700 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.6805658340454102 
BICCOS Cumulative time: 2.479731798171997
Preprocessing time: 0.25814008712768555 Inference time: 0.39995241165161133 Add cuts time: 0.021926403045654297 Cut analysis time: 0.0005469322204589844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02118 (19), -0.02115 (19), -0.02081 (19), -0.02078 (19), -0.02065 (19), -0.02055 (19), -0.02031 (19), -0.02029 (19), -0.02028 (19), -0.02025 (19), -0.02022 (19), -0.02018 (19), -0.02001 (19), -0.01999 (19), -0.01993 (19), -0.01992 (19), -0.01992 (19), -0.01988 (19), -0.01988 (19), -0.01985 (19), 
Length of domains: 6439
Time: pickout 0.0552    decision 0.2280    set_bounds 0.3659    solve 1.1580    add 0.0221    
Accumulated time: pickout 0.1918    decision 1.7439    set_bounds 1.1996    solve 4.7343    add 0.6522    
Current (lb-rhs): -0.021180719137191772
19370 domains visited
current_vram/total_varm: 10.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 11.164979219436646

BaB round 13
batch: 6439
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] [/input-8, 1699] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8777148723602295, worst -0.02026352286338806
10 lb beta sum: 0.8825717568397522, worst -0.020257622003555298
Time: prepare 0.5714    bound 0.7496    transfer 0.0921    finalize 0.0709    func 1.5695    
Accumulated time: func 6.3501    prepare 1.6344    bound 3.8537    transfer 0.2222    finalize 0.3829    
all_split False
======================Cut inference begins======================
max lb tensor(0.00957203) min lb tensor(-0.02025124)
Number of Verified Splits: 1649 of 12878
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.721630334854126 
BICCOS Cumulative time: 3.201362133026123
Preprocessing time: 0.41069960594177246 Inference time: 0.2822425365447998 Add cuts time: 0.028165340423583984 Cut analysis time: 0.0005228519439697266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02025 (20), -0.02007 (20), -0.02005 (20), -0.01968 (20), -0.01964 (20), -0.01961 (20), -0.01955 (20), -0.01944 (20), -0.01944 (20), -0.01943 (20), -0.01935 (20), -0.01934 (20), -0.01932 (20), -0.01925 (20), -0.01923 (20), -0.01923 (20), -0.01922 (20), -0.01918 (20), -0.01915 (20), -0.01914 (20), 
Length of domains: 11229
Time: pickout 0.1142    decision 0.5415    set_bounds 0.7917    solve 1.5726    add 0.0371    
Accumulated time: pickout 0.3060    decision 2.2853    set_bounds 1.9913    solve 6.3070    add 0.6893    
Current (lb-rhs): -0.02025124430656433
30599 domains visited
Cumulative time: 14.977726459503174

BaB round 14
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 582] [/input-8, 582] [/input-8, 1733] [/input-8, 582] [/input-8, 1733] [/input-8, 582] [/input-8, 1733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8659132719039917, worst -0.019438713788986206
10 lb beta sum: 0.8684180974960327, worst -0.019434958696365356
Time: prepare 0.7214    bound 0.9301    transfer 0.0572    finalize 0.0785    func 1.8944    
Accumulated time: func 8.2445    prepare 2.3563    bound 4.7838    transfer 0.2794    finalize 0.4614    
all_split False
======================Cut inference begins======================
max lb tensor(0.00217795) min lb tensor(-0.01942977)
Number of Verified Splits: 1469 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 1.074610948562622 
BICCOS Cumulative time: 4.275973081588745
Preprocessing time: 0.7928884029388428 Inference time: 0.26768946647644043 Add cuts time: 0.01338815689086914 Cut analysis time: 0.0006449222564697266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01943 (21), -0.01940 (21), -0.01915 (20), -0.01911 (21), -0.01909 (21), -0.01905 (21), -0.01904 (20), -0.01902 (21), -0.01886 (21), -0.01884 (21), -0.01874 (21), -0.01864 (21), -0.01861 (21), -0.01861 (21), -0.01850 (21), -0.01848 (21), -0.01847 (21), -0.01845 (21), -0.01831 (21), -0.01829 (21), 
Length of domains: 17952
Time: pickout 0.1199    decision 0.6569    set_bounds 0.9798    solve 1.8975    add 0.0505    
Accumulated time: pickout 0.4259    decision 2.9422    set_bounds 2.9711    solve 8.2045    add 0.7399    
Current (lb-rhs): -0.019429773092269897
45514 domains visited
current_vram/total_varm: 20.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 19.796077489852905

BaB round 15
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1733] [/input-8, 582] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] 
cut re-enabled after branching node selection
0 lb beta sum: 0.837927520275116, worst -0.0186099112033844
10 lb beta sum: 0.8391438722610474, worst -0.018601030111312866
Time: prepare 1.4657    bound 1.7912    transfer 0.1512    finalize 0.4914    func 4.1087    
Accumulated time: func 12.3532    prepare 3.8223    bound 6.5749    transfer 0.4306    finalize 0.9528    
all_split False
======================Cut inference begins======================
max lb tensor(0.00312722) min lb tensor(-0.01859716)
Number of Verified Splits: 3984 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 2.2041499614715576 
BICCOS Cumulative time: 6.480123043060303
Preprocessing time: 1.0412049293518066 Inference time: 1.1205947399139404 Add cuts time: 0.041832685470581055 Cut analysis time: 0.0005176067352294922
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01860 (22), -0.01857 (22), -0.01848 (21), -0.01845 (21), -0.01842 (21), -0.01836 (22), -0.01834 (22), -0.01832 (21), -0.01825 (22), -0.01822 (22), -0.01818 (22), -0.01815 (22), -0.01811 (21), -0.01808 (21), -0.01784 (22), -0.01773 (22), -0.01769 (22), -0.01766 (22), -0.01766 (22), -0.01765 (21), 
Length of domains: 30352
Time: pickout 0.2352    decision 1.6810    set_bounds 1.8070    solve 4.1142    add 0.0955    
Accumulated time: pickout 0.6611    decision 4.6232    set_bounds 4.7781    solve 12.3186    add 0.8354    
Current (lb-rhs): -0.018597155809402466
74298 domains visited
current_vram/total_varm: 32.0GB/99.9GB, batch_size increase to 32768
Cumulative time: 30.017064809799194

BaB round 16
batch: 30352
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1730] [/input-8, 1730] [/input-8, 1730] [/input-8, 1730] [/input-8, 1730] [/input-8, 1730] [/input-8, 582] [/input-8, 579] [/input-8, 582] [/input-8, 579] 
cut re-enabled after branching node selection
0 lb beta sum: 0.8119398951530457, worst -0.017716675996780396
10 lb beta sum: 0.8126030564308167, worst -0.017701059579849243
Time: prepare 2.7142    bound 3.2717    transfer 0.3113    finalize 0.3498    func 7.5195    
Accumulated time: func 19.8728    prepare 6.5369    bound 9.8466    transfer 0.7418    finalize 1.3026    
all_split False
======================Cut inference begins======================
max lb tensor(0.00325406) min lb tensor(-0.01769260)
Number of Verified Splits: 8029 of 60704
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 4.1079723834991455 
BICCOS Cumulative time: 10.588095426559448
Preprocessing time: 1.932807207107544 Inference time: 2.0940299034118652 Add cuts time: 0.0805363655090332 Cut analysis time: 0.000598907470703125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01769 (22), -0.01766 (22), -0.01759 (23), -0.01759 (22), -0.01757 (23), -0.01748 (22), -0.01740 (23), -0.01738 (23), -0.01737 (23), -0.01736 (22), -0.01734 (23), -0.01733 (22), -0.01731 (23), -0.01728 (23), -0.01702 (23), -0.01699 (23), -0.01696 (23), -0.01695 (22), -0.01695 (23), -0.01693 (23), 
Length of domains: 52675
Time: pickout 0.5432    decision 3.0363    set_bounds 3.7092    solve 7.5291    add 0.1477    
Accumulated time: pickout 1.2043    decision 7.6595    set_bounds 8.4873    solve 19.8477    add 0.9831    
Current (lb-rhs): -0.017692595720291138
126973 domains visited
Cumulative time: 49.249167680740356

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 579] [/input-8, 579] [/input-8, 1593] [/input-8, 1593] [/input-8, 1593] [/input-8, 1593] [/input-8, 1733] [/input-8, 578] [/input-8, 1733] [/input-8, 1730] 
cut re-enabled after branching node selection
0 lb beta sum: 0.779263436794281, worst -0.016602888703346252
10 lb beta sum: 0.7796909809112549, worst -0.016597822308540344
Time: prepare 2.9655    bound 8.7111    transfer 0.3523    finalize 1.1847    func 13.6460    
Accumulated time: func 33.5188    prepare 9.5027    bound 18.5577    transfer 1.0941    finalize 2.4873    
all_split False
======================Cut inference begins======================
max lb tensor(0.00366366) min lb tensor(-0.01658119)
Number of Verified Splits: 9923 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 4.928262233734131 
BICCOS Cumulative time: 15.516357660293579
Preprocessing time: 2.100517988204956 Inference time: 2.7185850143432617 Add cuts time: 0.1085207462310791 Cut analysis time: 0.0006384849548339844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01759 (23), -0.01759 (22), -0.01757 (23), -0.01748 (22), -0.01740 (23), -0.01738 (23), -0.01731 (23), -0.01728 (23), -0.01696 (23), -0.01693 (23), -0.01666 (23), -0.01664 (23), -0.01663 (23), -0.01662 (23), -0.01661 (23), -0.01658 (23), -0.01656 (23), -0.01656 (23), -0.01653 (23), -0.01652 (23), 
Length of domains: 75520
Time: pickout 0.5028    decision 3.2786    set_bounds 4.2027    solve 13.6581    add 0.2080    
Accumulated time: pickout 1.7071    decision 10.9382    set_bounds 12.6900    solve 33.5059    add 1.1911    
Current (lb-rhs): -0.01759423315525055
182586 domains visited
Cumulative time: 76.24387836456299

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 142] [/input-8, 1733] [/input-8, 1730] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7606064677238464, worst -0.016468435525894165
10 lb beta sum: 0.7609677314758301, worst -0.016451865434646606
Time: prepare 2.9970    bound 8.7067    transfer 0.3470    finalize 0.5619    func 13.0558    
Accumulated time: func 46.5746    prepare 12.5002    bound 27.2645    transfer 1.4411    finalize 3.0492    
all_split False
======================Cut inference begins======================
max lb tensor(0.00399977) min lb tensor(-0.01644358)
Number of Verified Splits: 11503 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 5.551471948623657 
BICCOS Cumulative time: 21.067829608917236
Preprocessing time: 3.154360055923462 Inference time: 2.251030206680298 Add cuts time: 0.1454460620880127 Cut analysis time: 0.0006356239318847656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01658 (23), -0.01656 (23), -0.01648 (24), -0.01646 (23), -0.01645 (24), -0.01644 (24), -0.01643 (23), -0.01642 (23), -0.01641 (24), -0.01640 (23), -0.01637 (23), -0.01637 (23), -0.01634 (24), -0.01631 (23), -0.01631 (24), -0.01628 (24), -0.01626 (23), -0.01625 (24), -0.01615 (24), -0.01613 (24), 
Length of domains: 96785
Time: pickout 0.5218    decision 3.2924    set_bounds 4.6886    solve 13.0657    add 0.1725    
Accumulated time: pickout 2.2289    decision 14.2306    set_bounds 17.3786    solve 46.5716    add 1.3636    
Current (lb-rhs): -0.01658119261264801
236619 domains visited
Cumulative time: 103.74989008903503

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1730] [/input-8, 579] [/input-8, 580] [/input-8, 1730] [/input-8, 1730] [/input-8, 1730] [/input-8, 580] [/input-8, 142] [/input-8, 580] [/input-8, 1730] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7479205131530762, worst -0.015915483236312866
10 lb beta sum: 0.7481854557991028, worst -0.015901297330856323
Time: prepare 3.0766    bound 8.7094    transfer 0.3504    finalize 0.5539    func 13.1444    
Accumulated time: func 59.7190    prepare 15.5771    bound 35.9739    transfer 1.7915    finalize 3.6031    
all_split False
======================Cut inference begins======================
max lb tensor(0.00238901) min lb tensor(-0.01588699)
Number of Verified Splits: 15359 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 6.738672733306885 
BICCOS Cumulative time: 27.80650234222412
Preprocessing time: 2.1574487686157227 Inference time: 4.124809741973877 Add cuts time: 0.4557454586029053 Cut analysis time: 0.0006687641143798828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01658 (23), -0.01656 (23), -0.01644 (24), -0.01642 (23), -0.01641 (24), -0.01640 (23), -0.01637 (23), -0.01637 (23), -0.01634 (24), -0.01631 (23), -0.01631 (24), -0.01628 (24), -0.01626 (23), -0.01625 (24), -0.01615 (24), -0.01612 (24), -0.01609 (24), -0.01609 (24), -0.01606 (24), -0.01606 (24), 
Length of domains: 114194
Time: pickout 0.5288    decision 4.3442    set_bounds 4.0313    solve 13.1557    add 0.2375    
Accumulated time: pickout 2.7577    decision 18.5748    set_bounds 21.4099    solve 59.7272    add 1.6011    
Current (lb-rhs): -0.01658119261264801
286796 domains visited
Cumulative time: 133.05891489982605

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 580] [/input-8, 580] [/input-8, 579] [/input-8, 580] [/input-8, 1730] [/input-8, 580] [/input-8, 579] [/input-8, 580] [/input-8, 580] [/input-8, 1730] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7374669313430786, worst -0.015925347805023193
10 lb beta sum: 0.7377740144729614, worst -0.01590406894683838
Time: prepare 3.1289    bound 8.7104    transfer 0.3669    finalize 0.5965    func 14.7280    
Accumulated time: func 74.4470    prepare 18.7065    bound 44.6843    transfer 2.1584    finalize 4.1997    
all_split False
======================Cut inference begins======================
max lb tensor(0.00439775) min lb tensor(-0.01589090)
Number of Verified Splits: 15517 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 5.537619113922119 
BICCOS Cumulative time: 33.34412145614624
Preprocessing time: 2.159029960632324 Inference time: 2.901323080062866 Add cuts time: 0.47629308700561523 Cut analysis time: 0.0009729862213134766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01644 (24), -0.01641 (24), -0.01637 (23), -0.01628 (24), -0.01626 (23), -0.01625 (24), -0.01609 (24), -0.01609 (24), -0.01606 (24), -0.01606 (24), -0.01589 (24), -0.01589 (25), -0.01586 (25), -0.01580 (24), -0.01578 (24), -0.01578 (24), -0.01574 (24), -0.01574 (25), -0.01574 (24), -0.01571 (25), 
Length of domains: 131445
Time: pickout 0.5539    decision 3.3158    set_bounds 4.1691    solve 14.7410    add 0.1465    
Accumulated time: pickout 3.3115    decision 21.8907    set_bounds 25.5790    solve 74.4682    add 1.7476    
Current (lb-rhs): -0.016443580389022827
336815 domains visited
Cumulative time: 161.80532145500183

BaB round 21
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1325] [/input-8, 1593] [/input-8, 1325] [/input-8, 1325] [/input-8, 142] [/input, 2968] [/input-8, 1593] [/input, 2968] [/input-8, 1325] [/input, 2968] 
cut re-enabled after branching node selection
0 lb beta sum: 0.7261857390403748, worst -0.01587691903114319
10 lb beta sum: 0.7262700200080872, worst -0.015873759984970093
Time: prepare 3.1770    bound 8.7086    transfer 0.3941    finalize 0.6082    func 13.3389    
Accumulated time: func 87.7859    prepare 21.8839    bound 53.3929    transfer 2.5525    finalize 4.8078    
all_split False
======================Cut inference begins======================
max lb tensor(0.00566433) min lb tensor(-0.01586959)
Number of Verified Splits: 16580 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 7.723980188369751 
BICCOS Cumulative time: 41.06810164451599
Preprocessing time: 2.2324016094207764 Inference time: 5.203525543212891 Add cuts time: 0.2871851921081543 Cut analysis time: 0.0008678436279296875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01589 (24), -0.01589 (25), -0.01587 (25), -0.01586 (25), -0.01586 (24), -0.01584 (25), -0.01578 (24), -0.01575 (24), -0.01574 (25), -0.01571 (25), -0.01570 (25), -0.01567 (25), -0.01557 (24), -0.01555 (25), -0.01553 (24), -0.01553 (25), -0.01553 (24), -0.01552 (25), -0.01551 (25), -0.01551 (25), 
Length of domains: 147633
Time: pickout 0.5640    decision 4.4222    set_bounds 4.6843    solve 13.3535    add 0.1456    
Accumulated time: pickout 3.8755    decision 26.3128    set_bounds 30.2634    solve 87.8218    add 1.8932    
Current (lb-rhs): -0.015890896320343018
385771 domains visited
Cumulative time: 193.00149607658386

BaB round 22
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1325] [/input, 2968] [/input-8, 1325] [/input-8, 1325] [/input-8, 1325] [/input, 2968] [/input, 2968] [/input-8, 1325] [/input-8, 1325] [/input, 2968] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.015000879764556885
10 lb beta sum: 0.3945646286010742, worst -0.015017151832580566
Time: prepare 1.7982    bound 10.1260    transfer 0.4206    finalize 0.6073    func 13.4047    
Accumulated time: func 101.1906    prepare 23.6825    bound 63.5189    transfer 2.9732    finalize 5.4151    
all_split False
======================Cut inference begins======================
max lb tensor(0.00252885) min lb tensor(-0.01496732)
Number of Verified Splits: 16901 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 13
#cuts 4-6: 1
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 8.062600374221802 
BICCOS Cumulative time: 49.13070201873779
Preprocessing time: 2.31325364112854 Inference time: 5.447882890701294 Add cuts time: 0.30075860023498535 Cut analysis time: 0.0007052421569824219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01589 (24), -0.01589 (25), -0.01587 (25), -0.01586 (25), -0.01586 (24), -0.01584 (25), -0.01578 (24), -0.01575 (24), -0.01574 (25), -0.01571 (25), -0.01570 (25), -0.01567 (25), -0.01555 (25), -0.01553 (25), -0.01553 (24), -0.01552 (25), -0.01551 (25), -0.01551 (25), -0.01550 (25), -0.01549 (24), 
Length of domains: 163500
Time: pickout 0.5961    decision 3.3393    set_bounds 4.7712    solve 13.4222    add 0.1476    
Accumulated time: pickout 4.4716    decision 29.6521    set_bounds 35.0345    solve 101.2440    add 2.0408    
Current (lb-rhs): -0.015890896320343018
434406 domains visited
Time out!!!!!!!!
Result: unknown in 227.0514 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.92134666, -14.68086624, -14.01877499, -12.96694374, -13.68891144,
         -13.29801559, -12.61456585, -14.58385181, -12.91630363, -13.61004829]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 293, 1, 523] with unstable size 292 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 523] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [292]; unstable size 292; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 292] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 292] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.07341218,  0.02069950, -0.45618224, -0.75070512, -0.48273373,
         -0.58674055,  0.21641427, -1.83327842, -0.92162514]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.92134666, -14.68086624, -14.01877499, -12.96694374, -13.68891144,
         -13.29801559, -12.61456585, -14.58385181, -12.91630363, -13.61004829]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.52026176, -14.13672733, -13.69211388, -12.48086071, -13.31669331,
          -12.76901054, -12.69317245, -14.15498734, -12.40141487, -13.11113548],
         [-14.52026176, -14.13672733, -13.69211388, -12.48086071, -13.31669331,
          -12.76901054, -12.69317245, -14.15498734, -12.40141487, -13.11113548]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.99894142, -0.21231174,  0.62352085,  0.07583809, -0.29175758,
           0.41796303]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0153 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0723 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.54337883, -22.91224098, -19.67365646, -18.07358360, -18.92478752,
         -18.42077827, -18.27539825, -20.47289658, -23.38033676, -23.14374924]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [789]; unstable size 789; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 789] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 789] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 789] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 259] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.47897100,  2.52675486,  0.01573062, -0.71339208, -0.73171139,
         -1.54283786,  0.69137222,  2.97468758,  2.91973925]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.54337883, -22.91224098, -19.67365646, -18.07358360, -18.92478752,
         -18.42077827, -18.27539825, -20.47289658, -23.38033676, -23.14374924]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.54338074, -22.91224098, -19.67365646, -18.07358170, -18.92478561,
          -18.42077637, -18.27539635, -20.47289658, -23.38033676, -23.14374733],
         [-22.54338074, -22.91224098, -19.67365646, -18.07358170, -18.92478561,
          -18.42077637, -18.27539635, -20.47289658, -23.38033676, -23.14374733]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.34719467,  0.50400925, -0.14538002]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.22789001, -20.43865013, -26.99475098, -25.86932182, -27.76927757,
         -27.09349632, -26.96388435, -26.58814430, -23.07920265, -18.19562912]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [462]; unstable size 462; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 183, 1, 462] with unstable size 182 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 462] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [182]; unstable size 182; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 182] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 182] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89370680, 1.38738155, 7.23277378, 6.41899109, 8.12875748, 7.56016350,
         7.36910725, 6.89903021, 3.88113141]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0439 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
         -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 235, 1, 584] with unstable size 234 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 584] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [234]; unstable size 234; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 234] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 234] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.98524368,  0.54466176,  1.17118883, -0.38150382,  1.88505077,
         -0.46537113,  0.44484615,  0.24631643,  3.03603745]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
         -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.14it/s]100%|██████████| 1/1 [00:00<00:00,  9.13it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.40040588, -27.81520653, -28.63296509, -26.82895470, -29.46481514,
          -26.85583305, -27.88446808, -27.95312691, -26.49433899, -30.27206993],
         [-28.40040588, -27.81520653, -28.63296509, -26.82895470, -29.46481514,
          -26.85583305, -27.88446808, -27.95312691, -26.49433899, -30.27206993]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33461571, 0.36149406]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1121 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.091230392456055
alpha/beta optimization time: 1.1897273063659668
initial alpha-crown bounds: tensor([[ 1.03688908,  0.59373093,  1.24077272, -0.31201315,  1.97173262,
         -0.38633633,  0.51818943,  0.33714390,  3.09112072]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.3863363265991211
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6660623550415
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6660225391388
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.66599678993225
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.6659755706787
Verifying property 3 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31201315]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
        -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31201315]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 584
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 230
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 829
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00012946128845214844
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3120102882385254
10 lb beta sum: 0.0, worst -0.3120231628417969
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0529    transfer 0.0001    finalize 0.0001    func 0.0534    
Accumulated time: func 0.0534    prepare 0.0002    bound 0.0529    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 2] 
split level 6: [/input-12, 64] 
split level 7: [/input-12, 79] 
split level 8: [/input-12, 61] 
split level 9: [/input-12, 46] 
split level 10: [/input-8, 268] 
split level 11: [/input-8, 172] 
split level 12: [/input-8, 171] 
split level 13: [/input, 456] 
split level 14: [/input, 439] 
split level 15: [/input, 3000] 
split level 16: [/input-8, 179] 
split level 17: [/input-8, 788] 
split level 18: [/input, 3017] 
split level 19: [/input, 442] 
split level 20: [/input, 3018] 
split level 21: [/input-8, 371] 
split level 22: [/input, 3032] 
split level 23: [/input, 2986] 
split level 24: [/input-8, 909] 
split level 25: [/input-8, 1287] 
split level 26: [/input-8, 1282] 
split level 27: [/input-8, 473] 
split level 28: [/input-8, 178] 
split level 29: [/input, 3066] 
split level 30: [/input, 2972] 
split level 31: [/input, 3002] 
split level 32: [/input-8, 380] 
split level 33: [/input, 954] 
split level 34: [/input-8, 892] 
split level 35: [/input-8, 372] 
split level 36: [/input-8, 1067] 
split level 37: [/input, 487] 
split level 38: [/input, 2955] 
split level 39: [/input, 3019] 
split level 40: [/input-8, 186] 
split level 41: [/input-8, 1780] 
split level 42: [/input-8, 1125] 
split level 43: [/input, 3031] 
split level 44: [/input-8, 381] 
split level 45: [/input-8, 1075] 
split level 46: [/input, 999] 
split level 47: [/input-8, 1732] 
split level 48: [/input, 506] 
split level 49: [/input-8, 1123] 
split level 50: [/input, 3013] 
split level 51: [/input-8, 1118] 
split level 52: [/input-8, 292] 
split level 53: [/input, 474] 
split level 54: [/input-8, 1772] 
split level 55: [/input-8, 1038] 
split level 56: [/input-8, 1773] 
split level 57: [/input-8, 508] 
split level 58: [/input, 1975] 
split level 59: [/input, 892] 
split level 60: [/input, 956] 
split level 61: [/input, 986] 
split level 62: [/input-8, 146] 
split level 63: [/input-8, 465] 
split level 64: [/input, 202] 
split level 65: [/input-8, 774] 
split level 66: [/input-8, 925] 
split level 67: [/input-8, 1035] 
split level 68: [/input-8, 592] 
split level 69: [/input, 200] 
split level 70: [/input-8, 871] 
split level 71: [/input-8, 1655] 
split level 72: [/input-8, 792] 
split level 73: [/input, 949] 
split level 74: [/input, 2871] 
split level 75: [/input, 3036] 
split level 76: [/input, 918] 
split level 77: [/input-8, 1643] 
split level 78: [/input, 298] 
split level 79: [/input-8, 1731] 
split level 80: [/input, 467] 
split level 81: [/input, 217] 
split level 82: [/input, 971] 
split level 83: [/input, 1993] 
split level 84: [/input, 932] 
split level 85: [/input-8, 2046] 
split level 86: [/input, 2997] 
split level 87: [/input, 618] 
split level 88: [/input, 2927] 
split level 89: [/input-8, 893] 
split level 90: [/input, 1977] 
split level 91: [/input-8, 1076] 
split level 92: [/input-8, 1180] 
split level 93: [/input, 1974] 
split level 94: [/input-8, 891] 
split level 95: [/input, 1017] 
split level 96: [/input-8, 1730] 
split level 97: [/input, 923] 
split level 98: [/input-8, 1625] 
split level 99: [/input-8, 843] 
split level 100: [/input, 1976] 
split level 101: [/input, 232] 
split level 102: [/input, 435] 
split level 103: [/input, 2947] 
split level 104: [/input, 903] 
split level 105: [/input-8, 888] 
split level 106: [/input, 1003] 
split level 107: [/input, 507] 
split level 108: [/input, 390] 
split level 109: [/input, 1012] 
split level 110: [/input-8, 1614] 
split level 111: [/input, 1960] 
split level 112: [/input-8, 165] 
split level 113: [/input, 1978] 
split level 114: [/input-8, 773] 
split level 115: [/input, 3554] 
split level 116: [/input-8, 820] 
split level 117: [/input, 1990] 
split level 118: [/input-8, 1407] 
split level 119: [/input, 597] 
split level 120: [/input, 924] 
split level 121: [/input, 633] 
split level 122: [/input, 3022] 
split level 123: [/input-8, 158] 
split level 124: [/input, 308] 
split level 125: [/input-8, 122] 
split level 126: [/input, 661] 
split level 127: [/input-8, 1790] 
split level 128: [/input-8, 1563] 
split level 129: [/input-8, 1233] 
split level 130: [/input, 884] 
split level 131: [/input, 185] 
split level 132: [/input-8, 1737] 
split level 133: [/input, 619] 
split level 134: [/input, 3037] 
split level 135: [/input, 203] 
split level 136: [/input, 219] 
split level 137: [/input, 1973] 
split level 138: [/input-8, 879] 
split level 139: [/input-8, 406] 
split level 140: [/input, 2887] 
split level 141: [/input, 283] 
split level 142: [/input-8, 334] 
split level 143: [/input, 1989] 
split level 144: [/input, 323] 
split level 145: [/input, 909] 
split level 146: [/input, 631] 
split level 147: [/input, 795] 
split level 148: [/input, 2024] 
split level 149: [/input, 3522] 
split level 150: [/input, 314] 
split level 151: [/input-8, 1548] 
split level 152: [/input, 1502] 
split level 153: [/input, 605] 
split level 154: [/input-8, 169] 
split level 155: [/input-8, 887] 
split level 156: [/input-8, 1613] 
split level 157: [/input, 222] 
split level 158: [/input-8, 890] 
split level 159: [/input, 632] 
split level 160: [/input, 2010] 
split level 161: [/input, 221] 
split level 162: [/input, 2526] 
split level 163: [/input, 187] 
split level 164: [/input-8, 1678] 
split level 165: [/input, 2092] 
split level 166: [/input, 973] 
split level 167: [/input, 1961] 
split level 168: [/input-8, 1384] 
split level 169: [/input, 2363] 
split level 170: [/input, 2021] 
split level 171: [/input, 820] 
split level 172: [/input, 2921] 
split level 173: [/input, 339] 
split level 174: [/input, 268] 
split level 175: [/input, 1996] 
split level 176: [/input, 2930] 
split level 177: [/input, 1944] 
split level 178: [/input, 588] 
split level 179: [/input, 1946] 
split level 180: [/input-8, 142] 
split level 181: [/input, 3478] 
split level 182: [/input, 2322] 
split level 183: [/input-8, 1669] 
split level 184: [/input, 617] 
split level 185: [/input, 779] 
split level 186: [/input-8, 1920] 
split level 187: [/input, 2862] 
split level 188: [/input, 70] 
split level 189: [/input, 125] 
split level 190: [/input, 2332] 
split level 191: [/input, 786] 
split level 192: [/input, 2349] 
split level 193: [/input, 803] 
split level 194: [/input-8, 1278] 
split level 195: [/input-8, 1785] 
split level 196: [/input, 72] 
split level 197: [/input, 260] 
split level 198: [/input, 3038] 
split level 199: [/input, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3119654655456543
10 lb beta sum: 0.0, worst -0.31195902824401855
Time: prepare 0.0115    bound 0.0957    transfer 0.0013    finalize 0.0026    func 0.1137    
Accumulated time: func 0.1670    prepare 0.0216    bound 0.1486    transfer 0.0014    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.19403791) min lb tensor(-0.31195426)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010701417922973633 
BICCOS Cumulative time: 0.010701417922973633
Preprocessing time: 0.009874105453491211 Inference time: 0.00015306472778320312 Add cuts time: 8.58306884765625e-05 Cut analysis time: 0.0005884170532226562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.29670 (1), -0.29598 (1), -0.29591 (1), -0.29570 (1), -0.29544 (1), -0.29523 (1), -0.29453 (1), -0.29451 (1), -0.29407 (1), -0.29403 (1), -0.29383 (1), -0.29351 (1), -0.29273 (1), -0.29211 (1), -0.29185 (1), -0.29089 (1), -0.29040 (1), -0.29015 (1), -0.29007 (1), -0.29004 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5147    set_bounds 0.0085    solve 0.1137    add 0.0683    
Accumulated time: pickout 0.0003    decision 0.5147    set_bounds 0.0085    solve 0.1137    add 0.0683    
Current (lb-rhs): -0.29670143127441406
50 domains visited
Cumulative time: 0.7793028354644775

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 68] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 1: [/input-12, 8] [/input-12, 8] [/input-12, 68] [/input-12, 8] [/input-12, 8] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 2] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 2] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2753455638885498
10 lb beta sum: 0.6592480540275574, worst -0.20838356018066406
Time: prepare 0.0074    bound 0.1163    transfer 0.0007    finalize 0.0022    func 0.1293    
Accumulated time: func 0.2963    prepare 0.0293    bound 0.2649    transfer 0.0021    finalize 0.0049    
all_split False
======================Cut inference begins======================
max lb tensor(0.29780990) min lb tensor(-0.20817947)
Number of Verified Splits: 64 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.015512228012084961 
BICCOS Cumulative time: 0.026213645935058594
Preprocessing time: 0.01153874397277832 Inference time: 0.0023386478424072266 Add cuts time: 0.0013759136199951172 Cut analysis time: 0.0002589225769042969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11036 (2), -0.10995 (2), -0.10935 (2), -0.10905 (2), -0.10900 (2), -0.10859 (2), -0.10841 (2), -0.10803 (2), -0.10690 (2), -0.10664 (2), -0.10652 (2), -0.10589 (2), -0.10525 (2), -0.10452 (2), -0.10276 (2), -0.10264 (2), -0.10227 (2), -0.10107 (2), -0.09940 (2), -0.09830 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0210    set_bounds 0.0125    solve 0.1293    add 0.0822    
Accumulated time: pickout 0.0014    decision 0.5356    set_bounds 0.0211    solve 0.2431    add 0.1505    
Current (lb-rhs): -0.11035788059234619
100 domains visited
Cumulative time: 1.0412323474884033

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 68] 
split level 1: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 8] 
split level 2: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 8] [/input-12, 2] [/input-12, 2] [/input-12, 2] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 2] [/input-12, 79] [/input-12, 64] [/input-12, 64] [/input-12, 2] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18611478805541992
10 lb beta sum: 0.7561200261116028, worst -0.09558534622192383
Time: prepare 0.0073    bound 0.1168    transfer 0.0007    finalize 0.0027    func 0.1301    
Accumulated time: func 0.4264    prepare 0.0368    bound 0.3817    transfer 0.0028    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.40660188) min lb tensor(-0.09285498)
Number of Verified Splits: 205 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 15
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.024517536163330078 
BICCOS Cumulative time: 0.05073118209838867
Preprocessing time: 0.011496782302856445 Inference time: 0.009174585342407227 Add cuts time: 0.0033762454986572266 Cut analysis time: 0.0004699230194091797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02887 (3), -0.02777 (3), -0.02672 (3), -0.02671 (3), -0.02555 (3), -0.02539 (3), -0.02504 (3), -0.02334 (3), -0.02286 (3), -0.02179 (3), -0.02085 (3), -0.02083 (3), -0.02080 (3), -0.02028 (3), -0.02024 (3), -0.01916 (3), -0.01909 (3), -0.01869 (3), -0.01834 (3), -0.01825 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0156    solve 0.1302    add 0.0961    
Accumulated time: pickout 0.0026    decision 0.5551    set_bounds 0.0367    solve 0.3733    add 0.2467    
Current (lb-rhs): -0.028867661952972412
150 domains visited
Cumulative time: 1.328564167022705

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 1: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 2: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 8] [/input-12, 64] [/input-12, 8] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 64] [/input-12, 79] [/input-12, 64] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1351637840270996
10 lb beta sum: 1.0161974430084229, worst -0.08978068828582764
Time: prepare 0.0076    bound 0.1349    transfer 0.0007    finalize 0.0023    func 0.1488    
Accumulated time: func 0.5751    prepare 0.0446    bound 0.5165    transfer 0.0036    finalize 0.0100    
all_split False
======================Cut inference begins======================
max lb tensor(0.68372798) min lb tensor(-0.01021098)
Number of Verified Splits: 376 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 8
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 0.0416409969329834 
BICCOS Cumulative time: 0.09237217903137207
Preprocessing time: 0.011450529098510742 Inference time: 0.0171053409576416 Add cuts time: 0.012488365173339844 Cut analysis time: 0.0005967617034912109
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0157    solve 0.1488    add 0.0231    
Accumulated time: pickout 0.0037    decision 0.5746    set_bounds 0.0523    solve 0.5221    add 0.2697    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 64] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05699968338012695
10 lb beta sum: 0.22562196850776672, worst -0.0353693962097168
Time: prepare 0.0036    bound 0.1313    transfer 0.0005    finalize 0.0013    func 0.1384    
Accumulated time: func 0.7135    prepare 0.0487    bound 0.6478    transfer 0.0041    finalize 0.0113    
all_split False
======================Cut inference begins======================
max lb tensor(0.30304480) min lb tensor(-0.03534102)
Number of Verified Splits: 252 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21465373039245605
10 lb beta sum: 1.2495588064193726, worst -0.0896996259689331
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 8
#cuts 4-6: 5
#cuts >= 20: 0
BICCOS time: 0.26209354400634766 
BICCOS Cumulative time: 0.3544657230377197
Preprocessing time: 0.006477832794189453 Inference time: 0.2494068145751953 Add cuts time: 0.0057637691497802734 Cut analysis time: 0.0004451274871826172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.03534 (8), -0.03197 (8), -0.02928 (8), -0.02579 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0170    solve 0.1385    add 0.0007    
Accumulated time: pickout 0.0040    decision 0.5967    set_bounds 0.0693    solve 0.6606    add 0.2705    
Current (lb-rhs): -0.03534102439880371
154 domains visited
Cumulative time: 2.023681402206421

BaB round 2
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input, 3000] [/input-8, 171] [/input, 3000] [/input, 3000] 
split level 3: [/input, 3017] [/input, 3000] [/input, 3017] [/input, 3017] 
split level 4: [/input, 3018] [/input, 3017] [/input, 3018] [/input, 3018] 
split level 5: [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.002834320068359375
10 lb beta sum: 0.00876634381711483, worst -0.0020998716354370117
Time: prepare 0.0065    bound 0.1283    transfer 0.0005    finalize 0.0014    func 0.1384    
Accumulated time: func 0.8519    prepare 0.0555    bound 0.7761    transfer 0.0046    finalize 0.0126    
all_split False
======================Cut inference begins======================
max lb tensor(0.14716530) min lb tensor(-0.00207114)
Number of Verified Splits: 255 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21489620208740234
10 lb beta sum: 1.16813063621521, worst -0.07077693939208984
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 8
#cuts 4-6: 5
#cuts 7-9: 3
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 0.5683107376098633 
BICCOS Cumulative time: 0.922776460647583
Preprocessing time: 0.0074689388275146484 Inference time: 0.5523166656494141 Add cuts time: 0.0073506832122802734 Cut analysis time: 0.0011744499206542969
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00207 (14), 
Length of domains: 1
Time: pickout 0.0011    decision 0.0178    set_bounds 0.0262    solve 0.1384    add 0.0006    
Accumulated time: pickout 0.0052    decision 0.6144    set_bounds 0.0955    solve 0.7990    add 0.2711    
Current (lb-rhs): -0.0020711421966552734
155 domains visited
Cumulative time: 2.779353141784668

BaB round 3
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 268] 
split level 1: [/input-8, 172] 
split level 2: [/input-8, 171] 
split level 3: [/input-8, 372] 
split level 4: [/input, 3032] 
split level 5: [/input-8, 178] 
split level 6: [/input, 3002] 
split level 7: [/input-8, 1125] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.040187835693359375

all verified at 0th iter
Time: prepare 0.0065    bound 0.0072    transfer 0.0005    finalize 0.0012    func 0.0170    
Accumulated time: func 0.8689    prepare 0.0624    bound 0.7833    transfer 0.0051    finalize 0.0138    
all_split False
======================Cut inference begins======================
max lb tensor(0.10411859) min lb tensor(0.04018784)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 23.
#cuts 1-3: 8
#cuts 4-6: 5
#cuts 7-9: 3
#cuts 10-12: 7
#cuts >= 20: 0
BICCOS time: 0.00757145881652832 
BICCOS Cumulative time: 0.9303479194641113
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0013    decision 0.0222    set_bounds 0.0294    solve 0.0176    add 0.0004    
Accumulated time: pickout 0.0065    decision 0.6367    set_bounds 0.1249    solve 0.8166    add 0.2715    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
155 domains visited
Cumulative time: 2.8589370250701904


Properties batch 4, size 1
Remaining timeout: 195.59024453163147
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 195.59016466140747
Verifying property 5 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38633633]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
        -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38633633]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 584
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 230
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 829
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.799003601074219e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3863332271575928
10 lb beta sum: 0.0, worst -0.3863387107849121
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0526    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0526    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 64] 
split level 7: [/input-12, 79] 
split level 8: [/input-12, 61] 
split level 9: [/input-12, 46] 
split level 10: [/input-8, 268] 
split level 11: [/input-8, 909] 
split level 12: [/input-8, 172] 
split level 13: [/input-8, 171] 
split level 14: [/input, 456] 
split level 15: [/input, 439] 
split level 16: [/input, 3000] 
split level 17: [/input-8, 1282] 
split level 18: [/input-8, 179] 
split level 19: [/input, 442] 
split level 20: [/input, 3032] 
split level 21: [/input, 2986] 
split level 22: [/input, 3017] 
split level 23: [/input, 3018] 
split level 24: [/input-8, 788] 
split level 25: [/input-8, 1067] 
split level 26: [/input-8, 371] 
split level 27: [/input-8, 1287] 
split level 28: [/input-8, 892] 
split level 29: [/input, 3066] 
split level 30: [/input-8, 178] 
split level 31: [/input, 487] 
split level 32: [/input, 2972] 
split level 33: [/input-8, 473] 
split level 34: [/input, 3002] 
split level 35: [/input, 954] 
split level 36: [/input, 2955] 
split level 37: [/input, 3031] 
split level 38: [/input-8, 925] 
split level 39: [/input-8, 1780] 
split level 40: [/input, 3019] 
split level 41: [/input-8, 372] 
split level 42: [/input-8, 186] 
split level 43: [/input-8, 1075] 
split level 44: [/input-8, 1038] 
split level 45: [/input-8, 1772] 
split level 46: [/input, 506] 
split level 47: [/input-8, 380] 
split level 48: [/input, 999] 
split level 49: [/input-8, 1773] 
split level 50: [/input-8, 774] 
split level 51: [/input-8, 1123] 
split level 52: [/input-8, 381] 
split level 53: [/input, 474] 
split level 54: [/input, 3013] 
split level 55: [/input-8, 1125] 
split level 56: [/input-8, 1035] 
split level 57: [/input-8, 508] 
split level 58: [/input-8, 1643] 
split level 59: [/input-8, 465] 
split level 60: [/input-8, 1732] 
split level 61: [/input, 892] 
split level 62: [/input, 986] 
split level 63: [/input-8, 146] 
split level 64: [/input, 202] 
split level 65: [/input-8, 871] 
split level 66: [/input, 949] 
split level 67: [/input-8, 1548] 
split level 68: [/input, 298] 
split level 69: [/input, 956] 
split level 70: [/input-8, 792] 
split level 71: [/input-8, 891] 
split level 72: [/input-8, 292] 
split level 73: [/input-8, 1118] 
split level 74: [/input-8, 1635] 
split level 75: [/input, 3036] 
split level 76: [/input-8, 893] 
split level 77: [/input, 923] 
split level 78: [/input, 467] 
split level 79: [/input, 200] 
split level 80: [/input, 1975] 
split level 81: [/input-8, 1180] 
split level 82: [/input, 918] 
split level 83: [/input-8, 2046] 
split level 84: [/input, 217] 
split level 85: [/input-8, 592] 
split level 86: [/input, 971] 
split level 87: [/input, 2927] 
split level 88: [/input, 1017] 
split level 89: [/input-8, 1076] 
split level 90: [/input-8, 1228] 
split level 91: [/input, 932] 
split level 92: [/input, 2997] 
split level 93: [/input-8, 843] 
split level 94: [/input, 924] 
split level 95: [/input, 232] 
split level 96: [/input-8, 1563] 
split level 97: [/input, 507] 
split level 98: [/input-8, 773] 
split level 99: [/input-8, 820] 
split level 100: [/input-8, 1614] 
split level 101: [/input, 618] 
split level 102: [/input, 1003] 
split level 103: [/input, 2947] 
split level 104: [/input, 1974] 
split level 105: [/input-8, 165] 
split level 106: [/input, 435] 
split level 107: [/input, 1012] 
split level 108: [/input, 2871] 
split level 109: [/input-8, 1731] 
split level 110: [/input, 1977] 
split level 111: [/input, 390] 
split level 112: [/input-8, 1243] 
split level 113: [/input, 1993] 
split level 114: [/input-8, 888] 
split level 115: [/input, 903] 
split level 116: [/input-8, 12] 
split level 117: [/input-8, 1625] 
split level 118: [/input, 3022] 
split level 119: [/input-8, 332] 
split level 120: [/input, 1976] 
split level 121: [/input-8, 158] 
split level 122: [/input, 283] 
split level 123: [/input, 1960] 
split level 124: [/input-8, 122] 
split level 125: [/input, 3554] 
split level 126: [/input, 811] 
split level 127: [/input, 633] 
split level 128: [/input, 2092] 
split level 129: [/input-8, 1233] 
split level 130: [/input-8, 890] 
split level 131: [/input-8, 1920] 
split level 132: [/input, 884] 
split level 133: [/input, 597] 
split level 134: [/input-8, 879] 
split level 135: [/input, 203] 
split level 136: [/input, 795] 
split level 137: [/input, 308] 
split level 138: [/input, 1978] 
split level 139: [/input, 1990] 
split level 140: [/input, 219] 
split level 141: [/input, 314] 
split level 142: [/input, 3037] 
split level 143: [/input, 185] 
split level 144: [/input-8, 334] 
split level 145: [/input-8, 1678] 
split level 146: [/input-8, 1407] 
split level 147: [/input, 909] 
split level 148: [/input, 792] 
split level 149: [/input-8, 1642] 
split level 150: [/input-8, 1737] 
split level 151: [/input, 2363] 
split level 152: [/input-8, 887] 
split level 153: [/input, 323] 
split level 154: [/input, 72] 
split level 155: [/input, 619] 
split level 156: [/input, 2887] 
split level 157: [/input, 1502] 
split level 158: [/input-8, 1384] 
split level 159: [/input, 222] 
split level 160: [/input, 3522] 
split level 161: [/input, 71] 
split level 162: [/input-8, 1669] 
split level 163: [/input-8, 169] 
split level 164: [/input-8, 1613] 
split level 165: [/input-8, 1730] 
split level 166: [/input, 339] 
split level 167: [/input, 973] 
split level 168: [/input, 221] 
split level 169: [/input, 605] 
split level 170: [/input, 70] 
split level 171: [/input, 632] 
split level 172: [/input, 631] 
split level 173: [/input, 2106] 
split level 174: [/input, 187] 
split level 175: [/input, 2930] 
split level 176: [/input, 2109] 
split level 177: [/input, 268] 
split level 178: [/input, 2862] 
split level 179: [/input, 2332] 
split level 180: [/input, 1335] 
split level 181: [/input, 2322] 
split level 182: [/input, 1996] 
split level 183: [/input, 1989] 
split level 184: [/input, 1944] 
split level 185: [/input-8, 1554] 
split level 186: [/input, 2091] 
split level 187: [/input, 1946] 
split level 188: [/input, 3038] 
split level 189: [/input, 779] 
split level 190: [/input, 260] 
split level 191: [/input-8, 1027] 
split level 192: [/input, 786] 
split level 193: [/input, 820] 
split level 194: [/input, 285] 
split level 195: [/input, 2349] 
split level 196: [/input, 1336] 
split level 197: [/input, 617] 
split level 198: [/input, 2021] 
split level 199: [/input, 588] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3861422538757324
10 lb beta sum: 0.0, worst -0.3861401081085205
Time: prepare 0.0115    bound 0.0965    transfer 0.0013    finalize 0.0027    func 0.1147    
Accumulated time: func 0.1678    prepare 0.0216    bound 0.1492    transfer 0.0014    finalize 0.0028    
all_split False
======================Cut inference begins======================
max lb tensor(0.17392492) min lb tensor(-0.38613415)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010364532470703125 
BICCOS Cumulative time: 0.010364532470703125
Preprocessing time: 0.01000356674194336 Inference time: 0.00010633468627929688 Add cuts time: 5.173683166503906e-05 Cut analysis time: 0.0002028942108154297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.36963 (1), -0.36948 (1), -0.36816 (1), -0.36791 (1), -0.36660 (1), -0.36599 (1), -0.36591 (1), -0.36571 (1), -0.36540 (1), -0.36503 (1), -0.36488 (1), -0.36479 (1), -0.36474 (1), -0.36415 (1), -0.36413 (1), -0.36401 (1), -0.36327 (1), -0.36227 (1), -0.36142 (1), -0.36121 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5168    set_bounds 0.0088    solve 0.1148    add 0.0696    
Accumulated time: pickout 0.0003    decision 0.5168    set_bounds 0.0088    solve 0.1148    add 0.0696    
Current (lb-rhs): -0.36963486671447754
50 domains visited
Cumulative time: 0.778430700302124

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 68] [/input-12, 42] 
split level 1: [/input-12, 68] [/input-12, 8] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 8] [/input-12, 68] 
split level 2: [/input-12, 8] [/input-12, 2] [/input-12, 8] [/input-12, 2] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 8] 
split level 3: [/input-12, 2] [/input-12, 79] [/input-12, 2] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 2] [/input-12, 2] [/input-12, 79] [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.32616543769836426
10 lb beta sum: 0.4465484619140625, worst -0.30382704734802246
Time: prepare 0.0075    bound 0.1163    transfer 0.0007    finalize 0.0023    func 0.1294    
Accumulated time: func 0.2971    prepare 0.0293    bound 0.2655    transfer 0.0021    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.26297188) min lb tensor(-0.30361366)
Number of Verified Splits: 96 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.017477989196777344 
BICCOS Cumulative time: 0.02784252166748047
Preprocessing time: 0.011700630187988281 Inference time: 0.003645181655883789 Add cuts time: 0.001886606216430664 Cut analysis time: 0.0002455711364746094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18671 (2), -0.18588 (2), -0.18565 (2), -0.18520 (2), -0.18405 (2), -0.18395 (2), -0.18361 (2), -0.18318 (2), -0.18291 (2), -0.18212 (2), -0.18153 (2), -0.18019 (2), -0.17819 (2), -0.17701 (2), -0.17696 (2), -0.17644 (2), -0.17560 (2), -0.17524 (2), -0.17485 (2), -0.17440 (2), 
Length of domains: 50
Time: pickout 0.0012    decision 0.0229    set_bounds 0.0127    solve 0.1295    add 0.0850    
Accumulated time: pickout 0.0015    decision 0.5396    set_bounds 0.0214    solve 0.2442    add 0.1546    
Current (lb-rhs): -0.1867070198059082
100 domains visited
Cumulative time: 1.047327995300293

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 1: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 8] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 2: [/input-12, 2] [/input-12, 8] [/input-12, 8] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
split level 3: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2369844913482666
10 lb beta sum: 0.794987678527832, worst -0.15892577171325684
Time: prepare 0.0072    bound 0.1167    transfer 0.0007    finalize 0.0027    func 0.1299    
Accumulated time: func 0.4271    prepare 0.0368    bound 0.3821    transfer 0.0028    finalize 0.0077    
all_split False
======================Cut inference begins======================
max lb tensor(0.41913074) min lb tensor(-0.15695572)
Number of Verified Splits: 133 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 6
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.020104646682739258 
BICCOS Cumulative time: 0.04794716835021973
Preprocessing time: 0.011416435241699219 Inference time: 0.006357908248901367 Add cuts time: 0.002016782760620117 Cut analysis time: 0.0003135204315185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04339 (3), -0.04210 (3), -0.04131 (3), -0.04108 (3), -0.03998 (3), -0.03920 (3), -0.03905 (3), -0.03806 (3), -0.03780 (3), -0.03728 (3), -0.03705 (3), -0.03679 (3), -0.03661 (3), -0.03650 (3), -0.03635 (3), -0.03524 (3), -0.03301 (3), -0.03145 (3), -0.03121 (3), -0.03006 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0156    solve 0.1300    add 0.0912    
Accumulated time: pickout 0.0026    decision 0.5591    set_bounds 0.0371    solve 0.3742    add 0.2458    
Current (lb-rhs): -0.04339250922203064
150 domains visited
Cumulative time: 1.3251848220825195

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
split level 1: [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 2: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-12, 79] 
split level 3: [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] [/input-12, 61] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15011310577392578
10 lb beta sum: 0.8387397527694702, worst -0.019576936960220337
Time: prepare 0.0077    bound 0.1352    transfer 0.0007    finalize 0.0024    func 0.1487    
Accumulated time: func 0.5757    prepare 0.0448    bound 0.5173    transfer 0.0036    finalize 0.0101    
all_split False
======================Cut inference begins======================
max lb tensor(0.18235259) min lb tensor(-0.01798609)
Number of Verified Splits: 371 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 24.
#cuts 1-3: 20
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.04146265983581543 
BICCOS Cumulative time: 0.08940982818603516
Preprocessing time: 0.011739492416381836 Inference time: 0.018812894821166992 Add cuts time: 0.010238885879516602 Cut analysis time: 0.00067138671875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0192    set_bounds 0.0158    solve 0.1488    add 0.0246    
Accumulated time: pickout 0.0037    decision 0.5783    set_bounds 0.0528    solve 0.5230    add 0.2704    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0727241039276123
10 lb beta sum: 0.10955717414617538, worst -0.05195395648479462
Time: prepare 0.0037    bound 0.1433    transfer 0.0009    finalize 0.0019    func 0.2691    
Accumulated time: func 0.8449    prepare 0.0489    bound 0.6606    transfer 0.0045    finalize 0.0120    
all_split False
======================Cut inference begins======================
max lb tensor(0.39600468) min lb tensor(-0.05187017)
Number of Verified Splits: 249 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2848846912384033
10 lb beta sum: 1.3252103328704834, worst -0.20192670822143555
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 20
#cuts 4-6: 6
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.29082751274108887 
BICCOS Cumulative time: 0.380237340927124
Preprocessing time: 0.006989240646362305 Inference time: 0.2787668704986572 Add cuts time: 0.004326343536376953 Cut analysis time: 0.0007450580596923828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05187 (8), -0.04831 (8), -0.04586 (8), -0.04153 (8), -0.00673 (8), -0.00411 (8), -0.00283 (8), 
Length of domains: 7
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0169    solve 0.2693    add 0.0009    
Accumulated time: pickout 0.0041    decision 0.6006    set_bounds 0.0697    solve 0.7923    add 0.2713    
Current (lb-rhs): -0.05187016725540161
157 domains visited
Cumulative time: 2.1821253299713135

BaB round 2
batch: 7
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input, 3000] [/input-8, 171] [/input-8, 268] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 268] 
split level 2: [/input-8, 179] [/input, 3000] [/input-8, 171] [/input-8, 179] [/input, 3000] [/input-8, 179] [/input-8, 171] 
split level 3: [/input, 3017] [/input-8, 179] [/input-8, 179] [/input, 3017] [/input-8, 179] [/input, 3017] [/input-8, 179] 
split level 4: [/input, 3018] [/input, 3017] [/input, 3018] [/input, 3018] [/input, 3017] [/input, 3018] [/input, 3018] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.020893573760986328
10 lb beta sum: 0.09160713106393814, worst -0.014557838439941406
Time: prepare 0.0059    bound 0.1544    transfer 0.0007    finalize 0.0015    func 0.1640    
Accumulated time: func 1.0089    prepare 0.0551    bound 0.8150    transfer 0.0052    finalize 0.0134    
all_split False
======================Cut inference begins======================
max lb tensor(0.08682728) min lb tensor(-0.01447558)
Number of Verified Splits: 195 of 224
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23686432838439941
10 lb beta sum: 1.045825481414795, worst -0.13190627098083496
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 27.
#cuts 1-3: 20
#cuts 4-6: 6
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.3007657527923584 
BICCOS Cumulative time: 0.6810030937194824
Preprocessing time: 0.006688833236694336 Inference time: 0.2898142337799072 Add cuts time: 0.0035097599029541016 Cut analysis time: 0.0007529258728027344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01448 (13), -0.01269 (13), -0.01267 (13), -0.01071 (13), -0.00982 (13), -0.00906 (13), -0.00875 (13), -0.00858 (13), -0.00841 (13), -0.00814 (13), -0.00744 (13), -0.00620 (13), -0.00548 (13), -0.00485 (13), -0.00467 (13), -0.00464 (13), -0.00463 (13), -0.00437 (13), -0.00356 (13), -0.00333 (13), 
Length of domains: 29
Time: pickout 0.0010    decision 0.0182    set_bounds 0.0220    solve 0.1641    add 0.0009    
Accumulated time: pickout 0.0051    decision 0.6188    set_bounds 0.0917    solve 0.9564    add 0.2722    
Current (lb-rhs): -0.014475584030151367
186 domains visited
Cumulative time: 2.691180467605591

BaB round 3
batch: 29
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 171] [/input, 3018] [/input-8, 171] [/input, 3018] [/input, 3018] [/input-8, 171] [/input, 3018] [/input, 3018] [/input-8, 171] [/input, 3018] 
split level 2: [/input, 3002] [/input, 3002] [/input, 3002] [/input, 3032] [/input, 3002] [/input, 3002] [/input, 3032] [/input, 3002] [/input, 3002] [/input, 3002] 
cut re-enabled after branching node selection
0 lb beta sum: 0.4645126461982727, worst -0.0011029243469238281
10 lb beta sum: 0.4645126461982727, worst -0.0010263919830322266
Time: prepare 0.0113    bound 0.1434    transfer 0.0007    finalize 0.0016    func 0.1586    
Accumulated time: func 1.1675    prepare 0.0666    bound 0.9585    transfer 0.0059    finalize 0.0150    
all_split False
======================Cut inference begins======================
max lb tensor(0.30312920) min lb tensor(-0.00097322)
Number of Verified Splits: 231 of 232
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 30.
#cuts 1-3: 23
#cuts 4-6: 6
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.031482696533203125 
BICCOS Cumulative time: 0.7124857902526855
Preprocessing time: 0.006987094879150391 Inference time: 0.022029638290405273 Add cuts time: 0.001695871353149414 Cut analysis time: 0.0007700920104980469
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00097 (16), 
Length of domains: 1
Time: pickout 0.0017    decision 0.0188    set_bounds 0.0236    solve 0.1586    add 0.0006    
Accumulated time: pickout 0.0068    decision 0.6376    set_bounds 0.1153    solve 1.1150    add 0.2729    
Current (lb-rhs): -0.0009732246398925781
187 domains visited
Cumulative time: 2.9272255897521973

BaB round 4
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 268] 
split level 1: [/input, 456] 
split level 2: [/input-8, 172] 
split level 3: [/input-8, 372] 
split level 4: [/input-8, 178] 
split level 5: [/input, 3002] 
split level 6: [/input, 3031] 
split level 7: [/input-8, 1125] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.03661966323852539

all verified at 0th iter
Time: prepare 0.0065    bound 0.0075    transfer 0.0005    finalize 0.0012    func 0.0172    
Accumulated time: func 1.1847    prepare 0.0736    bound 0.9659    transfer 0.0063    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.11126828) min lb tensor(0.03661966)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 30.
#cuts 1-3: 23
#cuts 4-6: 6
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.00741887092590332 
BICCOS Cumulative time: 0.7199046611785889
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0224    set_bounds 0.0295    solve 0.0173    add 0.0004    
Accumulated time: pickout 0.0079    decision 0.6600    set_bounds 0.1448    solve 1.1323    add 0.2733    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
187 domains visited
Cumulative time: 3.006331205368042


Properties batch 6, size 1
Remaining timeout: 192.41754269599915
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 192.41746282577515
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 192.41743922233582
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.5826 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.30548668, -31.13262558, -30.14710617, -29.36580276, -31.43879890,
         -30.41797447, -28.40415192, -33.04300690, -32.20061874, -30.97929573]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [616]; unstable size 616; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 616] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 616] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 616] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 173] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89829946, 1.27482843, 1.03844333, 0.41801429, 2.17892480, 1.35105944,
         3.53787756, 2.40265870, 1.21200323]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0693 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
         -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1027]; unstable size 1027; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 1027] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1027] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1027] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 298] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02182794,  4.76163673, -0.19650888,  1.45338202,  1.88351488,
          0.29130304,  1.95355976,  2.40450525,  4.61817598]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
         -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.24it/s]100%|██████████| 1/1 [00:00<00:00,  9.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.22353172, -18.85214615, -12.26174545, -14.25788116, -11.70257187,
          -14.80233765, -13.11868382, -14.95127678, -16.34649467, -18.77943611]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.55917358]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1110 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.15489387512207
alpha/beta optimization time: 1.2133252620697021
initial alpha-crown bounds: tensor([[ 2.14901900,  4.91513634, -0.11741820,  1.51492643,  1.96165764,
          0.36733115,  2.03420448,  2.56605911,  4.76397705]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11741819977760315
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6298532485962
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.62981414794922
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.62979173660278
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11741820]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
        -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11741820]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1027
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 1350
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010132789611816406
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11741307377815247
10 lb beta sum: 0.0, worst -0.11741915345191956
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    func 0.0530    
Accumulated time: func 0.0530    prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 96] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 12] 
split level 8: [/input-12, 46] 
split level 9: [/input-12, 0] 
split level 10: [/input-8, 1955] 
split level 11: [/input-12, 18] 
split level 12: [/input-12, 49] 
split level 13: [/input-12, 15] 
split level 14: [/input-12, 38] 
split level 15: [/input-8, 1628] 
split level 16: [/input-8, 1708] 
split level 17: [/input-8, 275] 
split level 18: [/input-8, 1962] 
split level 19: [/input-8, 481] 
split level 20: [/input-8, 484] 
split level 21: [/input-8, 274] 
split level 22: [/input-8, 1954] 
split level 23: [/input-8, 1705] 
split level 24: [/input-8, 1678] 
split level 25: [/input-8, 477] 
split level 26: [/input-8, 1945] 
split level 27: [/input-8, 1710] 
split level 28: [/input-8, 1938] 
split level 29: [/input-8, 930] 
split level 30: [/input-8, 1946] 
split level 31: [/input-8, 1626] 
split level 32: [/input-12, 20] 
split level 33: [/input-8, 1716] 
split level 34: [/input-8, 1963] 
split level 35: [/input-8, 1618] 
split level 36: [/input-8, 1300] 
split level 37: [/input-8, 797] 
split level 38: [/input-8, 1931] 
split level 39: [/input-8, 469] 
split level 40: [/input-12, 57] 
split level 41: [/input-8, 1630] 
split level 42: [/input-8, 1318] 
split level 43: [/input-8, 1301] 
split level 44: [/input-8, 1953] 
split level 45: [/input-8, 592] 
split level 46: [/input-8, 1660] 
split level 47: [/input-8, 285] 
split level 48: [/input-8, 461] 
split level 49: [/input-8, 804] 
split level 50: [/input-8, 1363] 
split level 51: [/input-8, 779] 
split level 52: [/input-8, 100] 
split level 53: [/input-8, 438] 
split level 54: [/input-8, 1638] 
split level 55: [/input-8, 1621] 
split level 56: [/input-8, 453] 
split level 57: [/input-8, 1230] 
split level 58: [/input-8, 1338] 
split level 59: [/input-8, 578] 
split level 60: [/input-8, 1939] 
split level 61: [/input-8, 1961] 
split level 62: [/input-8, 433] 
split level 63: [/input-8, 1340] 
split level 64: [/input-8, 777] 
split level 65: [/input-8, 1940] 
split level 66: [/input-8, 1941] 
split level 67: [/input-8, 75] 
split level 68: [/input-8, 1029] 
split level 69: [/input-8, 108] 
split level 70: [/input-8, 1372] 
split level 71: [/input-8, 1290] 
split level 72: [/input-8, 1364] 
split level 73: [/input-8, 1652] 
split level 74: [/input-8, 298] 
split level 75: [/input-8, 478] 
split level 76: [/input-8, 434] 
split level 77: [/input-8, 1054] 
split level 78: [/input-8, 778] 
split level 79: [/input-8, 1329] 
split level 80: [/input-8, 1226] 
split level 81: [/input-8, 918] 
split level 82: [/input-8, 624] 
split level 83: [/input-8, 1790] 
split level 84: [/input-8, 441] 
split level 85: [/input, 2710] 
split level 86: [/input-8, 814] 
split level 87: [/input-8, 830] 
split level 88: [/input-8, 91] 
split level 89: [/input-8, 603] 
split level 90: [/input-8, 465] 
split level 91: [/input-8, 577] 
split level 92: [/input-8, 785] 
split level 93: [/input-8, 595] 
split level 94: [/input-8, 829] 
split level 95: [/input-8, 1613] 
split level 96: [/input-8, 1646] 
split level 97: [/input-8, 1260] 
split level 98: [/input-8, 28] 
split level 99: [/input-8, 73] 
split level 100: [/input-8, 1229] 
split level 101: [/input-8, 1337] 
split level 102: [/input-8, 798] 
split level 103: [/input-8, 409] 
split level 104: [/input-8, 83] 
split level 105: [/input, 1446] 
split level 106: [/input-8, 813] 
split level 107: [/input-8, 82] 
split level 108: [/input-8, 76] 
split level 109: [/input-8, 1596] 
split level 110: [/input-8, 1297] 
split level 111: [/input-8, 955] 
split level 112: [/input-8, 1597] 
split level 113: [/input-8, 74] 
split level 114: [/input-8, 1225] 
split level 115: [/input-8, 492] 
split level 116: [/input-8, 958] 
split level 117: [/input-8, 1764] 
split level 118: [/input-8, 1773] 
split level 119: [/input-8, 293] 
split level 120: [/input-8, 1595] 
split level 121: [/input-8, 1762] 
split level 122: [/input, 612] 
split level 123: [/input-8, 109] 
split level 124: [/input-8, 1593] 
split level 125: [/input-8, 446] 
split level 126: [/input-8, 21] 
split level 127: [/input-8, 85] 
split level 128: [/input, 2725] 
split level 129: [/input-8, 1227] 
split level 130: [/input, 3460] 
split level 131: [/input-8, 1321] 
split level 132: [/input-8, 81] 
split level 133: [/input-8, 1657] 
split level 134: [/input-8, 486] 
split level 135: [/input-8, 22] 
split level 136: [/input, 3208] 
split level 137: [/input-8, 452] 
split level 138: [/input-8, 78] 
split level 139: [/input, 508] 
split level 140: [/input, 610] 
split level 141: [/input, 884] 
split level 142: [/input, 885] 
split level 143: [/input, 597] 
split level 144: [/input-8, 1594] 
split level 145: [/input-8, 626] 
split level 146: [/input-8, 812] 
split level 147: [/input-8, 1365] 
split level 148: [/input-8, 345] 
split level 149: [/input, 1223] 
split level 150: [/input-8, 1252] 
split level 151: [/input, 3239] 
split level 152: [/input, 2164] 
split level 153: [/input-8, 1228] 
split level 154: [/input, 3224] 
split level 155: [/input-8, 1222] 
split level 156: [/input, 1209] 
split level 157: [/input, 1012] 
split level 158: [/input, 1019] 
split level 159: [/input, 551] 
split level 160: [/input-8, 86] 
split level 161: [/input-8, 488] 
split level 162: [/input, 593] 
split level 163: [/input-8, 92] 
split level 164: [/input-8, 278] 
split level 165: [/input-8, 116] 
split level 166: [/input, 900] 
split level 167: [/input-8, 1781] 
split level 168: [/input, 2786] 
split level 169: [/input, 611] 
split level 170: [/input, 3492] 
split level 171: [/input, 3446] 
split level 172: [/input, 2787] 
split level 173: [/input, 2163] 
split level 174: [/input-8, 1761] 
split level 175: [/input, 1020] 
split level 176: [/input, 2181] 
split level 177: [/input-8, 384] 
split level 178: [/input, 3578] 
split level 179: [/input, 1210] 
split level 180: [/input, 1179] 
split level 181: [/input-8, 442] 
split level 182: [/input, 2772] 
split level 183: [/input, 3048] 
split level 184: [/input, 2196] 
split level 185: [/input, 387] 
split level 186: [/input, 557] 
split level 187: [/input, 1208] 
split level 188: [/input, 3498] 
split level 189: [/input, 2789] 
split level 190: [/input, 552] 
split level 191: [/input, 3020] 
split level 192: [/input, 3541] 
split level 193: [/input, 2792] 
split level 194: [/input, 956] 
split level 195: [/input, 444] 
split level 196: [/input, 2556] 
split level 197: [/input, 1194] 
split level 198: [/input, 3532] 
split level 199: [/input, 2660] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11737537384033203
10 lb beta sum: 0.0, worst -0.117367684841156
Time: prepare 0.0114    bound 0.0974    transfer 0.0007    finalize 0.0030    func 0.1151    
Accumulated time: func 0.1681    prepare 0.0213    bound 0.1499    transfer 0.0008    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.13235044) min lb tensor(-0.11736268)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.01057291030883789 
BICCOS Cumulative time: 0.01057291030883789
Preprocessing time: 0.010022401809692383 Inference time: 0.00022077560424804688 Add cuts time: 8.821487426757812e-05 Cut analysis time: 0.0002415180206298828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10714 (1), -0.10712 (1), -0.10690 (1), -0.10673 (1), -0.10672 (1), -0.10634 (1), -0.10629 (1), -0.10603 (1), -0.10580 (1), -0.10579 (1), -0.10569 (1), -0.10532 (1), -0.10527 (1), -0.10510 (1), -0.10450 (1), -0.10413 (1), -0.10398 (1), -0.10324 (1), -0.10308 (1), -0.10299 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5093    set_bounds 0.0086    solve 0.1152    add 0.1028    
Accumulated time: pickout 0.0003    decision 0.5093    set_bounds 0.0086    solve 0.1152    add 0.1028    
Current (lb-rhs): -0.10714468359947205
50 domains visited
Cumulative time: 0.8046286106109619

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] [/input-12, 31] 
split level 1: [/input-12, 24] [/input-12, 24] [/input-12, 53] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 53] [/input-12, 53] [/input-12, 69] [/input-12, 53] [/input-12, 69] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 3: [/input-12, 69] [/input-12, 69] [/input-12, 6] [/input-12, 69] [/input-12, 6] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08096837997436523

all verified at 6th iter
Time: prepare 0.0069    bound 0.0405    transfer 0.0008    finalize 0.0021    func 0.0528    
Accumulated time: func 0.2209    prepare 0.0285    bound 0.1903    transfer 0.0016    finalize 0.0053    
all_split False
======================Cut inference begins======================
max lb tensor(0.17983733) min lb tensor(0.00158188)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03531312942504883 
BICCOS Cumulative time: 0.04588603973388672
Preprocessing time: 0.011588096618652344 Inference time: 0.016040802001953125 Add cuts time: 0.007506847381591797 Cut analysis time: 0.0001773834228515625
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0196    set_bounds 0.0135    solve 0.0529    add 0.0150    
Accumulated time: pickout 0.0014    decision 0.5288    set_bounds 0.0220    solve 0.1681    add 0.1178    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.21611809730529785

all verified at 0th iter
Time: prepare 0.0037    bound 0.0041    transfer 0.0005    finalize 0.0015    func 0.0114    
Accumulated time: func 0.2323    prepare 0.0326    bound 0.1944    transfer 0.0021    finalize 0.0068    
all_split False
======================Cut inference begins======================
max lb tensor(0.69797766) min lb tensor(0.21611810)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006565093994140625 
BICCOS Cumulative time: 0.052451133728027344
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0165    solve 0.0114    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.5508    set_bounds 0.0385    solve 0.1795    add 0.1179    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.0028350353240967


Properties batch 3, size 1
Remaining timeout: 197.45727682113647
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.457204580307
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.4571816921234
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.4571611881256
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.4571418762207
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.45712232589722
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.5429 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.26904869, -33.04354858, -25.95203400, -25.30147362, -26.82607079,
         -23.58791351, -27.02210999, -26.74736023, -30.97900772, -31.80931664]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [497]; unstable size 497; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 497] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 497] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 497] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 235] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.07312489, 7.09390163, 1.17368317, 1.32954621, 1.97331977, 2.09624100,
         2.19010592, 5.61077023, 6.28059959]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0636 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
         -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [914]; unstable size 914; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 914] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 914] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 914] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 264] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50396156,  4.56140280,  1.59753501,  0.26819646,  2.21705484,
         -0.30545199,  3.74951458,  1.75252366,  5.38511562]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
         -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.11it/s]100%|██████████| 1/1 [00:00<00:00,  9.10it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.61618996, -26.34212685, -20.08324432, -22.38359451, -20.88983536,
          -23.12462997, -20.31562424, -24.86903000, -23.20267296, -27.22996330]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.23237991]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1125 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.216480255126953
alpha/beta optimization time: 1.1967692375183105
initial alpha-crown bounds: tensor([[ 1.54622114,  4.63079357,  1.64909184,  0.31041086,  2.27290010,
         -0.27205801,  3.81806302,  1.79653978,  5.46451855]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.27205801010131836
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6244456768036
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6244080066681
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.62438225746155
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.62436032295227
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.62434220314026
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.6243236064911
Verifying property 5 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27205801]], device='cuda:0') need to verify.
Model prediction is: tensor([-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
        -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27205801]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 259
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 1190
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.775161743164062e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2720569372177124
10 lb beta sum: 0.0, worst -0.27205681800842285
Time: prepare 0.0002    bound 0.0871    transfer 0.0001    finalize 0.0001    func 0.0876    
Accumulated time: func 0.0876    prepare 0.0002    bound 0.0871    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 36] 
split level 2: [/input-12, 96] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 43] 
split level 5: [/input-12, 15] 
split level 6: [/input-12, 18] 
split level 7: [/input-12, 2] 
split level 8: [/input-12, 90] 
split level 9: [/input, 2968] 
split level 10: [/input-8, 1772] 
split level 11: [/input-8, 173] 
split level 12: [/input-8, 1171] 
split level 13: [/input, 419] 
split level 14: [/input, 2984] 
split level 15: [/input-8, 953] 
split level 16: [/input-8, 1756] 
split level 17: [/input-8, 1755] 
split level 18: [/input, 2966] 
split level 19: [/input, 900] 
split level 20: [/input-8, 1236] 
split level 21: [/input, 3044] 
split level 22: [/input-8, 1762] 
split level 23: [/input, 901] 
split level 24: [/input-8, 1734] 
split level 25: [/input, 932] 
split level 26: [/input-8, 228] 
split level 27: [/input, 953] 
split level 28: [/input-8, 372] 
split level 29: [/input, 885] 
split level 30: [/input, 2935] 
split level 31: [/input-8, 954] 
split level 32: [/input, 137] 
split level 33: [/input-8, 1374] 
split level 34: [/input, 117] 
split level 35: [/input, 966] 
split level 36: [/input, 3028] 
split level 37: [/input-8, 1245] 
split level 38: [/input, 2920] 
split level 39: [/input-8, 1740] 
split level 40: [/input, 3235] 
split level 41: [/input, 962] 
split level 42: [/input-8, 1769] 
split level 43: [/input-8, 2015] 
split level 44: [/input, 869] 
split level 45: [/input, 647] 
split level 46: [/input, 140] 
split level 47: [/input-8, 1716] 
split level 48: [/input, 133] 
split level 49: [/input-8, 2006] 
split level 50: [/input-8, 1332] 
split level 51: [/input, 964] 
split level 52: [/input, 1912] 
split level 53: [/input, 118] 
split level 54: [/input, 948] 
split level 55: [/input-8, 1625] 
split level 56: [/input-8, 1618] 
split level 57: [/input, 853] 
split level 58: [/input, 2685] 
split level 59: [/input-8, 1649] 
split level 60: [/input-8, 1193] 
split level 61: [/input-8, 1748] 
split level 62: [/input, 949] 
split level 63: [/input, 1390] 
split level 64: [/input, 2936] 
split level 65: [/input, 1943] 
split level 66: [/input, 916] 
split level 67: [/input, 934] 
split level 68: [/input, 169] 
split level 69: [/input, 167] 
split level 70: [/input, 125] 
split level 71: [/input, 2988] 
split level 72: [/input, 450] 
split level 73: [/input-8, 1077] 
split level 74: [/input, 965] 
split level 75: [/input, 141] 
split level 76: [/input, 970] 
split level 77: [/input-8, 1331] 
split level 78: [/input, 164] 
split level 79: [/input, 213] 
split level 80: [/input-8, 1244] 
split level 81: [/input, 102] 
split level 82: [/input, 2972] 
split level 83: [/input, 968] 
split level 84: [/input, 1928] 
split level 85: [/input-8, 1996] 
split level 86: [/input, 884] 
split level 87: [/input-8, 1650] 
split level 88: [/input, 172] 
split level 89: [/input-8, 1633] 
split level 90: [/input, 871] 
split level 91: [/input, 2686] 
split level 92: [/input-8, 1781] 
split level 93: [/input, 2441] 
split level 94: [/input-8, 2032] 
split level 95: [/input, 852] 
split level 96: [/input, 631] 
split level 97: [/input, 698] 
split level 98: [/input, 3460] 
split level 99: [/input, 946] 
split level 100: [/input, 142] 
split level 101: [/input, 678] 
split level 102: [/input, 89] 
split level 103: [/input, 2211] 
split level 104: [/input, 2670] 
split level 105: [/input, 406] 
split level 106: [/input-8, 1157] 
split level 107: [/input-8, 2017] 
split level 108: [/input, 2964] 
split level 109: [/input-8, 181] 
split level 110: [/input, 2692] 
split level 111: [/input, 868] 
split level 112: [/input, 854] 
split level 113: [/input, 2963] 
split level 114: [/input, 823] 
split level 115: [/input, 2524] 
split level 116: [/input-8, 1366] 
split level 117: [/input, 375] 
split level 118: [/input, 1913] 
split level 119: [/input, 1897] 
split level 120: [/input, 855] 
split level 121: [/input-8, 229] 
split level 122: [/input, 211] 
split level 123: [/input-8, 771] 
split level 124: [/input, 2948] 
split level 125: [/input, 2691] 
split level 126: [/input-8, 956] 
split level 127: [/input, 156] 
split level 128: [/input-8, 1610] 
split level 129: [/input, 1927] 
split level 130: [/input, 1881] 
split level 131: [/input, 3531] 
split level 132: [/input, 3131] 
split level 133: [/input, 930] 
split level 134: [/input, 3291] 
split level 135: [/input, 3476] 
split level 136: [/input, 4007] 
split level 137: [/input, 2939] 
split level 138: [/input, 662] 
split level 139: [/input, 216] 
split level 140: [/input, 2248] 
split level 141: [/input-8, 1617] 
split level 142: [/input, 126] 
split level 143: [/input, 1898] 
split level 144: [/input, 3532] 
split level 145: [/input, 914] 
split level 146: [/input, 838] 
split level 147: [/input, 132] 
split level 148: [/input, 228] 
split level 149: [/input, 957] 
split level 150: [/input, 981] 
split level 151: [/input, 94] 
split level 152: [/input, 2425] 
split level 153: [/input, 3549] 
split level 154: [/input-8, 1284] 
split level 155: [/input, 2690] 
split level 156: [/input, 101] 
split level 157: [/input, 2156] 
split level 158: [/input, 2702] 
split level 159: [/input-8, 1749] 
split level 160: [/input, 158] 
split level 161: [/input, 2477] 
split level 162: [/input, 898] 
split level 163: [/input-8, 366] 
split level 164: [/input, 2142] 
split level 165: [/input, 974] 
split level 166: [/input, 2932] 
split level 167: [/input, 2706] 
split level 168: [/input, 87] 
split level 169: [/input, 2212] 
split level 170: [/input, 2931] 
split level 171: [/input, 2492] 
split level 172: [/input, 2676] 
split level 173: [/input, 2436] 
split level 174: [/input, 2659] 
split level 175: [/input, 214] 
split level 176: [/input, 2181] 
split level 177: [/input, 2660] 
split level 178: [/input, 2675] 
split level 179: [/input, 215] 
split level 180: [/input-8, 213] 
split level 181: [/input, 2504] 
split level 182: [/input, 2507] 
split level 183: [/input, 2180] 
split level 184: [/input, 2424] 
split level 185: [/input, 73] 
split level 186: [/input, 2661] 
split level 187: [/input, 1882] 
split level 188: [/input, 2254] 
split level 189: [/input, 3501] 
split level 190: [/input, 1498] 
split level 191: [/input, 2677] 
split level 192: [/input, 2163] 
split level 193: [/input, 2658] 
split level 194: [/input, 2206] 
split level 195: [/input, 2638] 
split level 196: [/input, 2398] 
split level 197: [/input, 3041] 
split level 198: [/input, 2674] 
split level 199: [/input, 2705] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27182435989379883
10 lb beta sum: 0.0, worst -0.2718125581741333
Time: prepare 0.0115    bound 0.0956    transfer 0.0013    finalize 0.0031    func 0.1142    
Accumulated time: func 0.2018    prepare 0.0215    bound 0.1828    transfer 0.0014    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.02808905) min lb tensor(-0.27181184)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010811805725097656 
BICCOS Cumulative time: 0.010811805725097656
Preprocessing time: 0.009992837905883789 Inference time: 0.00014257431030273438 Add cuts time: 6.437301635742188e-05 Cut analysis time: 0.0006120204925537109
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.26585 (1), -0.26582 (1), -0.26572 (1), -0.26563 (1), -0.26555 (1), -0.26530 (1), -0.26508 (1), -0.26495 (1), -0.26459 (1), -0.26443 (1), -0.26409 (1), -0.26402 (1), -0.26370 (1), -0.26368 (1), -0.26352 (1), -0.26339 (1), -0.26330 (1), -0.26329 (1), -0.26328 (1), -0.26313 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5133    set_bounds 0.0086    solve 0.1143    add 0.0806    
Accumulated time: pickout 0.0003    decision 0.5133    set_bounds 0.0086    solve 0.1143    add 0.0806    
Current (lb-rhs): -0.265850305557251
50 domains visited
Cumulative time: 0.8206803798675537

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] [/input-12, 96] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 96] 
split level 1: [/input-12, 89] [/input-12, 89] [/input-12, 96] [/input-12, 96] [/input-12, 96] [/input-12, 96] [/input-12, 96] [/input-12, 96] [/input-12, 96] [/input-12, 89] 
split level 2: [/input-12, 43] [/input-12, 43] [/input-12, 89] [/input-12, 43] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 43] 
split level 3: [/input-12, 18] [/input-12, 18] [/input-12, 43] [/input-12, 18] [/input-12, 18] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 18] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24263668060302734
10 lb beta sum: 0.5864970088005066, worst -0.23490381240844727
Time: prepare 0.0076    bound 0.1164    transfer 0.0007    finalize 0.0026    func 0.1300    
Accumulated time: func 0.3318    prepare 0.0294    bound 0.2992    transfer 0.0021    finalize 0.0058    
all_split False
======================Cut inference begins======================
max lb tensor(0.09609999) min lb tensor(-0.23489308)
Number of Verified Splits: 12 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 11
#cuts >= 20: 0
BICCOS time: 0.012885093688964844 
BICCOS Cumulative time: 0.0236968994140625
Preprocessing time: 0.011767864227294922 Inference time: 0.0005483627319335938 Add cuts time: 0.00020647048950195312 Cut analysis time: 0.000362396240234375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07053 (2), -0.06991 (2), -0.06978 (2), -0.06921 (2), -0.06899 (2), -0.06897 (2), -0.06889 (2), -0.06885 (2), -0.06859 (2), -0.06850 (2), -0.06813 (2), -0.06783 (2), -0.06765 (2), -0.06756 (2), -0.06557 (2), -0.06550 (2), -0.06377 (2), -0.06254 (2), -0.06167 (2), -0.06138 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0124    solve 0.1301    add 0.0818    
Accumulated time: pickout 0.0014    decision 0.5329    set_bounds 0.0211    solve 0.2443    add 0.1624    
Current (lb-rhs): -0.0705292820930481
100 domains visited
Cumulative time: 1.0788452625274658

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 96] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
split level 1: [/input-12, 96] [/input-12, 96] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 89] [/input-12, 36] [/input-12, 89] [/input-12, 36] 
split level 2: [/input-12, 89] [/input-12, 89] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 43] [/input-12, 89] [/input-12, 43] [/input-12, 89] 
split level 3: [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 43] [/input-12, 18] [/input-12, 43] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07525479793548584
10 lb beta sum: 0.7982674837112427, worst -0.11708533763885498
Time: prepare 0.0071    bound 0.1161    transfer 0.0007    finalize 0.0023    func 0.1289    
Accumulated time: func 0.4607    prepare 0.0367    bound 0.4153    transfer 0.0028    finalize 0.0082    
all_split False
======================Cut inference begins======================
max lb tensor(0.29591227) min lb tensor(-0.03632069)
Number of Verified Splits: 378 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.035794734954833984 
BICCOS Cumulative time: 0.059491634368896484
Preprocessing time: 0.011505842208862305 Inference time: 0.01691913604736328 Add cuts time: 0.007033824920654297 Cut analysis time: 0.00033593177795410156
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0012    decision 0.0190    set_bounds 0.0158    solve 0.1290    add 0.0196    
Accumulated time: pickout 0.0026    decision 0.5520    set_bounds 0.0369    solve 0.3733    add 0.1820    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 36] 
split level 2: [/input-12, 96] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 43] 
split level 5: [/input-12, 18] 
split level 6: [/input-8, 1171] 
split level 7: [/input, 2984] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11667418479919434
10 lb beta sum: 0.23121991753578186, worst -0.10736942291259766
Time: prepare 0.0066    bound 0.1282    transfer 0.0009    finalize 0.0017    func 0.1390    
Accumulated time: func 0.5997    prepare 0.0437    bound 0.5435    transfer 0.0037    finalize 0.0099    
all_split False
======================Cut inference begins======================
max lb tensor(0.42024490) min lb tensor(-0.10722542)
Number of Verified Splits: 238 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27205610275268555
10 lb beta sum: 0.7765359878540039, worst -0.1948314905166626
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 16.
#cuts 1-3: 9
#cuts 4-6: 6
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.2780618667602539 
BICCOS Cumulative time: 0.3375535011291504
Preprocessing time: 0.007493495941162109 Inference time: 0.26326751708984375 Add cuts time: 0.0067348480224609375 Cut analysis time: 0.0005660057067871094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10723 (8), -0.10178 (8), -0.10096 (8), -0.09551 (8), -0.08888 (8), -0.08376 (8), -0.08298 (8), -0.07785 (8), -0.05057 (8), -0.04704 (8), -0.04506 (8), -0.04155 (8), -0.01437 (8), -0.01078 (8), -0.01005 (8), -0.00637 (8), -0.00430 (8), -0.00042 (8), 
Length of domains: 18
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0245    solve 0.1391    add 0.0009    
Accumulated time: pickout 0.0029    decision 0.5740    set_bounds 0.0614    solve 0.5124    add 0.1829    
Current (lb-rhs): -0.10722541809082031
118 domains visited
Cumulative time: 1.7692031860351562

BaB round 2
batch: 18
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 1: [/input-8, 1649] [/input-12, 2] [/input-8, 1650] [/input-12, 2] [/input-8, 1649] [/input-12, 2] [/input-8, 1650] [/input-12, 2] [/input-8, 1756] [/input-8, 1649] 
split level 2: [/input-8, 1650] [/input, 2966] [/input-8, 1649] [/input, 2966] [/input-8, 1650] [/input, 2966] [/input-8, 1649] [/input, 2966] [/input, 2966] [/input-8, 1650] 
split level 3: [/input-8, 1077] [/input-8, 1762] [/input-8, 1077] [/input-8, 1236] [/input-8, 1077] [/input-8, 1762] [/input-8, 1077] [/input-8, 1236] [/input-8, 1932] [/input-8, 1077] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1030421257019043
10 lb beta sum: 0.23498794436454773, worst -0.0998525619506836
Time: prepare 0.0075    bound 0.1457    transfer 0.0018    finalize 0.0017    func 0.1585    
Accumulated time: func 0.7582    prepare 0.0514    bound 0.6892    transfer 0.0055    finalize 0.0115    
all_split False
======================Cut inference begins======================
max lb tensor(1.11731195) min lb tensor(-0.09980035)
Number of Verified Splits: 222 of 288
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20799922943115234
10 lb beta sum: 1.0361738204956055, worst -0.022475481033325195
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 9
#cuts 4-6: 9
#cuts 7-9: 14
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.3102388381958008 
BICCOS Cumulative time: 0.6477923393249512
Preprocessing time: 0.008496999740600586 Inference time: 0.2919158935546875 Add cuts time: 0.008289813995361328 Cut analysis time: 0.0015361309051513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09980 (12), -0.09778 (12), -0.09607 (12), -0.09436 (12), -0.09409 (12), -0.09361 (12), -0.09235 (12), -0.09064 (12), -0.09025 (12), -0.08990 (12), -0.08866 (12), -0.08817 (12), -0.08655 (12), -0.08481 (12), -0.08446 (12), -0.08180 (12), -0.08111 (12), -0.07808 (12), -0.07662 (12), -0.07588 (12), 
Length of domains: 66
Time: pickout 0.0014    decision 0.0145    set_bounds 0.0310    solve 0.1586    add 0.0013    
Accumulated time: pickout 0.0043    decision 0.5884    set_bounds 0.0924    solve 0.6710    add 0.1842    
Current (lb-rhs): -0.09980034828186035
184 domains visited
Cumulative time: 2.288144111633301

BaB round 3
batch: 66
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] 
split level 1: [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09799861907958984
10 lb beta sum: 0.22421325743198395, worst -0.09794306755065918
Time: prepare 0.0072    bound 0.1490    transfer 0.0010    finalize 0.0016    func 0.1604    
Accumulated time: func 0.9186    prepare 0.0588    bound 0.8382    transfer 0.0065    finalize 0.0131    
all_split False
======================Cut inference begins======================
max lb tensor(0.48927689) min lb tensor(-0.09790850)
Number of Verified Splits: 115 of 264
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 10
#cuts 4-6: 12
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.02462458610534668 
BICCOS Cumulative time: 0.6724169254302979
Preprocessing time: 0.007997989654541016 Inference time: 0.012096166610717773 Add cuts time: 0.003259420394897461 Cut analysis time: 0.0012710094451904297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09791 (14), -0.09590 (14), -0.09422 (14), -0.09250 (14), -0.09223 (14), -0.09167 (14), -0.09046 (14), -0.08881 (14), -0.08809 (14), -0.08800 (14), -0.08683 (14), -0.08625 (14), -0.08446 (14), -0.08268 (14), -0.08258 (14), -0.07912 (14), -0.07903 (14), -0.07538 (14), -0.07402 (14), -0.07315 (14), 
Length of domains: 149
Time: pickout 0.0016    decision 0.0143    set_bounds 0.1367    solve 0.1605    add 0.0013    
Accumulated time: pickout 0.0060    decision 0.6028    set_bounds 0.2290    solve 0.8315    add 0.1855    
Current (lb-rhs): -0.09790849685668945
333 domains visited
Cumulative time: 2.6286144256591797

BaB round 4
batch: 149
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1772] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09486603736877441
10 lb beta sum: 0.08874331414699554, worst -0.09482836723327637
Time: prepare 0.0075    bound 0.1556    transfer 0.0007    finalize 0.0017    func 0.1675    
Accumulated time: func 1.0861    prepare 0.0665    bound 0.9938    transfer 0.0072    finalize 0.0148    
all_split False
======================Cut inference begins======================
max lb tensor(0.49460125) min lb tensor(-0.09481454)
Number of Verified Splits: 80 of 298
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 33.
#cuts 1-3: 11
#cuts 4-6: 12
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.021156787872314453 
BICCOS Cumulative time: 0.6935737133026123
Preprocessing time: 0.008755683898925781 Inference time: 0.00818181037902832 Add cuts time: 0.002935171127319336 Cut analysis time: 0.0012841224670410156
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09481 (15), -0.09282 (15), -0.09086 (15), -0.08941 (15), -0.08891 (15), -0.08889 (15), -0.08850 (15), -0.08739 (15), -0.08703 (15), -0.08689 (15), -0.08545 (15), -0.08497 (15), -0.08483 (15), -0.08455 (15), -0.08350 (15), -0.08349 (15), -0.08308 (15), -0.08268 (15), -0.08163 (15), -0.08148 (15), 
Length of domains: 218
Time: pickout 0.0029    decision 0.0167    set_bounds 0.0130    solve 0.1676    add 0.0018    
Accumulated time: pickout 0.0089    decision 0.6195    set_bounds 0.2421    solve 0.9991    add 0.1873    
Current (lb-rhs): -0.09481453895568848
551 domains visited
Cumulative time: 2.852640390396118

BaB round 5
batch: 218
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-12, 90] [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0931394100189209
10 lb beta sum: 0.048239242285490036, worst -0.09312152862548828
Time: prepare 0.0113    bound 0.1536    transfer 0.0019    finalize 0.0026    func 0.1723    
Accumulated time: func 1.2584    prepare 0.0780    bound 1.1474    transfer 0.0091    finalize 0.0175    
all_split False
======================Cut inference begins======================
max lb tensor(0.38264656) min lb tensor(-0.09310770)
Number of Verified Splits: 109 of 436
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 11
#cuts 4-6: 12
#cuts 7-9: 11
#cuts >= 20: 0
BICCOS time: 0.029674291610717773 
BICCOS Cumulative time: 0.7232480049133301
Preprocessing time: 0.01277303695678711 Inference time: 0.012465476989746094 Add cuts time: 0.0030672550201416016 Cut analysis time: 0.0013685226440429688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09311 (16), -0.09110 (16), -0.08840 (16), -0.08814 (16), -0.08770 (16), -0.08678 (16), -0.08649 (16), -0.08633 (16), -0.08620 (16), -0.08498 (16), -0.08450 (16), -0.08437 (16), -0.08302 (16), -0.08301 (16), -0.08297 (16), -0.08281 (16), -0.08249 (16), -0.08182 (16), -0.08137 (16), -0.08109 (16), 
Length of domains: 327
Time: pickout 0.0038    decision 0.0267    set_bounds 0.0191    solve 0.1724    add 0.0019    
Accumulated time: pickout 0.0127    decision 0.6462    set_bounds 0.2612    solve 1.1715    add 0.1893    
Current (lb-rhs): -0.09310770034790039
878 domains visited
Cumulative time: 3.1073708534240723

BaB round 6
batch: 327
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input, 901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09071159362792969
10 lb beta sum: 0.005507761612534523, worst -0.09068608283996582
Time: prepare 0.0165    bound 0.1605    transfer 0.0015    finalize 0.0034    func 0.1872    
Accumulated time: func 1.4456    prepare 0.0947    bound 1.3079    transfer 0.0106    finalize 0.0209    
all_split False
======================Cut inference begins======================
max lb tensor(0.34512186) min lb tensor(-0.09066582)
Number of Verified Splits: 37 of 654
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 11
#cuts 4-6: 13
#cuts 7-9: 14
#cuts >= 20: 0
BICCOS time: 0.028470754623413086 
BICCOS Cumulative time: 0.7517187595367432
Preprocessing time: 0.019013643264770508 Inference time: 0.004314899444580078 Add cuts time: 0.003610849380493164 Cut analysis time: 0.001531362533569336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.09067 (17), -0.08871 (17), -0.08572 (17), -0.08550 (17), -0.08525 (17), -0.08424 (17), -0.08378 (17), -0.08355 (17), -0.08323 (17), -0.08306 (17), -0.08205 (17), -0.08152 (17), -0.08144 (17), -0.08126 (17), -0.08093 (17), -0.08060 (17), -0.08046 (17), -0.08030 (17), -0.08010 (17), -0.07998 (17), 
Length of domains: 617
Time: pickout 0.0054    decision 0.0334    set_bounds 0.0277    solve 0.1874    add 0.0028    
Accumulated time: pickout 0.0181    decision 0.6796    set_bounds 0.2888    solve 1.3589    add 0.1920    
Current (lb-rhs): -0.09066581726074219
1495 domains visited
Cumulative time: 3.3935577869415283

BaB round 7
batch: 617
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 954] [/input, 3028] [/input-8, 954] [/input, 2935] [/input-8, 1374] [/input, 3028] [/input-8, 954] [/input, 2935] [/input-8, 954] [/input-8, 1756] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08777213096618652
10 lb beta sum: 0.0010172505863010883, worst -0.08775472640991211
Time: prepare 0.0313    bound 0.1718    transfer 0.0051    finalize 0.0071    func 0.2234    
Accumulated time: func 1.6690    prepare 0.1262    bound 1.4797    transfer 0.0157    finalize 0.0280    
all_split False
======================Cut inference begins======================
max lb tensor(0.01189987) min lb tensor(-0.08774495)
Number of Verified Splits: 114 of 1234
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 11
#cuts 4-6: 23
#cuts 7-9: 15
#cuts >= 20: 0
BICCOS time: 0.060683250427246094 
BICCOS Cumulative time: 0.8124020099639893
Preprocessing time: 0.03922438621520996 Inference time: 0.01507258415222168 Add cuts time: 0.004345893859863281 Cut analysis time: 0.002040386199951172
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08774 (18), -0.08578 (18), -0.08540 (18), -0.08404 (18), -0.08365 (18), -0.08279 (18), -0.08234 (18), -0.08209 (18), -0.08131 (18), -0.08080 (18), -0.08050 (18), -0.08036 (18), -0.08003 (18), -0.07999 (18), -0.07987 (18), -0.07941 (18), -0.07883 (18), -0.07874 (18), -0.07869 (18), -0.07853 (18), 
Length of domains: 1120
Time: pickout 0.0113    decision 0.0482    set_bounds 0.0531    solve 0.2237    add 0.0060    
Accumulated time: pickout 0.0294    decision 0.7279    set_bounds 0.3419    solve 1.5826    add 0.1980    
Current (lb-rhs): -0.08774495124816895
2615 domains visited
Cumulative time: 3.79917311668396

BaB round 8
batch: 1120
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3028] [/input, 901] [/input-8, 1374] [/input, 3028] [/input-8, 954] [/input, 901] [/input, 3028] [/input, 3028] [/input, 3028] [/input, 3028] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08455562591552734
10 lb beta sum: 0.000622518768068403, worst -0.08455610275268555
Time: prepare 0.0577    bound 0.2510    transfer 0.0123    finalize 0.0131    func 0.3499    
Accumulated time: func 2.0188    prepare 0.1842    bound 1.7307    transfer 0.0280    finalize 0.0411    
all_split False
======================Cut inference begins======================
max lb tensor(0.00989225) min lb tensor(-0.08455181)
Number of Verified Splits: 213 of 2240
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 59.
#cuts 1-3: 12
#cuts 4-6: 30
#cuts 7-9: 17
#cuts >= 20: 0
BICCOS time: 0.11270928382873535 
BICCOS Cumulative time: 0.9251112937927246
Preprocessing time: 0.07033753395080566 Inference time: 0.03251934051513672 Add cuts time: 0.007096290588378906 Cut analysis time: 0.0027561187744140625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08455 (19), -0.08321 (19), -0.08257 (19), -0.08219 (19), -0.08123 (19), -0.08084 (19), -0.08082 (19), -0.08044 (19), -0.07958 (19), -0.07948 (19), -0.07915 (19), -0.07910 (19), -0.07887 (19), -0.07824 (19), -0.07812 (19), -0.07780 (19), -0.07760 (19), -0.07753 (19), -0.07728 (19), -0.07725 (19), 
Length of domains: 2027
Time: pickout 0.0203    decision 0.0795    set_bounds 0.0975    solve 0.3504    add 0.0176    
Accumulated time: pickout 0.0497    decision 0.8074    set_bounds 0.4395    solve 1.9330    add 0.2157    
Current (lb-rhs): -0.08455181121826172
4642 domains visited
Cumulative time: 4.4821765422821045

BaB round 9
batch: 2027
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1374] [/input, 2935] [/input, 3028] [/input-8, 228] [/input, 3028] [/input, 2935] [/input-8, 1374] [/input-8, 228] [/input-8, 1374] [/input, 2935] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08177471160888672
10 lb beta sum: 0.0003619220806285739, worst -0.0817713737487793
Time: prepare 0.1241    bound 0.3970    transfer 0.0290    finalize 0.0247    func 0.6012    
Accumulated time: func 2.6200    prepare 0.3086    bound 2.1277    transfer 0.0570    finalize 0.0658    
all_split False
======================Cut inference begins======================
max lb tensor(0.01338145) min lb tensor(-0.08176851)
Number of Verified Splits: 544 of 4054
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 71.
#cuts 1-3: 15
#cuts 4-6: 38
#cuts 7-9: 18
#cuts >= 20: 0
BICCOS time: 0.22518396377563477 
BICCOS Cumulative time: 1.1502952575683594
Preprocessing time: 0.13098526000976562 Inference time: 0.07416272163391113 Add cuts time: 0.017136096954345703 Cut analysis time: 0.0028998851776123047
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08177 (20), -0.08042 (20), -0.07977 (20), -0.07935 (20), -0.07842 (20), -0.07800 (20), -0.07799 (20), -0.07760 (20), -0.07679 (20), -0.07664 (20), -0.07625 (20), -0.07615 (20), -0.07603 (20), -0.07593 (20), -0.07557 (20), -0.07544 (20), -0.07536 (20), -0.07480 (20), -0.07468 (20), -0.07446 (20), 
Length of domains: 3510
Time: pickout 0.0428    decision 0.3439    set_bounds 0.1842    solve 0.6020    add 0.0226    
Accumulated time: pickout 0.0925    decision 1.1513    set_bounds 0.6237    solve 2.5349    add 0.2383    
Current (lb-rhs): -0.08176851272583008
8152 domains visited
Cumulative time: 5.9113874435424805

BaB round 10
batch: 3510
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2935] [/input-8, 228] [/input, 2935] [/input, 1928] [/input, 2935] [/input-8, 228] [/input, 2935] [/input, 1928] [/input-8, 1740] [/input-8, 228] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08099603652954102
10 lb beta sum: 0.0036434370558708906, worst -0.08099818229675293
Time: prepare 0.1834    bound 0.6322    transfer 0.0282    finalize 0.0397    func 0.9327    
Accumulated time: func 3.5526    prepare 0.4923    bound 2.7599    transfer 0.0851    finalize 0.1055    
all_split False
======================Cut inference begins======================
max lb tensor(0.03889823) min lb tensor(-0.08099413)
Number of Verified Splits: 728 of 7020
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 86.
#cuts 1-3: 16
#cuts 4-6: 51
#cuts 7-9: 18
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.34949541091918945 
BICCOS Cumulative time: 1.4997906684875488
Preprocessing time: 0.22046232223510742 Inference time: 0.10810518264770508 Add cuts time: 0.017479419708251953 Cut analysis time: 0.003448486328125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08099 (21), -0.07965 (21), -0.07900 (21), -0.07857 (21), -0.07765 (21), -0.07723 (21), -0.07720 (21), -0.07683 (21), -0.07602 (21), -0.07585 (21), -0.07548 (21), -0.07538 (21), -0.07525 (21), -0.07513 (21), -0.07480 (21), -0.07467 (21), -0.07458 (21), -0.07403 (21), -0.07390 (21), -0.07368 (21), 
Length of domains: 6292
Time: pickout 0.0645    decision 0.2061    set_bounds 0.4417    solve 0.9345    add 0.0839    
Accumulated time: pickout 0.1570    decision 1.3574    set_bounds 1.0654    solve 3.4695    add 0.3222    
Current (lb-rhs): -0.0809941291809082
14444 domains visited
Cumulative time: 8.004884719848633

BaB round 11
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1740] [/input, 1928] [/input-8, 1740] [/input-8, 1374] [/input-8, 1740] [/input, 1928] [/input-8, 1740] [/input-8, 1374] [/input, 2935] [/input, 1928] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07817339897155762
10 lb beta sum: 0.0012735312338918447, worst -0.07815933227539062
Time: prepare 0.2226    bound 0.7134    transfer 0.0292    finalize 0.0477    func 1.0664    
Accumulated time: func 4.6191    prepare 0.7152    bound 3.4733    transfer 0.1143    finalize 0.1532    
all_split False
======================Cut inference begins======================
max lb tensor(0.03433132) min lb tensor(-0.07815433)
Number of Verified Splits: 673 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 99.
#cuts 1-3: 16
#cuts 4-6: 50
#cuts 7-9: 28
#cuts 10-12: 5
#cuts >= 20: 0
BICCOS time: 0.560164213180542 
BICCOS Cumulative time: 2.059954881668091
Preprocessing time: 0.4232025146484375 Inference time: 0.11017847061157227 Add cuts time: 0.022665977478027344 Cut analysis time: 0.004117250442504883
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07815 (22), -0.07776 (22), -0.07616 (22), -0.07576 (22), -0.07575 (22), -0.07550 (22), -0.07535 (22), -0.07446 (22), -0.07435 (22), -0.07398 (22), -0.07395 (22), -0.07368 (22), -0.07360 (22), -0.07318 (22), -0.07314 (22), -0.07281 (22), -0.07254 (22), -0.07246 (22), -0.07240 (22), -0.07213 (22), 
Length of domains: 9715
Time: pickout 0.0699    decision 0.4105    set_bounds 0.3602    solve 1.0682    add 0.0367    
Accumulated time: pickout 0.2269    decision 1.7679    set_bounds 1.4256    solve 4.5376    add 0.3589    
Current (lb-rhs): -0.07815432548522949
21963 domains visited
current_vram/total_varm: 12.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 10.527411937713623

BaB round 12
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1374] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07673859596252441
10 lb beta sum: 0.0005439761443994939, worst -0.07669687271118164
Time: prepare 0.4440    bound 1.3582    transfer 0.0754    finalize 0.1199    func 2.1057    
Accumulated time: func 6.7248    prepare 1.1594    bound 4.8315    transfer 0.1897    finalize 0.2731    
all_split False
======================Cut inference begins======================
max lb tensor(0.03457117) min lb tensor(-0.07666326)
Number of Verified Splits: 1419 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 146.
#cuts 1-3: 17
#cuts 4-6: 49
#cuts 7-9: 64
#cuts 10-12: 16
#cuts >= 20: 0
BICCOS time: 0.8245811462402344 
BICCOS Cumulative time: 2.884536027908325
Preprocessing time: 0.516761064529419 Inference time: 0.25617384910583496 Add cuts time: 0.04448413848876953 Cut analysis time: 0.0071620941162109375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07666 (23), -0.07550 (22), -0.07491 (23), -0.07467 (23), -0.07422 (23), -0.07389 (23), -0.07368 (22), -0.07314 (22), -0.07291 (23), -0.07286 (23), -0.07250 (23), -0.07248 (23), -0.07227 (23), -0.07189 (23), -0.07173 (22), -0.07171 (23), -0.07159 (23), -0.07153 (22), -0.07145 (23), -0.07110 (23), 
Length of domains: 16488
Time: pickout 0.1376    decision 0.4466    set_bounds 0.9049    solve 2.3576    add 0.0493    
Accumulated time: pickout 0.3645    decision 2.2146    set_bounds 2.3305    solve 6.8952    add 0.4081    
Current (lb-rhs): -0.07666325569152832
36928 domains visited
current_vram/total_varm: 24.0GB/99.9GB, batch_size increase to 16384
Cumulative time: 15.279497146606445

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1740] [/input, 871] [/input, 871] [/input-8, 1740] [/input, 2935] [/input, 3028] [/input, 1390] [/input-8, 1740] [/input-8, 2006] [/input, 1390] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07448196411132812
10 lb beta sum: 0.0002486086741555482, worst -0.08596131950616837
Time: prepare 0.8913    bound 2.7849    transfer 0.1504    finalize 0.4583    func 4.4987    
Accumulated time: func 11.2235    prepare 2.0511    bound 7.6164    transfer 0.3401    finalize 0.7315    
all_split False
======================Cut inference begins======================
max lb tensor(0.03841805) min lb tensor(-0.07445979)
Number of Verified Splits: 3351 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 264.
#cuts 1-3: 9
#cuts 4-6: 66
#cuts 7-9: 147
#cuts 10-12: 42
#cuts >= 20: 0
BICCOS time: 2.1402103900909424 
BICCOS Cumulative time: 5.024746417999268
Preprocessing time: 1.0466187000274658 Inference time: 0.9453694820404053 Add cuts time: 0.13397789001464844 Cut analysis time: 0.014244318008422852
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07446 (24), -0.07378 (23), -0.07272 (24), -0.07228 (24), -0.07206 (24), -0.07196 (23), -0.07186 (24), -0.07166 (24), -0.07136 (23), -0.07100 (23), -0.07067 (24), -0.07053 (24), -0.07033 (24), -0.07031 (24), -0.07014 (24), -0.07012 (24), -0.07001 (23), -0.06985 (24), -0.06980 (23), -0.06951 (24), 
Length of domains: 29521
Time: pickout 0.2764    decision 1.6565    set_bounds 1.7810    solve 4.5041    add 0.0923    
Accumulated time: pickout 0.6409    decision 3.8711    set_bounds 4.1115    solve 11.3993    add 0.5004    
Current (lb-rhs): -0.07445979118347168
66345 domains visited
current_vram/total_varm: 41.7GB/99.9GB, batch_size increase to 32768
Cumulative time: 25.790932655334473

BaB round 14
batch: 29521
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2006] [/input-8, 2006] [/input, 884] [/input-8, 1769] [/input, 884] [/input-8, 1769] [/input, 884] [/input, 884] [/input, 884] [/input, 884] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07225155830383301
10 lb beta sum: 0.0009216521284542978, worst -0.07224655151367188
Time: prepare 1.6366    bound 5.3407    transfer 0.3115    finalize 0.8762    func 8.5570    
Accumulated time: func 19.7805    prepare 3.6881    bound 12.9571    transfer 0.6517    finalize 1.6077    
all_split False
======================Cut inference begins======================
max lb tensor(0.04033617) min lb tensor(-0.07224393)
Number of Verified Splits: 6604 of 59042
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 414.
#cuts 1-3: 9
#cuts 4-6: 109
#cuts 7-9: 214
#cuts 10-12: 81
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 4.072333574295044 
BICCOS Cumulative time: 9.097079992294312
Preprocessing time: 2.401811361312866 Inference time: 1.275261402130127 Add cuts time: 0.3721346855163574 Cut analysis time: 0.02312612533569336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07224 (25), -0.07146 (24), -0.07050 (25), -0.07007 (25), -0.07005 (25), -0.06984 (25), -0.06963 (25), -0.06944 (25), -0.06942 (24), -0.06912 (24), -0.06888 (24), -0.06866 (24), -0.06846 (25), -0.06833 (25), -0.06831 (25), -0.06810 (25), -0.06809 (25), -0.06796 (25), -0.06792 (25), -0.06788 (25), 
Length of domains: 52438
Time: pickout 0.5984    decision 2.9599    set_bounds 3.2078    solve 8.5674    add 0.1427    
Accumulated time: pickout 1.2393    decision 6.8311    set_bounds 7.3193    solve 19.9667    add 0.6431    
Current (lb-rhs): -0.07224392890930176
118783 domains visited
Cumulative time: 45.4593985080719

BaB round 15
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2936] [/input, 3028] [/input-8, 1769] [/input, 137] [/input-8, 1769] [/input, 137] [/input-8, 1769] [/input-8, 1769] [/input-8, 1769] [/input-8, 1769] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07040548324584961
10 lb beta sum: 0.0003074436099268496, worst -0.08637332916259766
Time: prepare 1.8418    bound 11.6695    transfer 0.3739    finalize 1.2722    func 15.5886    
Accumulated time: func 35.3690    prepare 5.5303    bound 24.6266    transfer 1.0256    finalize 2.8798    
all_split False
======================Cut inference begins======================
max lb tensor(0.01715374) min lb tensor(-0.07034874)
Number of Verified Splits: 7279 of 65536
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 550.
#cuts 1-3: 9
#cuts 4-6: 131
#cuts 7-9: 321
#cuts 10-12: 88
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 5.046913146972656 
BICCOS Cumulative time: 14.143993139266968
Preprocessing time: 2.1509199142456055 Inference time: 2.272585153579712 Add cuts time: 0.5924379825592041 Cut analysis time: 0.030970096588134766
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07035 (26), -0.06963 (25), -0.06944 (25), -0.06922 (25), -0.06859 (26), -0.06815 (26), -0.06810 (25), -0.06796 (26), -0.06788 (25), -0.06782 (26), -0.06753 (25), -0.06727 (25), -0.06726 (25), -0.06720 (25), -0.06719 (25), -0.06718 (25), -0.06702 (25), -0.06685 (25), -0.06682 (25), -0.06664 (25), 
Length of domains: 77927
Time: pickout 0.5915    decision 3.4001    set_bounds 3.7415    solve 15.6018    add 0.2058    
Accumulated time: pickout 1.8308    decision 10.2311    set_bounds 11.0608    solve 35.5685    add 0.8490    
Current (lb-rhs): -0.07034873962402344
177040 domains visited
Cumulative time: 74.20454406738281

BaB round 16
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 137] [/input-8, 1769] [/input-8, 1769] [/input, 1928] [/input, 1928] [/input-8, 1769] [/input, 1912] [/input, 1928] [/input, 1943] [/input, 1928] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06778979301452637
10 lb beta sum: 0.000623551313765347, worst -0.08131826668977737
Time: prepare 1.8602    bound 12.1888    transfer 0.3748    finalize 1.5264    func 16.3884    
Accumulated time: func 51.7575    prepare 7.3908    bound 36.8154    transfer 1.4004    finalize 4.4062    
all_split False
======================Cut inference begins======================
max lb tensor(0.01750970) min lb tensor(-0.06772733)
Number of Verified Splits: 9467 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 550.
#cuts 1-3: 9
#cuts 4-6: 131
#cuts 7-9: 321
#cuts 10-12: 88
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 0.0013973712921142578 
BICCOS Cumulative time: 14.145390510559082
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07035 (26), -0.06922 (25), -0.06859 (26), -0.06796 (26), -0.06782 (26), -0.06773 (26), -0.06751 (26), -0.06720 (25), -0.06685 (25), -0.06664 (25), -0.06656 (26), -0.06641 (25), -0.06620 (26), -0.06607 (26), -0.06596 (26), -0.06593 (27), -0.06586 (26), -0.06576 (26), -0.06569 (26), -0.06553 (26), 
Length of domains: 101228
Time: pickout 0.5975    decision 3.3195    set_bounds 4.0260    solve 16.4011    add 0.1734    
Accumulated time: pickout 2.4283    decision 13.5506    set_bounds 15.0868    solve 51.9696    add 1.0224    
Current (lb-rhs): -0.07034873962402344
233109 domains visited
Cumulative time: 98.88744807243347

BaB round 17
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2006] [/input-8, 1245] [/input-8, 2006] [/input-8, 1245] [/input, 885] [/input-8, 1193] [/input, 948] [/input-8, 1193] [/input, 948] [/input, 884] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0681772232055664
10 lb beta sum: 0.000447146303486079, worst -0.08064932376146317
Time: prepare 1.8822    bound 12.1830    transfer 0.3810    finalize 1.6090    func 16.4778    
Accumulated time: func 68.2353    prepare 9.2734    bound 48.9984    transfer 1.7814    finalize 6.0153    
all_split False
======================Cut inference begins======================
max lb tensor(0.01727319) min lb tensor(-0.06814075)
Number of Verified Splits: 7695 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 550.
#cuts 1-3: 9
#cuts 4-6: 131
#cuts 7-9: 321
#cuts 10-12: 88
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 0.0012969970703125 
BICCOS Cumulative time: 14.146687507629395
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06814 (27), -0.06782 (26), -0.06773 (26), -0.06751 (26), -0.06712 (26), -0.06664 (25), -0.06639 (27), -0.06607 (26), -0.06596 (26), -0.06593 (27), -0.06586 (26), -0.06571 (27), -0.06569 (26), -0.06540 (26), -0.06538 (26), -0.06527 (26), -0.06524 (26), -0.06521 (25), -0.06509 (26), -0.06505 (26), 
Length of domains: 126301
Time: pickout 0.6047    decision 3.3029    set_bounds 4.0962    solve 16.4909    add 0.1674    
Accumulated time: pickout 3.0330    decision 16.8534    set_bounds 19.1830    solve 68.4605    add 1.1897    
Current (lb-rhs): -0.06814074516296387
290950 domains visited
Cumulative time: 123.70743489265442

BaB round 18
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 885] [/input-8, 1769] [/input, 419] [/input, 419] [/input-8, 1193] [/input, 419] [/input-8, 1193] [/input-8, 1193] [/input, 419] [/input-8, 1769] 
cut re-enabled after branching node selection
0 lb beta sum: 0.00028666199068538845, worst -0.0659799575805664
10 lb beta sum: 0.0004045308451168239, worst -0.07511678338050842
Time: prepare 2.8329    bound 12.1851    transfer 0.3850    finalize 0.5498    func 17.6165    
Accumulated time: func 85.8518    prepare 12.1067    bound 61.1836    transfer 2.1664    finalize 6.5650    
all_split False
======================Cut inference begins======================
max lb tensor(0.01788294) min lb tensor(-0.06592035)
Number of Verified Splits: 7249 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 550.
#cuts 1-3: 9
#cuts 4-6: 131
#cuts 7-9: 321
#cuts 10-12: 88
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 0.0013191699981689453 
BICCOS Cumulative time: 14.148006677627563
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06814 (27), -0.06712 (26), -0.06639 (27), -0.06593 (27), -0.06592 (27), -0.06586 (26), -0.06571 (27), -0.06549 (27), -0.06538 (26), -0.06530 (27), -0.06501 (26), -0.06494 (26), -0.06490 (26), -0.06453 (26), -0.06434 (27), -0.06431 (26), -0.06419 (27), -0.06416 (27), -0.06412 (26), -0.06397 (27), 
Length of domains: 151820
Time: pickout 0.6121    decision 3.3058    set_bounds 4.1885    solve 17.6302    add 0.1675    
Accumulated time: pickout 3.6451    decision 20.1593    set_bounds 23.3715    solve 86.0906    add 1.3572    
Current (lb-rhs): -0.06814074516296387
349237 domains visited
Cumulative time: 149.76819801330566

BaB round 19
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1193] [/input, 901] [/input-8, 1193] [/input, 884] [/input-8, 1193] [/input-8, 1769] [/input-8, 1769] [/input-8, 1769] [/input, 2936] [/input, 419] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0003842117730528116, worst -0.06401872634887695
10 lb beta sum: 0.0003447548078838736, worst -0.06398510932922363
Time: prepare 3.4140    bound 12.1885    transfer 0.3909    finalize 0.5517    func 16.9814    
Accumulated time: func 102.8332    prepare 15.5211    bound 73.3721    transfer 2.5573    finalize 7.1167    
all_split False
======================Cut inference begins======================
max lb tensor(0.01961029) min lb tensor(-0.06397581)
Number of Verified Splits: 6555 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 550.
#cuts 1-3: 9
#cuts 4-6: 131
#cuts 7-9: 321
#cuts 10-12: 88
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 0.001964092254638672 
BICCOS Cumulative time: 14.149970769882202
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06814 (27), -0.06712 (26), -0.06639 (27), -0.06592 (27), -0.06571 (27), -0.06549 (27), -0.06530 (27), -0.06494 (26), -0.06490 (26), -0.06453 (26), -0.06434 (27), -0.06431 (26), -0.06416 (27), -0.06398 (27), -0.06397 (27), -0.06387 (27), -0.06380 (27), -0.06373 (27), -0.06356 (26), -0.06345 (27), 
Length of domains: 178033
Time: pickout 0.6164    decision 3.3035    set_bounds 4.4548    solve 16.9996    add 0.1760    
Accumulated time: pickout 4.2615    decision 23.4628    set_bounds 27.8263    solve 103.0903    add 1.5333    
Current (lb-rhs): -0.06814074516296387
408218 domains visited
Cumulative time: 175.50836563110352

BaB round 20
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 884] [/input, 1928] [/input-8, 1193] [/input, 964] [/input, 1912] [/input, 1912] [/input-8, 1193] [/input, 1390] [/input, 884] [/input, 1928] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0003237236524000764, worst -0.06285357475280762
10 lb beta sum: 0.00029523528064601123, worst -0.1054791584610939
Time: prepare 3.3854    bound 12.1847    transfer 0.3985    finalize 2.0971    func 18.4959    
Accumulated time: func 121.3291    prepare 18.9069    bound 85.5568    transfer 2.9559    finalize 9.2138    
all_split False
======================Cut inference begins======================
max lb tensor(0.01944244) min lb tensor(-0.06282806)
Number of Verified Splits: 5717 of 65536
Stop inferencing: Max cuts number reached.
Total number of valid cuts: 550.
#cuts 1-3: 9
#cuts 4-6: 131
#cuts 7-9: 321
#cuts 10-12: 88
#cuts 13-15: 1
#cuts >= 20: 0
BICCOS time: 0.0012459754943847656 
BICCOS Cumulative time: 14.151216745376587
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06814 (27), -0.06712 (26), -0.06639 (27), -0.06592 (27), -0.06571 (27), -0.06549 (27), -0.06530 (27), -0.06490 (26), -0.06453 (26), -0.06434 (27), -0.06431 (26), -0.06416 (27), -0.06398 (27), -0.06397 (27), -0.06380 (27), -0.06373 (27), -0.06345 (27), -0.06330 (27), -0.06317 (27), -0.06315 (27), 
Length of domains: 205084
Time: pickout 0.6278    decision 4.2118    set_bounds 3.2443    solve 18.5086    add 0.1782    
Accumulated time: pickout 4.8893    decision 27.6746    set_bounds 31.0706    solve 121.5988    add 1.7114    
Current (lb-rhs): -0.06814074516296387
468037 domains visited
Time out!!!!!!!!
Result: unknown in 205.3584 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.72241402, -24.34649849, -23.13090515, -23.33512688, -23.44177818,
         -22.72599030, -24.29437256, -23.28028107, -25.88602257, -23.95406342]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [815]; unstable size 815; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 815] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 815] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 815] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 288] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.40899789, -1.25211048, -1.71174979, -1.47050440, -0.92382908,
         -2.03374052, -0.67183781,  0.06250131, -1.59028769]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.72241402, -24.34649849, -23.13090515, -23.33512688, -23.44177818,
         -22.72599030, -24.29437256, -23.28028107, -25.88602257, -23.95406342]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.72241211, -24.34649277, -23.13090134, -23.33512497, -23.44177628,
          -22.72598839, -24.29437065, -23.28027916, -25.88602257, -23.95405960],
         [-23.72241211, -24.34649277, -23.13090134, -23.33512497, -23.44177628,
          -22.72598839, -24.29437065, -23.28027916, -25.88602257, -23.95405960]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.44213295,  1.06621361, -0.14937782,  0.05484581,  0.16149712,
          -0.55429077,  1.01409149,  0.67378044]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         ...,


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0861 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.75207901, -26.19200516, -21.51674461, -21.03239250, -21.79173470,
         -19.86995125, -22.43434525, -21.71803665, -25.64961243, -25.42793655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [834]; unstable size 834; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 834] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 834] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 834] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 272] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.31165791, 4.29574919, 0.41222423, 0.84093678, 0.84679604, 1.26739883,
         0.78366542, 3.96632385, 3.82774282]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0310 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.22746849, -18.94099426, -15.30552959, -16.48309898, -16.57509995,
         -17.20245552, -18.03771782, -16.32104874, -17.03782463, -18.11646080]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [739]; unstable size 739; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 739] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 739] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 739] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 295] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56572294,  0.72621536, -1.85110521, -0.71412611, -0.72852206,
         -0.07062471,  0.71391773, -0.96604156,  0.12609529]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.22746849, -18.94099426, -15.30552959, -16.48309898, -16.57509995,
         -17.20245552, -18.03771782, -16.32104874, -17.03782463, -18.11646080]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.22747231, -18.94099617, -15.30552959, -16.48309898, -16.57509995,
          -17.20245552, -18.03771782, -16.32104874, -17.03782654, -18.11646080],
         [-17.22747231, -18.94099617, -15.30552959, -16.48309898, -16.57509995,
          -17.20245552, -18.03771782, -16.32104874, -17.03782654, -18.11646080]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.90642357, -1.01551914,  0.16205025,  0.25405121,  0.88140678,
           0.71677780]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0714 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.80888367, -17.65867996, -15.04872608, -14.86061478, -14.44957924,
         -15.80550385, -12.51641083, -16.93015480, -17.87636757, -16.77168083]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [527]; unstable size 527; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 300, 1, 527] with unstable size 299 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 527] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 527] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [299]; unstable size 299; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 299] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 299] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.97510815, 3.01688480, 0.83104944, 0.91215909, 0.13671064, 1.58025622,
         1.78175259, 2.71598959, 2.04945230]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0313 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.61078835, -21.87978363, -18.13955688, -19.07592964, -19.79349327,
         -19.61386681, -20.54054451, -20.75547600, -18.17226410, -21.24487877]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [616]; unstable size 616; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 616] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 616] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 616] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 263] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55854058, -0.58302045, -0.01108932,  0.84704137,  0.37303150,
          1.41230500,  1.42802870, -0.66239893,  1.97629523]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.61078835, -21.87978363, -18.13955688, -19.07592964, -19.79349327,
         -19.61386681, -20.54054451, -20.75547600, -18.17226410, -21.24487877]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.55933762, -22.55691528, -19.05906868, -19.80771828, -20.68400002,
          -20.36371231, -21.27793312, -21.47817230, -18.53498459, -21.80866051],
         [-18.55933762, -22.55691528, -19.05906868, -19.80771828, -20.68400002,
          -20.36371231, -21.27793312, -21.47817230, -18.53498459, -21.80866051]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.49973106,  1.24838066, -0.02435303]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0063 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0347 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.20258904, -28.97587204, -21.97974777, -26.12151527, -22.80328751,
         -24.79159355, -26.35929489, -25.88696289, -29.32278824, -27.97410202]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 81, 1, 659] with unstable size 80 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 659] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [80]; unstable size 80; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 80] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 80] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.61785412, 5.97946167, 3.68134046, 0.37307784, 2.26610613, 3.72874069,
         3.38983059, 6.45273161, 5.22464991]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0296 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.22389221, -25.61617279, -20.58332062, -23.34521294, -20.21918297,
         -23.68240929, -23.30189896, -22.01793289, -23.25316620, -24.99141312]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [521]; unstable size 521; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 521] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 521] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 521] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 193] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86727262,  3.52099228, -0.37071097,  2.10049105,  2.35707188,
          2.03269410,  1.03111458,  1.52145648,  3.31146598]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.22389221, -25.61617279, -20.58332062, -23.34521294, -20.21918297,
         -23.68240929, -23.30189896, -22.01793289, -23.25316620, -24.99141312]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.59311104, -25.98283386, -20.80554199, -23.80249596, -20.90235329,
          -24.19322205, -23.63773346, -22.69346428, -23.59370041, -25.37232018]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.09681129]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0453 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.96089172, -27.30179405, -18.06871414, -21.83080864, -18.06796074,
         -20.49729729, -22.39441490, -20.41414833, -26.60469437, -25.81503868]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [620]; unstable size 620; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 620] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 620] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 620] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 180] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.75783086,  7.53109550, -0.86600566,  3.01546717,  1.56956518,
          3.31403446,  1.72679353,  7.39529705,  6.39896250]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.96089172, -27.30179405, -18.06871414, -21.83080864, -18.06796074,
         -20.49729729, -22.39441490, -20.41414833, -26.60469437, -25.81503868]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.96817017, -27.31116486, -18.08074570, -21.85573387, -18.09226227,
          -20.52867126, -22.39926720, -20.45345879, -26.61774445, -25.83756828]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01151657]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0042 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0390 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.76115799, -29.22484970, -26.75863647, -27.30132103, -27.79590416,
         -27.84509468, -25.49637985, -28.66069603, -31.11473465, -27.50533867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [617]; unstable size 617; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 617] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 617] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 617] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 213] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.97265589, 2.28189492, 0.24724400, 0.96132332, 1.16451240, 1.43096900,
         1.79910517, 3.81141233, 0.72075987]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0329 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
         -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [854]; unstable size 854; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 854] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 854] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 854] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 206] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.99029899,  0.58493656,  2.75045800,  0.33922255,  3.42682910,
          3.47799587,  2.48519111, -0.45412579,  3.58810258]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
         -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.20it/s]100%|██████████| 1/1 [00:00<00:00,  9.19it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.21707344, -26.20688248, -23.75342369, -25.93466568, -23.61607170,
          -26.77052689, -27.00837326, -26.42004776, -22.24679565, -26.81797409]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.02972221]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1113 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.7633113861084
alpha/beta optimization time: 1.208751916885376
initial alpha-crown bounds: tensor([[ 3.05976844,  0.63149047,  2.80625176,  0.39776456,  3.48817968,
          3.54835129,  2.58086872, -0.39641088,  3.64704752]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.39641088247299194
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6331868171692
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6331489086151
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.63312339782715
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.6331021785736
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.63308358192444
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.63306522369385
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.63304710388184
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.63302755355835
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39641088]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
        -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39641088]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 854
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 201
Node /15 input 0: size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1080
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00018262863159179688
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.39641037583351135
10 lb beta sum: 0.0, worst -0.3964134454727173
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0526    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0526    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 0] 
split level 4: [/input-12, 20] 
split level 5: [/input-8, 819] 
split level 6: [/input-8, 817] 
split level 7: [/input-8, 818] 
split level 8: [/input-12, 83] 
split level 9: [/input-8, 443] 
split level 10: [/input-8, 1334] 
split level 11: [/input-8, 500] 
split level 12: [/input-8, 444] 
split level 13: [/input-8, 1196] 
split level 14: [/input-8, 1715] 
split level 15: [/input-12, 42] 
split level 16: [/input-8, 497] 
split level 17: [/input-12, 64] 
split level 18: [/input-8, 499] 
split level 19: [/input-8, 1650] 
split level 20: [/input-8, 1169] 
split level 21: [/input-8, 1515] 
split level 22: [/input-8, 442] 
split level 23: [/input-8, 1114] 
split level 24: [/input-8, 1612] 
split level 25: [/input-8, 1065] 
split level 26: [/input-8, 1660] 
split level 27: [/input, 2938] 
split level 28: [/input-8, 1399] 
split level 29: [/input-8, 1619] 
split level 30: [/input-8, 1324] 
split level 31: [/input-8, 157] 
split level 32: [/input-8, 498] 
split level 33: [/input-8, 1611] 
split level 34: [/input-8, 1661] 
split level 35: [/input-8, 748] 
split level 36: [/input-8, 1134] 
split level 37: [/input-8, 1613] 
split level 38: [/input, 873] 
split level 39: [/input, 2781] 
split level 40: [/input-8, 747] 
split level 41: [/input-8, 338] 
split level 42: [/input-12, 43] 
split level 43: [/input-8, 1516] 
split level 44: [/input-8, 1662] 
split level 45: [/input-12, 59] 
split level 46: [/input-8, 1646] 
split level 47: [/input-8, 1322] 
split level 48: [/input-8, 749] 
split level 49: [/input-8, 1653] 
split level 50: [/input-8, 1654] 
split level 51: [/input-8, 793] 
split level 52: [/input-8, 1618] 
split level 53: [/input-8, 1768] 
split level 54: [/input-8, 1174] 
split level 55: [/input-8, 1610] 
split level 56: [/input-8, 403] 
split level 57: [/input, 889] 
split level 58: [/input-8, 404] 
split level 59: [/input, 857] 
split level 60: [/input-8, 154] 
split level 61: [/input-8, 1071] 
split level 62: [/input-8, 1172] 
split level 63: [/input, 872] 
split level 64: [/input, 665] 
split level 65: [/input-8, 794] 
split level 66: [/input, 974] 
split level 67: [/input, 651] 
split level 68: [/input, 3549] 
split level 69: [/input, 3521] 
split level 70: [/input, 667] 
split level 71: [/input, 680] 
split level 72: [/input-8, 406] 
split level 73: [/input, 361] 
split level 74: [/input-8, 68] 
split level 75: [/input, 3221] 
split level 76: [/input-8, 1549] 
split level 77: [/input, 2766] 
split level 78: [/input-8, 105] 
split level 79: [/input, 946] 
split level 80: [/input, 2779] 
split level 81: [/input-8, 2022] 
split level 82: [/input, 332] 
split level 83: [/input, 434] 
split level 84: [/input-8, 21] 
split level 85: [/input-8, 69] 
split level 86: [/input-8, 1161] 
split level 87: [/input-8, 429] 
split level 88: [/input, 844] 
split level 89: [/input, 165] 
split level 90: [/input, 345] 
split level 91: [/input-8, 1231] 
split level 92: [/input-8, 1265] 
split level 93: [/input-8, 475] 
split level 94: [/input-8, 441] 
split level 95: [/input, 930] 
split level 96: [/input, 2747] 
split level 97: [/input, 2760] 
split level 98: [/input-8, 167] 
split level 99: [/input, 871] 
split level 100: [/input-8, 476] 
split level 101: [/input, 2663] 
split level 102: [/input, 3414] 
split level 103: [/input, 3288] 
split level 104: [/input, 2778] 
split level 105: [/input, 316] 
split level 106: [/input, 957] 
split level 107: [/input-8, 331] 
split level 108: [/input, 2877] 
split level 109: [/input-8, 1617] 
split level 110: [/input-8, 1341] 
split level 111: [/input-8, 1924] 
split level 112: [/input-8, 1342] 
split level 113: [/input, 990] 
split level 114: [/input, 855] 
split level 115: [/input, 3192] 
split level 116: [/input, 225] 
split level 117: [/input-8, 1609] 
split level 118: [/input, 3031] 
split level 119: [/input-8, 1614] 
split level 120: [/input, 331] 
split level 121: [/input-8, 410] 
split level 122: [/input, 3975] 
split level 123: [/input-8, 401] 
split level 124: [/input, 381] 
split level 125: [/input-8, 402] 
split level 126: [/input, 1511] 
split level 127: [/input, 3041] 
split level 128: [/input-8, 468] 
split level 129: [/input, 3418] 
split level 130: [/input, 1134] 
split level 131: [/input, 3043] 
split level 132: [/input, 1510] 
split level 133: [/input, 226] 
split level 134: [/input, 962] 
split level 135: [/input-8, 1375] 
split level 136: [/input, 3459] 
split level 137: [/input, 683] 
split level 138: [/input-8, 488] 
split level 139: [/input, 2136] 
split level 140: [/input, 3030] 
split level 141: [/input, 843] 
split level 142: [/input-8, 1783] 
split level 143: [/input-8, 973] 
split level 144: [/input, 403] 
split level 145: [/input, 840] 
split level 146: [/input, 1509] 
split level 147: [/input, 2664] 
split level 148: [/input, 2424] 
split level 149: [/input, 841] 
split level 150: [/input, 1719] 
split level 151: [/input-8, 953] 
split level 152: [/input, 3042] 
split level 153: [/input-8, 1520] 
split level 154: [/input-8, 70] 
split level 155: [/input, 317] 
split level 156: [/input, 899] 
split level 157: [/input, 3548] 
split level 158: [/input, 2393] 
split level 159: [/input, 3246] 
split level 160: [/input, 1216] 
split level 161: [/input, 376] 
split level 162: [/input, 224] 
split level 163: [/input-8, 1925] 
split level 164: [/input, 3457] 
split level 165: [/input, 1492] 
split level 166: [/input, 2391] 
split level 167: [/input, 1006] 
split level 168: [/input, 2409] 
split level 169: [/input, 300] 
split level 170: [/input, 3443] 
split level 171: [/input, 3111] 
split level 172: [/input, 122] 
split level 173: [/input, 1021] 
split level 174: [/input, 3099] 
split level 175: [/input-8, 990] 
split level 176: [/input, 1017] 
split level 177: [/input, 2392] 
split level 178: [/input, 979] 
split level 179: [/input, 2137] 
split level 180: [/input, 1512] 
split level 181: [/input, 1514] 
split level 182: [/input, 975] 
split level 183: [/input, 3114] 
split level 184: [/input-8, 1547] 
split level 185: [/input, 2135] 
split level 186: [/input, 329] 
split level 187: [/input, 568] 
split level 188: [/input, 357] 
split level 189: [/input, 218] 
split level 190: [/input, 341] 
split level 191: [/input, 3419] 
split level 192: [/input, 2152] 
split level 193: [/input, 333] 
split level 194: [/input, 3441] 
split level 195: [/input, 1099] 
split level 196: [/input, 1513] 
split level 197: [/input, 3113] 
split level 198: [/input-8, 1347] 
split level 199: [/input, 1519] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3963733911514282
10 lb beta sum: 0.0, worst -0.3963695764541626
Time: prepare 0.0114    bound 0.0968    transfer 0.0019    finalize 0.0029    func 0.1156    
Accumulated time: func 0.1687    prepare 0.0218    bound 0.1494    transfer 0.0020    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.07017088) min lb tensor(-0.39636725)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.0104827880859375 
BICCOS Cumulative time: 0.0104827880859375
Preprocessing time: 0.010008573532104492 Inference time: 0.00015664100646972656 Add cuts time: 9.083747863769531e-05 Cut analysis time: 0.00022673606872558594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.38675 (1), -0.38674 (1), -0.38656 (1), -0.38642 (1), -0.38626 (1), -0.38588 (1), -0.38583 (1), -0.38573 (1), -0.38354 (1), -0.38254 (1), -0.38204 (1), -0.37947 (1), -0.37930 (1), -0.37873 (1), -0.37843 (1), -0.37808 (1), -0.37797 (1), -0.37730 (1), -0.37708 (1), -0.37684 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5207    set_bounds 0.0091    solve 0.1157    add 0.0733    
Accumulated time: pickout 0.0003    decision 0.5207    set_bounds 0.0091    solve 0.1157    add 0.0733    
Current (lb-rhs): -0.38675373792648315
50 domains visited
Cumulative time: 0.7986006736755371

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] [/input-12, 92] [/input-12, 36] [/input-12, 92] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 1: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 92] [/input-12, 24] [/input-12, 92] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 24] [/input-12, 0] [/input-12, 0] [/input-12, 0] 
split level 3: [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3726046085357666
10 lb beta sum: 0.580084502696991, worst -0.36853864789009094
Time: prepare 0.0076    bound 0.1170    transfer 0.0008    finalize 0.0025    func 0.1305    
Accumulated time: func 0.2992    prepare 0.0296    bound 0.2664    transfer 0.0028    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.14343286) min lb tensor(-0.36848348)
Number of Verified Splits: 16 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 4.
#cuts 1-3: 4
#cuts >= 20: 0
BICCOS time: 0.012700796127319336 
BICCOS Cumulative time: 0.023183584213256836
Preprocessing time: 0.011549711227416992 Inference time: 0.0006759166717529297 Add cuts time: 0.0002429485321044922 Cut analysis time: 0.00023221969604492188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.23975 (2), -0.23949 (2), -0.23885 (2), -0.23773 (2), -0.23733 (2), -0.23706 (2), -0.23682 (2), -0.23628 (2), -0.23563 (2), -0.23549 (2), -0.23546 (2), -0.23546 (2), -0.23510 (2), -0.23344 (2), -0.23259 (2), -0.23241 (2), -0.23231 (2), -0.23210 (2), -0.23201 (2), -0.22929 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0248    set_bounds 0.0129    solve 0.1305    add 0.0822    
Accumulated time: pickout 0.0015    decision 0.5455    set_bounds 0.0220    solve 0.2463    add 0.1555    
Current (lb-rhs): -0.23975244164466858
100 domains visited
Cumulative time: 1.063819408416748

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 24] [/input-12, 92] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 24] [/input-12, 0] [/input-12, 24] [/input-12, 92] [/input-12, 0] [/input-12, 0] [/input-12, 92] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 2: [/input-12, 0] [/input-8, 819] [/input-12, 0] [/input-12, 0] [/input-8, 819] [/input-8, 819] [/input-12, 0] [/input-8, 819] [/input-8, 819] [/input-12, 0] 
split level 3: [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23940831422805786
10 lb beta sum: 0.7652418613433838, worst -0.2356104850769043
Time: prepare 0.0076    bound 0.1177    transfer 0.0008    finalize 0.0023    func 0.1310    
Accumulated time: func 0.4302    prepare 0.0374    bound 0.3841    transfer 0.0035    finalize 0.0078    
all_split False
======================Cut inference begins======================
max lb tensor(0.48864210) min lb tensor(-0.23514074)
Number of Verified Splits: 51 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 4
#cuts 4-6: 1
#cuts >= 20: 0
BICCOS time: 0.015478134155273438 
BICCOS Cumulative time: 0.03866171836853027
Preprocessing time: 0.011675596237182617 Inference time: 0.0025794506072998047 Add cuts time: 0.0009465217590332031 Cut analysis time: 0.0002765655517578125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12185 (3), -0.11956 (3), -0.11955 (3), -0.11928 (3), -0.11905 (3), -0.11856 (3), -0.11796 (3), -0.11623 (3), -0.11411 (3), -0.11286 (3), -0.11168 (3), -0.11166 (3), -0.10858 (3), -0.10600 (3), -0.10471 (3), -0.10435 (3), -0.10281 (3), -0.10101 (3), -0.10089 (3), -0.09646 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0192    set_bounds 0.0149    solve 0.1311    add 0.0895    
Accumulated time: pickout 0.0025    decision 0.5647    set_bounds 0.0369    solve 0.3773    add 0.2449    
Current (lb-rhs): -0.12185311317443848
150 domains visited
Cumulative time: 1.3351824283599854

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 0] [/input-12, 0] [/input-12, 92] [/input-12, 92] [/input-8, 818] [/input-12, 0] [/input-12, 0] [/input-12, 24] [/input-12, 24] [/input-8, 818] 
split level 2: [/input-8, 819] [/input-8, 819] [/input-8, 818] [/input-8, 818] [/input-8, 1322] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 500] 
split level 3: [/input-8, 818] [/input-8, 818] [/input-8, 1516] [/input-8, 500] [/input-8, 21] [/input-8, 500] [/input-8, 500] [/input-8, 1058] [/input-8, 1058] [/input-8, 157] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1262427568435669
10 lb beta sum: 0.7355114817619324, worst -0.12398189306259155
Time: prepare 0.0078    bound 0.1166    transfer 0.0008    finalize 0.0029    func 0.1308    
Accumulated time: func 0.5610    prepare 0.0455    bound 0.5007    transfer 0.0043    finalize 0.0107    
all_split False
======================Cut inference begins======================
max lb tensor(0.50553274) min lb tensor(-0.11839897)
Number of Verified Splits: 88 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 4
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.01810431480407715 
BICCOS Cumulative time: 0.05676603317260742
Preprocessing time: 0.011661052703857422 Inference time: 0.004117488861083984 Add cuts time: 0.0018701553344726562 Cut analysis time: 0.00045561790466308594
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04699 (4), -0.04657 (4), -0.04620 (4), -0.04620 (4), -0.04554 (4), -0.04552 (4), -0.04474 (4), -0.04467 (4), -0.04451 (4), -0.04412 (4), -0.04400 (4), -0.04390 (4), -0.04388 (4), -0.04381 (4), -0.04307 (4), -0.04195 (4), -0.04162 (4), -0.03982 (4), -0.03943 (4), -0.03941 (4), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0194    set_bounds 0.0140    solve 0.1309    add 0.0956    
Accumulated time: pickout 0.0035    decision 0.5841    set_bounds 0.0509    solve 0.5082    add 0.3406    
Current (lb-rhs): -0.04698866605758667
200 domains visited
Cumulative time: 1.6145672798156738

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-8, 819] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-12, 0] 
split level 2: [/input-8, 818] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 818] 
split level 3: [/input-8, 500] [/input-8, 157] [/input-8, 157] [/input-8, 157] [/input-8, 157] [/input-8, 157] [/input-8, 157] [/input-8, 157] [/input-8, 157] [/input-8, 500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05164909362792969
10 lb beta sum: 0.6670866012573242, worst -0.10890687257051468
Time: prepare 0.0083    bound 0.1324    transfer 0.0008    finalize 0.0025    func 0.1466    
Accumulated time: func 0.7075    prepare 0.0541    bound 0.6331    transfer 0.0051    finalize 0.0133    
all_split False
======================Cut inference begins======================
max lb tensor(0.04273069) min lb tensor(-0.04517734)
Number of Verified Splits: 139 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 23.
#cuts 1-3: 4
#cuts 4-6: 19
#cuts >= 20: 0
BICCOS time: 0.022220134735107422 
BICCOS Cumulative time: 0.07898616790771484
Preprocessing time: 0.011455059051513672 Inference time: 0.007381439208984375 Add cuts time: 0.0025055408477783203 Cut analysis time: 0.0008780956268310547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00684 (5), -0.00684 (5), -0.00653 (5), -0.00651 (5), -0.00651 (5), -0.00635 (5), -0.00627 (5), -0.00591 (5), -0.00560 (5), -0.00544 (5), -0.00542 (5), -0.00530 (5), -0.00487 (5), -0.00487 (5), -0.00470 (5), -0.00467 (5), -0.00448 (5), -0.00437 (5), -0.00412 (5), -0.00399 (5), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0198    set_bounds 0.0155    solve 0.1466    add 0.2851    
Accumulated time: pickout 0.0046    decision 0.6039    set_bounds 0.0664    solve 0.6549    add 0.6257    
Current (lb-rhs): -0.0068373242393136024
250 domains visited
Cumulative time: 2.105240821838379


Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 0] 
split level 4: [/input-8, 819] 
split level 5: [/input-8, 818] 
split level 6: [/input-8, 1334] 
split level 7: [/input-8, 500] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18757568299770355
10 lb beta sum: 0.7248774766921997, worst -0.18296872079372406
Time: prepare 0.0051    bound 0.1358    transfer 0.0010    finalize 0.0016    func 0.1452    
Accumulated time: func 0.8527    prepare 0.0597    bound 0.7689    transfer 0.0060    finalize 0.0149    
all_split False
======================Cut inference begins======================
max lb tensor(0.94532943) min lb tensor(-0.18269950)
Number of Verified Splits: 142 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.28964027762413025
10 lb beta sum: 0.8442895412445068, worst -0.22222667932510376
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 26.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.23042869567871094 
BICCOS Cumulative time: 0.3094148635864258
Preprocessing time: 0.0071413516998291016 Inference time: 0.21658062934875488 Add cuts time: 0.005669116973876953 Cut analysis time: 0.00103759765625
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.18270 (8), -0.18179 (8), -0.17177 (8), -0.16950 (8), -0.16849 (8), -0.16760 (8), -0.16373 (8), -0.15992 (8), -0.15913 (8), -0.15772 (8), -0.15198 (8), -0.14959 (8), -0.14905 (8), -0.14904 (8), -0.14443 (8), -0.14422 (8), -0.14257 (8), -0.14082 (8), -0.13929 (8), -0.13675 (8), 
Length of domains: 114
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0201    solve 0.1453    add 0.0017    
Accumulated time: pickout 0.0050    decision 0.6264    set_bounds 0.0865    solve 0.8001    add 0.6273    
Current (lb-rhs): -0.18269950151443481
364 domains visited
Cumulative time: 2.529214859008789

BaB round 2
batch: 114
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2938] [/input-8, 157] [/input-8, 817] [/input-8, 817] [/input-8, 1399] [/input-8, 1399] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18270178139209747
10 lb beta sum: 0.6050163507461548, worst -0.17849136888980865
Time: prepare 0.0050    bound 0.1327    transfer 0.0016    finalize 0.0013    func 0.1421    
Accumulated time: func 0.9949    prepare 0.0649    bound 0.9015    transfer 0.0076    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.02182055) min lb tensor(-0.17841521)
Number of Verified Splits: 20 of 228
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24896597862243652
10 lb beta sum: 0.7398492693901062, worst -0.2053985595703125
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts 7-9: 4
#cuts >= 20: 0
BICCOS time: 0.15450692176818848 
BICCOS Cumulative time: 0.46392178535461426
Preprocessing time: 0.006737947463989258 Inference time: 0.14543509483337402 Add cuts time: 0.0011577606201171875 Cut analysis time: 0.0011761188507080078
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17842 (9), -0.17775 (9), -0.16705 (9), -0.16506 (9), -0.16410 (9), -0.16343 (9), -0.15945 (9), -0.15496 (9), -0.15473 (9), -0.15296 (9), -0.15145 (9), -0.14756 (9), -0.14612 (9), -0.14452 (9), -0.14445 (9), -0.14328 (9), -0.14008 (9), -0.13987 (9), -0.13971 (9), -0.13834 (9), 
Length of domains: 208
Time: pickout 0.0024    decision 0.0156    set_bounds 0.0098    solve 0.1422    add 0.0013    
Accumulated time: pickout 0.0074    decision 0.6420    set_bounds 0.0963    solve 0.9423    add 0.6286    
Current (lb-rhs): -0.1784152090549469
572 domains visited
Cumulative time: 2.8555054664611816

BaB round 3
batch: 208
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 1516] [/input-8, 1065] [/input-8, 1715] [/input-8, 157] [/input-8, 1661] [/input-8, 1715] [/input-12, 20] [/input-8, 1715] [/input-8, 817] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17989033460617065
10 lb beta sum: 0.582414448261261, worst -0.17832420766353607
Time: prepare 0.0090    bound 0.1434    transfer 0.0008    finalize 0.0027    func 0.1586    
Accumulated time: func 1.1534    prepare 0.0741    bound 1.0449    transfer 0.0084    finalize 0.0189    
all_split False
======================Cut inference begins======================
max lb tensor(0.63796854) min lb tensor(-0.17827556)
Number of Verified Splits: 83 of 416
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3000754714012146
10 lb beta sum: 0.7224956154823303, worst -0.22845354676246643
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 32.
#cuts 1-3: 4
#cuts 4-6: 20
#cuts 7-9: 6
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.20919251441955566 
BICCOS Cumulative time: 0.6731142997741699
Preprocessing time: 0.011848926544189453 Inference time: 0.19193291664123535 Add cuts time: 0.004024505615234375 Cut analysis time: 0.0013861656188964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17828 (10), -0.17766 (10), -0.16672 (10), -0.16478 (10), -0.16389 (10), -0.16327 (10), -0.15468 (10), -0.15426 (10), -0.15274 (10), -0.15066 (10), -0.15010 (10), -0.14516 (10), -0.14370 (10), -0.14274 (10), -0.14192 (10), -0.14022 (10), -0.13911 (10), -0.13911 (10), -0.13865 (10), -0.13629 (10), 
Length of domains: 333
Time: pickout 0.0030    decision 0.0252    set_bounds 0.0181    solve 0.1587    add 0.0031    
Accumulated time: pickout 0.0103    decision 0.6672    set_bounds 0.1144    solve 1.1010    add 0.6318    
Current (lb-rhs): -0.17827555537223816
905 domains visited
Cumulative time: 3.274268627166748

BaB round 4
batch: 333
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1399] [/input, 3521] [/input-12, 64] [/input-8, 1661] [/input-8, 1516] [/input, 3521] [/input-8, 1516] [/input-8, 1399] [/input, 3521] [/input-8, 747] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17602062225341797
10 lb beta sum: 0.5771336555480957, worst -0.1744353324174881
Time: prepare 0.0149    bound 0.1434    transfer 0.0022    finalize 0.0036    func 0.1694    
Accumulated time: func 1.3228    prepare 0.0892    bound 1.1884    transfer 0.0107    finalize 0.0226    
all_split False
======================Cut inference begins======================
max lb tensor(0.58765405) min lb tensor(-0.17440374)
Number of Verified Splits: 127 of 666
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 49.
#cuts 1-3: 4
#cuts 4-6: 42
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.039797306060791016 
BICCOS Cumulative time: 0.7129116058349609
Preprocessing time: 0.01911306381225586 Inference time: 0.013521909713745117 Add cuts time: 0.0054090023040771484 Cut analysis time: 0.0017533302307128906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17440 (11), -0.17359 (11), -0.16292 (11), -0.16094 (11), -0.15999 (11), -0.15942 (11), -0.15918 (11), -0.15842 (11), -0.15409 (11), -0.15085 (11), -0.15000 (11), -0.14889 (11), -0.14868 (11), -0.14620 (11), -0.14594 (11), -0.14499 (11), -0.14400 (11), -0.14327 (11), -0.14257 (11), -0.14070 (11), 
Length of domains: 539
Time: pickout 0.0054    decision 0.0326    set_bounds 0.0275    solve 0.1696    add 0.0047    
Accumulated time: pickout 0.0158    decision 0.6998    set_bounds 0.1419    solve 1.2705    add 0.6365    
Current (lb-rhs): -0.17440374195575714
1444 domains visited
Cumulative time: 3.555410146713257

BaB round 5
batch: 539
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2938] [/input-8, 1174] [/input-8, 157] [/input, 2938] [/input-8, 157] [/input, 2938] [/input-8, 498] [/input-8, 1174] [/input-8, 1516] [/input, 2938] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17305633425712585
10 lb beta sum: 0.5755934119224548, worst -0.1715589165687561
Time: prepare 0.0245    bound 0.1688    transfer 0.0023    finalize 0.0060    func 0.2085    
Accumulated time: func 1.5313    prepare 0.1139    bound 1.3572    transfer 0.0130    finalize 0.0286    
all_split False
======================Cut inference begins======================
max lb tensor(0.62548906) min lb tensor(-0.17155585)
Number of Verified Splits: 221 of 1078
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 59.
#cuts 1-3: 5
#cuts 4-6: 51
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 0.06398630142211914 
BICCOS Cumulative time: 0.7768979072570801
Preprocessing time: 0.032743215560913086 Inference time: 0.021573543548583984 Add cuts time: 0.0076236724853515625 Cut analysis time: 0.002045869827270508
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.17156 (12), -0.17068 (12), -0.16002 (12), -0.15802 (12), -0.15709 (12), -0.15623 (12), -0.15557 (12), -0.15455 (12), -0.15115 (12), -0.14790 (12), -0.14708 (12), -0.14589 (12), -0.14509 (12), -0.14298 (12), -0.14238 (12), -0.14111 (12), -0.14011 (12), -0.14006 (12), -0.13955 (12), -0.13752 (12), 
Length of domains: 857
Time: pickout 0.0090    decision 0.0374    set_bounds 0.0454    solve 0.2094    add 0.0060    
Accumulated time: pickout 0.0247    decision 0.7372    set_bounds 0.1873    solve 1.4800    add 0.6424    
Current (lb-rhs): -0.17155584692955017
2301 domains visited
Cumulative time: 3.929213047027588

BaB round 6
batch: 857
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1715] [/input-8, 1662] [/input-8, 1662] [/input-12, 64] [/input-8, 748] [/input-8, 1065] [/input, 3521] [/input-8, 817] [/input-8, 1662] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1693679243326187
10 lb beta sum: 0.6411077380180359, worst -0.16783463954925537
Time: prepare 0.0395    bound 0.2059    transfer 0.0071    finalize 0.0103    func 0.2738    
Accumulated time: func 1.8050    prepare 0.1536    bound 1.5631    transfer 0.0201    finalize 0.0389    
all_split False
======================Cut inference begins======================
max lb tensor(0.61844617) min lb tensor(-0.16782518)
Number of Verified Splits: 377 of 1714
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 1-3: 9
#cuts 4-6: 42
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.2446897029876709 
BICCOS Cumulative time: 1.021587610244751
Preprocessing time: 0.05295205116271973 Inference time: 0.17817139625549316 Add cuts time: 0.011690855026245117 Cut analysis time: 0.0018754005432128906
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16783 (13), -0.16742 (13), -0.16608 (13), -0.16242 (13), -0.15587 (13), -0.15464 (13), -0.15453 (13), -0.15337 (13), -0.15247 (13), -0.15235 (13), -0.15113 (13), -0.15106 (13), -0.15099 (13), -0.14982 (13), -0.14812 (13), -0.14811 (13), -0.14797 (13), -0.14405 (13), -0.14394 (13), -0.14316 (13), 
Length of domains: 1337
Time: pickout 0.0166    decision 0.0629    set_bounds 0.0707    solve 0.2740    add 0.0088    
Accumulated time: pickout 0.0413    decision 0.8002    set_bounds 0.2579    solve 1.7540    add 0.6512    
Current (lb-rhs): -0.16782517731189728
3638 domains visited
Cumulative time: 4.6130757331848145

BaB round 7
batch: 1337
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 817] [/input-8, 1654] [/input-8, 157] [/input, 2938] [/input-8, 1662] [/input-8, 1654] [/input-8, 157] [/input-8, 1516] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16667339205741882
10 lb beta sum: 0.745097279548645, worst -0.1652076542377472
Time: prepare 0.0618    bound 0.2818    transfer 0.0123    finalize 0.0155    func 0.3894    
Accumulated time: func 2.1944    prepare 0.2156    bound 1.8449    transfer 0.0324    finalize 0.0544    
all_split False
======================Cut inference begins======================
max lb tensor(0.85703546) min lb tensor(-0.16520202)
Number of Verified Splits: 853 of 2674
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 11
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.1959526538848877 
BICCOS Cumulative time: 1.2175402641296387
Preprocessing time: 0.08188128471374512 Inference time: 0.09437012672424316 Add cuts time: 0.019087553024291992 Cut analysis time: 0.0006136894226074219
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16520 (14), -0.16386 (14), -0.16368 (14), -0.16265 (14), -0.16235 (14), -0.16130 (14), -0.16066 (14), -0.15277 (14), -0.15243 (14), -0.15110 (14), -0.15050 (14), -0.15024 (14), -0.15012 (14), -0.15002 (14), -0.14917 (14), -0.14872 (14), -0.14870 (14), -0.14861 (14), -0.14857 (14), -0.14768 (14), 
Length of domains: 1821
Time: pickout 0.0215    decision 0.0859    set_bounds 0.1138    solve 0.3900    add 0.0081    
Accumulated time: pickout 0.0628    decision 0.8861    set_bounds 0.3717    solve 2.1440    add 0.6593    
Current (lb-rhs): -0.16520202159881592
5459 domains visited
Cumulative time: 5.438766717910767

BaB round 8
batch: 1821
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 748] [/input-8, 748] [/input-12, 64] [/input-8, 498] [/input-12, 64] [/input-12, 64] [/input-8, 748] [/input-8, 1654] [/input-8, 498] [/input-12, 64] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1637040227651596
10 lb beta sum: 0.8460525274276733, worst -0.16221193969249725
Time: prepare 0.0852    bound 0.2653    transfer 0.0358    finalize 0.1905    func 0.6009    
Accumulated time: func 2.7954    prepare 0.3011    bound 2.1102    transfer 0.0682    finalize 0.2449    
all_split False
======================Cut inference begins======================
max lb tensor(1.06893539) min lb tensor(-0.16220765)
Number of Verified Splits: 2807 of 3642
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 12
#cuts 4-6: 7
#cuts >= 20: 0
BICCOS time: 0.48247718811035156 
BICCOS Cumulative time: 1.7000174522399902
Preprocessing time: 0.11404037475585938 Inference time: 0.32602691650390625 Add cuts time: 0.04157066345214844 Cut analysis time: 0.0008392333984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16221 (15), -0.16154 (15), -0.16087 (15), -0.16036 (15), -0.16020 (15), -0.15962 (15), -0.15902 (15), -0.15828 (15), -0.15647 (15), -0.15627 (15), -0.15515 (15), -0.15496 (15), -0.15268 (15), -0.15134 (15), -0.15021 (15), -0.14898 (15), -0.14887 (15), -0.14820 (15), -0.14766 (15), -0.14764 (15), 
Length of domains: 835
Time: pickout 0.0345    decision 0.1131    set_bounds 0.1566    solve 0.6017    add 0.0100    
Accumulated time: pickout 0.0973    decision 0.9992    set_bounds 0.5283    solve 2.7456    add 0.6693    
Current (lb-rhs): -0.16220764815807343
6294 domains visited
Cumulative time: 6.8661181926727295

BaB round 9
batch: 835
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 1516] [/input-8, 1169] [/input-8, 748] [/input-8, 748] [/input-8, 817] [/input-8, 748] [/input, 2938] [/input-8, 1516] [/input-8, 1169] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1614747941493988
10 lb beta sum: 0.6410606503486633, worst -0.15999574959278107
Time: prepare 0.0383    bound 0.2003    transfer 0.0023    finalize 0.0095    func 0.2622    
Accumulated time: func 3.0575    prepare 0.3396    bound 2.3105    transfer 0.0706    finalize 0.2544    
all_split False
======================Cut inference begins======================
max lb tensor(0.70125175) min lb tensor(-0.15998834)
Number of Verified Splits: 273 of 1670
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 12
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.09260988235473633 
BICCOS Cumulative time: 1.7926273345947266
Preprocessing time: 0.05190324783325195 Inference time: 0.034746646881103516 Add cuts time: 0.00531768798828125 Cut analysis time: 0.0006422996520996094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15999 (16), -0.15868 (16), -0.15865 (16), -0.15743 (16), -0.15735 (16), -0.15734 (16), -0.15671 (16), -0.15610 (16), -0.15600 (16), -0.15537 (16), -0.15425 (16), -0.15290 (16), -0.15248 (16), -0.15237 (16), -0.15169 (16), -0.15134 (16), -0.15116 (16), -0.15105 (16), -0.15103 (16), -0.15039 (16), 
Length of domains: 1397
Time: pickout 0.0137    decision 0.0606    set_bounds 0.0714    solve 0.2625    add 0.0044    
Accumulated time: pickout 0.1109    decision 1.0597    set_bounds 0.5997    solve 3.0081    add 0.6738    
Current (lb-rhs): -0.15998834371566772
7691 domains visited
Cumulative time: 7.375685214996338

BaB round 10
batch: 1397
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 889] [/input-8, 1399] [/input-8, 1169] [/input-12, 64] [/input-8, 1399] [/input-8, 1516] [/input-8, 748] [/input-8, 1324] [/input, 889] [/input-8, 747] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1584162712097168
10 lb beta sum: 0.7096534967422485, worst -0.15595786273479462
Time: prepare 0.2147    bound 0.2867    transfer 0.0042    finalize 0.0161    func 0.5405    
Accumulated time: func 3.5981    prepare 0.5545    bound 2.5971    transfer 0.0747    finalize 0.2705    
all_split False
======================Cut inference begins======================
max lb tensor(0.54392040) min lb tensor(-0.15592958)
Number of Verified Splits: 1219 of 2794
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 25.
#cuts 1-3: 13
#cuts 4-6: 12
#cuts >= 20: 0
BICCOS time: 0.26410388946533203 
BICCOS Cumulative time: 2.0567312240600586
Preprocessing time: 0.08752608299255371 Inference time: 0.15577960014343262 Add cuts time: 0.01988983154296875 Cut analysis time: 0.0009083747863769531
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15593 (17), -0.15499 (17), -0.15459 (17), -0.15374 (17), -0.15364 (17), -0.15337 (17), -0.15303 (17), -0.15238 (17), -0.15203 (17), -0.15172 (17), -0.15167 (17), -0.15046 (17), -0.15040 (17), -0.14914 (17), -0.14912 (17), -0.14868 (17), -0.14843 (17), -0.14790 (17), -0.14783 (17), -0.14743 (17), 
Length of domains: 1575
Time: pickout 0.0258    decision 0.0911    set_bounds 0.1181    solve 0.5412    add 0.0068    
Accumulated time: pickout 0.1367    decision 1.1508    set_bounds 0.7177    solve 3.5494    add 0.6805    
Current (lb-rhs): -0.1559295803308487
9266 domains visited
Cumulative time: 8.437633275985718

BaB round 11
batch: 1575
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 747] [/input-8, 157] [/input-8, 1516] [/input-8, 748] [/input-8, 748] [/input-8, 498] [/input-8, 1516] [/input-8, 748] [/input-8, 748] [/input-8, 498] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15563642978668213
10 lb beta sum: 0.6211335062980652, worst -0.15321454405784607
Time: prepare 0.0790    bound 0.3134    transfer 0.0052    finalize 0.0198    func 0.4378    
Accumulated time: func 4.0359    prepare 0.6338    bound 2.9105    transfer 0.0800    finalize 0.2903    
all_split False
======================Cut inference begins======================
max lb tensor(0.52063680) min lb tensor(-0.15320025)
Number of Verified Splits: 432 of 3150
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 22.
#cuts 1-3: 18
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.16440725326538086 
BICCOS Cumulative time: 2.2211384773254395
Preprocessing time: 0.09765434265136719 Inference time: 0.05700874328613281 Add cuts time: 0.009094476699829102 Cut analysis time: 0.0006496906280517578
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15320 (18), -0.15184 (18), -0.15165 (18), -0.15063 (18), -0.15049 (18), -0.15042 (18), -0.15030 (18), -0.14936 (18), -0.14927 (18), -0.14924 (18), -0.14911 (18), -0.14906 (18), -0.14875 (18), -0.14829 (18), -0.14800 (18), -0.14787 (18), -0.14774 (18), -0.14740 (18), -0.14694 (18), -0.14692 (18), 
Length of domains: 2718
Time: pickout 0.0314    decision 0.0996    set_bounds 0.1336    solve 0.4391    add 0.0103    
Accumulated time: pickout 0.1681    decision 1.2504    set_bounds 0.8513    solve 3.9885    add 0.6908    
Current (lb-rhs): -0.15320025384426117
11984 domains visited
Cumulative time: 9.324690341949463

BaB round 12
batch: 2718
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 889] [/input-8, 748] [/input-8, 497] [/input-8, 497] [/input-8, 497] [/input-8, 157] [/input-8, 497] [/input-8, 1134] [/input-8, 748] [/input-8, 748] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15468022227287292
10 lb beta sum: 1.3372421264648438, worst -0.1480444222688675
Time: prepare 0.1380    bound 0.4830    transfer 0.0296    finalize 0.0334    func 0.7199    
Accumulated time: func 4.7558    prepare 0.7721    bound 3.3935    transfer 0.1096    finalize 0.3237    
all_split False
======================Cut inference begins======================
max lb tensor(1.01973796) min lb tensor(-0.14802891)
Number of Verified Splits: 4517 of 5436
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 1.0211987495422363 
BICCOS Cumulative time: 3.242337226867676
Preprocessing time: 0.169877290725708 Inference time: 0.7800054550170898 Add cuts time: 0.07097363471984863 Cut analysis time: 0.00034236907958984375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14803 (19), -0.14638 (19), -0.14574 (19), -0.14506 (19), -0.14409 (19), -0.14357 (19), -0.14327 (19), -0.14308 (19), -0.14291 (19), -0.14255 (19), -0.14197 (19), -0.14172 (19), -0.14128 (19), -0.14099 (19), -0.14050 (19), -0.14029 (19), -0.13981 (19), -0.13799 (19), -0.13753 (19), -0.13610 (19), 
Length of domains: 919
Time: pickout 0.0432    decision 0.3130    set_bounds 0.2367    solve 0.7216    add 0.0080    
Accumulated time: pickout 0.2113    decision 1.5634    set_bounds 1.0880    solve 4.7101    add 0.6988    
Current (lb-rhs): -0.1480289101600647
12903 domains visited
Cumulative time: 11.71254825592041

BaB round 13
batch: 919
splitting decisions: 
split level 0: [/input-8, 747] [/input-8, 1611] [/input-8, 747] [/input-8, 1611] [/input-8, 1324] [/input-8, 1324] [/input-8, 747] [/input-8, 1324] [/input-8, 794] [/input-8, 1324] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1510484367609024

all verified at 4th iter
Time: prepare 0.0437    bound 0.0419    transfer 0.0029    finalize 0.0108    func 0.1107    
Accumulated time: func 4.8665    prepare 0.8160    bound 3.4354    transfer 0.1124    finalize 0.3345    
all_split False
======================Cut inference begins======================
max lb tensor(0.13060266) min lb tensor(0.00106859)
Number of Verified Splits: 1838 of 1838
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.057242631912231445 
BICCOS Cumulative time: 3.2995798587799072
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0187    decision 0.0654    set_bounds 0.0798    solve 0.1110    add 0.0004    
Accumulated time: pickout 0.2301    decision 1.6288    set_bounds 1.1678    solve 4.8212    add 0.6992    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
12903 domains visited
Cumulative time: 12.05619764328003


Properties batch 8, size 1
Remaining timeout: 186.36049509048462
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 13.6397 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.90053749, -18.83853912, -16.65795326, -15.93625736, -16.87875748,
         -16.65612221, -15.87883949, -18.48574829, -19.30859566, -18.32104874]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 775] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 775] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 291] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.07465309,  0.67120790, -0.69678164, -0.40189266,  0.40540996,
         -1.27040446,  0.91172022,  1.11740470,  0.40299344]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.90053749, -18.83853912, -16.65795326, -15.93625736, -16.87875748,
         -16.65612221, -15.87883949, -18.48574829, -19.30859566, -18.32104874]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.90053940, -18.83854103, -16.65795326, -15.93625832, -16.87875938,
          -16.65612030, -15.87884331, -18.48575401, -19.30859756, -18.32105255],
         [-17.90053940, -18.83854103, -16.65795326, -15.93625832, -16.87875938,
          -16.65612030, -15.87884331, -18.48575401, -19.30859756, -18.32105255]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.96428108,  0.72169495,  0.94250107, -0.05741501]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0741 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.01452446, -31.17614365, -24.06021309, -25.31211662, -23.70052147,
         -25.47224236, -25.36236954, -25.44280624, -27.95291138, -29.38704109]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [639]; unstable size 639; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 639] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 639] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 639] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 277] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.53353524,  4.77915478, -0.68763804,  0.12715697,  0.16958082,
          0.30826455,  0.61279362,  2.10399437,  3.39013553]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.01452446, -31.17614365, -24.06021309, -25.31211662, -23.70052147,
         -25.47224236, -25.36236954, -25.44280624, -27.95291138, -29.38704109]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.71807671, -30.91207504, -23.73194122, -25.07842064, -23.86753273,
          -25.28093910, -25.23051643, -25.63899803, -27.60635185, -29.14414406]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13559151]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.88498878, -31.32757950, -31.15767288, -32.62705231, -31.05282402,
         -32.13772202, -32.09079361, -30.79269218, -31.35886765, -30.31673813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [770]; unstable size 770; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 770] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 770] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 770] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 290] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78770638,  1.03243494,  1.96444678,  0.51057148,  1.33818674,
          1.22204256,  0.09967983,  0.93596315, -0.07644749]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.88498878, -31.32757950, -31.15767288, -32.62705231, -31.05282402,
         -32.13772202, -32.09079361, -30.79269218, -31.35886765, -30.31673813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.33it/s]100%|██████████| 1/1 [00:00<00:00,  9.32it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.28597832, -31.01292419, -31.50415421, -32.71194839, -31.25744820,
          -32.18006134, -32.28217316, -30.93283844, -31.51461792, -29.99298286]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.70700455]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1097 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 23th iter
best_l after optimization: 8.50500202178955
alpha/beta optimization time: 0.2832679748535156
initial alpha-crown bounds: tensor([[8.78652573e-01, 1.08035898e+00, 2.04135466e+00, 5.90096235e-01,
         1.42439270e+00, 1.30015862e+00, 2.00367421e-01, 9.89597082e-01,
         2.40802765e-05]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 0 ; Worst class: (+ rhs) 2.4080276489257812e-05
verified with init bound!
Result: safe-incomplete in 0.4355 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.17542076, -27.76688576, -22.42221451, -23.23637009, -22.93698311,
         -23.34073257, -23.85361671, -24.75134850, -25.51817131, -27.31844711]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [710]; unstable size 710; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 710] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 710] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 710] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 187] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.05221003,  3.04186702, -1.68551743, -1.26099968, -0.22333625,
          0.06938851,  0.46372631,  0.85233903,  2.67835474]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.17542076, -27.76688576, -22.42221451, -23.23637009, -22.93698311,
         -23.34073257, -23.85361671, -24.75134850, -25.51817131, -27.31844711]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.17541504, -27.76688766, -22.42221451, -23.23637199, -22.93698311,
          -23.34073448, -23.85361481, -24.75134277, -25.51817131, -27.31844521],
         [-24.17541504, -27.76688766, -22.42221451, -23.23637199, -22.93698311,
          -23.34073448, -23.85361481, -24.75134277, -25.51817131, -27.31844521]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.81415749, -0.29938889,  0.10436249]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.55731201, -50.89083099, -42.06116486, -47.85534668, -48.62054062,
         -48.15819550, -49.32711411, -47.74969101, -49.46615982, -52.86323929]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [518]; unstable size 518; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 116, 1, 518] with unstable size 115 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 3, 1, 518] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 518] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [115]; unstable size 115; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 3, 1, 115] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.03216004, 7.96402073, 5.21769238, 5.94199753, 5.50237179, 6.70993805,
         5.09641886, 6.72968769, 9.94023228]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0329 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.28612328, -36.58068848, -28.50667953, -31.36640739, -29.10656929,
         -32.13262939, -33.39686966, -30.94572258, -36.68356323, -37.42233658]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [770]; unstable size 770; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 770] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 770] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 770] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 149] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.97211361, -0.64362073,  1.92279065, -0.18267274,  2.60485005,
          3.75918484,  1.37062323,  7.21187735,  7.83291054]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.28612328, -36.58068848, -28.50667953, -31.36640739, -29.10656929,
         -32.13262939, -33.39686966, -30.94572258, -36.68356323, -37.42233658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.54991722, -36.72984695, -28.28089142, -31.22305489, -28.90884018,
          -31.94745827, -33.18599701, -30.79593277, -36.82979584, -37.53469467],
         [-28.54991722, -36.72984695, -28.28089142, -31.22305489, -28.90884018,
          -31.94745827, -33.18599701, -30.79593277, -36.82979584, -37.53469467]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26902580,  0.35892296]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.31065178, -29.77011871, -24.73226166, -28.38901711, -26.21283531,
         -28.98853493, -28.51242447, -30.11011124, -25.90357208, -30.21725655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 606] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 606] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 204] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.38776445, 1.62000239, 4.98641109, 2.86554313, 5.48513222, 5.11340475,
         6.28316784, 2.58398414, 6.84431171]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0273 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.24666405, -28.76270676, -23.26070213, -22.05362892, -20.50691032,
         -21.35376549, -23.01077271, -17.43795013, -27.58108521, -26.06879044]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 274, 1, 599] with unstable size 273 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 599] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [273]; unstable size 273; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 273] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 273] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.87904930, 8.74207497, 3.91814995, 3.03320599, 2.01956224, 2.34560633,
         3.41726899, 7.67006540, 6.18134117]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0296 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
         -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [694]; unstable size 694; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 694] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 694] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 259] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.01481509,  2.06576967, -0.04681420,  1.60054743, -0.07306194,
          1.60960853,  2.27459669,  1.25393188,  2.08621883]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
         -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.12it/s]100%|██████████| 1/1 [00:00<00:00,  9.11it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.09273529, -18.14864540, -14.29659462, -16.09573364, -14.54441929,
          -16.17729568, -13.98502541, -17.08440590, -16.74464989, -17.94149017],
         [-17.09273529, -18.14864540, -14.29659462, -16.09573364, -14.54441929,
          -16.17729568, -13.98502541, -17.08440590, -16.74464989, -17.94149017]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31156921, 0.55939388]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1124 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.356430053710938
alpha/beta optimization time: 1.1963424682617188
initial alpha-crown bounds: tensor([[ 2.11682415,  2.15421057, -0.00883842,  1.63260889, -0.03195834,
          1.64549243,  2.32464314,  1.34506536,  2.17838192]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.03195834159851074
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65002846717834
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.64998626708984
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.6499605178833
Verifying property 2 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00883842]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
        -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00883842]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 694
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 964
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.000102996826171875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.008836030960083008
10 lb beta sum: 0.0, worst -0.00884699821472168
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    func 0.0530    
Accumulated time: func 0.0530    prepare 0.0002    bound 0.0525    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 61] 
split level 3: [/input-8, 1627] 
split level 4: [/input-8, 1635] 
split level 5: [/input-12, 92] 
split level 6: [/input-8, 1954] 
split level 7: [/input-8, 1051] 
split level 8: [/input-8, 1628] 
split level 9: [/input-8, 924] 
split level 10: [/input-8, 1969] 
split level 11: [/input-8, 477] 
split level 12: [/input-12, 71] 
split level 13: [/input-8, 410] 
split level 14: [/input-8, 155] 
split level 15: [/input-8, 1961] 
split level 16: [/input-8, 1962] 
split level 17: [/input-8, 418] 
split level 18: [/input-12, 50] 
split level 19: [/input-8, 1963] 
split level 20: [/input-8, 1380] 
split level 21: [/input-8, 1570] 
split level 22: [/input-8, 1589] 
split level 23: [/input-8, 1973] 
split level 24: [/input-8, 306] 
split level 25: [/input-8, 466] 
split level 26: [/input-8, 1246] 
split level 27: [/input-8, 1590] 
split level 28: [/input-8, 300] 
split level 29: [/input-8, 930] 
split level 30: [/input-8, 424] 
split level 31: [/input-8, 1560] 
split level 32: [/input-8, 339] 
split level 33: [/input-8, 1371] 
split level 34: [/input-8, 435] 
split level 35: [/input-8, 307] 
split level 36: [/input-8, 36] 
split level 37: [/input-8, 741] 
split level 38: [/input-8, 161] 
split level 39: [/input-8, 458] 
split level 40: [/input-8, 1290] 
split level 41: [/input-8, 957] 
split level 42: [/input-8, 436] 
split level 43: [/input-8, 995] 
split level 44: [/input-8, 758] 
split level 45: [/input-8, 1598] 
split level 46: [/input-8, 869] 
split level 47: [/input-8, 738] 
split level 48: [/input-8, 408] 
split level 49: [/input-8, 1619] 
split level 50: [/input-8, 281] 
split level 51: [/input-8, 1561] 
split level 52: [/input-8, 150] 
split level 53: [/input-8, 459] 
split level 54: [/input-8, 159] 
split level 55: [/input-8, 149] 
split level 56: [/input-8, 276] 
split level 57: [/input-8, 1968] 
split level 58: [/input-8, 1680] 
split level 59: [/input-8, 625] 
split level 60: [/input-8, 177] 
split level 61: [/input-8, 1674] 
split level 62: [/input-8, 298] 
split level 63: [/input-12, 20] 
split level 64: [/input-8, 342] 
split level 65: [/input-8, 1038] 
split level 66: [/input-8, 243] 
split level 67: [/input-8, 102] 
split level 68: [/input-8, 299] 
split level 69: [/input-8, 349] 
split level 70: [/input-8, 908] 
split level 71: [/input-8, 770] 
split level 72: [/input-8, 1370] 
split level 73: [/input-8, 1638] 
split level 74: [/input-8, 357] 
split level 75: [/input-8, 1515] 
split level 76: [/input-8, 1701] 
split level 77: [/input-8, 1678] 
split level 78: [/input-8, 782] 
split level 79: [/input-8, 285] 
split level 80: [/input-8, 110] 
split level 81: [/input-8, 802] 
split level 82: [/input-8, 769] 
split level 83: [/input-8, 2036] 
split level 84: [/input-8, 771] 
split level 85: [/input-8, 85] 
split level 86: [/input-8, 494] 
split level 87: [/input-8, 244] 
split level 88: [/input-8, 1381] 
split level 89: [/input-8, 1945] 
split level 90: [/input-8, 997] 
split level 91: [/input, 1381] 
split level 92: [/input-8, 773] 
split level 93: [/input-8, 93] 
split level 94: [/input, 2787] 
split level 95: [/input-8, 1199] 
split level 96: [/input, 3314] 
split level 97: [/input-8, 245] 
split level 98: [/input-8, 1034] 
split level 99: [/input-8, 176] 
split level 100: [/input-8, 1210] 
split level 101: [/input-8, 169] 
split level 102: [/input-8, 1060] 
split level 103: [/input-8, 1947] 
split level 104: [/input, 4062] 
split level 105: [/input-8, 827] 
split level 106: [/input, 2804] 
split level 107: [/input, 1455] 
split level 108: [/input-8, 772] 
split level 109: [/input-8, 160] 
split level 110: [/input-8, 1656] 
split level 111: [/input-8, 411] 
split level 112: [/input, 2694] 
split level 113: [/input-8, 1227] 
split level 114: [/input-8, 1081] 
split level 115: [/input-8, 1225] 
split level 116: [/input, 2802] 
split level 117: [/input-8, 801] 
split level 118: [/input-8, 247] 
split level 119: [/input-8, 634] 
split level 120: [/input, 3463] 
split level 121: [/input-8, 246] 
split level 122: [/input-8, 71] 
split level 123: [/input-8, 449] 
split level 124: [/input, 1013] 
split level 125: [/input, 3991] 
split level 126: [/input, 85] 
split level 127: [/input-8, 1698] 
split level 128: [/input-8, 460] 
split level 129: [/input-8, 1937] 
split level 130: [/input-8, 1601] 
split level 131: [/input-8, 144] 
split level 132: [/input, 2941] 
split level 133: [/input-8, 1702] 
split level 134: [/input, 1382] 
split level 135: [/input, 832] 
split level 136: [/input-8, 488] 
split level 137: [/input, 3453] 
split level 138: [/input-8, 97] 
split level 139: [/input-8, 774] 
split level 140: [/input-8, 1609] 
split level 141: [/input, 1668] 
split level 142: [/input-8, 1073] 
split level 143: [/input, 1010] 
split level 144: [/input, 535] 
split level 145: [/input-8, 393] 
split level 146: [/input-8, 404] 
split level 147: [/input-8, 2037] 
split level 148: [/input-8, 1555] 
split level 149: [/input, 1488] 
split level 150: [/input, 2788] 
split level 151: [/input-8, 237] 
split level 152: [/input-8, 987] 
split level 153: [/input, 281] 
split level 154: [/input-8, 910] 
split level 155: [/input, 2012] 
split level 156: [/input-8, 251] 
split level 157: [/input-8, 1230] 
split level 158: [/input, 3234] 
split level 159: [/input, 844] 
split level 160: [/input-8, 1035] 
split level 161: [/input-8, 1688] 
split level 162: [/input, 841] 
split level 163: [/input, 621] 
split level 164: [/input-8, 37] 
split level 165: [/input-8, 1611] 
split level 166: [/input, 2908] 
split level 167: [/input, 3254] 
split level 168: [/input, 1252] 
split level 169: [/input, 610] 
split level 170: [/input, 3264] 
split level 171: [/input, 1305] 
split level 172: [/input, 509] 
split level 173: [/input-8, 1337] 
split level 174: [/input, 910] 
split level 175: [/input-8, 1789] 
split level 176: [/input-8, 451] 
split level 177: [/input, 1197] 
split level 178: [/input, 3049] 
split level 179: [/input, 2073] 
split level 180: [/input-8, 496] 
split level 181: [/input, 2843] 
split level 182: [/input, 857] 
split level 183: [/input-8, 407] 
split level 184: [/input, 1687] 
split level 185: [/input, 2009] 
split level 186: [/input-8, 255] 
split level 187: [/input, 2088] 
split level 188: [/input, 495] 
split level 189: [/input, 1148] 
split level 190: [/input, 2089] 
split level 191: [/input, 732] 
split level 192: [/input-8, 626] 
split level 193: [/input, 2013] 
split level 194: [/input-8, 391] 
split level 195: [/input, 514] 
split level 196: [/input, 3387] 
split level 197: [/input-8, 236] 
split level 198: [/input, 526] 
split level 199: [/input, 1017] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.008777856826782227
10 lb beta sum: 0.0, worst -0.008773088455200195
Time: prepare 0.0116    bound 0.0977    transfer 0.0013    finalize 0.0028    func 0.1160    
Accumulated time: func 0.1690    prepare 0.0217    bound 0.1502    transfer 0.0014    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.19408154) min lb tensor(-0.00876808)
Number of Verified Splits: 75 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.014098167419433594 
BICCOS Cumulative time: 0.014098167419433594
Preprocessing time: 0.010053873062133789 Inference time: 0.002733945846557617 Add cuts time: 0.0011370182037353516 Cut analysis time: 0.00017333030700683594
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5117    set_bounds 0.0095    solve 0.1161    add 0.0102    
Accumulated time: pickout 0.0003    decision 0.5117    set_bounds 0.0095    solve 0.1161    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 61] 
split level 3: [/input-8, 1635] 
split level 4: [/input-12, 92] 
split level 5: [/input-8, 924] 
split level 6: [/input-12, 50] 
split level 7: [/input-8, 1963] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.10100841522216797

all verified at 0th iter
Time: prepare 0.0051    bound 0.0040    transfer 0.0008    finalize 0.0013    func 0.0128    
Accumulated time: func 0.1818    prepare 0.0272    bound 0.1542    transfer 0.0022    finalize 0.0042    
all_split False
======================Cut inference begins======================
max lb tensor(0.35437322) min lb tensor(0.10100842)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006998300552368164 
BICCOS Cumulative time: 0.021096467971801758
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0218    set_bounds 0.0204    solve 0.0129    add 0.0003    
Accumulated time: pickout 0.0007    decision 0.5336    set_bounds 0.0299    solve 0.1289    add 0.0105    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.7889900207519531


Properties batch 3, size 1
Remaining timeout: 197.68179512023926
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.68172240257263
Verifying property 4 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03195834]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
        -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03195834]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 694
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 964
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00023365020751953125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03195762634277344
10 lb beta sum: 0.0, worst -0.031957149505615234
Time: prepare 0.0002    bound 0.0880    transfer 0.0001    finalize 0.0001    func 0.0885    
Accumulated time: func 0.0885    prepare 0.0002    bound 0.0880    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 92] 
split level 6: [/input-8, 1051] 
split level 7: [/input-8, 155] 
split level 8: [/input-12, 71] 
split level 9: [/input-8, 306] 
split level 10: [/input-8, 1570] 
split level 11: [/input-8, 418] 
split level 12: [/input-8, 1370] 
split level 13: [/input-8, 300] 
split level 14: [/input-8, 349] 
split level 15: [/input-8, 410] 
split level 16: [/input-8, 1246] 
split level 17: [/input-8, 924] 
split level 18: [/input-8, 307] 
split level 19: [/input-8, 342] 
split level 20: [/input-8, 1380] 
split level 21: [/input-8, 1371] 
split level 22: [/input-8, 170] 
split level 23: [/input-8, 1680] 
split level 24: [/input-8, 299] 
split level 25: [/input-12, 55] 
split level 26: [/input-8, 149] 
split level 27: [/input-8, 1635] 
split level 28: [/input-8, 741] 
split level 29: [/input-8, 150] 
split level 30: [/input-8, 408] 
split level 31: [/input-8, 357] 
split level 32: [/input-8, 1589] 
split level 33: [/input-8, 1560] 
split level 34: [/input-8, 1381] 
split level 35: [/input-8, 1963] 
split level 36: [/input-8, 869] 
split level 37: [/input-8, 339] 
split level 38: [/input-8, 908] 
split level 39: [/input-8, 1561] 
split level 40: [/input-8, 2036] 
split level 41: [/input-8, 177] 
split level 42: [/input-8, 1210] 
split level 43: [/input-8, 738] 
split level 44: [/input-8, 1590] 
split level 45: [/input-8, 161] 
split level 46: [/input-8, 957] 
split level 47: [/input-8, 1324] 
split level 48: [/input-8, 1065] 
split level 49: [/input-8, 2037] 
split level 50: [/input-8, 1290] 
split level 51: [/input-8, 1515] 
split level 52: [/input-8, 758] 
split level 53: [/input-8, 36] 
split level 54: [/input-8, 424] 
split level 55: [/input-8, 298] 
split level 56: [/input-8, 179] 
split level 57: [/input-8, 1073] 
split level 58: [/input-8, 1962] 
split level 59: [/input-8, 1598] 
split level 60: [/input-8, 770] 
split level 61: [/input-8, 285] 
split level 62: [/input-8, 1674] 
split level 63: [/input-8, 1060] 
split level 64: [/input, 85] 
split level 65: [/input-8, 769] 
split level 66: [/input-8, 254] 
split level 67: [/input-8, 956] 
split level 68: [/input-8, 1332] 
split level 69: [/input-8, 2011] 
split level 70: [/input, 3497] 
split level 71: [/input, 3314] 
split level 72: [/input-8, 251] 
split level 73: [/input, 1381] 
split level 74: [/input-8, 1627] 
split level 75: [/input-8, 1941] 
split level 76: [/input, 2953] 
split level 77: [/input-8, 1688] 
split level 78: [/input-8, 466] 
split level 79: [/input-8, 37] 
split level 80: [/input-8, 995] 
split level 81: [/input, 1382] 
split level 82: [/input-8, 252] 
split level 83: [/input, 2919] 
split level 84: [/input-8, 997] 
split level 85: [/input-8, 1969] 
split level 86: [/input-8, 802] 
split level 87: [/input-8, 1035] 
split level 88: [/input, 3466] 
split level 89: [/input-8, 1081] 
split level 90: [/input, 906] 
split level 91: [/input-8, 245] 
split level 92: [/input, 2787] 
split level 93: [/input, 410] 
split level 94: [/input-8, 243] 
split level 95: [/input-8, 827] 
split level 96: [/input-8, 102] 
split level 97: [/input-8, 1162] 
split level 98: [/input-8, 244] 
split level 99: [/input-8, 773] 
split level 100: [/input, 2802] 
split level 101: [/input-8, 1232] 
split level 102: [/input-8, 1034] 
split level 103: [/input-8, 253] 
split level 104: [/input-8, 1656] 
split level 105: [/input-8, 159] 
split level 106: [/input-8, 281] 
split level 107: [/input-8, 1362] 
split level 108: [/input, 2804] 
split level 109: [/input-8, 169] 
split level 110: [/input-8, 435] 
split level 111: [/input, 2930] 
split level 112: [/input-8, 782] 
split level 113: [/input-8, 771] 
split level 114: [/input-8, 38] 
split level 115: [/input-8, 30] 
split level 116: [/input, 345] 
split level 117: [/input, 2931] 
split level 118: [/input-8, 255] 
split level 119: [/input-8, 246] 
split level 120: [/input, 1687] 
split level 121: [/input, 2954] 
split level 122: [/input, 3387] 
split level 123: [/input, 1013] 
split level 124: [/input-8, 972] 
split level 125: [/input, 857] 
split level 126: [/input, 2904] 
split level 127: [/input, 1406] 
split level 128: [/input-8, 144] 
split level 129: [/input-8, 1961] 
split level 130: [/input, 844] 
split level 131: [/input-8, 1601] 
split level 132: [/input-8, 820] 
split level 133: [/input-8, 1199] 
split level 134: [/input-8, 772] 
split level 135: [/input, 343] 
split level 136: [/input-8, 1968] 
split level 137: [/input-8, 1347] 
split level 138: [/input, 828] 
split level 139: [/input-8, 816] 
split level 140: [/input-8, 176] 
split level 141: [/input, 2028] 
split level 142: [/input, 1252] 
split level 143: [/input-8, 411] 
split level 144: [/input, 2788] 
split level 145: [/input-8, 160] 
split level 146: [/input, 2638] 
split level 147: [/input, 426] 
split level 148: [/input, 281] 
split level 149: [/input, 839] 
split level 150: [/input-8, 1225] 
split level 151: [/input, 104] 
split level 152: [/input, 1197] 
split level 153: [/input, 135] 
split level 154: [/input, 841] 
split level 155: [/input, 2871] 
split level 156: [/input, 2012] 
split level 157: [/input, 2637] 
split level 158: [/input, 2027] 
split level 159: [/input, 716] 
split level 160: [/input, 2013] 
split level 161: [/input, 2941] 
split level 162: [/input, 359] 
split level 163: [/input, 495] 
split level 164: [/input, 2344] 
split level 165: [/input, 2884] 
split level 166: [/input-8, 1787] 
split level 167: [/input, 1305] 
split level 168: [/input, 812] 
split level 169: [/input, 3496] 
split level 170: [/input, 732] 
split level 171: [/input, 791] 
split level 172: [/input, 921] 
split level 173: [/input-8, 801] 
split level 174: [/input-8, 963] 
split level 175: [/input, 838] 
split level 176: [/input, 837] 
split level 177: [/input, 3373] 
split level 178: [/input, 509] 
split level 179: [/input, 3528] 
split level 180: [/input, 789] 
split level 181: [/input, 792] 
split level 182: [/input, 811] 
split level 183: [/input, 3234] 
split level 184: [/input-8, 407] 
split level 185: [/input, 1521] 
split level 186: [/input, 1300] 
split level 187: [/input, 2089] 
split level 188: [/input, 325] 
split level 189: [/input-8, 71] 
split level 190: [/input, 2088] 
split level 191: [/input, 163] 
split level 192: [/input, 621] 
split level 193: [/input, 3197] 
split level 194: [/input, 938] 
split level 195: [/input, 2085] 
split level 196: [/input, 1317] 
split level 197: [/input, 2073] 
split level 198: [/input, 3093] 
split level 199: [/input, 2086] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03190040588378906
10 lb beta sum: 0.0, worst -0.03190350532531738
Time: prepare 0.0115    bound 0.0956    transfer 0.0007    finalize 0.0026    func 0.1130    
Accumulated time: func 0.2015    prepare 0.0215    bound 0.1836    transfer 0.0008    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.36970520) min lb tensor(-0.03189611)
Number of Verified Splits: 18 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.011350393295288086 
BICCOS Cumulative time: 0.011350393295288086
Preprocessing time: 0.009902477264404297 Inference time: 0.0010323524475097656 Add cuts time: 0.00025081634521484375 Cut analysis time: 0.0001647472381591797
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5144    set_bounds 0.0083    solve 0.1131    add 0.0098    
Accumulated time: pickout 0.0003    decision 0.5144    set_bounds 0.0083    solve 0.1131    add 0.0098    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 92] 
split level 6: [/input-8, 300] 
split level 7: [/input-8, 924] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.21456438302993774

all verified at 0th iter
Time: prepare 0.0050    bound 0.0040    transfer 0.0005    finalize 0.0013    func 0.0123    
Accumulated time: func 0.2139    prepare 0.0269    bound 0.1876    transfer 0.0013    finalize 0.0040    
all_split False
======================Cut inference begins======================
max lb tensor(0.40046239) min lb tensor(0.21456438)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.007196187973022461 
BICCOS Cumulative time: 0.018546581268310547
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0216    set_bounds 0.0200    solve 0.0124    add 0.0003    
Accumulated time: pickout 0.0007    decision 0.5360    set_bounds 0.0284    solve 0.1255    add 0.0101    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.8160769939422607


Properties batch 5, size 1
Remaining timeout: 196.71058630943298
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 196.71051669120789
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.71013379096985
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.71011209487915
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.2899 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.90199280, -44.40210342, -40.76707840, -43.34727097, -43.50157547,
         -44.47279358, -43.63641739, -44.64598465, -42.91106033, -44.25598907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [505]; unstable size 505; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 505] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 505] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 505] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 148] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.55335259, 0.12430668, 2.72152352, 3.00824618, 3.66845322, 2.93544960,
         3.93169498, 2.25763512, 3.53325510]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0433 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.65114021, -23.35434914, -17.16299438, -18.00729561, -16.22119331,
         -18.46559906, -16.77936554, -19.72109604, -21.88067436, -23.28927422]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 507, 1, 818] with unstable size 506 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 818] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [506]; unstable size 506; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 506] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 506] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.09171462,  3.97727156, -0.48304778,  0.36927646,  0.67224586,
         -1.08889973,  1.76183915,  2.47835517,  4.03331804]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.65114021, -23.35434914, -17.16299438, -18.00729561, -16.22119331,
         -18.46559906, -16.77936554, -19.72109604, -21.88067436, -23.28927422]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.54929352, -24.17858124, -17.99969864, -18.86230087, -17.29471970,
          -19.35946846, -17.28303909, -20.91881943, -22.74308395, -24.15728378],
         [-21.54929352, -24.17858124, -17.99969864, -18.86230087, -17.29471970,
          -19.35946846, -17.28303909, -20.91881943, -22.74308395, -24.15728378]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.70497894, -0.01168060]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0383 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.96131706, -20.58467484, -24.37945938, -24.98764610, -24.46944046,
         -25.62986183, -27.33307266, -24.34143448, -19.32966995, -19.06360817]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [585]; unstable size 585; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 585] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 585] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 203] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81747198,  0.87446904,  3.82560635,  4.56164408,  3.79659128,
          5.13660049,  6.65209579,  3.81942368, -1.01505280]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.96131706, -20.58467484, -24.37945938, -24.98764610, -24.46944046,
         -25.62986183, -27.33307266, -24.34143448, -19.32966995, -19.06360817]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.04928017, -20.95272827, -24.45425415, -25.08170509, -24.51628304,
          -25.76401329, -27.44613266, -24.56295776, -19.09752655, -19.62283516]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.52530861]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0493 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
         -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 234, 1, 650] with unstable size 233 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 650] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [233]; unstable size 233; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 233] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 233] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.41751862,  0.11600983,  0.06584835,  0.44963503, -0.42950153,
          0.86466193, -0.55640507,  0.24044466,  2.07411909]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
         -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.04it/s]100%|██████████| 1/1 [00:00<00:00,  9.03it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.86489582, -12.93333149, -13.34103966, -13.58108902, -12.91056156,
          -14.13509750, -12.40045166, -13.78853512, -15.49103832, -12.07455730],
         [-15.86489582, -12.93333149, -13.34103966, -13.58108902, -12.91056156,
          -14.13509750, -12.40045166, -13.78853512, -15.49103832, -12.07455730]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.83600426, 0.32589436]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1135 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.902813911437988
alpha/beta optimization time: 1.1943402290344238
initial alpha-crown bounds: tensor([[ 2.50665426,  0.15565354,  0.15051460,  0.50773668, -0.35287285,
          0.92790365, -0.47352791,  0.32139492,  2.15935707]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4735279083251953
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.631733417511
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.63169407844543
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.631662607193
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.63163995742798
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.6316213607788
Verifying property 4 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35287285]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
        -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35287285]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 899
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010275840759277344
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3528738021850586
10 lb beta sum: 0.0, worst -0.3528757095336914
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    func 0.0528    
Accumulated time: func 0.0528    prepare 0.0002    bound 0.0524    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 13] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 2] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 29] 
split level 8: [/input-12, 38] 
split level 9: [/input-12, 79] 
split level 10: [/input-12, 34] 
split level 11: [/input-12, 12] 
split level 12: [/input-8, 1690] 
split level 13: [/input-12, 64] 
split level 14: [/input-12, 55] 
split level 15: [/input-8, 923] 
split level 16: [/input-8, 913] 
split level 17: [/input-8, 820] 
split level 18: [/input-8, 1693] 
split level 19: [/input-8, 1674] 
split level 20: [/input-8, 915] 
split level 21: [/input-8, 1966] 
split level 22: [/input-8, 1698] 
split level 23: [/input-8, 1714] 
split level 24: [/input-8, 336] 
split level 25: [/input-8, 249] 
split level 26: [/input-8, 240] 
split level 27: [/input-8, 930] 
split level 28: [/input, 3571] 
split level 29: [/input-8, 1323] 
split level 30: [/input-8, 1705] 
split level 31: [/input-8, 1934] 
split level 32: [/input-8, 1718] 
split level 33: [/input-8, 1713] 
split level 34: [/input-8, 1932] 
split level 35: [/input-8, 742] 
split level 36: [/input-8, 1676] 
split level 37: [/input-8, 250] 
split level 38: [/input-8, 1406] 
split level 39: [/input-8, 916] 
split level 40: [/input-8, 1951] 
split level 41: [/input-8, 242] 
split level 42: [/input-8, 1040] 
split level 43: [/input, 3572] 
split level 44: [/input-8, 305] 
split level 45: [/input-8, 239] 
split level 46: [/input-8, 750] 
split level 47: [/input-8, 300] 
split level 48: [/input, 2836] 
split level 49: [/input-8, 1704] 
split level 50: [/input-8, 1483] 
split level 51: [/input-8, 757] 
split level 52: [/input-8, 186] 
split level 53: [/input-8, 55] 
split level 54: [/input, 2167] 
split level 55: [/input, 328] 
split level 56: [/input, 2013] 
split level 57: [/input-8, 41] 
split level 58: [/input, 647] 
split level 59: [/input, 648] 
split level 60: [/input-8, 254] 
split level 61: [/input-8, 1954] 
split level 62: [/input, 2403] 
split level 63: [/input, 291] 
split level 64: [/input, 2787] 
split level 65: [/input, 1019] 
split level 66: [/input, 2004] 
split level 67: [/input, 2425] 
split level 68: [/input, 3794] 
split level 69: [/input, 3418] 
split level 70: [/input, 2340] 
split level 71: [/input-8, 331] 
split level 72: [/input, 343] 
split level 73: [/input-8, 2003] 
split level 74: [/input-8, 1634] 
split level 75: [/input, 2392] 
split level 76: [/input, 2007] 
split level 77: [/input, 1556] 
split level 78: [/input, 2933] 
split level 79: [/input-8, 581] 
split level 80: [/input, 1015] 
split level 81: [/input, 1350] 
split level 82: [/input, 856] 
split level 83: [/input-8, 734] 
split level 84: [/input-8, 398] 
split level 85: [/input-8, 1325] 
split level 86: [/input-8, 723] 
split level 87: [/input, 487] 
split level 88: [/input-8, 487] 
split level 89: [/input, 1013] 
split level 90: [/input, 490] 
split level 91: [/input-8, 479] 
split level 92: [/input, 3433] 
split level 93: [/input, 2835] 
split level 94: [/input, 2137] 
split level 95: [/input, 2552] 
split level 96: [/input, 2021] 
split level 97: [/input, 2002] 
split level 98: [/input-8, 246] 
split level 99: [/input, 2752] 
split level 100: [/input, 1020] 
split level 101: [/input, 312] 
split level 102: [/input, 2020] 
split level 103: [/input, 2556] 
split level 104: [/input, 2199] 
split level 105: [/input, 2006] 
split level 106: [/input, 2375] 
split level 107: [/input, 2010] 
split level 108: [/input, 2457] 
split level 109: [/input-8, 47] 
split level 110: [/input, 2949] 
split level 111: [/input, 3738] 
split level 112: [/input, 3481] 
split level 113: [/input-8, 765] 
split level 114: [/input, 83] 
split level 115: [/input, 2284] 
split level 116: [/input-8, 132] 
split level 117: [/input, 2339] 
split level 118: [/input-8, 2001] 
split level 119: [/input-8, 1311] 
split level 120: [/input, 2008] 
split level 121: [/input-8, 1245] 
split level 122: [/input, 2003] 
split level 123: [/input-8, 1383] 
split level 124: [/input-8, 1403] 
split level 125: [/input, 3384] 
split level 126: [/input, 2300] 
split level 127: [/input, 2768] 
split level 128: [/input, 3280] 
split level 129: [/input, 2553] 
split level 130: [/input, 2357] 
split level 131: [/input-8, 1646] 
split level 132: [/input, 3419] 
split level 133: [/input, 2409] 
split level 134: [/input, 327] 
split level 135: [/input, 486] 
split level 136: [/input, 3563] 
split level 137: [/input-8, 238] 
split level 138: [/input, 427] 
split level 139: [/input, 3788] 
split level 140: [/input, 348] 
split level 141: [/input, 1973] 
split level 142: [/input-8, 1204] 
split level 143: [/input, 3452] 
split level 144: [/input, 65] 
split level 145: [/input, 1348] 
split level 146: [/input, 2281] 
split level 147: [/input, 733] 
split level 148: [/input, 2147] 
split level 149: [/input, 817] 
split level 150: [/input, 2395] 
split level 151: [/input, 3300] 
split level 152: [/input, 701] 
split level 153: [/input, 858] 
split level 154: [/input, 396] 
split level 155: [/input, 2180] 
split level 156: [/input, 2551] 
split level 157: [/input, 1138] 
split level 158: [/input, 2341] 
split level 159: [/input, 791] 
split level 160: [/input, 2385] 
split level 161: [/input, 645] 
split level 162: [/input, 3785] 
split level 163: [/input, 2204] 
split level 164: [/input, 1851] 
split level 165: [/input, 840] 
split level 166: [/input, 2558] 
split level 167: [/input, 2882] 
split level 168: [/input, 824] 
split level 169: [/input, 2878] 
split level 170: [/input, 2098] 
split level 171: [/input-8, 195] 
split level 172: [/input-8, 1589] 
split level 173: [/input, 2087] 
split level 174: [/input, 859] 
split level 175: [/input, 2901] 
split level 176: [/input, 739] 
split level 177: [/input-8, 495] 
split level 178: [/input, 3264] 
split level 179: [/input, 3279] 
split level 180: [/input, 2298] 
split level 181: [/input, 651] 
split level 182: [/input, 2400] 
split level 183: [/input, 813] 
split level 184: [/input, 2417] 
split level 185: [/input, 2472] 
split level 186: [/input, 2297] 
split level 187: [/input-8, 1385] 
split level 188: [/input, 68] 
split level 189: [/input, 2277] 
split level 190: [/input, 1003] 
split level 191: [/input, 3972] 
split level 192: [/input, 2291] 
split level 193: [/input, 1251] 
split level 194: [/input, 2840] 
split level 195: [/input, 2302] 
split level 196: [/input, 2469] 
split level 197: [/input, 2849] 
split level 198: [/input, 3096] 
split level 199: [/input, 2912] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3527388572692871
10 lb beta sum: 0.0, worst -0.35274744033813477
Time: prepare 0.0117    bound 0.0957    transfer 0.0014    finalize 0.0028    func 0.1142    
Accumulated time: func 0.1670    prepare 0.0217    bound 0.1481    transfer 0.0015    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.30284402) min lb tensor(-0.35273838)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 3.
#cuts 1-3: 3
#cuts >= 20: 0
BICCOS time: 0.010426521301269531 
BICCOS Cumulative time: 0.010426521301269531
Preprocessing time: 0.009996175765991211 Inference time: 0.00014710426330566406 Add cuts time: 6.0558319091796875e-05 Cut analysis time: 0.00022268295288085938
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.33612 (1), -0.33607 (1), -0.33556 (1), -0.33517 (1), -0.33515 (1), -0.33378 (1), -0.33347 (1), -0.33337 (1), -0.33114 (1), -0.33034 (1), -0.33017 (1), -0.33012 (1), -0.33011 (1), -0.32917 (1), -0.32909 (1), -0.32842 (1), -0.32840 (1), -0.32833 (1), -0.32716 (1), -0.32651 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5108    set_bounds 0.0088    solve 0.1143    add 0.0696    
Accumulated time: pickout 0.0003    decision 0.5108    set_bounds 0.0088    solve 0.1143    add 0.0696    
Current (lb-rhs): -0.3361210823059082
50 domains visited
Cumulative time: 0.7729341983795166

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 13] [/input-12, 13] [/input-12, 46] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] 
split level 1: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 46] [/input-12, 4] [/input-12, 46] [/input-12, 69] [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
split level 3: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 2] [/input-12, 90] [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2822890281677246
10 lb beta sum: 0.5416095852851868, worst -0.26552850008010864
Time: prepare 0.0072    bound 0.1163    transfer 0.0008    finalize 0.0025    func 0.1294    
Accumulated time: func 0.2965    prepare 0.0292    bound 0.2644    transfer 0.0023    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.22604370) min lb tensor(-0.26535755)
Number of Verified Splits: 54 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 10.
#cuts 1-3: 10
#cuts >= 20: 0
BICCOS time: 0.015697717666625977 
BICCOS Cumulative time: 0.026124238967895508
Preprocessing time: 0.011736631393432617 Inference time: 0.0022499561309814453 Add cuts time: 0.0013854503631591797 Cut analysis time: 0.0003256797790527344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11972 (2), -0.11905 (2), -0.11864 (2), -0.11680 (2), -0.11492 (2), -0.11385 (2), -0.11170 (2), -0.10985 (2), -0.10817 (2), -0.10378 (2), -0.10368 (2), -0.10298 (2), -0.10167 (2), -0.09754 (2), -0.09688 (2), -0.09684 (2), -0.09442 (2), -0.09118 (2), -0.09100 (2), -0.09087 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0130    solve 0.1295    add 0.0821    
Accumulated time: pickout 0.0014    decision 0.5304    set_bounds 0.0219    solve 0.2438    add 0.1518    
Current (lb-rhs): -0.11972105503082275
100 domains visited
Cumulative time: 1.0342464447021484

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 13] [/input-12, 69] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] [/input-12, 13] 
split level 1: [/input-12, 4] [/input-12, 69] [/input-12, 4] [/input-12, 69] [/input-12, 69] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 2: [/input-12, 2] [/input-12, 4] [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 2] [/input-12, 69] [/input-12, 69] [/input-12, 2] [/input-12, 4] 
split level 3: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 2] [/input-12, 90] [/input-12, 90] [/input-12, 2] [/input-12, 2] [/input-12, 90] [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08437299728393555
10 lb beta sum: 0.51341313123703, worst -0.017769813537597656
Time: prepare 0.0063    bound 0.1185    transfer 0.0010    finalize 0.0025    func 0.1309    
Accumulated time: func 0.4274    prepare 0.0357    bound 0.3829    transfer 0.0033    finalize 0.0079    
all_split False
======================Cut inference begins======================
max lb tensor(0.29270989) min lb tensor(-0.01509500)
Number of Verified Splits: 395 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03700518608093262 
BICCOS Cumulative time: 0.06312942504882812
Preprocessing time: 0.011441946029663086 Inference time: 0.01832270622253418 Add cuts time: 0.0070574283599853516 Cut analysis time: 0.00018310546875
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0156    solve 0.1310    add 0.0185    
Accumulated time: pickout 0.0025    decision 0.5499    set_bounds 0.0375    solve 0.3747    add 0.1703    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 13] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.2589249610900879

all verified at 0th iter
Time: prepare 0.0037    bound 0.0040    transfer 0.0008    finalize 0.0013    func 0.0114    
Accumulated time: func 0.4388    prepare 0.0398    bound 0.3869    transfer 0.0042    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.82320595) min lb tensor(0.25892496)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006264925003051758 
BICCOS Cumulative time: 0.06939435005187988
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0219    set_bounds 0.0170    solve 0.0115    add 0.0003    
Accumulated time: pickout 0.0028    decision 0.5719    set_bounds 0.0544    solve 0.3862    add 0.1705    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
100 domains visited
Cumulative time: 1.3182599544525146


Properties batch 5, size 1
Remaining timeout: 197.13351774215698
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.13344478607178
Verifying property 6 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47352791]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
        -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47352791]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 899
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.5367431640625e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4735279083251953
10 lb beta sum: 0.0, worst -0.4735379219055176
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    func 0.0525    
Accumulated time: func 0.0525    prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 29] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 13] 
split level 7: [/input-12, 2] 
split level 8: [/input-12, 46] 
split level 9: [/input-12, 12] 
split level 10: [/input-12, 58] 
split level 11: [/input-12, 90] 
split level 12: [/input-12, 69] 
split level 13: [/input-8, 1690] 
split level 14: [/input-8, 820] 
split level 15: [/input-8, 1966] 
split level 16: [/input-12, 79] 
split level 17: [/input-8, 1713] 
split level 18: [/input-12, 55] 
split level 19: [/input-8, 1693] 
split level 20: [/input-8, 1974] 
split level 21: [/input-8, 1676] 
split level 22: [/input-12, 6] 
split level 23: [/input-12, 34] 
split level 24: [/input-8, 1714] 
split level 25: [/input-8, 1698] 
split level 26: [/input-8, 1325] 
split level 27: [/input-8, 1718] 
split level 28: [/input-8, 1674] 
split level 29: [/input-8, 1687] 
split level 30: [/input-8, 1932] 
split level 31: [/input-8, 1951] 
split level 32: [/input-8, 1705] 
split level 33: [/input-8, 1704] 
split level 34: [/input-8, 601] 
split level 35: [/input-8, 1954] 
split level 36: [/input-8, 913] 
split level 37: [/input-8, 1323] 
split level 38: [/input-8, 923] 
split level 39: [/input, 2167] 
split level 40: [/input-8, 930] 
split level 41: [/input-8, 2003] 
split level 42: [/input-8, 1406] 
split level 43: [/input-8, 1934] 
split level 44: [/input-8, 588] 
split level 45: [/input, 2392] 
split level 46: [/input, 1350] 
split level 47: [/input-8, 621] 
split level 48: [/input-8, 750] 
split level 49: [/input, 2425] 
split level 50: [/input, 856] 
split level 51: [/input, 328] 
split level 52: [/input, 2137] 
split level 53: [/input-8, 1646] 
split level 54: [/input, 3433] 
split level 55: [/input, 872] 
split level 56: [/input, 3418] 
split level 57: [/input-8, 581] 
split level 58: [/input-8, 915] 
split level 59: [/input, 3571] 
split level 60: [/input, 3572] 
split level 61: [/input, 2199] 
split level 62: [/input, 1013] 
split level 63: [/input, 1661] 
split level 64: [/input-8, 595] 
split level 65: [/input-8, 742] 
split level 66: [/input, 2403] 
split level 67: [/input, 2552] 
split level 68: [/input-8, 336] 
split level 69: [/input-8, 1403] 
split level 70: [/input, 3452] 
split level 71: [/input-8, 331] 
split level 72: [/input, 3794] 
split level 73: [/input, 1020] 
split level 74: [/input, 857] 
split level 75: [/input-8, 1311] 
split level 76: [/input, 312] 
split level 77: [/input, 3419] 
split level 78: [/input, 3512] 
split level 79: [/input, 3384] 
split level 80: [/input-8, 757] 
split level 81: [/input-8, 1191] 
split level 82: [/input-8, 240] 
split level 83: [/input, 1019] 
split level 84: [/input-8, 879] 
split level 85: [/input, 2375] 
split level 86: [/input, 2004] 
split level 87: [/input, 2457] 
split level 88: [/input-8, 249] 
split level 89: [/input, 967] 
split level 90: [/input, 1348] 
split level 91: [/input, 2395] 
split level 92: [/input, 2340] 
split level 93: [/input, 2398] 
split level 94: [/input-8, 892] 
split level 95: [/input, 3496] 
split level 96: [/input, 2472] 
split level 97: [/input, 3785] 
split level 98: [/input, 348] 
split level 99: [/input-8, 250] 
split level 100: [/input, 2357] 
split level 101: [/input, 2204] 
split level 102: [/input, 2409] 
split level 103: [/input-8, 186] 
split level 104: [/input, 3563] 
split level 105: [/input, 2121] 
split level 106: [/input-8, 1720] 
split level 107: [/input, 2553] 
split level 108: [/input-8, 254] 
split level 109: [/input-8, 239] 
split level 110: [/input, 3788] 
split level 111: [/input, 2087] 
split level 112: [/input, 2327] 
split level 113: [/input, 2519] 
split level 114: [/input, 3278] 
split level 115: [/input, 2281] 
split level 116: [/input, 2275] 
split level 117: [/input, 858] 
split level 118: [/input, 1947] 
split level 119: [/input, 2284] 
split level 120: [/input, 2341] 
split level 121: [/input, 2836] 
split level 122: [/input, 2147] 
split level 123: [/input, 487] 
split level 124: [/input, 2020] 
split level 125: [/input, 824] 
split level 126: [/input, 2532] 
split level 127: [/input, 1466] 
split level 128: [/input, 2469] 
split level 129: [/input, 2949] 
split level 130: [/input, 2344] 
split level 131: [/input, 2558] 
split level 132: [/input, 2377] 
split level 133: [/input, 396] 
split level 134: [/input, 330] 
split level 135: [/input, 2933] 
split level 136: [/input, 951] 
split level 137: [/input, 327] 
split level 138: [/input, 3163] 
split level 139: [/input, 3804] 
split level 140: [/input, 2339] 
split level 141: [/input-8, 55] 
split level 142: [/input-8, 765] 
split level 143: [/input-8, 1634] 
split level 144: [/input, 840] 
split level 145: [/input, 2277] 
split level 146: [/input, 2007] 
split level 147: [/input, 486] 
split level 148: [/input, 2397] 
split level 149: [/input, 1901] 
split level 150: [/input, 1946] 
split level 151: [/input, 2180] 
split level 152: [/input, 2006] 
split level 153: [/input, 2473] 
split level 154: [/input, 1948] 
split level 155: [/input, 952] 
split level 156: [/input, 2300] 
split level 157: [/input, 3738] 
split level 158: [/input-8, 1285] 
split level 159: [/input, 859] 
split level 160: [/input, 2486] 
split level 161: [/input, 2298] 
split level 162: [/input, 739] 
split level 163: [/input-8, 479] 
split level 164: [/input, 1945] 
split level 165: [/input, 1902] 
split level 166: [/input, 2466] 
split level 167: [/input-8, 894] 
split level 168: [/input, 83] 
split level 169: [/input, 733] 
split level 170: [/input, 2122] 
split level 171: [/input, 2835] 
split level 172: [/input, 2291] 
split level 173: [/input, 2003] 
split level 174: [/input, 2302] 
split level 175: [/input-8, 1612] 
split level 176: [/input, 418] 
split level 177: [/input, 2211] 
split level 178: [/input-8, 246] 
split level 179: [/input, 3336] 
split level 180: [/input, 721] 
split level 181: [/input-8, 579] 
split level 182: [/input, 1894] 
split level 183: [/input-8, 495] 
split level 184: [/input, 3554] 
split level 185: [/input, 3279] 
split level 186: [/input, 2297] 
split level 187: [/input, 1893] 
split level 188: [/input, 3259] 
split level 189: [/input, 2008] 
split level 190: [/input, 2551] 
split level 191: [/input-8, 1924] 
split level 192: [/input, 2190] 
split level 193: [/input, 2098] 
split level 194: [/input, 2252] 
split level 195: [/input, 1958] 
split level 196: [/input, 2508] 
split level 197: [/input, 2501] 
split level 198: [/input, 2627] 
split level 199: [/input, 1895] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.47341489791870117
10 lb beta sum: 0.0, worst -0.47342395782470703
Time: prepare 0.0115    bound 0.0961    transfer 0.0007    finalize 0.0025    func 0.1134    
Accumulated time: func 0.1659    prepare 0.0214    bound 0.1482    transfer 0.0008    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.43399239) min lb tensor(-0.47341490)
Number of Verified Splits: 5 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.01037144660949707 
BICCOS Cumulative time: 0.01037144660949707
Preprocessing time: 0.009850740432739258 Inference time: 0.0002124309539794922 Add cuts time: 7.700920104980469e-05 Cut analysis time: 0.00023126602172851562
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.45865 (1), -0.45846 (1), -0.45832 (1), -0.45812 (1), -0.45785 (1), -0.45761 (1), -0.45733 (1), -0.45583 (1), -0.45583 (1), -0.45566 (1), -0.45555 (1), -0.45477 (1), -0.45426 (1), -0.45221 (1), -0.45212 (1), -0.45116 (1), -0.44992 (1), -0.44945 (1), -0.44744 (1), -0.44692 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5111    set_bounds 0.0084    solve 0.1135    add 0.0694    
Accumulated time: pickout 0.0003    decision 0.5111    set_bounds 0.0084    solve 0.1135    add 0.0694    
Current (lb-rhs): -0.458648681640625
50 domains visited
Cumulative time: 0.7702512741088867

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-12, 38] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] 
split level 2: [/input-12, 4] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 4] [/input-12, 4] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 3: [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 2] [/input-12, 4] [/input-12, 2] [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.4106006622314453
10 lb beta sum: 1.046152949333191, worst -0.39881110191345215
Time: prepare 0.0072    bound 0.1163    transfer 0.0007    finalize 0.0024    func 0.1291    
Accumulated time: func 0.2950    prepare 0.0288    bound 0.2644    transfer 0.0015    finalize 0.0050    
all_split False
======================Cut inference begins======================
max lb tensor(0.28392535) min lb tensor(-0.39856255)
Number of Verified Splits: 107 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.017859220504760742 
BICCOS Cumulative time: 0.028230667114257812
Preprocessing time: 0.011528491973876953 Inference time: 0.0041124820709228516 Add cuts time: 0.0018956661224365234 Cut analysis time: 0.00032258033752441406
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.20267 (2), -0.20267 (2), -0.20265 (2), -0.20169 (2), -0.19615 (2), -0.19583 (2), -0.19505 (2), -0.19374 (2), -0.19327 (2), -0.18703 (2), -0.18630 (2), -0.18154 (2), -0.18105 (2), -0.17890 (2), -0.17831 (2), -0.17828 (2), -0.17759 (2), -0.17728 (2), -0.17629 (2), -0.17228 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0194    set_bounds 0.0132    solve 0.1292    add 0.0843    
Accumulated time: pickout 0.0014    decision 0.5305    set_bounds 0.0216    solve 0.2427    add 0.1537    
Current (lb-rhs): -0.2026735544204712
100 domains visited
Cumulative time: 1.0355525016784668

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 38] [/input-12, 0] [/input-12, 0] [/input-12, 0] 
split level 2: [/input-12, 4] [/input-12, 4] [/input-12, 38] [/input-12, 38] [/input-12, 13] [/input-12, 13] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 13] 
split level 3: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21434736251831055
10 lb beta sum: 1.212538242340088, worst -0.20120692253112793
Time: prepare 0.0064    bound 0.1174    transfer 0.0007    finalize 0.0020    func 0.1293    
Accumulated time: func 0.4243    prepare 0.0355    bound 0.3819    transfer 0.0022    finalize 0.0071    
all_split False
======================Cut inference begins======================
max lb tensor(0.36011446) min lb tensor(-0.19960821)
Number of Verified Splits: 228 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 10
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.026987791061401367 
BICCOS Cumulative time: 0.05521845817565918
Preprocessing time: 0.011567354202270508 Inference time: 0.010630130767822266 Add cuts time: 0.004374504089355469 Cut analysis time: 0.000415802001953125
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12969 (3), -0.12718 (3), -0.12715 (3), -0.12033 (3), -0.12027 (3), -0.11952 (3), -0.11462 (3), -0.11456 (3), -0.10395 (3), -0.10367 (3), -0.10366 (3), -0.10349 (3), -0.09986 (3), -0.09981 (3), -0.09956 (3), -0.09295 (3), -0.09294 (3), -0.08355 (3), -0.08336 (3), -0.08140 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0158    solve 0.1294    add 0.1010    
Accumulated time: pickout 0.0024    decision 0.5500    set_bounds 0.0374    solve 0.3720    add 0.2547    
Current (lb-rhs): -0.1296868920326233
150 domains visited
Cumulative time: 1.3294486999511719

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 0] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 64] [/input-12, 0] [/input-12, 0] [/input-12, 0] 
split level 2: [/input-12, 4] [/input-12, 2] [/input-12, 4] [/input-12, 13] [/input-12, 2] [/input-12, 4] [/input-12, 4] [/input-12, 13] [/input-12, 4] [/input-12, 4] 
split level 3: [/input-12, 13] [/input-12, 90] [/input-12, 90] [/input-12, 2] [/input-12, 90] [/input-12, 13] [/input-12, 13] [/input-12, 2] [/input-12, 13] [/input-12, 13] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1801767349243164
10 lb beta sum: 1.6400753259658813, worst -0.09964162111282349
Time: prepare 0.0065    bound 0.1309    transfer 0.0007    finalize 0.0020    func 0.1428    
Accumulated time: func 0.5671    prepare 0.0422    bound 0.5128    transfer 0.0029    finalize 0.0091    
all_split False
======================Cut inference begins======================
max lb tensor(0.48241323) min lb tensor(-0.09790385)
Number of Verified Splits: 361 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 20.
#cuts 1-3: 17
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.039359331130981445 
BICCOS Cumulative time: 0.09457778930664062
Preprocessing time: 0.011336803436279297 Inference time: 0.017868757247924805 Add cuts time: 0.009618759155273438 Cut analysis time: 0.0005350112915039062
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0158    solve 0.1429    add 0.1639    
Accumulated time: pickout 0.0034    decision 0.5692    set_bounds 0.0533    solve 0.5149    add 0.4186    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 38] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 13] 
split level 5: [/input-12, 2] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.039788246154785156
10 lb beta sum: 0.033141523599624634, worst -0.004769504070281982
Time: prepare 0.0037    bound 0.1318    transfer 0.0005    finalize 0.0013    func 0.1390    
Accumulated time: func 0.7061    prepare 0.0464    bound 0.6445    transfer 0.0034    finalize 0.0103    
all_split False
======================Cut inference begins======================
max lb tensor(0.65986013) min lb tensor(-0.00449437)
Number of Verified Splits: 255 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.27756500244140625
10 lb beta sum: 1.5944690704345703, worst -0.0951237678527832
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 28.
#cuts 1-3: 18
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.2665863037109375 
BICCOS Cumulative time: 0.3611640930175781
Preprocessing time: 0.007590532302856445 Inference time: 0.2534022331237793 Add cuts time: 0.004848480224609375 Cut analysis time: 0.0007450580596923828
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00449 (8), 
Length of domains: 1
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0166    solve 0.1391    add 0.0006    
Accumulated time: pickout 0.0038    decision 0.5918    set_bounds 0.0699    solve 0.6540    add 0.4193    
Current (lb-rhs): -0.004494369029998779
151 domains visited
Cumulative time: 2.1643669605255127

BaB round 2
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 69] 
split level 2: [/input-8, 1966] 
split level 3: [/input-12, 79] 
split level 4: [/input-8, 1693] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 34] 
split level 7: [/input-8, 1698] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.04598093032836914

all verified at 0th iter
Time: prepare 0.0051    bound 0.0061    transfer 0.0005    finalize 0.0012    func 0.0145    
Accumulated time: func 0.7206    prepare 0.0519    bound 0.6506    transfer 0.0039    finalize 0.0115    
all_split False
======================Cut inference begins======================
max lb tensor(0.18693352) min lb tensor(0.04598093)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 28.
#cuts 1-3: 18
#cuts 4-6: 10
#cuts >= 20: 0
BICCOS time: 0.007407665252685547 
BICCOS Cumulative time: 0.36857175827026367
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0008    decision 0.0221    set_bounds 0.0253    solve 0.0145    add 0.0003    
Accumulated time: pickout 0.0046    decision 0.6138    set_bounds 0.0952    solve 0.6685    add 0.4196    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
151 domains visited
Cumulative time: 2.236278772354126


Properties batch 7, size 1
Remaining timeout: 194.75350737571716
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 194.7531282901764
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 5.2469 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.58661270, -19.23237419, -17.80228806, -19.64345360, -18.73787880,
         -20.88980293, -20.24271202, -20.68834686, -12.61566162, -18.87177277]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 600] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 600] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 197] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94333220, 5.41133118, 3.87400532, 5.60846567, 4.71441984, 6.68207455,
         6.00083208, 6.36807251, 5.18235588]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0476 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
         -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1008]; unstable size 1008; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 327, 1, 1008] with unstable size 326 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 1008] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1008] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [326]; unstable size 326; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 326] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 326] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10357308,  2.68191624, -0.13346767, -0.21289086, -0.43652654,
          0.26639247,  0.25994730,  0.99712288,  1.33664036]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
         -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.90619469, -26.33676720, -23.54781151, -23.44444466, -23.36634827,
          -24.09861946, -24.28264427, -25.14246368, -22.15742874, -24.83438683],
         [-22.90619469, -26.33676720, -23.54781151, -23.44444466, -23.36634827,
          -24.09861946, -24.28264427, -25.14246368, -22.15742874, -24.83438683]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.74876595, 1.39038277, 1.28701591, 1.20891953]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1132 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.630868911743164
alpha/beta optimization time: 1.1936759948730469
initial alpha-crown bounds: tensor([[-0.02824807,  2.79288340, -0.02321959, -0.12002301, -0.32431364,
          0.37612700,  0.35790348,  1.15994906,  1.43981028]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.3243136405944824
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65673065185547
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02824807]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02824807]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.894371032714844e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 32] 
split level 1: [/input-12, 69] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 89] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.31632494926452637

all verified at 0th iter
Time: prepare 0.0019    bound 0.0041    transfer 0.0009    finalize 0.0015    func 0.0100    
Accumulated time: func 0.0100    prepare 0.0023    bound 0.0041    transfer 0.0009    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.71870476) min lb tensor(0.31632495)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006773710250854492 
BICCOS Cumulative time: 0.006773710250854492
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0162    solve 0.0101    add 0.0003    
Accumulated time: pickout 0.0004    decision 0.0221    set_bounds 0.0162    solve 0.0101    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06079697608947754


Properties batch 1, size 1
Remaining timeout: 198.4403636455536
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.44012641906738
Verifying property 2 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02321959]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02321959]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.34600830078125e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 32] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.4817929267883301

all verified at 0th iter
Time: prepare 0.0018    bound 0.0041    transfer 0.0005    finalize 0.0015    func 0.0095    
Accumulated time: func 0.0095    prepare 0.0022    bound 0.0041    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.96772480) min lb tensor(0.48179293)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006597757339477539 
BICCOS Cumulative time: 0.006597757339477539
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0220    set_bounds 0.0164    solve 0.0096    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0220    set_bounds 0.0164    solve 0.0096    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05958056449890137


Properties batch 3, size 1
Remaining timeout: 198.25132870674133
Verifying property 3 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12002301]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12002301]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.560585021972656e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 46] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.15815353393554688

all verified at 0th iter
Time: prepare 0.0018    bound 0.0040    transfer 0.0005    finalize 0.0015    func 0.0096    
Accumulated time: func 0.0096    prepare 0.0022    bound 0.0040    transfer 0.0005    finalize 0.0015    
all_split False
======================Cut inference begins======================
max lb tensor(0.53730083) min lb tensor(0.15815353)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006611824035644531 
BICCOS Cumulative time: 0.006611824035644531
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0218    set_bounds 0.0162    solve 0.0097    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0218    set_bounds 0.0162    solve 0.0097    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05951404571533203


Properties batch 4, size 1
Remaining timeout: 198.06005334854126
Verifying property 4 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32431364]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32431364]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is more than 2, disable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.393692016601562e-05
======================Cut verification ends======================
BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 2] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 79] 
split level 7: [/input-12, 67] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08636927604675293

all verified at 0th iter
Time: prepare 0.0018    bound 0.0043    transfer 0.0005    finalize 0.0014    func 0.0098    
Accumulated time: func 0.0098    prepare 0.0022    bound 0.0043    transfer 0.0005    finalize 0.0014    
all_split False
======================Cut inference begins======================
max lb tensor(0.48291469) min lb tensor(0.08636928)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.006654024124145508 
BICCOS Cumulative time: 0.006654024124145508
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0161    solve 0.0098    add 0.0003    
Accumulated time: pickout 0.0003    decision 0.0225    set_bounds 0.0161    solve 0.0098    add 0.0003    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.060517072677612305


Properties batch 5, size 1
Remaining timeout: 197.85776829719543
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 197.85749173164368
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 197.8574583530426
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 197.85743689537048
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 2.1426 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.53459740, -20.49768829, -16.34491158, -18.79847145, -17.40628815,
         -19.14499092, -17.82529068, -20.38037872, -18.29029465, -19.59790993]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 480] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 480] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 238] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.72171772,  2.40926933,  1.62155747,  0.22273870,  1.79393625,
          0.73343140,  2.65353632,  0.41378742,  1.72563362]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.53459740, -20.49768829, -16.34491158, -18.79847145, -17.40628815,
         -19.14499092, -17.82529068, -20.38037872, -18.29029465, -19.59790993]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.48986244, -20.62852478, -16.81181908, -19.12182999, -17.79186821,
          -19.52043343, -18.19032669, -20.78457069, -18.32118225, -19.74188423]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.32195663]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0056 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0582 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
         -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [516]; unstable size 516; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 516] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 516] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 516] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 215] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.92542040,  3.79097652, -0.20490730,  0.89167643,  1.22881341,
         -0.10279608,  2.61780810,  4.21574497,  3.57154155]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
         -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.14539337, -17.81489372, -12.46373749, -14.03906250, -12.16037464,
          -14.42084599, -13.10583210, -15.64711285, -18.06120491, -17.03760910],
         [-15.14539337, -17.81489372, -12.46373749, -14.03906250, -12.16037464,
          -14.42084599, -13.10583210, -15.64711285, -18.06120491, -17.03760910]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.30336285, 0.94545746]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1150 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.44194793701172
alpha/beta optimization time: 1.1922001838684082
initial alpha-crown bounds: tensor([[ 1.97218442,  3.86037183, -0.17338049,  0.95068473,  1.30200791,
         -0.04648709,  2.66390991,  4.29102325,  3.62163186]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.17338049411773682
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.63971972465515
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.63968086242676
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.63965511322021
Verifying property 2 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17338049]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
        -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17338049]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 516
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 211
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 750
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010132789611816406
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17337989807128906
10 lb beta sum: 0.0, worst -0.17338252067565918
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    func 0.0533    
Accumulated time: func 0.0533    prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 18] 
split level 6: [/input-12, 49] 
split level 7: [/input-8, 1962] 
split level 8: [/input-12, 15] 
split level 9: [/input-12, 38] 
split level 10: [/input-12, 7] 
split level 11: [/input-8, 1717] 
split level 12: [/input-8, 1947] 
split level 13: [/input-8, 579] 
split level 14: [/input-8, 1710] 
split level 15: [/input-8, 1691] 
split level 16: [/input-8, 478] 
split level 17: [/input-8, 1698] 
split level 18: [/input-8, 467] 
split level 19: [/input-8, 476] 
split level 20: [/input-8, 1701] 
split level 21: [/input-8, 1954] 
split level 22: [/input-8, 1500] 
split level 23: [/input-8, 1634] 
split level 24: [/input-8, 109] 
split level 25: [/input-12, 57] 
split level 26: [/input-8, 438] 
split level 27: [/input-8, 723] 
split level 28: [/input-8, 1964] 
split level 29: [/input-8, 452] 
split level 30: [/input-8, 1617] 
split level 31: [/input, 3253] 
split level 32: [/input-8, 1702] 
split level 33: [/input-8, 1356] 
split level 34: [/input-8, 420] 
split level 35: [/input-8, 430] 
split level 36: [/input-8, 486] 
split level 37: [/input-8, 1970] 
split level 38: [/input-8, 1298] 
split level 39: [/input-8, 227] 
split level 40: [/input-8, 733] 
split level 41: [/input-8, 900] 
split level 42: [/input-8, 84] 
split level 43: [/input-8, 1035] 
split level 44: [/input, 3254] 
split level 45: [/input-8, 429] 
split level 46: [/input-8, 1372] 
split level 47: [/input-8, 1485] 
split level 48: [/input-8, 1357] 
split level 49: [/input-8, 1605] 
split level 50: [/input-8, 91] 
split level 51: [/input-8, 630] 
split level 52: [/input-8, 898] 
split level 53: [/input-8, 923] 
split level 54: [/input-8, 174] 
split level 55: [/input-8, 584] 
split level 56: [/input-8, 1609] 
split level 57: [/input, 3067] 
split level 58: [/input-8, 450] 
split level 59: [/input-8, 280] 
split level 60: [/input, 235] 
split level 61: [/input, 2756] 
split level 62: [/input-8, 2004] 
split level 63: [/input-8, 1771] 
split level 64: [/input-8, 145] 
split level 65: [/input-8, 1355] 
split level 66: [/input, 636] 
split level 67: [/input-8, 406] 
split level 68: [/input-8, 794] 
split level 69: [/input, 1652] 
split level 70: [/input-8, 717] 
split level 71: [/input, 2266] 
split level 72: [/input, 2722] 
split level 73: [/input, 362] 
split level 74: [/input, 2987] 
split level 75: [/input-8, 1237] 
split level 76: [/input, 3382] 
split level 77: [/input-8, 1782] 
split level 78: [/input, 3506] 
split level 79: [/input, 2537] 
split level 80: [/input-8, 1549] 
split level 81: [/input-8, 1248] 
split level 82: [/input, 3492] 
split level 83: [/input, 3543] 
split level 84: [/input, 360] 
split level 85: [/input, 1463] 
split level 86: [/input, 1491] 
split level 87: [/input, 3478] 
split level 88: [/input, 2229] 
split level 89: [/input, 2482] 
split level 90: [/input-8, 747] 
split level 91: [/input-8, 189] 
split level 92: [/input, 364] 
split level 93: [/input, 234] 
split level 94: [/input, 1175] 
split level 95: [/input, 2759] 
split level 96: [/input, 2214] 
split level 97: [/input-8, 1026] 
split level 98: [/input, 3526] 
split level 99: [/input-8, 1635] 
split level 100: [/input-8, 432] 
split level 101: [/input, 3442] 
split level 102: [/input, 2199] 
split level 103: [/input, 2523] 
split level 104: [/input, 1483] 
split level 105: [/input, 940] 
split level 106: [/input, 594] 
split level 107: [/input, 1337] 
split level 108: [/input, 2476] 
split level 109: [/input, 2248] 
split level 110: [/input-8, 1387] 
split level 111: [/input, 596] 
split level 112: [/input-8, 1601] 
split level 113: [/input-8, 187] 
split level 114: [/input-8, 346] 
split level 115: [/input, 1129] 
split level 116: [/input-8, 80] 
split level 117: [/input, 2284] 
split level 118: [/input, 2247] 
split level 119: [/input, 2263] 
split level 120: [/input-8, 1825] 
split level 121: [/input, 3485] 
split level 122: [/input, 3892] 
split level 123: [/input, 3490] 
split level 124: [/input, 2226] 
split level 125: [/input, 2241] 
split level 126: [/input-8, 1380] 
split level 127: [/input, 198] 
split level 128: [/input, 2556] 
split level 129: [/input, 2774] 
split level 130: [/input-8, 981] 
split level 131: [/input, 3863] 
split level 132: [/input-8, 434] 
split level 133: [/input, 2539] 
split level 134: [/input, 1942] 
split level 135: [/input, 707] 
split level 136: [/input, 1144] 
split level 137: [/input, 2485] 
split level 138: [/input-8, 378] 
split level 139: [/input, 1112] 
split level 140: [/input, 1218] 
split level 141: [/input, 366] 
split level 142: [/input, 196] 
split level 143: [/input, 2180] 
split level 144: [/input, 1494] 
split level 145: [/input, 3910] 
split level 146: [/input, 2233] 
split level 147: [/input, 413] 
split level 148: [/input-8, 1534] 
split level 149: [/input, 2787] 
split level 150: [/input, 2441] 
split level 151: [/input, 2598] 
split level 152: [/input-8, 158] 
split level 153: [/input, 3890] 
split level 154: [/input, 1544] 
split level 155: [/input, 1669] 
split level 156: [/input, 2540] 
split level 157: [/input, 183] 
split level 158: [/input-8, 10] 
split level 159: [/input, 2007] 
split level 160: [/input, 2766] 
split level 161: [/input-8, 73] 
split level 162: [/input, 218] 
split level 163: [/input, 3093] 
split level 164: [/input-8, 1824] 
split level 165: [/input, 2451] 
split level 166: [/input, 2513] 
split level 167: [/input-12, 92] 
split level 168: [/input-8, 1682] 
split level 169: [/input, 877] 
split level 170: [/input, 3021] 
split level 171: [/input-8, 1672] 
split level 172: [/input-8, 1218] 
split level 173: [/input, 156] 
split level 174: [/input-8, 1995] 
split level 175: [/input-8, 440] 
split level 176: [/input-8, 1735] 
split level 177: [/input, 190] 
split level 178: [/input, 2929] 
split level 179: [/input, 546] 
split level 180: [/input, 862] 
split level 181: [/input, 1014] 
split level 182: [/input, 2910] 
split level 183: [/input, 2298] 
split level 184: [/input, 2668] 
split level 185: [/input-8, 1033] 
split level 186: [/input, 1235] 
split level 187: [/input, 2330] 
split level 188: [/input, 3437] 
split level 189: [/input, 2878] 
split level 190: [/input, 982] 
split level 191: [/input, 2478] 
split level 192: [/input, 3582] 
split level 193: [/input, 2548] 
split level 194: [/input, 2784] 
split level 195: [/input-8, 1379] 
split level 196: [/input, 846] 
split level 197: [/input, 1495] 
split level 198: [/input, 3335] 
split level 199: [/input-8, 362] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1733386516571045
10 lb beta sum: 0.0, worst -0.17332041263580322
Time: prepare 0.0115    bound 0.0975    transfer 0.0014    finalize 0.0029    func 0.1159    
Accumulated time: func 0.1692    prepare 0.0217    bound 0.1503    transfer 0.0015    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.01897466) min lb tensor(-0.17331719)
Number of Verified Splits: 2 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.010709762573242188 
BICCOS Cumulative time: 0.010709762573242188
Preprocessing time: 0.009930133819580078 Inference time: 0.00011205673217773438 Add cuts time: 5.078315734863281e-05 Cut analysis time: 0.0006167888641357422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.16247 (1), -0.16234 (1), -0.16214 (1), -0.16177 (1), -0.16122 (1), -0.16119 (1), -0.16109 (1), -0.16096 (1), -0.16011 (1), -0.15969 (1), -0.15933 (1), -0.15929 (1), -0.15787 (1), -0.15781 (1), -0.15772 (1), -0.15751 (1), -0.15749 (1), -0.15742 (1), -0.15736 (1), -0.15694 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5136    set_bounds 0.0089    solve 0.1159    add 0.0715    
Accumulated time: pickout 0.0004    decision 0.5136    set_bounds 0.0089    solve 0.1159    add 0.0715    
Current (lb-rhs): -0.16247451305389404
50 domains visited
Cumulative time: 0.7793800830841064

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 78] [/input-12, 53] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 53] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 1: [/input-12, 53] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 53] [/input-12, 53] [/input-12, 6] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
split level 2: [/input-12, 6] [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 6] [/input-12, 6] [/input-12, 69] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 3: [/input-12, 69] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 69] [/input-12, 69] [/input-12, 49] [/input-12, 49] [/input-12, 49] [/input-12, 69] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14616000652313232
10 lb beta sum: 0.34676826000213623, worst -0.1457691192626953
Time: prepare 0.0070    bound 0.1169    transfer 0.0007    finalize 0.0020    func 0.1293    
Accumulated time: func 0.2984    prepare 0.0290    bound 0.2672    transfer 0.0022    finalize 0.0051    
all_split False
======================Cut inference begins======================
max lb tensor(0.11064565) min lb tensor(-0.14573121)
Number of Verified Splits: 89 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.017174482345581055 
BICCOS Cumulative time: 0.027884244918823242
Preprocessing time: 0.011685371398925781 Inference time: 0.0033745765686035156 Add cuts time: 0.0019364356994628906 Cut analysis time: 0.0001780986785888672
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0195    set_bounds 0.0128    solve 0.1293    add 0.0152    
Accumulated time: pickout 0.0014    decision 0.5330    set_bounds 0.0217    solve 0.2453    add 0.0867    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 18] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 38] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.11714625358581543

all verified at 0th iter
Time: prepare 0.0036    bound 0.0040    transfer 0.0008    finalize 0.0013    func 0.0115    
Accumulated time: func 0.3099    prepare 0.0330    bound 0.2712    transfer 0.0030    finalize 0.0064    
all_split False
======================Cut inference begins======================
max lb tensor(0.34438622) min lb tensor(0.11714625)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006254673004150391 
BICCOS Cumulative time: 0.03413891792297363
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0219    set_bounds 0.0164    solve 0.0115    add 0.0003    
Accumulated time: pickout 0.0018    decision 0.5550    set_bounds 0.0381    solve 0.2568    add 0.0869    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 1.0342800617218018


Properties batch 3, size 1
Remaining timeout: 197.4341049194336
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 197.4340317249298
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 197.43400883674622
Verifying property 5 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04648709]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
        -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04648709]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 516
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 211
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 750
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.775161743164062e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04648527503013611
10 lb beta sum: 0.0, worst -0.04648792743682861
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    func 0.0526    
Accumulated time: func 0.0526    prepare 0.0002    bound 0.0521    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 49] 
split level 1: [/input-12, 42] 
split level 2: [/input-12, 18] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 38] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 6] 
split level 8: [/input-12, 12] 
split level 9: [/input-8, 584] 
split level 10: [/input-12, 57] 
split level 11: [/input-8, 1068] 
split level 12: [/input-8, 1698] 
split level 13: [/input-8, 227] 
split level 14: [/input-8, 478] 
split level 15: [/input-8, 1053] 
split level 16: [/input-8, 1035] 
split level 17: [/input-8, 1069] 
split level 18: [/input-8, 467] 
split level 19: [/input-8, 1041] 
split level 20: [/input-8, 630] 
split level 21: [/input, 3442] 
split level 22: [/input, 2891] 
split level 23: [/input-8, 1742] 
split level 24: [/input-8, 822] 
split level 25: [/input-8, 476] 
split level 26: [/input-8, 109] 
split level 27: [/input-8, 1691] 
split level 28: [/input-8, 909] 
split level 29: [/input-8, 452] 
split level 30: [/input, 2923] 
split level 31: [/input-8, 486] 
split level 32: [/input-8, 379] 
split level 33: [/input-8, 1714] 
split level 34: [/input-8, 1682] 
split level 35: [/input-8, 1485] 
split level 36: [/input, 373] 
split level 37: [/input-8, 1771] 
split level 38: [/input-8, 280] 
split level 39: [/input-8, 1995] 
split level 40: [/input-8, 900] 
split level 41: [/input-8, 1964] 
split level 42: [/input, 2513] 
split level 43: [/input-8, 2004] 
split level 44: [/input-8, 80] 
split level 45: [/input, 636] 
split level 46: [/input-8, 1701] 
split level 47: [/input, 1942] 
split level 48: [/input-8, 73] 
split level 49: [/input, 898] 
split level 50: [/input, 3485] 
split level 51: [/input-8, 1702] 
split level 52: [/input-8, 1161] 
split level 53: [/input, 1494] 
split level 54: [/input-8, 411] 
split level 55: [/input, 1463] 
split level 56: [/input-8, 450] 
split level 57: [/input-8, 1357] 
split level 58: [/input, 2241] 
split level 59: [/input-8, 1298] 
split level 60: [/input, 414] 
split level 61: [/input-8, 1970] 
split level 62: [/input, 1511] 
split level 63: [/input, 1927] 
split level 64: [/input, 2900] 
split level 65: [/input, 2987] 
split level 66: [/input, 169] 
split level 67: [/input-8, 1617] 
split level 68: [/input-8, 372] 
split level 69: [/input, 2759] 
split level 70: [/input-8, 1710] 
split level 71: [/input, 2117] 
split level 72: [/input-8, 1355] 
split level 73: [/input, 940] 
split level 74: [/input-8, 1782] 
split level 75: [/input-8, 579] 
split level 76: [/input, 1337] 
split level 77: [/input, 2917] 
split level 78: [/input, 1495] 
split level 79: [/input, 2405] 
split level 80: [/input, 2936] 
split level 81: [/input, 2266] 
split level 82: [/input, 2548] 
split level 83: [/input, 2162] 
split level 84: [/input-8, 1988] 
split level 85: [/input, 2910] 
split level 86: [/input, 362] 
split level 87: [/input, 218] 
split level 88: [/input-8, 1757] 
split level 89: [/input, 364] 
split level 90: [/input, 2909] 
split level 91: [/input, 413] 
split level 92: [/input-8, 1062] 
split level 93: [/input-8, 1668] 
split level 94: [/input-8, 1605] 
split level 95: [/input, 956] 
split level 96: [/input, 198] 
split level 97: [/input-8, 1051] 
split level 98: [/input-8, 72] 
split level 99: [/input-8, 1731] 
split level 100: [/input-8, 1609] 
split level 101: [/input, 915] 
split level 102: [/input-8, 1634] 
split level 103: [/input, 2482] 
split level 104: [/input, 75] 
split level 105: [/input, 1452] 
split level 106: [/input, 2263] 
split level 107: [/input, 555] 
split level 108: [/input, 3254] 
split level 109: [/input, 2774] 
split level 110: [/input, 137] 
split level 111: [/input, 3548] 
split level 112: [/input, 901] 
split level 113: [/input, 2180] 
split level 114: [/input-8, 420] 
split level 115: [/input, 217] 
split level 116: [/input, 86] 
split level 117: [/input, 1432] 
split level 118: [/input, 181] 
split level 119: [/input, 1331] 
split level 120: [/input, 596] 
split level 121: [/input, 2476] 
split level 122: [/input, 2248] 
split level 123: [/input, 1369] 
split level 124: [/input, 2902] 
split level 125: [/input, 2878] 
split level 126: [/input, 3490] 
split level 127: [/input, 594] 
split level 128: [/input, 420] 
split level 129: [/input, 790] 
split level 130: [/input, 914] 
split level 131: [/input, 366] 
split level 132: [/input, 3027] 
split level 133: [/input, 862] 
split level 134: [/input, 2539] 
split level 135: [/input, 885] 
split level 136: [/input, 877] 
split level 137: [/input-8, 378] 
split level 138: [/input, 2247] 
split level 139: [/input, 90] 
split level 140: [/input, 2947] 
split level 141: [/input-8, 1358] 
split level 142: [/input, 2925] 
split level 143: [/input, 156] 
split level 144: [/input, 907] 
split level 145: [/input, 1021] 
split level 146: [/input, 234] 
split level 147: [/input, 2950] 
split level 148: [/input, 1313] 
split level 149: [/input, 60] 
split level 150: [/input, 183] 
split level 151: [/input, 91] 
split level 152: [/input, 1652] 
split level 153: [/input, 3013] 
split level 154: [/input, 2929] 
split level 155: [/input-8, 1142] 
split level 156: [/input-8, 1033] 
split level 157: [/input-8, 717] 
split level 158: [/input, 3260] 
split level 159: [/input, 974] 
split level 160: [/input, 1669] 
split level 161: [/input, 2372] 
split level 162: [/input, 2218] 
split level 163: [/input, 2229] 
split level 164: [/input, 182] 
split level 165: [/input, 846] 
split level 166: [/input, 663] 
split level 167: [/input, 2284] 
split level 168: [/input, 2510] 
split level 169: [/input, 2451] 
split level 170: [/input, 773] 
split level 171: [/input, 2178] 
split level 172: [/input, 929] 
split level 173: [/input, 2007] 
split level 174: [/input, 2998] 
split level 175: [/input-8, 116] 
split level 176: [/input, 2441] 
split level 177: [/input, 2355] 
split level 178: [/input, 2286] 
split level 179: [/input, 2556] 
split level 180: [/input, 3437] 
split level 181: [/input, 214] 
split level 182: [/input, 1299] 
split level 183: [/input, 2254] 
split level 184: [/input, 109] 
split level 185: [/input, 261] 
split level 186: [/input, 632] 
split level 187: [/input-8, 1730] 
split level 188: [/input, 948] 
split level 189: [/input, 2189] 
split level 190: [/input, 2370] 
split level 191: [/input, 65] 
split level 192: [/input, 1346] 
split level 193: [/input, 3582] 
split level 194: [/input, 964] 
split level 195: [/input-8, 2007] 
split level 196: [/input, 3276] 
split level 197: [/input-8, 123] 
split level 198: [/input, 446] 
split level 199: [/input, 484] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04641708731651306
10 lb beta sum: 0.0, worst -0.046418726444244385
Time: prepare 0.0115    bound 0.0965    transfer 0.0007    finalize 0.0025    func 0.1139    
Accumulated time: func 0.1665    prepare 0.0215    bound 0.1486    transfer 0.0008    finalize 0.0027    
all_split False
======================Cut inference begins======================
max lb tensor(0.20010126) min lb tensor(-0.04641369)
Number of Verified Splits: 13 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010770082473754883 
BICCOS Cumulative time: 0.010770082473754883
Preprocessing time: 0.009907245635986328 Inference time: 0.0005066394805908203 Add cuts time: 0.0001895427703857422 Cut analysis time: 0.0001666545867919922
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5135    set_bounds 0.0085    solve 0.1140    add 0.0098    
Accumulated time: pickout 0.0003    decision 0.5135    set_bounds 0.0085    solve 0.1140    add 0.0098    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 49] 
split level 1: [/input-12, 42] 
split level 2: [/input-12, 18] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 38] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 57] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.3486049175262451

all verified at 0th iter
Time: prepare 0.0036    bound 0.0039    transfer 0.0005    finalize 0.0012    func 0.0108    
Accumulated time: func 0.1773    prepare 0.0255    bound 0.1526    transfer 0.0013    finalize 0.0038    
all_split False
======================Cut inference begins======================
max lb tensor(0.61170131) min lb tensor(0.34860492)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.006282806396484375 
BICCOS Cumulative time: 0.017052888870239258
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0216    set_bounds 0.0165    solve 0.0108    add 0.0002    
Accumulated time: pickout 0.0007    decision 0.5351    set_bounds 0.0249    solve 0.1248    add 0.0100    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.7729649543762207


Properties batch 6, size 1
Remaining timeout: 196.52180409431458
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 196.521737575531
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 196.52171540260315
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 3.4783 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.31871891, -18.47064972, -19.12639618, -20.47543144, -18.57441521,
         -21.48938560, -20.72224808, -20.14287567, -13.06752682, -17.90552711]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [738]; unstable size 738; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 738] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 738] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 738] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 239] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.85416543, 3.53390431, 4.32532692, 5.85610437, 3.81353593, 6.73792934,
         5.85599041, 5.13794994, 3.02939773]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0523 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
         -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 646] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 646] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 297] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.24239492,  5.63600922,  0.64621520, -0.16879278, -0.18126954,
          1.30519724,  1.09948564,  4.69383383,  5.11891651]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
         -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.05it/s]100%|██████████| 1/1 [00:00<00:00,  9.05it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.62831497, -26.66142845, -20.55701828, -18.69111824, -19.67261124,
          -18.72575760, -21.38451195, -21.12766838, -25.30397987, -26.02238846],
         [-24.62831497, -26.66142845, -20.55701828, -18.69111824, -19.67261124,
          -18.72575760, -21.38451195, -21.12766838, -25.30397987, -26.02238846]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.98149300, 0.03463936]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1134 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.09737205505371
alpha/beta optimization time: 1.19254469871521
initial alpha-crown bounds: tensor([[ 4.31553030,  5.74813271,  0.69852710, -0.09507674, -0.16205454,
          1.35331535,  1.20960498,  4.79450607,  5.23488617]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.16205453872680664
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.64907217025757
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.6490330696106
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.64900827407837
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.648987531662
Verifying property 3 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09507674]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
        -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09507674]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 960
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010967254638671875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09507483243942261
10 lb beta sum: 0.0, worst -0.09507882595062256
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    func 0.0531    
Accumulated time: func 0.0531    prepare 0.0002    bound 0.0527    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 56] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 2] 
split level 6: [/input-12, 90] 
split level 7: [/input-12, 83] 
split level 8: [/input-12, 10] 
split level 9: [/input-12, 79] 
split level 10: [/input-12, 31] 
split level 11: [/input-12, 72] 
split level 12: [/input-8, 1371] 
split level 13: [/input-8, 1682] 
split level 14: [/input-8, 1940] 
split level 15: [/input-8, 1379] 
split level 16: [/input-8, 1380] 
split level 17: [/input-8, 851] 
split level 18: [/input-8, 1069] 
split level 19: [/input-8, 1370] 
split level 20: [/input-8, 850] 
split level 21: [/input-8, 1196] 
split level 22: [/input-8, 1681] 
split level 23: [/input-8, 245] 
split level 24: [/input-8, 1388] 
split level 25: [/input-8, 204] 
split level 26: [/input-8, 1061] 
split level 27: [/input-8, 224] 
split level 28: [/input-8, 1362] 
split level 29: [/input-8, 1363] 
split level 30: [/input-8, 232] 
split level 31: [/input-8, 852] 
split level 32: [/input-8, 246] 
split level 33: [/input-8, 230] 
split level 34: [/input-8, 1373] 
split level 35: [/input-8, 1070] 
split level 36: [/input-8, 1386] 
split level 37: [/input-8, 1387] 
split level 38: [/input-8, 1932] 
split level 39: [/input-8, 2030] 
split level 40: [/input-8, 250] 
split level 41: [/input-8, 37] 
split level 42: [/input-8, 244] 
split level 43: [/input-8, 192] 
split level 44: [/input-12, 71] 
split level 45: [/input, 3180] 
split level 46: [/input-8, 860] 
split level 47: [/input-8, 1690] 
split level 48: [/input-8, 236] 
split level 49: [/input-8, 1374] 
split level 50: [/input-12, 35] 
split level 51: [/input-8, 249] 
split level 52: [/input-8, 1939] 
split level 53: [/input-8, 194] 
split level 54: [/input, 3181] 
split level 55: [/input-8, 1206] 
split level 56: [/input-8, 597] 
split level 57: [/input-8, 46] 
split level 58: [/input-8, 1636] 
split level 59: [/input-8, 2005] 
split level 60: [/input-8, 240] 
split level 61: [/input-8, 2024] 
split level 62: [/input, 3214] 
split level 63: [/input-8, 962] 
split level 64: [/input-8, 1749] 
split level 65: [/input-8, 1955] 
split level 66: [/input, 3008] 
split level 67: [/input-8, 410] 
split level 68: [/input, 122] 
split level 69: [/input-8, 39] 
split level 70: [/input-8, 1382] 
split level 71: [/input, 123] 
split level 72: [/input-8, 1076] 
split level 73: [/input, 3195] 
split level 74: [/input-8, 215] 
split level 75: [/input, 2835] 
split level 76: [/input-8, 1665] 
split level 77: [/input, 2670] 
split level 78: [/input-8, 1765] 
split level 79: [/input-8, 1260] 
split level 80: [/input, 1307] 
split level 81: [/input-8, 182] 
split level 82: [/input-8, 1252] 
split level 83: [/input-8, 1473] 
split level 84: [/input-8, 30] 
split level 85: [/input-8, 994] 
split level 86: [/input-8, 409] 
split level 87: [/input, 3275] 
split level 88: [/input, 3166] 
split level 89: [/input-8, 1585] 
split level 90: [/input-8, 1366] 
split level 91: [/input, 2884] 
split level 92: [/input-8, 1365] 
split level 93: [/input-8, 1078] 
split level 94: [/input-8, 1954] 
split level 95: [/input, 107] 
split level 96: [/input-8, 1569] 
split level 97: [/input, 121] 
split level 98: [/input, 2976] 
split level 99: [/input, 1400] 
split level 100: [/input-8, 170] 
split level 101: [/input-8, 207] 
split level 102: [/input-8, 1308] 
split level 103: [/input, 137] 
split level 104: [/input-8, 174] 
split level 105: [/input, 905] 
split level 106: [/input-8, 1057] 
split level 107: [/input, 3177] 
split level 108: [/input-8, 1775] 
split level 109: [/input, 1324] 
split level 110: [/input, 44] 
split level 111: [/input-8, 1079] 
split level 112: [/input, 2650] 
split level 113: [/input-8, 1785] 
split level 114: [/input-8, 1375] 
split level 115: [/input, 140] 
split level 116: [/input, 2074] 
split level 117: [/input, 139] 
split level 118: [/input, 449] 
split level 119: [/input-8, 320] 
split level 120: [/input-8, 1708] 
split level 121: [/input, 3034] 
split level 122: [/input-8, 367] 
split level 123: [/input, 1308] 
split level 124: [/input, 145] 
split level 125: [/input-8, 958] 
split level 126: [/input-8, 1391] 
split level 127: [/input, 3276] 
split level 128: [/input-8, 1354] 
split level 129: [/input, 2361] 
split level 130: [/input, 1003] 
split level 131: [/input, 921] 
split level 132: [/input, 2075] 
split level 133: [/input, 2339] 
split level 134: [/input-8, 352] 
split level 135: [/input, 3243] 
split level 136: [/input, 2664] 
split level 137: [/input-8, 1750] 
split level 138: [/input, 120] 
split level 139: [/input, 2031] 
split level 140: [/input, 956] 
split level 141: [/input, 489] 
split level 142: [/input, 1004] 
split level 143: [/input, 193] 
split level 144: [/input, 2347] 
split level 145: [/input, 24] 
split level 146: [/input, 873] 
split level 147: [/input, 2345] 
split level 148: [/input, 1399] 
split level 149: [/input, 2653] 
split level 150: [/input-8, 47] 
split level 151: [/input, 156] 
split level 152: [/input, 4042] 
split level 153: [/input, 28] 
split level 154: [/input, 162] 
split level 155: [/input, 491] 
split level 156: [/input, 968] 
split level 157: [/input, 2615] 
split level 158: [/input, 2109] 
split level 159: [/input, 92] 
split level 160: [/input, 862] 
split level 161: [/input, 2077] 
split level 162: [/input, 27] 
split level 163: [/input, 274] 
split level 164: [/input, 2068] 
split level 165: [/input, 957] 
split level 166: [/input, 2631] 
split level 167: [/input, 3242] 
split level 168: [/input, 889] 
split level 169: [/input, 3244] 
split level 170: [/input, 81] 
split level 171: [/input-8, 336] 
split level 172: [/input, 2599] 
split level 173: [/input, 2363] 
split level 174: [/input, 3148] 
split level 175: [/input, 2620] 
split level 176: [/input, 78] 
split level 177: [/input, 4043] 
split level 178: [/input, 310] 
split level 179: [/input, 2680] 
split level 180: [/input, 3049] 
split level 181: [/input, 2099] 
split level 182: [/input, 2696] 
split level 183: [/input, 797] 
split level 184: [/input, 2494] 
split level 185: [/input, 2366] 
split level 186: [/input, 445] 
split level 187: [/input, 2187] 
split level 188: [/input, 105] 
split level 189: [/input, 2381] 
split level 190: [/input, 2093] 
split level 191: [/input, 1020] 
split level 192: [/input, 2333] 
split level 193: [/input, 45] 
split level 194: [/input, 1374] 
split level 195: [/input, 2731] 
split level 196: [/input, 2477] 
split level 197: [/input, 2114] 
split level 198: [/input, 2604] 
split level 199: [/input, 464] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.09498733282089233
10 lb beta sum: 0.0, worst -0.09499061107635498
Time: prepare 0.0115    bound 0.0972    transfer 0.0013    finalize 0.0029    func 0.1154    
Accumulated time: func 0.1686    prepare 0.0217    bound 0.1498    transfer 0.0014    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(0.19739044) min lb tensor(-0.09498644)
Number of Verified Splits: 9 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.010960102081298828 
BICCOS Cumulative time: 0.010960102081298828
Preprocessing time: 0.010128259658813477 Inference time: 0.00038433074951171875 Add cuts time: 0.00015020370483398438 Cut analysis time: 0.00029730796813964844
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.08701 (1), -0.08692 (1), -0.08686 (1), -0.08682 (1), -0.08681 (1), -0.08677 (1), -0.08657 (1), -0.08652 (1), -0.08627 (1), -0.08613 (1), -0.08608 (1), -0.08605 (1), -0.08603 (1), -0.08600 (1), -0.08568 (1), -0.08558 (1), -0.08534 (1), -0.08529 (1), -0.08498 (1), -0.08403 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5146    set_bounds 0.0090    solve 0.1155    add 0.0713    
Accumulated time: pickout 0.0003    decision 0.5146    set_bounds 0.0090    solve 0.1155    add 0.0713    
Current (lb-rhs): -0.08700817823410034
50 domains visited
Cumulative time: 0.7799892425537109

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 4] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-12, 4] [/input-12, 4] [/input-12, 17] [/input-12, 17] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
split level 2: [/input-12, 17] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
split level 3: [/input-12, 90] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06345927715301514

all verified at 1th iter
Time: prepare 0.0072    bound 0.0117    transfer 0.0007    finalize 0.0024    func 0.0245    
Accumulated time: func 0.1930    prepare 0.0291    bound 0.1615    transfer 0.0021    finalize 0.0054    
all_split False
======================Cut inference begins======================
max lb tensor(0.19580987) min lb tensor(2.69412994e-05)
Number of Verified Splits: 400 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.03487277030944824 
BICCOS Cumulative time: 0.04583287239074707
Preprocessing time: 0.011740922927856445 Inference time: 0.014595508575439453 Add cuts time: 0.00835275650024414 Cut analysis time: 0.00018358230590820312
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0011    decision 0.0195    set_bounds 0.0123    solve 0.0245    add 0.0151    
Accumulated time: pickout 0.0014    decision 0.5341    set_bounds 0.0213    solve 0.1401    add 0.0865    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 56] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 83] 
split level 7: [/input-12, 79] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.1808689832687378

all verified at 0th iter
Time: prepare 0.0038    bound 0.0040    transfer 0.0008    finalize 0.0012    func 0.0115    
Accumulated time: func 0.2046    prepare 0.0333    bound 0.1656    transfer 0.0029    finalize 0.0066    
all_split False
======================Cut inference begins======================
max lb tensor(0.76145041) min lb tensor(0.18086898)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.00630497932434082 
BICCOS Cumulative time: 0.05213785171508789
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0220    set_bounds 0.0166    solve 0.0116    add 0.0002    
Accumulated time: pickout 0.0018    decision 0.5561    set_bounds 0.0379    solve 0.1517    add 0.0867    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
50 domains visited
Cumulative time: 0.9482228755950928


Properties batch 4, size 1
Remaining timeout: 197.5267276763916
Verifying property 4 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16205454]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
        -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16205454]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 960
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010204315185546875
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16205421090126038
10 lb beta sum: 0.0, worst -0.16205531358718872
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    func 0.0533    
Accumulated time: func 0.0533    prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 17] 
split level 7: [/input-8, 908] 
split level 8: [/input-8, 868] 
split level 9: [/input-8, 875] 
split level 10: [/input-8, 930] 
split level 11: [/input-12, 56] 
split level 12: [/input-8, 909] 
split level 13: [/input-8, 20] 
split level 14: [/input-8, 1548] 
split level 15: [/input-12, 43] 
split level 16: [/input-8, 860] 
split level 17: [/input-8, 1052] 
split level 18: [/input-8, 869] 
split level 19: [/input-8, 853] 
split level 20: [/input-8, 1748] 
split level 21: [/input-8, 1259] 
split level 22: [/input-8, 1242] 
split level 23: [/input-8, 1756] 
split level 24: [/input-8, 877] 
split level 25: [/input-8, 861] 
split level 26: [/input-8, 852] 
split level 27: [/input-8, 1252] 
split level 28: [/input-8, 26] 
split level 29: [/input-8, 812] 
split level 30: [/input-8, 938] 
split level 31: [/input-8, 1363] 
split level 32: [/input-12, 59] 
split level 33: [/input-8, 918] 
split level 34: [/input, 3108] 
split level 35: [/input-8, 1379] 
split level 36: [/input-8, 1234] 
split level 37: [/input-8, 1061] 
split level 38: [/input-8, 1749] 
split level 39: [/input-8, 192] 
split level 40: [/input, 2629] 
split level 41: [/input-8, 1069] 
split level 42: [/input-8, 794] 
split level 43: [/input-8, 364] 
split level 44: [/input-8, 934] 
split level 45: [/input-8, 862] 
split level 46: [/input-8, 870] 
split level 47: [/input-8, 1362] 
split level 48: [/input-12, 79] 
split level 49: [/input-8, 336] 
split level 50: [/input-8, 1628] 
split level 51: [/input-8, 1260] 
split level 52: [/input-8, 1357] 
split level 53: [/input-8, 1371] 
split level 54: [/input-8, 1076] 
split level 55: [/input-8, 1932] 
split level 56: [/input-8, 358] 
split level 57: [/input-8, 224] 
split level 58: [/input-8, 1370] 
split level 59: [/input, 1315] 
split level 60: [/input-8, 1636] 
split level 61: [/input-8, 1373] 
split level 62: [/input-8, 101] 
split level 63: [/input-8, 1763] 
split level 64: [/input-8, 4] 
split level 65: [/input, 1332] 
split level 66: [/input-8, 1196] 
split level 67: [/input-8, 1387] 
split level 68: [/input-8, 344] 
split level 69: [/input, 1316] 
split level 70: [/input-8, 851] 
split level 71: [/input-8, 1618] 
split level 72: [/input-8, 854] 
split level 73: [/input, 1320] 
split level 74: [/input-8, 1354] 
split level 75: [/input-8, 174] 
split level 76: [/input-8, 1380] 
split level 77: [/input-8, 1637] 
split level 78: [/input-8, 1633] 
split level 79: [/input-8, 1365] 
split level 80: [/input-8, 1612] 
split level 81: [/input, 2581] 
split level 82: [/input-8, 1641] 
split level 83: [/input, 887] 
split level 84: [/input-8, 92] 
split level 85: [/input-8, 1765] 
split level 86: [/input-8, 1030] 
split level 87: [/input-8, 232] 
split level 88: [/input-8, 230] 
split level 89: [/input-8, 1625] 
split level 90: [/input-8, 215] 
split level 91: [/input-8, 2005] 
split level 92: [/input-8, 170] 
split level 93: [/input-8, 245] 
split level 94: [/input, 1815] 
split level 95: [/input, 3417] 
split level 96: [/input-8, 1386] 
split level 97: [/input, 1334] 
split level 98: [/input, 1351] 
split level 99: [/input-8, 109] 
split level 100: [/input, 1305] 
split level 101: [/input, 1400] 
split level 102: [/input-8, 887] 
split level 103: [/input, 889] 
split level 104: [/input-8, 1710] 
split level 105: [/input-8, 1388] 
split level 106: [/input, 855] 
split level 107: [/input-8, 1772] 
split level 108: [/input-8, 37] 
split level 109: [/input-8, 194] 
split level 110: [/input-8, 182] 
split level 111: [/input, 3539] 
split level 112: [/input-8, 154] 
split level 113: [/input-8, 1366] 
split level 114: [/input-8, 93] 
split level 115: [/input-8, 1374] 
split level 116: [/input-8, 207] 
split level 117: [/input, 1287] 
split level 118: [/input, 885] 
split level 119: [/input-8, 846] 
split level 120: [/input, 3142] 
split level 121: [/input-8, 1263] 
split level 122: [/input, 2394] 
split level 123: [/input, 905] 
split level 124: [/input-8, 249] 
split level 125: [/input-8, 1180] 
split level 126: [/input-8, 1976] 
split level 127: [/input, 2407] 
split level 128: [/input, 1399] 
split level 129: [/input, 2135] 
split level 130: [/input, 436] 
split level 131: [/input, 2134] 
split level 132: [/input, 1306] 
split level 133: [/input-8, 1382] 
split level 134: [/input, 1817] 
split level 135: [/input-8, 246] 
split level 136: [/input-8, 1404] 
split level 137: [/input, 533] 
split level 138: [/input-8, 1057] 
split level 139: [/input, 489] 
split level 140: [/input, 3444] 
split level 141: [/input-8, 175] 
split level 142: [/input-8, 845] 
split level 143: [/input-8, 1039] 
split level 144: [/input, 107] 
split level 145: [/input, 947] 
split level 146: [/input, 1079] 
split level 147: [/input, 3860] 
split level 148: [/input-8, 1676] 
split level 149: [/input-8, 240] 
split level 150: [/input-8, 947] 
split level 151: [/input-8, 473] 
split level 152: [/input, 2361] 
split level 153: [/input, 871] 
split level 154: [/input, 2696] 
split level 155: [/input, 2423] 
split level 156: [/input, 3034] 
split level 157: [/input, 53] 
split level 158: [/input, 2345] 
split level 159: [/input, 120] 
split level 160: [/input, 2680] 
split level 161: [/input, 310] 
split level 162: [/input-8, 1406] 
split level 163: [/input-8, 439] 
split level 164: [/input, 1307] 
split level 165: [/input-8, 510] 
split level 166: [/input, 27] 
split level 167: [/input, 1544] 
split level 168: [/input-8, 1540] 
split level 169: [/input-8, 797] 
split level 170: [/input, 362] 
split level 171: [/input, 535] 
split level 172: [/input-8, 250] 
split level 173: [/input-8, 1649] 
split level 174: [/input, 423] 
split level 175: [/input, 873] 
split level 176: [/input, 122] 
split level 177: [/input-8, 1350] 
split level 178: [/input-8, 1961] 
split level 179: [/input, 2624] 
split level 180: [/input, 2640] 
split level 181: [/input, 445] 
split level 182: [/input, 1080] 
split level 183: [/input-8, 102] 
split level 184: [/input, 2168] 
split level 185: [/input-8, 1668] 
split level 186: [/input, 85] 
split level 187: [/input-8, 1262] 
split level 188: [/input-8, 183] 
split level 189: [/input-8, 1939] 
split level 190: [/input, 2068] 
split level 191: [/input, 22] 
split level 192: [/input-8, 445] 
split level 193: [/input, 2072] 
split level 194: [/input-8, 352] 
split level 195: [/input, 1344] 
split level 196: [/input, 2391] 
split level 197: [/input, 1324] 
split level 198: [/input, 3049] 
split level 199: [/input-8, 863] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1620100885629654
10 lb beta sum: 0.0, worst -0.162004753947258
Time: prepare 0.0114    bound 0.0972    transfer 0.0014    finalize 0.0029    func 0.1155    
Accumulated time: func 0.1688    prepare 0.0214    bound 0.1500    transfer 0.0015    finalize 0.0030    
all_split False
======================Cut inference begins======================
max lb tensor(-0.06769660) min lb tensor(-0.16200215)
Number of Verified Splits: 0 of 400
No cut inferred: All or none verified.
Total number of valid cuts: 0.
#cuts >= 20: 0
BICCOS time: 0.01040196418762207 
BICCOS Cumulative time: 0.01040196418762207
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.15805 (1), -0.15801 (1), -0.15788 (1), -0.15777 (1), -0.15770 (1), -0.15765 (1), -0.15763 (1), -0.15740 (1), -0.15722 (1), -0.15719 (1), -0.15663 (1), -0.15657 (1), -0.15656 (1), -0.15610 (1), -0.15590 (1), -0.15513 (1), -0.15512 (1), -0.15512 (1), -0.15501 (1), -0.15500 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5106    set_bounds 0.0088    solve 0.1156    add 0.0686    
Accumulated time: pickout 0.0003    decision 0.5106    set_bounds 0.0088    solve 0.1156    add 0.0686    
Current (lb-rhs): -0.15804605185985565
50 domains visited
Cumulative time: 0.7725319862365723

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 8] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
split level 1: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 90] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 17] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 3: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-8, 868] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-8, 868] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1510964035987854
10 lb beta sum: 0.0, worst -0.15094557404518127
Time: prepare 0.0129    bound 0.0970    transfer 0.0007    finalize 0.0025    func 0.1157    
Accumulated time: func 0.2844    prepare 0.0346    bound 0.2470    transfer 0.0022    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.02658103) min lb tensor(-0.15093723)
Number of Verified Splits: 3 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 2.
#cuts 1-3: 2
#cuts >= 20: 0
BICCOS time: 0.012151479721069336 
BICCOS Cumulative time: 0.022553443908691406
Preprocessing time: 0.011686563491821289 Inference time: 0.0001761913299560547 Add cuts time: 6.031990051269531e-05 Cut analysis time: 0.00022840499877929688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06087 (2), -0.06086 (2), -0.06084 (2), -0.06084 (2), -0.06066 (2), -0.06055 (2), -0.06042 (2), -0.06038 (2), -0.06006 (2), -0.05974 (2), -0.05960 (2), -0.05928 (2), -0.05824 (2), -0.05772 (2), -0.05765 (2), -0.05761 (2), -0.05734 (2), -0.05602 (2), -0.05597 (2), -0.05584 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0196    set_bounds 0.0125    solve 0.1158    add 0.0785    
Accumulated time: pickout 0.0015    decision 0.5301    set_bounds 0.0213    solve 0.2313    add 0.1470    
Current (lb-rhs): -0.06087252497673035
100 domains visited
Cumulative time: 1.0129926204681396

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 68] [/input-12, 2] [/input-12, 8] [/input-12, 2] [/input-12, 2] 
split level 1: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 8] [/input-12, 8] [/input-12, 90] [/input-12, 8] [/input-12, 8] 
split level 2: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 90] [/input-12, 90] [/input-8, 868] [/input-12, 90] [/input-12, 90] 
split level 3: [/input-8, 1252] [/input-8, 868] [/input-8, 860] [/input-8, 1371] [/input-8, 868] [/input-8, 1252] [/input-12, 17] [/input-8, 860] [/input-12, 17] [/input-12, 17] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05793720483779907
10 lb beta sum: 0.11706594377756119, worst -0.251635879278183
Time: prepare 0.0069    bound 0.1159    transfer 0.0007    finalize 0.0021    func 0.1282    
Accumulated time: func 0.4127    prepare 0.0418    bound 0.3629    transfer 0.0029    finalize 0.0076    
all_split False
======================Cut inference begins======================
max lb tensor(0.21990776) min lb tensor(-0.05421350)
Number of Verified Splits: 143 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.021065950393676758 
BICCOS Cumulative time: 0.043619394302368164
Preprocessing time: 0.011675357818603516 Inference time: 0.006989240646362305 Add cuts time: 0.002029895782470703 Cut analysis time: 0.0003714561462402344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02618 (3), -0.02605 (3), -0.02601 (3), -0.02576 (3), -0.02468 (3), -0.02409 (3), -0.02403 (3), -0.02366 (3), -0.02358 (3), -0.02330 (3), -0.02328 (3), -0.02325 (3), -0.02269 (3), -0.02268 (3), -0.02190 (3), -0.02133 (3), -0.02091 (3), -0.02057 (3), -0.02036 (3), -0.02012 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0198    set_bounds 0.0152    solve 0.1283    add 0.0970    
Accumulated time: pickout 0.0026    decision 0.5499    set_bounds 0.0365    solve 0.3596    add 0.2440    
Current (lb-rhs): -0.026179114356637
150 domains visited
Cumulative time: 1.2957358360290527

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2] [/input-12, 8] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 90] [/input-12, 90] [/input-12, 8] [/input-12, 2] 
split level 1: [/input-12, 8] [/input-12, 17] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 17] [/input-12, 17] [/input-12, 90] [/input-12, 8] 
split level 2: [/input-12, 90] [/input-8, 868] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-12, 17] 
split level 3: [/input-8, 868] [/input-8, 1252] [/input-8, 1371] [/input-8, 868] [/input-8, 1371] [/input-8, 868] [/input-8, 1252] [/input-8, 1252] [/input-8, 1371] [/input-8, 868] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029671311378479004
10 lb beta sum: 0.1570577174425125, worst -0.04587193951010704
Time: prepare 0.0070    bound 0.1176    transfer 0.0007    finalize 0.0022    func 0.1301    
Accumulated time: func 0.5428    prepare 0.0490    bound 0.4805    transfer 0.0036    finalize 0.0098    
all_split False
======================Cut inference begins======================
max lb tensor(0.04724443) min lb tensor(-0.02253811)
Number of Verified Splits: 223 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 11.
#cuts 1-3: 5
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.027426958084106445 
BICCOS Cumulative time: 0.07104635238647461
Preprocessing time: 0.011465787887573242 Inference time: 0.011120796203613281 Add cuts time: 0.004376888275146484 Cut analysis time: 0.0004634857177734375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.01139 (4), -0.01132 (4), -0.01129 (4), -0.01094 (4), -0.01092 (4), -0.01092 (4), -0.01091 (4), -0.01051 (4), -0.01038 (4), -0.01038 (4), -0.01027 (4), -0.00995 (4), -0.00990 (4), -0.00971 (4), -0.00967 (4), -0.00932 (4), -0.00824 (4), -0.00814 (4), -0.00812 (4), -0.00796 (4), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0197    set_bounds 0.0145    solve 0.1302    add 0.2601    
Accumulated time: pickout 0.0036    decision 0.5696    set_bounds 0.0510    solve 0.4898    add 0.5042    
Current (lb-rhs): -0.011392317712306976
200 domains visited
Cumulative time: 1.7490077018737793

Shallow-BaB round 5
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-12, 2] 
split level 1: [/input-12, 90] [/input-12, 90] [/input-12, 17] [/input-12, 17] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 17] [/input-12, 17] 
split level 2: [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-8, 868] [/input-8, 868] 
split level 3: [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-8, 860] [/input-8, 860] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.01830214262008667
10 lb beta sum: 0.6364709734916687, worst -0.22588583827018738
Time: prepare 0.0075    bound 0.1318    transfer 0.0007    finalize 0.0023    func 0.1450    
Accumulated time: func 0.6878    prepare 0.0568    bound 0.6123    transfer 0.0043    finalize 0.0121    
all_split False
======================Cut inference begins======================
max lb tensor(0.04701424) min lb tensor(-0.01047567)
Number of Verified Splits: 292 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 7
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.03305840492248535 
BICCOS Cumulative time: 0.10410475730895996
Preprocessing time: 0.011552572250366211 Inference time: 0.015801191329956055 Add cuts time: 0.005188941955566406 Cut analysis time: 0.0005156993865966797
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.00805 (5), -0.00803 (5), -0.00797 (5), -0.00797 (5), -0.00796 (5), -0.00795 (5), -0.00504 (5), -0.00499 (5), -0.00490 (5), -0.00315 (5), -0.00306 (5), -0.00306 (5), -0.00287 (5), -0.00277 (5), -0.00276 (5), 
Length of domains: 15
Time: pickout 0.0011    decision 0.0200    set_bounds 0.0154    solve 0.1451    add 0.1125    
Accumulated time: pickout 0.0047    decision 0.5896    set_bounds 0.0664    solve 0.6349    add 0.6167    
Current (lb-rhs): -0.008050456643104553
215 domains visited
Cumulative time: 2.0764005184173584


Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 68] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 17] 
split level 7: [/input-8, 868] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0709792971611023
10 lb beta sum: 0.2488628476858139, worst -0.06975702941417694
Time: prepare 0.0052    bound 0.1300    transfer 0.0009    finalize 0.0015    func 0.1394    
Accumulated time: func 0.8271    prepare 0.0625    bound 0.7424    transfer 0.0052    finalize 0.0136    
all_split False
======================Cut inference begins======================
max lb tensor(0.94351590) min lb tensor(-0.06944641)
Number of Verified Splits: 231 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13702064752578735
10 lb beta sum: 0.577625572681427, worst -0.12612690031528473
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 13.
#cuts 1-3: 7
#cuts 4-6: 6
#cuts >= 20: 0
BICCOS time: 0.2761087417602539 
BICCOS Cumulative time: 0.38021349906921387
Preprocessing time: 0.007352590560913086 Inference time: 0.26309776306152344 Add cuts time: 0.005156993865966797 Cut analysis time: 0.0005013942718505859
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.06945 (8), -0.06872 (8), -0.06542 (8), -0.06512 (8), -0.06285 (8), -0.06222 (8), -0.05924 (8), -0.05837 (8), -0.05769 (8), -0.05311 (8), -0.05266 (8), -0.04841 (8), -0.04408 (8), -0.04099 (8), -0.03980 (8), -0.03674 (8), -0.01810 (8), -0.01502 (8), -0.01402 (8), -0.01360 (8), 
Length of domains: 25
Time: pickout 0.0003    decision 0.0224    set_bounds 0.0207    solve 0.1395    add 0.0012    
Accumulated time: pickout 0.0051    decision 0.6120    set_bounds 0.0870    solve 0.7744    add 0.6179    
Current (lb-rhs): -0.06944641470909119
240 domains visited
Cumulative time: 2.540048122406006

BaB round 2
batch: 25
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 908] [/input-8, 909] [/input-8, 909] [/input-8, 909] [/input-8, 908] [/input-8, 908] [/input-8, 860] [/input-8, 20] [/input-12, 56] [/input-8, 20] 
split level 1: [/input-8, 909] [/input-8, 1052] [/input-8, 869] [/input-8, 1052] [/input-8, 860] [/input-8, 909] [/input-8, 1052] [/input-8, 909] [/input-8, 860] [/input-8, 909] 
split level 2: [/input-8, 869] [/input-8, 869] [/input-8, 1052] [/input-8, 869] [/input-8, 1052] [/input-8, 869] [/input-8, 861] [/input-8, 1052] [/input-8, 1052] [/input-8, 869] 
split level 3: [/input-8, 1052] [/input-8, 860] [/input-8, 860] [/input-8, 860] [/input-8, 861] [/input-8, 1052] [/input-8, 1748] [/input-8, 869] [/input-8, 861] [/input-8, 1052] 
cut re-enabled after branching node selection
0 lb beta sum: 0.26423701643943787, worst -0.05897679924964905
10 lb beta sum: 0.26423701643943787, worst -0.05859360098838806
Time: prepare 0.0172    bound 0.1305    transfer 0.0008    finalize 0.0026    func 0.1537    
Accumulated time: func 0.9809    prepare 0.0799    bound 0.8729    transfer 0.0060    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.02167427) min lb tensor(-0.05839513)
Number of Verified Splits: 102 of 400
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.3173418343067169, worst -0.19695435464382172
10 lb beta sum: 0.4653439521789551, worst -0.11951486766338348
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 14.
#cuts 1-3: 7
#cuts 4-6: 6
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.22193098068237305 
BICCOS Cumulative time: 0.6021444797515869
Preprocessing time: 0.011356115341186523 Inference time: 0.20934844017028809 Add cuts time: 0.0006978511810302734 Cut analysis time: 0.0005285739898681641
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05840 (12), -0.05834 (12), -0.05783 (12), -0.05718 (12), -0.05490 (12), -0.05487 (12), -0.05487 (12), -0.05411 (12), -0.05387 (12), -0.05364 (12), -0.05327 (12), -0.05259 (12), -0.05243 (12), -0.05234 (12), -0.05210 (12), -0.05201 (12), -0.05184 (12), -0.05127 (12), -0.05113 (12), -0.05099 (12), 
Length of domains: 298
Time: pickout 0.0016    decision 0.0208    set_bounds 0.0244    solve 0.1538    add 0.0040    
Accumulated time: pickout 0.0066    decision 0.6328    set_bounds 0.1114    solve 0.9282    add 0.6219    
Current (lb-rhs): -0.058395132422447205
538 domains visited
Cumulative time: 2.9676132202148438

BaB round 3
batch: 298
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 20] [/input-8, 908] [/input-8, 908] [/input-8, 20] [/input-8, 20] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 20] [/input-8, 908] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05768732726573944
10 lb beta sum: 0.19262540340423584, worst -0.056853026151657104
Time: prepare 0.0122    bound 0.1350    transfer 0.0014    finalize 0.0033    func 0.1560    
Accumulated time: func 1.1369    prepare 0.0923    bound 1.0079    transfer 0.0074    finalize 0.0195    
all_split False
======================Cut inference begins======================
max lb tensor(0.02251952) min lb tensor(-0.05674454)
Number of Verified Splits: 84 of 596
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 15.
#cuts 1-3: 11
#cuts 4-6: 3
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.0269320011138916 
BICCOS Cumulative time: 0.6290764808654785
Preprocessing time: 0.017176151275634766 Inference time: 0.008198022842407227 Add cuts time: 0.0010654926300048828 Cut analysis time: 0.0004923343658447266
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05674 (13), -0.05670 (13), -0.05620 (13), -0.05555 (13), -0.05330 (13), -0.05327 (13), -0.05326 (13), -0.05250 (13), -0.05226 (13), -0.05205 (13), -0.05164 (13), -0.05103 (13), -0.05048 (13), -0.05047 (13), -0.05040 (13), -0.05039 (13), -0.04992 (13), -0.04967 (13), -0.04937 (13), -0.04930 (13), 
Length of domains: 512
Time: pickout 0.0046    decision 0.0251    set_bounds 0.0264    solve 0.1562    add 0.0037    
Accumulated time: pickout 0.0112    decision 0.6579    set_bounds 0.1377    solve 1.0844    add 0.6255    
Current (lb-rhs): -0.0567445382475853
1050 domains visited
Cumulative time: 3.2126991748809814

BaB round 4
batch: 512
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 860] [/input-8, 20] [/input-8, 20] [/input-8, 908] [/input-8, 860] [/input-8, 860] [/input-12, 56] [/input-8, 860] [/input-8, 860] [/input-8, 20] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05560325086116791
10 lb beta sum: 0.7327218055725098, worst -0.05147413909435272
Time: prepare 0.0211    bound 0.1362    transfer 0.0023    finalize 0.0054    func 0.1717    
Accumulated time: func 1.3086    prepare 0.1136    bound 1.1441    transfer 0.0096    finalize 0.0249    
all_split False
======================Cut inference begins======================
max lb tensor(0.03177434) min lb tensor(-0.05142346)
Number of Verified Splits: 182 of 1024
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 17.
#cuts 1-3: 14
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.05537223815917969 
BICCOS Cumulative time: 0.6844487190246582
Preprocessing time: 0.0303041934967041 Inference time: 0.020353317260742188 Add cuts time: 0.00397944450378418 Cut analysis time: 0.0007352828979492188
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.05142 (14), -0.05130 (14), -0.05101 (14), -0.05056 (14), -0.05032 (14), -0.04985 (14), -0.04805 (14), -0.04793 (14), -0.04773 (14), -0.04756 (14), -0.04730 (14), -0.04700 (14), -0.04675 (14), -0.04667 (14), -0.04608 (14), -0.04599 (14), -0.04590 (14), -0.04546 (14), -0.04502 (14), -0.04496 (14), 
Length of domains: 842
Time: pickout 0.0087    decision 0.0383    set_bounds 0.0442    solve 0.1721    add 0.0057    
Accumulated time: pickout 0.0199    decision 0.6963    set_bounds 0.1819    solve 1.2564    add 0.6312    
Current (lb-rhs): -0.051423460245132446
1892 domains visited
Cumulative time: 3.539238929748535

BaB round 5
batch: 842
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 1932] [/input-8, 1932] [/input-8, 1252] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1748] [/input-8, 1932] [/input-8, 908] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.05241675674915314
10 lb beta sum: 1.1782501935958862, worst -0.04797238111495972
Time: prepare 0.0341    bound 0.1650    transfer 0.0029    finalize 0.0090    func 0.2220    
Accumulated time: func 1.5306    prepare 0.1480    bound 1.3091    transfer 0.0126    finalize 0.0339    
all_split False
======================Cut inference begins======================
max lb tensor(0.65395856) min lb tensor(-0.04793653)
Number of Verified Splits: 906 of 1684
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.16354608535766602 
BICCOS Cumulative time: 0.8479948043823242
Preprocessing time: 0.051622867584228516 Inference time: 0.10180282592773438 Add cuts time: 0.009855270385742188 Cut analysis time: 0.0002651214599609375
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.04794 (15), -0.04740 (15), -0.04725 (15), -0.04709 (15), -0.04646 (15), -0.04609 (15), -0.04576 (15), -0.04534 (15), -0.04527 (15), -0.04455 (15), -0.04435 (15), -0.04405 (15), -0.04401 (15), -0.04377 (15), -0.04373 (15), -0.04349 (15), -0.04321 (15), -0.04317 (15), -0.04297 (15), -0.04292 (15), 
Length of domains: 778
Time: pickout 0.0111    decision 0.0630    set_bounds 0.2272    solve 0.2224    add 0.0058    
Accumulated time: pickout 0.0310    decision 0.7592    set_bounds 0.4091    solve 1.4788    add 0.6370    
Current (lb-rhs): -0.04793652892112732
2670 domains visited
Cumulative time: 4.2405712604522705

BaB round 6
batch: 778
splitting decisions: 
split level 0: [/input-8, 1252] [/input-8, 1363] [/input-8, 1748] [/input-8, 877] [/input-8, 1252] [/input-8, 877] [/input-12, 56] [/input-8, 1252] [/input-12, 56] [/input-8, 1748] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.050293147563934326
10 lb beta sum: 0.2249457687139511, worst -0.0041107237339019775

all verified at 15th iter
Time: prepare 0.0318    bound 0.1013    transfer 0.0034    finalize 0.0091    func 0.1554    
Accumulated time: func 1.6860    prepare 0.1800    bound 1.4104    transfer 0.0160    finalize 0.0430    
all_split False
======================Cut inference begins======================
max lb tensor(0.35041523) min lb tensor(0.00023499)
Number of Verified Splits: 1556 of 1556
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.04742574691772461 
BICCOS Cumulative time: 0.8954205513000488
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0157    decision 0.0584    set_bounds 0.0680    solve 0.1565    add 0.0001    
Accumulated time: pickout 0.0467    decision 0.8177    set_bounds 0.4772    solve 1.6354    add 0.6371    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2670 domains visited
Cumulative time: 4.594492673873901


Properties batch 5, size 1
Remaining timeout: 192.72881960868835
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 192.72870922088623
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 192.72868394851685
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 192.72866320610046
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 7.2714 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.11565208, -26.29471397, -20.11076927, -23.31661606, -21.61720848,
         -22.97149086, -21.28172302, -23.18593788, -27.03968811, -25.88165855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [697]; unstable size 697; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 697] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 697] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 697] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 311] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.78565788, 4.27323198, 2.01961517, 0.27245533, 1.55622125, 0.05096996,
         1.07475901, 5.46636057, 4.11699867]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0460 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.48653412, -28.85784149, -33.36421204, -32.71415710, -32.16485214,
         -32.94163132, -33.09236145, -31.24285507, -33.00304794, -27.07908058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [755]; unstable size 755; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 755] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 755] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 755] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 272] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.82790470, 0.86489129, 4.30059433, 3.81733036, 3.25241280, 3.89844656,
         3.96334553, 2.53978395, 4.38356352]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0472 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.57879448, -25.87275887, -18.40335464, -22.53392982, -18.78349113,
         -22.35590553, -20.82909393, -22.13958931, -23.90252686, -25.55131340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [942]; unstable size 942; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 942] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 942] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 942] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 298] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78787935,  5.47186136,  3.06105661, -0.50585997,  2.82687831,
          1.17288113,  2.26738620,  3.64541531,  5.32217216]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.57879448, -25.87275887, -18.40335464, -22.53392982, -18.78349113,
         -22.35590553, -20.82909393, -22.13958931, -23.90252686, -25.55131340]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.35269165, -26.69282150, -19.10937881, -23.07330704, -19.10766220,
          -22.84299278, -21.32702637, -22.39660072, -24.61823463, -26.29825020]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00171661]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0070 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0718 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.54196358, -20.82349014, -15.98302746, -15.75083733, -17.00555420,
         -16.15604782, -17.53281975, -17.70917892, -21.04745102, -20.12406921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [787]; unstable size 787; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 787] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 787] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 787] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 259] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.29445910,  2.55111265, -1.20112324,  0.14969742, -0.85841626,
          0.26714224,  0.60579431,  3.49371648,  1.95312881]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.54196358, -20.82349014, -15.98302746, -15.75083733, -17.00555420,
         -16.15604782, -17.53281975, -17.70917892, -21.04745102, -20.12406921]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.54196358, -20.82349205, -15.98302746, -15.75083637, -17.00555229,
          -16.15604591, -17.53282166, -17.70917892, -21.04744911, -20.12407112],
         [-19.54196358, -20.82349205, -15.98302746, -15.75083637, -17.00555229,
          -16.15604591, -17.53282166, -17.70917892, -21.04744911, -20.12407112]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.23219109,  0.17301846]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.03650784, -1.02063489,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.06825387, -1.05238092, -1.03650784,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.09999990, -1.06825387, -1.06825387,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           ...,
           [-1.29047608, -1.17936504, -1.16349196,  ..., -1.13174593,
            -1.13174593, -1.13174593],
           [-1.35396814, -1.27460313, -1.24285710,  ..., -1.11587298,
            -1.13174593, -1.13174593],
           [-1.32222211, -1.32222211, -1.22698402,  ..., -1.11587298,
            -1.13174593, -1.13174593]],

          [[-1.14331722, -1.14331722, -1.11111104,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.15942025, -1.14331722, -1.12721407,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.17552328, -1.14331722, -1.14331722,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           ...,
           [-1.27214170, -1.20772946, -1.20772946,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.35265696, -1.28824472, -1.25603855,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.33655393, -1.32045078, -1.23993552,  ..., -1.20772946,
            -1.19162631, -1.19162631]],

          [[-1.16791618, -1.18290865, -1.16791618,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.22788620, -1.21289361, -1.19790113,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.25787115, -1.21289361, -1.18290865,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           ...,
           [-1.09295356, -1.04797614, -1.06296861,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.15292358, -1.10794616, -1.07796109,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.12293863, -1.12293863, -1.01799107,  ..., -1.25787115,
            -1.25787115, -1.25787115]]],


         [[[-1.03650784, -1.03650784, -1.02063489,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.06825387, -1.05238092, -1.03650784,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.09999990, -1.06825387, -1.06825387,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           ...,
           [-1.29047608, -1.17936504, -1.16349196,  ..., -1.13174593,
            -1.13174593, -1.13174593],
           [-1.35396814, -1.27460313, -1.24285710,  ..., -1.11587298,
            -1.13174593, -1.13174593],
           [-1.32222211, -1.32222211, -1.22698402,  ..., -1.11587298,
            -1.13174593, -1.13174593]],

          [[-1.14331722, -1.14331722, -1.11111104,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.15942025, -1.14331722, -1.12721407,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.17552328, -1.14331722, -1.14331722,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           ...,
           [-1.27214170, -1.20772946, -1.20772946,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.35265696, -1.28824472, -1.25603855,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.33655393, -1.32045078, -1.23993552,  ..., -1.20772946,
            -1.19162631, -1.19162631]],

          [[-1.16791618, -1.18290865, -1.16791618,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.22788620, -1.21289361, -1.19790113,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.25787115, -1.21289361, -1.18290865,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           ...,
           [-1.09295356, -1.04797614, -1.06296861,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.15292358, -1.10794616, -1.07796109,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.12293863, -1.12293863, -1.01799107,  ..., -1.25787115,
            -1.25787115, -1.25787115]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0580 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.03269768, -23.39742851, -19.98416901, -18.36516571, -20.57546043,
         -19.22831917, -18.52441025, -21.12701797, -21.40182495, -21.89733315]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 330, 1, 675] with unstable size 329 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 675] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [329]; unstable size 329; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 329] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 329] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.27801943,  2.64099741,  0.07614565,  0.77937651,  0.49395740,
         -0.89621031,  1.17210186,  0.74582720,  1.35976315]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.03269768, -23.39742851, -19.98416901, -18.36516571, -20.57546043,
         -19.22831917, -18.52441025, -21.12701797, -21.40182495, -21.89733315]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.68633461, -23.94194031, -20.53064346, -19.07315063, -21.10494423,
          -19.94137764, -18.70578766, -21.84820747, -22.05760574, -22.51838303]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36736298]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0051 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0511 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.98860359, -29.81665421, -22.90506172, -26.87357140, -25.76964569,
         -27.17270279, -26.79407501, -29.03504753, -24.31199837, -29.65661049]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 140, 1, 508] with unstable size 139 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 508] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [139]; unstable size 139; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 139] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.01010799, 0.43884724, 4.07559061, 3.17350507, 4.33794880, 3.97197676,
         6.33449697, 1.59434044, 6.97273016]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0442 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
         -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [796]; unstable size 796; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 161, 1, 796] with unstable size 160 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 796] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 796] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [160]; unstable size 160; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 160] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 160] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.89236879, -0.28250694, -0.08627740,  1.25970459,  0.33654249,
          1.56063485,  2.24391055,  2.57144356,  3.82517886]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
         -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.08it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.14734077, -27.13224411, -22.18392181, -22.67267036, -24.06332588,
          -23.14534950, -24.43538666, -25.13541222, -25.67602921, -26.70593071],
         [-22.14734077, -27.13224411, -22.18392181, -22.67267036, -24.06332588,
          -23.14534950, -24.43538666, -25.13541222, -25.67602921, -26.70593071]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.03658104, 0.52532959]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1128 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.666089057922363
alpha/beta optimization time: 1.190286636352539
initial alpha-crown bounds: tensor([[ 3.92945409, -0.25881672, -0.04859757,  1.30887055,  0.37676334,
          1.59917855,  2.28565073,  2.62420368,  3.84938169]], device='cuda:0')
Warning: Multiple properties need to be verified by BaB with cuts. Set initial_max_domains to 1 due to the limitation of GCP-CROWN solver
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.2588167190551758
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66441297531128
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.66437220573425
Verifying property 1 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.25881672]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
        -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.25881672]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 796
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 160
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 971
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.00010895729064941406
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2588174343109131
10 lb beta sum: 0.0, worst -0.2588183879852295
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    func 0.0533    
Accumulated time: func 0.0533    prepare 0.0002    bound 0.0528    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 0] 
split level 4: [/input-8, 1819] 
split level 5: [/input-12, 10] 
split level 6: [/input-8, 1578] 
split level 7: [/input-8, 1571] 
split level 8: [/input-8, 595] 
split level 9: [/input-8, 283] 
split level 10: [/input-8, 796] 
split level 11: [/input-12, 58] 
split level 12: [/input-8, 1197] 
split level 13: [/input-8, 1182] 
split level 14: [/input-8, 1590] 
split level 15: [/input-8, 794] 
split level 16: [/input-8, 1573] 
split level 17: [/input-8, 1581] 
split level 18: [/input-8, 470] 
split level 19: [/input-8, 461] 
split level 20: [/input-8, 1612] 
split level 21: [/input-8, 166] 
split level 22: [/input-8, 1637] 
split level 23: [/input, 662] 
split level 24: [/input-8, 1598] 
split level 25: [/input-8, 174] 
split level 26: [/input-8, 460] 
split level 27: [/input, 3528] 
split level 28: [/input-8, 309] 
split level 29: [/input-8, 1206] 
split level 30: [/input, 3292] 
split level 31: [/input, 661] 
split level 32: [/input, 3259] 
split level 33: [/input, 954] 
split level 34: [/input, 3513] 
split level 35: [/input, 963] 
split level 36: [/input-8, 1613] 
split level 37: [/input-12, 6] 
split level 38: [/input, 3432] 
split level 39: [/input, 2980] 
split level 40: [/input, 935] 
split level 41: [/input-8, 951] 
split level 42: [/input, 2764] 
split level 43: [/input-8, 246] 
split level 44: [/input, 2762] 
split level 45: [/input, 967] 
split level 46: [/input-8, 473] 
split level 47: [/input, 979] 
split level 48: [/input, 3257] 
split level 49: [/input-8, 274] 
split level 50: [/input, 951] 
split level 51: [/input-8, 1045] 
split level 52: [/input, 2729] 
split level 53: [/input, 3416] 
split level 54: [/input, 420] 
split level 55: [/input, 922] 
split level 56: [/input, 983] 
split level 57: [/input-8, 1622] 
split level 58: [/input, 3244] 
split level 59: [/input, 3399] 
split level 60: [/input, 2780] 
split level 61: [/input, 980] 
split level 62: [/input, 2246] 
split level 63: [/input, 659] 
split level 64: [/input-8, 1804] 
split level 65: [/input-8, 589] 
split level 66: [/input, 971] 
split level 67: [/input, 2231] 
split level 68: [/input, 2104] 
split level 69: [/input, 2120] 
split level 70: [/input, 1942] 
split level 71: [/input-8, 1597] 
split level 72: [/input, 988] 
split level 73: [/input-8, 1614] 
split level 74: [/input-8, 238] 
split level 75: [/input, 972] 
split level 76: [/input, 949] 
split level 77: [/input, 2779] 
split level 78: [/input, 583] 
split level 79: [/input, 989] 
split level 80: [/input, 948] 
split level 81: [/input, 1304] 
split level 82: [/input, 2727] 
split level 83: [/input, 2599] 
split level 84: [/input-8, 1805] 
split level 85: [/input, 2731] 
split level 86: [/input, 2121] 
split level 87: [/input, 379] 
split level 88: [/input-8, 457] 
split level 89: [/input, 3546] 
split level 90: [/input, 990] 
split level 91: [/input-8, 959] 
split level 92: [/input, 332] 
split level 93: [/input, 2796] 
split level 94: [/input, 2520] 
split level 95: [/input, 2135] 
split level 96: [/input-8, 508] 
split level 97: [/input-8, 1921] 
split level 98: [/input, 2486] 
split level 99: [/input, 200] 
split level 100: [/input, 2503] 
split level 101: [/input, 3533] 
split level 102: [/input, 2122] 
split level 103: [/input, 2517] 
split level 104: [/input, 1001] 
split level 105: [/input, 1941] 
split level 106: [/input, 1303] 
split level 107: [/input-8, 1833] 
split level 108: [/input, 228] 
split level 109: [/input, 3564] 
split level 110: [/input, 3256] 
split level 111: [/input, 919] 
split level 112: [/input, 1457] 
split level 113: [/input, 2247] 
split level 114: [/input, 1006] 
split level 115: [/input, 3105] 
split level 116: [/input, 973] 
split level 117: [/input-8, 428] 
split level 118: [/input-8, 369] 
split level 119: [/input, 3563] 
split level 120: [/input-8, 507] 
split level 121: [/input, 2152] 
split level 122: [/input-8, 1604] 
split level 123: [/input, 1963] 
split level 124: [/input, 3467] 
split level 125: [/input, 1944] 
split level 126: [/input, 999] 
split level 127: [/input, 924] 
split level 128: [/input, 2245] 
split level 129: [/input, 3384] 
split level 130: [/input, 2261] 
split level 131: [/input, 193] 
split level 132: [/input, 2504] 
split level 133: [/input, 201] 
split level 134: [/input, 2264] 
split level 135: [/input, 646] 
split level 136: [/input-8, 916] 
split level 137: [/input, 3255] 
split level 138: [/input, 2518] 
split level 139: [/input, 2230] 
split level 140: [/input, 2600] 
split level 141: [/input-8, 61] 
split level 142: [/input, 1322] 
split level 143: [/input, 199] 
split level 144: [/input, 182] 
split level 145: [/input, 2049] 
split level 146: [/input, 232] 
split level 147: [/input, 3032] 
split level 148: [/input, 3089] 
split level 149: [/input, 2501] 
split level 150: [/input, 2734] 
split level 151: [/input, 1943] 
split level 152: [/input, 2249] 
split level 153: [/input, 231] 
split level 154: [/input, 781] 
split level 155: [/input, 892] 
split level 156: [/input, 3452] 
split level 157: [/input, 2153] 
split level 158: [/input, 234] 
split level 159: [/input, 2117] 
split level 160: [/input-8, 1951] 
split level 161: [/input, 2537] 
split level 162: [/input, 2215] 
split level 163: [/input, 2279] 
split level 164: [/input, 2280] 
split level 165: [/input, 3090] 
split level 166: [/input, 227] 
split level 167: [/input, 2357] 
split level 168: [/input, 2343] 
split level 169: [/input, 2515] 
split level 170: [/input, 165] 
split level 171: [/input, 660] 
split level 172: [/input, 676] 
split level 173: [/input, 233] 
split level 174: [/input, 2134] 
split level 175: [/input, 2262] 
split level 176: [/input, 668] 
split level 177: [/input, 3358] 
split level 178: [/input, 3106] 
split level 179: [/input, 2050] 
split level 180: [/input, 2514] 
split level 181: [/input, 230] 
split level 182: [/input, 2535] 
split level 183: [/input, 2761] 
split level 184: [/input, 3289] 
split level 185: [/input, 3373] 
split level 186: [/input, 2051] 
split level 187: [/input, 2232] 
split level 188: [/input, 2061] 
split level 189: [/input, 2052] 
split level 190: [/input, 2521] 
split level 191: [/input, 508] 
split level 192: [/input, 675] 
split level 193: [/input, 2149] 
split level 194: [/input, 2094] 
split level 195: [/input, 2282] 
split level 196: [/input, 3374] 
split level 197: [/input, 1948] 
split level 198: [/input, 2333] 
split level 199: [/input, 2075] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25867652893066406
10 lb beta sum: 0.0, worst -0.2586778402328491
Time: prepare 0.0115    bound 0.0976    transfer 0.0014    finalize 0.0031    func 0.1162    
Accumulated time: func 0.1695    prepare 0.0215    bound 0.1504    transfer 0.0015    finalize 0.0032    
all_split False
======================Cut inference begins======================
max lb tensor(0.15740895) min lb tensor(-0.25867546)
Number of Verified Splits: 1 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010525941848754883 
BICCOS Cumulative time: 0.010525941848754883
Preprocessing time: 0.01021432876586914 Inference time: 7.128715515136719e-05 Add cuts time: 4.4345855712890625e-05 Cut analysis time: 0.00019598007202148438
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.25248 (1), -0.25241 (1), -0.25232 (1), -0.25226 (1), -0.25213 (1), -0.25183 (1), -0.25180 (1), -0.25179 (1), -0.25179 (1), -0.25166 (1), -0.25146 (1), -0.25112 (1), -0.25061 (1), -0.25037 (1), -0.25018 (1), -0.25011 (1), -0.25003 (1), -0.24996 (1), -0.24988 (1), -0.24896 (1), 
Length of domains: 50
Time: pickout 0.0003    decision 0.5159    set_bounds 0.0092    solve 0.1163    add 0.0689    
Accumulated time: pickout 0.0003    decision 0.5159    set_bounds 0.0092    solve 0.1163    add 0.0689    
Current (lb-rhs): -0.25248003005981445
50 domains visited
Cumulative time: 0.779334545135498

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 12] [/input-12, 12] [/input-12, 59] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] 
split level 1: [/input-12, 59] [/input-12, 0] [/input-12, 0] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 2: [/input-12, 0] [/input-12, 10] [/input-12, 10] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 10] [/input-12, 0] 
split level 3: [/input-8, 283] [/input-8, 470] [/input-12, 58] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 58] [/input-12, 58] [/input-12, 10] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2392059564590454
10 lb beta sum: 0.19286823272705078, worst -0.23782265186309814
Time: prepare 0.0076    bound 0.1148    transfer 0.0007    finalize 0.0025    func 0.1282    
Accumulated time: func 0.2977    prepare 0.0293    bound 0.2652    transfer 0.0022    finalize 0.0057    
all_split False
======================Cut inference begins======================
max lb tensor(0.09562731) min lb tensor(-0.23767388)
Number of Verified Splits: 12 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 5.
#cuts 1-3: 5
#cuts >= 20: 0
BICCOS time: 0.012690067291259766 
BICCOS Cumulative time: 0.02321600914001465
Preprocessing time: 0.011694669723510742 Inference time: 0.0005168914794921875 Add cuts time: 0.00019931793212890625 Cut analysis time: 0.0002791881561279297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.07722 (2), -0.07687 (2), -0.07681 (2), -0.07625 (2), -0.07605 (2), -0.07550 (2), -0.07527 (2), -0.07482 (2), -0.07477 (2), -0.07476 (2), -0.07329 (2), -0.07276 (2), -0.07263 (2), -0.07161 (2), -0.07060 (2), -0.07018 (2), -0.06987 (2), -0.06900 (2), -0.06805 (2), -0.06773 (2), 
Length of domains: 50
Time: pickout 0.0014    decision 0.0196    set_bounds 0.0122    solve 0.1283    add 0.0777    
Accumulated time: pickout 0.0017    decision 0.5355    set_bounds 0.0214    solve 0.2446    add 0.1466    
Current (lb-rhs): -0.07721710205078125
100 domains visited
Cumulative time: 1.0320115089416504

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 12] [/input-12, 12] [/input-12, 59] [/input-12, 59] [/input-12, 12] [/input-12, 12] [/input-12, 59] [/input-12, 0] [/input-12, 12] 
split level 1: [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 0] [/input-12, 10] [/input-12, 0] 
split level 2: [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-12, 10] [/input-8, 1573] [/input-8, 470] 
split level 3: [/input-12, 58] [/input-8, 470] [/input-8, 470] [/input-12, 58] [/input-12, 58] [/input-8, 470] [/input-8, 470] [/input-12, 58] [/input-8, 470] [/input-8, 461] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07463884353637695
10 lb beta sum: 0.3701663911342621, worst -0.09714758396148682
Time: prepare 0.0079    bound 0.1346    transfer 0.0007    finalize 0.0025    func 0.1483    
Accumulated time: func 0.4461    prepare 0.0375    bound 0.3998    transfer 0.0030    finalize 0.0082    
all_split False
======================Cut inference begins======================
max lb tensor(0.07089862) min lb tensor(-0.05598037)
Number of Verified Splits: 120 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 19.
#cuts 1-3: 16
#cuts 4-6: 3
#cuts >= 20: 0
BICCOS time: 0.019672870635986328 
BICCOS Cumulative time: 0.04288887977600098
Preprocessing time: 0.011662006378173828 Inference time: 0.005529642105102539 Add cuts time: 0.0019254684448242188 Cut analysis time: 0.0005557537078857422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02275 (3), -0.02255 (3), -0.02248 (3), -0.02216 (3), -0.02106 (3), -0.02090 (3), -0.02084 (3), -0.02068 (3), -0.02062 (3), -0.02034 (3), -0.01987 (3), -0.01976 (3), -0.01962 (3), -0.01954 (3), -0.01913 (3), -0.01896 (3), -0.01852 (3), -0.01836 (3), -0.01807 (3), -0.01791 (3), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0193    set_bounds 0.0151    solve 0.1484    add 0.0923    
Accumulated time: pickout 0.0028    decision 0.5548    set_bounds 0.0366    solve 0.3930    add 0.2389    
Current (lb-rhs): -0.0227469801902771
150 domains visited
Cumulative time: 1.328214406967163

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 0] [/input-12, 10] [/input-12, 10] [/input-12, 0] 
split level 1: [/input-12, 10] [/input-12, 10] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 10] [/input-12, 58] [/input-12, 58] [/input-12, 10] 
split level 2: [/input-12, 58] [/input-12, 58] [/input-8, 1581] [/input-8, 1637] [/input-8, 461] [/input-8, 1637] [/input-8, 1573] [/input-8, 1573] [/input-8, 1573] [/input-8, 1573] 
split level 3: [/input-8, 309] [/input-8, 309] [/input-8, 1637] [/input-8, 309] [/input-8, 1637] [/input-8, 309] [/input-8, 470] [/input-8, 470] [/input-8, 470] [/input-8, 470] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03354775905609131
10 lb beta sum: 0.35573339462280273, worst -0.12704531848430634
Time: prepare 0.0080    bound 0.1353    transfer 0.0007    finalize 0.0025    func 0.1491    
Accumulated time: func 0.5951    prepare 0.0457    bound 0.5351    transfer 0.0037    finalize 0.0107    
all_split False
======================Cut inference begins======================
max lb tensor(0.06036997) min lb tensor(-0.01487410)
Number of Verified Splits: 302 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 21
#cuts 4-6: 21
#cuts >= 20: 0
BICCOS time: 0.033739566802978516 
BICCOS Cumulative time: 0.07662844657897949
Preprocessing time: 0.011552572250366211 Inference time: 0.013782262802124023 Add cuts time: 0.00728917121887207 Cut analysis time: 0.001115560531616211
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0192    set_bounds 0.0150    solve 0.1492    add 0.0263    
Accumulated time: pickout 0.0038    decision 0.5740    set_bounds 0.0515    solve 0.5422    add 0.2652    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
150 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 0] 
split level 3: [/input-12, 10] 
split level 4: [/input-8, 283] 
split level 5: [/input-12, 58] 
split level 6: [/input-8, 470] 
split level 7: [/input-8, 461] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.15052008628845215
10 lb beta sum: 0.4624897241592407, worst -0.1487790048122406
Time: prepare 0.0051    bound 0.1469    transfer 0.0009    finalize 0.0014    func 0.1561    
Accumulated time: func 0.7512    prepare 0.0513    bound 0.6820    transfer 0.0046    finalize 0.0121    
all_split False
======================Cut inference begins======================
max lb tensor(0.14378899) min lb tensor(-0.14862840)
Number of Verified Splits: 182 of 256
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21644186973571777
10 lb beta sum: 0.5418720841407776, worst -0.1915411353111267
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 45.
#cuts 1-3: 21
#cuts 4-6: 23
#cuts 7-9: 1
#cuts >= 20: 0
BICCOS time: 0.26880669593811035 
BICCOS Cumulative time: 0.34543514251708984
Preprocessing time: 0.007024049758911133 Inference time: 0.25418782234191895 Add cuts time: 0.006346940994262695 Cut analysis time: 0.0012478828430175781
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14863 (8), -0.14644 (8), -0.14641 (8), -0.14360 (8), -0.14335 (8), -0.14251 (8), -0.14117 (8), -0.14077 (8), -0.14065 (8), -0.14042 (8), -0.13788 (8), -0.13740 (8), -0.13560 (8), -0.13374 (8), -0.13310 (8), -0.13016 (8), -0.12530 (8), -0.12456 (8), -0.12311 (8), -0.12288 (8), 
Length of domains: 74
Time: pickout 0.0004    decision 0.0224    set_bounds 0.0209    solve 0.1561    add 0.0012    
Accumulated time: pickout 0.0042    decision 0.5964    set_bounds 0.0724    solve 0.6983    add 0.2664    
Current (lb-rhs): -0.14862839877605438
224 domains visited
Cumulative time: 2.046880006790161

BaB round 2
batch: 74
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 794] [/input-8, 794] [/input-8, 796] [/input-8, 796] [/input-8, 794] [/input-8, 794] [/input-8, 796] [/input-8, 796] [/input-8, 794] [/input-8, 794] 
split level 1: [/input-8, 1612] [/input-8, 1612] [/input-8, 794] [/input-8, 1581] [/input-8, 1612] [/input-8, 1612] [/input-8, 794] [/input-8, 1581] [/input-8, 1612] [/input-8, 1612] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14494609832763672
10 lb beta sum: 0.3726220428943634, worst -0.14338140189647675
Time: prepare 0.0060    bound 0.1486    transfer 0.0019    finalize 0.0015    func 0.1600    
Accumulated time: func 0.9112    prepare 0.0575    bound 0.8306    transfer 0.0065    finalize 0.0136    
all_split False
======================Cut inference begins======================
max lb tensor(0.01539612) min lb tensor(-0.14335221)
Number of Verified Splits: 38 of 296
cut disabled for branching node selection
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11626160144805908
10 lb beta sum: 0.4919182062149048, worst -0.12482768297195435
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 50.
#cuts 1-3: 21
#cuts 4-6: 23
#cuts 7-9: 4
#cuts 10-12: 2
#cuts >= 20: 0
BICCOS time: 0.18476271629333496 
BICCOS Cumulative time: 0.5301978588104248
Preprocessing time: 0.008844137191772461 Inference time: 0.173112154006958 Add cuts time: 0.0012700557708740234 Cut analysis time: 0.0015363693237304688
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14335 (10), -0.14111 (10), -0.14110 (10), -0.13801 (10), -0.13797 (10), -0.13687 (10), -0.13552 (10), -0.13510 (10), -0.13497 (10), -0.13475 (10), -0.13467 (10), -0.13242 (10), -0.13241 (10), -0.13217 (10), -0.13174 (10), -0.12974 (10), -0.12928 (10), -0.12860 (10), -0.12792 (10), -0.12712 (10), 
Length of domains: 258
Time: pickout 0.0015    decision 0.0149    set_bounds 0.1537    solve 0.1600    add 0.0016    
Accumulated time: pickout 0.0057    decision 0.6113    set_bounds 0.2260    solve 0.8583    add 0.2680    
Current (lb-rhs): -0.143352210521698
482 domains visited
Cumulative time: 2.5645110607147217

BaB round 3
batch: 258
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1581] [/input-8, 1581] [/input-8, 1573] [/input-8, 794] [/input-8, 1571] [/input-8, 1581] [/input-8, 1573] [/input-8, 794] [/input-8, 1581] [/input-8, 1581] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14165830612182617
10 lb beta sum: 0.3933102488517761, worst -0.14007136225700378
Time: prepare 0.0102    bound 0.1510    transfer 0.0024    finalize 0.0026    func 0.1696    
Accumulated time: func 1.0808    prepare 0.0679    bound 0.9816    transfer 0.0089    finalize 0.0162    
all_split False
======================Cut inference begins======================
max lb tensor(0.00574422) min lb tensor(-0.14003550)
Number of Verified Splits: 3 of 516
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 34.
#cuts 1-3: 12
#cuts 4-6: 22
#cuts >= 20: 0
BICCOS time: 0.018030881881713867 
BICCOS Cumulative time: 0.5482287406921387
Preprocessing time: 0.014716386795043945 Inference time: 0.0002951622009277344 Add cuts time: 0.002031564712524414 Cut analysis time: 0.0009877681732177734
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.14004 (11), -0.13779 (11), -0.13777 (11), -0.13463 (11), -0.13456 (11), -0.13378 (11), -0.13209 (11), -0.13188 (11), -0.13168 (11), -0.13165 (11), -0.13164 (11), -0.13091 (11), -0.12965 (11), -0.12938 (11), -0.12907 (11), -0.12865 (11), -0.12864 (11), -0.12829 (11), -0.12648 (11), -0.12635 (11), 
Length of domains: 513
Time: pickout 0.0034    decision 0.0259    set_bounds 0.0219    solve 0.1697    add 0.0018    
Accumulated time: pickout 0.0091    decision 0.6372    set_bounds 0.2479    solve 1.0281    add 0.2697    
Current (lb-rhs): -0.1400354951620102
995 domains visited
Cumulative time: 2.8059005737304688

BaB round 4
batch: 513
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1637] [/input-8, 1581] [/input-8, 1573] [/input-8, 796] [/input-8, 796] [/input-8, 1581] [/input-8, 1573] [/input-8, 1571] [/input-8, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1385677456855774
10 lb beta sum: 0.3949999511241913, worst -0.1370440423488617
Time: prepare 0.0201    bound 0.1649    transfer 0.0027    finalize 0.0043    func 0.1995    
Accumulated time: func 1.2803    prepare 0.0883    bound 1.1465    transfer 0.0116    finalize 0.0204    
all_split False
======================Cut inference begins======================
max lb tensor(0.04310164) min lb tensor(-0.13702610)
Number of Verified Splits: 12 of 1026
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 37.
#cuts 1-3: 12
#cuts 4-6: 23
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.03466010093688965 
BICCOS Cumulative time: 0.5828888416290283
Preprocessing time: 0.030943632125854492 Inference time: 0.0013072490692138672 Add cuts time: 0.0012745857238769531 Cut analysis time: 0.001134634017944336
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13703 (12), -0.13478 (12), -0.13475 (12), -0.13171 (12), -0.13161 (12), -0.13124 (12), -0.12929 (12), -0.12922 (12), -0.12909 (12), -0.12882 (12), -0.12826 (12), -0.12768 (12), -0.12738 (12), -0.12648 (12), -0.12601 (12), -0.12598 (12), -0.12544 (12), -0.12542 (12), -0.12540 (12), -0.12537 (12), 
Length of domains: 1014
Time: pickout 0.0060    decision 0.0447    set_bounds 0.0443    solve 0.1998    add 0.0035    
Accumulated time: pickout 0.0151    decision 0.6818    set_bounds 0.2923    solve 1.2278    add 0.2733    
Current (lb-rhs): -0.1370261013507843
2009 domains visited
Cumulative time: 3.14021897315979

BaB round 5
batch: 1014
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1182] [/input-8, 1612] [/input-8, 1612] [/input-8, 1581] [/input-8, 1637] [/input-8, 1612] [/input-8, 1612] [/input-8, 796] [/input-8, 1571] [/input-8, 1612] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1350337266921997
10 lb beta sum: 0.39017167687416077, worst -0.13351361453533173
Time: prepare 0.0397    bound 0.2283    transfer 0.0031    finalize 0.0100    func 0.2956    
Accumulated time: func 1.5758    prepare 0.1282    bound 1.3749    transfer 0.0147    finalize 0.0304    
all_split False
======================Cut inference begins======================
max lb tensor(0.02016112) min lb tensor(-0.13350815)
Number of Verified Splits: 160 of 2028
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 12
#cuts 4-6: 28
#cuts 7-9: 2
#cuts >= 20: 0
BICCOS time: 0.08682727813720703 
BICCOS Cumulative time: 0.6697161197662354
Preprocessing time: 0.06206011772155762 Inference time: 0.019045352935791016 Add cuts time: 0.004328250885009766 Cut analysis time: 0.0013935565948486328
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13351 (13), -0.13120 (13), -0.13102 (13), -0.12970 (13), -0.12863 (13), -0.12828 (13), -0.12786 (13), -0.12763 (13), -0.12748 (13), -0.12570 (13), -0.12559 (13), -0.12549 (13), -0.12545 (13), -0.12534 (13), -0.12452 (13), -0.12408 (13), -0.12405 (13), -0.12367 (13), -0.12344 (13), -0.12297 (13), 
Length of domains: 1868
Time: pickout 0.0157    decision 0.0719    set_bounds 0.0879    solve 0.2959    add 0.0067    
Accumulated time: pickout 0.0308    decision 0.7538    set_bounds 0.3802    solve 1.5238    add 0.2799    
Current (lb-rhs): -0.13350814580917358
3877 domains visited
Cumulative time: 3.7092885971069336

BaB round 6
batch: 1868
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 460] [/input-8, 1571] [/input-8, 1637] [/input-8, 460] [/input-8, 1182] [/input-8, 1571] [/input-8, 1637] [/input-8, 460] [/input-8, 174] [/input-8, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1319746971130371
10 lb beta sum: 0.387511283159256, worst -0.1304493248462677
Time: prepare 0.0760    bound 0.3549    transfer 0.0158    finalize 0.0196    func 0.4903    
Accumulated time: func 2.0661    prepare 0.2045    bound 1.7298    transfer 0.0306    finalize 0.0501    
all_split False
======================Cut inference begins======================
max lb tensor(0.03587623) min lb tensor(-0.13044338)
Number of Verified Splits: 394 of 3736
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 53.
#cuts 1-3: 12
#cuts 4-6: 31
#cuts 7-9: 10
#cuts >= 20: 0
BICCOS time: 0.17881536483764648 
BICCOS Cumulative time: 0.8485314846038818
Preprocessing time: 0.11436152458190918 Inference time: 0.050909996032714844 Add cuts time: 0.011521339416503906 Cut analysis time: 0.0020225048065185547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.13044 (14), -0.12810 (14), -0.12755 (14), -0.12753 (14), -0.12617 (14), -0.12562 (14), -0.12542 (14), -0.12534 (14), -0.12523 (14), -0.12516 (14), -0.12494 (14), -0.12431 (14), -0.12342 (14), -0.12339 (14), -0.12323 (14), -0.12307 (14), -0.12280 (14), -0.12243 (14), -0.12233 (14), -0.12223 (14), 
Length of domains: 3342
Time: pickout 0.0260    decision 0.2554    set_bounds 0.1592    solve 0.4915    add 0.0147    
Accumulated time: pickout 0.0569    decision 1.0091    set_bounds 0.5394    solve 2.0153    add 0.2947    
Current (lb-rhs): -0.13044337928295135
7219 domains visited
Cumulative time: 4.84332537651062

BaB round 7
batch: 3342
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1571] [/input-8, 174] [/input-8, 1571] [/input-8, 1571] [/input-8, 309] [/input-8, 1637] [/input, 935] [/input-8, 1637] [/input-8, 1571] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13066577911376953
10 lb beta sum: 0.3867832124233246, worst -0.1291346251964569
Time: prepare 0.1440    bound 0.5902    transfer 0.0474    finalize 0.0349    func 0.8609    
Accumulated time: func 2.9269    prepare 0.3488    bound 2.3200    transfer 0.0780    finalize 0.0849    
all_split False
======================Cut inference begins======================
max lb tensor(0.02713771) min lb tensor(-0.12912562)
Number of Verified Splits: 807 of 6684
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 74.
#cuts 1-3: 12
#cuts 4-6: 39
#cuts 7-9: 23
#cuts >= 20: 0
BICCOS time: 0.5123589038848877 
BICCOS Cumulative time: 1.3608903884887695
Preprocessing time: 0.20651578903198242 Inference time: 0.27451467514038086 Add cuts time: 0.02835988998413086 Cut analysis time: 0.0029685497283935547
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12913 (15), -0.12678 (15), -0.12621 (15), -0.12619 (15), -0.12484 (15), -0.12430 (15), -0.12406 (15), -0.12401 (15), -0.12390 (15), -0.12375 (15), -0.12299 (15), -0.12228 (15), -0.12213 (15), -0.12208 (15), -0.12190 (15), -0.12175 (15), -0.12094 (15), -0.12091 (15), -0.12074 (15), -0.12068 (15), 
Length of domains: 5877
Time: pickout 0.0459    decision 0.1974    set_bounds 0.4694    solve 0.8628    add 0.0418    
Accumulated time: pickout 0.1028    decision 1.2065    set_bounds 1.0088    solve 2.8781    add 0.3365    
Current (lb-rhs): -0.12912562489509583
13096 domains visited
Cumulative time: 6.987848520278931

BaB round 8
batch: 4096
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 935] [/input-8, 460] [/input-8, 1571] [/input-8, 1571] [/input-8, 1637] [/input-8, 1182] [/input-8, 309] [/input-8, 1571] [/input, 935] [/input-8, 174] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1269932985305786
10 lb beta sum: 0.38594919443130493, worst -0.1254970282316208
Time: prepare 0.1769    bound 0.7050    transfer 0.0210    finalize 0.2045    func 1.1618    
Accumulated time: func 4.0888    prepare 0.5260    bound 3.0250    transfer 0.0990    finalize 0.2895    
all_split False
======================Cut inference begins======================
max lb tensor(0.03240193) min lb tensor(-0.12540182)
Number of Verified Splits: 1160 of 8192
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 99.
#cuts 1-3: 12
#cuts 4-6: 50
#cuts 7-9: 36
#cuts 10-12: 1
#cuts >= 20: 0
BICCOS time: 0.47420287132263184 
BICCOS Cumulative time: 1.8350932598114014
Preprocessing time: 0.2564246654510498 Inference time: 0.1739637851715088 Add cuts time: 0.03968358039855957 Cut analysis time: 0.004130840301513672
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12913 (15), -0.12678 (15), -0.12619 (15), -0.12540 (16), -0.12430 (15), -0.12406 (16), -0.12375 (15), -0.12328 (16), -0.12323 (16), -0.12312 (16), -0.12299 (15), -0.12228 (15), -0.12213 (15), -0.12208 (15), -0.12113 (16), -0.12097 (16), -0.12094 (15), -0.12068 (15), -0.12013 (16), -0.12011 (15), 
Length of domains: 8813
Time: pickout 0.0544    decision 0.2264    set_bounds 0.3646    solve 1.1637    add 0.0302    
Accumulated time: pickout 0.1572    decision 1.4329    set_bounds 1.3735    solve 4.0418    add 0.3667    
Current (lb-rhs): -0.12912562489509583
20128 domains visited
current_vram/total_varm: 12.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.324992179870605

BaB round 9
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1182] [/input-8, 1637] [/input-8, 174] [/input-8, 1571] [/input-8, 1637] [/input-8, 1573] [/input-8, 174] [/input-8, 1819] [/input-8, 1571] [/input-8, 1182] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1298971176147461
10 lb beta sum: 0.3855496644973755, worst -0.12834982573986053
Time: prepare 0.3625    bound 1.3494    transfer 0.0560    finalize 0.0898    func 1.9680    
Accumulated time: func 6.0568    prepare 0.8888    bound 4.3744    transfer 0.1550    finalize 0.3793    
all_split False
======================Cut inference begins======================
max lb tensor(0.03369460) min lb tensor(-0.12834704)
Number of Verified Splits: 2898 of 16384
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 157.
#cuts 1-3: 13
#cuts 4-6: 60
#cuts 7-9: 81
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 1.3070316314697266 
BICCOS Cumulative time: 3.142124891281128
Preprocessing time: 0.7568323612213135 Inference time: 0.4379847049713135 Add cuts time: 0.10521078109741211 Cut analysis time: 0.0070037841796875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12835 (16), -0.12600 (16), -0.12540 (16), -0.12351 (16), -0.12219 (16), -0.12160 (17), -0.12131 (16), -0.12130 (16), -0.12096 (16), -0.12086 (17), -0.12028 (17), -0.12021 (16), -0.11954 (17), -0.11950 (17), -0.11945 (17), -0.11933 (17), -0.11878 (16), -0.11876 (17), -0.11871 (17), -0.11870 (16), 
Length of domains: 14107
Time: pickout 0.1043    decision 0.6476    set_bounds 0.9846    solve 1.9713    add 0.0472    
Accumulated time: pickout 0.2615    decision 2.0805    set_bounds 2.3581    solve 6.0131    add 0.4138    
Current (lb-rhs): -0.12834703922271729
33614 domains visited
current_vram/total_varm: 22.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.43729829788208

BaB round 10
batch: 14107
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 174] [/input-8, 1637] [/input-8, 1637] [/input-8, 1182] [/input-8, 1819] [/input-8, 1571] [/input-8, 174] [/input-8, 174] [/input-8, 1819] [/input-8, 1637] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12613725662231445
10 lb beta sum: 0.37414926290512085, worst -0.12457714974880219
Time: prepare 0.6512    bound 2.4285    transfer 0.1405    finalize 0.5012    func 3.9080    
Accumulated time: func 9.9648    prepare 1.5404    bound 6.8028    transfer 0.2956    finalize 0.8805    
all_split False
======================Cut inference begins======================
max lb tensor(0.17497605) min lb tensor(-0.12455785)
Number of Verified Splits: 6401 of 28214
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 124.
#cuts 1-3: 17
#cuts 4-6: 59
#cuts 7-9: 45
#cuts 10-12: 3
#cuts >= 20: 0
BICCOS time: 2.4050791263580322 
BICCOS Cumulative time: 5.54720401763916
Preprocessing time: 0.8960015773773193 Inference time: 1.3401546478271484 Add cuts time: 0.16357088088989258 Cut analysis time: 0.005352020263671875
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12456 (17), -0.12382 (17), -0.12221 (17), -0.12161 (17), -0.12148 (17), -0.12087 (17), -0.12025 (17), -0.11972 (17), -0.11899 (17), -0.11857 (18), -0.11840 (17), -0.11805 (17), -0.11776 (17), -0.11766 (17), -0.11756 (18), -0.11754 (17), -0.11751 (17), -0.11725 (18), -0.11684 (18), -0.11680 (17), 
Length of domains: 21813
Time: pickout 0.2296    decision 1.0507    set_bounds 1.5284    solve 3.9132    add 0.0623    
Accumulated time: pickout 0.4911    decision 3.1312    set_bounds 3.8865    solve 9.9263    add 0.4761    
Current (lb-rhs): -0.12455785274505615
55427 domains visited
Cumulative time: 23.727171659469604

BaB round 11
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 309] [/input-8, 1819] [/input-8, 1573] [/input-8, 1637] [/input, 3259] [/input-12, 8] [/input-8, 1182] [/input-8, 1819] [/input-8, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12311667203903198
10 lb beta sum: 0.4629153609275818, worst -0.12155227363109589
Time: prepare 0.7893    bound 2.6976    transfer 0.1495    finalize 0.2098    func 4.0626    
Accumulated time: func 14.0274    prepare 2.3301    bound 9.5005    transfer 0.4451    finalize 1.0903    
all_split False
======================Cut inference begins======================
max lb tensor(0.17878169) min lb tensor(-0.12153190)
Number of Verified Splits: 6840 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 47.
#cuts 1-3: 20
#cuts 4-6: 24
#cuts 7-9: 3
#cuts >= 20: 0
BICCOS time: 2.296597480773926 
BICCOS Cumulative time: 7.843801498413086
Preprocessing time: 1.0521676540374756 Inference time: 1.095921516418457 Add cuts time: 0.14694452285766602 Cut analysis time: 0.0015637874603271484
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12153 (18), -0.12052 (18), -0.11980 (18), -0.11947 (18), -0.11936 (18), -0.11919 (18), -0.11858 (18), -0.11854 (19), -0.11817 (18), -0.11757 (18), -0.11753 (19), -0.11745 (18), -0.11722 (19), -0.11721 (18), -0.11713 (18), -0.11689 (18), -0.11685 (18), -0.11681 (19), -0.11670 (18), -0.11652 (18), 
Length of domains: 31357
Time: pickout 0.2386    decision 1.6473    set_bounds 2.1375    solve 4.4944    add 0.0868    
Accumulated time: pickout 0.7298    decision 4.7784    set_bounds 6.0239    solve 14.4207    add 0.5629    
Current (lb-rhs): -0.1215319037437439
81355 domains visited
Cumulative time: 34.74369406700134

BaB round 12
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1637] [/input-12, 8] [/input-8, 1182] [/input-8, 309] [/input-8, 174] [/input, 935] [/input-8, 1182] [/input-8, 1819] [/input-8, 1637] [/input-8, 1819] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.121756911277771
10 lb beta sum: 1.094679355621338, worst -0.12151412665843964
Time: prepare 0.8247    bound 2.5387    transfer 0.1492    finalize 0.7866    func 4.5181    
Accumulated time: func 18.5455    prepare 3.1552    bound 12.0392    transfer 0.5943    finalize 1.8769    
all_split False
======================Cut inference begins======================
max lb tensor(0.64533067) min lb tensor(-0.12150204)
Number of Verified Splits: 27030 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 35.
#cuts 1-3: 24
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 6.216507434844971 
BICCOS Cumulative time: 14.060308933258057
Preprocessing time: 1.0767934322357178 Inference time: 4.684988737106323 Add cuts time: 0.4536404609680176 Cut analysis time: 0.0010848045349121094
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12150 (19), -0.12052 (18), -0.11980 (18), -0.11947 (18), -0.11916 (19), -0.11855 (19), -0.11854 (19), -0.11817 (18), -0.11757 (18), -0.11753 (19), -0.11745 (18), -0.11722 (19), -0.11713 (18), -0.11685 (18), -0.11681 (19), -0.11666 (19), -0.11652 (18), -0.11644 (19), -0.11639 (19), -0.11628 (19), 
Length of domains: 20711
Time: pickout 0.2454    decision 2.1028    set_bounds 1.9226    solve 4.5247    add 0.0279    
Accumulated time: pickout 0.9752    decision 6.8813    set_bounds 7.9465    solve 18.9454    add 0.5908    
Current (lb-rhs): -0.12150204181671143
87093 domains visited
Cumulative time: 50.1418182849884

BaB round 13
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1182] [/input-8, 309] [/input-8, 1819] [/input-12, 8] [/input-8, 309] [/input-8, 1819] [/input-8, 309] [/input-8, 1819] [/input-8, 1182] [/input-8, 460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.12074315547943115
10 lb beta sum: 1.6096335649490356, worst -0.11769843101501465
Time: prepare 0.8373    bound 2.5224    transfer 0.1500    finalize 0.2440    func 3.9735    
Accumulated time: func 22.5190    prepare 3.9929    bound 14.5616    transfer 0.7443    finalize 2.1209    
all_split False
======================Cut inference begins======================
max lb tensor(1.17851067) min lb tensor(-0.11764663)
Number of Verified Splits: 30996 of 32768
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 36.
#cuts 1-3: 25
#cuts 4-6: 11
#cuts >= 20: 0
BICCOS time: 7.4095330238342285 
BICCOS Cumulative time: 21.469841957092285
Preprocessing time: 1.6761484146118164 Inference time: 5.298482418060303 Add cuts time: 0.43372035026550293 Cut analysis time: 0.0011818408966064453
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.12150 (19), -0.11916 (19), -0.11855 (19), -0.11765 (19), -0.11685 (19), -0.11666 (19), -0.11650 (19), -0.11534 (19), -0.11527 (19), -0.11470 (19), -0.11449 (19), -0.11447 (19), -0.11445 (19), -0.11413 (19), -0.11390 (19), -0.11355 (19), -0.11300 (19), -0.11281 (19), -0.11263 (19), -0.11202 (19), 
Length of domains: 6099
Time: pickout 0.2691    decision 1.8466    set_bounds 1.9775    solve 3.9804    add 0.0296    
Accumulated time: pickout 1.2442    decision 8.7279    set_bounds 9.9240    solve 22.9258    add 0.6204    
Current (lb-rhs): -0.12150204181671143
88865 domains visited
Cumulative time: 66.03708744049072

BaB round 14
batch: 6099
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 309] [/input, 935] [/input-8, 1819] [/input-8, 309] [/input-8, 174] [/input, 935] [/input, 3259] [/input-12, 8] [/input-8, 1819] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11966842412948608
10 lb beta sum: 1.4417892694473267, worst -0.11656701564788818
Time: prepare 0.3292    bound 0.9998    transfer 0.0596    finalize 0.0787    func 1.5461    
Accumulated time: func 24.0651    prepare 4.3224    bound 15.5614    transfer 0.8038    finalize 2.1996    
all_split False
======================Cut inference begins======================
max lb tensor(0.76249582) min lb tensor(-0.11653942)
Number of Verified Splits: 8631 of 12198
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 2.0761454105377197 
BICCOS Cumulative time: 23.545987367630005
Preprocessing time: 0.4073009490966797 Inference time: 1.5546414852142334 Add cuts time: 0.1138150691986084 Cut analysis time: 0.0003879070281982422
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.11654 (20), -0.11475 (20), -0.11437 (20), -0.11408 (20), -0.11405 (20), -0.11402 (20), -0.11229 (20), -0.11223 (20), -0.11191 (20), -0.11191 (20), -0.11186 (20), -0.11159 (20), -0.11154 (20), -0.11123 (20), -0.11081 (20), -0.11065 (20), -0.11026 (20), -0.11025 (20), -0.11016 (20), -0.10974 (20), 
Length of domains: 3567
Time: pickout 0.1105    decision 0.3473    set_bounds 0.5397    solve 1.5501    add 0.0150    
Accumulated time: pickout 1.3547    decision 9.0752    set_bounds 10.4637    solve 24.4759    add 0.6354    
Current (lb-rhs): -0.11653941869735718
92432 domains visited
Cumulative time: 70.7776231765747

BaB round 15
batch: 3567
splitting decisions: 
split level 0: [/input-12, 8] [/input-8, 1819] [/input, 935] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-12, 8] [/input-8, 1573] [/input-8, 1613] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11815166473388672

all verified at 3th iter
Time: prepare 0.1961    bound 0.0701    transfer 0.0138    finalize 0.2376    func 0.5642    
Accumulated time: func 24.6293    prepare 4.5188    bound 15.6315    transfer 0.8176    finalize 2.4373    
all_split False
======================Cut inference begins======================
max lb tensor(0.16840792) min lb tensor(0.00011039)
Number of Verified Splits: 7134 of 7134
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.23038458824157715 
BICCOS Cumulative time: 23.776371955871582
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0657    decision 0.2068    set_bounds 0.2990    solve 0.5665    add 0.0016    
Accumulated time: pickout 1.4204    decision 9.2820    set_bounds 10.7627    solve 25.0424    add 0.6370    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
92432 domains visited
Cumulative time: 72.21133303642273


Properties batch 2, size 1
Remaining timeout: 126.28054594993591
Verifying property 2 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04859757]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
        -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04859757]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 796
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 160
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 971
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.0001087188720703125
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.048595964908599854
10 lb beta sum: 0.0, worst -0.048606038093566895
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0556    transfer 0.0001    finalize 0.0004    func 0.0563    
Accumulated time: func 0.0563    prepare 0.0002    bound 0.0556    transfer 0.0001    finalize 0.0004    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 59] 
split level 4: [/input-8, 1819] 
split level 5: [/input-12, 58] 
split level 6: [/input-12, 55] 
split level 7: [/input-12, 0] 
split level 8: [/input-12, 6] 
split level 9: [/input-8, 796] 
split level 10: [/input-8, 163] 
split level 11: [/input-8, 1045] 
split level 12: [/input-8, 794] 
split level 13: [/input-8, 166] 
split level 14: [/input-8, 470] 
split level 15: [/input-8, 473] 
split level 16: [/input-8, 465] 
split level 17: [/input-8, 497] 
split level 18: [/input-8, 461] 
split level 19: [/input-8, 1651] 
split level 20: [/input-8, 1614] 
split level 21: [/input, 3259] 
split level 22: [/input-8, 813] 
split level 23: [/input, 2950] 
split level 24: [/input, 420] 
split level 25: [/input-8, 595] 
split level 26: [/input, 398] 
split level 27: [/input-8, 460] 
split level 28: [/input-8, 457] 
split level 29: [/input-8, 1622] 
split level 30: [/input, 2764] 
split level 31: [/input-8, 1182] 
split level 32: [/input-8, 506] 
split level 33: [/input, 3292] 
split level 34: [/input-8, 505] 
split level 35: [/input-8, 1609] 
split level 36: [/input-8, 507] 
split level 37: [/input-8, 1921] 
split level 38: [/input-8, 508] 
split level 39: [/input-8, 1613] 
split level 40: [/input-8, 1197] 
split level 41: [/input, 2729] 
split level 42: [/input-8, 1054] 
split level 43: [/input, 901] 
split level 44: [/input, 900] 
split level 45: [/input, 2966] 
split level 46: [/input-8, 916] 
split level 47: [/input-8, 1637] 
split level 48: [/input-8, 1581] 
split level 49: [/input, 3244] 
split level 50: [/input, 583] 
split level 51: [/input, 2762] 
split level 52: [/input-8, 822] 
split level 53: [/input, 3257] 
split level 54: [/input-8, 1604] 
split level 55: [/input, 2761] 
split level 56: [/input-8, 1642] 
split level 57: [/input-8, 1601] 
split level 58: [/input, 2917] 
split level 59: [/input, 3399] 
split level 60: [/input, 2980] 
split level 61: [/input-8, 1014] 
split level 62: [/input-8, 959] 
split level 63: [/input-8, 1062] 
split level 64: [/input, 967] 
split level 65: [/input-8, 951] 
split level 66: [/input, 662] 
split level 67: [/input, 2731] 
split level 68: [/input-8, 367] 
split level 69: [/input-8, 458] 
split level 70: [/input-8, 283] 
split level 71: [/input, 379] 
split level 72: [/input-8, 340] 
split level 73: [/input, 3089] 
split level 74: [/input-8, 1007] 
split level 75: [/input, 3513] 
split level 76: [/input-8, 589] 
split level 77: [/input, 418] 
split level 78: [/input, 2765] 
split level 79: [/input, 892] 
split level 80: [/input, 903] 
split level 81: [/input, 3533] 
split level 82: [/input-8, 174] 
split level 83: [/input, 2780] 
split level 84: [/input-8, 1922] 
split level 85: [/input, 963] 
split level 86: [/input-8, 1975] 
split level 87: [/input, 1354] 
split level 88: [/input, 2599] 
split level 89: [/input, 3105] 
split level 90: [/input, 2779] 
split level 91: [/input, 332] 
split level 92: [/input, 646] 
split level 93: [/input, 2120] 
split level 94: [/input, 1322] 
split level 95: [/input, 1304] 
split level 96: [/input-8, 348] 
split level 97: [/input, 660] 
split level 98: [/input-8, 982] 
split level 99: [/input-8, 382] 
split level 100: [/input, 2321] 
split level 101: [/input, 2919] 
split level 102: [/input, 3227] 
split level 103: [/input, 2600] 
split level 104: [/input, 3416] 
split level 105: [/input, 2121] 
split level 106: [/input, 3090] 
split level 107: [/input, 3256] 
split level 108: [/input, 2854] 
split level 109: [/input, 661] 
split level 110: [/input, 228] 
split level 111: [/input, 2734] 
split level 112: [/input-8, 274] 
split level 113: [/input, 805] 
split level 114: [/input-8, 1612] 
split level 115: [/input, 2916] 
split level 116: [/input-8, 911] 
split level 117: [/input, 948] 
split level 118: [/input, 1303] 
split level 119: [/input, 949] 
split level 120: [/input, 2122] 
split level 121: [/input, 3255] 
split level 122: [/input, 2049] 
split level 123: [/input, 2247] 
split level 124: [/input, 924] 
split level 125: [/input, 929] 
split level 126: [/input, 25] 
split level 127: [/input-8, 1101] 
split level 128: [/input, 973] 
split level 129: [/input-8, 1805] 
split level 130: [/input, 2053] 
split level 131: [/input, 909] 
split level 132: [/input, 3279] 
split level 133: [/input, 2153] 
split level 134: [/input, 3467] 
split level 135: [/input, 2070] 
split level 136: [/input, 945] 
split level 137: [/input, 2796] 
split level 138: [/input-8, 1573] 
split level 139: [/input, 417] 
split level 140: [/input, 3202] 
split level 141: [/input, 3564] 
split level 142: [/input, 3563] 
split level 143: [/input, 2246] 
split level 144: [/input, 3373] 
split level 145: [/input-8, 1923] 
split level 146: [/input, 2322] 
split level 147: [/input, 328] 
split level 148: [/input, 796] 
split level 149: [/input, 935] 
split level 150: [/input, 1487] 
split level 151: [/input, 2714] 
split level 152: [/input, 300] 
split level 153: [/input, 3106] 
split level 154: [/input, 2117] 
split level 155: [/input, 2051] 
split level 156: [/input, 2373] 
split level 157: [/input, 983] 
split level 158: [/input, 2727] 
split level 159: [/input, 37] 
split level 160: [/input, 3226] 
split level 161: [/input, 676] 
split level 162: [/input, 2323] 
split level 163: [/input, 781] 
split level 164: [/input, 2334] 
split level 165: [/input, 3358] 
split level 166: [/input, 2052] 
split level 167: [/input, 402] 
split level 168: [/input, 919] 
split level 169: [/input, 3091] 
split level 170: [/input, 227] 
split level 171: [/input-8, 2015] 
split level 172: [/input, 2050] 
split level 173: [/input, 22] 
split level 174: [/input, 230] 
split level 175: [/input, 26] 
split level 176: [/input, 2503] 
split level 177: [/input, 1471] 
split level 178: [/input, 77] 
split level 179: [/input, 2152] 
split level 180: [/input, 2337] 
split level 181: [/input, 3107] 
split level 182: [/input, 3289] 
split level 183: [/input, 2884] 
split level 184: [/input, 182] 
split level 185: [/input, 3186] 
split level 186: [/input, 2054] 
split level 187: [/input, 232] 
split level 188: [/input, 2324] 
split level 189: [/input, 2061] 
split level 190: [/input, 668] 
split level 191: [/input, 2372] 
split level 192: [/input, 2341] 
split level 193: [/input, 3374] 
split level 194: [/input, 2075] 
split level 195: [/input, 2333] 
split level 196: [/input, 2330] 
split level 197: [/input, 2883] 
split level 198: [/input-8, 2007] 
split level 199: [/input, 2371] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.04850196838378906
10 lb beta sum: 0.0, worst -0.04850482940673828
Time: prepare 0.0115    bound 0.0963    transfer 0.0012    finalize 0.0025    func 0.1142    
Accumulated time: func 0.1705    prepare 0.0218    bound 0.1519    transfer 0.0013    finalize 0.0029    
all_split False
======================Cut inference begins======================
max lb tensor(0.38106394) min lb tensor(-0.04849821)
Number of Verified Splits: 10 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.010641813278198242 
BICCOS Cumulative time: 0.010641813278198242
Preprocessing time: 0.009943962097167969 Inference time: 0.0003981590270996094 Add cuts time: 0.00013709068298339844 Cut analysis time: 0.00016260147094726562
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0003    decision 0.5184    set_bounds 0.0084    solve 0.1143    add 0.0098    
Accumulated time: pickout 0.0003    decision 0.5184    set_bounds 0.0084    solve 0.1143    add 0.0098    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 0] 
split level 5: [/input-8, 794] 
split level 6: [/input-8, 470] 
split level 7: [/input-8, 461] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst 0.08447766304016113

all verified at 0th iter
Time: prepare 0.0051    bound 0.0098    transfer 0.0007    finalize 0.0015    func 0.0189    
Accumulated time: func 0.1894    prepare 0.0273    bound 0.1617    transfer 0.0021    finalize 0.0044    
all_split False
======================Cut inference begins======================
max lb tensor(0.30093795) min lb tensor(0.08447766)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 1.
#cuts 1-3: 1
#cuts >= 20: 0
BICCOS time: 0.007036685943603516 
BICCOS Cumulative time: 0.017678499221801758
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0216    set_bounds 0.0215    solve 0.0189    add 0.0003    
Accumulated time: pickout 0.0007    decision 0.5400    set_bounds 0.0299    solve 0.1332    add 0.0102    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.7972357273101807


Properties batch 3, size 1
Remaining timeout: 125.30779361724854
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 125.30758261680603
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 125.30755472183228
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 125.30753469467163
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 125.30751442909241
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 125.30749535560608
Verifying property 8 with 1 instances.
Verified by alpha-CROWN bound!
Result: safe in 74.6927 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
         -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 288, 1, 674] with unstable size 287 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 674] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [287]; unstable size 287; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 287] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 287] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81797123, -0.16427040,  0.28392243, -0.02352822,  0.05720711,
          0.13988900,  0.34796536,  2.02355766, -0.78494596]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
         -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.08it/s]100%|██████████| 1/1 [00:00<00:00,  9.07it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.01829529, -19.11191368, -19.11120224, -18.61349297, -18.97978783,
          -19.01415634, -17.75732231, -19.74451256, -21.61842537, -18.24022865],
         [-20.01829529, -19.11191368, -19.11120224, -18.61349297, -18.97978783,
          -19.01415634, -17.75732231, -19.74451256, -21.61842537, -18.24022865]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.35459137, 0.85617065, 0.48290634]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1131 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.6754586696624756
alpha/beta optimization time: 1.2031400203704834
initial alpha-crown bounds: tensor([[ 0.93886727,  0.00690556,  0.35141110,  0.04002130,  0.13587213,
          0.21446002,  0.44984025,  2.16908169, -0.63100052]], device='cuda:0')
Only one property for bab verification.
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6310005187988281
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.63399267196655
Verifying property 0 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 1, size 1
Remaining timeout: 198.633953332901
Verifying property 1 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 2, size 1
Remaining timeout: 198.63393115997314
Verifying property 2 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 3, size 1
Remaining timeout: 198.6339099407196
Verifying property 3 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 4, size 1
Remaining timeout: 198.63389134407043
Verifying property 4 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 5, size 1
Remaining timeout: 198.63387274742126
Verifying property 5 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 6, size 1
Remaining timeout: 198.63385486602783
Verifying property 6 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 7, size 1
Remaining timeout: 198.6338312625885
Verifying property 7 with 1 instances.
Verified by alpha-CROWN bound!

Properties batch 8, size 1
Remaining timeout: 198.63381266593933
Verifying property 8 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63100052]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
        -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63100052]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Warning: The number of verified candidates is less than 3, enable MTS.
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 674
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 282
Node /15 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 987
-----------------

======================Cut verification begins======================
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 9.799003601074219e-05
======================Cut verification ends======================
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6309995651245117
10 lb beta sum: 0.0, worst -0.631011962890625
Early stop at 11th iter due to 10 iterations no improvement!
Time: prepare 0.0002    bound 0.0549    transfer 0.0001    finalize 0.0001    func 0.0555    
Accumulated time: func 0.0555    prepare 0.0002    bound 0.0549    transfer 0.0001    finalize 0.0001    
Shallow-BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 68] 
split level 5: [/input-12, 86] 
split level 6: [/input-12, 32] 
split level 7: [/input-12, 59] 
split level 8: [/input-8, 868] 
split level 9: [/input-12, 92] 
split level 10: [/input-12, 15] 
split level 11: [/input-12, 14] 
split level 12: [/input-8, 870] 
split level 13: [/input-8, 36] 
split level 14: [/input-8, 155] 
split level 15: [/input-8, 467] 
split level 16: [/input-8, 1057] 
split level 17: [/input-8, 438] 
split level 18: [/input-8, 877] 
split level 19: [/input-8, 1379] 
split level 20: [/input, 2950] 
split level 21: [/input-8, 1126] 
split level 22: [/input-8, 149] 
split level 23: [/input-8, 430] 
split level 24: [/input-8, 1563] 
split level 25: [/input, 2949] 
split level 26: [/input-8, 35] 
split level 27: [/input-8, 883] 
split level 28: [/input-8, 1380] 
split level 29: [/input-8, 156] 
split level 30: [/input-8, 118] 
split level 31: [/input-8, 466] 
split level 32: [/input-8, 382] 
split level 33: [/input-8, 1571] 
split level 34: [/input-8, 1378] 
split level 35: [/input-8, 461] 
split level 36: [/input-8, 451] 
split level 37: [/input-8, 34] 
split level 38: [/input-8, 1124] 
split level 39: [/input-8, 442] 
split level 40: [/input-8, 1061] 
split level 41: [/input-8, 1044] 
split level 42: [/input-8, 1036] 
split level 43: [/input-8, 1053] 
split level 44: [/input, 2916] 
split level 45: [/input-8, 1388] 
split level 46: [/input-8, 1370] 
split level 47: [/input-8, 1628] 
split level 48: [/input, 389] 
split level 49: [/input-8, 944] 
split level 50: [/input-8, 1387] 
split level 51: [/input-8, 1027] 
split level 52: [/input-8, 1562] 
split level 53: [/input-8, 773] 
split level 54: [/input-8, 413] 
split level 55: [/input-8, 1509] 
split level 56: [/input-8, 1381] 
split level 57: [/input-8, 441] 
split level 58: [/input, 935] 
split level 59: [/input-8, 1382] 
split level 60: [/input-8, 182] 
split level 61: [/input-8, 1738] 
split level 62: [/input-8, 125] 
split level 63: [/input-8, 179] 
split level 64: [/input, 887] 
split level 65: [/input-8, 1358] 
split level 66: [/input-8, 945] 
split level 67: [/input-8, 1620] 
split level 68: [/input-8, 1355] 
split level 69: [/input-8, 884] 
split level 70: [/input-8, 446] 
split level 71: [/input-8, 119] 
split level 72: [/input-8, 1369] 
split level 73: [/input-8, 1386] 
split level 74: [/input-8, 1389] 
split level 75: [/input-12, 56] 
split level 76: [/input-12, 57] 
split level 77: [/input-8, 1109] 
split level 78: [/input, 650] 
split level 79: [/input-8, 955] 
split level 80: [/input, 343] 
split level 81: [/input, 138] 
split level 82: [/input-8, 1390] 
split level 83: [/input-8, 1612] 
split level 84: [/input-8, 410] 
split level 85: [/input-8, 212] 
split level 86: [/input-8, 20] 
split level 87: [/input, 937] 
split level 88: [/input, 155] 
split level 89: [/input-8, 140] 
split level 90: [/input, 134] 
split level 91: [/input, 916] 
split level 92: [/input, 2743] 
split level 93: [/input, 1481] 
split level 94: [/input-8, 1359] 
split level 95: [/input-8, 1621] 
split level 96: [/input, 117] 
split level 97: [/input-8, 585] 
split level 98: [/input-8, 402] 
split level 99: [/input, 1453] 
split level 100: [/input, 1451] 
split level 101: [/input, 156] 
split level 102: [/input-8, 1613] 
split level 103: [/input-8, 1739] 
split level 104: [/input-8, 1385] 
split level 105: [/input-8, 863] 
split level 106: [/input-8, 304] 
split level 107: [/input, 1499] 
split level 108: [/input, 917] 
split level 109: [/input-8, 1247] 
split level 110: [/input, 169] 
split level 111: [/input-8, 403] 
split level 112: [/input, 116] 
split level 113: [/input-8, 1291] 
split level 114: [/input, 1454] 
split level 115: [/input, 3363] 
split level 116: [/input-8, 2027] 
split level 117: [/input, 3009] 
split level 118: [/input-8, 1398] 
split level 119: [/input-8, 1747] 
split level 120: [/input-8, 431] 
split level 121: [/input-8, 412] 
split level 122: [/input-8, 1077] 
split level 123: [/input, 1303] 
split level 124: [/input, 885] 
split level 125: [/input, 3229] 
split level 126: [/input-8, 885] 
split level 127: [/input, 3252] 
split level 128: [/input-8, 1526] 
split level 129: [/input, 181] 
split level 130: [/input-8, 404] 
split level 131: [/input, 2757] 
split level 132: [/input-8, 218] 
split level 133: [/input-8, 235] 
split level 134: [/input-8, 1678] 
split level 135: [/input-8, 733] 
split level 136: [/input-8, 1329] 
split level 137: [/input, 3292] 
split level 138: [/input, 102] 
split level 139: [/input, 3273] 
split level 140: [/input, 1514] 
split level 141: [/input-8, 220] 
split level 142: [/input, 150] 
split level 143: [/input-8, 1670] 
split level 144: [/input, 130] 
split level 145: [/input, 2716] 
split level 146: [/input, 2765] 
split level 147: [/input-8, 447] 
split level 148: [/input-8, 407] 
split level 149: [/input, 2739] 
split level 150: [/input, 857] 
split level 151: [/input-8, 578] 
split level 152: [/input-8, 1622] 
split level 153: [/input-8, 176] 
split level 154: [/input, 2667] 
split level 155: [/input-8, 440] 
split level 156: [/input, 649] 
split level 157: [/input, 648] 
split level 158: [/input-8, 969] 
split level 159: [/input, 2751] 
split level 160: [/input-8, 1331] 
split level 161: [/input-8, 229] 
split level 162: [/input-8, 278] 
split level 163: [/input, 216] 
split level 164: [/input-8, 411] 
split level 165: [/input, 905] 
split level 166: [/input, 165] 
split level 167: [/input-8, 87] 
split level 168: [/input, 876] 
split level 169: [/input, 841] 
split level 170: [/input-8, 1219] 
split level 171: [/input-8, 296] 
split level 172: [/input, 2875] 
split level 173: [/input-8, 59] 
split level 174: [/input-8, 1539] 
split level 175: [/input-8, 961] 
split level 176: [/input, 235] 
split level 177: [/input-8, 174] 
split level 178: [/input-8, 62] 
split level 179: [/input, 1509] 
split level 180: [/input-8, 439] 
split level 181: [/input-8, 909] 
split level 182: [/input, 956] 
split level 183: [/input-8, 211] 
split level 184: [/input-8, 355] 
split level 185: [/input, 2766] 
split level 186: [/input, 2674] 
split level 187: [/input, 844] 
split level 188: [/input, 2720] 
split level 189: [/input, 1767] 
split level 190: [/input-8, 928] 
split level 191: [/input-8, 284] 
split level 192: [/input-8, 14] 
split level 193: [/input, 24] 
split level 194: [/input, 939] 
split level 195: [/input-8, 130] 
split level 196: [/input, 1165] 
split level 197: [/input, 1768] 
split level 198: [/input-8, 1347] 
split level 199: [/input, 1130] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.6308531761169434
10 lb beta sum: 0.0, worst -0.6308550834655762
Time: prepare 0.0116    bound 0.0965    transfer 0.0013    finalize 0.0029    func 0.1149    
Accumulated time: func 0.1703    prepare 0.0219    bound 0.1514    transfer 0.0014    finalize 0.0031    
all_split False
======================Cut inference begins======================
max lb tensor(0.33893442) min lb tensor(-0.63083982)
Number of Verified Splits: 7 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 7.
#cuts 1-3: 7
#cuts >= 20: 0
BICCOS time: 0.010811567306518555 
BICCOS Cumulative time: 0.010811567306518555
Preprocessing time: 0.01010584831237793 Inference time: 0.0003006458282470703 Add cuts time: 0.00012683868408203125 Cut analysis time: 0.00027823448181152344
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.60489 (1), -0.60481 (1), -0.60424 (1), -0.60408 (1), -0.60220 (1), -0.60144 (1), -0.60138 (1), -0.60124 (1), -0.60065 (1), -0.59956 (1), -0.59949 (1), -0.59679 (1), -0.59613 (1), -0.59579 (1), -0.59523 (1), -0.59267 (1), -0.59182 (1), -0.59134 (1), -0.59101 (1), -0.59061 (1), 
Length of domains: 50
Time: pickout 0.0004    decision 0.5240    set_bounds 0.0097    solve 0.1150    add 0.0695    
Accumulated time: pickout 0.0004    decision 0.5240    set_bounds 0.0097    solve 0.1150    add 0.0695    
Current (lb-rhs): -0.6048884391784668
50 domains visited
Cumulative time: 0.7913262844085693

Shallow-BaB round 2
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 20] [/input-12, 18] 
split level 2: [/input-12, 20] [/input-12, 86] [/input-12, 86] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 20] [/input-12, 86] [/input-12, 20] 
split level 3: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 86] [/input-12, 86] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.5662169456481934
10 lb beta sum: 1.4109927415847778, worst -0.4495921730995178
Time: prepare 0.0075    bound 0.1161    transfer 0.0007    finalize 0.0024    func 0.1294    
Accumulated time: func 0.2997    prepare 0.0297    bound 0.2675    transfer 0.0021    finalize 0.0055    
all_split False
======================Cut inference begins======================
max lb tensor(0.56413507) min lb tensor(-0.44907963)
Number of Verified Splits: 152 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 9.
#cuts 1-3: 9
#cuts >= 20: 0
BICCOS time: 0.019959449768066406 
BICCOS Cumulative time: 0.03077101707458496
Preprocessing time: 0.011581182479858398 Inference time: 0.005986213684082031 Add cuts time: 0.0021028518676757812 Cut analysis time: 0.0002892017364501953
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.21996 (2), -0.21952 (2), -0.21895 (2), -0.21651 (2), -0.21570 (2), -0.21541 (2), -0.21508 (2), -0.21464 (2), -0.21432 (2), -0.21055 (2), -0.20996 (2), -0.20925 (2), -0.20922 (2), -0.20887 (2), -0.20832 (2), -0.20691 (2), -0.20646 (2), -0.20531 (2), -0.20491 (2), -0.20346 (2), 
Length of domains: 50
Time: pickout 0.0011    decision 0.0197    set_bounds 0.0121    solve 0.1295    add 0.0867    
Accumulated time: pickout 0.0014    decision 0.5437    set_bounds 0.0218    solve 0.2444    add 0.1562    
Current (lb-rhs): -0.21996092796325684
100 domains visited
Cumulative time: 1.0605480670928955

Shallow-BaB round 3
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] 
split level 2: [/input-12, 86] [/input-12, 7] [/input-12, 7] [/input-12, 20] [/input-12, 7] [/input-12, 7] [/input-12, 20] [/input-12, 20] [/input-12, 86] [/input-12, 7] 
split level 3: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 7] [/input-12, 7] [/input-12, 32] [/input-12, 86] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.3658003807067871
10 lb beta sum: 1.3766350746154785, worst -0.20603907108306885
Time: prepare 0.0071    bound 0.1153    transfer 0.0007    finalize 0.0024    func 0.1282    
Accumulated time: func 0.4279    prepare 0.0371    bound 0.3829    transfer 0.0028    finalize 0.0079    
all_split False
======================Cut inference begins======================
max lb tensor(0.62425983) min lb tensor(-0.20534694)
Number of Verified Splits: 224 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 18.
#cuts 1-3: 18
#cuts >= 20: 0
BICCOS time: 0.02656841278076172 
BICCOS Cumulative time: 0.05733942985534668
Preprocessing time: 0.011480569839477539 Inference time: 0.009701013565063477 Add cuts time: 0.0049037933349609375 Cut analysis time: 0.0004830360412597656
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.10091 (3), -0.09691 (3), -0.09672 (3), -0.09536 (3), -0.07721 (3), -0.07668 (3), -0.07480 (3), -0.07458 (3), -0.07423 (3), -0.07399 (3), -0.07382 (3), -0.06945 (3), -0.06889 (3), -0.06865 (3), -0.06779 (3), -0.06768 (3), -0.06607 (3), -0.06457 (3), -0.06450 (3), -0.06291 (3), 
Length of domains: 50
Time: pickout 0.0010    decision 0.0193    set_bounds 0.0156    solve 0.1283    add 0.0988    
Accumulated time: pickout 0.0024    decision 0.5630    set_bounds 0.0374    solve 0.3727    add 0.2550    
Current (lb-rhs): -0.10091018676757812
150 domains visited
Cumulative time: 1.3503491878509521

Shallow-BaB round 4
batch: 50
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] 
split level 2: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 3: [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-12, 86] [/input-8, 868] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.257171630859375
10 lb beta sum: 2.041074752807617, worst -0.07906246185302734
Time: prepare 0.0075    bound 0.1331    transfer 0.0013    finalize 0.0023    func 0.1474    
Accumulated time: func 0.5753    prepare 0.0448    bound 0.5159    transfer 0.0041    finalize 0.0102    
all_split False
======================Cut inference begins======================
max lb tensor(0.44942188) min lb tensor(-0.07731032)
Number of Verified Splits: 347 of 400
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 38.
#cuts 1-3: 34
#cuts 4-6: 4
#cuts >= 20: 0
BICCOS time: 0.03936266899108887 
BICCOS Cumulative time: 0.09670209884643555
Preprocessing time: 0.011548995971679688 Inference time: 0.01510477066040039 Add cuts time: 0.01189565658569336 Cut analysis time: 0.0008132457733154297
======================Cut inference ends========================
Current worst splitting domains lb-rhs (depth):
-0.02958 (4), -0.02958 (4), -0.02957 (4), -0.02957 (4), -0.02955 (4), -0.02954 (4), -0.02952 (4), -0.02949 (4), -0.02921 (4), -0.02921 (4), -0.02919 (4), -0.02914 (4), -0.02894 (4), -0.02893 (4), -0.02891 (4), -0.02883 (4), -0.02701 (4), -0.02701 (4), -0.02700 (4), -0.02699 (4), 
Length of domains: 32
Time: pickout 0.0011    decision 0.0193    set_bounds 0.0155    solve 0.1475    add 0.2587    
Accumulated time: pickout 0.0035    decision 0.5823    set_bounds 0.0529    solve 0.5202    add 0.5137    
Current (lb-rhs): -0.029584884643554688
182 domains visited
Cumulative time: 1.8320550918579102

Shallow-BaB round 5
batch: 32
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 18] [/input-12, 18] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 18] [/input-12, 7] [/input-12, 7] 
split level 2: [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-8, 868] [/input-12, 7] [/input-8, 868] [/input-12, 7] [/input-8, 868] [/input-8, 868] [/input-8, 868] 
split level 3: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 4: [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] [/input-8, 870] 
split level 5: [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] [/input-8, 155] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23261499404907227

all verified at 5th iter
Time: prepare 0.0070    bound 0.0436    transfer 0.0013    finalize 0.0028    func 0.0569    
Accumulated time: func 0.6323    prepare 0.0521    bound 0.5595    transfer 0.0054    finalize 0.0130    
all_split False
======================Cut inference begins======================
max lb tensor(0.52575684) min lb tensor(0.00087905)
Number of Verified Splits: 384 of 384
Original cuts are inferred.
BICCOS cuts are added to the cut module.
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Total number of valid cuts: 42.
#cuts 1-3: 34
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.038401126861572266 
BICCOS Cumulative time: 0.1351032257080078
Preprocessing time: 0.010973215103149414 Inference time: 0.019399166107177734 Add cuts time: 0.007082462310791016 Cut analysis time: 0.0009462833404541016
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0010    decision 0.0244    set_bounds 0.0136    solve 0.0571    add 0.0299    
Accumulated time: pickout 0.0045    decision 0.6067    set_bounds 0.0665    solve 0.5773    add 0.5436    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
182 domains visited
No domains left, MTS early stop!

Back to Regular BaB

BaB round 1
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 72] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 86] 
split level 5: [/input-12, 32] 
split level 6: [/input-8, 868] 
split level 7: [/input-12, 92] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06093883514404297

all verified at 1th iter
Time: prepare 0.0051    bound 0.0123    transfer 0.0010    finalize 0.0013    func 0.0214    
Accumulated time: func 0.6537    prepare 0.0577    bound 0.5718    transfer 0.0064    finalize 0.0143    
all_split False
======================Cut inference begins======================
max lb tensor(1.68829727) min lb tensor(0.00646019)
Number of Verified Splits: 256 of 256
No cut inferred: All or none verified.
Total number of valid cuts: 42.
#cuts 1-3: 34
#cuts 4-6: 8
#cuts >= 20: 0
BICCOS time: 0.007264375686645508 
BICCOS Cumulative time: 0.14236760139465332
======================Cut inference ends========================
Length of domains: 0
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0206    solve 0.0215    add 0.0001    
Accumulated time: pickout 0.0049    decision 0.6288    set_bounds 0.0871    solve 0.5987    add 0.5437    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
182 domains visited
Cumulative time: 2.0723676681518555

Result: safe in 3.6155 seconds
############# Summary #############
Final verified acc: 55.00000000000001% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 110 , total falsified (unsafe/sat): 85 , timeout: 5
mean time for ALL instances (total 200):9.313774006786351, max time: 232.37832260131836
mean time for verified SAFE instances(total 110): 6.966402942484075, max time: 165.83138966560364
mean time for verified (SAFE + UNSAFE) instances (total 195): 3.953362566385514, max time: [2.411961317062378, 10.533735990524292, 0.04163622856140137, 0.027770280838012695, 0.03604006767272949, 0.04882979393005371, 0.03072643280029297, 0.27434706687927246, 2.350463628768921, 0.0698235034942627, 0.04700827598571777, 0.04236173629760742, 3.885831832885742, 0.047258853912353516, 0.0417943000793457, 0.04260063171386719, 0.043395280838012695, 0.027710676193237305, 0.03707575798034668, 0.038912057876586914, 2.373575448989868, 0.04550909996032715, 0.03632521629333496, 0.03066396713256836, 0.03079080581665039, 0.04668116569519043, 2.596438407897949, 0.06973552703857422, 0.06023597717285156, 0.043962717056274414, 2.311964273452759, 0.04832792282104492, 16.91831874847412, 165.83138966560364, 0.04930281639099121, 0.05328202247619629, 2.6179487705230713, 90.86761212348938, 2.83654522895813, 0.04629349708557129, 0.03145599365234375, 0.04718923568725586, 0.04512834548950195, 0.03573942184448242, 0.043195486068725586, 0.027541160583496094, 0.047931671142578125, 0.03785252571105957, 18.169640064239502, 0.04880690574645996, 0.029029130935668945, 0.04437541961669922, 2.4470555782318115, 2.4839577674865723, 0.2139873504638672, 0.06729507446289062, 2.5810558795928955, 0.05120539665222168, 0.050013065338134766, 0.049321889877319336, 2.799154758453369, 0.04643392562866211, 0.06269192695617676, 0.03106832504272461, 0.042722463607788086, 0.030791521072387695, 2.506016731262207, 0.046822309494018555, 134.28310203552246, 0.059617042541503906, 2.384906768798828, 0.03954458236694336, 3.7287817001342773, 0.047350406646728516, 161.69765901565552, 0.06542348861694336, 0.04633474349975586, 0.047132253646850586, 0.042070865631103516, 0.040795326232910156, 0.0379643440246582, 0.03182673454284668, 0.02999401092529297, 0.0438685417175293, 7.582607984542847, 0.06930732727050781, 2.5429186820983887, 0.0635824203491211, 0.031014680862426758, 0.031279802322387695, 0.029647111892700195, 0.03285336494445801, 13.639653444290161, 0.4355440139770508, 0.032892704010009766, 0.027308940887451172, 0.029593706130981445, 3.2899413108825684, 0.04331088066101074, 5.246939182281494, 0.04763484001159668, 2.1426141262054443, 3.4783358573913574, 0.05227470397949219, 7.271390914916992, 0.04601883888244629, 0.047168731689453125, 0.04424762725830078, 74.69268941879272, 3.6155147552490234]
mean time for verified SAFE + TIMEOUT instances (total 115): 16.1578566758529, max time: [209.82741951942444, 217.2336528301239, 232.37832260131836, 227.05142259597778, 205.35837650299072] 
mean time for verified UNSAFE instances (total 85): 0.05413384437561035, max time: 0.13441681861877441
safe-incomplete (total 79), index: [0, 7, 8, 11, 14, 17, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 37, 39, 40, 41, 42, 47, 49, 51, 52, 55, 60, 62, 68, 69, 70, 71, 73, 74, 75, 79, 81, 85, 86, 89, 98, 103, 107, 109, 110, 114, 115, 116, 117, 118, 121, 131, 133, 136, 139, 140, 142, 144, 146, 147, 148, 153, 157, 159, 161, 164, 166, 168, 171, 175, 177, 179, 180, 182, 186, 190, 192, 193, 197]
unsafe-pgd (total 85), index: [1, 3, 4, 5, 6, 9, 10, 12, 15, 16, 21, 25, 29, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 56, 58, 61, 63, 65, 72, 78, 80, 82, 84, 87, 88, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 106, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 134, 138, 141, 143, 145, 149, 150, 151, 152, 155, 156, 163, 165, 167, 169, 170, 173, 174, 176, 178, 183, 184, 188, 194, 195, 196]
safe (total 31), index: [2, 19, 24, 38, 48, 54, 57, 59, 64, 66, 67, 83, 93, 97, 104, 111, 120, 127, 132, 135, 137, 158, 160, 172, 181, 185, 187, 189, 191, 198, 199]
unknown (total 5), index: [13, 76, 77, 154, 162]
