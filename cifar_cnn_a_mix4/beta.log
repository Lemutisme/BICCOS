Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_mix4/beta.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_mix4
  path: models/sdp/cifar_cnn_a_mix4.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: depth_first
  cut:
    enabled: false
    cuts_path: /tmp/abcrown_cuts_27874
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: false
      auto_param: true
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: false
        restore_best_tree: false
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 17:22:34 2024 on w23g0003.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_mix4/beta.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.71758652, -10.60625553,  -8.48054504,  -7.71353006,  -8.18405724,
          -8.17642593,  -8.98493576,  -8.79066181, -11.70876884, -10.32774353]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [744]; unstable size 744; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 744] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 744] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 149] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.43510044, 2.04025793, 0.39722502, 0.03137314, 0.32232380, 0.68482637,
         0.70088977, 3.05900311, 1.95559084]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 2.2007 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
         -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [681]; unstable size 681; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 237, 1, 681] with unstable size 236 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 681] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 681] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [236]; unstable size 236; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 236] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 236] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86854815, -1.72656703,  7.80241537,  6.11302614,  6.77265549,
          6.66194534,  6.08438587,  7.59612942,  5.53368521]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
         -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.86604881, -21.89766502, -32.18166733, -30.40774727, -31.19883347,
          -31.09389877, -30.58707047, -32.34036255, -29.66195297, -22.73365021]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.83598518]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.46507931, -1.30634916, -1.32222211,  ...,  0.10634929,
             0.02698422,  0.04285724],
           [-1.25873005, -1.35396814, -1.40158725,  ...,  0.31269848,
             0.28095245,  0.28095245],
           [ 0.15396833,  0.42380959,  0.29682547,  ..., -0.00476181,
            -0.17936498, -0.24285704],
           ...,
           [-0.86190474, -0.60793650, -0.38571417,  ...,  0.91587305,
             0.82063496,  0.83650798],
           [-0.43333322, -0.30634910, -0.22698402,  ...,  0.90000004,
             0.77301592,  0.75714290],
           [-0.33809513, -0.30634910, -0.27460307,  ...,  0.88412702,
             0.78888893,  0.67777783]],

          [[-1.44927526, -1.28824472, -1.30434775,  ...,  0.20933989,
             0.14492765,  0.20933989],
           [-1.35265696, -1.36875999, -1.33655393,  ...,  0.37037048,
             0.35426742,  0.40257660],
           [-1.32045078, -1.35265696, -1.41706920,  ...,  0.04830930,
            -0.14492741, -0.24154577],
           ...,
           [-0.75684375, -0.51529789, -0.30595800,  ...,  0.91787446,
             0.83735919,  0.90177143],
           [-0.32206106, -0.19323659, -0.14492741,  ...,  0.90177143,
             0.78904998,  0.82125610],
           [-0.17713353, -0.17713353, -0.16103047,  ...,  0.90177143,
             0.78904998,  0.74074084]],

          [[-1.54272878, -1.49775124, -1.49775124,  ...,  0.42128953,
             0.34632701,  0.37631202],
           [-1.51274371, -1.55772126, -1.52773619,  ...,  0.52623707,
             0.49625200,  0.49625200],
           [-1.13793111, -1.09295356, -1.12293863,  ...,  0.09145443,
            -0.08845562, -0.19340314],
           ...,
           [-0.59820086, -0.43328333, -0.28335828,  ...,  0.88605714,
             0.81109464,  0.88605714],
           [-0.23838064, -0.14842562, -0.11844061,  ...,  0.85607213,
             0.76611710,  0.81109464],
           [-0.07346311, -0.10344811, -0.08845562,  ...,  0.75112462,
             0.79610211,  0.73613209]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1150 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
         -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [974]; unstable size 974; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 974] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 974] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 974] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 267] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.48544788,  2.23013401,  1.58959103,  1.19109106,  1.84305859,
          1.51451588,  3.08925200,  0.10891199,  0.42558670]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
         -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  1.94it/s]100%|██████████| 1/1 [00:00<00:00,  1.94it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.96112823, -19.53406715, -23.43943405, -22.77491570, -22.15659523,
          -23.06166649, -22.97703743, -23.94551468, -21.15086555, -20.97314644]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.42706108]]], device='cuda:0')
number of violation:  0
Attack finished in 0.5194 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.328782081604004
alpha/beta optimization time: 3.6570308208465576
initial alpha-crown bounds: tensor([[-0.41349936,  2.33963728,  1.68941879,  1.28608942,  1.95209074,
          1.58836746,  3.19598007,  0.21351385,  0.47718373]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.4134993553161621
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 195.77483868598938
Verifying property 0 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.41349936]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.40543556, -20.17714310, -24.91600418, -24.17427254, -23.62779045,
        -24.44828224, -24.39273453, -25.42860413, -22.45011139, -21.93351555],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.41349936]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 974
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 263
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 1259
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 56] 
split level 1: [/input-12, 79] 
split level 2: [/input-12, 67] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 64] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 71] 
split level 7: [/input-8, 1956] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 256 = 0.75
pruning-in-iteration extra time: 0.005424976348876953
Time: prepare 0.0030    bound 0.4608    transfer 0.0018    finalize 0.0014    func 0.4671    
Accumulated time: func 0.4671    prepare 0.0035    bound 0.4608    transfer 0.0018    finalize 0.0014    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09201 (8), -0.08829 (8), -0.08804 (8), -0.08654 (8), -0.08631 (8), -0.08101 (8), -0.07994 (8), -0.07974 (8), -0.07758 (8), -0.07720 (8), -0.07600 (8), -0.07206 (8), -0.06734 (8), -0.06650 (8), -0.06614 (8), -0.06536 (8), -0.06343 (8), -0.06273 (8), -0.06230 (8), -0.06211 (8), 
Length of domains: 64
Time: pickout 0.0004    decision 0.2617    set_bounds 0.0164    solve 0.4671    add 0.0397    
Accumulated time: pickout 0.0004    decision 0.2617    set_bounds 0.0164    solve 0.4671    add 0.0397    
Current (lb-rhs): -0.0920114517211914
64 domains visited
Cumulative time: 0.8132016658782959

BaB round 2
batch: 64
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
split level 1: [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] 
pruning_in_iteration open status: True
ratio of positive domain = 223 / 256 = 0.87109375
pruning-in-iteration extra time: 0.004537105560302734
Time: prepare 0.0050    bound 0.1244    transfer 0.0019    finalize 0.0017    func 0.1329    
Accumulated time: func 0.6000    prepare 0.0087    bound 0.5852    transfer 0.0036    finalize 0.0031    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04616 (10), -0.04146 (10), -0.04139 (10), -0.04112 (10), -0.03892 (10), -0.03560 (10), -0.03367 (10), -0.03176 (10), -0.03098 (10), -0.02984 (10), -0.02896 (10), -0.02536 (10), -0.02019 (10), -0.01869 (10), -0.01854 (10), -0.01650 (10), -0.01624 (10), -0.01328 (10), -0.01276 (10), -0.01221 (10), 
Length of domains: 33
Time: pickout 0.0014    decision 0.0140    set_bounds 0.0078    solve 0.1330    add 0.0008    
Accumulated time: pickout 0.0018    decision 0.2757    set_bounds 0.0242    solve 0.6001    add 0.0405    
Current (lb-rhs): -0.04616355895996094
97 domains visited
Cumulative time: 0.9706921577453613

BaB round 3
batch: 33
splitting decisions: 
split level 0: [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] [/input-12, 24] 
split level 1: [/input-12, 57] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-8, 1964] [/input-12, 57] [/input-12, 57] [/input-12, 57] 
split level 2: [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] [/input-8, 1948] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 264 / 264 = 1.0
pruning-in-iteration extra time: 4.291534423828125e-05
Time: prepare 0.0051    bound 0.0055    transfer 0.0012    finalize 0.0011    func 0.0130    
Accumulated time: func 0.6130    prepare 0.0139    bound 0.5907    transfer 0.0048    finalize 0.0042    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0143    set_bounds 0.0105    solve 0.0130    add 0.0001    
Accumulated time: pickout 0.0027    decision 0.2900    set_bounds 0.0347    solve 0.6131    add 0.0406    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
97 domains visited
Cumulative time: 1.0100760459899902


Properties batch 1, size 1
Remaining timeout: 194.56752729415894
Verifying property 1 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.339637279510498.

Properties batch 2, size 1
Remaining timeout: 194.4635293483734
Verifying property 2 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6894187927246094.

Properties batch 3, size 1
Remaining timeout: 194.37250661849976
Verifying property 3 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2860894203186035.

Properties batch 4, size 1
Remaining timeout: 194.282977104187
Verifying property 4 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9520907402038574.

Properties batch 5, size 1
Remaining timeout: 194.1935634613037
Verifying property 5 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5883674621582031.

Properties batch 6, size 1
Remaining timeout: 194.10445261001587
Verifying property 6 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1959800720214844.

Properties batch 7, size 1
Remaining timeout: 194.01558375358582
Verifying property 7 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21351385116577148.

Properties batch 8, size 1
Remaining timeout: 193.926598072052
Verifying property 8 with 1 instances.
##### Instance 2 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4771837294101715.
Result: safe in 6.1621 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.49797249, -32.02593231, -24.13653946, -24.35863113, -22.85143471,
         -23.68348503, -27.44120789, -21.38064575, -32.04727936, -30.62964058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [524]; unstable size 524; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 524] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 524] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 524] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 230] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 5.57842255,  7.92652655,  0.44128639,  0.66715562, -0.01040864,
          3.37060809, -2.14889312,  8.08667374,  6.50471687]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.49797249, -32.02593231, -24.13653946, -24.35863113, -22.85143471,
         -23.68348503, -27.44120789, -21.38064575, -32.04727936, -30.62964058]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.49797440, -32.02593613, -24.13653946, -24.35863304, -22.85143471,
          -23.68348312, -27.44120789, -21.38064194, -32.04728317, -30.62964058],
         [-29.49797440, -32.02593613, -24.13653946, -24.35863304, -22.85143471,
          -23.68348312, -27.44120789, -21.38064194, -32.04728317, -30.62964058]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.83204842, -1.47079277]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0543 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
         -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 586] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 586] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 240] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.88010216,  3.64075089, -1.31467116,  1.09980774,  0.71520281,
          0.08684754,  0.73927307,  3.52310157,  2.98584604]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
         -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.15470314, -20.96789932, -15.15356350, -17.63923645, -15.52186012,
          -17.33632088, -16.64702988, -17.53084564, -21.19912529, -20.21182442]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36829662]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0516 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.93012428, -28.86279678, -22.95105362, -22.21138573, -22.55353546,
         -22.42994499, -25.40056229, -25.07742310, -28.55600357, -29.30382729]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [702]; unstable size 702; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 702] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 702] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 702] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 197] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.11360049,  4.75878477, -0.60330033, -1.14847970, -0.96145189,
          1.62045574,  1.45868993,  4.42397833,  5.39402199]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.93012428, -28.86279678, -22.95105362, -22.21138573, -22.55353546,
         -22.42994499, -25.40056229, -25.07742310, -28.55600357, -29.30382729]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.93012238, -28.86279297, -22.95105362, -22.21138191, -22.55353355,
          -22.42994118, -25.40056038, -25.07742310, -28.55599976, -29.30382729],
         [-23.93012238, -28.86279297, -22.95105362, -22.21138191, -22.55353355,
          -22.42994118, -25.40056038, -25.07742310, -28.55599976, -29.30382729]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39752007, -0.34215164, -0.12359238]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]],


         [[[ 1.61428595,  1.53492093,  1.53492093,  ...,  0.31269848,
             0.78888893,  1.31269872],
           [ 1.61428595,  1.55079389,  1.59841299,  ...,  0.66190481,
             0.75714290,  1.39206374],
           [ 1.66190505,  1.58253992,  1.61428595,  ..., -0.30634910,
            -0.33809513,  1.01111114],
           ...,
           [ 1.66190505,  1.67777801,  1.64603198,  ...,  1.36031771,
             1.39206374,  1.40793681],
           [ 1.61428595,  1.61428595,  1.61428595,  ...,  1.37619078,
             1.39206374,  1.45555580],
           [ 1.50317490,  1.43968284,  1.53492093,  ...,  1.50317490,
             1.50317490,  1.56666696]],

          [[ 1.40096653,  1.32045114,  1.32045114,  ..., -0.09661824,
             0.40257660,  1.03059590],
           [ 1.38486338,  1.32045114,  1.36876035,  ...,  0.30595824,
             0.45088577,  1.19162667],
           [ 1.41706955,  1.35265732,  1.38486338,  ..., -0.61191624,
            -0.59581316,  0.90177143],
           ...,
           [ 1.32045114,  1.25603890,  1.32045114,  ...,  0.93397754,
             0.99838978,  1.07890511],
           [ 1.30434811,  1.27214205,  1.32045114,  ...,  0.98228669,
             1.03059590,  1.11111140],
           [ 1.23993587,  1.17552364,  1.27214205,  ...,  1.23993587,
             1.28824508,  1.27214205]],

          [[ 1.33583248,  1.27586246,  1.27586246,  ..., -0.07346311,
             0.39130452,  0.97601217],
           [ 1.39580250,  1.33583248,  1.38081002,  ...,  0.33133450,
             0.46626705,  1.20089996],
           [ 1.44078004,  1.36581755,  1.41079497,  ..., -0.49325335,
            -0.44827583,  0.99100471],
           ...,
           [ 1.18590748,  1.09595215,  1.21589243,  ...,  0.82608712,
             0.91604215,  0.97601217],
           [ 1.21589243,  1.17091501,  1.24587750,  ...,  0.87106466,
             0.94602716,  1.02098966],
           [ 1.17091501,  1.12593722,  1.21589243,  ...,  1.12593722,
             1.20089996,  1.23088503]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0616 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.40559387, -22.88947487, -25.63683701, -27.29631996, -26.72020721,
         -27.76915359, -27.74243546, -26.42049408, -23.75277328, -24.53628540]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 210, 1, 600] with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 600] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 209] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.74476349,  2.03233933,  3.50479388,  2.95214224,  3.84003592,
          3.82891750,  2.31719446,  0.27049741,  0.99338448]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.40559387, -22.88947487, -25.63683701, -27.29631996, -26.72020721,
         -27.76915359, -27.74243546, -26.42049408, -23.75277328, -24.53628540]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.70954704, -22.50856209, -25.82820511, -27.24475288, -26.80752373,
          -27.71620750, -27.81856155, -26.49511337, -23.68723488, -24.25093651]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20098495]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0063 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0549 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.38412285, -21.59840584, -16.79981041, -17.57214165, -15.52907753,
         -18.46681404, -14.29935837, -18.97409439, -21.41892242, -22.47642326]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [661]; unstable size 661; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 661] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 661] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 661] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 280] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.40035486, 4.96538448, 1.38254356, 2.09833932, 0.19923019, 2.73652554,
         2.77133226, 5.19357204, 5.75338554]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0458 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.33151817, -30.12449837, -30.12789345, -32.32761765, -31.50092506,
         -33.39948273, -34.24899292, -33.59529877, -28.85486984, -31.05011368]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [660]; unstable size 660; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 125, 1, 660] with unstable size 124 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 660] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [124]; unstable size 124; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 124] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 124] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.10990667, 3.26029587, 5.21397591, 4.49963570, 6.16231918, 7.11179543,
         6.38362360, 1.83803415, 4.12780380]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0378 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.09156418, -20.41763687, -14.61236668, -14.66382980, -15.40889931,
         -14.92277241, -16.08656311, -16.88404655, -16.89081764, -19.10676003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [652]; unstable size 652; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 652] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 652] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 652] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 272] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.76794958,  3.46308827, -1.30139863, -0.50252223, -0.49823141,
          0.25928617,  1.05345261,  0.17230198,  2.34708452]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.09156418, -20.41763687, -14.61236668, -14.66382980, -15.40889931,
         -14.92277241, -16.08656311, -16.88404655, -16.89081764, -19.10676003]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.09156036, -20.41763496, -14.61236477, -14.66382885, -15.40889931,
          -14.92277145, -16.08656311, -16.88404655, -16.89081764, -19.10676003],
         [-17.09156036, -20.41763496, -14.61236477, -14.66382885, -15.40889931,
          -14.92277145, -16.08656311, -16.88404655, -16.89081764, -19.10676003]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31040668, -0.25894260,  0.48612785]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0528 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.21570015, -30.75971413, -22.25073242, -22.32918739, -25.08177185,
         -21.45276070, -27.76211929, -23.59930420, -27.91633797, -28.86312294]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 138, 1, 602] with unstable size 137 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 6, 1, 602] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [137]; unstable size 137; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 6, 1, 137] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 137] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.99381137,  6.23491001, -1.89244699, -1.75638449,  1.05084109,
         -2.64184856,  3.30787587,  3.47557855,  4.31073809]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.21570015, -30.75971413, -22.25073242, -22.32918739, -25.08177185,
         -21.45276070, -27.76211929, -23.59930420, -27.91633797, -28.86312294]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.21570015, -30.75971603, -22.25073242, -22.32919121, -25.08177567,
          -21.45276070, -27.76212311, -23.59930420, -27.91633797, -28.86312675],
         [-26.21570015, -30.75971603, -22.25073242, -22.32919121, -25.08177567,
          -21.45276070, -27.76212311, -23.59930420, -27.91633797, -28.86312675]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.34857178, -1.27011299, -2.14654350]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0543 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.21021080, -22.37670517, -15.79945183, -19.83161354, -17.04315186,
         -20.54102135, -18.07866096, -20.16787720, -20.66229820, -22.52699852]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [783]; unstable size 783; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 272, 1, 783] with unstable size 271 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 783] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 783] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [271]; unstable size 271; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 271] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 271] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.10988903, 4.28679085, 2.71925163, 0.07136559, 3.35213232, 0.93095958,
         2.59224534, 3.15873289, 4.39236164]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0632 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.29772568, -26.69688797, -24.65950394, -26.42867851, -27.60770798,
         -25.51318932, -30.98760223, -25.11904716, -28.58666801, -27.05063820]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 148, 1, 512] with unstable size 147 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 512] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [147]; unstable size 147; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 147] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.19138688,  0.13958693, -1.25776386,  0.64105940,  1.78223991,
         -0.24006459,  4.64796352,  2.03586769,  0.69128156]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.29772568, -26.69688797, -24.65950394, -26.42867851, -27.60770798,
         -25.51318932, -30.98760223, -25.11904716, -28.58666801, -27.05063820]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.29772758, -26.69688797, -24.65950203, -26.42867661, -27.60770798,
          -25.51318359, -30.98759842, -25.11904335, -28.58666611, -27.05063820],
         [-26.29772758, -26.69688797, -24.65950203, -26.42867661, -27.60770798,
          -25.51318359, -30.98759842, -25.11904335, -28.58666611, -27.05063820]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.45954132,  0.39414024]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0374 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
         -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [800]; unstable size 800; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 212, 1, 800] with unstable size 211 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 800] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 800] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [211]; unstable size 211; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 211] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 211] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64949799,  2.53695869,  4.98263121,  4.08614731,  6.12158680,
          4.88727856,  5.69290924,  0.59366226,  1.31843662]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
         -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.95it/s]100%|██████████| 1/1 [00:00<00:00,  8.94it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.69252968, -23.57816505, -27.19650650, -29.87729073, -29.16208076,
          -31.30131340, -29.60456848, -30.91409683, -24.93794060, -25.69927025]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.11436462]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1145 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 30.024341583251953
alpha/beta optimization time: 1.1250219345092773
initial alpha-crown bounds: tensor([[-0.60099745,  2.58547974,  5.03595400,  4.14844227,  6.18062878,
          4.93974590,  5.75246906,  0.64157915,  1.34103906]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6009974479675293
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.71116590499878
Verifying property 0 with 1 instances.
##### Instance 13 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.60099745]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.11111641, -23.23637962, -27.61908340, -29.99626923, -29.48331070,
        -31.42300415, -29.79775810, -31.17150879, -25.13313293, -25.51217079],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.60099745]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 800
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 204
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1025
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 38] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 8] 
split level 6: [/input-12, 71] 
split level 7: [/input-12, 32] 
pruning_in_iteration open status: True
ratio of positive domain = 215 / 256 = 0.83984375
pruning-in-iteration extra time: 0.004961967468261719
Time: prepare 0.0017    bound 0.1474    transfer 0.0020    finalize 0.0013    func 0.1524    
Accumulated time: func 0.1524    prepare 0.0022    bound 0.1474    transfer 0.0020    finalize 0.0013    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27371 (8), -0.27326 (8), -0.27282 (8), -0.27127 (8), -0.26145 (8), -0.26112 (8), -0.25879 (8), -0.25804 (8), -0.24499 (8), -0.24285 (8), -0.23935 (8), -0.23662 (8), -0.23057 (8), -0.23028 (8), -0.21894 (8), -0.21472 (8), -0.14397 (8), -0.13937 (8), -0.13813 (8), -0.13428 (8), 
Length of domains: 41
Time: pickout 0.0003    decision 0.0222    set_bounds 0.0155    solve 0.1525    add 0.0018    
Accumulated time: pickout 0.0003    decision 0.0222    set_bounds 0.0155    solve 0.1525    add 0.0018    
Current (lb-rhs): -0.273709774017334
41 domains visited
Cumulative time: 0.1960921287536621

BaB round 2
batch: 41
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] [/input-12, 14] 
split level 2: [/input-8, 757] [/input-8, 757] [/input-8, 1754] [/input-8, 1754] [/input-8, 757] [/input-8, 757] [/input-8, 1754] [/input-8, 1754] [/input-8, 757] [/input-8, 757] 
pruning_in_iteration open status: True
ratio of positive domain = 190 / 328 = 0.5792682926829269
pruning-in-iteration extra time: 0.004550457000732422
Time: prepare 0.0062    bound 0.1359    transfer 0.0013    finalize 0.0021    func 0.1457    
Accumulated time: func 0.2981    prepare 0.0085    bound 0.2834    transfer 0.0033    finalize 0.0034    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24911 (11), -0.24895 (11), -0.24768 (11), -0.24658 (11), -0.23667 (11), -0.23579 (11), -0.23293 (11), -0.23291 (11), -0.23287 (11), -0.23228 (11), -0.23187 (11), -0.23035 (11), -0.22333 (11), -0.22124 (11), -0.22075 (11), -0.22069 (11), -0.21847 (11), -0.21819 (11), -0.21805 (11), -0.21767 (11), 
Length of domains: 138
Time: pickout 0.0009    decision 0.0153    set_bounds 0.0116    solve 0.1458    add 0.0018    
Accumulated time: pickout 0.0013    decision 0.0375    set_bounds 0.0271    solve 0.2983    add 0.0037    
Current (lb-rhs): -0.24910640716552734
179 domains visited
Cumulative time: 0.37207508087158203

BaB round 3
batch: 138
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 14] [/input-8, 1955] 
pruning_in_iteration open status: True
ratio of positive domain = 96 / 276 = 0.34782608695652173
pruning-in-iteration extra time: 0.0041620731353759766
Time: prepare 0.0055    bound 0.1669    transfer 0.0027    finalize 0.0022    func 0.1773    
Accumulated time: func 0.4754    prepare 0.0142    bound 0.4502    transfer 0.0060    finalize 0.0056    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24337 (12), -0.24286 (12), -0.24203 (12), -0.24055 (12), -0.23089 (12), -0.22997 (12), -0.22739 (12), -0.22734 (12), -0.22692 (12), -0.22600 (12), -0.22596 (12), -0.22415 (12), -0.21717 (12), -0.21505 (12), -0.21483 (12), -0.21475 (12), -0.21280 (12), -0.21186 (12), -0.21131 (12), -0.21127 (12), 
Length of domains: 180
Time: pickout 0.0020    decision 0.1126    set_bounds 0.0060    solve 0.1774    add 0.0013    
Accumulated time: pickout 0.0033    decision 0.1501    set_bounds 0.0331    solve 0.4756    add 0.0049    
Current (lb-rhs): -0.24337482452392578
359 domains visited
Cumulative time: 0.6718668937683105

BaB round 4
batch: 180
splitting decisions: 
split level 0: [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] 
pruning_in_iteration open status: True
ratio of positive domain = 75 / 360 = 0.20833333333333337
pruning-in-iteration extra time: 0.0014958381652832031
Time: prepare 0.0067    bound 0.1108    transfer 0.0015    finalize 0.0023    func 0.1214    
Accumulated time: func 0.5968    prepare 0.0211    bound 0.5610    transfer 0.0075    finalize 0.0079    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23726 (13), -0.23649 (13), -0.23439 (13), -0.23439 (13), -0.22481 (13), -0.22379 (13), -0.22056 (13), -0.22030 (13), -0.22002 (13), -0.21984 (13), -0.21830 (13), -0.21795 (13), -0.21171 (13), -0.20950 (13), -0.20863 (13), -0.20855 (13), -0.20558 (13), -0.20528 (13), -0.20523 (13), -0.20518 (13), 
Length of domains: 285
Time: pickout 0.0025    decision 0.0198    set_bounds 0.0073    solve 0.1214    add 0.0020    
Accumulated time: pickout 0.0058    decision 0.1699    set_bounds 0.0403    solve 0.5971    add 0.0070    
Current (lb-rhs): -0.23726463317871094
644 domains visited
Cumulative time: 0.8253543376922607

BaB round 5
batch: 285
splitting decisions: 
split level 0: [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 155] [/input-8, 418] [/input-8, 146] [/input-8, 146] 
pruning_in_iteration open status: True
ratio of positive domain = 121 / 570 = 0.21228070175438596
pruning-in-iteration extra time: 0.0013298988342285156
Time: prepare 0.0105    bound 0.1194    transfer 0.0030    finalize 0.0031    func 0.1361    
Accumulated time: func 0.7328    prepare 0.0319    bound 0.6804    transfer 0.0105    finalize 0.0110    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23114 (14), -0.23105 (14), -0.23073 (14), -0.22769 (14), -0.21860 (14), -0.21840 (14), -0.21734 (14), -0.21690 (14), -0.21607 (14), -0.21535 (14), -0.21499 (14), -0.21449 (14), -0.21433 (14), -0.21382 (14), -0.21130 (14), -0.21117 (14), -0.20228 (14), -0.20200 (14), -0.20151 (14), -0.20140 (14), 
Length of domains: 449
Time: pickout 0.0034    decision 0.0258    set_bounds 0.0114    solve 0.1362    add 0.0024    
Accumulated time: pickout 0.0093    decision 0.1957    set_bounds 0.0517    solve 0.7332    add 0.0094    
Current (lb-rhs): -0.2311410903930664
1093 domains visited
Cumulative time: 1.0051648616790771

BaB round 6
batch: 449
splitting decisions: 
split level 0: [/input-8, 147] [/input-8, 306] [/input-8, 147] [/input-8, 1134] [/input-8, 147] [/input-8, 306] [/input-8, 147] [/input-8, 306] [/input-8, 155] [/input-8, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 199 / 898 = 0.22160356347438748
pruning-in-iteration extra time: 0.0032677650451660156
Time: prepare 0.0172    bound 0.1567    transfer 0.0053    finalize 0.0053    func 0.1846    
Accumulated time: func 0.9175    prepare 0.0492    bound 0.8371    transfer 0.0158    finalize 0.0163    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22597 (15), -0.22591 (15), -0.21803 (15), -0.21767 (15), -0.21598 (15), -0.21535 (15), -0.21282 (15), -0.21282 (15), -0.21254 (15), -0.21235 (15), -0.21171 (15), -0.21090 (15), -0.21049 (15), -0.20977 (15), -0.20961 (15), -0.20774 (15), -0.20677 (15), -0.20628 (15), -0.20576 (15), -0.20116 (15), 
Length of domains: 699
Time: pickout 0.0054    decision 0.0342    set_bounds 0.0175    solve 0.1848    add 0.0034    
Accumulated time: pickout 0.0147    decision 0.2299    set_bounds 0.0692    solve 0.9180    add 0.0128    
Current (lb-rhs): -0.22597122192382812
1792 domains visited
Cumulative time: 1.2515926361083984

BaB round 7
batch: 699
splitting decisions: 
split level 0: [/input-8, 751] [/input-8, 1134] [/input, 374] [/input-8, 306] [/input-8, 751] [/input-8, 751] [/input, 374] [/input-8, 751] [/input-8, 1134] [/input-8, 306] 
pruning_in_iteration open status: False
ratio of positive domain = 196 / 1398 = 0.14020028612303292
pruning-in-iteration extra time: 5.340576171875e-05
Time: prepare 0.0268    bound 0.1114    transfer 0.0074    finalize 0.0083    func 0.1539    
Accumulated time: func 1.0714    prepare 0.0762    bound 0.9485    transfer 0.0233    finalize 0.0246    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22287 (16), -0.22183 (16), -0.21424 (16), -0.21380 (16), -0.21164 (16), -0.21093 (16), -0.20950 (16), -0.20807 (16), -0.20730 (16), -0.20720 (16), -0.20716 (16), -0.20581 (16), -0.20552 (16), -0.20548 (16), -0.20456 (16), -0.20375 (16), -0.20329 (16), -0.20256 (16), -0.20172 (16), -0.20088 (16), 
Length of domains: 1201
Time: pickout 0.0081    decision 0.0475    set_bounds 0.0260    solve 0.1541    add 0.0177    
Accumulated time: pickout 0.0228    decision 0.2774    set_bounds 0.0952    solve 1.0721    add 0.0305    
Current (lb-rhs): -0.2228693962097168
2993 domains visited
Cumulative time: 1.5066947937011719

BaB round 8
batch: 1201
splitting decisions: 
split level 0: [/input-8, 1134] [/input-8, 751] [/input-8, 751] [/input-8, 416] [/input, 374] [/input-8, 1134] [/input-8, 751] [/input-8, 1134] [/input-8, 751] [/input-8, 751] 
pruning_in_iteration open status: False
ratio of positive domain = 155 / 2402 = 0.06452955870108246
pruning-in-iteration extra time: 5.53131103515625e-05
Time: prepare 0.0494    bound 0.1375    transfer 0.0141    finalize 0.0143    func 0.2153    
Accumulated time: func 1.2867    prepare 0.1259    bound 1.0860    transfer 0.0373    finalize 0.0389    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22041 (17), -0.21639 (17), -0.21170 (17), -0.21124 (17), -0.20763 (17), -0.20692 (17), -0.20538 (17), -0.20500 (17), -0.20459 (17), -0.20252 (17), -0.20229 (17), -0.20210 (17), -0.20185 (17), -0.20158 (17), -0.20112 (17), -0.20063 (17), -0.20036 (17), -0.20036 (17), -0.19882 (17), -0.19690 (17), 
Length of domains: 2240
Time: pickout 0.0140    decision 0.0744    set_bounds 0.0429    solve 0.2157    add 0.0330    
Accumulated time: pickout 0.0368    decision 0.3518    set_bounds 0.1381    solve 1.2878    add 0.0635    
Current (lb-rhs): -0.2204122543334961
5233 domains visited
Cumulative time: 1.8889517784118652

BaB round 9
batch: 2240
splitting decisions: 
split level 0: [/input, 374] [/input-8, 147] [/input-8, 1134] [/input-8, 751] [/input-8, 1134] [/input-8, 147] [/input-8, 1134] [/input-8, 416] [/input, 374] [/input-8, 147] 
pruning_in_iteration open status: False
ratio of positive domain = 279 / 4480 = 0.06227678571428574
pruning-in-iteration extra time: 6.031990051269531e-05
Time: prepare 0.0944    bound 0.2234    transfer 0.0207    finalize 0.0282    func 0.3670    
Accumulated time: func 1.6537    prepare 0.2205    bound 1.3094    transfer 0.0581    finalize 0.0670    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21584 (18), -0.21409 (18), -0.20746 (18), -0.20695 (18), -0.20399 (18), -0.20329 (18), -0.20218 (18), -0.20135 (18), -0.20028 (18), -0.19969 (18), -0.19961 (18), -0.19951 (18), -0.19817 (18), -0.19762 (18), -0.19740 (18), -0.19695 (18), -0.19459 (18), -0.19406 (18), -0.19361 (18), -0.19348 (18), 
Length of domains: 4192
Time: pickout 0.0278    decision 0.2418    set_bounds 0.0830    solve 0.3680    add 0.0670    
Accumulated time: pickout 0.0646    decision 0.5936    set_bounds 0.2211    solve 1.6558    add 0.1305    
Current (lb-rhs): -0.21584367752075195
9425 domains visited
Cumulative time: 2.6830105781555176

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 147] [/input, 374] [/input-8, 292] [/input-8, 1134] [/input-8, 147] [/input, 374] [/input-8, 423] [/input-8, 418] [/input-8, 147] [/input, 374] 
pruning_in_iteration open status: False
ratio of positive domain = 555 / 8192 = 0.0677490234375
pruning-in-iteration extra time: 6.461143493652344e-05
Time: prepare 0.1808    bound 0.3650    transfer 0.0452    finalize 0.0496    func 0.6416    
Accumulated time: func 2.2953    prepare 0.4016    bound 1.6744    transfer 0.1033    finalize 0.1166    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21163 (19), -0.21008 (19), -0.20362 (19), -0.20310 (19), -0.19788 (19), -0.19787 (19), -0.19778 (19), -0.19713 (19), -0.19707 (19), -0.19602 (19), -0.19550 (19), -0.19547 (19), -0.19414 (19), -0.19363 (19), -0.19343 (19), -0.19300 (19), -0.19294 (19), -0.19293 (19), -0.18957 (19), -0.18922 (19), 
Length of domains: 7720
Time: pickout 0.0519    decision 0.3516    set_bounds 0.1572    solve 0.6429    add 0.0271    
Accumulated time: pickout 0.1165    decision 0.9452    set_bounds 0.3784    solve 2.2987    add 0.1576    
Current (lb-rhs): -0.21163177490234375
17049 domains visited
current_vram/total_varm: 9.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 3.922257423400879

BaB round 11
batch: 7720
splitting decisions: 
split level 0: [/input-8, 418] [/input-8, 155] [/input-8, 1195] [/input-8, 147] [/input-8, 418] [/input-8, 155] [/input-8, 1195] [/input-8, 147] [/input-8, 158] [/input-8, 292] 
pruning_in_iteration open status: False
ratio of positive domain = 1158 / 15440 = 0.07499999999999996
pruning-in-iteration extra time: 0.0001239776611328125
Time: prepare 0.3414    bound 0.6462    transfer 0.0883    finalize 0.0971    func 1.1743    
Accumulated time: func 3.4696    prepare 0.7433    bound 2.3206    transfer 0.1916    finalize 0.2137    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20875 (20), -0.20680 (20), -0.19749 (20), -0.19692 (20), -0.19538 (20), -0.19467 (20), -0.19434 (20), -0.19410 (20), -0.19279 (20), -0.19253 (20), -0.19253 (20), -0.19226 (20), -0.19223 (20), -0.19217 (20), -0.19206 (20), -0.19130 (20), -0.19082 (20), -0.19060 (20), -0.18862 (20), -0.18733 (20), 
Length of domains: 14249
Time: pickout 0.0979    decision 0.5854    set_bounds 0.4427    solve 1.1769    add 0.1509    
Accumulated time: pickout 0.2144    decision 1.5306    set_bounds 0.8211    solve 3.4755    add 0.3085    
Current (lb-rhs): -0.20875167846679688
31298 domains visited
Cumulative time: 6.3924455642700195

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input-8, 751] [/input-8, 147] [/input-12, 13] [/input-8, 418] [/input-8, 1195] [/input-8, 292] [/input-8, 751] [/input-8, 292] [/input-8, 158] [/input, 374] 
pruning_in_iteration open status: False
ratio of positive domain = 1460 / 16384 = 0.089111328125
pruning-in-iteration extra time: 0.00011658668518066406
Time: prepare 0.3598    bound 0.6817    transfer 0.0922    finalize 0.1013    func 1.2363    
Accumulated time: func 4.7059    prepare 1.1034    bound 3.0023    transfer 0.2838    finalize 0.3150    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20875 (20), -0.20333 (21), -0.19410 (20), -0.19279 (20), -0.19270 (21), -0.19253 (20), -0.19253 (20), -0.19226 (20), -0.19223 (20), -0.19212 (21), -0.19089 (21), -0.19017 (21), -0.18887 (21), -0.18870 (21), -0.18839 (21), -0.18736 (21), -0.18710 (20), -0.18703 (21), -0.18635 (21), -0.18480 (21), 
Length of domains: 20937
Time: pickout 0.1064    decision 0.6163    set_bounds 0.4960    solve 1.2386    add 0.2606    
Accumulated time: pickout 0.3208    decision 2.1469    set_bounds 1.3171    solve 4.7141    add 0.5691    
Current (lb-rhs): -0.20875167846679688
46178 domains visited
current_vram/total_varm: 23.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.126778364181519

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input-8, 418] [/input-8, 1384] [/input-8, 306] [/input-8, 418] [/input-8, 418] [/input-8, 292] [/input-8, 1195] [/input-8, 418] [/input-8, 420] [/input-8, 146] 
pruning_in_iteration open status: False
ratio of positive domain = 3959 / 32768 = 0.120819091796875
pruning-in-iteration extra time: 0.0002677440643310547
Time: prepare 0.7318    bound 1.3203    transfer 0.1809    finalize 0.2184    func 2.4534    
Accumulated time: func 7.1593    prepare 1.8356    bound 4.3226    transfer 0.4647    finalize 0.5334    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20875 (20), -0.19410 (20), -0.19340 (22), -0.19338 (22), -0.19253 (20), -0.19253 (20), -0.19077 (22), -0.18852 (21), -0.18829 (21), -0.18772 (21), -0.18736 (22), -0.18710 (20), -0.18610 (22), -0.18540 (22), -0.18436 (20), -0.18232 (22), -0.18165 (20), -0.18162 (22), -0.18154 (20), -0.18102 (20), 
Length of domains: 33276
Time: pickout 0.2194    decision 1.8612    set_bounds 1.0723    solve 2.7077    add 0.7614    
Accumulated time: pickout 0.5402    decision 4.0081    set_bounds 2.3893    solve 7.4218    add 1.3306    
Current (lb-rhs): -0.20875167846679688
74901 domains visited
current_vram/total_varm: 27.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 15.786819219589233

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 292] [/input-8, 423] [/input-8, 154] [/input-8, 418] [/input-8, 418] [/input-8, 423] [/input-8, 158] [/input-8, 292] [/input-8, 292] [/input-8, 418] 
pruning_in_iteration open status: False
ratio of positive domain = 9602 / 65536 = 0.146514892578125
pruning-in-iteration extra time: 0.0004589557647705078
Time: prepare 1.5152    bound 7.7763    transfer 0.3603    finalize 0.7924    func 10.4474    
Accumulated time: func 17.6067    prepare 3.3512    bound 12.0988    transfer 0.8250    finalize 1.3258    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.19064 (21), -0.18913 (21), -0.18826 (21), -0.18656 (23), -0.18656 (23), -0.18635 (22), -0.18601 (23), -0.18563 (23), -0.18562 (23), -0.18540 (23), -0.18532 (22), -0.18427 (23), -0.18423 (21), -0.18360 (23), -0.18297 (22), -0.18165 (20), -0.18049 (23), -0.18016 (21), 
Length of domains: 56249
Time: pickout 0.4607    decision 3.3044    set_bounds 1.9421    solve 10.4571    add 0.1980    
Accumulated time: pickout 1.0010    decision 7.3125    set_bounds 4.3315    solve 17.8790    add 1.5286    
Current (lb-rhs): -0.20529699325561523
130642 domains visited
Cumulative time: 32.23471140861511

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 414] [/input-8, 1097] [/input-8, 418] [/input-12, 13] [/input-8, 423] [/input-8, 420] [/input-8, 1384] [/input-12, 13] [/input-8, 423] [/input-8, 420] 
pruning_in_iteration open status: False
ratio of positive domain = 9615 / 65536 = 0.1467132568359375
pruning-in-iteration extra time: 0.000514984130859375
Time: prepare 1.5074    bound 7.7763    transfer 0.3571    finalize 0.9449    func 10.5884    
Accumulated time: func 28.1951    prepare 4.8590    bound 19.8751    transfer 1.1821    finalize 2.2707    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18756 (22), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18225 (24), -0.18165 (20), -0.18164 (24), -0.18161 (23), -0.18102 (23), -0.18099 (24), -0.18031 (24), -0.17798 (21), -0.17708 (24), -0.17670 (22), 
Length of domains: 79180
Time: pickout 0.4755    decision 3.3257    set_bounds 2.1810    solve 10.5980    add 18.0395    
Accumulated time: pickout 1.4765    decision 10.6382    set_bounds 6.5125    solve 28.4769    add 19.5680    
Current (lb-rhs): -0.20529699325561523
186341 domains visited
Cumulative time: 66.93920040130615

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1134] [/input-12, 13] [/input-12, 53] [/input-8, 154] [/input-8, 146] [/input-8, 158] [/input, 374] [/input-8, 154] [/input, 374] [/input-8, 414] 
pruning_in_iteration open status: False
ratio of positive domain = 11128 / 65536 = 0.1697998046875
pruning-in-iteration extra time: 0.00044417381286621094
Time: prepare 1.5649    bound 7.7840    transfer 0.3672    finalize 0.4887    func 10.2082    
Accumulated time: func 38.4032    prepare 6.4245    bound 27.6591    transfer 1.5493    finalize 2.7594    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18466 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17812 (25), -0.17798 (21), -0.17789 (24), -0.17752 (25), -0.17730 (24), -0.17697 (25), -0.17638 (23), -0.17630 (25), -0.17603 (23), 
Length of domains: 100577
Time: pickout 0.4980    decision 3.6012    set_bounds 2.1590    solve 10.9072    add 0.1784    
Accumulated time: pickout 1.9745    decision 14.2394    set_bounds 8.6715    solve 39.3841    add 19.7464    
Current (lb-rhs): -0.20529699325561523
240506 domains visited
Cumulative time: 84.38039016723633

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 423] [/input, 374] [/input-8, 146] [/input-8, 1384] [/input-8, 158] [/input-8, 939] [/input-8, 420] [/input-8, 154] [/input-8, 1097] [/input, 408] 
pruning_in_iteration open status: False
ratio of positive domain = 12002 / 65536 = 0.183135986328125
pruning-in-iteration extra time: 0.0004916191101074219
Time: prepare 1.5998    bound 7.7814    transfer 0.3640    finalize 1.3044    func 11.0554    
Accumulated time: func 49.4586    prepare 8.0248    bound 35.4405    transfer 1.9133    finalize 4.0638    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17430 (24), 
Length of domains: 121102
Time: pickout 0.5609    decision 3.3991    set_bounds 2.4017    solve 11.0670    add 0.1725    
Accumulated time: pickout 2.5354    decision 17.6385    set_bounds 11.0731    solve 50.4511    add 19.9189    
Current (lb-rhs): -0.20529699325561523
293799 domains visited
Cumulative time: 102.14979004859924

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 420] [/input-8, 1754] [/input-8, 420] [/input-8, 292] [/input-8, 1395] [/input-8, 414] [/input-8, 154] [/input-8, 1395] [/input-8, 420] [/input-8, 414] 
pruning_in_iteration open status: False
ratio of positive domain = 13007 / 65536 = 0.1984710693359375
pruning-in-iteration extra time: 0.0004837512969970703
Time: prepare 1.6461    bound 7.7801    transfer 0.3652    finalize 0.5385    func 10.3337    
Accumulated time: func 59.7923    prepare 9.6715    bound 43.2206    transfer 2.2785    finalize 4.6023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 140643
Time: pickout 0.5683    decision 4.0519    set_bounds 2.5381    solve 10.3499    add 0.1715    
Accumulated time: pickout 3.1037    decision 21.6904    set_bounds 13.6113    solve 60.8010    add 20.0904    
Current (lb-rhs): -0.20529699325561523
346108 domains visited
Cumulative time: 119.97988390922546

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1178] [/input-8, 414] [/input-8, 154] [/input-8, 420] [/input-8, 423] [/input-12, 13] [/input-8, 1395] [/input-12, 53] [/input-8, 1949] [/input-8, 1384] 
pruning_in_iteration open status: True
ratio of positive domain = 16870 / 65536 = 0.257415771484375
pruning-in-iteration extra time: 0.005774974822998047
Time: prepare 1.6922    bound 3.3845    transfer 0.3778    finalize 0.5651    func 6.0227    
Accumulated time: func 65.8150    prepare 11.3641    bound 46.6051    transfer 2.6563    finalize 5.1674    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 156541
Time: pickout 0.5631    decision 4.2370    set_bounds 2.7753    solve 6.0403    add 0.1601    
Accumulated time: pickout 3.6668    decision 25.9274    set_bounds 16.3866    solve 66.8412    add 20.2505    
Current (lb-rhs): -0.20529699325561523
394774 domains visited
Cumulative time: 133.93434476852417

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 410] [/input-8, 1387] [/input, 2183] [/input-8, 1395] [/input, 373] [/input-8, 1395] [/input-8, 414] [/input-8, 416] [/input-12, 53] [/input-8, 1395] 
pruning_in_iteration open status: True
ratio of positive domain = 17099 / 65536 = 0.2609100341796875
pruning-in-iteration extra time: 0.006230354309082031
Time: prepare 1.7322    bound 3.1065    transfer 0.4067    finalize 1.8681    func 7.1168    
Accumulated time: func 72.9319    prepare 13.0969    bound 49.7117    transfer 3.0631    finalize 7.0355    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 172210
Time: pickout 0.5950    decision 4.4613    set_bounds 1.6496    solve 7.1317    add 0.3664    
Accumulated time: pickout 4.2618    decision 30.3887    set_bounds 18.0362    solve 73.9730    add 20.6169    
Current (lb-rhs): -0.20529699325561523
443211 domains visited
Cumulative time: 148.32854008674622

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1949] [/input-8, 1949] [/input-8, 1395] [/input-8, 1384] [/input-8, 1387] [/input-8, 420] [/input-8, 1949] [/input-12, 13] [/input-8, 423] [/input-8, 1395] 
pruning_in_iteration open status: True
ratio of positive domain = 20562 / 65536 = 0.313751220703125
pruning-in-iteration extra time: 0.0063245296478271484
Time: prepare 2.1310    bound 2.7091    transfer 0.3914    finalize 0.6146    func 5.8493    
Accumulated time: func 78.7812    prepare 15.2283    bound 52.4208    transfer 3.4545    finalize 7.6501    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 184416
Time: pickout 0.6104    decision 3.4457    set_bounds 3.2723    solve 5.8732    add 0.1650    
Accumulated time: pickout 4.8722    decision 33.8344    set_bounds 21.3085    solve 79.8461    add 20.7819    
Current (lb-rhs): -0.20529699325561523
488185 domains visited
Cumulative time: 162.02774906158447

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-12, 13] [/input, 3180] [/input, 374] [/input-12, 13] [/input-8, 414] [/input-8, 1384] [/input-8, 1629] [/input-12, 13] [/input-12, 13] [/input-12, 13] 
pruning_in_iteration open status: True
ratio of positive domain = 20677 / 65536 = 0.3155059814453125
pruning-in-iteration extra time: 0.0064983367919921875
Time: prepare 1.7362    bound 2.7070    transfer 0.4573    finalize 0.6035    func 5.5077    
Accumulated time: func 84.2889    prepare 16.9651    bound 55.1278    transfer 3.9118    finalize 8.2536    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 196507
Time: pickout 0.7000    decision 5.2653    set_bounds 3.4745    solve 5.5279    add 0.1894    
Accumulated time: pickout 5.5722    decision 39.0997    set_bounds 24.7830    solve 85.3740    add 20.9713    
Current (lb-rhs): -0.20529699325561523
533044 domains visited
Cumulative time: 177.41149616241455

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1949] [/input-8, 306] [/input-8, 1949] [/input-8, 154] [/input, 374] [/input-8, 1949] [/input-8, 1395] [/input-8, 1949] [/input-8, 939] [/input-8, 1949] 
pruning_in_iteration open status: True
ratio of positive domain = 20906 / 65536 = 0.319000244140625
pruning-in-iteration extra time: 0.006891965866088867
Time: prepare 1.7358    bound 2.6944    transfer 0.4730    finalize 0.6006    func 5.5074    
Accumulated time: func 89.7963    prepare 18.7014    bound 57.8222    transfer 4.3848    finalize 8.8542    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 208369
Time: pickout 0.7122    decision 3.4600    set_bounds 3.6235    solve 5.5287    add 0.2149    
Accumulated time: pickout 6.2844    decision 42.5597    set_bounds 28.4065    solve 90.9027    add 21.1862    
Current (lb-rhs): -0.20529699325561523
577674 domains visited
Cumulative time: 191.18370461463928

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 3180] [/input, 3180] [/input-8, 1395] [/input-8, 154] [/input-8, 1754] [/input-8, 154] [/input-12, 53] [/input, 3196] [/input-12, 53] [/input-8, 1395] 
pruning_in_iteration open status: True
ratio of positive domain = 21993 / 65536 = 0.3355865478515625
pruning-in-iteration extra time: 0.006795406341552734
Time: prepare 1.7975    bound 2.6540    transfer 0.4970    finalize 0.6132    func 5.5651    
Accumulated time: func 95.3614    prepare 20.4995    bound 60.4762    transfer 4.8819    finalize 9.4673    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20530 (21), -0.19073 (21), -0.18913 (21), -0.18826 (21), -0.18563 (23), -0.18562 (23), -0.18423 (21), -0.18373 (24), -0.18372 (24), -0.18165 (20), -0.17798 (21), -0.17638 (23), -0.17603 (23), -0.17602 (23), -0.17525 (20), -0.17469 (23), -0.17468 (23), -0.17466 (23), -0.17463 (21), -0.17426 (23), 
Length of domains: 219144
Time: pickout 0.7145    decision 5.4879    set_bounds 3.7493    solve 5.5865    add 0.2357    
Accumulated time: pickout 6.9989    decision 48.0475    set_bounds 32.1558    solve 96.4892    add 21.4219    
Current (lb-rhs): -0.20529699325561523
621217 domains visited
Time out!!!!!!!!
Result: unknown in 209.8611 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.06784821, -10.58980083, -14.57435703, -13.27788925, -13.83081436,
         -14.45864487, -13.14409447, -13.97298336, -12.07690144,  -9.28960514]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [479]; unstable size 479; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 479] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 479] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 217] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.56003857, 0.62899375, 3.70473719, 2.64315987, 3.00231886, 3.71363807,
         2.32805920, 2.93838811, 1.83370197]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0733 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.44266796, -16.16106987, -11.92645931, -10.71731567, -11.05861855,
         -10.75457382, -13.42498779, -10.81375790, -16.44475365, -15.04152584]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [587]; unstable size 587; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 587] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 587] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 587] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 221] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55051184,  4.09006119,  0.36009490, -0.47126317, -0.31621829,
          1.88454604, -0.86957794,  4.73674679,  3.06783509]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.44266796, -16.16106987, -11.92645931, -10.71731567, -11.05861855,
         -10.75457382, -13.42498779, -10.81375790, -16.44475365, -15.04152584]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.83619690, -16.61016846, -12.28275108, -11.27688122, -11.14465904,
          -11.27646160, -13.88090134, -10.95770168, -16.84897423, -15.54391193],
         [-14.83619690, -16.61016846, -12.28275108, -11.27688122, -11.14465904,
          -11.27646160, -13.88090134, -10.95770168, -16.84897423, -15.54391193]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13222218, -0.00041962, -0.31917953]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0139 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0645 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.68520546, -29.33057404, -23.34724998, -23.50040627, -23.08244896,
         -23.89678383, -23.22287750, -25.18677521, -28.65573311, -29.02714920]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [857]; unstable size 857; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 401, 1, 857] with unstable size 400 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 857] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 857] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [400]; unstable size 400; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 400] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 400] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.34057212,  3.30707240, -1.46605682, -1.78303599, -0.07614899,
         -1.46367002,  0.02865052,  2.77813029,  3.23617673]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.68520546, -29.33057404, -23.34724998, -23.50040627, -23.08244896,
         -23.89678383, -23.22287750, -25.18677521, -28.65573311, -29.02714920]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.68520737, -29.33057594, -23.34725189, -23.50040627, -23.08245087,
          -23.89678574, -23.22287941, -25.18677711, -28.65573311, -29.02714920],
         [-26.68520737, -29.33057594, -23.34725189, -23.50040627, -23.08245087,
          -23.89678574, -23.22287941, -25.18677711, -28.65573311, -29.02714920]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15315437, -0.41795540,  0.39637947, -0.27752686]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0780 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.55547142, -21.29835701, -26.80152893, -27.28372574, -26.67305183,
         -28.70449638, -26.93589401, -28.94626617, -24.43898201, -23.37986755]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [525]; unstable size 525; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 525] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 525] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 253] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.71861172, 3.84952354, 4.56171322, 3.84017420, 5.90635014, 4.26612377,
         6.14898109, 1.99088383, 1.41389060]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.96761131, -23.51111603, -16.18240738, -18.45089149, -16.26456261,
         -17.94385719, -14.73691177, -18.44084930, -24.07545662, -22.63823509]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [463]; unstable size 463; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 463] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 463] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 463] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 310] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.97309494,  6.70187235, -0.02662659,  2.50170541, -0.07382059,
          1.85107923,  1.77261984,  7.00046825,  5.85668802]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.96761131, -23.51111603, -16.18240738, -18.45089149, -16.26456261,
         -17.94385719, -14.73691177, -18.44084930, -24.07545662, -22.63823509]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.39it/s]100%|██████████| 1/1 [00:00<00:00,  8.38it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.13876343, -24.08310127, -16.37594223, -18.98218155, -16.69490623,
          -18.46617508, -15.56402779, -18.87380600, -24.34334183, -23.19640350],
         [-21.13876343, -24.08310127, -16.37594223, -18.98218155, -16.69490623,
          -18.46617508, -15.56402779, -18.87380600, -24.34334183, -23.19640350]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.81191444, 1.13087845]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1221 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 8th iter
best_l after optimization: 30.210880279541016
alpha/beta optimization time: 0.11178731918334961
initial alpha-crown bounds: tensor([[4.06331873e+00, 6.77928352e+00, 3.31611633e-02, 2.54543543e+00,
         2.59351730e-03, 1.90330660e+00, 1.86108565e+00, 7.08985710e+00,
         5.93283892e+00]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.002593517303466797
verified with init bound!
Result: safe-incomplete in 0.2959 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
         -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [624]; unstable size 624; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 333, 1, 624] with unstable size 332 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 624] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 624] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [332]; unstable size 332; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 332] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 332] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.85006952,  6.56637907,  0.72854507,  0.16635036,  0.09236525,
         -0.16829300,  2.54186106,  4.97395611,  6.48725319]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
         -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]100%|██████████| 1/1 [00:00<00:00,  8.83it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.02144432, -22.99676323, -16.43036079, -14.81798553, -15.77610588,
          -15.32225418, -15.29498672, -18.67889786, -21.40403748, -22.81297874]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.47700119]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1159 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.75708770751953
alpha/beta optimization time: 1.1261110305786133
initial alpha-crown bounds: tensor([[ 3.92190409,  6.63770390,  0.78050661,  0.20929861,  0.10922246,
         -0.07384896,  2.59734559,  5.03754330,  6.53741217]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.07384896278381348
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.69174671173096
Verifying property 0 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9219040870666504.

Properties batch 1, size 1
Remaining timeout: 198.5305516719818
Verifying property 1 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.637703895568848.

Properties batch 2, size 1
Remaining timeout: 198.43289947509766
Verifying property 2 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7805066108703613.

Properties batch 3, size 1
Remaining timeout: 198.3435344696045
Verifying property 3 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20929861068725586.

Properties batch 4, size 1
Remaining timeout: 198.25443267822266
Verifying property 4 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.10922245681285858.

Properties batch 5, size 1
Remaining timeout: 198.1649739742279
Verifying property 5 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07384896]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.95204353, -23.01272583, -16.49953651, -14.64277744, -15.90678215,
        -15.11271095, -15.73008537, -18.56428909, -21.39385223, -22.75593376],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07384896]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 624
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 330
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 975
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 83] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 85] 
split level 5: [/input-8, 220] 
split level 6: [/input-12, 72] 
split level 7: [/input-8, 221] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.555152893066406e-05
Time: prepare 0.0031    bound 0.0040    transfer 0.0015    finalize 0.0016    func 0.0102    
Accumulated time: func 0.0102    prepare 0.0035    bound 0.0040    transfer 0.0015    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0171    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0223    set_bounds 0.0171    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.058190107345581055


Properties batch 6, size 1
Remaining timeout: 197.96007442474365
Verifying property 6 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5973455905914307.

Properties batch 7, size 1
Remaining timeout: 197.86382126808167
Verifying property 7 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.037543296813965.

Properties batch 8, size 1
Remaining timeout: 197.76669144630432
Verifying property 8 with 1 instances.
##### Instance 19 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.537412166595459.
Result: safe in 2.3232 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.15224266, -25.34284210, -20.68698883, -21.11905098, -21.28755379,
         -21.18818092, -18.96833420, -23.86169434, -24.43035507, -25.58597183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [838]; unstable size 838; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 334, 1, 838] with unstable size 333 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 838] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 838] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [333]; unstable size 333; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 333] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 333] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.44667244, 4.02514362, 0.65229511, 0.96642137, 0.94116831, 0.84790850,
         2.93652344, 3.08846712, 4.46393156]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0724 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.31029320, -25.64724922, -21.19924164, -21.00788879, -21.44479942,
         -20.21812248, -22.40578079, -20.59401131, -24.67918396, -24.01255989]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 523] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 523] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 180] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.59975958,  3.72134495, -0.09878147,  0.47413677,  0.20959401,
          1.12203467, -0.49487084,  3.08997488,  2.65038443]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.31029320, -25.64724922, -21.19924164, -21.00788879, -21.44479942,
         -20.21812248, -22.40578079, -20.59401131, -24.67918396, -24.01255989]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.13118744, -26.43610382, -22.10371780, -21.97385406, -22.15757751,
          -21.20539856, -23.31969070, -21.12502861, -25.59633255, -24.98401833],
         [-26.13118744, -26.43610382, -22.10371780, -21.97385406, -22.15757751,
          -21.20539856, -23.31969070, -21.12502861, -25.59633255, -24.98401833]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.89831924, -0.08036995]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0708 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.87531281, -15.75632095, -14.57347012, -15.76169777, -14.07984734,
         -16.31337166, -16.52824211, -16.65783691,  -8.99959373, -15.31440544]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [604]; unstable size 604; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 604] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 604] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 604] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 243] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74084151, 5.52800369, 4.11085033, 5.41803837, 3.71402359, 5.74122143,
         6.21470261, 6.00886154, 4.98770475]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0454 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.64936256, -23.01173401, -19.97909546, -17.49272156, -20.01158905,
         -17.02442741, -21.03547668, -19.50024414, -20.38127136, -20.46527672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [447]; unstable size 447; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 447] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 447] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 447] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 188] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.30454493, 4.15309811, 1.79540038, 0.15248433, 1.72279465, 3.02521515,
         1.09999514, 1.62638283, 1.86410761]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
         -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1052]; unstable size 1052; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 366, 1, 1052] with unstable size 365 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 1052] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1052] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [365]; unstable size 365; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 365] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.67349148,  0.95226669,  3.60676384,  1.65506077,  4.16815948,
          2.46865177,  3.16671324,  0.41265202,  0.44317567]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
         -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.88it/s]100%|██████████| 1/1 [00:00<00:00,  8.87it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.87743950, -19.35758781, -22.15427971, -24.89256096, -22.97465324,
          -25.62451553, -23.85381317, -24.51388931, -21.46959877, -20.74610329]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.51985168]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1153 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.48584747314453
alpha/beta optimization time: 1.1407208442687988
initial alpha-crown bounds: tensor([[-0.55390978,  1.12264442,  3.76586723,  1.80786324,  4.34684753,
          2.61715698,  3.32345819,  0.54351711,  0.51240146]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.5539097785949707
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6899378299713
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55390978]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.53723717, -20.17998314, -24.00674057, -26.48255730, -24.71885872,
        -27.20367241, -25.54711533, -26.09858704, -22.80258942, -21.74352837],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55390978]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1052
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 355
Node /15 input 0: size torch.Size([100]) unstable 29
-----------------
# of unstable neurons: 1436
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 61] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 38] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 67] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.004543781280517578
Time: prepare 0.0018    bound 0.1126    transfer 0.0016    finalize 0.0018    func 0.1178    
Accumulated time: func 0.1178    prepare 0.0022    bound 0.1126    transfer 0.0016    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08762 (8), -0.01088 (8), 
Length of domains: 2
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0159    solve 0.1178    add 0.0079    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0159    solve 0.1178    add 0.0079    
Current (lb-rhs): -0.0876150131225586
2 domains visited
Cumulative time: 0.16925454139709473

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] 
split level 1: [/input-12, 64] [/input-12, 64] 
split level 2: [/input-12, 42] [/input-12, 42] 
split level 3: [/input-8, 1964] [/input-8, 1964] 
split level 4: [/input-12, 90] [/input-12, 71] 
split level 5: [/input-12, 71] [/input-12, 90] 
split level 6: [/input-12, 57] [/input-12, 57] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.3392181396484375e-05
Time: prepare 0.0050    bound 0.0038    transfer 0.0008    finalize 0.0015    func 0.0111    
Accumulated time: func 0.1289    prepare 0.0075    bound 0.1164    transfer 0.0024    finalize 0.0033    
all_split False
Length of domains: 0
Time: pickout 0.0015    decision 0.0223    set_bounds 0.0162    solve 0.0112    add 0.0001    
Accumulated time: pickout 0.0019    decision 0.0448    set_bounds 0.0321    solve 0.1290    add 0.0079    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.22114300727844238


Properties batch 1, size 1
Remaining timeout: 198.27600026130676
Verifying property 1 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1226444244384766.

Properties batch 2, size 1
Remaining timeout: 198.17458128929138
Verifying property 2 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.765867233276367.

Properties batch 3, size 1
Remaining timeout: 198.08272409439087
Verifying property 3 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8078632354736328.

Properties batch 4, size 1
Remaining timeout: 197.9927535057068
Verifying property 4 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.3468475341796875.

Properties batch 5, size 1
Remaining timeout: 197.90319299697876
Verifying property 5 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.617156982421875.

Properties batch 6, size 1
Remaining timeout: 197.8141975402832
Verifying property 6 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.323458194732666.

Properties batch 7, size 1
Remaining timeout: 197.72471570968628
Verifying property 7 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5435171127319336.

Properties batch 8, size 1
Remaining timeout: 197.6354534626007
Verifying property 8 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5124014616012573.
Result: safe in 2.4539 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.01604462, -16.60401917, -13.75974274, -13.62233925, -13.08835316,
         -14.19851303, -12.87796688, -14.01632118, -16.99109268, -15.74184418]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 659] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 659] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 310] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.06798196, -2.58395004, -2.91112757, -3.35464406, -2.51877689,
         -3.61695004, -2.86971140,  0.43352553, -1.25155306]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.01604462, -16.60401917, -13.75974274, -13.62233925, -13.08835316,
         -14.19851303, -12.87796688, -14.01632118, -16.99109268, -15.74184418]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.01604366, -16.60401917, -13.75974369, -13.62234020, -13.08835220,
          -14.19851398, -12.87796688, -14.01632118, -16.99109459, -15.74184608],
         [-15.01604366, -16.60401917, -13.75974369, -13.62234020, -13.08835220,
          -14.19851398, -12.87796688, -14.01632118, -16.99109459, -15.74184608]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.58797550, -1.25629997, -1.39370346, -1.92769146, -0.81752968,
          -2.13807678, -0.99972248,  0.72580242]]], device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0884 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.90988064, -12.45664406, -15.21899319, -13.88694572, -14.48770905,
         -14.28946209, -14.69633865, -13.84464264, -14.34021282, -11.62079906]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [500]; unstable size 500; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 500] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 500] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 500] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 172] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81550610, 0.12776911, 1.67829537, 0.58634591, 0.90821457, 0.83706808,
         1.15809011, 0.31059217, 1.68028736]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0456 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.65237999, -26.28784180, -22.21496773, -22.94103813, -19.88295174,
         -23.10355949, -23.92632675, -16.94944000, -25.83104324, -24.10295296]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 632] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 632] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 241] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.00603676, 7.31206417, 3.91715956, 4.58261061, 2.16801405, 4.73694038,
         5.37613535, 6.48344898, 5.24407578]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0208 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.01066399, -28.57836723, -25.32221985, -26.57108498, -26.69775391,
         -27.17006111, -27.16849136, -29.60597229, -25.49334908, -28.60743141]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [602]; unstable size 602; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 134, 1, 602] with unstable size 133 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 602] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 602] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [133]; unstable size 133; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 133] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.69067621, 1.75672948, 2.90525031, 3.03809547, 3.37360620, 3.51928496,
         5.64078999, 1.68218970, 4.79778814]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0565 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.58022118, -31.81094170, -26.44467354, -24.52676773, -24.55172729,
         -24.79080772, -24.80268097, -25.39589882, -30.52891159, -30.66180420]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [824]; unstable size 824; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 824] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 824] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 824] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 256] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.94624829,  4.85114527, -0.16955900, -1.79679918, -1.73069477,
         -1.51086402, -1.98932171,  3.64661956,  4.09455395]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.58022118, -31.81094170, -26.44467354, -24.52676773, -24.55172729,
         -24.79080772, -24.80268097, -25.39589882, -30.52891159, -30.66180420]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.58021927, -31.81093979, -26.44467163, -24.52676773, -24.55172729,
          -24.79080582, -24.80267715, -25.39589882, -30.52891159, -30.66180420],
         [-29.58021927, -31.81093979, -26.44467163, -24.52676773, -24.55172729,
          -24.79080582, -24.80267715, -25.39589882, -30.52891159, -30.66180420]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.04877281, -0.86913109, -0.84417152, -0.60509300, -0.59322166]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0724 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.97128105, -37.96307373, -34.52404785, -37.46557999, -35.63014603,
         -38.36451340, -36.77544022, -40.04882431, -35.94057846, -38.51336288]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [763]; unstable size 763; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 176, 1, 763] with unstable size 175 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 763] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 763] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [175]; unstable size 175; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 175] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 175] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.93386269, 1.84800124, 4.37804604, 2.56460953, 5.05402088, 3.82877135,
         6.62601948, 3.10796762, 5.56228876]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0496 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.48475838, -29.65727234, -23.60843277, -25.59186363, -21.86170197,
         -25.18845367, -25.36190605, -23.12098694, -27.66559601, -28.33211899]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [618]; unstable size 618; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 618] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 618] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 618] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 272] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.15050733, 5.57539129, 0.71036458, 2.73630500, 2.29937887, 2.30952501,
         0.40072060, 4.11238194, 4.36770487]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0448 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.43476677, -21.89505386, -17.38277435, -18.91377258, -16.89746284,
         -19.49347115, -18.77677345, -17.15766907, -19.06263733, -20.67627907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1008]; unstable size 1008; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 331, 1, 1008] with unstable size 330 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1008] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1008] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [330]; unstable size 330; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 330] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 330] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17812490,  2.10233808, -1.56133389, -0.11888361, -1.70705843,
          0.52253628, -0.66222882, -0.72439408,  1.23998976]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.43476677, -21.89505386, -17.38277435, -18.91377258, -16.89746284,
         -19.49347115, -18.77677345, -17.15766907, -19.06263733, -20.67627907]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.43476868, -21.89505196, -17.38277435, -18.91377449, -16.89746284,
          -19.49347115, -18.77677155, -17.15766907, -19.06263924, -20.67627907],
         [-19.43476868, -21.89505196, -17.38277435, -18.91377449, -16.89746284,
          -19.49347115, -18.77677155, -17.15766907, -19.06263924, -20.67627907]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.22510529,  1.75610542, -0.26020622,  1.61910248,  1.90497017]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0765 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.35557175, -32.47544098, -30.43883324, -33.30394363, -32.17427444,
         -34.25338364, -33.63493729, -35.26922607, -29.93074799, -32.68428421]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [840]; unstable size 840; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 840] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 840] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 840] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 173] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.16921949, 2.31352949, 4.99022341, 3.81911135, 5.78720474, 5.29893827,
         6.80568695, 1.75992775, 4.51705360]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0488 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.44459343, -15.51812744, -11.64377499, -10.47452068, -10.72119522,
         -11.05707169, -11.06166363, -11.43825245, -16.58495712, -14.37756157]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [649]; unstable size 649; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 316, 1, 649] with unstable size 315 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 649] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 649] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [315]; unstable size 315; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 315] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 315] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.31691790,  2.24976540,  0.04557896, -0.85450864,  0.30286229,
         -0.63437951, -0.21570811,  3.64171362,  1.40587473]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.44459343, -15.51812744, -11.64377499, -10.47452068, -10.72119522,
         -11.05707169, -11.06166363, -11.43825245, -16.58495712, -14.37756157]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.56100559, -15.55041409, -11.83961582, -10.86203289, -10.65551853,
          -11.47358513, -11.20098400, -11.55763531, -16.66084862, -14.52304459],
         [-15.56100559, -15.55041409, -11.83961582, -10.86203289, -10.65551853,
          -11.47358513, -11.20098400, -11.55763531, -16.66084862, -14.52304459]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20651436,  0.33895111,  0.69560242]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0711 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
         -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [539]; unstable size 539; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 283, 1, 539] with unstable size 282 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 539] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [282]; unstable size 282; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 282] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 282] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.73897934,  3.94992781,  0.45282078,  1.56286335,  0.87203968,
         -1.16177833,  0.85932636,  3.68842530,  2.19751143]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
         -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.64219093, -17.43132782, -12.73828030, -10.98612118, -13.95148468,
          -12.17405128, -10.92382336, -13.20341492, -16.59213638, -15.28749561]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.06229782]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.09047651,  1.12222254,  1.12222254,  ...,  1.07460344,
             1.15396857,  1.13809550],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.04285717,
             1.07460344,  1.07460344],
           [ 1.04285717,  1.07460344,  1.07460344,  ...,  1.02698421,
             1.07460344,  1.07460344],
           ...,
           [ 1.04285717,  1.07460344,  1.09047651,  ..., -0.35396814,
             0.55079371,  1.07460344],
           [ 1.04285717,  1.07460344,  1.05873048,  ..., -0.62380952,
            -0.24285704,  0.77301592],
           [ 1.04285717,  1.07460344,  1.07460344,  ..., -0.21111101,
             0.10634929,  0.83650798]],

          [[ 1.25603890,  1.28824508,  1.28824508,  ...,  1.25603890,
             1.27214205,  1.28824508],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.25603890,
             1.23993587,  1.23993587],
           [ 1.20772982,  1.23993587,  1.23993587,  ...,  1.23993587,
             1.23993587,  1.23993587],
           ...,
           [ 1.20772982,  1.23993587,  1.25603890,  ..., -0.49919480,
             0.51529801,  1.17552364],
           [ 1.20772982,  1.23993587,  1.22383285,  ..., -0.82125598,
            -0.32206106,  0.85346222],
           [ 1.20772982,  1.23993587,  1.23993587,  ..., -0.32206106,
             0.08051541,  0.93397754]],

          [[ 1.42578757,  1.45577252,  1.45577252,  ...,  1.44078004,
             1.42578757,  1.45577252],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.41079497,
             1.39580250,  1.41079497],
           [ 1.38081002,  1.41079497,  1.41079497,  ...,  1.44078004,
             1.42578757,  1.41079497],
           ...,
           [ 1.38081002,  1.41079497,  1.42578757,  ..., -0.53823084,
             0.54122955,  1.33583248],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -1.07796109,
            -0.41829082,  0.99100471],
           [ 1.38081002,  1.41079497,  1.41079497,  ..., -0.64317840,
            -0.07346311,  1.06596720]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0686 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.07254219, -23.32916451, -18.11545181, -16.03979683, -17.97344971,
         -17.07232475, -18.43986130, -16.48874283, -21.96584511, -20.95975685]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [563]; unstable size 563; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 156, 1, 563] with unstable size 155 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 563] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 563] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [155]; unstable size 155; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 155] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 155] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.52441859,  5.39360428,  0.73585320, -1.15312338,  0.82712793,
         -0.08107734,  1.07491732,  4.02794266,  3.11614490]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.07254219, -23.32916451, -18.11545181, -16.03979683, -17.97344971,
         -17.07232475, -18.43986130, -16.48874283, -21.96584511, -20.95975685]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.07254028, -23.32916641, -18.11545372, -16.03979683, -17.97345161,
          -17.07232285, -18.43986130, -16.48874283, -21.96584702, -20.95975685],
         [-19.07254028, -23.32916641, -18.11545372, -16.03979683, -17.97345161,
          -17.07232285, -18.43986130, -16.48874283, -21.96584702, -20.95975685]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44894600,  0.58358002]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0598 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.70158577, -22.21768379, -23.95887756, -27.52854156, -24.44779968,
         -28.61229897, -28.66467094, -26.43075180, -22.27626801, -22.80558968]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [756]; unstable size 756; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 197, 1, 756] with unstable size 196 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 756] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 756] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [196]; unstable size 196; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 196] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 196] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.58621740, 2.47436023, 5.86044264, 2.89928865, 6.82225561, 6.78166199,
         4.58398342, 0.69966292, 1.06527996]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0491 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
         -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [453]; unstable size 453; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 302, 1, 453] with unstable size 301 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 453] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 453] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [301]; unstable size 301; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 301] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 301] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.36418724e+00,  3.88016176e+00, -1.22761726e-03,  5.18171549e-01,
         -7.83936977e-02,  5.22855163e-01,  8.93965244e-01,  5.49661064e+00,
          2.41142774e+00]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
         -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.62it/s]100%|██████████| 1/1 [00:00<00:00,  8.61it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.12287807, -14.69568729, -10.06177521, -10.78610325, -10.26407623,
          -10.99050617,  -9.46359158, -11.73374748, -16.38097382, -13.27322674],
         [-15.12287807, -14.69568729, -10.06177521, -10.78610325, -10.26407623,
          -10.99050617,  -9.46359158, -11.73374748, -16.38097382, -13.27322674]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59818363, 0.80048466]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1190 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.593082427978516
alpha/beta optimization time: 1.135376214981079
initial alpha-crown bounds: tensor([[ 4.42039108,  3.93954754,  0.04252672,  0.59053898, -0.04266930,
          0.61050224,  0.96340472,  5.55710411,  2.51173711]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.04266929626464844
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.71356105804443
Verifying property 0 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.420391082763672.

Properties batch 1, size 1
Remaining timeout: 198.5720136165619
Verifying property 1 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.939547538757324.

Properties batch 2, size 1
Remaining timeout: 198.4750692844391
Verifying property 2 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.0425267219543457.

Properties batch 3, size 1
Remaining timeout: 198.36596822738647
Verifying property 3 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5905389785766602.

Properties batch 4, size 1
Remaining timeout: 198.27645754814148
Verifying property 4 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04266930]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.42754364, -14.80943012, -10.45694256, -11.06365776, -10.51977921,
        -11.33867931,  -9.27479267, -12.10030270, -16.64357758, -13.39722061],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04266930]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 453
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 299
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 772
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 14] 
split level 3: [/input-12, 90] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 10] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 17] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.172325134277344e-05
Time: prepare 0.0018    bound 0.0040    transfer 0.0017    finalize 0.0017    func 0.0092    
Accumulated time: func 0.0092    prepare 0.0022    bound 0.0040    transfer 0.0017    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0222    set_bounds 0.0159    solve 0.0093    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0222    set_bounds 0.0159    solve 0.0093    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052078962326049805


Properties batch 5, size 1
Remaining timeout: 198.0895595550537
Verifying property 5 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6105022430419922.

Properties batch 6, size 1
Remaining timeout: 197.98938632011414
Verifying property 6 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9634047150611877.

Properties batch 7, size 1
Remaining timeout: 197.90017771720886
Verifying property 7 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.557104110717773.

Properties batch 8, size 1
Remaining timeout: 197.8115165233612
Verifying property 8 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.511737108230591.
Result: safe in 2.2779 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.25883293, -16.40706444, -12.91650105, -13.33503723, -12.76172256,
         -14.05701828, -10.42017269, -14.10208035, -18.75581741, -16.93133926]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [403]; unstable size 403; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 259, 1, 403] with unstable size 258 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 403] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 403] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [258]; unstable size 258; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 258] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 258] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00860643, 4.23702240, 1.09872437, 1.64570796, 0.89420366, 2.14901733,
         1.57642531, 6.09760046, 4.54596186]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0738 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.57652092, -32.23639679, -28.36616898, -29.83554840, -30.16464424,
         -30.64960480, -32.17686844, -29.80444527, -29.91892624, -32.09518433]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [483]; unstable size 483; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 483] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 483] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 483] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 194] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.07906628, 1.77047992, 3.19271374, 3.46971583, 3.86028981, 5.23355150,
         2.96001387, 3.10798502, 5.22355986]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0533 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.71967888, -24.49569893, -23.46326828, -21.31615639, -22.26188850,
         -21.78440475, -22.43858719, -23.19987106, -16.18318367, -22.82086182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [644]; unstable size 644; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 644] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 644] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 214] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.49413395, 6.51567602, 5.72104549, 3.75618219, 4.40788555, 4.05219269,
         4.77330208, 5.20548916, 5.05213928]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0611 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.19749069, -20.07060051, -15.00829124, -14.86962318, -16.28983498,
         -15.46364594, -13.24634743, -17.95564651, -17.94532013, -19.32559013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [570]; unstable size 570; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 570] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 570] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 264] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89140463, 4.24306536, 0.43238330, 0.61651587, 1.44491506, 0.98225856,
         2.89481354, 2.46429276, 3.67898154]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0666 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.52461720, -17.35180283, -12.05615902, -12.63583565, -11.58507633,
         -12.59487724, -10.57591057, -13.41824055, -16.97095490, -15.37764359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 591] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 591] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 291] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.08203411,  2.15382957, -1.83007812, -0.33773941, -2.24676943,
         -3.21968865, -0.57630765,  2.02706242,  0.67616463]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.52461720, -17.35180283, -12.05615902, -12.63583565, -11.58507633,
         -12.59487724, -10.57591057, -13.41824055, -16.97095490, -15.37764359]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.52461624, -17.35180092, -12.05615902, -12.63583660, -11.58507729,
          -12.59487820, -10.57591152, -13.41824245, -16.97095490, -15.37764454],
         [-15.52461624, -17.35180092, -12.05615902, -12.63583660, -11.58507729,
          -12.59487820, -10.57591152, -13.41824245, -16.97095490, -15.37764454]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53871918,  0.04095840, -1.00980091, -2.01896667,  0.82336426]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0641 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.45021820, -27.45919800, -20.82433891, -22.54921150, -21.01146507,
         -23.11272240, -21.28590775, -22.88107681, -25.70099831, -27.22681618]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [929]; unstable size 929; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 450, 1, 929] with unstable size 449 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 929] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 929] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [449]; unstable size 449; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 449] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 449] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.88848364,  3.70000124,  0.24055982, -1.21744108,  0.64094090,
         -1.06626379, -0.11656189,  2.34579182,  3.68335819]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.45021820, -27.45919800, -20.82433891, -22.54921150, -21.01146507,
         -23.11272240, -21.28590775, -22.88107681, -25.70099831, -27.22681618]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.65473557, -27.69364357, -21.07613373, -22.60361481, -20.87356758,
          -23.11100769, -21.44839478, -22.64229012, -25.88486099, -27.33996201],
         [-23.65473557, -27.69364357, -21.07613373, -22.60361481, -20.87356758,
          -23.11100769, -21.44839478, -22.64229012, -25.88486099, -27.33996201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20256615,  0.37226105,  1.56615639]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0063 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0562 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.70279121, -25.07186508, -24.43242264, -24.38763809, -24.00282478,
         -24.77808571, -24.40219879, -25.75534058, -24.67971420, -24.98260498]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [670]; unstable size 670; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 670] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 670] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 670] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 244] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.87631416, -2.55956268, -2.18438005, -2.77099514, -1.83020782,
         -2.16091824, -1.01760435, -2.05305576, -0.77688038]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.70279121, -25.07186508, -24.43242264, -24.38763809, -24.00282478,
         -24.77808571, -24.40219879, -25.75534058, -24.67971420, -24.98260498]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.70278931, -25.07186699, -24.43242264, -24.38763809, -24.00282288,
          -24.77808380, -24.40219879, -25.75533867, -24.67971420, -24.98260689],
         [-24.70278931, -25.07186699, -24.43242264, -24.38763809, -24.00282288,
          -24.77808380, -24.40219879, -25.75533867, -24.67971420, -24.98260689]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36907768, -0.63944435, -0.68422890, -1.06904411, -0.29378319,
          -0.66966820,  0.68347168, -0.39215279, -0.08926010]]],
       device='cuda:0')
number of violation:  8
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.77937126, -24.38296890, -19.26746750, -18.82821846, -19.50073814,
         -19.05830956, -19.41297340, -21.65519333, -24.81905746, -23.99803734]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [889]; unstable size 889; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 324, 1, 889] with unstable size 323 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 889] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 889] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [323]; unstable size 323; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 323] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 323] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86873031,  3.27330351, -1.23502302, -0.61113089, -0.78136897,
         -0.75137866,  0.93968034,  3.48995113,  3.24112701]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.77937126, -24.38296890, -19.26746750, -18.82821846, -19.50073814,
         -19.05830956, -19.41297340, -21.65519333, -24.81905746, -23.99803734]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.77937126, -24.38297081, -19.26746559, -18.82821846, -19.50073814,
          -19.05830956, -19.41297150, -21.65519333, -24.81905556, -23.99803925],
         [-21.77937126, -24.38297081, -19.26746559, -18.82821846, -19.50073814,
          -19.05830956, -19.41297150, -21.65519333, -24.81905556, -23.99803925]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.20915604, -0.23009109,  0.44242859,  0.35466194]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0555 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.53012466, -29.66223907, -26.90876389, -28.07838631, -26.04151726,
         -29.22808647, -27.47805023, -29.35506439, -20.28993988, -29.09470940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 586] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 586] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 173] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51274920, 8.23108101, 5.60526514, 6.71247005, 4.74748898, 7.73364496,
         6.02225113, 7.97453213, 7.67071867]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0425 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
         -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [688]; unstable size 688; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 688] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 688] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 688] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 260] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.49447179,  3.06922174,  0.62996531, -0.02265933,  0.38052845,
         -0.22107935,  0.10723680,  4.39991093,  2.21292210]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
         -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.89it/s]100%|██████████| 1/1 [00:00<00:00,  8.88it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.18397522, -21.81373215, -17.85622978, -16.59555244, -17.68647575,
          -16.41921616, -17.14182472, -17.56402969, -22.39430809, -20.54507637],
         [-20.18397522, -21.81373215, -17.85622978, -16.59555244, -17.68647575,
          -16.41921616, -17.14182472, -17.56402969, -22.39430809, -20.54507637]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.17633629, 0.72260857]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1154 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.641357421875
alpha/beta optimization time: 1.1233246326446533
initial alpha-crown bounds: tensor([[ 2.55440617,  3.16163421,  0.69625497,  0.01558399,  0.45437002,
         -0.16967773,  0.16310698,  4.47692823,  2.28875065]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.169677734375
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.710382938385
Verifying property 0 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.55440616607666.

Properties batch 1, size 1
Remaining timeout: 198.57511258125305
Verifying property 1 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1616342067718506.

Properties batch 2, size 1
Remaining timeout: 198.48412013053894
Verifying property 2 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6962549686431885.

Properties batch 3, size 1
Remaining timeout: 198.39411568641663
Verifying property 3 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.015583992004394531.

Properties batch 4, size 1
Remaining timeout: 198.30441546440125
Verifying property 4 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.45437002182006836.

Properties batch 5, size 1
Remaining timeout: 198.21450281143188
Verifying property 5 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16967773]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.52310753, -22.21076012, -18.13401031, -16.74857521, -17.94910240,
        -16.36793709, -17.47036171, -17.69790268, -22.73849869, -20.87914658],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16967773]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 688
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 258
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 968
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 0] 
split level 1: [/input-12, 64] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 17] 
split level 4: [/input-12, 72] 
split level 5: [/input-12, 35] 
split level 6: [/input-12, 89] 
split level 7: [/input-8, 1948] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.410743713378906e-05
Time: prepare 0.0031    bound 0.0040    transfer 0.0019    finalize 0.0015    func 0.0105    
Accumulated time: func 0.0105    prepare 0.0035    bound 0.0040    transfer 0.0019    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0224    set_bounds 0.0170    solve 0.0106    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0224    set_bounds 0.0170    solve 0.0106    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05484366416931152


Properties batch 6, size 1
Remaining timeout: 198.01212239265442
Verifying property 6 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1631069779396057.

Properties batch 7, size 1
Remaining timeout: 197.91585230827332
Verifying property 7 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.476928234100342.

Properties batch 8, size 1
Remaining timeout: 197.82567882537842
Verifying property 8 with 1 instances.
##### Instance 48 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.288750648498535.
Result: safe in 2.2640 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.84988976, -27.04168510, -32.56347275, -33.70067215, -33.15383530,
         -34.10073471, -32.55872345, -32.39547729, -30.81136703, -29.74110985]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [597]; unstable size 597; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 597] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 597] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 597] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 252] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.47295189, 3.67134237, 4.79960918, 4.17743540, 5.03716660, 3.67930889,
         3.29446316, 2.28837848, 1.78437126]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0492 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.95876122, -24.06052399, -22.79921150, -22.37466049, -21.66536903,
         -22.27144814, -23.11923218, -24.92821121, -24.52709389, -24.95055580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1300]; unstable size 1300; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 386, 1, 1300] with unstable size 385 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 1300] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1300] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [385]; unstable size 385; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 385] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 385] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.83590472, -0.36369705, -0.81580913, -0.21350294, -1.76645517,
         -0.45421189,  1.06313896,  0.19591498,  0.91548586]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.95876122, -24.06052399, -22.79921150, -22.37466049, -21.66536903,
         -22.27144814, -23.11923218, -24.92821121, -24.52709389, -24.95055580]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.95876312, -24.06052208, -22.79921341, -22.37466049, -21.66536713,
          -22.27144814, -23.11923218, -24.92821121, -24.52709579, -24.95055199],
         [-21.95876312, -24.06052208, -22.79921341, -22.37466049, -21.66536713,
          -22.27144814, -23.11923218, -24.92821121, -24.52709579, -24.95055199]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31268501,  1.78907394,  0.52776527,  0.10321236, -0.60608101,
           0.84778404]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0861 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.02009583, -25.62828255, -18.56137657, -22.16949654, -20.18937492,
         -22.90802956, -21.61422729, -24.61019516, -20.71578217, -25.30768013]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [637]; unstable size 637; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 152, 1, 637] with unstable size 151 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 637] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 637] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [151]; unstable size 151; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 151] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 151] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.60369205, 1.05985761, 4.44430256, 2.54081869, 5.11138248, 3.84395003,
         6.83230686, 2.69353676, 7.41863537]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0622 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.94017601, -28.86633301, -23.06001091, -21.31272125, -22.19619942,
         -20.90770912, -22.69350815, -22.96586227, -29.16728783, -27.83672142]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [615]; unstable size 615; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 323, 1, 615] with unstable size 322 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 615] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 615] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [322]; unstable size 322; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 322] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 322] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.51382399, 5.73519039, 0.91068649, 0.11511415, 0.03012919, 0.51855636,
         1.05246675, 6.62892151, 5.18492413]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0502 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.12831688, -24.87204933, -21.52433014, -21.45733643, -22.17998314,
         -21.62087250, -21.34234619, -22.34700012, -24.97188950, -22.55655289]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [580]; unstable size 580; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 184, 1, 580] with unstable size 183 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 580] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 580] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [183]; unstable size 183; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 183] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 183] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.55080462,  1.90782368, -1.05542922, -0.76249868, -0.39093399,
         -0.77109873, -0.48512766,  2.12621999, -0.21663618]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.12831688, -24.87204933, -21.52433014, -21.45733643, -22.17998314,
         -21.62087250, -21.34234619, -22.34700012, -24.97188950, -22.55655289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.98245811, -25.14087677, -21.26465225, -21.48969841, -22.09676743,
          -21.62775993, -21.63244629, -22.23480034, -24.92131615, -22.71515083],
         [-21.98245811, -25.14087677, -21.26465225, -21.48969841, -22.09676743,
          -21.62775993, -21.63244629, -22.23480034, -24.92131615, -22.71515083]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.35001183, -0.36779404, -0.14274788,  0.46432114, -0.00468636,
           0.60235405,  1.08270454]]], device='cuda:0')
number of violation:  3
Attack finished in 0.0161 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0808 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
         -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [631]; unstable size 631; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 277, 1, 631] with unstable size 276 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 631] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 631] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [276]; unstable size 276; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 276] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.26207829,  2.67205763, -0.09352827,  0.10025704,  0.83907461,
          0.73086977,  0.70621490,  0.08608752,  2.33385897]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
         -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.10it/s]100%|██████████| 1/1 [00:00<00:00,  9.09it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.58753777, -25.74412537, -22.30705833, -22.74228668, -23.48993874,
          -23.62050629, -23.39388275, -23.13651657, -21.69568634, -25.29735374]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.61137199]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1126 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.149774551391602
alpha/beta optimization time: 1.1201322078704834
initial alpha-crown bounds: tensor([[ 2.29125285,  2.73074389, -0.03381872,  0.15643954,  0.90439463,
          0.79678631,  0.77209902,  0.15606052,  2.37581682]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.033818721771240234
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.7193422317505
Verifying property 0 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.291252851486206.

Properties batch 1, size 1
Remaining timeout: 198.58091974258423
Verifying property 1 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.730743885040283.

Properties batch 2, size 1
Remaining timeout: 198.4905662536621
Verifying property 2 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03381872]], device='cuda:0') need to verify.
Model prediction is: tensor([-25.02576256, -26.03837204, -23.14089203, -23.39199638, -24.21075249,
        -24.33787727, -24.11221695, -23.78001785, -21.66454697, -25.57447433],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03381872]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 631
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 271
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 917
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 50] 
split level 6: [/input-12, 68] 
split level 7: [/input-8, 1956] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.3392181396484375e-05
Time: prepare 0.0030    bound 0.0041    transfer 0.0015    finalize 0.0016    func 0.0103    
Accumulated time: func 0.0103    prepare 0.0035    bound 0.0041    transfer 0.0015    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0222    set_bounds 0.0168    solve 0.0103    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0222    set_bounds 0.0168    solve 0.0103    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05389571189880371


Properties batch 3, size 1
Remaining timeout: 198.31411814689636
Verifying property 3 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15643954277038574.

Properties batch 4, size 1
Remaining timeout: 198.22020316123962
Verifying property 4 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9043946266174316.

Properties batch 5, size 1
Remaining timeout: 198.13236021995544
Verifying property 5 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7967863082885742.

Properties batch 6, size 1
Remaining timeout: 198.04461145401
Verifying property 6 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7720990180969238.

Properties batch 7, size 1
Remaining timeout: 197.95694231987
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15606051683425903.

Properties batch 8, size 1
Remaining timeout: 197.8692765235901
Verifying property 8 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.375816822052002.
Result: safe in 2.2185 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.79308891, -23.41397476, -18.82098770, -19.48437309, -18.56243706,
         -19.91847992, -17.07889175, -20.97890472, -23.56008720, -23.37459755]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 336, 1, 606] with unstable size 335 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 606] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [335]; unstable size 335; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 335] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 335] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.91788769, 3.99140882, 0.67280000, 1.37791431, 0.25162327, 1.69752812,
         2.11260486, 4.47059774, 4.00945616]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0660 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
         -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 675] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 675] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 216] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.57993078,  3.15776849,  6.31814671,  3.25631642,  7.08248043,
          6.16690922,  5.13876152, -1.86000681,  3.30038881]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
         -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.65884781, -39.15306854, -38.09638214, -41.44153214, -38.26478195,
          -42.46372604, -41.47655106, -40.54250336, -32.64043427, -38.01860428]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.01841354]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0736 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
         -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [645]; unstable size 645; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 263, 1, 645] with unstable size 262 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 645] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 645] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [262]; unstable size 262; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 262] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.42895722,  4.10993195, -0.60754919, -0.13815892, -0.32017219,
          1.23225915, -0.67439425,  4.97595835,  2.89095998]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
         -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.38it/s]100%|██████████| 1/1 [00:00<00:00,  8.37it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.49737930, -22.43238258, -17.16550827, -16.42162704, -17.18960381,
          -16.38314819, -18.64624214, -17.14737320, -23.54323959, -21.05616760],
         [-21.49737930, -22.43238258, -17.16550827, -16.42162704, -17.18960381,
          -16.38314819, -18.64624214, -17.14737320, -23.54323959, -21.05616760]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.78236008, 0.03847885, 0.80645561, 0.76422501]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1223 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.555826187133789
alpha/beta optimization time: 1.1203720569610596
initial alpha-crown bounds: tensor([[ 3.51031113,  4.22539568, -0.55174983, -0.12316990, -0.26672757,
          1.27698278, -0.59470576,  5.09362936,  2.98586059]], device='cuda:0')
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.5947057604789734
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.70242071151733
Verifying property 0 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5103111267089844.

Properties batch 1, size 1
Remaining timeout: 198.56778216362
Verifying property 1 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.225395679473877.

Properties batch 2, size 1
Remaining timeout: 198.47756481170654
Verifying property 2 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55174983]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55174983]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 85] 
split level 4: [/input-12, 34] 
split level 5: [/input-12, 83] 
split level 6: [/input-12, 7] 
split level 7: [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.004724025726318359
Time: prepare 0.0018    bound 0.1145    transfer 0.0016    finalize 0.0015    func 0.1194    
Accumulated time: func 0.1194    prepare 0.0022    bound 0.1145    transfer 0.0016    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15214 (8), -0.13599 (8), -0.10110 (8), -0.09103 (8), -0.07763 (8), -0.05946 (8), -0.03572 (8), -0.03278 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0161    solve 0.1195    add 0.0010    
Accumulated time: pickout 0.0004    decision 0.0221    set_bounds 0.0161    solve 0.1195    add 0.0010    
Current (lb-rhs): -0.1521419882774353
8 domains visited
Cumulative time: 0.16350626945495605

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] [/input-12, 17] 
split level 2: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 3: [/input-8, 1963] [/input-8, 1636] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1636] [/input-8, 1691] [/input-8, 1691] 
split level 4: [/input-8, 1692] [/input-8, 1627] [/input-12, 71] [/input-8, 1627] [/input-8, 1691] [/input-8, 1627] [/input-8, 1636] [/input-8, 1692] 
pruning_in_iteration open status: True
ratio of positive domain = 235 / 256 = 0.91796875
pruning-in-iteration extra time: 0.004727363586425781
Time: prepare 0.0050    bound 0.1069    transfer 0.0010    finalize 0.0015    func 0.1144    
Accumulated time: func 0.2337    prepare 0.0074    bound 0.2214    transfer 0.0026    finalize 0.0029    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06963 (13), -0.05696 (13), -0.05673 (13), -0.05009 (13), -0.04916 (13), -0.04632 (13), -0.04201 (13), -0.03965 (13), -0.03801 (13), -0.03661 (13), -0.03622 (13), -0.02939 (13), -0.02895 (13), -0.02867 (13), -0.02614 (13), -0.01834 (13), -0.01062 (13), -0.00697 (13), -0.00496 (13), -0.00160 (13), 
Length of domains: 21
Time: pickout 0.0011    decision 0.0181    set_bounds 0.0128    solve 0.1144    add 0.0010    
Accumulated time: pickout 0.0014    decision 0.0403    set_bounds 0.0288    solve 0.2339    add 0.0021    
Current (lb-rhs): -0.06962615251541138
29 domains visited
Cumulative time: 0.311734676361084

BaB round 3
batch: 21
splitting decisions: 
split level 0: [/input-8, 1683] [/input-8, 1691] [/input-8, 1692] [/input-8, 1683] [/input-8, 1683] [/input-8, 1683] [/input-8, 1691] [/input-8, 1692] [/input-8, 1692] [/input-8, 1683] 
split level 1: [/input-8, 1963] [/input-8, 1692] [/input-12, 71] [/input-8, 1692] [/input-12, 71] [/input-8, 1963] [/input-8, 1692] [/input-12, 71] [/input-8, 1963] [/input-8, 1692] 
split level 2: [/input-8, 1644] [/input-8, 1627] [/input-8, 1946] [/input-8, 1946] [/input-8, 1946] [/input-8, 1644] [/input-8, 1627] [/input-8, 1946] [/input-8, 1627] [/input-8, 1636] 
split level 3: [/input-8, 1619] [/input-8, 1946] [/input-8, 930] [/input-8, 1636] [/input-8, 930] [/input-8, 1619] [/input-8, 1946] [/input-8, 930] [/input-8, 1946] [/input-8, 1946] 
pruning_in_iteration open status: True
ratio of positive domain = 245 / 336 = 0.7291666666666667
pruning-in-iteration extra time: 0.004749298095703125
Time: prepare 0.0065    bound 0.1471    transfer 0.0023    finalize 0.0024    func 0.1584    
Accumulated time: func 0.3921    prepare 0.0142    bound 0.3685    transfer 0.0049    finalize 0.0053    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04269 (17), -0.03949 (17), -0.03633 (17), -0.03502 (17), -0.03387 (17), -0.03233 (17), -0.02993 (17), -0.02979 (17), -0.02836 (17), -0.02695 (17), -0.02685 (17), -0.02643 (17), -0.02639 (17), -0.02376 (17), -0.02335 (17), -0.02324 (17), -0.02314 (17), -0.02257 (17), -0.02191 (17), -0.02171 (17), 
Length of domains: 91
Time: pickout 0.0011    decision 0.0173    set_bounds 0.0138    solve 0.1585    add 0.0016    
Accumulated time: pickout 0.0025    decision 0.0576    set_bounds 0.0426    solve 0.3924    add 0.0037    
Current (lb-rhs): -0.04268747568130493
120 domains visited
Cumulative time: 0.5048785209655762

BaB round 4
batch: 91
splitting decisions: 
split level 0: [/input-8, 1635] [/input-8, 1635] [/input-8, 1627] [/input-8, 1635] [/input-8, 1691] [/input-8, 1635] [/input-8, 1627] [/input-8, 1691] [/input-8, 1627] [/input-8, 1636] 
split level 1: [/input-8, 1636] [/input-8, 1636] [/input-8, 417] [/input-8, 1636] [/input-8, 1627] [/input-8, 1636] [/input-8, 417] [/input-8, 1627] [/input-8, 417] [/input-8, 1708] 
pruning_in_iteration open status: True
ratio of positive domain = 271 / 364 = 0.7445054945054945
pruning-in-iteration extra time: 0.004588127136230469
Time: prepare 0.0068    bound 0.1256    transfer 0.0012    finalize 0.0019    func 0.1356    
Accumulated time: func 0.5277    prepare 0.0211    bound 0.4941    transfer 0.0062    finalize 0.0072    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03126 (19), -0.02765 (19), -0.02736 (19), -0.02423 (19), -0.02370 (19), -0.02294 (19), -0.02084 (19), -0.01880 (19), -0.01816 (19), -0.01810 (19), -0.01686 (19), -0.01638 (19), -0.01501 (19), -0.01478 (19), -0.01447 (19), -0.01440 (19), -0.01432 (19), -0.01423 (19), -0.01418 (19), -0.01350 (19), 
Length of domains: 93
Time: pickout 0.0019    decision 0.0190    set_bounds 0.0091    solve 0.1357    add 0.0026    
Accumulated time: pickout 0.0044    decision 0.0766    set_bounds 0.0517    solve 0.5281    add 0.0063    
Current (lb-rhs): -0.03126424551010132
213 domains visited
Cumulative time: 0.6740953922271729

BaB round 5
batch: 93
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 921] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 1635] [/input-8, 1635] 
split level 1: [/input-8, 1619] [/input-8, 1619] [/input-8, 1619] [/input-8, 1708] [/input-8, 419] [/input-8, 1619] [/input-8, 1619] [/input-8, 1619] [/input-8, 1708] [/input-8, 1953] 
pruning_in_iteration open status: True
ratio of positive domain = 307 / 372 = 0.825268817204301
pruning-in-iteration extra time: 0.004590034484863281
Time: prepare 0.0070    bound 0.1310    transfer 0.0025    finalize 0.0020    func 0.1426    
Accumulated time: func 0.6704    prepare 0.0283    bound 0.6252    transfer 0.0086    finalize 0.0092    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01879 (21), -0.01806 (21), -0.01704 (21), -0.01631 (21), -0.01516 (21), -0.01494 (21), -0.01469 (21), -0.01428 (21), -0.01319 (21), -0.01295 (21), -0.01294 (21), -0.01207 (21), -0.01205 (21), -0.01126 (21), -0.01109 (21), -0.01087 (21), -0.01067 (21), -0.01059 (21), -0.01030 (21), -0.00960 (21), 
Length of domains: 65
Time: pickout 0.0020    decision 0.0189    set_bounds 0.0094    solve 0.1427    add 0.0019    
Accumulated time: pickout 0.0064    decision 0.0955    set_bounds 0.0612    solve 0.6708    add 0.0082    
Current (lb-rhs): -0.01879173517227173
278 domains visited
Cumulative time: 0.8498818874359131

BaB round 6
batch: 65
splitting decisions: 
split level 0: [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 419] [/input-8, 1644] 
split level 1: [/input-8, 419] [/input-8, 417] [/input-8, 419] [/input-8, 419] [/input-8, 1619] [/input-8, 417] [/input-8, 419] [/input-8, 419] [/input-8, 1644] [/input-8, 417] 
pruning_in_iteration open status: True
ratio of positive domain = 218 / 260 = 0.8384615384615385
pruning-in-iteration extra time: 0.004553556442260742
Time: prepare 0.0050    bound 0.1089    transfer 0.0009    finalize 0.0014    func 0.1162    
Accumulated time: func 0.7866    prepare 0.0335    bound 0.7340    transfer 0.0096    finalize 0.0106    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00726 (23), -0.00656 (23), -0.00610 (23), -0.00586 (23), -0.00544 (23), -0.00539 (23), -0.00509 (23), -0.00475 (23), -0.00452 (23), -0.00443 (23), -0.00432 (23), -0.00377 (23), -0.00367 (23), -0.00363 (23), -0.00361 (23), -0.00357 (23), -0.00318 (23), -0.00303 (23), -0.00296 (23), -0.00282 (23), 
Length of domains: 42
Time: pickout 0.0016    decision 0.0164    set_bounds 0.0066    solve 0.1163    add 0.0012    
Accumulated time: pickout 0.0080    decision 0.1118    set_bounds 0.0678    solve 0.7871    add 0.0094    
Current (lb-rhs): -0.007255733013153076
320 domains visited
Cumulative time: 0.9925992488861084

BaB round 7
batch: 42
splitting decisions: 
split level 0: [/input-8, 1628] [/input-8, 1628] [/input-8, 1953] [/input-8, 1628] [/input-8, 1628] [/input-8, 1953] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] 
split level 1: [/input-8, 1953] [/input-8, 1953] [/input-8, 1628] [/input-8, 1953] [/input-8, 417] [/input-8, 1628] [/input-8, 1953] [/input-8, 1953] [/input-8, 1953] [/input-8, 417] 
split level 2: [/input-8, 417] [/input-8, 419] [/input-8, 1644] [/input-8, 417] [/input-8, 1953] [/input-8, 1644] [/input-8, 417] [/input-8, 419] [/input-8, 417] [/input-8, 1953] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 336 / 336 = 1.0
pruning-in-iteration extra time: 4.124641418457031e-05
Time: prepare 0.0063    bound 0.0038    transfer 0.0013    finalize 0.0016    func 0.0130    
Accumulated time: func 0.7996    prepare 0.0400    bound 0.7378    transfer 0.0109    finalize 0.0122    
all_split False
Length of domains: 0
Time: pickout 0.0013    decision 0.0159    set_bounds 0.0106    solve 0.0130    add 0.0001    
Accumulated time: pickout 0.0094    decision 0.1277    set_bounds 0.0784    solve 0.8001    add 0.0095    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
320 domains visited
Cumulative time: 1.0339796543121338


Properties batch 3, size 1
Remaining timeout: 197.31466579437256
Verifying property 3 with 1 instances.
##### Instance 57 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12316990]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.77992249, -23.03407669, -17.37753677, -16.74362373, -17.53236580,
        -16.54874611, -19.20664024, -17.36742783, -24.01373863, -21.60027885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12316990]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 645
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 256
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 924
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 83] 
split level 2: [/input-12, 34] 
split level 3: [/input-12, 18] 
split level 4: [/input-12, 85] 
split level 5: [/input-12, 6] 
split level 6: [/input-12, 72] 
split level 7: [/input-12, 57] 
pruning_in_iteration open status: True
ratio of positive domain = 191 / 256 = 0.74609375
pruning-in-iteration extra time: 0.0049893856048583984
Time: prepare 0.0018    bound 0.1575    transfer 0.0010    finalize 0.0014    func 0.1617    
Accumulated time: func 0.1617    prepare 0.0022    bound 0.1575    transfer 0.0010    finalize 0.0014    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05010 (8), -0.04988 (8), -0.04896 (8), -0.04849 (8), -0.04837 (8), -0.04773 (8), -0.04712 (8), -0.04630 (8), -0.04227 (8), -0.04218 (8), -0.04051 (8), -0.03965 (8), -0.03923 (8), -0.03898 (8), -0.03891 (8), -0.03733 (8), -0.02833 (8), -0.02710 (8), -0.02542 (8), -0.02468 (8), 
Length of domains: 65
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0160    solve 0.1618    add 0.0012    
Accumulated time: pickout 0.0003    decision 0.0225    set_bounds 0.0160    solve 0.1618    add 0.0012    
Current (lb-rhs): -0.05010497570037842
65 domains visited
Cumulative time: 0.2069263458251953

BaB round 2
batch: 65
splitting decisions: 
split level 0: [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-12, 7] 
split level 1: [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 71] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] [/input-12, 53] 
pruning_in_iteration open status: True
ratio of positive domain = 157 / 260 = 0.6038461538461539
pruning-in-iteration extra time: 0.004630565643310547
Time: prepare 0.0036    bound 0.1492    transfer 0.0010    finalize 0.0013    func 0.1551    
Accumulated time: func 0.3168    prepare 0.0059    bound 0.3067    transfer 0.0019    finalize 0.0027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04121 (10), -0.04106 (10), -0.04003 (10), -0.03959 (10), -0.03928 (10), -0.03857 (10), -0.03815 (10), -0.03798 (10), -0.03761 (10), -0.03732 (10), -0.03700 (10), -0.03674 (10), -0.03634 (10), -0.03624 (10), -0.03558 (10), -0.03500 (10), -0.03320 (10), -0.03311 (10), -0.03150 (10), -0.03057 (10), 
Length of domains: 103
Time: pickout 0.0013    decision 0.0143    set_bounds 0.0072    solve 0.1552    add 0.0015    
Accumulated time: pickout 0.0016    decision 0.0368    set_bounds 0.0232    solve 0.3170    add 0.0028    
Current (lb-rhs): -0.04120844602584839
168 domains visited
Cumulative time: 0.3870127201080322

BaB round 3
batch: 103
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 92 / 206 = 0.44660194174757284
pruning-in-iteration extra time: 0.004674434661865234
Time: prepare 0.0031    bound 0.1625    transfer 0.0013    finalize 0.0013    func 0.1682    
Accumulated time: func 0.4850    prepare 0.0092    bound 0.4692    transfer 0.0032    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03791 (11), -0.03782 (11), -0.03666 (11), -0.03627 (11), -0.03593 (11), -0.03519 (11), -0.03492 (11), -0.03454 (11), -0.03427 (11), -0.03400 (11), -0.03358 (11), -0.03342 (11), -0.03297 (11), -0.03294 (11), -0.03228 (11), -0.03172 (11), -0.02991 (11), -0.02985 (11), -0.02815 (11), -0.02727 (11), 
Length of domains: 114
Time: pickout 0.0016    decision 0.0168    set_bounds 0.0046    solve 0.1683    add 0.0015    
Accumulated time: pickout 0.0032    decision 0.0536    set_bounds 0.0279    solve 0.4852    add 0.0042    
Current (lb-rhs): -0.03790581226348877
282 domains visited
Cumulative time: 0.5803587436676025

BaB round 4
batch: 114
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 228 = 0.4692982456140351
pruning-in-iteration extra time: 0.004628419876098633
Time: prepare 0.0032    bound 0.1579    transfer 0.0014    finalize 0.0012    func 0.1638    
Accumulated time: func 0.6488    prepare 0.0126    bound 0.6271    transfer 0.0046    finalize 0.0052    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03417 (12), -0.03402 (12), -0.03304 (12), -0.03264 (12), -0.03222 (12), -0.03157 (12), -0.03123 (12), -0.03081 (12), -0.03060 (12), -0.03038 (12), -0.02997 (12), -0.02974 (12), -0.02937 (12), -0.02935 (12), -0.02868 (12), -0.02823 (12), -0.02630 (12), -0.02597 (12), -0.02595 (12), -0.02590 (12), 
Length of domains: 121
Time: pickout 0.0017    decision 0.0154    set_bounds 0.0051    solve 0.1638    add 0.0017    
Accumulated time: pickout 0.0048    decision 0.0690    set_bounds 0.0330    solve 0.6491    add 0.0059    
Current (lb-rhs): -0.034165024757385254
403 domains visited
Cumulative time: 0.7686505317687988

BaB round 5
batch: 121
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: True
ratio of positive domain = 68 / 242 = 0.28099173553719003
pruning-in-iteration extra time: 0.004616498947143555
Time: prepare 0.0034    bound 0.1207    transfer 0.0009    finalize 0.0014    func 0.1265    
Accumulated time: func 0.7752    prepare 0.0163    bound 0.7477    transfer 0.0055    finalize 0.0066    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02933 (13), -0.02908 (13), -0.02818 (13), -0.02805 (13), -0.02794 (13), -0.02774 (13), -0.02749 (13), -0.02681 (13), -0.02680 (13), -0.02653 (13), -0.02651 (13), -0.02592 (13), -0.02565 (13), -0.02565 (13), -0.02560 (13), -0.02511 (13), -0.02505 (13), -0.02498 (13), -0.02483 (13), -0.02467 (13), 
Length of domains: 174
Time: pickout 0.0017    decision 0.0174    set_bounds 0.0053    solve 0.1265    add 0.0015    
Accumulated time: pickout 0.0066    decision 0.0864    set_bounds 0.0383    solve 0.7756    add 0.0074    
Current (lb-rhs): -0.029325544834136963
577 domains visited
Cumulative time: 0.9215652942657471

BaB round 6
batch: 174
splitting decisions: 
split level 0: [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] [/input-8, 1691] 
pruning_in_iteration open status: False
ratio of positive domain = 58 / 348 = 0.16666666666666663
pruning-in-iteration extra time: 5.435943603515625e-05
Time: prepare 0.0065    bound 0.0980    transfer 0.0011    finalize 0.0019    func 0.1075    
Accumulated time: func 0.8827    prepare 0.0230    bound 0.8457    transfer 0.0065    finalize 0.0085    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02759 (14), -0.02717 (14), -0.02653 (14), -0.02628 (14), -0.02607 (14), -0.02592 (14), -0.02577 (14), -0.02519 (14), -0.02514 (14), -0.02492 (14), -0.02473 (14), -0.02457 (14), -0.02422 (14), -0.02404 (14), -0.02399 (14), -0.02385 (14), -0.02385 (14), -0.02384 (14), -0.02373 (14), -0.02370 (14), 
Length of domains: 287
Time: pickout 0.0022    decision 0.0198    set_bounds 0.0033    solve 0.1076    add 0.0031    
Accumulated time: pickout 0.0088    decision 0.1062    set_bounds 0.0416    solve 0.8832    add 0.0106    
Current (lb-rhs): -0.027592480182647705
864 domains visited
Cumulative time: 1.0581049919128418

BaB round 7
batch: 287
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 417] [/input-8, 417] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] 
pruning_in_iteration open status: False
ratio of positive domain = 86 / 574 = 0.14982578397212543
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0107    bound 0.0987    transfer 0.0026    finalize 0.0028    func 0.1149    
Accumulated time: func 0.9977    prepare 0.0339    bound 0.9444    transfer 0.0092    finalize 0.0113    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02620 (15), -0.02573 (15), -0.02525 (15), -0.02485 (15), -0.02459 (15), -0.02453 (15), -0.02445 (15), -0.02395 (15), -0.02391 (15), -0.02390 (15), -0.02355 (15), -0.02330 (15), -0.02319 (15), -0.02309 (15), -0.02308 (15), -0.02296 (15), -0.02277 (15), -0.02273 (15), -0.02272 (15), -0.02258 (15), 
Length of domains: 483
Time: pickout 0.0044    decision 0.0260    set_bounds 0.0116    solve 0.1150    add 0.0032    
Accumulated time: pickout 0.0132    decision 0.1322    set_bounds 0.0532    solve 0.9982    add 0.0138    
Current (lb-rhs): -0.02620488405227661
1347 domains visited
Cumulative time: 1.2190160751342773

BaB round 8
batch: 483
splitting decisions: 
split level 0: [/input-8, 417] [/input-8, 1698] [/input-8, 1698] [/input-8, 417] [/input-8, 417] [/input-8, 1692] [/input-8, 417] [/input-8, 417] [/input-8, 417] [/input-8, 417] 
pruning_in_iteration open status: False
ratio of positive domain = 98 / 966 = 0.10144927536231885
pruning-in-iteration extra time: 5.245208740234375e-05
Time: prepare 0.0182    bound 0.1022    transfer 0.0050    finalize 0.0048    func 0.1303    
Accumulated time: func 1.1280    prepare 0.0522    bound 1.0466    transfer 0.0142    finalize 0.0162    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02494 (16), -0.02434 (16), -0.02399 (16), -0.02366 (16), -0.02347 (16), -0.02310 (16), -0.02309 (16), -0.02304 (16), -0.02299 (16), -0.02272 (16), -0.02252 (16), -0.02251 (16), -0.02229 (16), -0.02228 (16), -0.02195 (16), -0.02183 (16), -0.02177 (16), -0.02174 (16), -0.02173 (16), -0.02173 (16), 
Length of domains: 860
Time: pickout 0.0073    decision 0.0360    set_bounds 0.0193    solve 0.1304    add 0.0047    
Accumulated time: pickout 0.0206    decision 0.1683    set_bounds 0.0725    solve 1.1286    add 0.0184    
Current (lb-rhs): -0.02494114637374878
2207 domains visited
Cumulative time: 1.417649745941162

BaB round 9
batch: 860
splitting decisions: 
split level 0: [/input-8, 723] [/input-8, 723] [/input-8, 419] [/input-8, 419] [/input-8, 1673] [/input-8, 417] [/input-8, 1692] [/input-8, 723] [/input-8, 419] [/input-8, 723] 
pruning_in_iteration open status: False
ratio of positive domain = 160 / 1720 = 0.09302325581395354
pruning-in-iteration extra time: 5.507469177246094e-05
Time: prepare 0.0318    bound 0.1172    transfer 0.0073    finalize 0.0075    func 0.1639    
Accumulated time: func 1.2919    prepare 0.0842    bound 1.1638    transfer 0.0215    finalize 0.0236    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02321 (17), -0.02248 (17), -0.02234 (17), -0.02230 (17), -0.02199 (17), -0.02178 (17), -0.02167 (17), -0.02164 (17), -0.02157 (17), -0.02133 (17), -0.02132 (17), -0.02127 (17), -0.02126 (17), -0.02103 (17), -0.02098 (17), -0.02088 (17), -0.02070 (17), -0.02070 (17), -0.02069 (17), -0.02062 (17), 
Length of domains: 1540
Time: pickout 0.0109    decision 0.0570    set_bounds 0.0337    solve 0.1647    add 0.0103    
Accumulated time: pickout 0.0315    decision 0.2253    set_bounds 0.1062    solve 1.2933    add 0.0288    
Current (lb-rhs): -0.023208022117614746
3747 domains visited
Cumulative time: 1.6958601474761963

BaB round 10
batch: 1540
splitting decisions: 
split level 0: [/input-8, 419] [/input-8, 425] [/input-8, 1692] [/input-8, 419] [/input-8, 1673] [/input-8, 723] [/input-8, 1673] [/input-8, 1673] [/input-8, 419] [/input-8, 419] 
pruning_in_iteration open status: False
ratio of positive domain = 348 / 3080 = 0.11298701298701297
pruning-in-iteration extra time: 8.20159912109375e-05
Time: prepare 0.0582    bound 0.1654    transfer 0.0165    finalize 0.0138    func 0.2548    
Accumulated time: func 1.5467    prepare 0.1427    bound 1.3292    transfer 0.0380    finalize 0.0374    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02234 (18), -0.02149 (18), -0.02139 (18), -0.02091 (18), -0.02079 (18), -0.02078 (18), -0.02072 (18), -0.02044 (18), -0.02039 (18), -0.02022 (18), -0.02022 (18), -0.02020 (18), -0.02015 (18), -0.02014 (18), -0.01999 (18), -0.01991 (18), -0.01980 (18), -0.01979 (18), -0.01970 (18), -0.01967 (18), 
Length of domains: 2690
Time: pickout 0.0192    decision 0.0944    set_bounds 0.2067    solve 0.2553    add 0.0116    
Accumulated time: pickout 0.0507    decision 0.3197    set_bounds 0.3129    solve 1.5486    add 0.0404    
Current (lb-rhs): -0.022335350513458252
6437 domains visited
Cumulative time: 2.286754608154297

BaB round 11
batch: 2690
splitting decisions: 
split level 0: [/input-8, 1673] [/input-8, 1323] [/input-8, 723] [/input-8, 1673] [/input-8, 419] [/input-8, 425] [/input-8, 1692] [/input-8, 723] [/input-8, 1673] [/input-8, 425] 
pruning_in_iteration open status: False
ratio of positive domain = 923 / 5380 = 0.17156133828996278
pruning-in-iteration extra time: 6.604194641113281e-05
Time: prepare 0.1016    bound 0.2578    transfer 0.0298    finalize 0.1798    func 0.5694    
Accumulated time: func 2.1161    prepare 0.2445    bound 1.5871    transfer 0.0678    finalize 0.2173    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02138 (19), -0.02054 (19), -0.02043 (19), -0.02023 (19), -0.01999 (19), -0.01983 (19), -0.01949 (19), -0.01944 (19), -0.01939 (19), -0.01938 (19), -0.01911 (19), -0.01908 (19), -0.01905 (19), -0.01903 (19), -0.01884 (19), -0.01883 (19), -0.01877 (19), -0.01873 (19), -0.01873 (19), -0.01871 (19), 
Length of domains: 4370
Time: pickout 0.0386    decision 0.1554    set_bounds 0.1100    solve 0.5704    add 0.0210    
Accumulated time: pickout 0.0893    decision 0.4751    set_bounds 0.4229    solve 2.1190    add 0.0614    
Current (lb-rhs): -0.02138078212738037
10807 domains visited
Cumulative time: 3.189581871032715

BaB round 12
batch: 4096
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 723] [/input-8, 212] [/input-8, 212] [/input-8, 212] [/input-8, 212] [/input-8, 212] [/input-8, 613] [/input-8, 212] [/input-8, 419] 
pruning_in_iteration open status: True
ratio of positive domain = 2295 / 8192 = 0.2801513671875
pruning-in-iteration extra time: 0.0042476654052734375
Time: prepare 0.2837    bound 0.3389    transfer 0.0471    finalize 0.0368    func 0.7075    
Accumulated time: func 2.8236    prepare 0.5284    bound 1.9260    transfer 0.1149    finalize 0.2541    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02138 (19), -0.02043 (19), -0.01999 (19), -0.01989 (20), -0.01958 (20), -0.01915 (20), -0.01911 (19), -0.01908 (19), -0.01905 (19), -0.01884 (20), -0.01884 (19), -0.01875 (20), -0.01873 (20), -0.01873 (20), -0.01856 (19), -0.01849 (20), -0.01841 (19), -0.01840 (19), -0.01829 (19), -0.01817 (20), 
Length of domains: 6171
Time: pickout 0.0526    decision 0.2297    set_bounds 0.1674    solve 0.7089    add 0.0295    
Accumulated time: pickout 0.1419    decision 0.7049    set_bounds 0.5903    solve 2.8280    add 0.0909    
Current (lb-rhs): -0.02138078212738037
16704 domains visited
current_vram/total_varm: 9.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.3930017948150635

BaB round 13
batch: 6171
splitting decisions: 
split level 0: [/input-8, 1692] [/input-8, 1673] [/input-8, 419] [/input-8, 1323] [/input-8, 212] [/input-8, 1673] [/input-8, 212] [/input-8, 425] [/input-8, 212] [/input-8, 1692] 
pruning_in_iteration open status: True
ratio of positive domain = 3079 / 12342 = 0.2494733430562308
pruning-in-iteration extra time: 0.003950595855712891
Time: prepare 0.2421    bound 0.4947    transfer 0.0725    finalize 0.2332    func 1.0440    
Accumulated time: func 3.8676    prepare 0.7708    bound 2.4206    transfer 0.1875    finalize 0.4873    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02074 (20), -0.01976 (20), -0.01934 (20), -0.01839 (20), -0.01832 (20), -0.01824 (21), -0.01822 (20), -0.01803 (20), -0.01796 (21), -0.01794 (20), -0.01791 (21), -0.01764 (21), -0.01753 (20), -0.01751 (21), -0.01741 (20), -0.01727 (21), -0.01719 (21), -0.01711 (21), -0.01710 (21), -0.01708 (21), 
Length of domains: 9263
Time: pickout 0.0813    decision 0.3485    set_bounds 0.3997    solve 1.0460    add 0.0357    
Accumulated time: pickout 0.2232    decision 1.0534    set_bounds 0.9901    solve 3.8740    add 0.1266    
Current (lb-rhs): -0.020739495754241943
25967 domains visited
Cumulative time: 6.324836254119873

BaB round 14
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1665] [/input-8, 714] [/input-8, 425] [/input-8, 714] [/input-8, 1673] [/input-8, 1323] [/input-8, 212] [/input-8, 613] [/input-8, 1673] [/input-8, 419] 
pruning_in_iteration open status: True
ratio of positive domain = 4903 / 16384 = 0.29925537109375
pruning-in-iteration extra time: 0.005038738250732422
Time: prepare 0.3201    bound 0.5985    transfer 0.0935    finalize 0.2545    func 1.2680    
Accumulated time: func 5.1356    prepare 1.0912    bound 3.0192    transfer 0.2810    finalize 0.7417    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02074 (20), -0.01976 (20), -0.01934 (20), -0.01839 (20), -0.01832 (20), -0.01824 (21), -0.01822 (20), -0.01803 (20), -0.01794 (20), -0.01753 (20), -0.01751 (21), -0.01741 (20), -0.01719 (21), -0.01708 (21), -0.01707 (21), -0.01695 (21), -0.01693 (20), -0.01692 (20), -0.01692 (20), -0.01681 (21), 
Length of domains: 12552
Time: pickout 0.1107    decision 0.4531    set_bounds 0.5042    solve 1.2709    add 0.0411    
Accumulated time: pickout 0.3339    decision 1.5064    set_bounds 1.4943    solve 5.1448    add 0.1677    
Current (lb-rhs): -0.020739495754241943
37448 domains visited
current_vram/total_varm: 20.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.735179424285889

BaB round 15
batch: 12552
splitting decisions: 
split level 0: [/input-8, 219] [/input-8, 1692] [/input-8, 425] [/input-8, 425] [/input-8, 1692] [/input-8, 212] [/input-8, 419] [/input-8, 1692] [/input-8, 1692] [/input-8, 1673] 
pruning_in_iteration open status: True
ratio of positive domain = 7698 / 25104 = 0.3066443594646272
pruning-in-iteration extra time: 0.005166769027709961
Time: prepare 0.5230    bound 0.8847    transfer 0.1419    finalize 0.1426    func 1.6936    
Accumulated time: func 6.8291    prepare 1.6145    bound 3.9039    transfer 0.4229    finalize 0.8843    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01908 (21), -0.01881 (21), -0.01812 (21), -0.01790 (21), -0.01771 (21), -0.01749 (21), -0.01741 (21), -0.01730 (21), -0.01699 (21), -0.01668 (21), -0.01656 (21), -0.01653 (21), -0.01653 (22), -0.01652 (21), -0.01635 (22), -0.01633 (22), -0.01622 (22), -0.01615 (21), -0.01600 (21), -0.01597 (21), 
Length of domains: 17406
Time: pickout 0.1787    decision 0.8960    set_bounds 0.7618    solve 1.9155    add 0.0642    
Accumulated time: pickout 0.5126    decision 2.4024    set_bounds 2.2561    solve 7.0603    add 0.2319    
Current (lb-rhs): -0.019083499908447266
54854 domains visited
Cumulative time: 12.600742101669312

BaB round 16
batch: 16384
splitting decisions: 
split level 0: [/input-8, 219] [/input-8, 1673] [/input-8, 714] [/input-8, 1323] [/input-8, 1692] [/input-8, 219] [/input-8, 1665] [/input-8, 714] [/input-8, 1323] [/input-8, 613] 
pruning_in_iteration open status: True
ratio of positive domain = 10675 / 32768 = 0.325775146484375
pruning-in-iteration extra time: 0.005364179611206055
Time: prepare 0.6742    bound 1.1153    transfer 0.1811    finalize 0.4586    func 2.4305    
Accumulated time: func 9.2597    prepare 2.2891    bound 5.0192    transfer 0.6040    finalize 1.3429    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01908 (21), -0.01812 (21), -0.01771 (21), -0.01741 (21), -0.01730 (21), -0.01708 (22), -0.01699 (21), -0.01691 (22), -0.01668 (21), -0.01661 (22), -0.01653 (22), -0.01635 (22), -0.01628 (22), -0.01616 (22), -0.01615 (21), -0.01600 (21), -0.01595 (22), -0.01591 (22), -0.01590 (21), -0.01590 (21), 
Length of domains: 23115
Time: pickout 0.2312    decision 1.6477    set_bounds 1.1463    solve 2.4367    add 0.0841    
Accumulated time: pickout 0.7438    decision 4.0501    set_bounds 3.4024    solve 9.4970    add 0.3160    
Current (lb-rhs): -0.019083499908447266
76947 domains visited
current_vram/total_varm: 30.8GB/99.9GB, batch_size increase to 32768
Cumulative time: 18.215041399002075

BaB round 17
batch: 23115
splitting decisions: 
split level 0: [/input-8, 212] [/input-8, 219] [/input-8, 212] [/input-8, 219] [/input-8, 1323] [/input-8, 212] [/input-8, 212] [/input-8, 1673] [/input-8, 212] [/input-8, 723] 
pruning_in_iteration open status: True
ratio of positive domain = 17250 / 46230 = 0.3731343283582089
pruning-in-iteration extra time: 0.005605220794677734
Time: prepare 0.9655    bound 1.4770    transfer 0.2657    finalize 0.6397    func 3.3507    
Accumulated time: func 12.6104    prepare 3.2550    bound 6.4962    transfer 0.8697    finalize 1.9826    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01734 (22), -0.01717 (22), -0.01682 (22), -0.01675 (22), -0.01648 (22), -0.01642 (23), -0.01636 (22), -0.01633 (22), -0.01626 (22), -0.01625 (23), -0.01618 (22), -0.01591 (23), -0.01590 (23), -0.01579 (23), -0.01567 (23), -0.01554 (22), -0.01543 (23), -0.01539 (23), -0.01539 (23), -0.01526 (22), 
Length of domains: 28980
Time: pickout 0.3418    decision 2.3345    set_bounds 1.6184    solve 3.3594    add 0.0869    
Accumulated time: pickout 1.0856    decision 6.3846    set_bounds 5.0208    solve 12.8564    add 0.4029    
Current (lb-rhs): -0.017341136932373047
105927 domains visited
Cumulative time: 26.06666851043701

BaB round 18
batch: 28980
splitting decisions: 
split level 0: [/input-8, 425] [/input-8, 716] [/input-8, 425] [/input-8, 716] [/input-8, 1323] [/input-8, 613] [/input-8, 613] [/input-8, 716] [/input-8, 613] [/input-8, 716] 
pruning_in_iteration open status: True
ratio of positive domain = 22103 / 57960 = 0.3813492063492063
pruning-in-iteration extra time: 0.0056781768798828125
Time: prepare 1.2462    bound 1.8235    transfer 0.3951    finalize 0.7796    func 4.2475    
Accumulated time: func 16.8578    prepare 4.5016    bound 8.3197    transfer 1.2647    finalize 2.7622    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01655 (23), -0.01628 (23), -0.01617 (23), -0.01597 (23), -0.01585 (23), -0.01577 (23), -0.01569 (23), -0.01565 (24), -0.01548 (24), -0.01537 (23), -0.01517 (24), -0.01515 (24), -0.01505 (23), -0.01504 (24), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01446 (25), -0.01443 (23), 
Length of domains: 35857
Time: pickout 0.4408    decision 2.9272    set_bounds 2.0547    solve 4.2590    add 0.1143    
Accumulated time: pickout 1.5264    decision 9.3118    set_bounds 7.0756    solve 17.1154    add 0.5172    
Current (lb-rhs): -0.016723215579986572
141784 domains visited
Cumulative time: 36.014243841171265

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 211] [/input-8, 716] [/input-8, 613] [/input-8, 1098] [/input-8, 714] [/input-8, 219] [/input-8, 613] [/input-8, 425] [/input-8, 613] [/input-8, 716] 
pruning_in_iteration open status: True
ratio of positive domain = 25672 / 65536 = 0.3917236328125
pruning-in-iteration extra time: 0.0060214996337890625
Time: prepare 1.4403    bound 2.5426    transfer 0.4726    finalize 0.4680    func 4.9302    
Accumulated time: func 21.7881    prepare 5.9424    bound 10.8623    transfer 1.7374    finalize 3.2301    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01578 (24), -0.01577 (23), -0.01569 (23), -0.01525 (24), -0.01519 (25), -0.01502 (25), -0.01494 (24), -0.01479 (24), -0.01477 (24), -0.01467 (25), -0.01463 (23), -0.01455 (24), -0.01447 (25), -0.01443 (23), -0.01439 (24), -0.01435 (25), -0.01435 (23), 
Length of domains: 42953
Time: pickout 0.5283    decision 3.7845    set_bounds 2.5033    solve 5.4463    add 0.1245    
Accumulated time: pickout 2.0546    decision 13.0962    set_bounds 9.5788    solve 22.5618    add 0.6418    
Current (lb-rhs): -0.016723215579986572
181648 domains visited
Cumulative time: 48.5763738155365

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1323] [/input-8, 219] [/input-8, 211] [/input-8, 132] [/input-8, 627] [/input-8, 393] [/input-8, 219] [/input-8, 716] [/input-8, 716] [/input-8, 132] 
pruning_in_iteration open status: True
ratio of positive domain = 28111 / 65536 = 0.4289398193359375
pruning-in-iteration extra time: 0.006073474884033203
Time: prepare 1.4882    bound 2.4493    transfer 0.4717    finalize 0.4873    func 4.9025    
Accumulated time: func 26.6906    prepare 7.4310    bound 13.3116    transfer 2.2091    finalize 3.7174    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01530 (25), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01456 (25), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01417 (26), -0.01417 (26), -0.01414 (24), -0.01411 (26), -0.01393 (26), -0.01390 (25), -0.01388 (23), 
Length of domains: 47610
Time: pickout 0.5331    decision 3.4625    set_bounds 2.7212    solve 4.9196    add 0.1430    
Accumulated time: pickout 2.5877    decision 16.5587    set_bounds 12.3000    solve 27.4814    add 0.7848    
Current (lb-rhs): -0.016723215579986572
219073 domains visited
Cumulative time: 60.7418487071991

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 716] [/input-8, 211] [/input-8, 211] [/input, 1400] [/input-8, 219] [/input-8, 1946] [/input-8, 393] [/input-8, 393] [/input-8, 219] [/input-8, 716] 
pruning_in_iteration open status: True
ratio of positive domain = 29662 / 65536 = 0.452606201171875
pruning-in-iteration extra time: 0.006195545196533203
Time: prepare 1.4952    bound 2.3880    transfer 0.4774    finalize 1.0564    func 5.4216    
Accumulated time: func 32.1122    prepare 8.9267    bound 15.6995    transfer 2.6866    finalize 4.7738    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01422 (26), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01381 (26), -0.01377 (23), -0.01376 (23), -0.01373 (26), 
Length of domains: 50716
Time: pickout 0.7650    decision 4.0926    set_bounds 2.8176    solve 5.4370    add 0.1387    
Accumulated time: pickout 3.3527    decision 20.6514    set_bounds 15.1176    solve 32.9184    add 0.9234    
Current (lb-rhs): -0.016723215579986572
254947 domains visited
Cumulative time: 74.22170567512512

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 714] [/input-8, 716] [/input-8, 1098] [/input-8, 627] [/input-8, 627] [/input-8, 716] [/input-8, 1098] [/input-8, 1098] [/input-8, 132] [/input-8, 1098] 
pruning_in_iteration open status: True
ratio of positive domain = 30253 / 65536 = 0.4616241455078125
pruning-in-iteration extra time: 0.006157875061035156
Time: prepare 1.5466    bound 2.3594    transfer 0.4712    finalize 1.1624    func 5.5442    
Accumulated time: func 37.6564    prepare 10.4738    bound 18.0589    transfer 3.1578    finalize 5.9363    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01374 (27), -0.01373 (26), -0.01370 (24), 
Length of domains: 53231
Time: pickout 0.5982    decision 4.5795    set_bounds 2.2491    solve 5.5606    add 0.1339    
Accumulated time: pickout 3.9508    decision 25.2308    set_bounds 17.3667    solve 38.4790    add 1.0574    
Current (lb-rhs): -0.016723215579986572
290230 domains visited
Cumulative time: 87.56935358047485

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 393] [/input-8, 393] [/input-8, 393] [/input-8, 1946] [/input-8, 393] [/input-8, 716] [/input-8, 716] [/input-8, 211] [/input-8, 1098] [/input-8, 211] 
pruning_in_iteration open status: True
ratio of positive domain = 31283 / 65536 = 0.4773406982421875
pruning-in-iteration extra time: 0.006312370300292969
Time: prepare 1.6236    bound 2.3169    transfer 0.4714    finalize 0.5067    func 4.9252    
Accumulated time: func 42.5816    prepare 12.0979    bound 20.3758    transfer 3.6291    finalize 6.4430    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 54716
Time: pickout 0.6140    decision 3.5988    set_bounds 2.9434    solve 5.6999    add 0.1137    
Accumulated time: pickout 4.5648    decision 28.8296    set_bounds 20.3102    solve 44.1790    add 1.1711    
Current (lb-rhs): -0.016723215579986572
324483 domains visited
Cumulative time: 100.78634667396545

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 132] [/input-8, 1098] [/input-8, 627] [/input-8, 1946] [/input, 1416] [/input-8, 1098] [/input-8, 1098] [/input, 1400] [/input-8, 1323] [/input-8, 219] 
pruning_in_iteration open status: True
ratio of positive domain = 31495 / 65536 = 0.4805755615234375
pruning-in-iteration extra time: 0.006053924560546875
Time: prepare 1.7036    bound 2.3039    transfer 0.4755    finalize 1.2575    func 5.7452    
Accumulated time: func 48.3267    prepare 13.8021    bound 22.6797    transfer 4.1046    finalize 7.7005    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 55989
Time: pickout 0.6355    decision 3.4172    set_bounds 2.8332    solve 5.7615    add 0.1301    
Accumulated time: pickout 5.2004    decision 32.2468    set_bounds 23.1434    solve 49.9405    add 1.3011    
Current (lb-rhs): -0.016723215579986572
358524 domains visited
Cumulative time: 114.06872320175171

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1098] [/input-8, 1098] [/input-8, 1098] [/input, 1400] [/input-8, 1098] [/input-8, 393] [/input-8, 1098] [/input-8, 1098] [/input-8, 1098] [/input, 1400] 
pruning_in_iteration open status: True
ratio of positive domain = 31367 / 65536 = 0.4786224365234375
pruning-in-iteration extra time: 0.0061435699462890625
Time: prepare 1.7834    bound 2.3024    transfer 0.4788    finalize 1.2903    func 5.8594    
Accumulated time: func 54.1861    prepare 15.5864    bound 24.9821    transfer 4.5835    finalize 8.9908    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 57390
Time: pickout 0.8067    decision 3.8510    set_bounds 2.3613    solve 5.8767    add 0.1139    
Accumulated time: pickout 6.0071    decision 36.0978    set_bounds 25.5047    solve 55.8171    add 1.4150    
Current (lb-rhs): -0.016723215579986572
392693 domains visited
Cumulative time: 127.34337878227234

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1276] [/input, 1410] [/input, 3099] [/input-8, 716] [/input-8, 1098] [/input-8, 1276] [/input, 3099] [/input-8, 1276] [/input, 3099] [/input, 3099] 
pruning_in_iteration open status: True
ratio of positive domain = 31482 / 65536 = 0.480377197265625
pruning-in-iteration extra time: 0.006328582763671875
Time: prepare 1.7990    bound 2.2913    transfer 0.4790    finalize 1.2995    func 5.8726    
Accumulated time: func 60.0588    prepare 17.3859    bound 27.2735    transfer 5.0624    finalize 10.2903    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 58676
Time: pickout 0.6942    decision 3.7400    set_bounds 2.2639    solve 5.8898    add 0.1147    
Accumulated time: pickout 6.7013    decision 39.8378    set_bounds 27.7686    solve 61.7069    add 1.5297    
Current (lb-rhs): -0.016723215579986572
426747 domains visited
Cumulative time: 140.28437161445618

BaB round 27
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1098] [/input, 1416] [/input-8, 627] [/input-8, 1276] [/input, 1410] [/input, 3099] [/input, 1410] [/input-8, 1736] [/input-8, 1098] [/input, 1400] 
pruning_in_iteration open status: True
ratio of positive domain = 31376 / 65536 = 0.478759765625
pruning-in-iteration extra time: 0.0065195560455322266
Time: prepare 1.8772    bound 2.3008    transfer 0.4816    finalize 0.5243    func 5.1876    
Accumulated time: func 65.2464    prepare 19.2636    bound 29.5742    transfer 5.5440    finalize 10.8145    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 60068
Time: pickout 0.7060    decision 3.7039    set_bounds 2.2787    solve 5.9770    add 0.1135    
Accumulated time: pickout 7.4073    decision 43.5416    set_bounds 30.0473    solve 67.6839    add 1.6432    
Current (lb-rhs): -0.016723215579986572
460907 domains visited
Cumulative time: 153.34209084510803

BaB round 28
batch: 32768
splitting decisions: 
split level 0: [/input, 3099] [/input-8, 627] [/input-8, 627] [/input-8, 627] [/input-8, 1098] [/input-8, 1276] [/input-8, 1276] [/input-8, 393] [/input-8, 1098] [/input-8, 1697] 
pruning_in_iteration open status: True
ratio of positive domain = 31023 / 65536 = 0.4733734130859375
pruning-in-iteration extra time: 0.006246089935302734
Time: prepare 1.9056    bound 2.3408    transfer 0.4806    finalize 1.2138    func 5.9450    
Accumulated time: func 71.1914    prepare 21.1696    bound 31.9150    transfer 6.0247    finalize 12.0283    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 61813
Time: pickout 0.7396    decision 4.1832    set_bounds 1.5541    solve 5.9620    add 0.1311    
Accumulated time: pickout 8.1469    decision 47.7248    set_bounds 31.6014    solve 73.6459    add 1.7742    
Current (lb-rhs): -0.016723215579986572
495420 domains visited
Cumulative time: 166.18052697181702

BaB round 29
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1098] [/input-8, 716] [/input-8, 61] [/input-8, 132] [/input, 3099] [/input-8, 395] [/input, 1410] [/input, 3099] [/input, 1400] [/input-8, 61] 
pruning_in_iteration open status: True
ratio of positive domain = 31998 / 65536 = 0.488250732421875
pruning-in-iteration extra time: 0.0062596797943115234
Time: prepare 1.9048    bound 2.2997    transfer 0.4789    finalize 1.2544    func 5.9455    
Accumulated time: func 77.1369    prepare 23.0749    bound 34.2147    transfer 6.5035    finalize 13.2826    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 62583
Time: pickout 0.7535    decision 4.7646    set_bounds 1.5623    solve 5.9702    add 0.1348    
Accumulated time: pickout 8.9004    decision 52.4894    set_bounds 33.1637    solve 79.6160    add 1.9091    
Current (lb-rhs): -0.016723215579986572
528958 domains visited
Cumulative time: 179.8855710029602

BaB round 30
batch: 32768
splitting decisions: 
split level 0: [/input, 1416] [/input-8, 627] [/input-8, 395] [/input, 3099] [/input, 1400] [/input, 1416] [/input, 3099] [/input-8, 61] [/input, 3099] [/input, 3099] 
pruning_in_iteration open status: True
ratio of positive domain = 32563 / 65536 = 0.4968719482421875
pruning-in-iteration extra time: 0.0062389373779296875
Time: prepare 1.9589    bound 2.2709    transfer 0.4757    finalize 1.3129    func 6.0236    
Accumulated time: func 83.1605    prepare 25.0348    bound 36.4856    transfer 6.9793    finalize 14.5955    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 62788
Time: pickout 0.8283    decision 4.5863    set_bounds 3.0210    solve 6.0408    add 0.1077    
Accumulated time: pickout 9.7287    decision 57.0758    set_bounds 36.1847    solve 85.6568    add 2.0168    
Current (lb-rhs): -0.016723215579986572
561931 domains visited
Cumulative time: 194.72573709487915

BaB round 31
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1946] [/input, 3099] [/input-8, 1946] [/input-8, 61] [/input, 3099] [/input-8, 1098] [/input, 3099] [/input-8, 61] [/input, 3099] [/input, 3099] 
pruning_in_iteration open status: True
ratio of positive domain = 34066 / 65536 = 0.519805908203125
pruning-in-iteration extra time: 0.0061686038970947266
Time: prepare 1.9169    bound 2.2077    transfer 0.4750    finalize 1.2507    func 5.8541    
Accumulated time: func 89.0146    prepare 26.9521    bound 38.6932    transfer 7.4542    finalize 15.8462    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01672 (23), -0.01628 (23), -0.01597 (23), -0.01577 (23), -0.01569 (23), -0.01494 (24), -0.01479 (24), -0.01463 (23), -0.01443 (23), -0.01435 (23), -0.01430 (23), -0.01414 (24), -0.01411 (26), -0.01390 (25), -0.01388 (23), -0.01377 (23), -0.01376 (23), -0.01373 (26), -0.01370 (24), -0.01369 (24), 
Length of domains: 61490
Time: pickout 0.7950    decision 4.2260    set_bounds 2.3476    solve 5.8708    add 0.1017    
Accumulated time: pickout 10.5237    decision 61.3017    set_bounds 38.5323    solve 91.5276    add 2.1185    
Current (lb-rhs): -0.016723215579986572
593401 domains visited
Time out!!!!!!!!
Result: unknown in 211.5666 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.54733276, -21.78987122, -22.60601997, -21.30351830, -24.20145226,
         -22.29459190, -22.23107147, -25.10035706, -22.73666000, -22.06024361]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [482]; unstable size 482; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 482] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 482] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 215] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.04004717, -1.07115650,  0.35848141,  1.95242715,  0.74911094,
          0.26205659,  2.80084348, -0.02647483, -0.53875589]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.54733276, -21.78987122, -22.60601997, -21.30351830, -24.20145226,
         -22.29459190, -22.23107147, -25.10035706, -22.73666000, -22.06024361]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.01307869, -21.81352615, -23.35947609, -22.21124840, -25.04837990,
          -23.24066734, -22.96066475, -25.94425583, -23.12243652, -22.29972649],
         [-23.01307869, -21.81352615, -23.35947609, -22.21124840, -25.04837990,
          -23.24066734, -22.96066475, -25.94425583, -23.12243652, -22.29972649]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.80183029, -0.39772224,  0.91118813,  0.08847809]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0068 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0637 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
         -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1050]; unstable size 1050; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 330, 1, 1050] with unstable size 329 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 1050] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1050] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [329]; unstable size 329; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 329] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 329] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.91365647,  2.97547579, -0.38596058, -0.14092714, -0.68310428,
          0.74673343,  1.63518691,  1.76536143,  3.08691597]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
         -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.81it/s]100%|██████████| 1/1 [00:00<00:00,  8.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.72735023, -15.15885448, -10.94828224, -11.11405087, -10.35771656,
          -12.15130424, -10.35695839, -13.19712448, -13.88504410, -15.23073673],
         [-13.72735023, -15.15885448, -10.94828224, -11.11405087, -10.35771656,
          -12.15130424, -10.35695839, -13.19712448, -13.88504410, -15.23073673]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59132385, 0.75709248, 0.00075817]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1164 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.672626495361328
alpha/beta optimization time: 1.1494815349578857
initial alpha-crown bounds: tensor([[ 2.17554307,  3.15855932, -0.19436622,  0.02832627, -0.55010986,
          0.92495227,  1.83316302,  2.01714420,  3.27941465]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.55010986328125
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6789391040802
Verifying property 0 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1755430698394775.

Properties batch 1, size 1
Remaining timeout: 198.46070051193237
Verifying property 1 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1585593223571777.

Properties batch 2, size 1
Remaining timeout: 198.36619234085083
Verifying property 2 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19436622]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
        -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19436622]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1050
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1392
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 31] 
split level 4: [/input-12, 53] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 12] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 6.222724914550781e-05
Time: prepare 0.0018    bound 0.0040    transfer 0.0012    finalize 0.0020    func 0.0090    
Accumulated time: func 0.0090    prepare 0.0022    bound 0.0040    transfer 0.0012    finalize 0.0020    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0227    set_bounds 0.0161    solve 0.0091    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0227    set_bounds 0.0161    solve 0.0091    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052478790283203125


Properties batch 3, size 1
Remaining timeout: 198.1796360015869
Verifying property 3 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.02832627296447754.

Properties batch 4, size 1
Remaining timeout: 198.08373475074768
Verifying property 4 with 1 instances.
##### Instance 59 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55010986]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.79305267, -15.05270672, -11.01360893, -11.14069176, -10.53976250,
        -12.22748184, -10.10639000, -13.34503460, -13.81023407, -15.20878029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55010986]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1050
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1392
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 97] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 61] 
split level 4: [/input-12, 14] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 68] 
split level 7: [/input-12, 79] 
pruning_in_iteration open status: True
ratio of positive domain = 185 / 256 = 0.72265625
pruning-in-iteration extra time: 0.00665593147277832
Time: prepare 0.0018    bound 0.1430    transfer 0.0010    finalize 0.0016    func 0.1474    
Accumulated time: func 0.1474    prepare 0.0023    bound 0.1430    transfer 0.0010    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.30150 (8), -0.29781 (8), -0.26538 (8), -0.25708 (8), -0.24066 (8), -0.23885 (8), -0.22506 (8), -0.22267 (8), -0.22058 (8), -0.21525 (8), -0.18580 (8), -0.18393 (8), -0.17885 (8), -0.17612 (8), -0.17153 (8), -0.17004 (8), -0.16138 (8), -0.15114 (8), -0.13376 (8), -0.12041 (8), 
Length of domains: 71
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0160    solve 0.1475    add 0.0104    
Accumulated time: pickout 0.0003    decision 0.0225    set_bounds 0.0160    solve 0.1475    add 0.0104    
Current (lb-rhs): -0.30150020122528076
71 domains visited
Cumulative time: 0.20082497596740723

BaB round 2
batch: 71
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 207 / 284 = 0.7288732394366197
pruning-in-iteration extra time: 0.004639148712158203
Time: prepare 0.0040    bound 0.1408    transfer 0.0029    finalize 0.0017    func 0.1494    
Accumulated time: func 0.2968    prepare 0.0064    bound 0.2838    transfer 0.0039    finalize 0.0032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28401 (10), -0.28018 (10), -0.24879 (10), -0.24011 (10), -0.22261 (10), -0.22033 (10), -0.20786 (10), -0.20354 (10), -0.20125 (10), -0.19338 (10), -0.16547 (10), -0.16484 (10), -0.15948 (10), -0.15648 (10), -0.15164 (10), -0.14931 (10), -0.14071 (10), -0.13107 (10), -0.11433 (10), -0.10780 (10), 
Length of domains: 77
Time: pickout 0.0014    decision 0.0235    set_bounds 0.0079    solve 0.1495    add 0.0070    
Accumulated time: pickout 0.0017    decision 0.0461    set_bounds 0.0239    solve 0.2970    add 0.0174    
Current (lb-rhs): -0.28400886058807373
148 domains visited
Cumulative time: 0.39093637466430664

BaB round 3
batch: 77
splitting decisions: 
split level 0: [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] [/input-12, 32] 
split level 1: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-8, 1241] [/input-8, 1261] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 195 / 308 = 0.6331168831168832
pruning-in-iteration extra time: 0.004630565643310547
Time: prepare 0.0048    bound 0.1441    transfer 0.0014    finalize 0.0027    func 0.1529    
Accumulated time: func 0.4498    prepare 0.0113    bound 0.4278    transfer 0.0053    finalize 0.0059    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25839 (12), -0.25707 (12), -0.25476 (12), -0.25325 (12), -0.22404 (12), -0.21646 (12), -0.21476 (12), -0.20417 (12), -0.19775 (12), -0.19552 (12), -0.19155 (12), -0.18944 (12), -0.18391 (12), -0.17952 (12), -0.17238 (12), -0.16723 (12), -0.16716 (12), -0.16700 (12), -0.16296 (12), -0.16185 (12), 
Length of domains: 113
Time: pickout 0.0017    decision 0.0215    set_bounds 0.0086    solve 0.1530    add 0.0017    
Accumulated time: pickout 0.0034    decision 0.0676    set_bounds 0.0325    solve 0.4500    add 0.0191    
Current (lb-rhs): -0.2583889961242676
261 domains visited
Cumulative time: 0.5782730579376221

BaB round 4
batch: 113
splitting decisions: 
split level 0: [/input-8, 1261] [/input-8, 1241] [/input-8, 1254] [/input-8, 1574] [/input-8, 1261] [/input-12, 92] [/input-12, 92] [/input-8, 1246] [/input-8, 1246] [/input-8, 1261] 
pruning_in_iteration open status: True
ratio of positive domain = 52 / 226 = 0.23008849557522126
pruning-in-iteration extra time: 0.0014960765838623047
Time: prepare 0.0044    bound 0.1289    transfer 0.0008    finalize 0.0013    func 0.1355    
Accumulated time: func 0.5852    prepare 0.0159    bound 0.5568    transfer 0.0061    finalize 0.0072    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25223 (13), -0.25060 (13), -0.24902 (13), -0.24715 (13), -0.24069 (13), -0.23916 (13), -0.23767 (13), -0.23608 (13), -0.21771 (13), -0.21090 (13), -0.20900 (13), -0.20759 (13), -0.20412 (13), -0.19784 (13), -0.19613 (13), -0.19172 (13), -0.19013 (13), -0.18896 (13), -0.18451 (13), -0.18401 (13), 
Length of domains: 174
Time: pickout 0.0021    decision 0.0196    set_bounds 0.0029    solve 0.1355    add 0.0017    
Accumulated time: pickout 0.0054    decision 0.0873    set_bounds 0.0355    solve 0.5855    add 0.0208    
Current (lb-rhs): -0.2522329092025757
435 domains visited
Cumulative time: 0.7405550479888916

BaB round 5
batch: 174
splitting decisions: 
split level 0: [/input-8, 1254] [/input-8, 1574] [/input-8, 1246] [/input-8, 1246] [/input-8, 1257] [/input-8, 1261] [/input-8, 1254] [/input-8, 156] [/input-8, 1254] [/input-8, 1574] 
pruning_in_iteration open status: False
ratio of positive domain = 65 / 348 = 0.18678160919540232
pruning-in-iteration extra time: 5.650520324707031e-05
Time: prepare 0.0078    bound 0.0920    transfer 0.0010    finalize 0.0024    func 0.1033    
Accumulated time: func 0.6885    prepare 0.0239    bound 0.6488    transfer 0.0071    finalize 0.0096    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25015 (14), -0.24834 (14), -0.24684 (14), -0.24485 (14), -0.23812 (14), -0.23646 (14), -0.23471 (14), -0.23310 (14), -0.23234 (14), -0.23112 (14), -0.22810 (14), -0.22643 (14), -0.22051 (14), -0.21796 (14), -0.21784 (14), -0.21574 (14), -0.21489 (14), -0.20884 (14), -0.20666 (14), -0.20553 (14), 
Length of domains: 283
Time: pickout 0.0029    decision 0.0180    set_bounds 0.0076    solve 0.1034    add 0.0023    
Accumulated time: pickout 0.0083    decision 0.1053    set_bounds 0.0431    solve 0.6889    add 0.0231    
Current (lb-rhs): -0.25015246868133545
718 domains visited
Cumulative time: 0.8753931522369385

BaB round 6
batch: 283
splitting decisions: 
split level 0: [/input-8, 1574] [/input-8, 141] [/input-8, 1254] [/input-8, 156] [/input-8, 26] [/input-8, 1262] [/input-8, 37] [/input-8, 37] [/input-8, 1261] [/input-8, 1574] 
pruning_in_iteration open status: False
ratio of positive domain = 73 / 566 = 0.12897526501766787
pruning-in-iteration extra time: 5.91278076171875e-05
Time: prepare 0.0110    bound 0.1048    transfer 0.0029    finalize 0.0033    func 0.1221    
Accumulated time: func 0.8107    prepare 0.0352    bound 0.7536    transfer 0.0101    finalize 0.0129    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24991 (15), -0.24811 (15), -0.24660 (15), -0.24460 (15), -0.23743 (15), -0.23583 (15), -0.23399 (15), -0.23229 (15), -0.23074 (15), -0.22947 (15), -0.22669 (15), -0.22493 (15), -0.21857 (15), -0.21656 (15), -0.21599 (15), -0.21594 (15), -0.21472 (15), -0.21292 (15), -0.21286 (15), -0.21096 (15), 
Length of domains: 491
Time: pickout 0.0051    decision 0.0320    set_bounds 0.0120    solve 0.1223    add 0.0041    
Accumulated time: pickout 0.0134    decision 0.1373    set_bounds 0.0551    solve 0.8112    add 0.0273    
Current (lb-rhs): -0.24990713596343994
1209 domains visited
Cumulative time: 1.0515611171722412

BaB round 7
batch: 491
splitting decisions: 
split level 0: [/input-8, 37] [/input-12, 71] [/input-8, 37] [/input-8, 37] [/input-8, 1257] [/input-8, 1254] [/input-8, 1574] [/input-8, 1254] [/input-8, 1254] [/input-8, 1254] 
pruning_in_iteration open status: False
ratio of positive domain = 119 / 982 = 0.12118126272912422
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0189    bound 0.1079    transfer 0.0113    finalize 0.0060    func 0.1443    
Accumulated time: func 0.9549    prepare 0.0543    bound 0.8615    transfer 0.0214    finalize 0.0189    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24273 (16), -0.24159 (16), -0.24061 (16), -0.24059 (16), -0.23984 (16), -0.23841 (16), -0.23791 (16), -0.23058 (16), -0.22982 (16), -0.22966 (16), -0.22887 (16), -0.22685 (16), -0.22644 (16), -0.22508 (16), -0.22438 (16), -0.22354 (16), -0.22264 (16), -0.22140 (16), -0.22044 (16), -0.21890 (16), 
Length of domains: 857
Time: pickout 0.0065    decision 0.0411    set_bounds 0.0202    solve 0.1445    add 0.0046    
Accumulated time: pickout 0.0198    decision 0.1784    set_bounds 0.0754    solve 0.9556    add 0.0318    
Current (lb-rhs): -0.24273443222045898
2066 domains visited
Cumulative time: 1.2695603370666504

BaB round 8
batch: 857
splitting decisions: 
split level 0: [/input-8, 156] [/input-8, 1261] [/input-8, 156] [/input-8, 1254] [/input-8, 1574] [/input-8, 165] [/input-12, 71] [/input-8, 37] [/input-8, 26] [/input-8, 1574] 
pruning_in_iteration open status: False
ratio of positive domain = 235 / 1714 = 0.13710618436406063
pruning-in-iteration extra time: 7.557868957519531e-05
Time: prepare 0.0331    bound 0.1234    transfer 0.0139    finalize 0.0097    func 0.1802    
Accumulated time: func 1.1351    prepare 0.0876    bound 0.9849    transfer 0.0353    finalize 0.0286    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23662 (17), -0.23522 (17), -0.23486 (17), -0.23478 (17), -0.23470 (17), -0.23449 (17), -0.23393 (17), -0.23267 (17), -0.23256 (17), -0.23214 (17), -0.23177 (17), -0.23050 (17), -0.22990 (17), -0.22549 (17), -0.22386 (17), -0.22370 (17), -0.22301 (17), -0.22237 (17), -0.22023 (17), -0.22008 (17), 
Length of domains: 1471
Time: pickout 0.0119    decision 0.0616    set_bounds 0.0353    solve 0.1805    add 0.0067    
Accumulated time: pickout 0.0318    decision 0.2400    set_bounds 0.1106    solve 1.1362    add 0.0385    
Current (lb-rhs): -0.236616849899292
3537 domains visited
Cumulative time: 1.5676383972167969

BaB round 9
batch: 1471
splitting decisions: 
split level 0: [/input-12, 71] [/input-8, 1254] [/input-8, 1246] [/input-12, 71] [/input-8, 141] [/input-8, 1246] [/input-8, 165] [/input-8, 37] [/input-8, 1246] [/input-8, 1254] 
pruning_in_iteration open status: False
ratio of positive domain = 292 / 2942 = 0.09925220938137325
pruning-in-iteration extra time: 5.8650970458984375e-05
Time: prepare 0.0600    bound 0.1679    transfer 0.0150    finalize 0.0183    func 0.2614    
Accumulated time: func 1.3965    prepare 0.1478    bound 1.1528    transfer 0.0503    finalize 0.0469    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23224 (18), -0.23174 (18), -0.23017 (18), -0.22990 (18), -0.22962 (18), -0.22901 (18), -0.22867 (18), -0.22857 (18), -0.22849 (18), -0.22843 (18), -0.22749 (18), -0.22680 (18), -0.22679 (18), -0.22649 (18), -0.22638 (18), -0.22589 (18), -0.22588 (18), -0.22530 (18), -0.22426 (18), -0.22254 (18), 
Length of domains: 2642
Time: pickout 0.0195    decision 0.0971    set_bounds 0.2067    solve 0.2619    add 0.0117    
Accumulated time: pickout 0.0512    decision 0.3371    set_bounds 0.3173    solve 1.3981    add 0.0502    
Current (lb-rhs): -0.23223519325256348
6179 domains visited
Cumulative time: 2.168546438217163

BaB round 10
batch: 2642
splitting decisions: 
split level 0: [/input-8, 165] [/input-8, 149] [/input-8, 1574] [/input-8, 1246] [/input-8, 162] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 1574] [/input-8, 1241] 
pruning_in_iteration open status: False
ratio of positive domain = 415 / 5284 = 0.07853898561695682
pruning-in-iteration extra time: 5.5789947509765625e-05
Time: prepare 0.1086    bound 0.2635    transfer 0.0313    finalize 0.0361    func 0.4404    
Accumulated time: func 1.8370    prepare 0.2566    bound 1.4163    transfer 0.0816    finalize 0.0830    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22804 (19), -0.22777 (19), -0.22610 (19), -0.22603 (19), -0.22464 (19), -0.22445 (19), -0.22433 (19), -0.22425 (19), -0.22394 (19), -0.22391 (19), -0.22314 (19), -0.22284 (19), -0.22265 (19), -0.22265 (19), -0.22263 (19), -0.22253 (19), -0.22202 (19), -0.22177 (19), -0.22096 (19), -0.22036 (19), 
Length of domains: 4854
Time: pickout 0.0377    decision 0.1644    set_bounds 0.1118    solve 0.4417    add 0.0197    
Accumulated time: pickout 0.0889    decision 0.5015    set_bounds 0.4292    solve 1.8398    add 0.0699    
Current (lb-rhs): -0.2280421257019043
11033 domains visited
Cumulative time: 2.951392650604248

BaB round 11
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1241] [/input-8, 1238] [/input-8, 141] [/input-8, 1246] [/input-12, 71] [/input-8, 788] [/input, 2971] [/input-8, 1246] [/input-8, 165] [/input-8, 788] 
pruning_in_iteration open status: False
ratio of positive domain = 507 / 8192 = 0.0618896484375
pruning-in-iteration extra time: 7.987022399902344e-05
Time: prepare 0.1724    bound 0.3741    transfer 0.0466    finalize 0.0489    func 0.6437    
Accumulated time: func 2.4807    prepare 0.4293    bound 1.7904    transfer 0.1282    finalize 0.1320    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22525 (20), -0.22433 (19), -0.22361 (20), -0.22356 (20), -0.22284 (19), -0.22253 (19), -0.22202 (19), -0.22168 (20), -0.22150 (20), -0.22143 (20), -0.22129 (20), -0.22096 (19), -0.22062 (20), -0.22012 (20), -0.22006 (20), -0.22002 (20), -0.21921 (20), -0.21905 (20), -0.21876 (19), -0.21850 (20), 
Length of domains: 8418
Time: pickout 0.0593    decision 0.3665    set_bounds 0.3177    solve 0.6452    add 0.0341    
Accumulated time: pickout 0.1481    decision 0.8679    set_bounds 0.7468    solve 2.4850    add 0.1040    
Current (lb-rhs): -0.22524571418762207
18693 domains visited
current_vram/total_varm: 10.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.384745836257935

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input-8, 173] [/input-8, 1246] [/input-8, 26] [/input-12, 71] [/input-8, 156] [/input-8, 173] [/input-8, 156] [/input-8, 1246] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: False
ratio of positive domain = 1200 / 16384 = 0.0732421875
pruning-in-iteration extra time: 0.00015926361083984375
Time: prepare 0.3470    bound 0.6974    transfer 0.0907    finalize 0.1110    func 1.2481    
Accumulated time: func 3.7287    prepare 0.7765    bound 2.4878    transfer 0.2189    finalize 0.2430    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22016 (20), -0.21886 (21), -0.21886 (21), -0.21833 (20), -0.21785 (20), -0.21774 (20), -0.21773 (21), -0.21729 (21), -0.21717 (21), -0.21704 (20), -0.21641 (21), -0.21626 (20), -0.21611 (21), -0.21604 (21), -0.21568 (20), -0.21541 (21), -0.21517 (21), -0.21516 (21), -0.21502 (20), -0.21467 (21), 
Length of domains: 15364
Time: pickout 0.1192    decision 0.4552    set_bounds 0.6688    solve 1.2515    add 0.0547    
Accumulated time: pickout 0.2673    decision 1.3231    set_bounds 1.4157    solve 3.7366    add 0.1587    
Current (lb-rhs): -0.22015917301177979
33831 domains visited
current_vram/total_varm: 18.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 6.95451021194458

BaB round 13
batch: 15364
splitting decisions: 
split level 0: [/input-8, 141] [/input-8, 218] [/input-12, 71] [/input-8, 788] [/input-8, 357] [/input-8, 156] [/input-8, 1246] [/input-8, 1241] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: False
ratio of positive domain = 2290 / 30728 = 0.0745248633168446
pruning-in-iteration extra time: 0.0003032684326171875
Time: prepare 0.6610    bound 1.2699    transfer 0.1724    finalize 0.2139    func 2.3201    
Accumulated time: func 6.0488    prepare 1.4379    bound 3.7577    transfer 0.3913    finalize 0.4569    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21430 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21182 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21114 (22), -0.21109 (22), -0.21102 (22), -0.21098 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21030 (22), 
Length of domains: 28344
Time: pickout 0.2333    decision 1.1037    set_bounds 1.0881    solve 2.3264    add 0.1130    
Accumulated time: pickout 0.5006    decision 2.4268    set_bounds 2.5038    solve 6.0629    add 0.2718    
Current (lb-rhs): -0.21523380279541016
62175 domains visited
Cumulative time: 11.860097169876099

BaB round 14
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1372] [/input-8, 1574] [/input-8, 1372] [/input-12, 71] [/input-8, 1246] [/input, 2971] [/input, 2987] [/input-8, 788] [/input-8, 1372] [/input-8, 147] 
pruning_in_iteration open status: False
ratio of positive domain = 2357 / 32768 = 0.071929931640625
pruning-in-iteration extra time: 0.00032448768615722656
Time: prepare 1.0165    bound 1.3436    transfer 0.1828    finalize 0.2461    func 2.7921    
Accumulated time: func 8.8409    prepare 2.4547    bound 5.1013    transfer 0.5741    finalize 0.7031    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20991 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), 
Length of domains: 42246
Time: pickout 0.2590    decision 1.9657    set_bounds 0.9986    solve 2.7983    add 0.1586    
Accumulated time: pickout 0.7596    decision 4.3925    set_bounds 3.5024    solve 8.8612    add 0.4303    
Current (lb-rhs): -0.21523380279541016
92461 domains visited
current_vram/total_varm: 36.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 18.082173585891724

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-12, 71] [/input-8, 944] [/input-8, 788] [/input-8, 779] [/input-8, 1181] [/input-12, 71] [/input-8, 1372] [/input-8, 1244] [/input-8, 788] [/input-8, 147] 
pruning_in_iteration open status: False
ratio of positive domain = 5687 / 65536 = 0.0867767333984375
pruning-in-iteration extra time: 0.0006730556488037109
Time: prepare 1.5087    bound 7.8342    transfer 0.4725    finalize 0.5901    func 10.4164    
Accumulated time: func 19.2573    prepare 3.9639    bound 12.9355    transfer 1.0467    finalize 1.2932    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 69006
Time: pickout 0.5344    decision 3.7690    set_bounds 2.6460    solve 10.4364    add 2.3701    
Accumulated time: pickout 1.2940    decision 8.1615    set_bounds 6.1484    solve 19.2976    add 2.8005    
Current (lb-rhs): -0.21523380279541016
151989 domains visited
Cumulative time: 38.03763556480408

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 149] [/input-8, 779] [/input-8, 141] [/input-8, 173] [/input-8, 941] [/input-8, 941] [/input-8, 788] [/input-8, 149] [/input-8, 1246] [/input-8, 779] 
pruning_in_iteration open status: False
ratio of positive domain = 6585 / 65536 = 0.1004791259765625
pruning-in-iteration extra time: 0.0007011890411376953
Time: prepare 1.5443    bound 7.8347    transfer 0.4845    finalize 0.6005    func 10.4713    
Accumulated time: func 29.7286    prepare 5.5087    bound 20.7702    transfer 1.5312    finalize 1.8936    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 94829
Time: pickout 0.6111    decision 3.9996    set_bounds 2.6387    solve 10.4849    add 0.2456    
Accumulated time: pickout 1.9051    decision 12.1611    set_bounds 8.7871    solve 29.7825    add 3.0461    
Current (lb-rhs): -0.21523380279541016
210580 domains visited
Cumulative time: 56.24248695373535

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 944] [/input-8, 149] [/input-8, 944] [/input, 700] [/input-8, 944] [/input-8, 788] [/input-8, 1748] [/input-8, 149] [/input-8, 149] [/input-8, 1181] 
pruning_in_iteration open status: False
ratio of positive domain = 7485 / 65536 = 0.1142120361328125
pruning-in-iteration extra time: 0.0006344318389892578
Time: prepare 1.5291    bound 7.8329    transfer 0.4752    finalize 1.3411    func 11.1813    
Accumulated time: func 40.9099    prepare 7.0383    bound 28.6032    transfer 2.0064    finalize 3.2348    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 119752
Time: pickout 0.6389    decision 4.1983    set_bounds 2.4039    solve 11.1925    add 0.2045    
Accumulated time: pickout 2.5440    decision 16.3595    set_bounds 11.1910    solve 40.9750    add 3.2506    
Current (lb-rhs): -0.21523380279541016
268271 domains visited
Cumulative time: 74.98083281517029

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input, 2734] [/input-8, 1241] [/input-8, 1652] [/input-8, 347] [/input-8, 944] [/input-8, 1181] [/input-8, 1241] [/input-8, 941] [/input-8, 147] [/input-8, 173] 
pruning_in_iteration open status: False
ratio of positive domain = 8419 / 65536 = 0.1284637451171875
pruning-in-iteration extra time: 0.000667572021484375
Time: prepare 1.5718    bound 7.8341    transfer 0.4985    finalize 0.6068    func 10.5150    
Accumulated time: func 51.4249    prepare 8.6106    bound 36.4373    transfer 2.5049    finalize 3.8416    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 143717
Time: pickout 0.5924    decision 3.9430    set_bounds 2.5070    solve 10.5293    add 0.2025    
Accumulated time: pickout 3.1364    decision 20.3025    set_bounds 13.6980    solve 51.5044    add 3.4531    
Current (lb-rhs): -0.21523380279541016
325004 domains visited
Cumulative time: 92.9073588848114

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 147] [/input-8, 1266] [/input-8, 1372] [/input-12, 55] [/input-8, 1238] [/input-12, 55] [/input-8, 149] [/input-8, 944] [/input-8, 1238] [/input-8, 173] 
pruning_in_iteration open status: False
ratio of positive domain = 9124 / 65536 = 0.13922119140625
pruning-in-iteration extra time: 0.0006573200225830078
Time: prepare 1.5852    bound 7.8333    transfer 0.5032    finalize 0.5903    func 10.5151    
Accumulated time: func 61.9399    prepare 10.1962    bound 44.2706    transfer 3.0081    finalize 4.4319    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 167002
Time: pickout 0.6206    decision 4.1545    set_bounds 2.7064    solve 10.5315    add 0.2079    
Accumulated time: pickout 3.7570    decision 24.4570    set_bounds 16.4044    solve 62.0359    add 3.6611    
Current (lb-rhs): -0.21523380279541016
381057 domains visited
Cumulative time: 111.28035259246826

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1237] [/input-8, 779] [/input-8, 347] [/input-8, 1181] [/input-8, 1238] [/input-8, 1652] [/input-8, 1238] [/input-8, 1238] [/input-8, 1757] [/input-8, 944] 
pruning_in_iteration open status: False
ratio of positive domain = 8340 / 65536 = 0.12725830078125
pruning-in-iteration extra time: 0.0006763935089111328
Time: prepare 1.9032    bound 7.8443    transfer 0.5089    finalize 1.9447    func 12.2034    
Accumulated time: func 74.1434    prepare 12.1000    bound 52.1149    transfer 3.5170    finalize 6.3766    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 191077
Time: pickout 0.6575    decision 4.3656    set_bounds 1.5987    solve 12.2173    add 0.2329    
Accumulated time: pickout 4.4145    decision 28.8226    set_bounds 18.0032    solve 74.2532    add 3.8939    
Current (lb-rhs): -0.21523380279541016
437900 domains visited
Cumulative time: 130.48944187164307

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1266] [/input-8, 958] [/input-12, 55] [/input-8, 492] [/input-8, 1237] [/input-8, 1757] [/input-8, 788] [/input-8, 173] [/input-8, 941] [/input-8, 1738] 
pruning_in_iteration open status: False
ratio of positive domain = 7734 / 65536 = 0.118011474609375
pruning-in-iteration extra time: 0.0006628036499023438
Time: prepare 1.5194    bound 7.8345    transfer 0.5257    finalize 0.5797    func 10.4630    
Accumulated time: func 84.6063    prepare 13.6198    bound 59.9494    transfer 4.0427    finalize 6.9563    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 215810
Time: pickout 0.6271    decision 3.4639    set_bounds 3.2277    solve 10.4812    add 0.2096    
Accumulated time: pickout 5.0416    decision 32.2865    set_bounds 21.2308    solve 84.7344    add 4.1035    
Current (lb-rhs): -0.21523380279541016
495401 domains visited
Cumulative time: 148.64399552345276

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 944] [/input-8, 1181] [/input-8, 1574] [/input-8, 1237] [/input-8, 779] [/input-8, 1265] [/input-8, 1241] [/input-8, 162] [/input-8, 958] [/input-8, 1266] 
pruning_in_iteration open status: False
ratio of positive domain = 7565 / 65536 = 0.1154327392578125
pruning-in-iteration extra time: 0.0007090568542480469
Time: prepare 1.5426    bound 7.8353    transfer 0.5299    finalize 0.5932    func 10.5044    
Accumulated time: func 95.1108    prepare 15.1629    bound 67.7848    transfer 4.5726    finalize 7.5495    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 240717
Time: pickout 0.6820    decision 5.2179    set_bounds 3.3713    solve 10.5229    add 0.2123    
Accumulated time: pickout 5.7236    decision 37.5044    set_bounds 24.6021    solve 95.2573    add 4.3158    
Current (lb-rhs): -0.21523380279541016
553076 domains visited
Cumulative time: 168.80841183662415

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1556] [/input-8, 1265] [/input, 3246] [/input-12, 55] [/input-8, 162] [/input-8, 1181] [/input-8, 1266] [/input-12, 55] [/input-8, 1652] [/input-8, 1372] 
pruning_in_iteration open status: False
ratio of positive domain = 6821 / 65536 = 0.1040802001953125
pruning-in-iteration extra time: 0.0007064342498779297
Time: prepare 1.5121    bound 7.8322    transfer 0.5600    finalize 0.6171    func 10.5345    
Accumulated time: func 105.6453    prepare 16.6757    bound 75.6170    transfer 5.1326    finalize 8.1666    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 266361
Time: pickout 0.7039    decision 3.4693    set_bounds 3.6589    solve 10.5759    add 0.2591    
Accumulated time: pickout 6.4274    decision 40.9736    set_bounds 28.2610    solve 105.8332    add 4.5749    
Current (lb-rhs): -0.21523380279541016
611488 domains visited
Cumulative time: 187.75327444076538

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 888] [/input-8, 1372] [/input-8, 162] [/input-8, 1265] [/input, 700] [/input-8, 1556] [/input-8, 1237] [/input-8, 1372] [/input-12, 55] [/input-8, 162] 
pruning_in_iteration open status: False
ratio of positive domain = 6038 / 65536 = 0.092132568359375
pruning-in-iteration extra time: 0.0007002353668212891
Time: prepare 1.7191    bound 7.8350    transfer 0.5884    finalize 0.6092    func 10.7564    
Accumulated time: func 116.4017    prepare 18.3954    bound 83.4520    transfer 5.7210    finalize 8.7758    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21523 (21), -0.21523 (21), -0.21438 (21), -0.21290 (22), -0.21284 (22), -0.21266 (21), -0.21211 (21), -0.21173 (22), -0.21128 (22), -0.21118 (22), -0.21102 (22), -0.21094 (21), -0.21094 (21), -0.21055 (22), -0.21007 (22), -0.21001 (22), -0.20973 (21), -0.20968 (22), -0.20918 (22), -0.20911 (22), 
Length of domains: 292808
Time: pickout 0.8824    decision 3.6477    set_bounds 4.4822    solve 10.7765    add 0.2310    
Accumulated time: pickout 7.3098    decision 44.6214    set_bounds 32.7432    solve 116.6097    add 4.8059    
Current (lb-rhs): -0.21523380279541016
670703 domains visited
Time out!!!!!!!!
Result: unknown in 211.5028 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.67420197, -25.24380302, -28.67889023, -28.16714287, -31.08404350,
         -29.38106728, -30.15142441, -31.47988510, -26.39269066, -27.12945747]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 131, 1, 576] with unstable size 130 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 576] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [130]; unstable size 130; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 130] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 130] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.58424449, 2.27789783, 1.83070707, 4.66640234, 2.88375068, 3.73132467,
         4.99384832, 0.22025728, 1.28892279]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0736 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.82417488, -22.89990807, -24.55294609, -25.83590508, -23.99347115,
         -26.13236237, -25.80495453, -25.02459717, -21.89008331, -22.53929710]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [969]; unstable size 969; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 342, 1, 969] with unstable size 341 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 969] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 969] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [341]; unstable size 341; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 341] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 341] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.74619818,  0.19975376,  1.29172385, -0.31224084,  1.47659194,
          0.91263330,  0.33260152, -2.13532114, -1.77720308]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.82417488, -22.89990807, -24.55294609, -25.83590508, -23.99347115,
         -26.13236237, -25.80495453, -25.02459717, -21.89008331, -22.53929710]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.82417488, -22.89990807, -24.55294800, -25.83590889, -23.99347305,
          -26.13236427, -25.80495453, -25.02459717, -21.89008522, -22.53930092],
         [-22.82417488, -22.89990807, -24.55294800, -25.83590889, -23.99347305,
          -26.13236427, -25.80495453, -25.02459717, -21.89008522, -22.53930092]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07573318,  1.16929817, -0.93408966, -0.28487396]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0775 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.59115791, -34.97940826, -33.80213165, -37.62691879, -34.83726883,
         -38.96181488, -38.03176880, -36.83436584, -27.23085785, -35.44748306]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 675] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 675] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 186] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.53111207,  6.68231153,  5.40997458,  9.09447956,  6.24458981,
         10.17940712,  9.45173359,  8.14738464,  7.13950729]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0630 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.97131920, -28.80028915, -23.13581467, -25.54052544, -23.92788124,
         -24.59213448, -25.03964615, -26.08118820, -27.66898346, -29.01627922]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 127, 1, 591] with unstable size 126 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 591] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 126] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.02588916,  2.80756664, -2.69469142, -0.18732262, -1.80930650,
         -1.25439477,  0.15932655,  1.76952982,  3.03217888]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.97131920, -28.80028915, -23.13581467, -25.54052544, -23.92788124,
         -24.59213448, -25.03964615, -26.08118820, -27.66898346, -29.01627922]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.97132111, -28.80028915, -23.13581467, -25.54052544, -23.92788315,
          -24.59213638, -25.03964615, -26.08118629, -27.66898155, -29.01628113],
         [-26.97132111, -28.80028915, -23.13581467, -25.54052544, -23.92788315,
          -24.59213638, -25.03964615, -26.08118629, -27.66898155, -29.01628113]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.90383148,  0.50087929, -1.11176300, -0.44750977]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0826 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
         -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1119]; unstable size 1119; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 1119] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 1119] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1119] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 286] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.60318422,  7.55680752,  1.79625535, -0.18556580,  1.88933873,
          1.24666619,  2.70504045,  5.15829563,  6.78245783]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
         -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.13it/s]100%|██████████| 1/1 [00:00<00:00,  7.12it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.81141090, -22.45367622, -13.02656364, -15.94076157, -13.62039566,
          -16.16443062, -15.43475914, -17.36662674, -19.76879120, -21.56838036]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.59383202]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1435 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 31.233142852783203
alpha/beta optimization time: 1.3240888118743896
initial alpha-crown bounds: tensor([[ 3.65191221,  7.65019703,  1.84882545, -0.11801693,  1.94617403,
          1.30992174,  2.79970813,  5.27359915,  6.87082195]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11801692843437195
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4588713645935
Verifying property 0 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.651912212371826.

Properties batch 1, size 1
Remaining timeout: 198.26346850395203
Verifying property 1 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.6501970291137695.

Properties batch 2, size 1
Remaining timeout: 198.1024751663208
Verifying property 2 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.848825454711914.

Properties batch 3, size 1
Remaining timeout: 197.9518551826477
Verifying property 3 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11801693]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.24694061, -22.01322937, -12.40090942, -15.54353809, -13.43921661,
        -15.79218292, -15.07034302, -17.14505386, -19.37706184, -21.17110634],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11801693]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1119
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 284
Node /15 input 0: size torch.Size([100]) unstable 28
-----------------
# of unstable neurons: 1431
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 97] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 56] 
split level 6: [/input-12, 79] 
split level 7: [/input-12, 83] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.4345855712890625e-05
Time: prepare 0.0018    bound 0.0041    transfer 0.0013    finalize 0.0021    func 0.0094    
Accumulated time: func 0.0094    prepare 0.0022    bound 0.0041    transfer 0.0013    finalize 0.0021    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0231    set_bounds 0.0165    solve 0.0094    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0231    set_bounds 0.0165    solve 0.0094    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05387568473815918


Properties batch 4, size 1
Remaining timeout: 197.74684977531433
Verifying property 4 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9461740255355835.

Properties batch 5, size 1
Remaining timeout: 197.66133379936218
Verifying property 5 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3099217414855957.

Properties batch 6, size 1
Remaining timeout: 197.56244087219238
Verifying property 6 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.799708127975464.

Properties batch 7, size 1
Remaining timeout: 197.4848828315735
Verifying property 7 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.273599147796631.

Properties batch 8, size 1
Remaining timeout: 197.40783524513245
Verifying property 8 with 1 instances.
##### Instance 64 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.870821952819824.
Result: safe in 2.6691 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.54049110, -19.17367935, -17.10903168, -14.96515083, -17.66605568,
         -15.88734627, -15.45722198, -17.64301682, -16.20054626, -17.64737320]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 153, 1, 578] with unstable size 152 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 578] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [152]; unstable size 152; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 152] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 152] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.58451450,  2.26354122,  0.51416576, -1.32597971,  0.81974959,
         -0.53718346,  0.88996911, -0.70218825,  0.60620260]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.54049110, -19.17367935, -17.10903168, -14.96515083, -17.66605568,
         -15.88734627, -15.45722198, -17.64301682, -16.20054626, -17.64737320]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.54049110, -19.17367935, -17.10903168, -14.96515179, -17.66605568,
          -15.88734627, -15.45722198, -17.64301872, -16.20054626, -17.64737320],
         [-17.54049110, -19.17367935, -17.10903168, -14.96515179, -17.66605568,
          -15.88734627, -15.45722198, -17.64301872, -16.20054626, -17.64737320]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.49207020,  0.43012428,  0.74332428]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0671 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
         -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [550]; unstable size 550; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 550] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 550] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 550] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 295] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.52899957,  3.35346889, -0.60972643,  1.57596004,  1.06331682,
         -0.42583418,  1.62264919,  1.54576635,  3.27385855]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
         -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.71it/s]100%|██████████| 1/1 [00:00<00:00,  8.70it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.80858994, -20.49908066, -15.18002129, -17.42616272, -15.05065727,
          -17.05187988, -15.57818604, -17.85818100, -18.38292313, -20.12383080],
         [-16.80858994, -20.49908066, -15.18002129, -17.42616272, -15.05065727,
          -17.05187988, -15.57818604, -17.85818100, -18.38292313, -20.12383080]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.12936401, 0.52752876]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1178 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.63650894165039
alpha/beta optimization time: 1.1631205081939697
initial alpha-crown bounds: tensor([[ 0.60815573,  3.47484779, -0.55310154,  1.62192631,  1.11317050,
         -0.37937355,  1.72037292,  1.66001880,  3.37049103]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5531015396118164
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65070509910583
Verifying property 0 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6081557273864746.

Properties batch 1, size 1
Remaining timeout: 198.54825139045715
Verifying property 1 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4748477935791016.

Properties batch 2, size 1
Remaining timeout: 198.46725797653198
Verifying property 2 with 1 instances.
##### Instance 66 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.55310154]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.25728035, -20.79345703, -15.69333935, -17.69227600, -15.08468628,
        -17.27866936, -15.87126160, -17.97873497, -18.71574402, -20.41540718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.55310154]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 550
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 867
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 46] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 18] 
pruning_in_iteration open status: True
ratio of positive domain = 221 / 256 = 0.86328125
pruning-in-iteration extra time: 0.0051915645599365234
Time: prepare 0.0019    bound 0.1621    transfer 0.0018    finalize 0.0017    func 0.1675    
Accumulated time: func 0.1675    prepare 0.0023    bound 0.1621    transfer 0.0018    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16927 (8), -0.16149 (8), -0.13975 (8), -0.13409 (8), -0.13236 (8), -0.12004 (8), -0.11395 (8), -0.09418 (8), -0.09348 (8), -0.09250 (8), -0.08950 (8), -0.08570 (8), -0.08364 (8), -0.08018 (8), -0.07134 (8), -0.05482 (8), -0.05466 (8), -0.05312 (8), -0.04931 (8), -0.04677 (8), 
Length of domains: 35
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0168    solve 0.1676    add 0.0027    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0168    solve 0.1676    add 0.0027    
Current (lb-rhs): -0.16926735639572144
35 domains visited
Cumulative time: 0.21517062187194824

BaB round 2
batch: 35
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-8, 1964] [/input-8, 1626] [/input-8, 1692] [/input-8, 1626] [/input-8, 1626] [/input-8, 1692] [/input-8, 1635] [/input-8, 1692] [/input-8, 1626] [/input-8, 1692] 
split level 2: [/input-8, 1700] [/input-8, 1716] [/input-8, 1626] [/input-8, 1700] [/input-8, 1700] [/input-8, 1626] [/input-8, 1626] [/input-8, 1700] [/input-8, 1716] [/input-8, 1626] 
pruning_in_iteration open status: True
ratio of positive domain = 188 / 280 = 0.6714285714285715
pruning-in-iteration extra time: 0.004689931869506836
Time: prepare 0.0055    bound 0.1330    transfer 0.0029    finalize 0.0021    func 0.1436    
Accumulated time: func 0.3111    prepare 0.0080    bound 0.2950    transfer 0.0047    finalize 0.0038    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14581 (11), -0.13629 (11), -0.13607 (11), -0.13394 (11), -0.12599 (11), -0.12478 (11), -0.11427 (11), -0.11010 (11), -0.11006 (11), -0.10734 (11), -0.10623 (11), -0.10469 (11), -0.09945 (11), -0.09928 (11), -0.09894 (11), -0.09812 (11), -0.09553 (11), -0.09489 (11), -0.09078 (11), -0.08930 (11), 
Length of domains: 92
Time: pickout 0.0011    decision 0.0131    set_bounds 0.0106    solve 0.1436    add 0.0018    
Accumulated time: pickout 0.0014    decision 0.0361    set_bounds 0.0274    solve 0.3112    add 0.0046    
Current (lb-rhs): -0.1458081603050232
127 domains visited
Cumulative time: 0.38623785972595215

BaB round 3
batch: 92
splitting decisions: 
split level 0: [/input-8, 1692] [/input-8, 1700] [/input-8, 1635] [/input-8, 1964] [/input-8, 1700] [/input-8, 1626] [/input-8, 1692] [/input-8, 1700] [/input-12, 72] [/input-8, 1692] 
split level 1: [/input-12, 7] [/input-8, 1716] [/input-8, 1964] [/input-8, 1692] [/input-8, 1630] [/input-12, 7] [/input-12, 7] [/input-8, 1716] [/input-12, 7] [/input-12, 7] 
pruning_in_iteration open status: True
ratio of positive domain = 177 / 368 = 0.4809782608695652
pruning-in-iteration extra time: 0.004811286926269531
Time: prepare 0.0073    bound 0.2274    transfer 0.0018    finalize 0.0028    func 0.2394    
Accumulated time: func 0.5505    prepare 0.0155    bound 0.5225    transfer 0.0065    finalize 0.0066    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13307 (13), -0.12303 (13), -0.12072 (13), -0.11973 (13), -0.11448 (13), -0.11249 (13), -0.11014 (13), -0.11003 (13), -0.10821 (13), -0.10606 (13), -0.10377 (13), -0.10301 (13), -0.10218 (13), -0.10189 (13), -0.09824 (13), -0.09630 (13), -0.09625 (13), -0.09547 (13), -0.09242 (13), -0.09186 (13), 
Length of domains: 191
Time: pickout 0.0020    decision 0.0231    set_bounds 0.0117    solve 0.2395    add 0.0019    
Accumulated time: pickout 0.0035    decision 0.0592    set_bounds 0.0391    solve 0.5508    add 0.0065    
Current (lb-rhs): -0.13307011127471924
318 domains visited
Cumulative time: 0.6655385494232178

BaB round 4
batch: 191
splitting decisions: 
split level 0: [/input-8, 1635] [/input-12, 7] [/input-12, 7] [/input-12, 7] [/input-8, 468] [/input-8, 1635] [/input-12, 7] [/input-8, 1692] [/input-8, 1716] [/input-8, 468] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 382 = 0.2696335078534031
pruning-in-iteration extra time: 0.004487276077270508
Time: prepare 0.0074    bound 0.2015    transfer 0.0014    finalize 0.0024    func 0.2128    
Accumulated time: func 0.7633    prepare 0.0231    bound 0.7240    transfer 0.0079    finalize 0.0090    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12473 (14), -0.12339 (14), -0.11451 (14), -0.11276 (14), -0.11234 (14), -0.11153 (14), -0.10990 (14), -0.10648 (14), -0.10433 (14), -0.10172 (14), -0.10155 (14), -0.09991 (14), -0.09950 (14), -0.09821 (14), -0.09813 (14), -0.09571 (14), -0.09517 (14), -0.09382 (14), -0.09359 (14), -0.09301 (14), 
Length of domains: 279
Time: pickout 0.0031    decision 0.0250    set_bounds 0.0080    solve 0.2129    add 0.0017    
Accumulated time: pickout 0.0066    decision 0.0842    set_bounds 0.0472    solve 0.7637    add 0.0082    
Current (lb-rhs): -0.1247330904006958
597 domains visited
Cumulative time: 0.9169788360595703

BaB round 5
batch: 279
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1630] [/input-8, 1700] [/input-8, 1708] [/input-8, 1708] [/input-8, 1708] [/input-8, 468] [/input-8, 1708] [/input-8, 1716] [/input-8, 468] 
pruning_in_iteration open status: False
ratio of positive domain = 108 / 558 = 0.19354838709677424
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0105    bound 0.1062    transfer 0.0030    finalize 0.0033    func 0.1230    
Accumulated time: func 0.8863    prepare 0.0338    bound 0.8302    transfer 0.0109    finalize 0.0123    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11822 (15), -0.11746 (15), -0.11074 (15), -0.10814 (15), -0.10637 (15), -0.10634 (15), -0.10606 (15), -0.10512 (15), -0.10423 (15), -0.10153 (15), -0.10055 (15), -0.09886 (15), -0.09709 (15), -0.09642 (15), -0.09574 (15), -0.09457 (15), -0.09456 (15), -0.09345 (15), -0.09299 (15), -0.09220 (15), 
Length of domains: 446
Time: pickout 0.0042    decision 0.0303    set_bounds 0.0116    solve 0.1232    add 0.0028    
Accumulated time: pickout 0.0108    decision 0.1145    set_bounds 0.0588    solve 0.8869    add 0.0110    
Current (lb-rhs): -0.1182158887386322
1043 domains visited
Cumulative time: 1.0898382663726807

BaB round 6
batch: 446
splitting decisions: 
split level 0: [/input-8, 1726] [/input-8, 468] [/input-8, 1635] [/input-8, 1969] [/input-8, 1716] [/input-8, 420] [/input-8, 1716] [/input-8, 1716] [/input-8, 1708] [/input-8, 1717] 
pruning_in_iteration open status: True
ratio of positive domain = 203 / 892 = 0.22757847533632292
pruning-in-iteration extra time: 0.003113269805908203
Time: prepare 0.0170    bound 0.2112    transfer 0.0060    finalize 0.0054    func 0.2397    
Accumulated time: func 1.1260    prepare 0.0509    bound 1.0414    transfer 0.0169    finalize 0.0177    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11533 (16), -0.11457 (16), -0.10752 (16), -0.10510 (16), -0.10470 (16), -0.10378 (16), -0.10290 (16), -0.10278 (16), -0.10082 (16), -0.10022 (16), -0.09935 (16), -0.09506 (16), -0.09445 (16), -0.09369 (16), -0.09326 (16), -0.09322 (16), -0.09212 (16), -0.09188 (16), -0.09099 (16), -0.09000 (16), 
Length of domains: 689
Time: pickout 0.0061    decision 0.0388    set_bounds 0.0186    solve 0.2399    add 0.0028    
Accumulated time: pickout 0.0169    decision 0.1532    set_bounds 0.0774    solve 1.1268    add 0.0138    
Current (lb-rhs): -0.1153261661529541
1732 domains visited
Cumulative time: 1.3978497982025146

BaB round 7
batch: 689
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1708] [/input-8, 1964] [/input-8, 466] [/input-8, 1726] [/input-8, 459] [/input-8, 1708] [/input-8, 1964] [/input-8, 1969] [/input-8, 1964] 
pruning_in_iteration open status: True
ratio of positive domain = 356 / 1378 = 0.2583454281567489
pruning-in-iteration extra time: 0.004378557205200195
Time: prepare 0.0261    bound 0.2901    transfer 0.0062    finalize 0.0108    func 0.3334    
Accumulated time: func 1.4594    prepare 0.0772    bound 1.3316    transfer 0.0232    finalize 0.0285    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11215 (17), -0.11094 (17), -0.10473 (17), -0.10141 (17), -0.10023 (17), -0.09971 (17), -0.09962 (17), -0.09889 (17), -0.09738 (17), -0.09477 (17), -0.09418 (17), -0.09206 (17), -0.09159 (17), -0.09026 (17), -0.09004 (17), -0.08923 (17), -0.08872 (17), -0.08844 (17), -0.08824 (17), -0.08734 (17), 
Length of domains: 1022
Time: pickout 0.0098    decision 0.0522    set_bounds 0.0284    solve 0.3337    add 0.0065    
Accumulated time: pickout 0.0267    decision 0.2054    set_bounds 0.1058    solve 1.4604    add 0.0204    
Current (lb-rhs): -0.11214923858642578
2754 domains visited
Cumulative time: 1.8311054706573486

BaB round 8
batch: 1022
splitting decisions: 
split level 0: [/input-8, 1726] [/input-8, 459] [/input-8, 468] [/input-8, 1630] [/input-8, 1726] [/input-8, 1717] [/input-8, 459] [/input-8, 1716] [/input-8, 1726] [/input-8, 459] 
pruning_in_iteration open status: True
ratio of positive domain = 514 / 2044 = 0.2514677103718199
pruning-in-iteration extra time: 0.00492095947265625
Time: prepare 0.0388    bound 0.3103    transfer 0.0110    finalize 0.0115    func 0.3719    
Accumulated time: func 1.8313    prepare 0.1162    bound 1.6419    transfer 0.0342    finalize 0.0400    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11105 (18), -0.10976 (18), -0.10346 (18), -0.10026 (18), -0.09914 (18), -0.09847 (18), -0.09775 (18), -0.09680 (18), -0.09616 (18), -0.09184 (18), -0.09128 (18), -0.09088 (18), -0.08909 (18), -0.08890 (18), -0.08821 (18), -0.08712 (18), -0.08709 (18), -0.08670 (18), -0.08631 (18), -0.08569 (18), 
Length of domains: 1530
Time: pickout 0.0165    decision 0.0714    set_bounds 0.0427    solve 0.3722    add 0.0071    
Accumulated time: pickout 0.0432    decision 0.2768    set_bounds 0.1484    solve 1.8327    add 0.0274    
Current (lb-rhs): -0.11104854941368103
4284 domains visited
Cumulative time: 2.3451614379882812

BaB round 9
batch: 1530
splitting decisions: 
split level 0: [/input-8, 1630] [/input-8, 466] [/input-8, 1630] [/input-8, 466] [/input-8, 1630] [/input-8, 466] [/input-8, 466] [/input-8, 1630] [/input-8, 466] [/input-8, 466] 
pruning_in_iteration open status: True
ratio of positive domain = 688 / 3060 = 0.22483660130718952
pruning-in-iteration extra time: 0.004400014877319336
Time: prepare 0.0590    bound 0.2899    transfer 0.0157    finalize 0.0147    func 0.3803    
Accumulated time: func 2.2116    prepare 0.1755    bound 1.9318    transfer 0.0498    finalize 0.0547    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10244 (19), -0.10165 (19), -0.10114 (19), -0.10036 (19), -0.09474 (19), -0.09395 (19), -0.09315 (19), -0.09135 (19), -0.09084 (19), -0.09060 (19), -0.08973 (19), -0.08921 (19), -0.08904 (19), -0.08831 (19), -0.08745 (19), -0.08722 (19), -0.08667 (19), -0.08619 (19), -0.08450 (19), -0.08273 (19), 
Length of domains: 2372
Time: pickout 0.0258    decision 0.0988    set_bounds 0.2202    solve 0.3810    add 0.0116    
Accumulated time: pickout 0.0690    decision 0.3756    set_bounds 0.3686    solve 2.2137    add 0.0390    
Current (lb-rhs): -0.10243529081344604
6656 domains visited
Cumulative time: 3.0882327556610107

BaB round 10
batch: 2372
splitting decisions: 
split level 0: [/input-8, 1726] [/input-8, 1969] [/input-8, 1726] [/input-8, 1969] [/input-8, 1969] [/input-8, 1726] [/input-8, 1969] [/input-8, 1969] [/input-8, 1695] [/input-8, 466] 
pruning_in_iteration open status: True
ratio of positive domain = 1367 / 4744 = 0.28815345699831363
pruning-in-iteration extra time: 0.005132436752319336
Time: prepare 0.0910    bound 0.5605    transfer 0.0276    finalize 0.0230    func 0.7025    
Accumulated time: func 2.9141    prepare 0.2669    bound 2.4923    transfer 0.0774    finalize 0.0777    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09532 (20), -0.09451 (20), -0.09404 (20), -0.09322 (20), -0.09302 (20), -0.09221 (20), -0.09173 (20), -0.09091 (20), -0.08796 (20), -0.08761 (20), -0.08679 (20), -0.08566 (20), -0.08531 (20), -0.08449 (20), -0.08372 (20), -0.08350 (20), -0.08308 (20), -0.08272 (20), -0.08260 (20), -0.08252 (20), 
Length of domains: 3377
Time: pickout 0.0327    decision 0.1454    set_bounds 0.0977    solve 0.7039    add 0.0146    
Accumulated time: pickout 0.1016    decision 0.5210    set_bounds 0.4663    solve 2.9175    add 0.0536    
Current (lb-rhs): -0.09532380104064941
10033 domains visited
Cumulative time: 4.091877460479736

BaB round 11
batch: 3377
splitting decisions: 
split level 0: [/input-8, 1708] [/input-8, 1714] [/input-8, 1708] [/input-8, 1714] [/input-8, 1714] [/input-8, 1708] [/input-8, 1714] [/input-8, 1714] [/input-8, 1035] [/input-8, 1695] 
pruning_in_iteration open status: True
ratio of positive domain = 1741 / 6754 = 0.2577731714539532
pruning-in-iteration extra time: 0.005026817321777344
Time: prepare 0.2598    bound 0.3684    transfer 0.0423    finalize 0.0352    func 0.7071    
Accumulated time: func 3.6212    prepare 0.5269    bound 2.8607    transfer 0.1198    finalize 0.1129    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09051 (21), -0.08990 (21), -0.08970 (21), -0.08908 (21), -0.08821 (21), -0.08760 (21), -0.08740 (21), -0.08678 (21), -0.08530 (21), -0.08449 (21), -0.08356 (21), -0.08300 (21), -0.08219 (21), -0.08205 (21), -0.08128 (21), -0.08096 (21), -0.07975 (21), -0.07903 (21), -0.07874 (21), -0.07866 (21), 
Length of domains: 5013
Time: pickout 0.0452    decision 0.1992    set_bounds 0.1412    solve 0.7086    add 0.0217    
Accumulated time: pickout 0.1468    decision 0.7202    set_bounds 0.6075    solve 3.6261    add 0.0753    
Current (lb-rhs): -0.09051215648651123
15046 domains visited
Cumulative time: 5.222306489944458

BaB round 12
batch: 4096
splitting decisions: 
split level 0: [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 1717] [/input-8, 459] [/input-8, 1717] [/input-8, 459] [/input-8, 459] [/input-8, 1693] [/input-8, 438] 
pruning_in_iteration open status: True
ratio of positive domain = 2131 / 8192 = 0.2601318359375
pruning-in-iteration extra time: 0.005072355270385742
Time: prepare 0.1645    bound 0.3907    transfer 0.0469    finalize 0.0392    func 0.6424    
Accumulated time: func 4.2636    prepare 0.6916    bound 3.2515    transfer 0.1667    finalize 0.1522    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08530 (21), -0.08496 (22), -0.08435 (22), -0.08387 (22), -0.08326 (22), -0.08270 (22), -0.08208 (22), -0.08161 (22), -0.08145 (22), -0.08144 (22), -0.08099 (22), -0.08084 (22), -0.08083 (22), -0.07918 (22), -0.07918 (22), -0.07903 (21), -0.07863 (22), -0.07857 (22), -0.07857 (22), -0.07853 (21), 
Length of domains: 6978
Time: pickout 0.0573    decision 0.2331    set_bounds 0.3143    solve 0.6443    add 0.0233    
Accumulated time: pickout 0.2041    decision 0.9533    set_bounds 0.9218    solve 4.2704    add 0.0986    
Current (lb-rhs): -0.08530011773109436
21107 domains visited
current_vram/total_varm: 11.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.50993800163269

BaB round 13
batch: 6978
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1693] [/input-8, 1717] [/input-8, 1693] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1717] [/input-8, 1268] [/input-8, 1717] 
pruning_in_iteration open status: True
ratio of positive domain = 4938 / 13956 = 0.35382631126397246
pruning-in-iteration extra time: 0.005118608474731445
Time: prepare 0.2759    bound 0.5217    transfer 0.0795    finalize 0.0679    func 0.9461    
Accumulated time: func 5.2097    prepare 0.9678    bound 3.7732    transfer 0.2462    finalize 0.2201    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07972 (22), -0.07870 (23), -0.07808 (23), -0.07761 (23), -0.07756 (23), -0.07699 (23), -0.07692 (23), -0.07647 (23), -0.07621 (22), -0.07583 (23), -0.07578 (23), -0.07555 (23), -0.07516 (23), -0.07510 (23), -0.07507 (23), -0.07491 (23), -0.07468 (23), -0.07448 (23), -0.07447 (23), -0.07445 (23), 
Length of domains: 9018
Time: pickout 0.1015    decision 0.5837    set_bounds 0.4703    solve 0.9490    add 0.0330    
Accumulated time: pickout 0.3055    decision 1.5370    set_bounds 1.3921    solve 5.2194    add 0.1317    
Current (lb-rhs): -0.07972176373004913
30125 domains visited
Cumulative time: 8.677220582962036

BaB round 14
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1717] [/input-8, 1630] [/input-8, 506] [/input-8, 1717] [/input-8, 1630] [/input-8, 466] [/input-8, 1630] [/input-8, 466] [/input-8, 1630] [/input-8, 466] 
pruning_in_iteration open status: True
ratio of positive domain = 4566 / 16384 = 0.2786865234375
pruning-in-iteration extra time: 0.005172014236450195
Time: prepare 0.3269    bound 0.6340    transfer 0.0925    finalize 0.0843    func 1.1395    
Accumulated time: func 6.3492    prepare 1.2950    bound 4.4071    transfer 0.3387    finalize 0.3044    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07621 (22), -0.07601 (24), -0.07540 (24), -0.07490 (24), -0.07488 (24), -0.07429 (24), -0.07424 (24), -0.07377 (24), -0.07343 (23), -0.07313 (24), -0.07308 (24), -0.07284 (24), -0.07265 (22), -0.07247 (24), -0.07233 (23), -0.07231 (24), -0.07229 (24), -0.07220 (24), -0.07197 (24), -0.07174 (24), 
Length of domains: 12644
Time: pickout 0.1168    decision 0.4667    set_bounds 0.6947    solve 1.1431    add 0.0474    
Accumulated time: pickout 0.4223    decision 2.0037    set_bounds 2.0868    solve 6.3625    add 0.1791    
Current (lb-rhs): -0.07620508968830109
41943 domains visited
current_vram/total_varm: 22.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.177998304367065

BaB round 15
batch: 12644
splitting decisions: 
split level 0: [/input-8, 1964] [/input-8, 1268] [/input-8, 1964] [/input-8, 1268] [/input-8, 1964] [/input-8, 1964] [/input-8, 459] [/input-8, 459] [/input-8, 1268] [/input-8, 1268] 
pruning_in_iteration open status: True
ratio of positive domain = 9429 / 25288 = 0.3728645998101866
pruning-in-iteration extra time: 0.005300283432006836
Time: prepare 0.5072    bound 0.8618    transfer 0.1464    finalize 0.3204    func 1.8377    
Accumulated time: func 8.1869    prepare 1.8027    bound 5.2689    transfer 0.4851    finalize 0.6248    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07286 (25), -0.07235 (25), -0.07177 (25), -0.07175 (25), -0.07125 (25), -0.07120 (25), -0.07092 (23), -0.07071 (24), -0.07066 (25), -0.07011 (25), -0.06992 (25), -0.06980 (23), -0.06970 (25), -0.06965 (24), -0.06941 (25), -0.06915 (25), -0.06913 (25), -0.06911 (25), -0.06883 (25), -0.06870 (23), 
Length of domains: 15859
Time: pickout 0.1863    decision 0.9420    set_bounds 0.7622    solve 1.8429    add 0.0572    
Accumulated time: pickout 0.6086    decision 2.9457    set_bounds 2.8490    solve 8.2054    add 0.2362    
Current (lb-rhs): -0.07286292314529419
57802 domains visited
Cumulative time: 15.027338743209839

BaB round 16
batch: 15859
splitting decisions: 
split level 0: [/input-8, 1035] [/input-8, 438] [/input-8, 438] [/input-8, 1035] [/input-8, 1035] [/input-8, 1035] [/input-8, 438] [/input-8, 438] [/input-8, 1717] [/input-8, 1717] 
pruning_in_iteration open status: True
ratio of positive domain = 9423 / 31718 = 0.29708682766883154
pruning-in-iteration extra time: 0.005288362503051758
Time: prepare 0.6453    bound 1.1203    transfer 0.1869    finalize 0.1894    func 2.1443    
Accumulated time: func 10.3312    prepare 2.4484    bound 6.3892    transfer 0.6720    finalize 0.8142    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06878 (26), -0.06806 (26), -0.06770 (26), -0.06765 (26), -0.06764 (25), -0.06700 (24), -0.06698 (26), -0.06696 (26), -0.06683 (26), -0.06657 (26), -0.06655 (25), -0.06590 (24), -0.06588 (26), -0.06585 (26), -0.06575 (26), -0.06572 (26), -0.06560 (26), -0.06512 (26), -0.06505 (26), -0.06503 (26), 
Length of domains: 22295
Time: pickout 0.2403    decision 1.1361    set_bounds 1.1874    solve 2.1510    add 0.0911    
Accumulated time: pickout 0.8489    decision 4.0818    set_bounds 4.0364    solve 10.3564    add 0.3273    
Current (lb-rhs): -0.06878450512886047
80097 domains visited
Cumulative time: 19.902501106262207

BaB round 17
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1972] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1695] [/input-8, 1972] [/input-8, 1695] 
pruning_in_iteration open status: True
ratio of positive domain = 9553 / 32768 = 0.291534423828125
pruning-in-iteration extra time: 0.0055234432220458984
Time: prepare 0.6755    bound 1.1579    transfer 0.1929    finalize 0.1972    func 2.2253    
Accumulated time: func 12.5565    prepare 3.1243    bound 7.5471    transfer 0.8649    finalize 1.0115    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06878 (26), -0.06770 (26), -0.06765 (26), -0.06683 (26), -0.06657 (26), -0.06655 (25), -0.06590 (24), -0.06585 (26), -0.06575 (26), -0.06572 (26), -0.06560 (26), -0.06505 (26), -0.06503 (26), -0.06476 (26), -0.06464 (26), -0.06452 (26), -0.06392 (26), -0.06390 (26), -0.06389 (26), -0.06388 (25), 
Length of domains: 29126
Time: pickout 0.2539    decision 1.9535    set_bounds 1.2960    solve 2.2326    add 0.0926    
Accumulated time: pickout 1.1028    decision 6.0352    set_bounds 5.3324    solve 12.5890    add 0.4199    
Current (lb-rhs): -0.06878450512886047
103312 domains visited
current_vram/total_varm: 42.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 25.801234483718872

BaB round 18
batch: 29126
splitting decisions: 
split level 0: [/input-8, 1695] [/input-8, 1964] [/input-8, 1630] [/input-8, 1695] [/input-8, 1695] [/input-8, 1693] [/input-8, 1630] [/input-8, 1630] [/input-8, 1035] [/input-8, 1035] 
pruning_in_iteration open status: True
ratio of positive domain = 16275 / 58252 = 0.27938954885669165
pruning-in-iteration extra time: 0.005923032760620117
Time: prepare 1.2247    bound 2.0135    transfer 0.4791    finalize 0.7876    func 4.5084    
Accumulated time: func 17.0649    prepare 4.3494    bound 9.5606    transfer 1.3440    finalize 1.7991    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06400 (27), -0.06292 (27), -0.06289 (27), -0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06203 (26), -0.06180 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06134 (27), -0.06108 (27), -0.06083 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06029 (27), -0.06026 (27), 
Length of domains: 41977
Time: pickout 0.4689    decision 3.3083    set_bounds 2.0750    solve 4.5202    add 0.1606    
Accumulated time: pickout 1.5718    decision 9.3435    set_bounds 7.4074    solve 17.1092    add 0.5805    
Current (lb-rhs): -0.0640028864145279
145289 domains visited
Cumulative time: 36.48644757270813

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] [/input-8, 459] 
pruning_in_iteration open status: True
ratio of positive domain = 21885 / 65536 = 0.3339385986328125
pruning-in-iteration extra time: 0.006160736083984375
Time: prepare 1.8261    bound 2.6457    transfer 0.5592    finalize 0.4117    func 5.4468    
Accumulated time: func 22.5117    prepare 6.1760    bound 12.2063    transfer 1.9032    finalize 2.2108    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 52860
Time: pickout 0.5449    decision 3.3672    set_bounds 2.3628    solve 5.4620    add 0.1517    
Accumulated time: pickout 2.1166    decision 12.7107    set_bounds 9.7702    solve 22.5712    add 0.7322    
Current (lb-rhs): -0.06280447542667389
188940 domains visited
Cumulative time: 48.5707905292511

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] [/input-8, 1622] 
pruning_in_iteration open status: True
ratio of positive domain = 22846 / 65536 = 0.348602294921875
pruning-in-iteration extra time: 0.006273746490478516
Time: prepare 1.3479    bound 2.6091    transfer 0.5614    finalize 1.0060    func 5.5268    
Accumulated time: func 28.0385    prepare 7.5243    bound 14.8154    transfer 2.4646    finalize 3.2167    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 62782
Time: pickout 0.5680    decision 4.4744    set_bounds 2.1642    solve 5.5408    add 0.2759    
Accumulated time: pickout 2.6846    decision 17.1851    set_bounds 11.9344    solve 28.1120    add 1.0081    
Current (lb-rhs): -0.06280447542667389
231630 domains visited
Cumulative time: 61.76967167854309

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 432] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 593] [/input-8, 432] 
pruning_in_iteration open status: True
ratio of positive domain = 25967 / 65536 = 0.3962249755859375
pruning-in-iteration extra time: 0.00622105598449707
Time: prepare 1.3767    bound 2.4952    transfer 0.5561    finalize 0.4563    func 4.8879    
Accumulated time: func 32.9265    prepare 8.9015    bound 17.3106    transfer 3.0207    finalize 3.6730    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 69583
Time: pickout 0.5687    decision 3.5832    set_bounds 2.9296    solve 5.6492    add 0.2246    
Accumulated time: pickout 3.2533    decision 20.7683    set_bounds 14.8640    solve 33.7612    add 1.2327    
Current (lb-rhs): -0.06280447542667389
271199 domains visited
Cumulative time: 74.90440249443054

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1972] [/input-8, 459] [/input-8, 459] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] [/input-8, 1972] 
pruning_in_iteration open status: True
ratio of positive domain = 25058 / 65536 = 0.382354736328125
pruning-in-iteration extra time: 0.006427764892578125
Time: prepare 1.4490    bound 2.5222    transfer 0.5563    finalize 0.4899    func 5.0229    
Accumulated time: func 37.9494    prepare 10.3510    bound 19.8328    transfer 3.5769    finalize 4.1629    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 77293
Time: pickout 0.6040    decision 3.3932    set_bounds 3.1187    solve 5.0413    add 0.1380    
Accumulated time: pickout 3.8572    decision 24.1615    set_bounds 17.9827    solve 38.8026    add 1.3707    
Current (lb-rhs): -0.06280447542667389
311677 domains visited
Cumulative time: 87.41291928291321

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
pruning_in_iteration open status: True
ratio of positive domain = 31948 / 65536 = 0.48748779296875
pruning-in-iteration extra time: 0.006152153015136719
Time: prepare 1.7889    bound 2.2710    transfer 0.5385    finalize 0.5265    func 5.1326    
Accumulated time: func 43.0820    prepare 12.1404    bound 22.1038    transfer 4.1155    finalize 4.6894    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 78113
Time: pickout 0.6126    decision 4.2009    set_bounds 3.2896    solve 6.1349    add 0.1177    
Accumulated time: pickout 4.4698    decision 28.3624    set_bounds 21.2722    solve 44.9375    add 1.4884    
Current (lb-rhs): -0.06280447542667389
345265 domains visited
Cumulative time: 102.10105633735657

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] [/input-12, 6] 
pruning_in_iteration open status: True
ratio of positive domain = 35026 / 65536 = 0.534454345703125
pruning-in-iteration extra time: 0.005940675735473633
Time: prepare 1.5422    bound 2.1400    transfer 0.5603    finalize 0.4916    func 4.7405    
Accumulated time: func 47.8225    prepare 13.6835    bound 24.2438    transfer 4.6758    finalize 5.1810    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 75855
Time: pickout 0.6704    decision 3.4560    set_bounds 3.4994    solve 4.7578    add 0.1284    
Accumulated time: pickout 5.1402    decision 31.8184    set_bounds 24.7716    solve 49.6953    add 1.6168    
Current (lb-rhs): -0.06280447542667389
375775 domains visited
Cumulative time: 114.89458751678467

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
pruning_in_iteration open status: True
ratio of positive domain = 32968 / 65536 = 0.5030517578125
pruning-in-iteration extra time: 0.006063222885131836
Time: prepare 1.5085    bound 2.2251    transfer 0.5572    finalize 1.3507    func 5.6463    
Accumulated time: func 53.4688    prepare 15.1924    bound 26.4689    transfer 5.2329    finalize 6.5317    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 75655
Time: pickout 0.6633    decision 3.8632    set_bounds 2.5901    solve 5.6605    add 0.2804    
Accumulated time: pickout 5.8035    decision 35.6816    set_bounds 27.3617    solve 55.3558    add 1.8972    
Current (lb-rhs): -0.06280447542667389
408343 domains visited
Cumulative time: 128.19465374946594

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1588] [/input-8, 432] [/input-8, 1588] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] [/input-8, 432] [/input-8, 1693] [/input-8, 1693] [/input-8, 1693] 
pruning_in_iteration open status: True
ratio of positive domain = 28081 / 65536 = 0.4284820556640625
pruning-in-iteration extra time: 0.006218433380126953
Time: prepare 1.5009    bound 2.4116    transfer 0.5644    finalize 1.3801    func 5.8616    
Accumulated time: func 59.3304    prepare 16.6938    bound 28.8805    transfer 5.7973    finalize 7.9118    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 80342
Time: pickout 0.7011    decision 3.9413    set_bounds 2.7003    solve 5.8785    add 0.4038    
Accumulated time: pickout 6.5046    decision 39.6229    set_bounds 30.0621    solve 61.2343    add 2.3010    
Current (lb-rhs): -0.06280447542667389
445798 domains visited
Cumulative time: 142.10652565956116

BaB round 27
batch: 32768
splitting decisions: 
split level 0: [/input-8, 432] [/input-8, 432] [/input-8, 1713] [/input-8, 432] [/input-8, 1713] [/input-8, 432] [/input-8, 432] [/input-8, 432] [/input-8, 1713] [/input-8, 1972] 
pruning_in_iteration open status: True
ratio of positive domain = 29074 / 65536 = 0.443634033203125
pruning-in-iteration extra time: 0.0063915252685546875
Time: prepare 1.5756    bound 2.3755    transfer 0.5678    finalize 0.4619    func 4.9866    
Accumulated time: func 64.3170    prepare 18.2698    bound 31.2560    transfer 6.3651    finalize 8.3737    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 84036
Time: pickout 0.6818    decision 3.4117    set_bounds 3.6569    solve 5.0078    add 0.1216    
Accumulated time: pickout 7.1864    decision 43.0346    set_bounds 33.7190    solve 66.2420    add 2.4227    
Current (lb-rhs): -0.06280447542667389
482260 domains visited
Cumulative time: 155.2442684173584

BaB round 28
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1713] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] [/input-8, 1660] 
pruning_in_iteration open status: True
ratio of positive domain = 29094 / 65536 = 0.443939208984375
pruning-in-iteration extra time: 0.006041526794433594
Time: prepare 1.5577    bound 2.3724    transfer 0.5685    finalize 0.4749    func 4.9802    
Accumulated time: func 69.2972    prepare 19.8280    bound 33.6284    transfer 6.9336    finalize 8.8486    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 87710
Time: pickout 0.7436    decision 4.3715    set_bounds 3.7410    solve 5.0026    add 0.1271    
Accumulated time: pickout 7.9300    decision 47.4061    set_bounds 37.4600    solve 71.2446    add 2.5498    
Current (lb-rhs): -0.06280447542667389
518702 domains visited
Cumulative time: 169.4801824092865

BaB round 29
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1659] [/input-8, 1659] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 439] [/input-8, 439] [/input-8, 439] [/input-8, 439] 
pruning_in_iteration open status: True
ratio of positive domain = 32631 / 65536 = 0.4979095458984375
pruning-in-iteration extra time: 0.005973339080810547
Time: prepare 1.5635    bound 2.2308    transfer 0.5684    finalize 1.4591    func 5.8260    
Accumulated time: func 75.1232    prepare 21.3921    bound 35.8591    transfer 7.5020    finalize 10.3077    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 87847
Time: pickout 0.7297    decision 4.0685    set_bounds 2.8313    solve 5.8438    add 0.1151    
Accumulated time: pickout 8.6597    decision 51.4745    set_bounds 40.2913    solve 77.0884    add 2.6649    
Current (lb-rhs): -0.06280447542667389
551607 domains visited
Cumulative time: 183.34492373466492

BaB round 30
batch: 32768
splitting decisions: 
split level 0: [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] 
pruning_in_iteration open status: True
ratio of positive domain = 38051 / 65536 = 0.5806121826171875
pruning-in-iteration extra time: 0.0061032772064208984
Time: prepare 1.4736    bound 2.0321    transfer 0.5664    finalize 0.5073    func 4.5867    
Accumulated time: func 79.7099    prepare 22.8662    bound 37.8913    transfer 8.0684    finalize 10.8150    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 82564
Time: pickout 0.7430    decision 4.1269    set_bounds 2.8964    solve 5.6540    add 0.2961    
Accumulated time: pickout 9.4027    decision 55.6014    set_bounds 43.1877    solve 82.7425    add 2.9609    
Current (lb-rhs): -0.06280447542667389
579092 domains visited
Cumulative time: 197.3307864665985

BaB round 31
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1660] [/input-8, 1660] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1713] [/input-8, 1660] 
pruning_in_iteration open status: True
ratio of positive domain = 36369 / 65536 = 0.5549468994140625
pruning-in-iteration extra time: 0.006373167037963867
Time: prepare 1.5562    bound 2.0930    transfer 0.5713    finalize 0.5450    func 4.7799    
Accumulated time: func 84.4899    prepare 24.4229    bound 39.9843    transfer 8.6397    finalize 11.3600    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06280 (25), -0.06276 (27), -0.06273 (27), -0.06168 (27), -0.06165 (27), -0.06165 (27), -0.06165 (27), -0.06058 (27), -0.06056 (27), -0.06040 (25), -0.06009 (26), -0.05984 (27), -0.05980 (27), -0.05960 (27), -0.05959 (27), -0.05904 (27), -0.05903 (27), -0.05901 (27), -0.05897 (27), -0.05884 (26), 
Length of domains: 78963
Time: pickout 0.7508    decision 3.4065    set_bounds 3.9219    solve 4.8171    add 0.1727    
Accumulated time: pickout 10.1534    decision 59.0080    set_bounds 47.1096    solve 87.5595    add 3.1336    
Current (lb-rhs): -0.06280447542667389
608259 domains visited
Time out!!!!!!!!
Result: unknown in 213.1841 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
         -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1165]; unstable size 1165; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 251, 1, 1165] with unstable size 250 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 1165] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1165] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [250]; unstable size 250; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 250] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.62490296,  8.33701801,  2.59462070, -0.24409163,  2.26730275,
          1.36074853,  2.49958348,  5.18873644,  7.07310295]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
         -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.69it/s]100%|██████████| 1/1 [00:00<00:00,  8.69it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.16553497, -25.42795944, -15.59901142, -19.06851196, -15.92789268,
          -18.74447441, -17.97859573, -19.16351700, -22.21500587, -24.07776833]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.32888126]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1182 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.29866409301758
alpha/beta optimization time: 1.148796796798706
initial alpha-crown bounds: tensor([[ 3.68976188,  8.44124222,  2.63029695, -0.18903458,  2.30742669,
          1.40437770,  2.56474018,  5.28525257,  7.16459942]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.1890345811843872
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.65095710754395
Verifying property 0 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6897618770599365.

Properties batch 1, size 1
Remaining timeout: 198.49065279960632
Verifying property 1 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.441242218017578.

Properties batch 2, size 1
Remaining timeout: 198.39229655265808
Verifying property 2 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6302969455718994.

Properties batch 3, size 1
Remaining timeout: 198.2938265800476
Verifying property 3 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18903458]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.84048271, -25.05973816, -15.11311626, -18.68352318, -15.81582832,
        -18.42252541, -17.63798523, -19.13154984, -21.87983513, -23.72045708],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18903458]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1165
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 246
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 1435
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 56] 
split level 7: [/input-12, 83] 
pruning_in_iteration open status: True
ratio of positive domain = 255 / 256 = 0.99609375
pruning-in-iteration extra time: 0.00456547737121582
Time: prepare 0.0018    bound 0.1214    transfer 0.0014    finalize 0.0016    func 0.1262    
Accumulated time: func 0.1262    prepare 0.0022    bound 0.1214    transfer 0.0014    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00166 (8), 
Length of domains: 1
Time: pickout 0.0004    decision 0.0229    set_bounds 0.0160    solve 0.1263    add 0.0006    
Accumulated time: pickout 0.0004    decision 0.0229    set_bounds 0.0160    solve 0.1263    add 0.0006    
Current (lb-rhs): -0.001661539077758789
1 domains visited
Cumulative time: 0.17516875267028809

BaB round 2
batch: 1
splitting decisions: 
split level 0: [/input-12, 55] 
split level 1: [/input-12, 86] 
split level 2: [/input-8, 2010] 
split level 3: [/input-8, 1363] 
split level 4: [/input-8, 173] 
split level 5: [/input-8, 1186] 
split level 6: [/input-8, 2026] 
split level 7: [/input-8, 2002] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.506111145019531e-05
Time: prepare 0.0050    bound 0.0038    transfer 0.0011    finalize 0.0017    func 0.0115    
Accumulated time: func 0.1377    prepare 0.0076    bound 0.1251    transfer 0.0024    finalize 0.0033    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0221    set_bounds 0.0181    solve 0.0116    add 0.0001    
Accumulated time: pickout 0.0010    decision 0.0450    set_bounds 0.0341    solve 0.1379    add 0.0006    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1 domains visited
Cumulative time: 0.22837543487548828


Properties batch 4, size 1
Remaining timeout: 197.94323444366455
Verifying property 4 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.307426691055298.

Properties batch 5, size 1
Remaining timeout: 197.8355574607849
Verifying property 5 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4043776988983154.

Properties batch 6, size 1
Remaining timeout: 197.734797000885
Verifying property 6 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5647401809692383.

Properties batch 7, size 1
Remaining timeout: 197.63868808746338
Verifying property 7 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.285252571105957.

Properties batch 8, size 1
Remaining timeout: 197.5436933040619
Verifying property 8 with 1 instances.
##### Instance 67 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.164599418640137.
Result: safe in 2.5685 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.55639648, -33.09785080, -28.00553131, -27.40239906, -25.07222748,
         -27.10820198, -28.42906952, -22.25778961, -33.87366104, -32.03707886]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 701] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 701] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 288] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.60428333, 8.63137341, 4.23884296, 3.83983803, 1.92058897, 3.60424948,
         4.34731722, 9.57411575, 7.57268620]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0577 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.15664101, -31.39657593, -29.82341003, -30.75438118, -29.41454315,
         -31.94305992, -31.96259689, -30.53670311, -26.03734589, -29.66164589]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 659] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 659] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 197] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.00890595, 3.93032002, 2.37446547, 3.40709305, 1.97647119, 4.41568375,
         4.39016819, 2.74542379, 2.46872377]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0499 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.57001877, -21.33278465, -16.48242188, -17.88305855, -15.84688187,
         -18.45724487, -14.43099213, -19.91347122, -21.41075134, -23.09995651]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [825]; unstable size 825; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 238, 1, 825] with unstable size 237 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 825] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 825] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [237]; unstable size 237; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 237] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 237] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.65802526, 4.90856361, 1.05104470, 2.50940728, 0.27425575, 2.85676765,
         3.60879064, 4.98581028, 6.49914980]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0671 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.83767509, -29.44007301, -28.61532784, -29.34156609, -28.70956039,
         -30.31670189, -29.03779984, -30.47285080, -29.20039749, -29.62815285]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [642]; unstable size 642; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 642] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 642] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 206] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.54947042, 1.96131420, 2.40498400, 1.83005643, 3.13335943, 2.10148072,
         3.19824481, 2.43338370, 2.73391485]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0607 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.50596523, -18.77488327, -14.69626808, -14.34110641, -15.01922321,
         -14.73676872, -15.22504807, -16.18593597, -16.79512215, -17.35581017]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 654] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 654] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 215] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.30025947,  2.79075503, -0.64696032, -0.28283542, -0.00568273,
          0.09187198,  0.48905289,  0.94048774,  1.32147789]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.50596523, -18.77488327, -14.69626808, -14.34110641, -15.01922321,
         -14.73676872, -15.22504807, -16.18593597, -16.79512215, -17.35581017]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.12603951, -18.56119728, -14.27858067, -14.36826992, -14.76897240,
          -14.82524204, -15.17333031, -16.04947662, -16.52157974, -17.18725586],
         [-15.12603951, -18.56119728, -14.27858067, -14.36826992, -14.76897240,
          -14.82524204, -15.17333031, -16.04947662, -16.52157974, -17.18725586]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.75776958, -0.08968925,  0.40070248,  0.45697212]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0084 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0776 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.66821480, -25.16157913, -20.16737556, -19.99334526, -19.84637260,
         -20.53302574, -17.62543488, -22.75561523, -24.62155914, -24.01429939]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [562]; unstable size 562; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 562] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 562] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 562] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 328] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.44212151, 5.09512997, 1.39435554, 1.28885651, 0.93852174, 1.63264394,
         3.03026295, 4.88076544, 3.91813207]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0720 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.91881180, -32.59530640, -30.29003906, -30.00774956, -29.24390221,
         -30.22264290, -30.82009125, -25.47676849, -32.91277695, -30.89614296]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [668]; unstable size 668; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 668] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 668] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 668] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 226] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.83449864, 5.22893476, 3.33997345, 3.20848727, 2.84958315, 3.43617368,
         3.74271965, 5.64434576, 3.49464059]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0674 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-31.62759590, -34.41730499, -33.84094238, -35.56791306, -34.24832153,
         -36.28593826, -34.87154770, -35.38038635, -33.02691269, -33.01538467]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [642]; unstable size 642; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 642] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 642] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 642] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 208] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.30125904, 1.11236954, 2.63641572, 1.30713117, 3.22894764, 1.90847707,
         2.05579495, 0.40490288, 0.05632401]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0632 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
         -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 579] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 579] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 231] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.71136570,  4.01701736, -0.51415777,  0.11190540,  0.39652181,
          0.75778353,  1.25336599,  4.93491936,  2.87650204]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
         -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.75it/s]100%|██████████| 1/1 [00:00<00:00,  8.74it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.91181374, -21.90702248, -16.25378609, -16.59039497, -17.33898735,
          -16.20785713, -17.74153519, -18.40582466, -22.94567871, -20.61976624]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04592896]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1171 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.178878784179688
alpha/beta optimization time: 1.1453380584716797
initial alpha-crown bounds: tensor([[ 2.79542208,  4.10366678, -0.45930910,  0.13562942,  0.45598102,
          0.80009300,  1.31134117,  5.06682396,  2.96922946]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.45930910110473633
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67228960990906
Verifying property 0 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.795422077178955.

Properties batch 1, size 1
Remaining timeout: 198.52352690696716
Verifying property 1 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.10366678237915.

Properties batch 2, size 1
Remaining timeout: 198.413654088974
Verifying property 2 with 1 instances.
##### Instance 76 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.45930910]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.32204628, -22.13885498, -16.85369110, -16.62333870, -17.79144096,
        -16.11716270, -17.99398041, -18.48896027, -23.38971329, -20.77302933],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.45930910]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 579
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 226
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 825
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 72] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 17] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 64] 
split level 7: [/input-8, 1699] 
pruning_in_iteration open status: True
ratio of positive domain = 220 / 256 = 0.859375
pruning-in-iteration extra time: 0.004805803298950195
Time: prepare 0.0031    bound 0.1405    transfer 0.0014    finalize 0.0020    func 0.1470    
Accumulated time: func 0.1470    prepare 0.0035    bound 0.1405    transfer 0.0014    finalize 0.0020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21443 (8), -0.20865 (8), -0.20371 (8), -0.19512 (8), -0.19130 (8), -0.18626 (8), -0.18330 (8), -0.17551 (8), -0.11485 (8), -0.11318 (8), -0.11069 (8), -0.10540 (8), -0.09939 (8), -0.08789 (8), -0.08567 (8), -0.08226 (8), -0.07759 (8), -0.07721 (8), -0.07306 (8), -0.06935 (8), 
Length of domains: 36
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0176    solve 0.1470    add 0.0014    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0176    solve 0.1470    add 0.0014    
Current (lb-rhs): -0.21442627906799316
36 domains visited
Cumulative time: 0.1933891773223877

BaB round 2
batch: 36
splitting decisions: 
split level 0: [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] [/input-12, 59] 
split level 1: [/input-8, 1949] [/input-8, 435] [/input-8, 1949] [/input-8, 410] [/input-8, 1949] [/input-8, 410] [/input-8, 1316] [/input-8, 410] [/input-8, 410] [/input-12, 71] 
split level 2: [/input-8, 435] [/input-8, 1686] [/input-8, 435] [/input-8, 435] [/input-8, 410] [/input-8, 435] [/input-8, 923] [/input-8, 1316] [/input-8, 435] [/input-8, 1316] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 288 = 0.6041666666666667
pruning-in-iteration extra time: 0.004619598388671875
Time: prepare 0.0070    bound 0.1273    transfer 0.0025    finalize 0.0019    func 0.1387    
Accumulated time: func 0.2857    prepare 0.0106    bound 0.2678    transfer 0.0039    finalize 0.0039    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19833 (11), -0.19572 (11), -0.19246 (11), -0.18933 (11), -0.18747 (11), -0.18479 (11), -0.17996 (11), -0.17762 (11), -0.17735 (11), -0.17503 (11), -0.17419 (11), -0.17378 (11), -0.17275 (11), -0.17069 (11), -0.17024 (11), -0.17017 (11), -0.16964 (11), -0.16923 (11), -0.16746 (11), -0.16696 (11), 
Length of domains: 114
Time: pickout 0.0013    decision 0.0188    set_bounds 0.0122    solve 0.1388    add 0.0017    
Accumulated time: pickout 0.0018    decision 0.0412    set_bounds 0.0297    solve 0.2859    add 0.0031    
Current (lb-rhs): -0.19833111763000488
150 domains visited
Cumulative time: 0.36695194244384766

BaB round 3
batch: 114
splitting decisions: 
split level 0: [/input-12, 71] [/input-8, 1949] [/input-12, 71] [/input-8, 1949] [/input-12, 71] [/input-8, 1949] [/input-8, 1949] [/input-12, 71] [/input-12, 71] [/input-12, 71] 
pruning_in_iteration open status: True
ratio of positive domain = 72 / 228 = 0.3157894736842105
pruning-in-iteration extra time: 0.004163503646850586
Time: prepare 0.0046    bound 0.1477    transfer 0.0008    finalize 0.0013    func 0.1545    
Accumulated time: func 0.4402    prepare 0.0154    bound 0.4155    transfer 0.0047    finalize 0.0052    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19447 (12), -0.19178 (12), -0.18852 (12), -0.18529 (12), -0.18365 (12), -0.18087 (12), -0.17549 (12), -0.17356 (12), -0.17280 (12), -0.17082 (12), -0.16930 (12), -0.16885 (12), -0.16800 (12), -0.16615 (12), -0.16612 (12), -0.16559 (12), -0.16491 (12), -0.16442 (12), -0.16320 (12), -0.16217 (12), 
Length of domains: 156
Time: pickout 0.0021    decision 0.0187    set_bounds 0.0051    solve 0.1545    add 0.0019    
Accumulated time: pickout 0.0038    decision 0.0599    set_bounds 0.0348    solve 0.4404    add 0.0050    
Current (lb-rhs): -0.19447112083435059
306 domains visited
Cumulative time: 0.5497031211853027

BaB round 4
batch: 156
splitting decisions: 
split level 0: [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 410] [/input-8, 410] [/input-12, 71] [/input-8, 1686] [/input-12, 71] [/input-8, 237] [/input-12, 71] 
pruning_in_iteration open status: True
ratio of positive domain = 72 / 312 = 0.23076923076923073
pruning-in-iteration extra time: 0.004202842712402344
Time: prepare 0.0061    bound 0.1793    transfer 0.0012    finalize 0.0024    func 0.1890    
Accumulated time: func 0.6292    prepare 0.0217    bound 0.5949    transfer 0.0059    finalize 0.0076    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19091 (13), -0.18819 (13), -0.18541 (13), -0.18221 (13), -0.18008 (13), -0.17725 (13), -0.17142 (13), -0.16890 (13), -0.16871 (13), -0.16598 (13), -0.16529 (13), -0.16521 (13), -0.16461 (13), -0.16404 (13), -0.16326 (13), -0.16318 (13), -0.16192 (13), -0.16092 (13), -0.16054 (13), -0.16043 (13), 
Length of domains: 240
Time: pickout 0.0026    decision 0.0230    set_bounds 0.0068    solve 0.1892    add 0.0018    
Accumulated time: pickout 0.0064    decision 0.0830    set_bounds 0.0416    solve 0.6295    add 0.0067    
Current (lb-rhs): -0.19091081619262695
546 domains visited
Cumulative time: 0.7737345695495605

BaB round 5
batch: 240
splitting decisions: 
split level 0: [/input-8, 1107] [/input-12, 71] [/input-12, 71] [/input-8, 227] [/input-8, 209] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-12, 71] [/input-8, 438] 
pruning_in_iteration open status: False
ratio of positive domain = 82 / 480 = 0.17083333333333328
pruning-in-iteration extra time: 7.176399230957031e-05
Time: prepare 0.0092    bound 0.1043    transfer 0.0031    finalize 0.0028    func 0.1195    
Accumulated time: func 0.7487    prepare 0.0310    bound 0.6992    transfer 0.0090    finalize 0.0104    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18503 (14), -0.18458 (14), -0.18228 (14), -0.18183 (14), -0.17862 (14), -0.17803 (14), -0.17519 (14), -0.17459 (14), -0.17425 (14), -0.17364 (14), -0.17141 (14), -0.17079 (14), -0.16596 (14), -0.16537 (14), -0.16492 (14), -0.16377 (14), -0.16261 (14), -0.16231 (14), -0.16217 (14), -0.16101 (14), 
Length of domains: 397
Time: pickout 0.0038    decision 0.0273    set_bounds 0.0105    solve 0.1196    add 0.0023    
Accumulated time: pickout 0.0102    decision 0.1103    set_bounds 0.0521    solve 0.7492    add 0.0091    
Current (lb-rhs): -0.1850266456604004
943 domains visited
Cumulative time: 0.9379415512084961

BaB round 6
batch: 397
splitting decisions: 
split level 0: [/input-8, 733] [/input-8, 438] [/input-8, 366] [/input-8, 227] [/input-8, 1949] [/input-8, 438] [/input-8, 438] [/input-8, 1316] [/input-8, 1316] [/input-8, 733] 
pruning_in_iteration open status: False
ratio of positive domain = 150 / 794 = 0.18891687657430734
pruning-in-iteration extra time: 7.343292236328125e-05
Time: prepare 0.0152    bound 0.1049    transfer 0.0021    finalize 0.0046    func 0.1270    
Accumulated time: func 0.8756    prepare 0.0464    bound 0.8041    transfer 0.0111    finalize 0.0150    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18050 (15), -0.18006 (15), -0.17873 (15), -0.17829 (15), -0.17774 (15), -0.17729 (15), -0.17620 (15), -0.17576 (15), -0.17302 (15), -0.17246 (15), -0.17212 (15), -0.17155 (15), -0.16983 (15), -0.16961 (15), -0.16922 (15), -0.16903 (15), -0.16863 (15), -0.16806 (15), -0.16692 (15), -0.16678 (15), 
Length of domains: 640
Time: pickout 0.0052    decision 0.0299    set_bounds 0.0171    solve 0.1271    add 0.0029    
Accumulated time: pickout 0.0154    decision 0.1401    set_bounds 0.0692    solve 0.8763    add 0.0120    
Current (lb-rhs): -0.1804966926574707
1583 domains visited
Cumulative time: 1.1212656497955322

BaB round 7
batch: 640
splitting decisions: 
split level 0: [/input-8, 929] [/input-8, 929] [/input-8, 1686] [/input-8, 218] [/input-8, 237] [/input-8, 929] [/input-8, 366] [/input-8, 366] [/input-8, 227] [/input-8, 437] 
pruning_in_iteration open status: False
ratio of positive domain = 183 / 1280 = 0.14296874999999998
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0241    bound 0.1135    transfer 0.0075    finalize 0.0082    func 0.1535    
Accumulated time: func 1.0291    prepare 0.0707    bound 0.9176    transfer 0.0187    finalize 0.0232    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17753 (16), -0.17710 (16), -0.17577 (16), -0.17533 (16), -0.17474 (16), -0.17430 (16), -0.17322 (16), -0.17279 (16), -0.17230 (16), -0.17184 (16), -0.17054 (16), -0.17009 (16), -0.16950 (16), -0.16921 (16), -0.16905 (16), -0.16865 (16), -0.16826 (16), -0.16798 (16), -0.16770 (16), -0.16753 (16), 
Length of domains: 1089
Time: pickout 0.0080    decision 0.0509    set_bounds 0.0268    solve 0.1538    add 0.0069    
Accumulated time: pickout 0.0234    decision 0.1910    set_bounds 0.0960    solve 1.0301    add 0.0189    
Current (lb-rhs): -0.17753148078918457
2672 domains visited
Cumulative time: 1.369917869567871

BaB round 8
batch: 1089
splitting decisions: 
split level 0: [/input-8, 437] [/input-8, 437] [/input-8, 1316] [/input-8, 209] [/input-8, 1579] [/input-8, 1686] [/input-8, 437] [/input-8, 227] [/input-8, 209] [/input-8, 237] 
pruning_in_iteration open status: False
ratio of positive domain = 262 / 2178 = 0.1202938475665748
pruning-in-iteration extra time: 5.5789947509765625e-05
Time: prepare 0.0428    bound 0.1336    transfer 0.0094    finalize 0.0115    func 0.1976    
Accumulated time: func 1.2267    prepare 0.1138    bound 1.0512    transfer 0.0281    finalize 0.0347    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17602 (17), -0.17559 (17), -0.17431 (17), -0.17387 (17), -0.17326 (17), -0.17283 (17), -0.17176 (17), -0.17133 (17), -0.17060 (17), -0.17015 (17), -0.16888 (17), -0.16844 (17), -0.16783 (17), -0.16739 (17), -0.16653 (17), -0.16634 (17), -0.16599 (17), -0.16590 (17), -0.16557 (17), -0.16541 (17), 
Length of domains: 1907
Time: pickout 0.0154    decision 0.0749    set_bounds 0.0459    solve 0.1980    add 0.0124    
Accumulated time: pickout 0.0388    decision 0.2660    set_bounds 0.1419    solve 1.2281    add 0.0312    
Current (lb-rhs): -0.17601680755615234
4579 domains visited
Cumulative time: 1.7203049659729004

BaB round 9
batch: 1907
splitting decisions: 
split level 0: [/input-8, 218] [/input-8, 437] [/input-8, 415] [/input-8, 415] [/input-8, 1938] [/input-8, 733] [/input-8, 218] [/input-8, 415] [/input-8, 415] [/input-8, 1938] 
pruning_in_iteration open status: False
ratio of positive domain = 492 / 3814 = 0.12899842684845308
pruning-in-iteration extra time: 5.841255187988281e-05
Time: prepare 0.0739    bound 0.2001    transfer 0.0192    finalize 0.0195    func 0.3131    
Accumulated time: func 1.5398    prepare 0.1880    bound 1.2514    transfer 0.0473    finalize 0.0543    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17356 (18), -0.17314 (18), -0.17185 (18), -0.17142 (18), -0.17081 (18), -0.17038 (18), -0.16965 (18), -0.16930 (18), -0.16923 (18), -0.16887 (18), -0.16804 (18), -0.16795 (18), -0.16764 (18), -0.16752 (18), -0.16689 (18), -0.16647 (18), -0.16634 (18), -0.16590 (18), -0.16539 (18), -0.16528 (18), 
Length of domains: 3309
Time: pickout 0.0300    decision 0.2506    set_bounds 0.0813    solve 0.3142    add 0.0126    
Accumulated time: pickout 0.0688    decision 0.5166    set_bounds 0.2232    solve 1.5423    add 0.0438    
Current (lb-rhs): -0.17356228828430176
7888 domains visited
Cumulative time: 2.415329694747925

BaB round 10
batch: 3309
splitting decisions: 
split level 0: [/input-8, 237] [/input-8, 227] [/input-8, 218] [/input-8, 218] [/input-8, 733] [/input-8, 1316] [/input-8, 209] [/input-8, 232] [/input-8, 232] [/input-8, 237] 
pruning_in_iteration open status: False
ratio of positive domain = 647 / 6618 = 0.0977636748262315
pruning-in-iteration extra time: 6.079673767089844e-05
Time: prepare 0.1334    bound 0.3071    transfer 0.0399    finalize 0.0357    func 0.5170    
Accumulated time: func 2.0568    prepare 0.3217    bound 1.5585    transfer 0.0872    finalize 0.0900    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16822 (19), -0.16796 (19), -0.16779 (19), -0.16754 (19), -0.16657 (19), -0.16625 (19), -0.16613 (19), -0.16583 (19), -0.16546 (19), -0.16520 (19), -0.16503 (19), -0.16478 (19), -0.16453 (19), -0.16428 (19), -0.16413 (19), -0.16403 (19), -0.16401 (19), -0.16385 (19), -0.16369 (19), -0.16361 (19), 
Length of domains: 5951
Time: pickout 0.0424    decision 0.1966    set_bounds 0.2901    solve 0.5184    add 0.0218    
Accumulated time: pickout 0.1111    decision 0.7132    set_bounds 0.5133    solve 2.0607    add 0.0656    
Current (lb-rhs): -0.16821694374084473
13839 domains visited
Cumulative time: 3.4936158657073975

BaB round 11
batch: 4096
splitting decisions: 
split level 0: [/input-8, 217] [/input-8, 412] [/input-8, 733] [/input-8, 209] [/input-8, 217] [/input-8, 218] [/input-8, 240] [/input-8, 237] [/input-8, 209] [/input-8, 209] 
pruning_in_iteration open status: False
ratio of positive domain = 949 / 8192 = 0.1158447265625
pruning-in-iteration extra time: 5.745887756347656e-05
Time: prepare 0.1725    bound 0.3617    transfer 0.0469    finalize 0.0523    func 0.6342    
Accumulated time: func 2.6910    prepare 0.4945    bound 1.9202    transfer 0.1341    finalize 0.1423    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16822 (19), -0.16728 (20), -0.16712 (20), -0.16686 (20), -0.16657 (19), -0.16613 (19), -0.16562 (20), -0.16546 (19), -0.16520 (20), -0.16453 (20), -0.16437 (20), -0.16428 (19), -0.16411 (20), -0.16401 (19), -0.16385 (19), -0.16357 (19), -0.16332 (20), -0.16304 (20), -0.16290 (20), -0.16264 (19), 
Length of domains: 8968
Time: pickout 0.0543    decision 0.2317    set_bounds 0.3217    solve 0.6359    add 0.0301    
Accumulated time: pickout 0.1654    decision 0.9449    set_bounds 0.8350    solve 2.6965    add 0.0956    
Current (lb-rhs): -0.16821694374084473
20952 domains visited
current_vram/total_varm: 11.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.785852670669556

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input-8, 209] [/input-8, 217] [/input-8, 237] [/input-8, 240] [/input-8, 237] [/input-8, 209] [/input-8, 217] [/input-8, 237] [/input-8, 929] [/input-8, 237] 
pruning_in_iteration open status: False
ratio of positive domain = 1684 / 16384 = 0.102783203125
pruning-in-iteration extra time: 0.0001010894775390625
Time: prepare 0.3630    bound 0.6779    transfer 0.0912    finalize 0.1026    func 1.2361    
Accumulated time: func 3.9271    prepare 0.8578    bound 2.5981    transfer 0.2252    finalize 0.2448    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16755 (20), -0.16594 (20), -0.16551 (20), -0.16480 (20), -0.16440 (21), -0.16428 (19), -0.16421 (21), -0.16398 (21), -0.16385 (19), -0.16337 (20), -0.16294 (20), -0.16273 (21), -0.16264 (19), -0.16231 (21), -0.16220 (19), -0.16164 (21), -0.16153 (19), -0.16146 (21), -0.16122 (21), -0.16110 (19), 
Length of domains: 15392
Time: pickout 0.1127    decision 0.6174    set_bounds 0.5276    solve 1.4492    add 0.0709    
Accumulated time: pickout 0.2781    decision 1.5623    set_bounds 1.3626    solve 4.1457    add 0.1665    
Current (lb-rhs): -0.16755080223083496
35568 domains visited
current_vram/total_varm: 18.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 7.587819814682007

BaB round 13
batch: 15392
splitting decisions: 
split level 0: [/input-8, 1579] [/input-8, 209] [/input-8, 217] [/input-8, 237] [/input-8, 209] [/input-8, 217] [/input-8, 218] [/input-8, 216] [/input-8, 240] [/input-8, 1579] 
pruning_in_iteration open status: False
ratio of positive domain = 3413 / 30784 = 0.11086928274428276
pruning-in-iteration extra time: 0.00023746490478515625
Time: prepare 0.6459    bound 1.2335    transfer 0.1868    finalize 0.4451    func 2.5145    
Accumulated time: func 6.4416    prepare 1.5041    bound 3.8316    transfer 0.4120    finalize 0.6899    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16464 (21), -0.16359 (20), -0.16317 (20), -0.16304 (21), -0.16261 (21), -0.16200 (20), -0.16189 (21), -0.16157 (20), -0.16156 (22), -0.16138 (22), -0.16114 (22), -0.16088 (20), -0.16081 (21), -0.16047 (21), -0.16044 (20), -0.16004 (21), -0.15990 (22), -0.15947 (22), -0.15946 (20), -0.15920 (21), 
Length of domains: 27233
Time: pickout 0.2115    decision 1.0957    set_bounds 0.9046    solve 2.5201    add 0.1053    
Accumulated time: pickout 0.4896    decision 2.6580    set_bounds 2.2672    solve 6.6659    add 0.2719    
Current (lb-rhs): -0.1646432876586914
62801 domains visited
Cumulative time: 12.470791816711426

BaB round 14
batch: 16384
splitting decisions: 
split level 0: [/input-8, 437] [/input-8, 438] [/input-8, 437] [/input-8, 437] [/input-8, 437] [/input-8, 438] [/input-8, 434] [/input-8, 434] [/input-8, 437] [/input-8, 217] 
pruning_in_iteration open status: False
ratio of positive domain = 3368 / 32768 = 0.102783203125
pruning-in-iteration extra time: 0.00021886825561523438
Time: prepare 0.7190    bound 1.3050    transfer 0.2074    finalize 0.5460    func 2.7799    
Accumulated time: func 9.2215    prepare 2.2235    bound 5.1366    transfer 0.6194    finalize 1.2359    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16181 (22), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16021 (22), -0.15993 (23), -0.15978 (22), -0.15973 (23), -0.15950 (23), -0.15946 (20), -0.15928 (22), -0.15920 (21), -0.15906 (22), -0.15903 (20), -0.15885 (22), -0.15878 (21), 
Length of domains: 40163
Time: pickout 0.2377    decision 1.7080    set_bounds 1.0092    solve 2.7852    add 0.1563    
Accumulated time: pickout 0.7273    decision 4.3661    set_bounds 3.2764    solve 9.4510    add 0.4282    
Current (lb-rhs): -0.16358661651611328
92115 domains visited
current_vram/total_varm: 35.0GB/99.9GB, batch_size increase to 32768
Cumulative time: 18.420268535614014

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 438] [/input-8, 434] [/input-8, 437] [/input-8, 216] [/input-8, 434] [/input-8, 213] [/input-8, 437] [/input-8, 438] [/input-8, 1579] [/input-8, 227] 
pruning_in_iteration open status: False
ratio of positive domain = 9420 / 65536 = 0.14373779296875
pruning-in-iteration extra time: 0.0004477500915527344
Time: prepare 1.3852    bound 7.7547    transfer 0.5666    finalize 0.9309    func 10.6423    
Accumulated time: func 19.8638    prepare 3.6091    bound 12.8913    transfer 1.1860    finalize 2.1668    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 63334
Time: pickout 0.4873    decision 3.3733    set_bounds 2.1912    solve 10.6543    add 0.1770    
Accumulated time: pickout 1.2146    decision 7.7393    set_bounds 5.4676    solve 20.1054    add 0.6053    
Current (lb-rhs): -0.16358661651611328
148054 domains visited
Cumulative time: 35.42447280883789

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1686] [/input, 2759] [/input-8, 213] [/input-8, 733] [/input-8, 213] [/input-8, 578] [/input-8, 437] [/input-8, 366] [/input-8, 224] [/input-8, 434] 
pruning_in_iteration open status: False
ratio of positive domain = 8065 / 65536 = 0.1230621337890625
pruning-in-iteration extra time: 0.0004062652587890625
Time: prepare 1.5212    bound 7.7585    transfer 0.5725    finalize 0.5055    func 10.3644    
Accumulated time: func 30.2282    prepare 5.1307    bound 20.6498    transfer 1.7585    finalize 2.6723    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 87859
Time: pickout 0.4847    decision 3.4528    set_bounds 2.5244    solve 10.3760    add 0.2645    
Accumulated time: pickout 1.6994    decision 11.1921    set_bounds 7.9920    solve 30.4814    add 0.8698    
Current (lb-rhs): -0.16358661651611328
205347 domains visited
Cumulative time: 52.65829515457153

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input, 2759] [/input-8, 366] [/input-8, 213] [/input-8, 1686] [/input, 2759] [/input-8, 366] [/input-8, 213] [/input-8, 578] [/input, 2759] [/input-8, 366] 
pruning_in_iteration open status: False
ratio of positive domain = 7958 / 65536 = 0.121429443359375
pruning-in-iteration extra time: 0.00037932395935058594
Time: prepare 1.4774    bound 7.7584    transfer 0.5711    finalize 0.5206    func 10.3331    
Accumulated time: func 40.5613    prepare 6.6087    bound 28.4082    transfer 2.3296    finalize 3.1930    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 112455
Time: pickout 0.5206    decision 4.0945    set_bounds 2.9180    solve 10.3477    add 0.1879    
Accumulated time: pickout 2.2200    decision 15.2866    set_bounds 10.9101    solve 40.8291    add 1.0577    
Current (lb-rhs): -0.16358661651611328
262711 domains visited
Cumulative time: 70.8758692741394

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 227] [/input-8, 415] [/input-8, 227] [/input, 3544] [/input-8, 227] [/input-8, 254] [/input-8, 217] [/input-8, 412] [/input-8, 227] [/input-8, 217] 
pruning_in_iteration open status: False
ratio of positive domain = 5936 / 65536 = 0.090576171875
pruning-in-iteration extra time: 0.00039649009704589844
Time: prepare 1.6464    bound 7.7558    transfer 0.5739    finalize 0.5186    func 10.4995    
Accumulated time: func 51.0608    prepare 8.2555    bound 36.1640    transfer 2.9035    finalize 3.7116    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 139121
Time: pickout 0.5449    decision 3.8741    set_bounds 2.2782    solve 10.5142    add 0.1991    
Accumulated time: pickout 2.7649    decision 19.1607    set_bounds 13.1883    solve 51.3433    add 1.2568    
Current (lb-rhs): -0.16358661651611328
322145 domains visited
Cumulative time: 88.41700005531311

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 402] [/input-8, 578] [/input-8, 578] [/input-8, 733] [/input-8, 733] [/input-8, 402] [/input-8, 733] [/input-8, 402] [/input-8, 733] [/input-8, 213] 
pruning_in_iteration open status: False
ratio of positive domain = 6203 / 65536 = 0.0946502685546875
pruning-in-iteration extra time: 0.00040411949157714844
Time: prepare 1.5978    bound 7.7577    transfer 0.5742    finalize 0.5160    func 10.4497    
Accumulated time: func 61.5105    prepare 9.8539    bound 43.9217    transfer 3.4777    finalize 4.2276    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 165514
Time: pickout 0.5912    decision 4.5331    set_bounds 2.6084    solve 10.4652    add 0.2028    
Accumulated time: pickout 3.3561    decision 23.6938    set_bounds 15.7966    solve 61.8085    add 1.4596    
Current (lb-rhs): -0.16358661651611328
381306 domains visited
Cumulative time: 106.95311951637268

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 578] [/input, 3233] [/input-8, 402] [/input-8, 434] [/input-8, 402] [/input-8, 578] [/input-8, 412] [/input, 3233] [/input-8, 733] [/input-8, 733] 
pruning_in_iteration open status: False
ratio of positive domain = 7954 / 65536 = 0.121368408203125
pruning-in-iteration extra time: 0.00043654441833496094
Time: prepare 1.6553    bound 7.7571    transfer 0.5768    finalize 0.5153    func 10.5082    
Accumulated time: func 72.0187    prepare 11.5096    bound 51.6789    transfer 4.0545    finalize 4.7429    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 190110
Time: pickout 0.6151    decision 4.7646    set_bounds 2.8457    solve 10.5230    add 0.1978    
Accumulated time: pickout 3.9712    decision 28.4584    set_bounds 18.6423    solve 72.3315    add 1.6574    
Current (lb-rhs): -0.16358661651611328
438670 domains visited
Cumulative time: 126.03801894187927

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 44] [/input-8, 217] [/input, 2865] [/input-8, 733] [/input-8, 415] [/input-8, 402] [/input, 2865] [/input-8, 195] [/input, 2865] [/input-8, 44] 
pruning_in_iteration open status: False
ratio of positive domain = 9073 / 65536 = 0.1384429931640625
pruning-in-iteration extra time: 0.0003981590270996094
Time: prepare 1.6304    bound 7.7540    transfer 0.5739    finalize 0.5196    func 10.4805    
Accumulated time: func 82.4992    prepare 13.1404    bound 59.4329    transfer 4.6284    finalize 5.2626    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 213525
Time: pickout 0.5915    decision 3.4509    set_bounds 3.0415    solve 11.9957    add 0.4271    
Accumulated time: pickout 4.5627    decision 31.9093    set_bounds 21.6838    solve 84.3272    add 2.0844    
Current (lb-rhs): -0.16358661651611328
494853 domains visited
Cumulative time: 145.67603063583374

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 204] [/input-8, 204] [/input-8, 929] [/input, 2865] [/input-8, 204] [/input-8, 929] [/input, 2759] [/input, 2865] [/input-8, 204] [/input-8, 204] 
pruning_in_iteration open status: False
ratio of positive domain = 8106 / 65536 = 0.123687744140625
pruning-in-iteration extra time: 0.00039887428283691406
Time: prepare 1.6562    bound 7.7563    transfer 0.5724    finalize 2.4190    func 12.4065    
Accumulated time: func 94.9057    prepare 14.7972    bound 67.1892    transfer 5.2008    finalize 7.6815    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 237901
Time: pickout 0.6096    decision 3.4458    set_bounds 1.4934    solve 12.4194    add 0.2683    
Accumulated time: pickout 5.1723    decision 35.3551    set_bounds 23.1772    solve 96.7466    add 2.3528    
Current (lb-rhs): -0.16358661651611328
551997 domains visited
Cumulative time: 164.03896522521973

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 923] [/input-8, 923] [/input-8, 195] [/input-8, 929] [/input-8, 217] [/input-8, 232] [/input-8, 929] [/input-8, 929] [/input-8, 923] [/input, 3268] 
pruning_in_iteration open status: False
ratio of positive domain = 8228 / 65536 = 0.12554931640625
pruning-in-iteration extra time: 0.0004038810729980469
Time: prepare 1.7071    bound 7.7589    transfer 0.6105    finalize 0.5413    func 10.6207    
Accumulated time: func 105.5265    prepare 16.5048    bound 74.9481    transfer 5.8113    finalize 8.2228    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 262180
Time: pickout 0.6408    decision 3.4551    set_bounds 3.5662    solve 10.6378    add 0.2018    
Accumulated time: pickout 5.8131    decision 38.8102    set_bounds 26.7434    solve 107.3844    add 2.5546    
Current (lb-rhs): -0.16358661651611328
609044 domains visited
Cumulative time: 182.7008454799652

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 2760] [/input-8, 217] [/input, 3233] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 44] [/input-8, 217] [/input, 2714] [/input-8, 195] 
pruning_in_iteration open status: False
ratio of positive domain = 8685 / 65536 = 0.1325225830078125
pruning-in-iteration extra time: 0.00039696693420410156
Time: prepare 1.7749    bound 7.7580    transfer 0.6524    finalize 0.5581    func 10.7462    
Accumulated time: func 116.2727    prepare 18.2803    bound 82.7061    transfer 6.4637    finalize 8.7810    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16359 (20), -0.16317 (20), -0.16200 (20), -0.16157 (20), -0.16088 (20), -0.16081 (21), -0.16044 (20), -0.16017 (23), -0.15946 (20), -0.15920 (21), -0.15903 (20), -0.15878 (21), -0.15857 (23), -0.15813 (23), -0.15804 (21), -0.15777 (20), -0.15765 (23), -0.15742 (23), -0.15731 (20), -0.15721 (23), 
Length of domains: 286029
Time: pickout 0.6503    decision 3.4683    set_bounds 3.6921    solve 10.7643    add 0.3155    
Accumulated time: pickout 6.4634    decision 42.2785    set_bounds 30.4355    solve 118.1487    add 2.8701    
Current (lb-rhs): -0.16358661651611328
665661 domains visited
Time out!!!!!!!!
Result: unknown in 204.9436 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
         -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [679]; unstable size 679; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 679] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 679] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 679] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 185] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.08787823,  0.95483637,  4.05660486,  3.03147149,  3.64727974,
          3.09590125,  4.17433357,  4.76398897, -0.51713562]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
         -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.82050514, -25.24638176, -28.96630859, -27.76984215, -28.75332069,
          -27.98231506, -28.93467712, -30.10177803, -23.77982712, -23.70362282]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07620430]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1164 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.717323303222656
alpha/beta optimization time: 1.1637473106384277
initial alpha-crown bounds: tensor([[ 2.13841915,  0.97674775,  4.10324144,  3.07848191,  3.70226955,
          3.14509630,  4.22430515,  4.82284546, -0.47408390]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.47408390045166016
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.643483877182
Verifying property 0 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1384191513061523.

Properties batch 1, size 1
Remaining timeout: 198.49001026153564
Verifying property 1 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9767477512359619.

Properties batch 2, size 1
Remaining timeout: 198.39138197898865
Verifying property 2 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.103241443634033.

Properties batch 3, size 1
Remaining timeout: 198.2948694229126
Verifying property 3 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.078481912612915.

Properties batch 4, size 1
Remaining timeout: 198.19803309440613
Verifying property 4 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7022695541381836.

Properties batch 5, size 1
Remaining timeout: 198.10233426094055
Verifying property 5 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1450963020324707.

Properties batch 6, size 1
Remaining timeout: 198.0041196346283
Verifying property 6 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.224305152893066.

Properties batch 7, size 1
Remaining timeout: 197.88687443733215
Verifying property 7 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.822845458984375.

Properties batch 8, size 1
Remaining timeout: 197.79035305976868
Verifying property 8 with 1 instances.
##### Instance 77 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47408390]], device='cuda:0') need to verify.
Model prediction is: tensor([-27.36557198, -25.52762604, -29.49477196, -28.19241905, -29.34058571,
        -28.33413696, -29.46609688, -30.40150452, -24.56089783, -23.80018806],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47408390]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 679
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 180
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 875
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 6] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 24] 
split level 3: [/input-8, 1973] 
split level 4: [/input-12, 38] 
split level 5: [/input-12, 46] 
split level 6: [/input-8, 1971] 
split level 7: [/input-8, 1965] 
pruning_in_iteration open status: True
ratio of positive domain = 200 / 256 = 0.78125
pruning-in-iteration extra time: 0.005219697952270508
Time: prepare 0.0030    bound 0.1842    transfer 0.0019    finalize 0.0019    func 0.1910    
Accumulated time: func 0.1910    prepare 0.0035    bound 0.1842    transfer 0.0019    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15303 (8), -0.15009 (8), -0.14356 (8), -0.14149 (8), -0.14038 (8), -0.13680 (8), -0.13455 (8), -0.12993 (8), -0.09630 (8), -0.09550 (8), -0.09370 (8), -0.09312 (8), -0.09108 (8), -0.09047 (8), -0.08662 (8), -0.08610 (8), -0.08523 (8), -0.08479 (8), -0.08297 (8), -0.08203 (8), 
Length of domains: 56
Time: pickout 0.0004    decision 0.0226    set_bounds 0.0177    solve 0.1911    add 0.0017    
Accumulated time: pickout 0.0004    decision 0.0226    set_bounds 0.0177    solve 0.1911    add 0.0017    
Current (lb-rhs): -0.15303421020507812
56 domains visited
Cumulative time: 0.24309849739074707

BaB round 2
batch: 56
splitting decisions: 
split level 0: [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] [/input-12, 92] 
split level 1: [/input-12, 2] [/input-12, 2] [/input-8, 1706] [/input-12, 2] [/input-8, 1706] [/input-8, 1706] [/input-12, 2] [/input-12, 2] [/input-12, 2] [/input-8, 1950] 
pruning_in_iteration open status: True
ratio of positive domain = 136 / 224 = 0.6071428571428572
pruning-in-iteration extra time: 0.004669666290283203
Time: prepare 0.0045    bound 0.1668    transfer 0.0015    finalize 0.0014    func 0.1742    
Accumulated time: func 0.3652    prepare 0.0081    bound 0.3510    transfer 0.0034    finalize 0.0032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12842 (10), -0.12484 (10), -0.11931 (10), -0.11884 (10), -0.11714 (10), -0.11707 (10), -0.11502 (10), -0.11214 (10), -0.11108 (10), -0.10998 (10), -0.10851 (10), -0.10825 (10), -0.10510 (10), -0.10436 (10), -0.10197 (10), -0.09828 (10), -0.07297 (10), -0.07244 (10), -0.07042 (10), -0.07008 (10), 
Length of domains: 88
Time: pickout 0.0018    decision 0.0197    set_bounds 0.0071    solve 0.1743    add 0.0014    
Accumulated time: pickout 0.0022    decision 0.0423    set_bounds 0.0248    solve 0.3653    add 0.0031    
Current (lb-rhs): -0.1284189224243164
144 domains visited
Cumulative time: 0.44800615310668945

BaB round 3
batch: 88
splitting decisions: 
split level 0: [/input-12, 56] [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1706] [/input-12, 56] [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1706] 
split level 1: [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1655] [/input-8, 1950] [/input-8, 1706] [/input-8, 1950] [/input-12, 2] [/input-8, 1655] [/input-8, 1655] 
pruning_in_iteration open status: True
ratio of positive domain = 121 / 352 = 0.34375
pruning-in-iteration extra time: 0.004628896713256836
Time: prepare 0.0068    bound 0.1636    transfer 0.0020    finalize 0.0024    func 0.1753    
Accumulated time: func 0.5405    prepare 0.0151    bound 0.5146    transfer 0.0054    finalize 0.0056    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11561 (12), -0.11214 (12), -0.11097 (12), -0.10925 (12), -0.10754 (12), -0.10643 (12), -0.10595 (12), -0.10564 (12), -0.10546 (12), -0.10463 (12), -0.10404 (12), -0.10302 (12), -0.10229 (12), -0.10106 (12), -0.10095 (12), -0.10070 (12), -0.10055 (12), -0.10038 (12), -0.09954 (12), -0.09912 (12), 
Length of domains: 231
Time: pickout 0.0022    decision 0.0220    set_bounds 0.0107    solve 0.1754    add 0.0021    
Accumulated time: pickout 0.0044    decision 0.0643    set_bounds 0.0355    solve 0.5407    add 0.0052    
Current (lb-rhs): -0.11561059951782227
375 domains visited
Cumulative time: 0.6610503196716309

BaB round 4
batch: 231
splitting decisions: 
split level 0: [/input-8, 1950] [/input-12, 56] [/input-12, 56] [/input-8, 1655] [/input-8, 1950] [/input-12, 56] [/input-12, 56] [/input-8, 1950] [/input-8, 1950] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 190 / 462 = 0.4112554112554112
pruning-in-iteration extra time: 0.004624605178833008
Time: prepare 0.0093    bound 0.1665    transfer 0.0019    finalize 0.0026    func 0.1808    
Accumulated time: func 0.7213    prepare 0.0246    bound 0.6811    transfer 0.0073    finalize 0.0082    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11168 (13), -0.10820 (13), -0.10695 (13), -0.10525 (13), -0.10354 (13), -0.10235 (13), -0.10199 (13), -0.10163 (13), -0.10159 (13), -0.10055 (13), -0.09992 (13), -0.09903 (13), -0.09836 (13), -0.09696 (13), -0.09691 (13), -0.09663 (13), -0.09647 (13), -0.09647 (13), -0.09553 (13), -0.09480 (13), 
Length of domains: 272
Time: pickout 0.0039    decision 0.0276    set_bounds 0.0102    solve 0.1809    add 0.0029    
Accumulated time: pickout 0.0083    decision 0.0919    set_bounds 0.0456    solve 0.7216    add 0.0080    
Current (lb-rhs): -0.11168289184570312
647 domains visited
Cumulative time: 0.8875212669372559

BaB round 5
batch: 272
splitting decisions: 
split level 0: [/input-8, 1655] [/input-8, 1399] [/input-8, 1399] [/input-12, 34] [/input-8, 1399] [/input-12, 34] [/input-8, 1399] [/input-12, 34] [/input-8, 1399] [/input-8, 1655] 
pruning_in_iteration open status: True
ratio of positive domain = 112 / 544 = 0.20588235294117652
pruning-in-iteration extra time: 0.0017712116241455078
Time: prepare 0.0107    bound 0.1419    transfer 0.0028    finalize 0.0038    func 0.1593    
Accumulated time: func 0.8806    prepare 0.0355    bound 0.8230    transfer 0.0101    finalize 0.0119    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10682 (14), -0.10318 (14), -0.10212 (14), -0.10035 (14), -0.10033 (14), -0.09851 (14), -0.09738 (14), -0.09712 (14), -0.09705 (14), -0.09701 (14), -0.09654 (14), -0.09567 (14), -0.09563 (14), -0.09484 (14), -0.09405 (14), -0.09390 (14), -0.09336 (14), -0.09239 (14), -0.09199 (14), -0.09189 (14), 
Length of domains: 432
Time: pickout 0.0048    decision 0.0293    set_bounds 0.0115    solve 0.1594    add 0.0023    
Accumulated time: pickout 0.0131    decision 0.1212    set_bounds 0.0571    solve 0.8811    add 0.0103    
Current (lb-rhs): -0.10681581497192383
1079 domains visited
Cumulative time: 1.095665693283081

BaB round 6
batch: 432
splitting decisions: 
split level 0: [/input-12, 34] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-12, 34] [/input-8, 1647] [/input-8, 313] [/input-8, 313] [/input-8, 1399] 
pruning_in_iteration open status: True
ratio of positive domain = 273 / 864 = 0.3159722222222222
pruning-in-iteration extra time: 0.004743337631225586
Time: prepare 0.0171    bound 0.2157    transfer 0.0029    finalize 0.0066    func 0.2424    
Accumulated time: func 1.1230    prepare 0.0528    bound 1.0387    transfer 0.0131    finalize 0.0185    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10433 (15), -0.10074 (15), -0.09963 (15), -0.09804 (15), -0.09787 (15), -0.09604 (15), -0.09465 (15), -0.09463 (15), -0.09462 (15), -0.09450 (15), -0.09429 (15), -0.09332 (15), -0.09319 (15), -0.09209 (15), -0.09157 (15), -0.09144 (15), -0.09093 (15), -0.08994 (15), -0.08963 (15), -0.08946 (15), 
Length of domains: 591
Time: pickout 0.0068    decision 0.0380    set_bounds 0.0186    solve 0.2426    add 0.0050    
Accumulated time: pickout 0.0198    decision 0.1592    set_bounds 0.0758    solve 1.1237    add 0.0153    
Current (lb-rhs): -0.10432720184326172
1670 domains visited
Cumulative time: 1.409195899963379

BaB round 7
batch: 591
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-8, 1647] [/input-8, 1647] [/input-8, 1647] [/input-8, 313] [/input-12, 56] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 435 / 1182 = 0.36802030456852797
pruning-in-iteration extra time: 0.004734516143798828
Time: prepare 0.0231    bound 0.1914    transfer 0.0044    finalize 0.0076    func 0.2275    
Accumulated time: func 1.3505    prepare 0.0761    bound 1.2301    transfer 0.0174    finalize 0.0261    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10044 (16), -0.09730 (16), -0.09565 (16), -0.09550 (16), -0.09411 (16), -0.09398 (16), -0.09260 (16), -0.09160 (16), -0.09154 (16), -0.09115 (16), -0.09094 (16), -0.09089 (16), -0.09080 (16), -0.09052 (16), -0.08938 (16), -0.08921 (16), -0.08918 (16), -0.08912 (16), -0.08906 (16), -0.08823 (16), 
Length of domains: 747
Time: pickout 0.0092    decision 0.0480    set_bounds 0.0249    solve 0.2277    add 0.0037    
Accumulated time: pickout 0.0291    decision 0.2072    set_bounds 0.1006    solve 1.3514    add 0.0190    
Current (lb-rhs): -0.10043716430664062
2417 domains visited
Cumulative time: 1.7251296043395996

BaB round 8
batch: 747
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 683 / 1494 = 0.4571619812583668
pruning-in-iteration extra time: 0.004503965377807617
Time: prepare 0.0290    bound 0.1907    transfer 0.0079    finalize 0.0091    func 0.2379    
Accumulated time: func 1.5884    prepare 0.1053    bound 1.4208    transfer 0.0254    finalize 0.0352    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09750 (17), -0.09444 (17), -0.09270 (17), -0.09230 (17), -0.09116 (17), -0.09106 (17), -0.08970 (17), -0.08854 (17), -0.08828 (17), -0.08790 (17), -0.08790 (17), -0.08767 (17), -0.08758 (17), -0.08728 (17), -0.08641 (17), -0.08628 (17), -0.08599 (17), -0.08587 (17), -0.08578 (17), -0.08469 (17), 
Length of domains: 811
Time: pickout 0.0114    decision 0.0552    set_bounds 0.0309    solve 0.2381    add 0.0038    
Accumulated time: pickout 0.0404    decision 0.2624    set_bounds 0.1315    solve 1.5895    add 0.0228    
Current (lb-rhs): -0.09749889373779297
3228 domains visited
Cumulative time: 2.0679550170898438

BaB round 9
batch: 811
splitting decisions: 
split level 0: [/input-8, 1388] [/input-12, 34] [/input-8, 1388] [/input-12, 34] [/input-8, 1388] [/input-8, 764] [/input-8, 1388] [/input-12, 34] [/input-8, 1388] [/input-8, 1388] 
pruning_in_iteration open status: True
ratio of positive domain = 700 / 1622 = 0.4315659679408138
pruning-in-iteration extra time: 0.004313468933105469
Time: prepare 0.0318    bound 0.2500    transfer 0.0049    finalize 0.1372    func 0.4241    
Accumulated time: func 2.0125    prepare 0.1374    bound 1.6707    transfer 0.0303    finalize 0.1724    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09410 (18), -0.09109 (18), -0.08932 (18), -0.08864 (18), -0.08772 (18), -0.08767 (18), -0.08637 (18), -0.08499 (18), -0.08491 (18), -0.08452 (18), -0.08409 (18), -0.08409 (18), -0.08390 (18), -0.08295 (18), -0.08289 (18), -0.08248 (18), -0.08232 (18), -0.08221 (18), -0.08187 (18), -0.08141 (18), 
Length of domains: 922
Time: pickout 0.0150    decision 0.0591    set_bounds 0.0339    solve 0.4245    add 0.0039    
Accumulated time: pickout 0.0554    decision 0.3214    set_bounds 0.1654    solve 2.0140    add 0.0267    
Current (lb-rhs): -0.09409952163696289
4150 domains visited
Cumulative time: 2.608293056488037

BaB round 10
batch: 922
splitting decisions: 
split level 0: [/input-12, 34] [/input-8, 1388] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input, 1463] [/input-12, 34] 
pruning_in_iteration open status: True
ratio of positive domain = 473 / 1844 = 0.25650759219088937
pruning-in-iteration extra time: 0.004793643951416016
Time: prepare 0.0369    bound 0.2774    transfer 0.0062    finalize 0.0121    func 0.3337    
Accumulated time: func 2.3462    prepare 0.1745    bound 1.9482    transfer 0.0365    finalize 0.1845    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09301 (19), -0.08979 (19), -0.08823 (19), -0.08746 (19), -0.08662 (19), -0.08580 (19), -0.08506 (19), -0.08366 (19), -0.08329 (19), -0.08304 (19), -0.08302 (19), -0.08290 (19), -0.08288 (19), -0.08185 (19), -0.08109 (19), -0.08103 (19), -0.08069 (19), -0.08026 (19), -0.07970 (19), -0.07955 (19), 
Length of domains: 1371
Time: pickout 0.0147    decision 0.0657    set_bounds 0.0385    solve 0.3340    add 0.0068    
Accumulated time: pickout 0.0701    decision 0.3871    set_bounds 0.2039    solve 2.3480    add 0.0336    
Current (lb-rhs): -0.09300994873046875
5521 domains visited
Cumulative time: 3.07139253616333

BaB round 11
batch: 1371
splitting decisions: 
split level 0: [/input-12, 34] [/input-12, 34] [/input-8, 764] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] 
pruning_in_iteration open status: False
ratio of positive domain = 456 / 2742 = 0.16630196936542674
pruning-in-iteration extra time: 6.222724914550781e-05
Time: prepare 0.0539    bound 0.1573    transfer 0.0132    finalize 0.0167    func 0.2414    
Accumulated time: func 2.5876    prepare 0.2286    bound 2.1055    transfer 0.0497    finalize 0.2012    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08775 (20), -0.08642 (20), -0.08456 (20), -0.08315 (20), -0.08297 (20), -0.08213 (20), -0.08164 (20), -0.08137 (20), -0.08081 (20), -0.08078 (20), -0.08003 (20), -0.07982 (20), -0.07917 (20), -0.07843 (20), -0.07843 (20), -0.07813 (20), -0.07809 (20), -0.07805 (20), -0.07777 (20), -0.07751 (20), 
Length of domains: 2278
Time: pickout 0.0203    decision 0.0894    set_bounds 0.0574    solve 0.2425    add 0.0103    
Accumulated time: pickout 0.0904    decision 0.4766    set_bounds 0.2613    solve 2.5905    add 0.0438    
Current (lb-rhs): -0.0877542495727539
7799 domains visited
Cumulative time: 3.495523691177368

BaB round 12
batch: 2278
splitting decisions: 
split level 0: [/input-12, 34] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] [/input-8, 1502] 
pruning_in_iteration open status: False
ratio of positive domain = 501 / 4556 = 0.10996488147497807
pruning-in-iteration extra time: 8.368492126464844e-05
Time: prepare 0.0931    bound 0.2303    transfer 0.0149    finalize 0.0271    func 0.3666    
Accumulated time: func 2.9541    prepare 0.3220    bound 2.3358    transfer 0.0646    finalize 0.2283    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08351 (21), -0.08218 (21), -0.08040 (21), -0.08036 (21), -0.07903 (21), -0.07901 (21), -0.07873 (21), -0.07779 (21), -0.07740 (21), -0.07707 (21), -0.07701 (21), -0.07656 (21), -0.07646 (21), -0.07568 (21), -0.07567 (21), -0.07566 (21), -0.07558 (21), -0.07495 (21), -0.07463 (21), -0.07429 (21), 
Length of domains: 4035
Time: pickout 0.0354    decision 0.1385    set_bounds 0.2513    solve 0.3674    add 0.0251    
Accumulated time: pickout 0.1258    decision 0.6151    set_bounds 0.5125    solve 2.9579    add 0.0690    
Current (lb-rhs): -0.08351469039916992
11834 domains visited
Cumulative time: 4.319748878479004

BaB round 13
batch: 4035
splitting decisions: 
split level 0: [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] [/input-8, 313] 
pruning_in_iteration open status: False
ratio of positive domain = 630 / 8070 = 0.0780669144981413
pruning-in-iteration extra time: 5.650520324707031e-05
Time: prepare 0.1643    bound 0.3628    transfer 0.0758    finalize 0.0467    func 0.6510    
Accumulated time: func 3.6051    prepare 0.4865    bound 2.6986    transfer 0.1404    finalize 0.2750    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07968 (22), -0.07833 (22), -0.07833 (22), -0.07697 (22), -0.07653 (22), -0.07644 (22), -0.07513 (22), -0.07511 (22), -0.07509 (22), -0.07509 (22), -0.07490 (22), -0.07391 (22), -0.07373 (22), -0.07371 (22), -0.07356 (22), -0.07356 (22), -0.07317 (22), -0.07309 (22), -0.07272 (22), -0.07257 (22), 
Length of domains: 7429
Time: pickout 0.0585    decision 0.2295    set_bounds 0.3058    solve 0.6528    add 0.0291    
Accumulated time: pickout 0.1842    decision 0.8446    set_bounds 0.8183    solve 3.6107    add 0.0981    
Current (lb-rhs): -0.079681396484375
19263 domains visited
Cumulative time: 5.605844974517822

BaB round 14
batch: 4096
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
pruning_in_iteration open status: False
ratio of positive domain = 925 / 8192 = 0.1129150390625
pruning-in-iteration extra time: 6.818771362304688e-05
Time: prepare 0.2164    bound 0.3621    transfer 0.0211    finalize 0.0422    func 0.6428    
Accumulated time: func 4.2478    prepare 0.7032    bound 3.0607    transfer 0.1615    finalize 0.3172    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07848 (23), -0.07833 (22), -0.07714 (23), -0.07697 (22), -0.07533 (23), -0.07521 (23), -0.07513 (22), -0.07509 (22), -0.07391 (23), -0.07387 (23), -0.07373 (22), -0.07371 (22), -0.07370 (23), -0.07356 (22), -0.07272 (23), -0.07256 (22), -0.07236 (23), -0.07221 (22), -0.07198 (23), -0.07185 (23), 
Length of domains: 10575
Time: pickout 0.0590    decision 0.3965    set_bounds 0.0966    solve 0.6444    add 0.0418    
Accumulated time: pickout 0.2432    decision 1.2411    set_bounds 0.9149    solve 4.2551    add 0.1399    
Current (lb-rhs): -0.07848358154296875
26505 domains visited
current_vram/total_varm: 27.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.8543596267700195

BaB round 15
batch: 8192
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
pruning_in_iteration open status: False
ratio of positive domain = 2325 / 16384 = 0.14190673828125
pruning-in-iteration extra time: 8.249282836914062e-05
Time: prepare 0.4322    bound 0.6783    transfer 0.0925    finalize 0.1060    func 1.3106    
Accumulated time: func 5.5585    prepare 1.1356    bound 3.7390    transfer 0.2540    finalize 0.4232    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07833 (22), -0.07523 (23), -0.07513 (22), -0.07509 (22), -0.07402 (24), -0.07400 (24), -0.07373 (22), -0.07356 (22), -0.07266 (24), -0.07266 (24), -0.07256 (22), -0.07194 (23), -0.07182 (22), -0.07168 (22), -0.07136 (22), -0.07086 (24), -0.07081 (24), -0.07078 (24), -0.07054 (24), -0.07047 (23), 
Length of domains: 16365
Time: pickout 0.1317    decision 0.6250    set_bounds 0.4261    solve 1.3137    add 0.0565    
Accumulated time: pickout 0.3749    decision 1.8661    set_bounds 1.3411    solve 5.5688    add 0.1964    
Current (lb-rhs): -0.07833099365234375
40487 domains visited
current_vram/total_varm: 32.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.43414831161499

BaB round 16
batch: 16365
splitting decisions: 
split level 0: [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] [/input, 3571] 
pruning_in_iteration open status: False
ratio of positive domain = 4228 / 32730 = 0.12917812404521845
pruning-in-iteration extra time: 0.00021386146545410156
Time: prepare 0.8643    bound 1.3057    transfer 0.2580    finalize 0.1899    func 2.6205    
Accumulated time: func 8.1790    prepare 2.0003    bound 5.0447    transfer 0.5120    finalize 0.6131    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07260 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07126 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06946 (25), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06892 (25), 
Length of domains: 28308
Time: pickout 0.2811    decision 1.3009    set_bounds 0.8656    solve 2.6265    add 0.0901    
Accumulated time: pickout 0.6560    decision 3.1670    set_bounds 2.2066    solve 8.1953    add 0.2865    
Current (lb-rhs): -0.0765833854675293
68795 domains visited
Cumulative time: 14.648600339889526

BaB round 17
batch: 16384
splitting decisions: 
split level 0: [/input-8, 149] [/input, 3571] [/input, 3571] [/input-8, 1967] [/input-8, 1967] [/input-8, 510] [/input-8, 1704] [/input-8, 510] [/input-8, 1704] [/input-8, 1812] 
pruning_in_iteration open status: False
ratio of positive domain = 4894 / 32768 = 0.14935302734375
pruning-in-iteration extra time: 0.00022411346435546875
Time: prepare 0.8655    bound 1.3052    transfer 0.2595    finalize 0.4797    func 2.9120    
Accumulated time: func 11.0910    prepare 2.8662    bound 6.3499    transfer 0.7715    finalize 1.0928    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07260 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06946 (25), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), 
Length of domains: 39628
Time: pickout 0.2816    decision 1.9243    set_bounds 0.9260    solve 2.9177    add 0.1209    
Accumulated time: pickout 0.9376    decision 5.0913    set_bounds 3.1326    solve 11.1131    add 0.4074    
Current (lb-rhs): -0.0765833854675293
96499 domains visited
current_vram/total_varm: 43.9GB/99.9GB, batch_size increase to 32768
Cumulative time: 20.869201183319092

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] [/input-8, 510] [/input, 1463] [/input, 1463] [/input, 4071] [/input-8, 1812] 
pruning_in_iteration open status: False
ratio of positive domain = 10580 / 65536 = 0.16143798828125
pruning-in-iteration extra time: 0.0004565715789794922
Time: prepare 1.7517    bound 7.7577    transfer 0.6218    finalize 0.9090    func 11.0455    
Accumulated time: func 22.1366    prepare 4.6183    bound 14.1076    transfer 1.3933    finalize 2.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06881 (26), -0.06868 (23), -0.06853 (23), -0.06842 (23), 
Length of domains: 61467
Time: pickout 0.5777    decision 3.3261    set_bounds 2.0607    solve 11.0619    add 0.1923    
Accumulated time: pickout 1.5154    decision 8.4173    set_bounds 5.1933    solve 22.1750    add 0.5998    
Current (lb-rhs): -0.0765833854675293
151106 domains visited
Cumulative time: 38.256298542022705

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input, 3571] [/input-8, 510] [/input-8, 149] [/input-8, 510] [/input-8, 510] [/input-8, 1967] [/input-8, 1704] [/input-8, 142] [/input-8, 1704] [/input-8, 1704] 
pruning_in_iteration open status: True
ratio of positive domain = 13701 / 65536 = 0.2090606689453125
pruning-in-iteration extra time: 0.0007977485656738281
Time: prepare 1.7911    bound 7.7696    transfer 0.6327    finalize 1.0249    func 11.2218    
Accumulated time: func 33.3584    prepare 6.4101    bound 21.8772    transfer 2.0260    finalize 3.0267    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 80534
Time: pickout 0.7455    decision 3.4986    set_bounds 1.9773    solve 11.2361    add 0.3745    
Accumulated time: pickout 2.2608    decision 11.9159    set_bounds 7.1706    solve 33.4111    add 0.9743    
Current (lb-rhs): -0.0765833854675293
202941 domains visited
Cumulative time: 56.22853493690491

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1704] [/input, 3315] [/input-8, 1704] [/input, 3315] [/input-8, 1704] [/input, 3315] [/input, 4071] [/input, 3315] [/input, 4071] [/input, 4071] 
pruning_in_iteration open status: True
ratio of positive domain = 15652 / 65536 = 0.23883056640625
pruning-in-iteration extra time: 0.0041599273681640625
Time: prepare 1.7850    bound 4.7963    transfer 0.6252    finalize 0.4506    func 7.6601    
Accumulated time: func 41.0185    prepare 8.1957    bound 26.6735    transfer 2.6513    finalize 3.4773    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 97650
Time: pickout 0.6643    decision 3.6083    set_bounds 2.1385    solve 7.6755    add 0.1607    
Accumulated time: pickout 2.9251    decision 15.5242    set_bounds 9.3091    solve 41.0866    add 1.1350    
Current (lb-rhs): -0.0765833854675293
252825 domains visited
Cumulative time: 70.66029191017151

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1812] [/input-8, 1812] [/input-8, 142] [/input-8, 1812] [/input, 1463] [/input-8, 510] [/input-8, 1812] [/input, 3315] [/input, 3315] [/input, 1463] 
pruning_in_iteration open status: True
ratio of positive domain = 17484 / 65536 = 0.26678466796875
pruning-in-iteration extra time: 0.004586458206176758
Time: prepare 1.8534    bound 4.2046    transfer 0.6324    finalize 1.2788    func 7.9717    
Accumulated time: func 48.9902    prepare 10.0495    bound 30.8781    transfer 3.2837    finalize 4.7561    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 112934
Time: pickout 0.6732    decision 4.1650    set_bounds 2.2457    solve 7.9848    add 0.1636    
Accumulated time: pickout 3.5983    decision 19.6892    set_bounds 11.5548    solve 49.0714    add 1.2986    
Current (lb-rhs): -0.0765833854675293
300877 domains visited
Cumulative time: 86.03252148628235

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input, 3165] [/input-8, 149] [/input-8, 363] [/input-8, 254] [/input, 1463] [/input, 1463] [/input, 1463] [/input-8, 254] [/input-8, 1812] [/input-8, 510] 
pruning_in_iteration open status: True
ratio of positive domain = 19152 / 65536 = 0.292236328125
pruning-in-iteration extra time: 0.005901336669921875
Time: prepare 1.8062    bound 2.7992    transfer 0.6255    finalize 1.3360    func 6.5701    
Accumulated time: func 55.5603    prepare 11.8561    bound 33.6773    transfer 3.9092    finalize 6.0921    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 126550
Time: pickout 0.6436    decision 3.8370    set_bounds 1.5189    solve 6.5836    add 0.1773    
Accumulated time: pickout 4.2419    decision 23.5263    set_bounds 13.0737    solve 55.6550    add 1.4758    
Current (lb-rhs): -0.0765833854675293
347261 domains visited
Cumulative time: 98.94095826148987

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input, 857] [/input, 1463] [/input, 3315] [/input, 3315] [/input, 3315] [/input, 3315] [/input-8, 254] [/input-8, 254] [/input-8, 254] [/input-8, 254] 
pruning_in_iteration open status: True
ratio of positive domain = 20293 / 65536 = 0.3096466064453125
pruning-in-iteration extra time: 0.005926609039306641
Time: prepare 1.8329    bound 2.7481    transfer 0.6231    finalize 1.4424    func 6.6496    
Accumulated time: func 62.2099    prepare 13.6894    bound 36.4254    transfer 4.5323    finalize 7.5345    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 139025
Time: pickout 0.6737    decision 3.9525    set_bounds 1.4696    solve 6.6632    add 0.1465    
Accumulated time: pickout 4.9156    decision 27.4788    set_bounds 14.5433    solve 62.3182    add 1.6223    
Current (lb-rhs): -0.0765833854675293
392504 domains visited
Cumulative time: 112.02014112472534

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1967] [/input-8, 1981] [/input-8, 1981] [/input, 3165] [/input, 3315] [/input, 3315] [/input-8, 1981] [/input, 3315] [/input, 3165] [/input, 3165] 
pruning_in_iteration open status: True
ratio of positive domain = 20384 / 65536 = 0.31103515625
pruning-in-iteration extra time: 0.006070137023925781
Time: prepare 1.8189    bound 2.7464    transfer 0.6277    finalize 1.6165    func 6.8121    
Accumulated time: func 69.0220    prepare 15.5087    bound 39.1718    transfer 5.1600    finalize 9.1509    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 151409
Time: pickout 0.6665    decision 4.1020    set_bounds 1.4701    solve 6.8256    add 0.1567    
Accumulated time: pickout 5.5821    decision 31.5808    set_bounds 16.0134    solve 69.1438    add 1.7790    
Current (lb-rhs): -0.0765833854675293
437656 domains visited
Cumulative time: 125.39987111091614

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input, 4089] [/input, 4089] [/input, 4089] [/input, 4089] [/input, 4089] [/input, 4089] [/input-8, 142] [/input-8, 142] [/input-8, 243] [/input, 4089] 
pruning_in_iteration open status: True
ratio of positive domain = 22250 / 65536 = 0.339508056640625
pruning-in-iteration extra time: 0.005985736846923828
Time: prepare 1.8207    bound 2.6777    transfer 0.6249    finalize 0.4597    func 5.5863    
Accumulated time: func 74.6083    prepare 17.3298    bound 41.8496    transfer 5.7849    finalize 9.6107    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 161927
Time: pickout 0.6764    decision 3.3993    set_bounds 2.7443    solve 5.6037    add 0.1605    
Accumulated time: pickout 6.2585    decision 34.9801    set_bounds 18.7577    solve 74.7475    add 1.9395    
Current (lb-rhs): -0.0765833854675293
480942 domains visited
Cumulative time: 138.17849135398865

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input, 3165] [/input, 4089] [/input, 3165] [/input-8, 1967] [/input-8, 1981] [/input-8, 142] [/input-8, 142] [/input-8, 1981] [/input-8, 142] [/input-8, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 25481 / 65536 = 0.3888092041015625
pruning-in-iteration extra time: 0.00617671012878418
Time: prepare 1.8217    bound 2.5584    transfer 0.6259    finalize 0.4819    func 5.4917    
Accumulated time: func 80.1000    prepare 19.1520    bound 44.4080    transfer 6.4108    finalize 10.0926    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 169214
Time: pickout 0.6904    decision 4.8034    set_bounds 2.9355    solve 5.5170    add 0.1731    
Accumulated time: pickout 6.9489    decision 39.7835    set_bounds 21.6932    solve 80.2645    add 2.1126    
Current (lb-rhs): -0.0765833854675293
520997 domains visited
Cumulative time: 152.68771409988403

BaB round 27
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1595] [/input-8, 1981] [/input-8, 243] [/input-8, 243] [/input-8, 1967] [/input-8, 142] [/input-8, 243] [/input-8, 243] [/input, 1021] [/input-8, 1981] 
pruning_in_iteration open status: True
ratio of positive domain = 28157 / 65536 = 0.4296417236328125
pruning-in-iteration extra time: 0.006810665130615234
Time: prepare 2.0523    bound 2.4875    transfer 0.6254    finalize 2.6700    func 7.8382    
Accumulated time: func 87.9382    prepare 21.2049    bound 46.8955    transfer 7.0362    finalize 12.7626    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 173825
Time: pickout 0.8267    decision 5.6963    set_bounds 1.8466    solve 7.8658    add 0.1565    
Accumulated time: pickout 7.7756    decision 45.4799    set_bounds 23.5399    solve 88.1303    add 2.2691    
Current (lb-rhs): -0.0765833854675293
558376 domains visited
Cumulative time: 169.36819052696228

BaB round 28
batch: 32768
splitting decisions: 
split level 0: [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input, 2006] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input, 4089] [/input, 2022] 
pruning_in_iteration open status: True
ratio of positive domain = 29262 / 65536 = 0.446502685546875
pruning-in-iteration extra time: 0.006197452545166016
Time: prepare 1.8560    bound 2.4358    transfer 0.6169    finalize 0.5178    func 5.4304    
Accumulated time: func 93.3686    prepare 23.0615    bound 49.3314    transfer 7.6531    finalize 13.2804    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 177331
Time: pickout 0.8114    decision 3.4762    set_bounds 3.5308    solve 5.4490    add 0.1396    
Accumulated time: pickout 8.5871    decision 48.9560    set_bounds 27.0707    solve 93.5793    add 2.4087    
Current (lb-rhs): -0.0765833854675293
594650 domains visited
Cumulative time: 183.05563282966614

BaB round 29
batch: 32768
splitting decisions: 
split level 0: [/input, 2022] [/input, 1480] [/input-8, 254] [/input-8, 255] [/input-8, 1595] [/input-8, 891] [/input, 2022] [/input-8, 247] [/input, 2022] [/input-8, 247] 
pruning_in_iteration open status: True
ratio of positive domain = 29687 / 65536 = 0.4529876708984375
pruning-in-iteration extra time: 0.006068706512451172
Time: prepare 1.8559    bound 2.4263    transfer 0.6250    finalize 0.4998    func 5.4113    
Accumulated time: func 98.7799    prepare 24.9178    bound 51.7576    transfer 8.2781    finalize 13.7802    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 180412
Time: pickout 0.7780    decision 4.6070    set_bounds 1.6052    solve 6.9734    add 0.1416    
Accumulated time: pickout 9.3650    decision 53.5630    set_bounds 28.6759    solve 100.5527    add 2.5502    
Current (lb-rhs): -0.0765833854675293
630499 domains visited
Cumulative time: 197.392019033432

BaB round 30
batch: 32768
splitting decisions: 
split level 0: [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input-8, 247] [/input, 3165] [/input-8, 255] [/input-8, 1981] [/input, 3165] [/input-8, 255] [/input-8, 1981] 
pruning_in_iteration open status: True
ratio of positive domain = 29323 / 65536 = 0.4474334716796875
pruning-in-iteration extra time: 0.006072282791137695
Time: prepare 1.9082    bound 2.4401    transfer 0.6247    finalize 0.5076    func 5.4834    
Accumulated time: func 104.2633    prepare 26.8265    bound 54.1977    transfer 8.9028    finalize 14.2879    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07658 (23), -0.07403 (24), -0.07338 (23), -0.07331 (23), -0.07263 (25), -0.07193 (23), -0.07181 (23), -0.07127 (25), -0.07082 (23), -0.07075 (24), -0.07006 (23), -0.06986 (23), -0.06962 (23), -0.06943 (25), -0.06936 (25), -0.06927 (24), -0.06868 (23), -0.06853 (23), -0.06842 (23), -0.06825 (24), 
Length of domains: 183857
Time: pickout 0.7624    decision 3.4162    set_bounds 3.4165    solve 5.5022    add 0.1309    
Accumulated time: pickout 10.1275    decision 56.9792    set_bounds 32.0923    solve 106.0548    add 2.6812    
Current (lb-rhs): -0.0765833854675293
666712 domains visited
Time out!!!!!!!!
Result: unknown in 214.3829 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.75459862, -19.03087234, -15.81020927, -15.02808094, -15.45583725,
         -15.58429432, -14.96899986, -17.89657974, -19.61580658, -19.36780739]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 329, 1, 632] with unstable size 328 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 632] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [328]; unstable size 328; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 328] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 328] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.01773739,  1.41905069, -0.42905283, -0.71989632,  0.09239098,
         -1.24160242,  0.88482058,  2.33326936,  1.89770079]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.75459862, -19.03087234, -15.81020927, -15.02808094, -15.45583725,
         -15.58429432, -14.96899986, -17.89657974, -19.61580658, -19.36780739]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.75459862, -19.03087234, -15.81020832, -15.02808094, -15.45583725,
          -15.58429337, -14.96900177, -17.89657784, -19.61580658, -19.36780930],
         [-17.75459862, -19.03087234, -15.81020832, -15.02808094, -15.45583725,
          -15.58429337, -14.96900177, -17.89657784, -19.61580658, -19.36780930]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.78212738,  0.42775631, -0.05907917]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0769 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.35046577, -23.71506119, -23.35945511, -21.45649910, -20.70935822,
         -20.53724480, -22.38616753, -16.30188179, -26.53351212, -22.39307404]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [460]; unstable size 460; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 248, 1, 460] with unstable size 247 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 460] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 460] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [247]; unstable size 247; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 247] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 247] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.23471117, 4.94442511, 5.38546562, 3.64118910, 3.33296156, 2.72332525,
         4.26009846, 8.15480995, 3.82787895]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0353 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.09100723, -29.06959343, -25.09518623, -27.86755753, -24.83033943,
         -28.04232597, -26.05955124, -26.36453247, -25.66234589, -27.72757912]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [899]; unstable size 899; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 311, 1, 899] with unstable size 310 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 899] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 899] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [310]; unstable size 310; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 310] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 310] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97617149, -1.48784208,  0.95436358, -1.87956333,  0.93106532,
         -1.03131628, -0.85329711, -0.83899182,  0.88107014]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.09100723, -29.06959343, -25.09518623, -27.86755753, -24.83033943,
         -28.04232597, -26.05955124, -26.36453247, -25.66234589, -27.72757912]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.09101105, -29.06959724, -25.09518623, -27.86755753, -24.83034134,
          -28.04232597, -26.05955315, -26.36453438, -25.66234589, -27.72757912],
         [-25.09101105, -29.06959724, -25.09518623, -27.86755753, -24.83034134,
          -28.04232597, -26.05955315, -26.36453438, -25.66234589, -27.72757912]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.00417519, -0.26066971,  0.96854210,  1.27352333,  0.57133484]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0528 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.78340530, -27.09945488, -17.72372437, -21.88307762, -18.28152275,
         -20.99545860, -20.59827042, -22.34070778, -24.70541382, -26.47000694]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [950]; unstable size 950; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 950] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 950] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 950] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 208] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.15953612, 7.92398453, 3.57421303, 0.07925250, 2.58815289, 1.97291231,
         3.73509550, 5.73443413, 7.39504910]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0577 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.82749367, -26.77242661, -22.68888855, -21.92727852, -23.00431252,
         -21.88382530, -22.72205544, -24.54189873, -26.69390106, -25.28289032]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 306, 1, 743] with unstable size 305 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 743] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [305]; unstable size 305; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 305] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 305] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.55621195,  2.72794223, -0.34306383, -0.31645536, -0.10541487,
         -0.28819251,  1.26013124,  2.92124963,  1.60254717]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.82749367, -26.77242661, -22.68888855, -21.92727852, -23.00431252,
         -21.88382530, -22.72205544, -24.54189873, -26.69390106, -25.28289032]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.12017250, -27.07359505, -23.04397583, -22.30886650, -23.38348579,
          -22.46064949, -23.02729416, -25.03979683, -26.89845848, -25.77319908],
         [-25.12017250, -27.07359505, -23.04397583, -22.30886650, -23.38348579,
          -22.46064949, -23.02729416, -25.03979683, -26.89845848, -25.77319908]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.58332634, -0.15178299,  0.92283630,  0.56664467]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0074 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0475 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
         -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 573] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 573] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 256] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.53955221,  0.16099834,  2.22247696,  1.41359806,  1.53142929,
          1.82894993,  2.34312296,  1.67316532, -0.55014038]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
         -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.98it/s]100%|██████████| 1/1 [00:00<00:00,  8.98it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.72891045, -25.00279617, -27.97999954, -26.96871758, -27.40955925,
          -27.52745628, -28.15091324, -27.60436821, -24.36411667, -24.20336342]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.16075325]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1139 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.869609832763672
alpha/beta optimization time: 1.146103858947754
initial alpha-crown bounds: tensor([[ 0.62231684,  0.20233989,  2.31166983,  1.48120928,  1.62452984,
          1.90320015,  2.41159058,  1.76273108, -0.44997740]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.44997739791870117
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.7107436656952
Verifying property 0 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.622316837310791.

Properties batch 1, size 1
Remaining timeout: 198.54245829582214
Verifying property 1 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.20233988761901855.

Properties batch 2, size 1
Remaining timeout: 198.43414521217346
Verifying property 2 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3116698265075684.

Properties batch 3, size 1
Remaining timeout: 198.32998776435852
Verifying property 3 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4812092781066895.

Properties batch 4, size 1
Remaining timeout: 198.21343302726746
Verifying property 4 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6245298385620117.

Properties batch 5, size 1
Remaining timeout: 198.10861945152283
Verifying property 5 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9032001495361328.

Properties batch 6, size 1
Remaining timeout: 198.00511193275452
Verifying property 6 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.411590576171875.

Properties batch 7, size 1
Remaining timeout: 197.90135884284973
Verifying property 7 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7627310752868652.

Properties batch 8, size 1
Remaining timeout: 197.79815530776978
Verifying property 8 with 1 instances.
##### Instance 83 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44997740]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.01862907, -24.96064758, -28.10244751, -27.03785515, -27.65390778,
        -27.54524422, -28.22773170, -27.61219788, -25.01158905, -23.89872360],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44997740]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 573
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 251
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 843
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 55] 
split level 1: [/input-12, 85] 
split level 2: [/input-12, 49] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 69] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 56] 
pruning_in_iteration open status: True
ratio of positive domain = 252 / 256 = 0.984375
pruning-in-iteration extra time: 0.004587411880493164
Time: prepare 0.0018    bound 0.1135    transfer 0.0010    finalize 0.0016    func 0.1180    
Accumulated time: func 0.1180    prepare 0.0022    bound 0.1135    transfer 0.0010    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14543 (8), -0.13665 (8), -0.01888 (8), -0.00628 (8), 
Length of domains: 4
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1180    add 0.0008    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.1180    add 0.0008    
Current (lb-rhs): -0.1454334259033203
4 domains visited
Cumulative time: 0.16296148300170898

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input-8, 1392] [/input-8, 1392] [/input-8, 1392] [/input-8, 1392] 
split level 1: [/input-8, 1396] [/input-8, 1388] [/input-8, 1395] [/input-8, 1388] 
split level 2: [/input-8, 1097] [/input-8, 1384] [/input-8, 1396] [/input-8, 1389] 
split level 3: [/input-8, 116] [/input-8, 1396] [/input-8, 116] [/input-8, 1396] 
split level 4: [/input-8, 1398] [/input-8, 116] [/input-8, 1397] [/input-8, 1397] 
split level 5: [/input-8, 1185] [/input-8, 1397] [/input-8, 1398] [/input-8, 116] 
pruning_in_iteration open status: True
ratio of positive domain = 128 / 256 = 0.5
pruning-in-iteration extra time: 0.0065119266510009766
Time: prepare 0.0048    bound 0.1146    transfer 0.0008    finalize 0.0012    func 0.1214    
Accumulated time: func 0.2394    prepare 0.0073    bound 0.2281    transfer 0.0017    finalize 0.0028    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09806 (14), -0.09642 (14), -0.09315 (14), -0.09217 (14), -0.09012 (14), -0.08880 (14), -0.08873 (14), -0.08654 (14), -0.08581 (14), -0.08579 (14), -0.08555 (14), -0.08544 (14), -0.08521 (14), -0.08504 (14), -0.08504 (14), -0.08498 (14), -0.08465 (14), -0.08457 (14), -0.08456 (14), -0.08396 (14), 
Length of domains: 128
Time: pickout 0.0007    decision 0.0197    set_bounds 0.0121    solve 0.1215    add 0.0016    
Accumulated time: pickout 0.0011    decision 0.0429    set_bounds 0.0283    solve 0.2395    add 0.0023    
Current (lb-rhs): -0.09806346893310547
132 domains visited
Cumulative time: 0.31895995140075684

BaB round 3
batch: 128
splitting decisions: 
split level 0: [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] [/input-8, 1395] 
pruning_in_iteration open status: False
ratio of positive domain = 17 / 256 = 0.06640625
pruning-in-iteration extra time: 5.1021575927734375e-05
Time: prepare 0.0051    bound 0.0911    transfer 0.0007    finalize 0.0016    func 0.0986    
Accumulated time: func 0.3380    prepare 0.0126    bound 0.3193    transfer 0.0025    finalize 0.0044    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09297 (15), -0.09133 (15), -0.08708 (15), -0.08566 (15), -0.08506 (15), -0.08380 (15), -0.08232 (15), -0.08089 (15), -0.08018 (15), -0.08003 (15), -0.07974 (15), -0.07951 (15), -0.07882 (15), -0.07872 (15), -0.07854 (15), -0.07850 (15), -0.07836 (15), -0.07834 (15), -0.07817 (15), -0.07790 (15), 
Length of domains: 239
Time: pickout 0.0020    decision 0.0244    set_bounds 0.0056    solve 0.0987    add 0.0018    
Accumulated time: pickout 0.0031    decision 0.0673    set_bounds 0.0339    solve 0.3382    add 0.0042    
Current (lb-rhs): -0.09296798706054688
371 domains visited
Cumulative time: 0.4518704414367676

BaB round 4
batch: 239
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1389] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] 
pruning_in_iteration open status: True
ratio of positive domain = 207 / 478 = 0.4330543933054394
pruning-in-iteration extra time: 0.004179477691650391
Time: prepare 0.0095    bound 0.1312    transfer 0.0028    finalize 0.0031    func 0.1466    
Accumulated time: func 0.4847    prepare 0.0222    bound 0.4505    transfer 0.0053    finalize 0.0075    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08713 (16), -0.08549 (16), -0.08122 (16), -0.07988 (16), -0.07926 (16), -0.07800 (16), -0.07648 (16), -0.07506 (16), -0.07423 (16), -0.07406 (16), -0.07398 (16), -0.07358 (16), -0.07274 (16), -0.07270 (16), -0.07260 (16), -0.07256 (16), -0.07252 (16), -0.07230 (16), -0.07213 (16), -0.07191 (16), 
Length of domains: 271
Time: pickout 0.0033    decision 0.0275    set_bounds 0.0101    solve 0.1473    add 0.0021    
Accumulated time: pickout 0.0064    decision 0.0948    set_bounds 0.0441    solve 0.4855    add 0.0063    
Current (lb-rhs): -0.0871267318725586
642 domains visited
Cumulative time: 0.6433279514312744

BaB round 5
batch: 271
splitting decisions: 
split level 0: [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-12, 50] [/input-8, 1389] 
pruning_in_iteration open status: False
ratio of positive domain = 29 / 542 = 0.053505535055350606
pruning-in-iteration extra time: 8.58306884765625e-05
Time: prepare 0.0103    bound 0.1059    transfer 0.0073    finalize 0.0036    func 0.1272    
Accumulated time: func 0.6119    prepare 0.0327    bound 0.5564    transfer 0.0126    finalize 0.0111    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08158 (17), -0.07995 (17), -0.07563 (17), -0.07429 (17), -0.07348 (17), -0.07155 (17), -0.07086 (17), -0.07039 (17), -0.06951 (17), -0.06891 (17), -0.06878 (17), -0.06817 (17), -0.06800 (17), -0.06745 (17), -0.06729 (17), -0.06701 (17), -0.06693 (17), -0.06687 (17), -0.06660 (17), -0.06641 (17), 
Length of domains: 512
Time: pickout 0.0049    decision 0.0268    set_bounds 0.0113    solve 0.1273    add 0.0064    
Accumulated time: pickout 0.0113    decision 0.1216    set_bounds 0.0554    solve 0.6128    add 0.0126    
Current (lb-rhs): -0.08158206939697266
1154 domains visited
Cumulative time: 0.8206706047058105

BaB round 6
batch: 512
splitting decisions: 
split level 0: [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1384] [/input-8, 1393] [/input-8, 1393] [/input-8, 1393] [/input-8, 1384] [/input-8, 1393] [/input-8, 1384] 
pruning_in_iteration open status: False
ratio of positive domain = 1 / 1024 = 0.0009765625
pruning-in-iteration extra time: 5.1975250244140625e-05
Time: prepare 0.0192    bound 0.1094    transfer 0.0070    finalize 0.0050    func 0.1408    
Accumulated time: func 0.7526    prepare 0.0522    bound 0.6658    transfer 0.0196    finalize 0.0162    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07444 (18), -0.07282 (18), -0.06992 (18), -0.06850 (18), -0.06826 (18), -0.06785 (18), -0.06717 (18), -0.06578 (18), -0.06395 (18), -0.06377 (18), -0.06339 (18), -0.06265 (18), -0.06253 (18), -0.06239 (18), -0.06178 (18), -0.06176 (18), -0.06161 (18), -0.06086 (18), -0.06086 (18), -0.06059 (18), 
Length of domains: 1023
Time: pickout 0.0075    decision 0.0427    set_bounds 0.0223    solve 0.1410    add 0.0043    
Accumulated time: pickout 0.0189    decision 0.1643    set_bounds 0.0777    solve 0.7538    add 0.0169    
Current (lb-rhs): -0.07444381713867188
2177 domains visited
Cumulative time: 1.0394196510314941

BaB round 7
batch: 1023
splitting decisions: 
split level 0: [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 742] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] [/input-8, 1398] 
pruning_in_iteration open status: False
ratio of positive domain = 36 / 2046 = 0.017595307917888547
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.0388    bound 0.1306    transfer 0.0152    finalize 0.0105    func 0.1954    
Accumulated time: func 0.9480    prepare 0.0912    bound 0.7965    transfer 0.0348    finalize 0.0267    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06965 (19), -0.06628 (19), -0.06494 (19), -0.06437 (19), -0.06273 (19), -0.06238 (19), -0.06225 (19), -0.06155 (19), -0.06063 (19), -0.05966 (19), -0.05921 (19), -0.05876 (19), -0.05812 (19), -0.05801 (19), -0.05799 (19), -0.05768 (19), -0.05754 (19), -0.05754 (19), -0.05713 (19), -0.05698 (19), 
Length of domains: 2008
Time: pickout 0.0152    decision 0.0706    set_bounds 0.0438    solve 0.1964    add 0.0172    
Accumulated time: pickout 0.0341    decision 0.2349    set_bounds 0.1215    solve 0.9502    add 0.0341    
Current (lb-rhs): -0.06964778900146484
4185 domains visited
Cumulative time: 1.3847427368164062

BaB round 8
batch: 2008
splitting decisions: 
split level 0: [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 1398] [/input-12, 42] [/input-8, 742] [/input-12, 42] [/input-8, 742] [/input-8, 742] [/input-8, 742] 
pruning_in_iteration open status: False
ratio of positive domain = 410 / 4016 = 0.10209163346613548
pruning-in-iteration extra time: 5.8650970458984375e-05
Time: prepare 0.0803    bound 0.2079    transfer 0.0450    finalize 0.0236    func 0.3572    
Accumulated time: func 1.3052    prepare 0.1718    bound 1.0044    transfer 0.0798    finalize 0.0503    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06239 (20), -0.06147 (20), -0.06070 (20), -0.05796 (20), -0.05754 (20), -0.05742 (20), -0.05695 (20), -0.05661 (20), -0.05634 (20), -0.05585 (20), -0.05539 (20), -0.05513 (20), -0.05415 (20), -0.05327 (20), -0.05326 (20), -0.05322 (20), -0.05310 (20), -0.05275 (20), -0.05268 (20), -0.05260 (20), 
Length of domains: 3592
Time: pickout 0.0288    decision 0.1248    set_bounds 0.2103    solve 0.3580    add 0.0162    
Accumulated time: pickout 0.0629    decision 0.3597    set_bounds 0.3318    solve 1.3082    add 0.0503    
Current (lb-rhs): -0.06239128112792969
7777 domains visited
Cumulative time: 2.1283934116363525

BaB round 9
batch: 3592
splitting decisions: 
split level 0: [/input-12, 42] [/input-8, 819] [/input-12, 42] [/input-8, 819] [/input-12, 42] [/input-8, 819] [/input-12, 42] [/input-12, 42] [/input-12, 42] [/input-12, 42] 
pruning_in_iteration open status: True
ratio of positive domain = 2461 / 7184 = 0.34256681514476617
pruning-in-iteration extra time: 0.005053281784057617
Time: prepare 0.1470    bound 0.3631    transfer 0.0322    finalize 0.0395    func 0.5831    
Accumulated time: func 1.8883    prepare 0.3191    bound 1.3675    transfer 0.1120    finalize 0.0897    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05580 (21), -0.05489 (21), -0.05409 (21), -0.05136 (21), -0.05105 (21), -0.05084 (21), -0.05077 (21), -0.05034 (21), -0.04990 (21), -0.04952 (21), -0.04932 (21), -0.04913 (21), -0.04895 (21), -0.04893 (21), -0.04852 (21), -0.04806 (21), -0.04685 (21), -0.04680 (21), -0.04639 (21), -0.04624 (21), 
Length of domains: 4723
Time: pickout 0.0510    decision 0.2125    set_bounds 0.3213    solve 0.5846    add 0.0186    
Accumulated time: pickout 0.1139    decision 0.5722    set_bounds 0.6530    solve 1.8928    add 0.0689    
Current (lb-rhs): -0.055800437927246094
12500 domains visited
Cumulative time: 3.332211494445801

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 1394] [/input-8, 819] [/input-8, 819] 
pruning_in_iteration open status: True
ratio of positive domain = 3248 / 8192 = 0.396484375
pruning-in-iteration extra time: 0.005094766616821289
Time: prepare 0.1693    bound 0.3733    transfer 0.0599    finalize 0.0478    func 0.6516    
Accumulated time: func 2.5399    prepare 0.4887    bound 1.7408    transfer 0.1719    finalize 0.1375    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04988 (22), -0.04894 (22), -0.04818 (22), -0.04806 (21), -0.04615 (21), -0.04542 (22), -0.04502 (22), -0.04496 (22), -0.04484 (22), -0.04444 (22), -0.04391 (22), -0.04381 (21), -0.04353 (22), -0.04353 (21), -0.04353 (21), -0.04349 (22), -0.04315 (22), -0.04315 (22), -0.04308 (21), -0.04291 (22), 
Length of domains: 5571
Time: pickout 0.0652    decision 0.2351    set_bounds 0.3224    solve 0.6537    add 0.0217    
Accumulated time: pickout 0.1791    decision 0.8073    set_bounds 0.9755    solve 2.5464    add 0.0906    
Current (lb-rhs): -0.04988288879394531
17444 domains visited
current_vram/total_varm: 34.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.652831554412842

BaB round 11
batch: 5571
splitting decisions: 
split level 0: [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 819] [/input-8, 1185] [/input-8, 819] [/input-8, 819] 
pruning_in_iteration open status: True
ratio of positive domain = 5915 / 11142 = 0.530874169807934
pruning-in-iteration extra time: 0.005079030990600586
Time: prepare 0.2337    bound 0.3886    transfer 0.0517    finalize 0.2381    func 0.9137    
Accumulated time: func 3.4536    prepare 0.7227    bound 2.1294    transfer 0.2235    finalize 0.3756    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04657 (23), -0.04563 (23), -0.04488 (23), -0.04225 (22), -0.04213 (23), -0.04172 (23), -0.04149 (23), -0.04113 (23), -0.04056 (23), -0.04050 (23), -0.04036 (22), -0.04023 (23), -0.03978 (23), -0.03968 (23), -0.03928 (23), -0.03902 (23), -0.03867 (23), -0.03856 (23), -0.03776 (22), -0.03776 (23), 
Length of domains: 5227
Time: pickout 0.0820    decision 0.4879    set_bounds 0.2444    solve 0.9162    add 0.0302    
Accumulated time: pickout 0.2611    decision 1.2953    set_bounds 1.2199    solve 3.4626    add 0.1208    
Current (lb-rhs): -0.04656982421875
22671 domains visited
Cumulative time: 6.4466941356658936

BaB round 12
batch: 5227
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] 
pruning_in_iteration open status: True
ratio of positive domain = 6276 / 10454 = 0.6003443657929979
pruning-in-iteration extra time: 0.005013704299926758
Time: prepare 0.2221    bound 0.3728    transfer 0.0486    finalize 0.0626    func 0.7078    
Accumulated time: func 4.1614    prepare 0.9450    bound 2.5022    transfer 0.2721    finalize 0.4381    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04258 (24), -0.04167 (24), -0.04088 (24), -0.03888 (23), -0.03813 (24), -0.03747 (24), -0.03736 (24), -0.03713 (24), -0.03699 (23), -0.03676 (24), -0.03656 (24), -0.03627 (24), -0.03578 (24), -0.03547 (24), -0.03528 (24), -0.03523 (24), -0.03497 (24), -0.03482 (23), -0.03446 (24), -0.03382 (23), 
Length of domains: 4178
Time: pickout 0.0782    decision 0.3031    set_bounds 0.3839    solve 0.7102    add 0.0157    
Accumulated time: pickout 0.3393    decision 1.5984    set_bounds 1.6037    solve 4.1729    add 0.1365    
Current (lb-rhs): -0.04257774353027344
26849 domains visited
Cumulative time: 7.97465968132019

BaB round 13
batch: 4178
splitting decisions: 
split level 0: [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] [/input-8, 500] 
pruning_in_iteration open status: True
ratio of positive domain = 5315 / 8356 = 0.6360698898994734
pruning-in-iteration extra time: 0.0049571990966796875
Time: prepare 0.1734    bound 0.3498    transfer 0.0506    finalize 0.1989    func 0.7748    
Accumulated time: func 4.9361    prepare 1.1187    bound 2.8520    transfer 0.3228    finalize 0.6371    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03871 (25), -0.03791 (25), -0.03695 (25), -0.03450 (24), -0.03420 (25), -0.03362 (25), -0.03361 (25), -0.03323 (25), -0.03279 (25), -0.03257 (24), -0.03241 (25), -0.03185 (25), -0.03135 (25), -0.03131 (25), -0.03083 (24), -0.03036 (25), -0.03022 (25), -0.02975 (25), -0.02941 (24), -0.02932 (25), 
Length of domains: 3041
Time: pickout 0.0662    decision 0.3891    set_bounds 0.1885    solve 0.7763    add 0.0215    
Accumulated time: pickout 0.4055    decision 1.9875    set_bounds 1.7922    solve 4.9491    add 0.1580    
Current (lb-rhs): -0.03870868682861328
29890 domains visited
Cumulative time: 9.447773694992065

BaB round 14
batch: 3041
splitting decisions: 
split level 0: [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 1394] 
pruning_in_iteration open status: True
ratio of positive domain = 3841 / 6082 = 0.6315356790529432
pruning-in-iteration extra time: 0.0049991607666015625
Time: prepare 0.1237    bound 0.3264    transfer 0.0275    finalize 0.0371    func 0.5157    
Accumulated time: func 5.4518    prepare 1.2426    bound 3.1784    transfer 0.3502    finalize 0.6742    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03565 (26), -0.03457 (26), -0.03409 (26), -0.03139 (26), -0.03120 (26), -0.03078 (25), -0.03055 (26), -0.03019 (26), -0.02946 (26), -0.02913 (26), -0.02910 (26), -0.02899 (26), -0.02856 (25), -0.02848 (26), -0.02716 (26), -0.02707 (26), -0.02703 (26), -0.02693 (26), -0.02688 (25), -0.02681 (26), 
Length of domains: 2241
Time: pickout 0.0516    decision 0.1823    set_bounds 0.1361    solve 0.5172    add 0.0165    
Accumulated time: pickout 0.4571    decision 2.1698    set_bounds 1.9283    solve 5.4663    add 0.1745    
Current (lb-rhs): -0.035653114318847656
32131 domains visited
Cumulative time: 10.373093128204346

BaB round 15
batch: 2241
splitting decisions: 
split level 0: [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] [/input-8, 1240] 
pruning_in_iteration open status: True
ratio of positive domain = 2882 / 4482 = 0.6430165104863901
pruning-in-iteration extra time: 0.004945278167724609
Time: prepare 0.0899    bound 0.3161    transfer 0.0109    finalize 0.0255    func 0.4433    
Accumulated time: func 5.8951    prepare 1.3328    bound 3.4945    transfer 0.3611    finalize 0.6997    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03346 (27), -0.03237 (27), -0.03190 (27), -0.02902 (27), -0.02857 (26), -0.02832 (27), -0.02799 (27), -0.02775 (27), -0.02724 (27), -0.02691 (27), -0.02676 (27), -0.02638 (26), -0.02628 (27), -0.02563 (27), -0.02494 (27), -0.02466 (26), -0.02399 (27), -0.02387 (27), -0.02383 (27), -0.02380 (27), 
Length of domains: 1600
Time: pickout 0.0421    decision 0.2816    set_bounds 0.0965    solve 0.4444    add 0.0061    
Accumulated time: pickout 0.4993    decision 2.4514    set_bounds 2.0248    solve 5.9107    add 0.1805    
Current (lb-rhs): -0.03346443176269531
33731 domains visited
Cumulative time: 11.259213924407959

BaB round 16
batch: 1600
splitting decisions: 
split level 0: [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] 
pruning_in_iteration open status: True
ratio of positive domain = 2186 / 3200 = 0.683125
pruning-in-iteration extra time: 0.004887580871582031
Time: prepare 0.0621    bound 0.2731    transfer 0.0119    finalize 0.1676    func 0.5151    
Accumulated time: func 6.4102    prepare 1.3951    bound 3.7676    transfer 0.3730    finalize 0.8673    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02700 (28), -0.02588 (28), -0.02543 (28), -0.02489 (27), -0.02458 (28), -0.02346 (28), -0.02305 (28), -0.02288 (27), -0.02257 (28), -0.02187 (28), -0.02152 (28), -0.02106 (28), -0.02098 (27), -0.02077 (28), -0.02043 (28), -0.02032 (28), -0.02017 (28), -0.01983 (28), -0.01979 (27), -0.01945 (28), 
Length of domains: 1014
Time: pickout 0.0269    decision 0.1017    set_bounds 0.0671    solve 0.5162    add 0.0083    
Accumulated time: pickout 0.5261    decision 2.5531    set_bounds 2.0920    solve 6.4269    add 0.1888    
Current (lb-rhs): -0.027001380920410156
34745 domains visited
Cumulative time: 11.9944748878479

BaB round 17
batch: 1014
splitting decisions: 
split level 0: [/input-8, 1185] [/input-8, 1185] [/input-8, 1185] [/input-8, 493] [/input-8, 493] [/input-8, 493] [/input-8, 1097] [/input-8, 139] [/input-8, 493] [/input-8, 1240] 
pruning_in_iteration open status: True
ratio of positive domain = 1452 / 2028 = 0.7159763313609467
pruning-in-iteration extra time: 0.0048675537109375
Time: prepare 0.0396    bound 0.2495    transfer 0.0067    finalize 0.0108    func 0.3078    
Accumulated time: func 6.7180    prepare 1.4350    bound 4.0171    transfer 0.3797    finalize 0.8781    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02063 (29), -0.01951 (29), -0.01906 (29), -0.01879 (29), -0.01816 (28), -0.01807 (29), -0.01766 (29), -0.01721 (29), -0.01696 (29), -0.01651 (29), -0.01615 (29), -0.01613 (28), -0.01600 (29), -0.01545 (29), -0.01516 (29), -0.01488 (29), -0.01484 (29), -0.01445 (29), -0.01439 (29), -0.01435 (29), 
Length of domains: 576
Time: pickout 0.0192    decision 0.0698    set_bounds 0.0422    solve 0.3082    add 0.0029    
Accumulated time: pickout 0.5454    decision 2.6229    set_bounds 2.1342    solve 6.7351    add 0.1917    
Current (lb-rhs): -0.020627975463867188
35321 domains visited
Cumulative time: 12.444888591766357

BaB round 18
batch: 576
splitting decisions: 
split level 0: [/input-8, 139] [/input-8, 139] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] [/input-8, 885] 
pruning_in_iteration open status: True
ratio of positive domain = 856 / 1152 = 0.7430555555555556
pruning-in-iteration extra time: 0.004745960235595703
Time: prepare 0.0221    bound 0.2293    transfer 0.0032    finalize 0.0055    func 0.2602    
Accumulated time: func 6.9782    prepare 1.4573    bound 4.2464    transfer 0.3829    finalize 0.8836    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01639 (30), -0.01579 (30), -0.01464 (30), -0.01455 (30), -0.01395 (30), -0.01371 (30), -0.01309 (30), -0.01279 (30), -0.01227 (30), -0.01197 (30), -0.01191 (29), -0.01160 (30), -0.01132 (30), -0.01128 (30), -0.01124 (30), -0.01099 (30), -0.01088 (30), -0.01064 (30), -0.01042 (30), -0.01037 (30), 
Length of domains: 296
Time: pickout 0.0142    decision 0.0465    set_bounds 0.0244    solve 0.2604    add 0.0017    
Accumulated time: pickout 0.5596    decision 2.6694    set_bounds 2.1586    solve 6.9956    add 0.1935    
Current (lb-rhs): -0.016391754150390625
35617 domains visited
Cumulative time: 12.796483755111694

BaB round 19
batch: 296
splitting decisions: 
split level 0: [/input-8, 139] [/input-8, 139] [/input-8, 1097] [/input-8, 139] [/input-8, 1325] [/input-8, 139] [/input-8, 139] [/input-8, 883] [/input-8, 1097] [/input-8, 883] 
pruning_in_iteration open status: True
ratio of positive domain = 452 / 592 = 0.7635135135135135
pruning-in-iteration extra time: 0.004673957824707031
Time: prepare 0.0116    bound 0.1665    transfer 0.0018    finalize 0.0034    func 0.1835    
Accumulated time: func 7.1617    prepare 1.4691    bound 4.4129    transfer 0.3847    finalize 0.8870    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01179 (31), -0.01119 (31), -0.01005 (31), -0.00992 (31), -0.00964 (31), -0.00931 (31), -0.00901 (31), -0.00838 (30), -0.00817 (31), -0.00816 (31), -0.00790 (31), -0.00767 (31), -0.00756 (31), -0.00725 (31), -0.00686 (31), -0.00678 (31), -0.00665 (31), -0.00646 (30), -0.00642 (31), -0.00629 (31), 
Length of domains: 140
Time: pickout 0.0073    decision 0.0313    set_bounds 0.0125    solve 0.1836    add 0.0015    
Accumulated time: pickout 0.5669    decision 2.7006    set_bounds 2.1712    solve 7.1791    add 0.1950    
Current (lb-rhs): -0.011789321899414062
35757 domains visited
Cumulative time: 13.03480577468872

BaB round 20
batch: 140
splitting decisions: 
split level 0: [/input-8, 1325] [/input-8, 1325] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 1955] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 884] 
pruning_in_iteration open status: True
ratio of positive domain = 223 / 280 = 0.7964285714285715
pruning-in-iteration extra time: 0.0048978328704833984
Time: prepare 0.0056    bound 0.1208    transfer 0.0010    finalize 0.0015    func 0.1289    
Accumulated time: func 7.2906    prepare 1.4749    bound 4.5337    transfer 0.3857    finalize 0.8885    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00905 (32), -0.00824 (32), -0.00729 (32), -0.00715 (32), -0.00679 (32), -0.00634 (32), -0.00598 (32), -0.00539 (32), -0.00529 (32), -0.00504 (32), -0.00471 (32), -0.00450 (32), -0.00432 (31), -0.00406 (32), -0.00400 (32), -0.00389 (32), -0.00355 (32), -0.00353 (32), -0.00339 (32), -0.00323 (32), 
Length of domains: 57
Time: pickout 0.0034    decision 0.0223    set_bounds 0.0061    solve 0.1290    add 0.0013    
Accumulated time: pickout 0.5703    decision 2.7230    set_bounds 2.1773    solve 7.3081    add 0.1963    
Current (lb-rhs): -0.009045600891113281
35814 domains visited
Cumulative time: 13.198069095611572

BaB round 21
batch: 57
splitting decisions: 
split level 0: [/input-8, 1955] [/input-8, 884] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] [/input-8, 891] 
split level 1: [/input-8, 401] [/input-8, 139] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 931] [/input-8, 139] [/input-8, 139] [/input-8, 139] [/input-8, 931] 
pruning_in_iteration open status: True
ratio of positive domain = 222 / 228 = 0.9736842105263158
pruning-in-iteration extra time: 0.004594326019287109
Time: prepare 0.0045    bound 0.1169    transfer 0.0013    finalize 0.0012    func 0.1239    
Accumulated time: func 7.4145    prepare 1.4796    bound 4.6506    transfer 0.3870    finalize 0.8897    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00289 (34), -0.00207 (34), -0.00114 (34), -0.00088 (34), -0.00005 (34), -0.00002 (34), 
Length of domains: 6
Time: pickout 0.0020    decision 0.0135    set_bounds 0.0062    solve 0.1240    add 0.0008    
Accumulated time: pickout 0.5723    decision 2.7364    set_bounds 2.1835    solve 7.4321    add 0.1971    
Current (lb-rhs): -0.00289154052734375
35820 domains visited
Cumulative time: 13.34526538848877

BaB round 22
batch: 6
splitting decisions: 
split level 0: [/input-8, 430] [/input-8, 430] [/input-8, 430] [/input-8, 430] [/input-8, 430] [/input-8, 430] 
split level 1: [/input-8, 1097] [/input-8, 1097] [/input-8, 1097] [/input-8, 1097] [/input-8, 1097] [/input-8, 1097] 
split level 2: [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] [/input-8, 1955] 
split level 3: [/input-8, 1958] [/input-8, 1958] [/input-8, 1958] [/input-8, 1958] [/input-8, 1958] [/input-8, 1958] 
split level 4: [/input-8, 1385] [/input-8, 1385] [/input-8, 1385] [/input-8, 1385] [/input-8, 1385] [/input-8, 1385] 
split level 5: [/input-8, 1383] [/input-8, 1383] [/input-8, 1383] [/input-8, 1383] [/input-8, 1383] [/input-8, 1383] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 4.220008850097656e-05
Time: prepare 0.0074    bound 0.0098    transfer 0.0010    finalize 0.0019    func 0.0202    
Accumulated time: func 7.4347    prepare 1.4873    bound 4.6604    transfer 0.3880    finalize 0.8916    
all_split False
Length of domains: 0
Time: pickout 0.0010    decision 0.0206    set_bounds 0.0196    solve 0.0203    add 0.0001    
Accumulated time: pickout 0.5733    decision 2.7570    set_bounds 2.2031    solve 7.4524    add 0.1971    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
35820 domains visited
Cumulative time: 13.407411813735962

Result: safe in 15.7565 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.62381744, -28.09670830, -18.92805672, -21.62400627, -18.04868507,
         -20.67170334, -18.38792801, -22.29936600, -26.56884384, -27.05737495]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 230, 1, 686] with unstable size 229 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 686] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [229]; unstable size 229; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 229] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 229] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.50022125,  8.58374977,  0.05487373,  2.84900141,  1.87417769,
         -0.72468829,  3.40504503,  7.17037439,  7.46117973]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.62381744, -28.09670830, -18.92805672, -21.62400627, -18.04868507,
         -20.67170334, -18.38792801, -22.29936600, -26.56884384, -27.05737495]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.58909225, -27.92033958, -18.78480148, -21.55149841, -18.15887642,
          -20.63109398, -17.89745522, -22.48893738, -26.55434799, -26.90717125]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26142120]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0527 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.05389786, -20.54568100, -25.38948441, -26.07571030, -24.92573357,
         -26.81814766, -25.31372643, -25.39832497, -22.18379402, -23.40080070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 595] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 595] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 232] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.74438858, 2.89176846, 3.72229576, 2.51304817, 4.30712175, 2.80102062,
         3.10480452, 0.20504236, 1.77497375]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0656 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.32361412, -25.52174950, -20.63148117, -22.61431122, -22.40266609,
         -22.09627724, -23.98217392, -22.95088196, -26.26723480, -25.69747353]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [912]; unstable size 912; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 912] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 912] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 912] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 239] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.74784970, 3.37162113, 1.17322922, 0.89480495, 0.68540376, 2.25614333,
         1.51441860, 4.23806000, 3.34960842]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0508 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.69555855, -19.83600044, -17.26213837, -16.53295326, -15.76759911,
         -16.55274010, -15.97445679, -15.69591236, -22.56094933, -18.99766541]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [484]; unstable size 484; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 223, 1, 484] with unstable size 222 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 484] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 484] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [222]; unstable size 222; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 222] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 222] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.12594271,  2.36834192,  0.02151203, -0.42955112, -0.99394369,
         -0.44192958, -1.36476946,  4.78464174,  1.58999228]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.69555855, -19.83600044, -17.26213837, -16.53295326, -15.76759911,
         -16.55274010, -15.97445679, -15.69591236, -22.56094933, -18.99766541]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.83631516, -19.97811317, -17.36703491, -16.61606979, -15.69711494,
          -16.68176460, -15.85755348, -16.20885468, -22.66589165, -19.27580452],
         [-21.83631516, -19.97811317, -17.36703491, -16.61606979, -15.69711494,
          -16.68176460, -15.85755348, -16.20885468, -22.66589165, -19.27580452]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.40721512, -0.51173973,  0.47290993, -0.35130119]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0737 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.74517250, -27.26931763, -22.31864548, -21.42955971, -22.42046928,
         -21.44980049, -22.51526642, -20.76612473, -26.78885269, -23.30550575]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [399]; unstable size 399; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 176, 1, 399] with unstable size 175 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 399] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 399] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [175]; unstable size 175; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 175] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 175] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.71335745,  3.37155819, -1.61985373, -0.57951534, -1.65425384,
         -0.81910706, -2.40787220,  3.42854500, -0.36425304]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.74517250, -27.26931763, -22.31864548, -21.42955971, -22.42046928,
         -21.44980049, -22.51526642, -20.76612473, -26.78885269, -23.30550575]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.74517059, -27.26931572, -22.31864166, -21.42955780, -22.42046738,
          -21.44979858, -22.51526833, -20.76612663, -26.78884697, -23.30550766],
         [-25.74517059, -27.26931572, -22.31864166, -21.42955780, -22.42046738,
          -21.44979858, -22.51526833, -20.76612663, -26.78884697, -23.30550766]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.88908386,  0.10182571, -0.86884308,  0.19662666, -1.55251503,
           0.98686600]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.06668091, -12.17250633, -18.19817734, -17.74991226, -18.22573662,
         -18.83922386, -18.43832207, -18.79791641, -13.75891685, -14.38429832]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [591]; unstable size 591; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 591] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 591] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 591] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.43584156, 4.09200811, 4.03862000, 4.51079702, 5.00953007, 4.46496391,
         5.03483009, 0.23301840, 1.42504871]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0631 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.34238243, -16.93456459, -14.43105412, -14.20242596, -14.38679028,
         -14.68807125, -15.41123962, -15.82969379, -17.16383553, -15.87702465]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [859]; unstable size 859; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 248, 1, 859] with unstable size 247 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 859] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 859] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [247]; unstable size 247; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 247] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 247] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.60208201, -0.84271908, -2.06194067, -2.20308495, -2.22541618,
         -1.86848950, -1.36994278, -0.36857593, -1.56844378]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.34238243, -16.93456459, -14.43105412, -14.20242596, -14.38679028,
         -14.68807125, -15.41123962, -15.82969379, -17.16383553, -15.87702465]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.34238243, -16.93456650, -14.43105221, -14.20242500, -14.38679028,
          -14.68807125, -15.41123772, -15.82969379, -17.16383553, -15.87702370],
         [-16.34238243, -16.93456650, -14.43105221, -14.20242500, -14.38679028,
          -14.68807125, -15.41123772, -15.82969379, -17.16383553, -15.87702370]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.93114471,  1.52332878, -0.98018551, -1.20881271, -1.02444744,
          -0.72316647,  0.41845608,  1.75259781,  0.46578598]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0684 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.16949272, -23.99048996, -31.56820297, -31.41168404, -30.28091240,
         -31.78048897, -32.67536545, -30.17310143, -29.00139236, -24.21942329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 740] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 740] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 244] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.38111258,  5.21995211,  5.14613533,  3.91153717,  5.43957090,
          6.09781694,  3.61251163,  3.57682633, -0.52638149]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.16949272, -23.99048996, -31.56820297, -31.41168404, -30.28091240,
         -31.78048897, -32.67536545, -30.17310143, -29.00139236, -24.21942329]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.37867928, -23.65236282, -30.67041016, -30.36244011, -29.32039833,
          -30.71739769, -31.69260788, -29.13233376, -28.37980652, -23.46657944]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.18578339]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0516 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.87058258, -22.74460030, -18.83897781, -17.07898903, -18.22540092,
         -16.89878654, -19.11079788, -18.79213715, -26.21196175, -21.30853462]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [669]; unstable size 669; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 669] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 669] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 669] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 240] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.66332388,  4.03361607,  0.93628383, -0.12254733,  0.23944330,
          1.05922604,  0.79270172,  7.63720131,  2.90536690]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.87058258, -22.74460030, -18.83897781, -17.07898903, -18.22540092,
         -16.89878654, -19.11079788, -18.79213715, -26.21196175, -21.30853462]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.48543358, -22.25600815, -18.48466873, -16.74746132, -17.88062477,
          -16.75131416, -18.64585114, -18.60153580, -25.74396324, -20.97401619]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00385284]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0637 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
         -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [740]; unstable size 740; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 266, 1, 740] with unstable size 265 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 740] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 740] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [265]; unstable size 265; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 265] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 265] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.72773409,  3.26004601,  3.78023934,  3.84159517,  3.89679241,
          4.82130146,  3.72940302, -0.13638735,  0.71589291]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
         -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.90it/s]100%|██████████| 1/1 [00:00<00:00,  8.89it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.76562691, -17.04459190, -21.88329887, -22.15384293, -22.44637489,
          -22.49815941, -23.33575630, -22.66186714, -17.35911942, -18.43116951]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31452751]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1149 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.383888244628906
alpha/beta optimization time: 1.1445889472961426
initial alpha-crown bounds: tensor([[ 1.80881119,  3.35405636,  3.86240530,  3.93695259,  3.99371862,
          4.90125370,  3.85100245, -0.08674812,  0.76243526]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.08674812316894531
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68241262435913
Verifying property 0 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8088111877441406.

Properties batch 1, size 1
Remaining timeout: 198.53923749923706
Verifying property 1 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3540563583374023.

Properties batch 2, size 1
Remaining timeout: 198.43078184127808
Verifying property 2 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.862405300140381.

Properties batch 3, size 1
Remaining timeout: 198.3230791091919
Verifying property 3 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.936952590942383.

Properties batch 4, size 1
Remaining timeout: 198.21460461616516
Verifying property 4 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9937186241149902.

Properties batch 5, size 1
Remaining timeout: 198.11278414726257
Verifying property 5 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.901253700256348.

Properties batch 6, size 1
Remaining timeout: 198.01149678230286
Verifying property 6 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8510024547576904.

Properties batch 7, size 1
Remaining timeout: 197.90964031219482
Verifying property 7 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08674812]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.02754021, -16.85969925, -22.22765350, -22.47852516, -22.75400734,
        -22.81135941, -23.67437744, -22.92312431, -17.78327179, -18.35700417],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08674812]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 740
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 259
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 1015
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 64] 
split level 3: [/input-12, 29] 
split level 4: [/input-12, 42] 
split level 5: [/input-12, 59] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 61] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.172325134277344e-05
Time: prepare 0.0018    bound 0.0040    transfer 0.0009    finalize 0.0017    func 0.0084    
Accumulated time: func 0.0084    prepare 0.0022    bound 0.0040    transfer 0.0009    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.0085    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0232    set_bounds 0.0162    solve 0.0085    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05250096321105957


Properties batch 8, size 1
Remaining timeout: 197.71931862831116
Verifying property 8 with 1 instances.
##### Instance 93 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.762435257434845.
Result: safe in 2.3868 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
         -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 511] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 511] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 148] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.11264598,  7.84995270,  2.51627040,  2.42221284,  2.71285677,
          2.42410851,  5.54274893,  0.54273665,  7.53125143]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
         -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.95301628, -37.16675568, -28.61315918, -31.63938332, -31.43132591,
          -31.90670967, -31.58338928, -34.70899582, -29.83979225, -36.90626907]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.66014290]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0603 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.89297295, -27.33354378, -29.85372162, -29.49278831, -29.63881493,
         -29.50118065, -28.79456902, -32.01272583, -30.67852783, -30.54553604]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [545]; unstable size 545; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 545] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 545] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 545] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 206] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.09797311,  0.63166332,  0.38092375,  0.26649189,  0.20289564,
          0.00656414,  2.20104122,  2.04292154,  2.05919981]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.89297295, -27.33354378, -29.85372162, -29.49278831, -29.63881493,
         -29.50118065, -28.79456902, -32.01272583, -30.67852783, -30.54553604]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.38336754, -27.56085205, -29.44116592, -29.09783745, -29.24282837,
          -29.13388443, -28.50870705, -31.71228409, -30.45660210, -30.53284836]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.17748451]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0546 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.40174294, -21.80084610, -13.97534084, -16.28988266, -14.66720581,
         -15.45098114, -14.34288788, -16.27135849, -21.38418579, -20.94428825]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [473]; unstable size 473; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 473] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 473] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 473] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 261] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.13220239,  5.32813597, -1.68543863,  0.95246202, -1.03167844,
         -0.07594645,  0.28766179,  5.26238632,  4.65756130]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.40174294, -21.80084610, -13.97534084, -16.28988266, -14.66720581,
         -15.45098114, -14.34288788, -16.27135849, -21.38418579, -20.94428825]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.40174294, -21.80084610, -13.97533989, -16.28988647, -14.66720772,
          -15.45098114, -14.34288788, -16.27136040, -21.38418961, -20.94428825],
         [-17.40174294, -21.80084610, -13.97533989, -16.28988647, -14.66720772,
          -15.45098114, -14.34288788, -16.27136040, -21.38418961, -20.94428825]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.36754799,  0.32431984,  1.10809326]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
         -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1135]; unstable size 1135; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 418, 1, 1135] with unstable size 417 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1135] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1135] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [417]; unstable size 417; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 417] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 417] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.41564417,  4.65418434,  0.18066597, -0.18956983,  0.62921107,
         -0.03981164,  1.17114019,  2.01148963,  3.41380882]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
         -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.49it/s]100%|██████████| 1/1 [00:00<00:00,  8.49it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.84564590, -22.40072250, -14.85943127, -16.11748123, -15.43138123,
          -16.66874123, -16.04832268, -17.14625168, -19.11427307, -20.76480103],
         [-17.84564590, -22.40072250, -14.85943127, -16.11748123, -15.43138123,
          -16.66874123, -16.04832268, -17.14625168, -19.11427307, -20.76480103]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.57194996, 1.18889141]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1226 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.51242446899414
alpha/beta optimization time: 1.154850959777832
initial alpha-crown bounds: tensor([[ 1.54290366,  4.87704563,  0.28549969, -0.07817471,  0.74323332,
          0.05854937,  1.29010916,  2.20426631,  3.58899164]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.07817471027374268
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66806769371033
Verifying property 0 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5429036617279053.

Properties batch 1, size 1
Remaining timeout: 198.53623795509338
Verifying property 1 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.877045631408691.

Properties batch 2, size 1
Remaining timeout: 198.4279272556305
Verifying property 2 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2854996919631958.

Properties batch 3, size 1
Remaining timeout: 198.32575225830078
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.07817471]], device='cuda:0') need to verify.
Model prediction is: tensor([-18.44726753, -23.07283783, -15.31714439, -16.86220932, -16.37182045,
        -17.43654442, -16.84148979, -17.91537094, -19.79871750, -21.47072220],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.07817471]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1135
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 400
Node /15 input 0: size torch.Size([100]) unstable 27
-----------------
# of unstable neurons: 1562
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 4] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 14] 
split level 7: [/input-12, 55] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.363059997558594e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0009    finalize 0.0016    func 0.0083    
Accumulated time: func 0.0083    prepare 0.0022    bound 0.0039    transfer 0.0009    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0223    set_bounds 0.0161    solve 0.0084    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0223    set_bounds 0.0161    solve 0.0084    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05147576332092285


Properties batch 4, size 1
Remaining timeout: 198.13528323173523
Verifying property 4 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.743233323097229.

Properties batch 5, size 1
Remaining timeout: 198.02974557876587
Verifying property 5 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.05854937434196472.

Properties batch 6, size 1
Remaining timeout: 197.91389775276184
Verifying property 6 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2901091575622559.

Properties batch 7, size 1
Remaining timeout: 197.8112437725067
Verifying property 7 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.204266309738159.

Properties batch 8, size 1
Remaining timeout: 197.70893454551697
Verifying property 8 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.588991641998291.
Result: safe in 2.3938 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.06963348, -22.13847923, -19.43040848, -17.05935478, -17.91039848,
         -16.70587921, -18.83517647, -19.20193481, -21.40512085, -23.21081352]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [821]; unstable size 821; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 821] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 821] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 821] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 267] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.66440141,  3.63743830,  1.26127386,  0.04986411, -0.05376542,
          0.98364013,  0.99622262,  2.72314167,  4.88065434]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.06963348, -22.13847923, -19.43040848, -17.05935478, -17.91039848,
         -16.70587921, -18.83517647, -19.20193481, -21.40512085, -23.21081352]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.13606453, -22.23001099, -19.50859642, -17.40411186, -17.75813293,
          -17.10116959, -19.04270172, -19.16930008, -21.49855804, -23.37729836]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.65696335]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1158 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 3th iter
best_l after optimization: 16.604549407958984
alpha/beta optimization time: 0.04385685920715332
initial alpha-crown bounds: tensor([[1.72636950e+00, 3.70138025e+00, 1.30631220e+00, 6.20777607e-02,
         6.06715679e-04, 1.02092123e+00, 1.04711568e+00, 2.80543780e+00,
         4.93432808e+00]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.0006067156791687012
verified with init bound!
Result: safe-incomplete in 0.2315 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.15164471, -15.32303524, -10.34104061, -11.69358635, -11.02870369,
         -12.56815910, -10.29522896, -13.35671329, -14.96125889, -15.40310478]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1104]; unstable size 1104; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 266, 1, 1104] with unstable size 265 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 1104] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1104] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [265]; unstable size 265; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 265] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 265] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.64230919,  2.91880083, -0.80557728,  0.38735640, -0.40144277,
          1.09796846,  1.71821117,  2.96996212,  2.98997784]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.15164471, -15.32303524, -10.34104061, -11.69358635, -11.02870369,
         -12.56815910, -10.29522896, -13.35671329, -14.96125889, -15.40310478]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.90528393, -15.24466515,  -9.96267986, -11.51619816, -10.76578522,
          -12.35760880, -10.27429962, -13.08486748, -14.78484154, -15.26928425],
         [-13.90528393, -15.24466515,  -9.96267986, -11.51619816, -10.76578522,
          -12.35760880, -10.27429962, -13.08486748, -14.78484154, -15.26928425]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31161976,  0.49148560]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0526 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.15521240, -20.46267700, -15.48517609, -15.11612129, -15.12829685,
         -14.53323936, -17.56829453, -16.12021637, -20.15639496, -18.95636940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 775] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 775] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 275] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.33888221,  3.17010021, -0.78345788, -1.16919291, -0.99560732,
          1.16705465, -0.86630511,  3.00003290,  1.93420362]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-18.15521240, -20.46267700, -15.48517609, -15.11612129, -15.12829685,
         -14.53323936, -17.56829453, -16.12021637, -20.15639496, -18.95636940]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.15521240, -20.46267509, -15.48517513, -15.11611938, -15.12829590,
          -14.53323841, -17.56829262, -16.12021637, -20.15639305, -18.95636940],
         [-18.15521240, -20.46267509, -15.48517513, -15.11611938, -15.12829590,
          -14.53323841, -17.56829262, -16.12021637, -20.15639305, -18.95636940]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36905575,  0.01217651, -0.58288097,  1.00409698]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0802 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-32.25936890, -36.14345932, -37.27095795, -38.62052536, -37.58951950,
         -39.79058075, -40.22500229, -39.67473602, -32.04320145, -35.54521942]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1007]; unstable size 1007; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 1007] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 1007] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1007] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 260] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62466019,  2.95583344,  3.49480152,  5.00074291,  3.80081558,
          5.96756840,  6.38276291,  5.76929712,  2.46701241]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-32.25936890, -36.14345932, -37.27095795, -38.62052536, -37.58951950,
         -39.79058075, -40.22500229, -39.67473602, -32.04320145, -35.54521942]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-31.96601677, -35.98268127, -36.94070435, -38.45012283, -37.27670288,
          -39.54294205, -39.97399521, -39.33332825, -32.26424026, -35.37623596]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.29822350]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0054 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0317 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.35278130, -31.36741257, -23.66108131, -25.04328346, -24.10462570,
         -25.23495674, -26.15161133, -25.66592026, -29.01111603, -29.58918571]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [744]; unstable size 744; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 744] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 744] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 744] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 272] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.79987323,  5.21834946, -1.55336571, -0.28184438, -0.22590351,
          0.73269272,  0.47210917,  3.03185987,  3.45756865]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.35278130, -31.36741257, -23.66108131, -25.04328346, -24.10462570,
         -25.23495674, -26.15161133, -25.66592026, -29.01111603, -29.58918571]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.35277939, -31.36741257, -23.66108322, -25.04328346, -24.10462570,
          -25.23495865, -26.15161514, -25.66592407, -29.01112175, -29.58918571],
         [-27.35277939, -31.36741257, -23.66108322, -25.04328346, -24.10462570,
          -25.23495865, -26.15161514, -25.66592407, -29.01112175, -29.58918571]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44354248,  0.93865776,  1.13033295]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0574 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.22183990, -23.66624069, -16.29309082, -19.27029610, -15.39398766,
         -19.13426781, -17.66785431, -19.55938721, -21.54466057, -23.50271797]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1067]; unstable size 1067; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 267, 1, 1067] with unstable size 266 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 1067] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1067] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [266]; unstable size 266; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 266] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.72265244, 6.91143370, 0.00909716, 2.97993946, 2.78059292, 0.93534523,
         3.08999920, 4.73980522, 6.88012981]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
         -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [905]; unstable size 905; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 307, 1, 905] with unstable size 306 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 905] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 905] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [306]; unstable size 306; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 306] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 306] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.86118591,  2.95259547, -0.24725580,  1.06830430,  0.89491725,
          1.90242517,  0.80980361,  3.26965976,  2.34717989]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
         -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.87it/s]100%|██████████| 1/1 [00:00<00:00,  8.87it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.12218666, -24.16842842, -19.76392746, -20.60020447, -21.07238007,
          -19.21739769, -22.07514381, -21.27367401, -24.39806366, -23.28563499]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.54652977]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1153 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.521696090698242
alpha/beta optimization time: 1.1449527740478516
initial alpha-crown bounds: tensor([[ 1.94473171,  3.04443955, -0.17711711,  1.08993280,  0.95973730,
          1.94066238,  0.88277894,  3.39136600,  2.44516420]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.17711710929870605
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67782855033875
Verifying property 0 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9447317123413086.

Properties batch 1, size 1
Remaining timeout: 198.54386448860168
Verifying property 1 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0444395542144775.

Properties batch 2, size 1
Remaining timeout: 198.44195079803467
Verifying property 2 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17711711]], device='cuda:0') need to verify.
Model prediction is: tensor([-22.31546021, -24.12434387, -20.03258896, -20.35837746, -21.19475365,
        -18.88838959, -21.96802902, -21.15868759, -24.55088043, -23.12867355],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17711711]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 905
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 297
Node /15 input 0: size torch.Size([100]) unstable 22
-----------------
# of unstable neurons: 1224
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 24] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 7] 
split level 5: [/input-12, 59] 
split level 6: [/input-12, 50] 
split level 7: [/input-8, 421] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.57763671875e-05
Time: prepare 0.0031    bound 0.0039    transfer 0.0009    finalize 0.0018    func 0.0098    
Accumulated time: func 0.0098    prepare 0.0036    bound 0.0039    transfer 0.0009    finalize 0.0018    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0174    solve 0.0099    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0223    set_bounds 0.0174    solve 0.0099    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05464434623718262


Properties batch 3, size 1
Remaining timeout: 198.2658166885376
Verifying property 3 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0899327993392944.

Properties batch 4, size 1
Remaining timeout: 198.16106390953064
Verifying property 4 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9597373008728027.

Properties batch 5, size 1
Remaining timeout: 198.0494601726532
Verifying property 5 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9406623840332031.

Properties batch 6, size 1
Remaining timeout: 197.94669485092163
Verifying property 6 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8827789425849915.

Properties batch 7, size 1
Remaining timeout: 197.84583806991577
Verifying property 7 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3913660049438477.

Properties batch 8, size 1
Remaining timeout: 197.74466037750244
Verifying property 8 with 1 instances.
##### Instance 104 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.445164203643799.
Result: safe in 2.3561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.51308250, -22.43931961, -18.50501633, -19.17534065, -19.69705963,
         -19.25070381, -20.29491043, -19.66059494, -20.88692856, -21.50129509]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [811]; unstable size 811; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 309, 1, 811] with unstable size 308 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 811] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 811] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [308]; unstable size 308; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 308] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 308] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.88940120,  0.17124438, -2.58539438, -1.63983202, -1.31377983,
         -1.55795765, -0.86024094, -1.02569282, -0.27762103]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.51308250, -22.43931961, -18.50501633, -19.17534065, -19.69705963,
         -19.25070381, -20.29491043, -19.66059494, -20.88692856, -21.50129509]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.51308632, -22.43931770, -18.50501251, -19.17533684, -19.69705772,
          -19.25070381, -20.29491043, -19.66059494, -20.88693047, -21.50129509],
         [-19.51308632, -22.43931770, -18.50501251, -19.17533684, -19.69705772,
          -19.25070381, -20.29491043, -19.66059494, -20.88693047, -21.50129509]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.14750862, -1.15558243, -0.48525810,  0.03646278, -0.40989113,
           0.63431549,  1.22633553,  1.84070015]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0931 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
         -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [794]; unstable size 794; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 794] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 794] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 794] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 220] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78699064,  3.17528391,  2.83466101,  2.43643284,  3.92167902,
          3.64071131,  3.01096916, -1.71908045,  0.30822122]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
         -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.87668610, -20.48638916, -25.85806274, -25.13366127, -24.85799789,
          -26.38156319, -26.31613541, -25.62492752, -20.27039146, -21.82055855]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21599770]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.74126989,  0.74126989,  0.77301592,  ...,  0.36031753,
             0.31269848,  0.28095245],
           [ 0.72539687,  0.70952386,  0.74126989,  ...,  0.32857150,
             0.29682547,  0.24920642],
           [ 0.70952386,  0.70952386,  0.72539687,  ...,  0.34444451,
             0.31269848,  0.28095245],
           ...,
           [-0.89365077, -0.89365077, -0.87777776,  ..., -1.43333328,
            -1.30634916, -1.22698402],
           [-0.95714283, -0.94126981, -0.90952379,  ..., -1.33809519,
            -1.24285710, -1.22698402],
           [-1.00476182, -0.94126981, -0.94126981,  ..., -1.24285710,
            -1.21111107, -1.19523799]],

          [[ 0.99838978,  0.99838978,  1.03059590,  ...,  0.67632860,
             0.62801939,  0.59581327],
           [ 0.96618366,  0.96618366,  0.99838978,  ...,  0.64412248,
             0.59581327,  0.56360716],
           [ 0.96618366,  0.96618366,  0.99838978,  ...,  0.61191636,
             0.57971025,  0.53140104],
           ...,
           [-0.78904986, -0.80515295, -0.78904986,  ..., -1.35265696,
            -1.22383249, -1.14331722],
           [-0.86956519, -0.85346210, -0.82125598,  ..., -1.25603855,
            -1.15942025, -1.14331722],
           [-0.90177131, -0.85346210, -0.85346210,  ..., -1.14331722,
            -1.12721407, -1.11111104]],

          [[ 1.21589243,  1.18590748,  1.18590748,  ...,  0.90104967,
             0.87106466,  0.84107965],
           [ 1.18590748,  1.15592217,  1.14092970,  ...,  0.87106466,
             0.84107965,  0.79610211],
           [ 1.15592217,  1.12593722,  1.09595215,  ...,  0.82608712,
             0.79610211,  0.76611710],
           ...,
           [-0.58320838, -0.59820086, -0.58320838,  ..., -1.13793111,
            -1.01799107, -0.94302845],
           [-0.68815589, -0.65817088, -0.64317840,  ..., -1.09295356,
            -0.97301346, -0.92803597],
           [-0.73313338, -0.67316341, -0.67316341,  ..., -1.01799107,
            -0.94302845, -0.89805096]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0683 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.65453911, -28.29750824, -25.45104980, -28.11194038, -25.15310860,
         -28.19610023, -28.02035522, -26.93565750, -23.93723679, -27.98169518]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [701]; unstable size 701; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 241, 1, 701] with unstable size 240 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 701] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 701] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [240]; unstable size 240; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 240] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 240] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.39394474, 1.70091999, 3.99040151, 1.13504910, 3.87649202, 3.90128326,
         2.66181922, 0.08498117, 3.97777319]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0457 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.15261269, -17.94160461, -14.95448303, -13.92990398, -14.40570259,
         -14.65692043, -13.89788246, -15.86449909, -18.80389977, -17.83309364]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [800]; unstable size 800; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 364, 1, 800] with unstable size 363 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 800] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 800] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [363]; unstable size 363; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 363] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 363] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.67310333,  1.51413035, -0.13763928, -0.79897356,  0.29746616,
         -1.22556436,  0.01225746,  2.61003351,  1.46175122]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.15261269, -17.94160461, -14.95448303, -13.92990398, -14.40570259,
         -14.65692043, -13.89788246, -15.86449909, -18.80389977, -17.83309364]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.15261078, -17.94160461, -14.95448208, -13.92990494, -14.40570354,
          -14.65692043, -13.89788151, -15.86450100, -18.80390167, -17.83309174],
         [-17.15261078, -17.94160461, -14.95448208, -13.92990494, -14.40570354,
          -14.65692043, -13.89788151, -15.86450100, -18.80390167, -17.83309174]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.02457714,  0.47579861, -0.03202343]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0416 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.79030228, -30.41434669, -27.64798355, -28.61847115, -28.48152161,
         -29.57408333, -29.43395233, -30.51341820, -29.47771645, -30.12065697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [497]; unstable size 497; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 140, 1, 497] with unstable size 139 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 497] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 497] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [139]; unstable size 139; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 139] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.35675907, 3.17425013, 3.96514463, 3.89233923, 4.75903225, 4.93405867,
         5.60336494, 4.77322006, 5.42915201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0588 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.93199348, -23.69929504, -17.71457291, -17.07846260, -17.30852318,
         -18.18094444, -14.50052071, -20.42077255, -23.73473549, -24.23317528]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 358, 1, 523] with unstable size 357 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 523] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [357]; unstable size 357; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 357] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 357] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.54994011, 6.75454903, 1.88174200, 1.26384294, 1.37097168, 2.10497570,
         3.85746646, 6.81311607, 7.42777681]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0557 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
         -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [707]; unstable size 707; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 707] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 707] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 707] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 285] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.54880238,  4.78813744, -0.27670145,  2.23500395,  2.02165771,
          1.09089077,  1.08386588,  4.23047400,  4.55613422]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
         -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.68it/s]100%|██████████| 1/1 [00:00<00:00,  8.67it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.62476921, -22.64729691, -16.24184227, -18.99933624, -15.90932655,
          -18.73588371, -18.09774780, -18.31125259, -22.13279724, -22.22531128]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33251572]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1179 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.33493423461914
alpha/beta optimization time: 1.1557562351226807
initial alpha-crown bounds: tensor([[ 2.69250250,  4.96834660, -0.15371287,  2.31067300,  2.06917906,
          1.21068287,  1.12954378,  4.43741608,  4.67030382]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.15371286869049072
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6763632297516
Verifying property 0 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.692502498626709.

Properties batch 1, size 1
Remaining timeout: 198.5419261455536
Verifying property 1 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.96834659576416.

Properties batch 2, size 1
Remaining timeout: 198.43954229354858
Verifying property 2 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.15371287]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.98239326, -22.89222527, -16.59890175, -19.05320930, -15.75452042,
        -18.76253128, -18.17463303, -18.00091171, -22.45012093, -22.38698578],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.15371287]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 707
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 281
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1014
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 0] 
split level 5: [/input-12, 32] 
split level 6: [/input-12, 49] 
split level 7: [/input-8, 1627] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.744529724121094e-05
Time: prepare 0.0031    bound 0.0040    transfer 0.0009    finalize 0.0016    func 0.0097    
Accumulated time: func 0.0097    prepare 0.0036    bound 0.0040    transfer 0.0009    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0224    set_bounds 0.0173    solve 0.0098    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0224    set_bounds 0.0173    solve 0.0098    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05432939529418945


Properties batch 3, size 1
Remaining timeout: 198.26228857040405
Verifying property 3 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3106729984283447.

Properties batch 4, size 1
Remaining timeout: 198.15690803527832
Verifying property 4 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.069179058074951.

Properties batch 5, size 1
Remaining timeout: 198.04782557487488
Verifying property 5 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2106828689575195.

Properties batch 6, size 1
Remaining timeout: 197.9402883052826
Verifying property 6 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1295437812805176.

Properties batch 7, size 1
Remaining timeout: 197.8382875919342
Verifying property 7 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.437416076660156.

Properties batch 8, size 1
Remaining timeout: 197.73648834228516
Verifying property 8 with 1 instances.
##### Instance 111 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.670303821563721.
Result: safe in 2.3654 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.02572250, -27.23712921, -27.95742416, -26.55063438, -28.86597252,
         -27.63702202, -28.59363937, -27.52897644, -25.43346977, -24.92130852]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 654] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 654] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 239] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.94611025,  1.33183837,  1.31211519,  0.27194262,  2.35654306,
          1.27423716,  2.06728745,  0.98784947, -0.88770533]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.02572250, -27.23712921, -27.95742416, -26.55063438, -28.86597252,
         -27.63702202, -28.59363937, -27.52897644, -25.43346977, -24.92130852]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-27.50465775, -27.85905075, -28.51387024, -27.06138802, -29.40906906,
          -28.19871521, -29.19503403, -28.15616608, -25.52621841, -25.67127037]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.14505196]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0067 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0576 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
         -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [904]; unstable size 904; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 904] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 904] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 904] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 246] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.46684718,  3.44482875,  0.77367592,  1.71358037, -0.53734136,
          2.20122433,  1.18286550,  4.27326107,  2.94509697]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
         -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.26823807, -20.68097305, -17.33302307, -15.71412659, -18.33230782,
          -15.48265743, -18.94750595, -17.71434212, -21.22698212, -20.08721161]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.23146915]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0714 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.03265953, -29.80158615, -28.01462746, -29.49231339, -27.82477570,
         -29.74157143, -29.00487137, -29.65236473, -26.56688309, -30.04109955]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 952] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 952] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.56631374, 3.00716305, 4.34157467, 2.61966372, 4.48081446, 3.68361378,
         4.35380125, 1.53697205, 5.00381327]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0460 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-18.37767220, -22.63599205, -16.68470383, -17.56246567, -14.84348488,
         -17.98977852, -17.40301132, -16.78604507, -20.68542862, -22.37132454]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [762]; unstable size 762; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 332, 1, 762] with unstable size 331 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 762] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 762] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [331]; unstable size 331; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 331] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 331] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.03614402, 5.42467690, 1.01491499, 1.54336691, 1.87700069, 1.22836089,
         1.06106329, 4.09441233, 4.97289753]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0439 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.56104851, -25.43757248, -22.30799866, -20.47185135, -22.67837715,
         -19.94359779, -23.14790916, -21.03846169, -23.14024353, -23.94003487]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [756]; unstable size 756; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 262, 1, 756] with unstable size 261 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 756] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 756] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [261]; unstable size 261; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 261] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 261] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.01937962, 3.41801071, 1.25207281, 0.18682456, 1.56868887, 2.03725863,
         0.10003197, 1.46886039, 2.03972721]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0641 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.62328815, -18.18186188, -18.71482468, -19.00971794, -17.99854279,
         -20.46262550, -20.13095474, -20.09570503, -10.99292850, -16.95243645]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [626]; unstable size 626; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 626] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 626] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 626] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 200] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.72617221, 5.95293713, 6.50314236, 6.90349865, 5.91612101, 8.26207638,
         7.94433546, 7.78404760, 4.84170914]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0382 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.57911682, -18.01341438, -21.32861328, -22.58253288, -23.55420685,
         -22.23183250, -24.82959557, -22.38050079, -21.57038307, -21.39789391]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [445]; unstable size 445; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 445] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 445] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 445] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 172] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.14326143, 1.50191069, 2.99028301, 3.75916910, 2.42487907, 5.00067949,
         2.60955715, 1.96376324, 2.50974655]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0549 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.73344231, -25.29462242, -19.50235748, -18.98530388, -19.31733131,
         -19.14581299, -19.42850494, -19.97113991, -22.87136459, -23.31713867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [875]; unstable size 875; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 356, 1, 875] with unstable size 355 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 875] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 875] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [355]; unstable size 355; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 355] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 355] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.85499299,  3.47037935, -0.90604115, -0.95058966, -0.23341924,
         -0.53100038, -0.42522973,  1.47124851,  1.91838408]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.73344231, -25.29462242, -19.50235748, -18.98530388, -19.31733131,
         -19.14581299, -19.42850494, -19.97113991, -22.87136459, -23.31713867]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.02059174, -25.73818779, -19.58433533, -19.61014366, -19.58940506,
          -19.79586029, -19.83684921, -20.43855858, -23.32468796, -23.89825249],
         [-22.02059174, -25.73818779, -19.58433533, -19.61014366, -19.58940506,
          -19.79586029, -19.83684921, -20.43855858, -23.32468796, -23.89825249]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.02580833, -0.02073860,  0.18571663,  0.22670555,  0.82841492]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0146 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0631 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
         -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [867]; unstable size 867; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 867] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 867] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 867] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 165] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.32719994, -0.10789156,  0.04068637,  2.53268170,  0.74327803,
          2.51675224,  1.46775699,  8.13148308,  8.55004883]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
         -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-35.14495850, -45.40583420, -35.37460327, -35.73740768, -38.32579422,
          -36.45522690, -38.22663498, -37.45078278, -43.78541183, -44.53203201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.22964478]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1156 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.40303039550781
alpha/beta optimization time: 1.1473159790039062
initial alpha-crown bounds: tensor([[ 9.34874249, -0.09103394,  0.06384468,  2.55860090,  0.76943469,
          2.53152704,  1.50653553,  8.14646530,  8.56891441]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.091033935546875
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68848395347595
Verifying property 0 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 9.348742485046387.

Properties batch 1, size 1
Remaining timeout: 198.5553207397461
Verifying property 1 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09103394]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.14804459, -45.50294495, -35.78569031, -36.05693054, -38.71368027,
        -36.82321548, -38.53306961, -37.81744385, -43.85329437, -44.71561813],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09103394]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 867
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 159
Node /15 input 0: size torch.Size([100]) unstable 10
-----------------
# of unstable neurons: 1036
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 5] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 59] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 31] 
split level 6: [/input-12, 90] 
split level 7: [/input-8, 1835] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.315376281738281e-05
Time: prepare 0.0031    bound 0.0039    transfer 0.0009    finalize 0.0015    func 0.0095    
Accumulated time: func 0.0095    prepare 0.0035    bound 0.0039    transfer 0.0009    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0172    solve 0.0095    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0172    solve 0.0095    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05407357215881348


Properties batch 2, size 1
Remaining timeout: 198.36453437805176
Verifying property 2 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.06384468078613281.

Properties batch 3, size 1
Remaining timeout: 198.260600566864
Verifying property 3 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.558600902557373.

Properties batch 4, size 1
Remaining timeout: 198.14716219902039
Verifying property 4 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7694346904754639.

Properties batch 5, size 1
Remaining timeout: 198.04609894752502
Verifying property 5 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.531527042388916.

Properties batch 6, size 1
Remaining timeout: 197.9461636543274
Verifying property 6 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.506535530090332.

Properties batch 7, size 1
Remaining timeout: 197.84592175483704
Verifying property 7 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.146465301513672.

Properties batch 8, size 1
Remaining timeout: 197.7459282875061
Verifying property 8 with 1 instances.
##### Instance 120 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 8.568914413452148.
Result: safe in 2.3545 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.40458870, -23.24298668, -27.73333549, -27.90799141, -27.40376663,
         -28.05864906, -28.91640854, -27.54826736, -27.30009651, -25.52873611]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [684]; unstable size 684; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 684] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 684] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 684] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 285] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.35218477, 2.28642750, 2.51820278, 1.68908310, 2.53085232, 3.30504608,
         2.17191458, 2.28330183, 1.35116172]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0755 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.14629936, -20.71539307, -24.46714020, -24.97179604, -24.83234215,
         -25.31670189, -27.17220497, -25.32540894, -20.97597122, -23.65787697]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 206, 1, 595] with unstable size 205 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 595] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [205]; unstable size 205; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 205] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 205] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.96349621,  1.88203430,  2.57148695,  2.24078035,  2.77335262,
          4.53415442,  2.59828997, -0.94698846,  1.90783060]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.14629936, -20.71539307, -24.46714020, -24.97179604, -24.83234215,
         -25.31670189, -27.17220497, -25.32540894, -20.97597122, -23.65787697]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.88486290, -20.97311783, -24.25113678, -24.81391716, -24.68358803,
          -25.18217659, -27.03807068, -25.29666138, -20.56512070, -23.80919075]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.40799713]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0061 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0511 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
         -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [448]; unstable size 448; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 448] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 448] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 448] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 263] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.72115135,  3.32613254,  0.34109974,  2.45504808,  2.08227730,
          2.35139227,  1.41229224,  3.91198635,  5.09997845]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
         -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-30.12747383, -35.12327194, -32.50504303, -34.70817566, -34.61371613,
          -34.77191544, -33.63956833, -36.66131973, -30.60513496, -36.99544525]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.47766113]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-3.53968143e-01, -6.82538673e-02, -3.65078375e-02,  ...,
             1.11112073e-02, -2.11111009e-01, -5.23808524e-02],
           [-1.15872920e-01, -1.47618949e-01, -1.63491964e-01,  ...,
            -5.23808524e-02, -3.69841158e-01, -1.63491964e-01],
           [-2.42857039e-01, -1.15872920e-01, -2.26984024e-01,  ...,
             1.22222304e-01,  2.49206424e-01, -2.42857039e-01],
           ...,
           [ 1.22222304e-01,  4.28572372e-02,  2.65079439e-01,  ...,
            -7.03174591e-01, -2.11111009e-01, -2.26984024e-01],
           [ 1.53968334e-01,  3.76190543e-01, -2.26984024e-01,  ...,
            -4.17460203e-01, -4.80952382e-01, -2.26984024e-01],
           [ 3.44444513e-01,  5.19047678e-01,  3.92063558e-01,  ...,
            -3.65078375e-02, -2.74603069e-01, -2.11111009e-01]],

          [[ 1.61031820e-02,  2.25442946e-01,  2.73752123e-01,  ...,
             4.02576596e-01,  8.05154145e-02,  2.89855182e-01],
           [ 2.41546005e-01,  1.77133769e-01,  1.93236828e-01,  ...,
             3.86473536e-01, -3.22059989e-02,  1.44927651e-01],
           [ 1.12721533e-01,  2.57649064e-01,  1.61030710e-01,  ...,
             4.99194920e-01,  8.21256101e-01,  1.77133769e-01],
           ...,
           [ 7.56843865e-01,  5.79710245e-01,  6.92431629e-01,  ...,
            -3.86473298e-01,  1.61030710e-01,  2.25442946e-01],
           [ 5.95813274e-01,  7.72946954e-01,  2.09339887e-01,  ...,
             8.05154145e-02, -1.77133530e-01,  1.44927651e-01],
           [ 6.28019392e-01,  8.21256101e-01,  8.37359190e-01,  ...,
             5.31401038e-01,  1.22934580e-07,  9.66184735e-02]],

          [[ 4.51274544e-01,  7.36132085e-01,  7.36132085e-01,  ...,
             8.56072128e-01,  5.56222081e-01,  7.51124620e-01],
           [ 7.21139610e-01,  7.21139610e-01,  6.31184578e-01,  ...,
             7.96102107e-01,  3.46327007e-01,  6.01199567e-01],
           [ 5.26237071e-01,  6.76162124e-01,  6.61169589e-01,  ...,
             9.16042149e-01,  9.76012170e-01,  5.71214557e-01],
           ...,
           [ 1.05097473e+00,  8.86057138e-01,  1.09595215e+00,  ...,
             1.66416958e-01,  5.86207092e-01,  6.16192102e-01],
           [ 1.03598225e+00,  1.08095968e+00,  5.86207092e-01,  ...,
             4.96252000e-01,  3.46327007e-01,  6.31184578e-01],
           [ 1.08095968e+00,  1.15592217e+00,  1.09595215e+00,  ...,
             8.26087117e-01,  5.26237071e-01,  6.61169589e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0474 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.54057121, -21.40389442, -20.55339050, -20.58682060, -20.08682251,
         -21.26310730, -20.37835312, -20.33173752, -21.91990280, -21.46942329]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 326, 1, 799] with unstable size 325 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 799] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [325]; unstable size 325; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 325] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 325] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.38908577, -1.18870044, -2.95449829, -2.60739803, -3.34873247,
         -1.96987033, -3.07361555, -3.06156182, -1.16480923]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.54057121, -21.40389442, -20.55339050, -20.58682060, -20.08682251,
         -21.26310730, -20.37835312, -20.33173752, -21.91990280, -21.46942329]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.54056931, -21.40389061, -20.55338860, -20.58681679, -20.08682060,
          -21.26310539, -20.37835312, -20.33173943, -21.91990280, -21.46942520],
         [-21.54056931, -21.40389061, -20.55338860, -20.58681679, -20.08682060,
          -21.26310539, -20.37835312, -20.33173943, -21.91990280, -21.46942520]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07114410, -0.06553459, -0.91603661, -0.88260841, -1.38260460,
          -0.20631981, -1.09107208, -1.13768578,  0.45047760]]],
       device='cuda:0')
number of violation:  7
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0464 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.34185982, -18.34316826, -19.90431023, -19.60602570, -20.92833138,
         -19.82821465, -22.19347191, -21.69088936, -18.03870010, -18.59241867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [703]; unstable size 703; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 703] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 703] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 221] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.52273846, -0.96111453, -0.21341372, -0.24194908,  0.79662371,
         -0.12263966,  1.94754982,  1.67940521, -2.02313375]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.34185982, -18.34316826, -19.90431023, -19.60602570, -20.92833138,
         -19.82821465, -22.19347191, -21.69088936, -18.03870010, -18.59241867]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.34185982, -18.34316635, -19.90431023, -19.60602379, -20.92833138,
          -19.82821274, -22.19347000, -21.69088745, -18.03870010, -18.59241676],
         [-19.34185982, -18.34316635, -19.90431023, -19.60602379, -20.92833138,
          -19.82821274, -22.19347000, -21.69088745, -18.03870010, -18.59241676]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.74944305, -0.24925041,  1.31189346,  1.01360703,  1.23579597,
          -0.55371666]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0634 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.60500145, -24.89141464, -19.17918777, -20.05367851, -18.86228371,
         -19.76714134, -19.96246719, -19.42761040, -24.32711601, -22.82327843]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 640] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 640] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 243] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.29259706,  3.78634977, -0.83907092,  0.12916994, -0.20247686,
         -0.06445074, -0.28860736,  3.43386030,  1.86539745]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.60500145, -24.89141464, -19.17918777, -20.05367851, -18.86228371,
         -19.76714134, -19.96246719, -19.42761040, -24.32711601, -22.82327843]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.03265953, -25.29692650, -19.45195961, -20.54336929, -19.62042999,
          -20.25281143, -20.38715744, -20.24810791, -24.68657875, -23.31516266],
         [-23.03265953, -25.29692650, -19.45195961, -20.54336929, -19.62042999,
          -20.25281143, -20.38715744, -20.24810791, -24.68657875, -23.31516266]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16847038,  0.63238144,  0.76672745,  0.62767792]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0648 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
         -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [953]; unstable size 953; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 256, 1, 953] with unstable size 255 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 953] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 953] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [255]; unstable size 255; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 255] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.24769038,  1.62967813, -0.30106115, -0.63823390, -0.46131444,
          0.13329816,  1.71760333,  0.29797369,  0.64501810]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
         -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.78it/s]100%|██████████| 1/1 [00:00<00:00,  8.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.69696999, -28.02658463, -25.77697563, -25.08135605, -25.68766022,
          -26.01312256, -27.60112953, -26.61686516, -24.82721519, -26.62337494],
         [-25.69696999, -28.02658463, -25.77697563, -25.08135605, -25.68766022,
          -26.01312256, -27.60112953, -26.61686516, -24.82721519, -26.62337494]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.86975479, 0.94976044, 0.25414085, 0.86044502]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1168 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.3044393062591553
alpha/beta optimization time: 1.134777545928955
initial alpha-crown bounds: tensor([[-0.19642907,  1.68688893, -0.24070191, -0.57432032, -0.39791822,
          0.20313406,  1.77232790,  0.36443168,  0.68702626]], device='cuda:0')
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.5743203163146973
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.69668817520142
Verifying property 0 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19642907]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19642907]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 34] 
split level 1: [/input-12, 61] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 79] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 2] 
split level 7: [/input-8, 1690] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.38690185546875e-05
Time: prepare 0.0031    bound 0.0039    transfer 0.0010    finalize 0.0023    func 0.0104    
Accumulated time: func 0.0104    prepare 0.0035    bound 0.0039    transfer 0.0010    finalize 0.0023    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0229    set_bounds 0.0173    solve 0.0104    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0229    set_bounds 0.0173    solve 0.0104    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.055551767349243164


Properties batch 1, size 1
Remaining timeout: 198.48958373069763
Verifying property 1 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6868889331817627.

Properties batch 2, size 1
Remaining timeout: 198.3849151134491
Verifying property 2 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24070191]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24070191]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 29] 
split level 1: [/input-12, 8] 
split level 2: [/input-12, 42] 
split level 3: [/input-12, 46] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 32] 
split level 7: [/input-12, 2] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.220008850097656e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0007    finalize 0.0015    func 0.0080    
Accumulated time: func 0.0080    prepare 0.0022    bound 0.0039    transfer 0.0007    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0224    set_bounds 0.0160    solve 0.0081    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0224    set_bounds 0.0160    solve 0.0081    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05076003074645996


Properties batch 3, size 1
Remaining timeout: 198.17658519744873
Verifying property 3 with 1 instances.
##### Instance 127 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.57432032]], device='cuda:0') need to verify.
Model prediction is: tensor([-26.40610313, -28.64339638, -26.76308441, -26.38432884, -26.76462173,
        -27.38529396, -28.83926201, -27.71152496, -25.29835510, -27.33741188],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.57432032]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 953
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 248
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 1222
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 8] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 58] 
split level 7: [/input-12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 207 / 256 = 0.80859375
pruning-in-iteration extra time: 0.004945278167724609
Time: prepare 0.0018    bound 0.1458    transfer 0.0008    finalize 0.0016    func 0.1500    
Accumulated time: func 0.1500    prepare 0.0022    bound 0.1458    transfer 0.0008    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27084 (8), -0.25784 (8), -0.25034 (8), -0.23723 (8), -0.22955 (8), -0.22296 (8), -0.21784 (8), -0.20952 (8), -0.19601 (8), -0.18239 (8), -0.15783 (8), -0.15412 (8), -0.15274 (8), -0.15162 (8), -0.14523 (8), -0.13825 (8), -0.12764 (8), -0.12664 (8), -0.12378 (8), -0.12199 (8), 
Length of domains: 49
Time: pickout 0.0003    decision 0.0221    set_bounds 0.0160    solve 0.1501    add 0.0015    
Accumulated time: pickout 0.0003    decision 0.0221    set_bounds 0.0160    solve 0.1501    add 0.0015    
Current (lb-rhs): -0.2708420753479004
49 domains visited
Cumulative time: 0.19407939910888672

BaB round 2
batch: 49
splitting decisions: 
split level 0: [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 1698] [/input-8, 337] [/input-12, 29] [/input-8, 337] [/input-12, 29] 
split level 1: [/input-8, 1690] [/input-8, 1690] [/input-8, 1690] [/input-8, 1052] [/input-8, 338] [/input-8, 1053] [/input-8, 338] [/input-8, 1698] [/input-8, 338] [/input-8, 1698] 
split level 2: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1053] [/input-8, 1943] [/input-8, 933] [/input-8, 1943] [/input-8, 1052] [/input-8, 1943] [/input-8, 933] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 392 = 0.3877551020408163
pruning-in-iteration extra time: 0.004557132720947266
Time: prepare 0.0075    bound 0.1426    transfer 0.0013    finalize 0.0029    func 0.1544    
Accumulated time: func 0.3044    prepare 0.0099    bound 0.2884    transfer 0.0021    finalize 0.0045    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24497 (11), -0.24392 (11), -0.22772 (11), -0.22540 (11), -0.22404 (11), -0.22173 (11), -0.21691 (11), -0.21629 (11), -0.21619 (11), -0.21479 (11), -0.21407 (11), -0.20818 (11), -0.20037 (11), -0.19917 (11), -0.19799 (11), -0.19768 (11), -0.19716 (11), -0.19654 (11), -0.19642 (11), -0.19551 (11), 
Length of domains: 240
Time: pickout 0.0012    decision 0.0202    set_bounds 0.0118    solve 0.1545    add 0.0017    
Accumulated time: pickout 0.0015    decision 0.0424    set_bounds 0.0278    solve 0.3045    add 0.0032    
Current (lb-rhs): -0.24496960639953613
289 domains visited
Cumulative time: 0.38419175148010254

BaB round 3
batch: 240
splitting decisions: 
split level 0: [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-12, 29] [/input-12, 29] [/input-8, 1626] [/input-12, 29] [/input-8, 1690] [/input-12, 29] [/input-12, 29] 
pruning_in_iteration open status: True
ratio of positive domain = 126 / 480 = 0.26249999999999996
pruning-in-iteration extra time: 0.0040225982666015625
Time: prepare 0.0093    bound 0.1844    transfer 0.0024    finalize 0.0036    func 0.1998    
Accumulated time: func 0.5042    prepare 0.0193    bound 0.4728    transfer 0.0045    finalize 0.0081    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24020 (12), -0.23915 (12), -0.22703 (12), -0.22508 (12), -0.22212 (12), -0.21984 (12), -0.21947 (12), -0.21724 (12), -0.20958 (12), -0.20777 (12), -0.20741 (12), -0.20576 (12), -0.20560 (12), -0.20497 (12), -0.20492 (12), -0.20132 (12), -0.20094 (12), -0.20020 (12), -0.19386 (12), -0.19225 (12), 
Length of domains: 354
Time: pickout 0.0034    decision 0.0219    set_bounds 0.0101    solve 0.1999    add 0.0019    
Accumulated time: pickout 0.0049    decision 0.0643    set_bounds 0.0379    solve 0.5044    add 0.0051    
Current (lb-rhs): -0.24020394682884216
643 domains visited
Cumulative time: 0.6224119663238525

BaB round 4
batch: 354
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1610] [/input-12, 29] [/input-8, 1690] [/input-8, 1690] [/input-8, 1053] [/input-8, 1618] [/input-8, 1618] [/input-8, 1618] [/input-8, 1610] 
pruning_in_iteration open status: False
ratio of positive domain = 114 / 708 = 0.1610169491525424
pruning-in-iteration extra time: 7.462501525878906e-05
Time: prepare 0.0136    bound 0.0985    transfer 0.0053    finalize 0.0049    func 0.1222    
Accumulated time: func 0.6264    prepare 0.0331    bound 0.5713    transfer 0.0098    finalize 0.0130    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23285 (13), -0.23154 (13), -0.23079 (13), -0.22621 (13), -0.22197 (13), -0.21909 (13), -0.21909 (13), -0.21704 (13), -0.21685 (13), -0.21494 (13), -0.21436 (13), -0.20425 (13), -0.20157 (13), -0.20154 (13), -0.19948 (13), -0.19881 (13), -0.19721 (13), -0.19707 (13), -0.19677 (13), -0.19668 (13), 
Length of domains: 587
Time: pickout 0.0049    decision 0.0343    set_bounds 0.0150    solve 0.1224    add 0.0028    
Accumulated time: pickout 0.0098    decision 0.0986    set_bounds 0.0529    solve 0.6268    add 0.0079    
Current (lb-rhs): -0.2328464388847351
1230 domains visited
Cumulative time: 0.8027083873748779

BaB round 5
batch: 587
splitting decisions: 
split level 0: [/input-8, 933] [/input-8, 1626] [/input-8, 1626] [/input-8, 1611] [/input-8, 1618] [/input-8, 1052] [/input-8, 933] [/input-8, 1611] [/input-8, 1953] [/input-8, 1953] 
pruning_in_iteration open status: False
ratio of positive domain = 162 / 1174 = 0.13798977853492334
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0222    bound 0.1125    transfer 0.0030    finalize 0.0075    func 0.1453    
Accumulated time: func 0.7717    prepare 0.0555    bound 0.6838    transfer 0.0128    finalize 0.0205    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23025 (14), -0.22894 (14), -0.22821 (14), -0.22392 (14), -0.21624 (14), -0.21444 (14), -0.21422 (14), -0.21359 (14), -0.21251 (14), -0.21209 (14), -0.21203 (14), -0.21100 (14), -0.21047 (14), -0.21005 (14), -0.20741 (14), -0.20158 (14), -0.20085 (14), -0.19883 (14), -0.19860 (14), -0.19831 (14), 
Length of domains: 1008
Time: pickout 0.0075    decision 0.0472    set_bounds 0.0245    solve 0.1455    add 0.0038    
Accumulated time: pickout 0.0173    decision 0.1457    set_bounds 0.0774    solve 0.7723    add 0.0117    
Current (lb-rhs): -0.23024797439575195
2238 domains visited
Cumulative time: 1.0328783988952637

BaB round 6
batch: 1008
splitting decisions: 
split level 0: [/input-8, 179] [/input-8, 1690] [/input-8, 1618] [/input-8, 1053] [/input-8, 1713] [/input-8, 1953] [/input-8, 1611] [/input-12, 29] [/input-12, 29] [/input-8, 1690] 
pruning_in_iteration open status: False
ratio of positive domain = 284 / 2016 = 0.14087301587301593
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0398    bound 0.1288    transfer 0.0081    finalize 0.0145    func 0.1914    
Accumulated time: func 0.9631    prepare 0.0955    bound 0.8126    transfer 0.0209    finalize 0.0349    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22843 (15), -0.22706 (15), -0.22231 (15), -0.22133 (15), -0.21339 (15), -0.21261 (15), -0.21205 (15), -0.21135 (15), -0.21065 (15), -0.21039 (15), -0.21016 (15), -0.20922 (15), -0.20883 (15), -0.20838 (15), -0.20803 (15), -0.20538 (15), -0.20346 (15), -0.19820 (15), -0.19691 (15), -0.19575 (15), 
Length of domains: 1724
Time: pickout 0.0131    decision 0.0710    set_bounds 0.0420    solve 0.1917    add 0.0070    
Accumulated time: pickout 0.0305    decision 0.2168    set_bounds 0.1194    solve 0.9640    add 0.0187    
Current (lb-rhs): -0.22843000292778015
3962 domains visited
Cumulative time: 1.3607053756713867

BaB round 7
batch: 1724
splitting decisions: 
split level 0: [/input-8, 625] [/input-8, 1953] [/input-8, 1713] [/input-8, 932] [/input-8, 1611] [/input-8, 625] [/input-8, 1626] [/input-8, 1724] [/input-12, 61] [/input-8, 1052] 
pruning_in_iteration open status: False
ratio of positive domain = 600 / 3448 = 0.17401392111368907
pruning-in-iteration extra time: 6.246566772460938e-05
Time: prepare 0.0718    bound 0.1898    transfer 0.0278    finalize 0.0274    func 0.3171    
Accumulated time: func 1.2802    prepare 0.1675    bound 1.0024    transfer 0.0487    finalize 0.0623    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22237 (16), -0.22094 (16), -0.22052 (16), -0.21520 (16), -0.21407 (16), -0.21155 (16), -0.21008 (16), -0.20738 (16), -0.20618 (16), -0.20553 (16), -0.20536 (16), -0.20462 (16), -0.20430 (16), -0.20367 (16), -0.20323 (16), -0.20267 (16), -0.20249 (16), -0.20181 (16), -0.20122 (16), -0.19863 (16), 
Length of domains: 2835
Time: pickout 0.0229    decision 0.1123    set_bounds 0.2082    solve 0.3179    add 0.0198    
Accumulated time: pickout 0.0534    decision 0.3291    set_bounds 0.3276    solve 1.2819    add 0.0385    
Current (lb-rhs): -0.22236758470535278
6797 domains visited
Cumulative time: 2.0480823516845703

BaB round 8
batch: 2835
splitting decisions: 
split level 0: [/input-8, 1943] [/input-8, 1626] [/input-8, 934] [/input-8, 934] [/input-8, 604] [/input-8, 1713] [/input-8, 1690] [/input-8, 1053] [/input-8, 1716] [/input-12, 61] 
pruning_in_iteration open status: False
ratio of positive domain = 1042 / 5670 = 0.1837742504409171
pruning-in-iteration extra time: 5.507469177246094e-05
Time: prepare 0.1206    bound 0.2778    transfer 0.0204    finalize 0.0379    func 0.4581    
Accumulated time: func 1.7383    prepare 0.2884    bound 1.2802    transfer 0.0692    finalize 0.1002    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21654 (17), -0.21469 (17), -0.21348 (17), -0.21169 (17), -0.20937 (17), -0.20899 (17), -0.20814 (17), -0.20713 (17), -0.20492 (17), -0.20420 (17), -0.20196 (17), -0.20147 (17), -0.20088 (17), -0.20066 (17), -0.20028 (17), -0.19962 (17), -0.19946 (17), -0.19764 (17), -0.19734 (17), -0.19706 (17), 
Length of domains: 4601
Time: pickout 0.0406    decision 0.1716    set_bounds 0.2481    solve 0.4594    add 0.0190    
Accumulated time: pickout 0.0940    decision 0.5006    set_bounds 0.5757    solve 1.7414    add 0.0575    
Current (lb-rhs): -0.21654272079467773
11398 domains visited
Cumulative time: 2.9965107440948486

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1943] [/input-8, 939] [/input-8, 1716] [/input-8, 933] [/input-8, 1716] [/input-8, 1716] [/input-8, 1053] [/input, 2231] [/input-8, 1980] [/input-8, 1943] 
pruning_in_iteration open status: False
ratio of positive domain = 1601 / 8192 = 0.1954345703125
pruning-in-iteration extra time: 8.368492126464844e-05
Time: prepare 0.1759    bound 0.3676    transfer 0.0274    finalize 0.0539    func 0.6263    
Accumulated time: func 2.3646    prepare 0.4646    bound 1.6478    transfer 0.0966    finalize 0.1541    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21348 (17), -0.20899 (17), -0.20817 (18), -0.20713 (17), -0.20709 (18), -0.20638 (18), -0.20590 (18), -0.20526 (18), -0.20199 (18), -0.20196 (17), -0.20016 (18), -0.19962 (18), -0.19901 (18), -0.19865 (18), -0.19835 (18), -0.19706 (17), -0.19567 (18), -0.19544 (17), -0.19510 (17), -0.19500 (18), 
Length of domains: 7061
Time: pickout 0.0582    decision 0.2340    set_bounds 0.3324    solve 0.6277    add 0.0311    
Accumulated time: pickout 0.1522    decision 0.7346    set_bounds 0.9081    solve 2.3691    add 0.0886    
Current (lb-rhs): -0.21347859501838684
17954 domains visited
current_vram/total_varm: 10.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.294091463088989

BaB round 10
batch: 7061
splitting decisions: 
split level 0: [/input-8, 934] [/input-8, 1943] [/input-8, 1707] [/input-8, 1943] [/input-8, 1713] [/input-8, 1716] [/input-8, 1690] [/input-8, 1053] [/input-8, 1626] [/input, 2231] 
pruning_in_iteration open status: True
ratio of positive domain = 3031 / 14122 = 0.21462965585611105
pruning-in-iteration extra time: 0.0020134449005126953
Time: prepare 0.4764    bound 0.6094    transfer 0.0888    finalize 0.1021    func 1.2790    
Accumulated time: func 3.6436    prepare 0.9413    bound 2.2572    transfer 0.1854    finalize 0.2562    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20767 (18), -0.20452 (19), -0.20334 (19), -0.20273 (19), -0.20223 (19), -0.20153 (19), -0.20054 (18), -0.20010 (18), -0.19959 (18), -0.19880 (18), -0.19832 (19), -0.19777 (18), -0.19655 (19), -0.19592 (19), -0.19526 (19), -0.19492 (19), -0.19470 (19), -0.19455 (18), -0.19276 (18), -0.19195 (19), 
Length of domains: 11091
Time: pickout 0.0973    decision 0.4066    set_bounds 0.4537    solve 1.2825    add 0.0423    
Accumulated time: pickout 0.2495    decision 1.1412    set_bounds 1.3618    solve 3.6516    add 0.1309    
Current (lb-rhs): -0.20767003297805786
29045 domains visited
Cumulative time: 6.603079557418823

BaB round 11
batch: 8192
splitting decisions: 
split level 0: [/input, 393] [/input-8, 1943] [/input-8, 913] [/input, 3016] [/input-8, 933] [/input-8, 1634] [/input-8, 1724] [/input-12, 61] [/input-8, 1953] [/input-8, 913] 
pruning_in_iteration open status: True
ratio of positive domain = 3743 / 16384 = 0.22845458984375
pruning-in-iteration extra time: 0.0036246776580810547
Time: prepare 0.3698    bound 0.6862    transfer 0.0745    finalize 0.1102    func 1.2421    
Accumulated time: func 4.8857    prepare 1.3114    bound 2.9434    transfer 0.2599    finalize 0.3664    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20400 (19), -0.20022 (20), -0.20010 (18), -0.19959 (18), -0.19844 (20), -0.19793 (20), -0.19777 (18), -0.19755 (20), -0.19694 (19), -0.19575 (20), -0.19538 (20), -0.19519 (19), -0.19455 (18), -0.19405 (20), -0.19358 (20), -0.19313 (20), -0.19164 (20), -0.19132 (20), -0.19095 (20), -0.19093 (20), 
Length of domains: 15540
Time: pickout 0.1222    decision 0.6667    set_bounds 0.5410    solve 1.2455    add 0.0505    
Accumulated time: pickout 0.3717    decision 1.8079    set_bounds 1.9027    solve 4.8971    add 0.1814    
Current (lb-rhs): -0.2039983570575714
41686 domains visited
current_vram/total_varm: 22.1GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.258197546005249

BaB round 12
batch: 15540
splitting decisions: 
split level 0: [/input-8, 1713] [/input-8, 1716] [/input, 393] [/input-8, 1943] [/input-8, 1707] [/input-12, 61] [/input, 3016] [/input, 2471] [/input-8, 1943] [/input-8, 934] 
pruning_in_iteration open status: True
ratio of positive domain = 6378 / 31080 = 0.20521235521235526
pruning-in-iteration extra time: 0.000545501708984375
Time: prepare 0.7315    bound 1.2720    transfer 0.2541    finalize 0.4610    func 2.7212    
Accumulated time: func 7.6069    prepare 2.0433    bound 4.2154    transfer 0.5140    finalize 0.8274    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19970 (20), -0.19643 (19), -0.19589 (19), -0.19440 (21), -0.19408 (19), -0.19322 (21), -0.19271 (20), -0.19262 (21), -0.19261 (20), -0.19246 (21), -0.19179 (21), -0.19142 (21), -0.19114 (21), -0.19091 (19), -0.19084 (20), -0.19068 (21), -0.19022 (21), -0.18935 (21), -0.18806 (21), -0.18732 (21), 
Length of domains: 24702
Time: pickout 0.2370    decision 1.1406    set_bounds 0.8873    solve 2.7275    add 0.0797    
Accumulated time: pickout 0.6086    decision 2.9485    set_bounds 2.7900    solve 7.6247    add 0.2611    
Current (lb-rhs): -0.19970232248306274
66388 domains visited
Cumulative time: 14.392220973968506

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input-12, 61] [/input-8, 1618] [/input-8, 1618] [/input-12, 61] [/input-8, 1618] [/input, 2471] [/input-8, 1610] [/input-12, 61] [/input, 393] [/input-8, 1943] 
pruning_in_iteration open status: False
ratio of positive domain = 6421 / 32768 = 0.195953369140625
pruning-in-iteration extra time: 0.0002951622009277344
Time: prepare 0.7923    bound 1.3294    transfer 0.2677    finalize 0.2330    func 2.6249    
Accumulated time: func 10.2319    prepare 2.8361    bound 5.5448    transfer 0.7817    finalize 1.0604    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19357 (21), -0.19208 (20), -0.19201 (21), -0.19023 (22), -0.19012 (20), -0.18905 (22), -0.18845 (22), -0.18833 (20), -0.18832 (22), -0.18794 (20), -0.18772 (22), -0.18726 (22), -0.18699 (22), -0.18677 (21), -0.18657 (20), -0.18653 (22), -0.18638 (21), -0.18617 (20), -0.18611 (22), -0.18521 (22), 
Length of domains: 34533
Time: pickout 0.2617    decision 1.9445    set_bounds 1.2991    solve 2.6317    add 0.1132    
Accumulated time: pickout 0.8703    decision 4.8931    set_bounds 4.0891    solve 10.2564    add 0.3743    
Current (lb-rhs): -0.19357115030288696
92603 domains visited
current_vram/total_varm: 36.9GB/99.9GB, batch_size increase to 32768
Cumulative time: 20.709579944610596

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input, 2471] [/input-8, 1618] [/input-8, 1943] [/input-12, 61] [/input-8, 604] [/input-12, 61] [/input-8, 1618] [/input-8, 509] [/input, 393] [/input-8, 625] 
pruning_in_iteration open status: True
ratio of positive domain = 13481 / 65536 = 0.2057037353515625
pruning-in-iteration extra time: 0.0005400180816650391
Time: prepare 1.9437    bound 7.8035    transfer 0.6370    finalize 0.5357    func 10.9254    
Accumulated time: func 21.1572    prepare 4.7802    bound 13.3483    transfer 1.4187    finalize 1.5962    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18951 (22), -0.18790 (22), -0.18596 (21), -0.18576 (21), -0.18437 (21), -0.18397 (21), -0.18360 (21), -0.18328 (23), -0.18311 (23), -0.18235 (22), -0.18223 (22), -0.18198 (23), -0.18187 (21), -0.18178 (23), -0.18143 (23), -0.18135 (23), -0.18134 (23), -0.18117 (23), -0.18095 (22), -0.18082 (23), 
Length of domains: 53820
Time: pickout 0.5411    decision 3.7096    set_bounds 1.8137    solve 11.3965    add 0.1957    
Accumulated time: pickout 1.4114    decision 8.6027    set_bounds 5.9029    solve 21.6528    add 0.5700    
Current (lb-rhs): -0.18950891494750977
144658 domains visited
Cumulative time: 38.53358721733093

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1707] [/input-8, 1610] [/input-8, 604] [/input, 2457] [/input, 3000] [/input, 2471] [/input, 2232] [/input, 3016] [/input-8, 1707] 
pruning_in_iteration open status: True
ratio of positive domain = 13654 / 65536 = 0.208343505859375
pruning-in-iteration extra time: 0.001039743423461914
Time: prepare 1.6263    bound 7.8147    transfer 0.6387    finalize 1.1539    func 11.2380    
Accumulated time: func 32.3952    prepare 6.4068    bound 21.1630    transfer 2.0574    finalize 2.7501    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18266 (23), -0.18247 (23), -0.18163 (22), -0.18134 (23), -0.18133 (22), -0.18097 (23), -0.18082 (23), -0.18062 (24), -0.18046 (24), -0.18000 (22), -0.17954 (22), -0.17947 (23), -0.17933 (24), -0.17919 (22), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17745 (22), -0.17731 (21), -0.17731 (24), 
Length of domains: 72934
Time: pickout 0.5554    decision 3.8330    set_bounds 1.9505    solve 11.2510    add 0.2311    
Accumulated time: pickout 1.9668    decision 12.4357    set_bounds 7.8534    solve 32.9039    add 0.8011    
Current (lb-rhs): -0.18265512585639954
196540 domains visited
Cumulative time: 56.4928412437439

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input, 3016] [/input, 2201] [/input, 2231] [/input, 3016] [/input-8, 934] [/input-8, 625] [/input-8, 1713] [/input, 3000] [/input, 3016] [/input, 2457] 
pruning_in_iteration open status: False
ratio of positive domain = 12905 / 65536 = 0.1969146728515625
pruning-in-iteration extra time: 0.0006382465362548828
Time: prepare 1.6657    bound 7.8034    transfer 0.6368    finalize 1.2997    func 11.4097    
Accumulated time: func 43.8049    prepare 8.0729    bound 28.9664    transfer 2.6942    finalize 4.0498    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17998 (24), -0.17980 (24), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17814 (24), -0.17754 (25), -0.17737 (25), -0.17731 (21), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17602 (24), -0.17549 (24), -0.17545 (24), 
Length of domains: 92526
Time: pickout 0.6079    decision 3.6284    set_bounds 2.1593    solve 11.4239    add 0.1861    
Accumulated time: pickout 2.5747    decision 16.0641    set_bounds 10.0127    solve 44.3277    add 0.9872    
Current (lb-rhs): -0.181336909532547
248900 domains visited
Cumulative time: 74.64484357833862

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1611] [/input-8, 1523] [/input-8, 1618] [/input-8, 1610] [/input, 3466] [/input-8, 798] [/input-8, 822] [/input-8, 1943] [/input-8, 1610] [/input-8, 1611] 
pruning_in_iteration open status: False
ratio of positive domain = 13036 / 65536 = 0.19891357421875
pruning-in-iteration extra time: 0.0005891323089599609
Time: prepare 1.7332    bound 7.8051    transfer 0.6384    finalize 0.5560    func 10.7365    
Accumulated time: func 54.5415    prepare 9.8065    bound 36.7714    transfer 3.3325    finalize 4.6057    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17670 (25), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17503 (25), -0.17497 (24), 
Length of domains: 111979
Time: pickout 0.6133    decision 4.2705    set_bounds 2.3880    solve 10.7659    add 0.2837    
Accumulated time: pickout 3.1880    decision 20.3346    set_bounds 12.4007    solve 55.0937    add 1.2709    
Current (lb-rhs): -0.181336909532547
301121 domains visited
Cumulative time: 93.25320982933044

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input, 2232] [/input, 3016] [/input-8, 1610] [/input, 2232] [/input-8, 1634] [/input-8, 798] [/input-8, 1943] [/input, 404] [/input-8, 509] [/input-8, 625] 
pruning_in_iteration open status: False
ratio of positive domain = 13099 / 65536 = 0.1998748779296875
pruning-in-iteration extra time: 0.0005824565887451172
Time: prepare 1.8306    bound 7.8107    transfer 0.6493    finalize 0.5695    func 10.8636    
Accumulated time: func 65.4051    prepare 11.6375    bound 44.5821    transfer 3.9819    finalize 5.1752    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 131387
Time: pickout 0.8074    decision 4.0722    set_bounds 2.6968    solve 10.8822    add 0.1934    
Accumulated time: pickout 3.9954    decision 24.4068    set_bounds 15.0974    solve 65.9758    add 1.4643    
Current (lb-rhs): -0.181336909532547
353297 domains visited
Cumulative time: 112.08368849754333

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1697] [/input-8, 625] [/input-8, 625] [/input, 3466] [/input-8, 946] [/input-8, 959] [/input-8, 1724] [/input, 393] [/input, 393] [/input, 393] 
pruning_in_iteration open status: True
ratio of positive domain = 14631 / 65536 = 0.2232513427734375
pruning-in-iteration extra time: 0.002882719039916992
Time: prepare 1.8132    bound 6.2126    transfer 0.6457    finalize 0.5457    func 9.2209    
Accumulated time: func 74.6260    prepare 13.4512    bound 50.7948    transfer 4.6276    finalize 5.7209    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 149524
Time: pickout 0.6896    decision 4.6407    set_bounds 2.6459    solve 9.2390    add 0.1986    
Accumulated time: pickout 4.6851    decision 29.0474    set_bounds 17.7433    solve 75.2148    add 1.6628    
Current (lb-rhs): -0.181336909532547
404202 domains visited
Cumulative time: 129.6712725162506

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 798] [/input-8, 1310] [/input-8, 1610] [/input-8, 1611] [/input-8, 897] [/input-8, 798] [/input, 2248] [/input, 404] [/input-8, 338] 
pruning_in_iteration open status: True
ratio of positive domain = 16407 / 65536 = 0.2503509521484375
pruning-in-iteration extra time: 0.00472712516784668
Time: prepare 1.8301    bound 4.5553    transfer 0.6553    finalize 0.5549    func 7.5992    
Accumulated time: func 82.2253    prepare 15.2817    bound 55.3500    transfer 5.2829    finalize 6.2758    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 165885
Time: pickout 0.6743    decision 4.8178    set_bounds 2.8469    solve 7.6174    add 0.2395    
Accumulated time: pickout 5.3593    decision 33.8652    set_bounds 20.5902    solve 82.8322    add 1.9023    
Current (lb-rhs): -0.181336909532547
453331 domains visited
Cumulative time: 146.0569281578064

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 939] [/input-8, 1611] [/input-8, 939] [/input, 2168] [/input-8, 1697] [/input, 3466] [/input-8, 1611] [/input-8, 939] [/input, 404] [/input-8, 625] 
pruning_in_iteration open status: True
ratio of positive domain = 16309 / 65536 = 0.2488555908203125
pruning-in-iteration extra time: 0.004929542541503906
Time: prepare 1.7991    bound 4.5582    transfer 0.6581    finalize 2.0130    func 9.0318    
Accumulated time: func 91.2570    prepare 17.0813    bound 59.9083    transfer 5.9410    finalize 8.2888    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 182344
Time: pickout 0.7249    decision 4.5797    set_bounds 1.5658    solve 9.0478    add 0.3417    
Accumulated time: pickout 6.0842    decision 38.4449    set_bounds 22.1560    solve 91.8800    add 2.2440    
Current (lb-rhs): -0.181336909532547
502558 domains visited
Cumulative time: 162.47588181495667

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input, 2488] [/input, 2488] [/input-8, 822] [/input-8, 1611] [/input, 2248] [/input, 2488] [/input, 3466] [/input, 2488] [/input, 905] [/input-8, 1618] 
pruning_in_iteration open status: True
ratio of positive domain = 16913 / 65536 = 0.2580718994140625
pruning-in-iteration extra time: 0.005976200103759766
Time: prepare 2.3046    bound 3.4626    transfer 0.6381    finalize 0.5834    func 6.9932    
Accumulated time: func 98.2502    prepare 19.3864    bound 63.3709    transfer 6.5791    finalize 8.8723    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 198199
Time: pickout 0.7036    decision 3.4560    set_bounds 3.3109    solve 7.0149    add 0.1923    
Accumulated time: pickout 6.7878    decision 41.9009    set_bounds 25.4669    solve 98.8949    add 2.4364    
Current (lb-rhs): -0.181336909532547
551181 domains visited
Cumulative time: 177.427077293396

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input, 952] [/input-8, 798] [/input, 952] [/input-8, 939] [/input-8, 1310] [/input-8, 959] [/input, 952] [/input-8, 798] [/input-8, 625] [/input, 952] 
pruning_in_iteration open status: True
ratio of positive domain = 17022 / 65536 = 0.259735107421875
pruning-in-iteration extra time: 0.006116628646850586
Time: prepare 1.9100    bound 3.1739    transfer 0.6717    finalize 2.2101    func 7.9692    
Accumulated time: func 106.2194    prepare 21.2969    bound 66.5448    transfer 7.2507    finalize 11.0824    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 213945
Time: pickout 0.7983    decision 5.4300    set_bounds 1.6097    solve 7.9850    add 0.3659    
Accumulated time: pickout 7.5861    decision 47.3309    set_bounds 27.0766    solve 106.8799    add 2.8023    
Current (lb-rhs): -0.181336909532547
599695 domains visited
Cumulative time: 193.81514525413513

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 2249] [/input, 393] [/input, 2202] [/input, 2439] [/input-8, 1634] [/input, 2249] [/input, 2186] [/input-8, 897] [/input-8, 1697] [/input, 2185] 
pruning_in_iteration open status: True
ratio of positive domain = 17406 / 65536 = 0.265594482421875
pruning-in-iteration extra time: 0.006850481033325195
Time: prepare 1.8689    bound 2.8915    transfer 0.6848    finalize 0.5709    func 6.0202    
Accumulated time: func 112.2396    prepare 23.1663    bound 69.4363    transfer 7.9355    finalize 11.6533    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18134 (23), -0.18097 (23), -0.17947 (23), -0.17914 (23), -0.17880 (21), -0.17865 (21), -0.17754 (25), -0.17731 (21), -0.17690 (25), -0.17679 (24), -0.17648 (21), -0.17647 (19), -0.17626 (25), -0.17619 (24), -0.17549 (24), -0.17545 (24), -0.17519 (23), -0.17497 (24), -0.17483 (19), -0.17471 (21), 
Length of domains: 229307
Time: pickout 0.7203    decision 3.4578    set_bounds 3.6229    solve 6.0416    add 0.3444    
Accumulated time: pickout 8.3063    decision 50.7887    set_bounds 30.6995    solve 112.9216    add 3.1466    
Current (lb-rhs): -0.181336909532547
647825 domains visited
Time out!!!!!!!!
Result: unknown in 212.0918 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.50119209, -19.03553009, -15.22840977, -15.80129242, -14.75272465,
         -15.83410263, -14.41858292, -16.04555511, -18.78121948, -17.07835579]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 277, 1, 566] with unstable size 276 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 566] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [276]; unstable size 276; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 276] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 276] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.08655131,  2.27971601, -0.70720470,  0.21668923, -1.24121785,
          0.14262724, -0.35904872,  2.26373386,  0.64331317]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.50119209, -19.03553009, -15.22840977, -15.80129242, -14.75272465,
         -15.83410263, -14.41858292, -16.04555511, -18.78121948, -17.07835579]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.99197388, -18.70638084, -14.75032997, -15.45928192, -14.10924339,
          -15.45036697, -14.32971954, -15.41107941, -18.31928253, -16.74798012],
         [-15.99197388, -18.70638084, -14.75032997, -15.45928192, -14.10924339,
          -15.45036697, -14.32971954, -15.41107941, -18.31928253, -16.74798012]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.42061043, -0.22047615,  1.08135986]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0095 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0526 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.34526443, -29.08344650, -25.10714531, -24.64510918, -24.53378105,
         -24.57837105, -26.13238144, -26.32098007, -25.42654800, -28.22369576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [589]; unstable size 589; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 279, 1, 589] with unstable size 278 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 589] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 589] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [278]; unstable size 278; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 278] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 278] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.90512031,  2.61772919, -0.68264651, -0.29089302, -1.19851458,
          0.45634842,  0.37348223, -0.85104132,  1.92439795]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.34526443, -29.08344650, -25.10714531, -24.64510918, -24.53378105,
         -24.57837105, -26.13238144, -26.32098007, -25.42654800, -28.22369576]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.34526443, -29.08345222, -25.10714912, -24.64510918, -24.53377914,
          -24.57837105, -26.13237953, -26.32098007, -25.42654991, -28.22369576],
         [-25.34526443, -29.08345222, -25.10714912, -24.64510918, -24.53377914,
          -24.57837105, -26.13237953, -26.32098007, -25.42654991, -28.22369576]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.76689339,  0.52877808,  0.06673813, -0.04459190,  0.84817886]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]],


         [[[-1.16349196, -0.29047608,  0.40793657,  ...,  0.47142863,
             0.53492069,  0.82063496],
           [-1.16349196, -0.24285704,  0.37619054,  ...,  1.20158756,
             1.13809550,  1.26507962],
           [-0.92539680,  0.07460327,  0.24920642,  ...,  1.36031771,
             1.34444475,  1.18571460],
           ...,
           [-0.29047608, -0.35396814, -0.33809513,  ...,  0.37619054,
             0.42380959,  0.12222230],
           [-0.56031746, -0.60793650, -0.46507925,  ...,  0.04285724,
            -0.09999990, -0.05238085],
           [-0.68730158, -0.67142856, -0.43333322,  ..., -0.24285704,
            -0.36984116, -0.32222211]],

          [[-1.27214170, -0.33816412,  0.33816436,  ...,  0.35426742,
             0.45088577,  0.78904998],
           [-1.27214170, -0.28985494,  0.32206130,  ...,  1.07890511,
             0.99838978,  1.19162667],
           [-1.03059578,  0.03220624,  0.20933989,  ...,  1.23993587,
             1.15942061,  1.06280196],
           ...,
           [-0.30595800, -0.38647330, -0.37037024,  ...,  0.45088577,
             0.53140104,  0.24154601],
           [-0.57971013, -0.62801927, -0.48309177,  ...,  0.12882459,
             0.01610318,  0.06441236],
           [-0.70853460, -0.69243151, -0.45088565,  ..., -0.19323659,
            -0.30595800, -0.22544271]],

          [[-1.19790113, -0.07346311,  0.88605714,  ...,  0.52623707,
             0.63118458,  0.97601217],
           [-1.06296861,  0.07646193,  0.87106466,  ...,  1.23088503,
             1.15592217,  1.33583248],
           [-0.71814090,  0.49625200,  0.72113961,  ...,  1.41079497,
             1.33583248,  1.23088503],
           ...,
           [ 0.10644694,  0.03148442,  0.04647692,  ...,  0.93103468,
             0.99100471,  0.69115460],
           [-0.14842562, -0.19340314, -0.05847061,  ...,  0.66116959,
             0.55622208,  0.60119957],
           [-0.28335828, -0.26836565, -0.04347810,  ...,  0.28635699,
             0.18140946,  0.25637197]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0603 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.30639458, -26.81990623, -22.08092117, -22.72490120, -20.55580521,
         -22.10051918, -22.94018555, -20.62528801, -29.47222137, -25.84111977]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [482]; unstable size 482; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 210, 1, 482] with unstable size 209 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 482] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 482] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [209]; unstable size 209; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 209] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 209] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.94138598,  2.94850826, -1.16203475,  0.27302718, -2.38051271,
         -0.17814445, -2.52197599,  5.83368635,  2.26016045]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-25.30639458, -26.81990623, -22.08092117, -22.72490120, -20.55580521,
         -22.10051918, -22.94018555, -20.62528801, -29.47222137, -25.84111977]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-25.30639648, -26.81990433, -22.08091927, -22.72489929, -20.55580711,
          -22.10051918, -22.94018173, -20.62528992, -29.47222328, -25.84112358],
         [-25.30639648, -26.81990433, -22.08091927, -22.72489929, -20.55580711,
          -22.10051918, -22.94018173, -20.62528992, -29.47222328, -25.84112358]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01959991, -1.54471207,  0.83966255, -1.47522926]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0660 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.38834953, -31.51884651, -29.35291672, -31.02542496, -30.66601372,
         -31.39447021, -32.53964615, -32.87446594, -24.85302734, -31.34247780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [590]; unstable size 590; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 208, 1, 590] with unstable size 207 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 590] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [207]; unstable size 207; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 207] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 207] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.28638113, 5.51830244, 2.94133282, 4.63216591, 3.96261120, 4.82937765,
         6.07474232, 5.84654808, 5.52136803]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0300 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
         -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 233, 1, 595] with unstable size 232 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 595] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [232]; unstable size 232; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 232] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 232] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.10743761,  5.94193077,  6.68529701,  5.16697264,  7.68069839,
          6.76294899,  6.25847864,  0.80630016, -0.04625940]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
         -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.81it/s]100%|██████████| 1/1 [00:00<00:00,  8.81it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-34.71385956, -32.61029434, -39.89569092, -40.63676071, -39.18803787,
          -41.77312088, -40.75054550, -40.34767151, -34.64828873, -33.03255844]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.42226410]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1161 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 41.187747955322266
alpha/beta optimization time: 1.1466567516326904
initial alpha-crown bounds: tensor([[ 1.18385363,  6.04057789,  6.78337097,  5.29151773,  7.78996515,
          6.85148954,  6.37167454,  0.88482285, -0.00952506]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.009525060653686523
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68396759033203
Verifying property 0 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1838536262512207.

Properties batch 1, size 1
Remaining timeout: 198.52838468551636
Verifying property 1 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.0405778884887695.

Properties batch 2, size 1
Remaining timeout: 198.40924453735352
Verifying property 2 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.7833709716796875.

Properties batch 3, size 1
Remaining timeout: 198.2994921207428
Verifying property 3 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.291517734527588.

Properties batch 4, size 1
Remaining timeout: 198.19804501533508
Verifying property 4 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.7899651527404785.

Properties batch 5, size 1
Remaining timeout: 198.09620928764343
Verifying property 5 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.851489543914795.

Properties batch 6, size 1
Remaining timeout: 197.99540400505066
Verifying property 6 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.371674537658691.

Properties batch 7, size 1
Remaining timeout: 197.89494228363037
Verifying property 7 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8848228454589844.

Properties batch 8, size 1
Remaining timeout: 197.79450798034668
Verifying property 8 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00952506]], device='cuda:0') need to verify.
Model prediction is: tensor([-35.68236923, -33.13178635, -40.98384094, -41.72174835, -40.35508347,
        -42.91672897, -41.79254532, -41.54734802, -35.50236130, -34.07597733],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00952506]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 595
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 227
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 838
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-8, 156] 
split level 2: [/input-12, 12] 
split level 3: [/input-12, 15] 
split level 4: [/input-8, 1122] 
split level 5: [/input-12, 89] 
split level 6: [/input-12, 2] 
split level 7: [/input-8, 164] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.458427429199219e-05
Time: prepare 0.0031    bound 0.0040    transfer 0.0013    finalize 0.0017    func 0.0101    
Accumulated time: func 0.0101    prepare 0.0035    bound 0.0040    transfer 0.0013    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0230    set_bounds 0.0172    solve 0.0102    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0230    set_bounds 0.0172    solve 0.0102    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06306648254394531

Result: safe in 2.3945 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-36.45841980, -44.35070419, -34.18724823, -36.62807846, -41.51102829,
         -36.81817245, -39.17654037, -38.88699341, -42.89539719, -42.96294785]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [414]; unstable size 414; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 108, 1, 414] with unstable size 107 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 414] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 414] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [107]; unstable size 107; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 107] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 107] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.80952764, 9.28115177, 1.87684703, 6.70495224, 2.04463553, 4.42981815,
         4.07691669, 7.95990849, 7.91283607]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0440 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
         -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [952]; unstable size 952; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 268, 1, 952] with unstable size 267 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 952] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 952] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [267]; unstable size 267; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 267] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 267] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86406422,  0.76336551,  2.41063452,  2.30971622,  3.50218773,
          1.55449760,  4.16273165, -1.88281870,  0.94847679]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
         -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.47599602, -23.78956413, -23.91806030, -25.75347519, -25.58520699,
          -27.02601433, -25.19198990, -27.62649536, -20.75136948, -23.69546700]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.72462654]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0531 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
         -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [503]; unstable size 503; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 503] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 503] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 503] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 221] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.14191866,  3.64040327,  2.98625898,  2.87868071,  3.34062862,
          4.70360136,  3.04852486,  1.37090325, -0.29452491]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
         -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.94it/s]100%|██████████| 1/1 [00:00<00:00,  8.93it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.28001881, -10.99314785, -16.16373444, -15.54601288, -15.46127510,
          -16.03202248, -17.35618210, -15.82649708, -13.24569702, -11.18510056]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.19195271]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1146 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 25.241043090820312
alpha/beta optimization time: 1.1406450271606445
initial alpha-crown bounds: tensor([[ 3.18642282,  3.68983412,  3.03233528,  2.93258524,  3.39427662,
          4.75412560,  3.10958624,  1.40874910, -0.26687312]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2668731212615967
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.67735934257507
Verifying property 0 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.186422824859619.

Properties batch 1, size 1
Remaining timeout: 198.56216764450073
Verifying property 1 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6898341178894043.

Properties batch 2, size 1
Remaining timeout: 198.45011281967163
Verifying property 2 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0323352813720703.

Properties batch 3, size 1
Remaining timeout: 198.3472034931183
Verifying property 3 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9325852394104004.

Properties batch 4, size 1
Remaining timeout: 198.24631357192993
Verifying property 4 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3942766189575195.

Properties batch 5, size 1
Remaining timeout: 198.1452353000641
Verifying property 5 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.754125595092773.

Properties batch 6, size 1
Remaining timeout: 198.04405570030212
Verifying property 6 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.109586238861084.

Properties batch 7, size 1
Remaining timeout: 197.94311141967773
Verifying property 7 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4087491035461426.

Properties batch 8, size 1
Remaining timeout: 197.84207677841187
Verifying property 8 with 1 instances.
##### Instance 135 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.26687312]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.20746422, -11.40287113, -17.07642365, -16.43939400, -16.29893875,
        -16.93239021, -18.25842094, -16.83162689, -14.06174088, -12.06176949],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.26687312]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 503
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 219
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 745
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 71] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 32] 
split level 4: [/input-12, 89] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 2] 
split level 7: [/input-12, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.0045468807220458984
Time: prepare 0.0018    bound 0.1081    transfer 0.0013    finalize 0.0014    func 0.1126    
Accumulated time: func 0.1126    prepare 0.0022    bound 0.1081    transfer 0.0013    finalize 0.0014    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02063 (8), -0.01873 (8), -0.01809 (8), -0.01557 (8), -0.01121 (8), -0.00922 (8), -0.00885 (8), -0.00591 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0227    set_bounds 0.0162    solve 0.1127    add 0.0326    
Accumulated time: pickout 0.0004    decision 0.0227    set_bounds 0.0162    solve 0.1127    add 0.0326    
Current (lb-rhs): -0.020630478858947754
8 domains visited
Cumulative time: 0.1997847557067871

BaB round 2
batch: 8
splitting decisions: 
split level 0: [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] [/input-8, 164] 
split level 1: [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] [/input-12, 36] 
split level 2: [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] 
split level 3: [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] [/input-8, 163] [/input-12, 79] 
split level 4: [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] [/input-8, 166] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.363059997558594e-05
Time: prepare 0.0050    bound 0.0040    transfer 0.0018    finalize 0.0016    func 0.0123    
Accumulated time: func 0.1249    prepare 0.0075    bound 0.1120    transfer 0.0030    finalize 0.0029    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0250    set_bounds 0.0132    solve 0.0123    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0477    set_bounds 0.0294    solve 0.1250    add 0.0327    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
8 domains visited
Cumulative time: 0.25182580947875977

Result: safe in 2.5685 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.03878975, -27.34531403, -23.53932953, -24.00347710, -23.92297554,
         -24.22077560, -25.12296104, -25.69461441, -24.00042725, -27.72712517]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [585]; unstable size 585; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 585] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 585] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 195] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.34309196, 0.87681019, 1.16530991, 1.17494905, 1.34177232, 2.16514826,
         2.73782182, 1.01523042, 4.69900179]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0662 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
         -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [438]; unstable size 438; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 438] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 438] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 438] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 275] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.22114491,  4.09420586, -0.54178762,  0.56779766, -0.32674551,
          0.62577611,  1.91951990,  3.76403713,  3.22747231]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
         -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.83it/s]100%|██████████| 1/1 [00:00<00:00,  8.82it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.00904274, -21.11783409, -15.79992867, -16.90988350, -16.01198578,
          -17.07268524, -15.70636559, -18.61373138, -21.00964928, -20.24596214],
         [-20.00904274, -21.11783409, -15.79992867, -16.90988350, -16.01198578,
          -17.07268524, -15.70636559, -18.61373138, -21.00964928, -20.24596214]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.09356308, 0.30562019]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1163 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.213319778442383
alpha/beta optimization time: 1.145031452178955
initial alpha-crown bounds: tensor([[ 3.30038953,  4.16773081, -0.48484462,  0.61480677, -0.26430142,
          0.68667442,  2.01555729,  3.85170698,  3.32560086]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4848446249961853
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.69089531898499
Verifying property 0 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.300389528274536.

Properties batch 1, size 1
Remaining timeout: 198.55695700645447
Verifying property 1 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.167730808258057.

Properties batch 2, size 1
Remaining timeout: 198.45110726356506
Verifying property 2 with 1 instances.
##### Instance 137 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.48484462]], device='cuda:0') need to verify.
Model prediction is: tensor([-20.16277122, -21.12893295, -16.04788589, -16.93409729, -16.10508919,
        -17.10481453, -15.34734917, -18.76787186, -21.06470108, -20.31587410],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.48484462]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 438
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 724
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 8] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 59] 
split level 3: [/input-12, 72] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 6] 
split level 6: [/input-8, 1619] 
split level 7: [/input-8, 1636] 
pruning_in_iteration open status: True
ratio of positive domain = 225 / 256 = 0.87890625
pruning-in-iteration extra time: 0.004835605621337891
Time: prepare 0.0031    bound 0.1406    transfer 0.0013    finalize 0.0017    func 0.1468    
Accumulated time: func 0.1468    prepare 0.0036    bound 0.1406    transfer 0.0013    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17606 (8), -0.16975 (8), -0.15519 (8), -0.15144 (8), -0.14852 (8), -0.14478 (8), -0.12839 (8), -0.12168 (8), -0.10924 (8), -0.10289 (8), -0.08422 (8), -0.07766 (8), -0.05462 (8), -0.04697 (8), -0.02989 (8), -0.02823 (8), -0.02331 (8), -0.02318 (8), -0.02180 (8), -0.01791 (8), 
Length of domains: 31
Time: pickout 0.0003    decision 0.0228    set_bounds 0.0175    solve 0.1469    add 0.0015    
Accumulated time: pickout 0.0003    decision 0.0228    set_bounds 0.0175    solve 0.1469    add 0.0015    
Current (lb-rhs): -0.1760636270046234
31 domains visited
Cumulative time: 0.19343948364257812

BaB round 2
batch: 31
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 12] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] [/input-12, 56] 
split level 1: [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-8, 1718] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] [/input-12, 12] 
split level 2: [/input-12, 34] [/input-8, 1259] [/input-8, 99] [/input-8, 1259] [/input-8, 1963] [/input-8, 476] [/input-12, 34] [/input-8, 1259] [/input-8, 99] [/input-8, 1259] 
pruning_in_iteration open status: True
ratio of positive domain = 222 / 248 = 0.8951612903225806
pruning-in-iteration extra time: 0.004605293273925781
Time: prepare 0.0048    bound 0.1284    transfer 0.0017    finalize 0.0016    func 0.1366    
Accumulated time: func 0.2834    prepare 0.0086    bound 0.2690    transfer 0.0030    finalize 0.0033    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15761 (11), -0.15141 (11), -0.13681 (11), -0.13344 (11), -0.13025 (11), -0.12678 (11), -0.11013 (11), -0.10352 (11), -0.08656 (11), -0.08394 (11), -0.07887 (11), -0.07867 (11), -0.06162 (11), -0.05947 (11), -0.05389 (11), -0.05350 (11), -0.03057 (11), -0.02837 (11), -0.01837 (11), -0.01587 (11), 
Length of domains: 26
Time: pickout 0.0014    decision 0.0156    set_bounds 0.0101    solve 0.1366    add 0.0025    
Accumulated time: pickout 0.0017    decision 0.0384    set_bounds 0.0276    solve 0.2835    add 0.0040    
Current (lb-rhs): -0.15761274099349976
57 domains visited
Cumulative time: 0.3603801727294922

BaB round 3
batch: 26
splitting decisions: 
split level 0: [/input-12, 56] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 56] [/input-12, 56] [/input-8, 1259] [/input-8, 1635] 
split level 1: [/input-12, 34] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-8, 1249] [/input-12, 34] [/input-12, 34] [/input-8, 476] [/input-8, 803] 
split level 2: [/input-8, 476] [/input-8, 1644] [/input-8, 428] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] [/input-8, 476] [/input-8, 426] [/input-8, 1718] [/input-8, 1644] 
pruning_in_iteration open status: True
ratio of positive domain = 106 / 208 = 0.5096153846153846
pruning-in-iteration extra time: 0.00455021858215332
Time: prepare 0.0041    bound 0.1389    transfer 0.0011    finalize 0.0014    func 0.1455    
Accumulated time: func 0.4289    prepare 0.0129    bound 0.4079    transfer 0.0041    finalize 0.0046    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13862 (14), -0.13716 (14), -0.13200 (14), -0.13186 (14), -0.13054 (14), -0.13039 (14), -0.12930 (14), -0.12784 (14), -0.12717 (14), -0.12568 (14), -0.12308 (14), -0.12265 (14), -0.12158 (14), -0.12120 (14), -0.11868 (14), -0.11821 (14), -0.11722 (14), -0.11674 (14), -0.11417 (14), -0.11350 (14), 
Length of domains: 102
Time: pickout 0.0012    decision 0.0151    set_bounds 0.0080    solve 0.1455    add 0.0018    
Accumulated time: pickout 0.0030    decision 0.0535    set_bounds 0.0356    solve 0.4291    add 0.0059    
Current (lb-rhs): -0.1386197805404663
159 domains visited
Cumulative time: 0.532663106918335

BaB round 4
batch: 102
splitting decisions: 
split level 0: [/input-8, 91] [/input-8, 428] [/input-8, 91] [/input-8, 428] [/input-8, 1249] [/input-8, 428] [/input-8, 91] [/input-8, 428] [/input-8, 91] [/input-8, 91] 
split level 1: [/input-8, 1249] [/input-8, 99] [/input-8, 1249] [/input-8, 99] [/input-8, 91] [/input-8, 99] [/input-8, 1249] [/input-8, 99] [/input-8, 428] [/input-8, 1241] 
pruning_in_iteration open status: False
ratio of positive domain = 54 / 408 = 0.13235294117647056
pruning-in-iteration extra time: 5.793571472167969e-05
Time: prepare 0.0092    bound 0.0975    transfer 0.0020    finalize 0.0024    func 0.1112    
Accumulated time: func 0.5401    prepare 0.0223    bound 0.5054    transfer 0.0061    finalize 0.0070    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13037 (16), -0.12888 (16), -0.12346 (16), -0.12332 (16), -0.12197 (16), -0.12182 (16), -0.12098 (16), -0.11944 (16), -0.11830 (16), -0.11685 (16), -0.11467 (16), -0.11451 (16), -0.11405 (16), -0.11319 (16), -0.11294 (16), -0.11256 (16), -0.11180 (16), -0.11058 (16), -0.11031 (16), -0.10993 (16), 
Length of domains: 350
Time: pickout 0.0020    decision 0.0237    set_bounds 0.0107    solve 0.1113    add 0.0025    
Accumulated time: pickout 0.0050    decision 0.0772    set_bounds 0.0463    solve 0.5404    add 0.0084    
Current (lb-rhs): -0.13037076592445374
509 domains visited
Cumulative time: 0.6834714412689209

BaB round 5
batch: 350
splitting decisions: 
split level 0: [/input-8, 99] [/input-8, 1249] [/input-8, 99] [/input-8, 1580] [/input-8, 99] [/input-8, 1580] [/input-8, 99] [/input-8, 1954] [/input-8, 757] [/input-8, 757] 
pruning_in_iteration open status: False
ratio of positive domain = 61 / 700 = 0.08714285714285719
pruning-in-iteration extra time: 5.6743621826171875e-05
Time: prepare 0.0136    bound 0.0990    transfer 0.0057    finalize 0.0035    func 0.1219    
Accumulated time: func 0.6619    prepare 0.0362    bound 0.6044    transfer 0.0118    finalize 0.0105    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12291 (17), -0.12165 (17), -0.12140 (17), -0.12013 (17), -0.11832 (17), -0.11677 (17), -0.11552 (17), -0.11504 (17), -0.11464 (17), -0.11414 (17), -0.11399 (17), -0.11352 (17), -0.11310 (17), -0.11260 (17), -0.11167 (17), -0.11063 (17), -0.11012 (17), -0.10949 (17), -0.10915 (17), -0.10800 (17), 
Length of domains: 636
Time: pickout 0.0050    decision 0.0344    set_bounds 0.0160    solve 0.1220    add 0.0243    
Accumulated time: pickout 0.0100    decision 0.1116    set_bounds 0.0624    solve 0.6624    add 0.0327    
Current (lb-rhs): -0.12291267514228821
1145 domains visited
Cumulative time: 0.8861663341522217

BaB round 6
batch: 636
splitting decisions: 
split level 0: [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1580] [/input-8, 1954] [/input-8, 1580] [/input-8, 1580] [/input-8, 1241] [/input-8, 428] [/input-8, 1580] 
pruning_in_iteration open status: False
ratio of positive domain = 162 / 1272 = 0.12735849056603776
pruning-in-iteration extra time: 7.939338684082031e-05
Time: prepare 0.0240    bound 0.1134    transfer 0.0032    finalize 0.0069    func 0.1476    
Accumulated time: func 0.8095    prepare 0.0604    bound 0.7178    transfer 0.0150    finalize 0.0174    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11815 (18), -0.11682 (18), -0.11661 (18), -0.11529 (18), -0.11336 (18), -0.11181 (18), -0.11059 (18), -0.11016 (18), -0.11014 (18), -0.11010 (18), -0.10994 (18), -0.10973 (18), -0.10905 (18), -0.10862 (18), -0.10855 (18), -0.10850 (18), -0.10832 (18), -0.10817 (18), -0.10711 (18), -0.10617 (18), 
Length of domains: 1106
Time: pickout 0.0091    decision 0.0501    set_bounds 0.0268    solve 0.1479    add 0.0053    
Accumulated time: pickout 0.0192    decision 0.1617    set_bounds 0.0891    solve 0.8103    add 0.0380    
Current (lb-rhs): -0.11814671754837036
2251 domains visited
Cumulative time: 1.1269428730010986

BaB round 7
batch: 1106
splitting decisions: 
split level 0: [/input-8, 428] [/input-8, 1954] [/input-8, 428] [/input-8, 428] [/input-8, 428] [/input-8, 28] [/input-8, 1929] [/input-8, 428] [/input-8, 1929] [/input-8, 1954] 
pruning_in_iteration open status: False
ratio of positive domain = 141 / 2212 = 0.0637432188065099
pruning-in-iteration extra time: 9.083747863769531e-05
Time: prepare 0.0439    bound 0.1349    transfer 0.0148    finalize 0.0123    func 0.2061    
Accumulated time: func 1.0156    prepare 0.1045    bound 0.8527    transfer 0.0298    finalize 0.0297    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11146 (19), -0.11133 (19), -0.10997 (19), -0.10992 (19), -0.10979 (19), -0.10853 (19), -0.10843 (19), -0.10699 (19), -0.10594 (19), -0.10580 (19), -0.10565 (19), -0.10530 (19), -0.10524 (19), -0.10480 (19), -0.10433 (19), -0.10420 (19), -0.10411 (19), -0.10375 (19), -0.10366 (19), -0.10327 (19), 
Length of domains: 2060
Time: pickout 0.0155    decision 0.0762    set_bounds 0.0463    solve 0.2065    add 0.0156    
Accumulated time: pickout 0.0347    decision 0.2379    set_bounds 0.1355    solve 1.0167    add 0.0536    
Current (lb-rhs): -0.11145961284637451
4311 domains visited
Cumulative time: 1.4898838996887207

BaB round 8
batch: 2060
splitting decisions: 
split level 0: [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 1635] [/input-8, 476] [/input-8, 28] [/input-8, 1635] [/input-8, 28] [/input-8, 1963] [/input-8, 1635] 
pruning_in_iteration open status: True
ratio of positive domain = 911 / 4120 = 0.22111650485436896
pruning-in-iteration extra time: 0.0015974044799804688
Time: prepare 0.0803    bound 0.2463    transfer 0.0453    finalize 0.0229    func 0.3953    
Accumulated time: func 1.4109    prepare 0.1851    bound 1.0990    transfer 0.0750    finalize 0.0526    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10945 (20), -0.10919 (20), -0.10791 (20), -0.10776 (20), -0.10765 (20), -0.10642 (20), -0.10622 (20), -0.10489 (20), -0.10411 (20), -0.10405 (20), -0.10341 (20), -0.10293 (20), -0.10288 (20), -0.10250 (20), -0.10249 (20), -0.10243 (20), -0.10186 (20), -0.10139 (20), -0.10133 (20), -0.10113 (20), 
Length of domains: 3209
Time: pickout 0.0330    decision 0.2803    set_bounds 0.0917    solve 0.3964    add 0.0175    
Accumulated time: pickout 0.0677    decision 0.5181    set_bounds 0.2271    solve 1.4131    add 0.0712    
Current (lb-rhs): -0.10944652557373047
7520 domains visited
Cumulative time: 2.317319393157959

BaB round 9
batch: 3209
splitting decisions: 
split level 0: [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 803] [/input-8, 1929] [/input-8, 803] [/input-8, 755] [/input-8, 803] [/input-8, 803] [/input-8, 803] 
pruning_in_iteration open status: False
ratio of positive domain = 1189 / 6418 = 0.18526020567154877
pruning-in-iteration extra time: 5.984306335449219e-05
Time: prepare 0.1350    bound 0.2984    transfer 0.0410    finalize 0.0330    func 0.5088    
Accumulated time: func 1.9197    prepare 0.3203    bound 1.3974    transfer 0.1160    finalize 0.0856    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10381 (21), -0.10241 (21), -0.10234 (21), -0.10227 (21), -0.10199 (21), -0.10130 (21), -0.10087 (21), -0.10080 (21), -0.10045 (21), -0.10014 (21), -0.09976 (21), -0.09930 (21), -0.09900 (21), -0.09860 (21), -0.09802 (21), -0.09772 (21), -0.09768 (21), -0.09746 (21), -0.09641 (21), -0.09630 (21), 
Length of domains: 5206
Time: pickout 0.0483    decision 0.1952    set_bounds 0.2873    solve 0.5102    add 0.0226    
Accumulated time: pickout 0.1161    decision 0.7133    set_bounds 0.5144    solve 1.9233    add 0.0937    
Current (lb-rhs): -0.10381290316581726
12726 domains visited
Cumulative time: 3.391573429107666

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1963] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1963] [/input-8, 1954] [/input-8, 1954] 
pruning_in_iteration open status: False
ratio of positive domain = 1637 / 8192 = 0.1998291015625
pruning-in-iteration extra time: 5.602836608886719e-05
Time: prepare 0.1648    bound 0.3597    transfer 0.0368    finalize 0.0468    func 0.6091    
Accumulated time: func 2.5288    prepare 0.4854    bound 1.7571    transfer 0.1528    finalize 0.1324    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10381 (21), -0.10234 (21), -0.10227 (21), -0.10080 (21), -0.09813 (22), -0.09802 (21), -0.09768 (21), -0.09765 (22), -0.09705 (22), -0.09659 (22), -0.09641 (21), -0.09611 (22), -0.09608 (21), -0.09585 (22), -0.09574 (21), -0.09568 (21), -0.09551 (22), -0.09514 (21), -0.09507 (22), -0.09466 (22), 
Length of domains: 7611
Time: pickout 0.0594    decision 0.2350    set_bounds 0.3129    solve 0.6107    add 0.0326    
Accumulated time: pickout 0.1755    decision 0.9483    set_bounds 0.8273    solve 2.5341    add 0.1263    
Current (lb-rhs): -0.10381290316581726
19227 domains visited
current_vram/total_varm: 10.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.6598591804504395

BaB round 11
batch: 7611
splitting decisions: 
split level 0: [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1954] [/input-8, 1635] [/input-8, 1954] [/input-8, 1963] [/input-8, 418] [/input-8, 1954] [/input-8, 1954] 
pruning_in_iteration open status: False
ratio of positive domain = 2960 / 15222 = 0.19445539350939434
pruning-in-iteration extra time: 7.724761962890625e-05
Time: prepare 0.3077    bound 0.6353    transfer 0.1143    finalize 0.0729    func 1.1320    
Accumulated time: func 3.6608    prepare 0.7935    bound 2.3925    transfer 0.2671    finalize 0.2053    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09959 (22), -0.09814 (22), -0.09805 (22), -0.09660 (22), -0.09386 (23), -0.09385 (22), -0.09375 (22), -0.09346 (22), -0.09336 (23), -0.09292 (23), -0.09233 (23), -0.09231 (22), -0.09214 (22), -0.09185 (22), -0.09182 (23), -0.09169 (23), -0.09163 (22), -0.09154 (22), -0.09151 (22), -0.09138 (23), 
Length of domains: 12167
Time: pickout 0.1106    decision 0.5924    set_bounds 0.4961    solve 1.1354    add 0.0566    
Accumulated time: pickout 0.2861    decision 1.5407    set_bounds 1.3234    solve 3.6694    add 0.1829    
Current (lb-rhs): -0.0995895266532898
31394 domains visited
Cumulative time: 7.080922842025757

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input-8, 28] [/input-8, 426] [/input-8, 426] [/input-8, 28] [/input-8, 1579] [/input-8, 44] [/input-8, 1579] [/input-8, 426] [/input-8, 426] [/input-8, 426] 
pruning_in_iteration open status: False
ratio of positive domain = 2664 / 16384 = 0.16259765625
pruning-in-iteration extra time: 8.273124694824219e-05
Time: prepare 0.3273    bound 0.6756    transfer 0.1271    finalize 0.0825    func 1.2143    
Accumulated time: func 4.8750    prepare 1.1211    bound 3.0681    transfer 0.3943    finalize 0.2878    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09524 (23), -0.09385 (22), -0.09380 (23), -0.09371 (23), -0.09231 (22), -0.09226 (23), -0.09163 (22), -0.09009 (22), -0.08937 (23), -0.08907 (23), -0.08814 (23), -0.08807 (22), -0.08778 (23), -0.08774 (24), -0.08764 (24), -0.08748 (23), -0.08734 (24), -0.08726 (23), -0.08715 (23), -0.08713 (24), 
Length of domains: 17640
Time: pickout 0.1150    decision 0.6519    set_bounds 0.5476    solve 1.2175    add 0.0798    
Accumulated time: pickout 0.4011    decision 2.1925    set_bounds 1.8710    solve 4.8869    add 0.2627    
Current (lb-rhs): -0.09524431824684143
45059 domains visited
current_vram/total_varm: 28.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.724151372909546

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input-8, 426] [/input-8, 803] [/input-8, 1579] [/input-8, 428] [/input-8, 1579] [/input-8, 28] [/input-8, 426] [/input-8, 803] [/input-8, 28] [/input-8, 426] 
pruning_in_iteration open status: True
ratio of positive domain = 6718 / 32768 = 0.20501708984375
pruning-in-iteration extra time: 0.00013685226440429688
Time: prepare 0.6455    bound 1.2969    transfer 0.3026    finalize 0.3949    func 2.6420    
Accumulated time: func 7.5170    prepare 1.7669    bound 4.3650    transfer 0.6969    finalize 0.6827    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09385 (22), -0.09231 (22), -0.09163 (22), -0.09009 (22), -0.08913 (24), -0.08899 (24), -0.08807 (22), -0.08769 (24), -0.08759 (24), -0.08757 (24), -0.08746 (24), -0.08707 (22), -0.08649 (22), -0.08615 (24), -0.08604 (24), -0.08570 (22), -0.08547 (22), -0.08539 (22), -0.08474 (22), -0.08463 (24), 
Length of domains: 27306
Time: pickout 0.2434    decision 1.8489    set_bounds 0.9886    solve 2.6486    add 0.0815    
Accumulated time: pickout 0.6444    decision 4.0414    set_bounds 2.8596    solve 7.5356    add 0.3442    
Current (lb-rhs): -0.09385016560554504
71109 domains visited
current_vram/total_varm: 29.3GB/99.9GB, batch_size increase to 32768
Cumulative time: 15.607272624969482

BaB round 14
batch: 27306
splitting decisions: 
split level 0: [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 803] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] [/input-8, 44] 
pruning_in_iteration open status: True
ratio of positive domain = 22920 / 54612 = 0.41968798066359037
pruning-in-iteration extra time: 0.005323171615600586
Time: prepare 1.1578    bound 1.5830    transfer 0.5501    finalize 0.6483    func 3.9421    
Accumulated time: func 11.4591    prepare 2.9251    bound 5.9480    transfer 1.2469    finalize 1.3310    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08936 (23), -0.08782 (23), -0.08688 (23), -0.08534 (23), -0.08452 (25), -0.08432 (25), -0.08365 (23), -0.08305 (25), -0.08298 (25), -0.08289 (25), -0.08289 (25), -0.08279 (25), -0.08269 (25), -0.08230 (23), -0.08214 (23), -0.08205 (23), -0.08151 (25), -0.08138 (25), -0.08135 (25), -0.08135 (25), 
Length of domains: 31692
Time: pickout 0.3990    decision 2.7718    set_bounds 1.7185    solve 3.9523    add 0.0988    
Accumulated time: pickout 1.0434    decision 6.8133    set_bounds 4.5781    solve 11.4879    add 0.4430    
Current (lb-rhs): -0.0893561840057373
102801 domains visited
Cumulative time: 24.693248748779297

BaB round 15
batch: 31692
splitting decisions: 
split level 0: [/input-8, 28] [/input-8, 28] [/input-8, 1579] [/input-8, 28] [/input-8, 1963] [/input-8, 28] [/input-8, 28] [/input-8, 28] [/input-8, 1954] [/input-8, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 30006 / 63384 = 0.47340022718667174
pruning-in-iteration extra time: 0.005441188812255859
Time: prepare 1.3558    bound 1.6911    transfer 0.6511    finalize 0.8165    func 4.5179    
Accumulated time: func 15.9770    prepare 4.2813    bound 7.6391    transfer 1.8980    finalize 2.1475    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08309 (24), -0.08297 (24), -0.08191 (24), -0.08172 (26), -0.08156 (24), -0.08145 (26), -0.08143 (24), -0.08046 (24), -0.08037 (24), -0.08026 (26), -0.08018 (26), -0.08003 (26), -0.07993 (26), -0.07991 (26), -0.07965 (26), -0.07892 (24), -0.07873 (26), -0.07850 (26), -0.07845 (26), -0.07837 (26), 
Length of domains: 33378
Time: pickout 0.4901    decision 3.5354    set_bounds 2.1202    solve 4.5297    add 0.1061    
Accumulated time: pickout 1.5336    decision 10.3486    set_bounds 6.6983    solve 16.0176    add 0.5491    
Current (lb-rhs): -0.08309346437454224
136179 domains visited
Cumulative time: 35.66968369483948

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1579] [/input-8, 28] [/input-8, 1579] [/input-8, 1635] [/input-8, 1579] [/input-8, 426] [/input-8, 1635] [/input-8, 426] [/input-8, 1579] [/input-8, 28] 
pruning_in_iteration open status: True
ratio of positive domain = 21405 / 65536 = 0.3266143798828125
pruning-in-iteration extra time: 0.005322456359863281
Time: prepare 1.4403    bound 2.9042    transfer 0.6854    finalize 0.4260    func 5.4594    
Accumulated time: func 21.4364    prepare 5.7219    bound 10.5432    transfer 2.5834    finalize 2.5735    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07833 (27), -0.07812 (27), -0.07777 (25), -0.07755 (25), -0.07690 (27), -0.07679 (27), -0.07671 (27), -0.07659 (27), -0.07654 (25), -0.07647 (27), -0.07631 (25), -0.07626 (27), -0.07623 (25), -0.07602 (25), -0.07564 (25), -0.07561 (24), -0.07547 (25), -0.07537 (27), -0.07517 (27), -0.07503 (27), 
Length of domains: 44741
Time: pickout 0.5336    decision 3.3179    set_bounds 2.3109    solve 5.9309    add 0.1434    
Accumulated time: pickout 2.0672    decision 13.6666    set_bounds 9.0092    solve 21.9484    add 0.6925    
Current (lb-rhs): -0.07832875847816467
180310 domains visited
Cumulative time: 48.10490703582764

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] [/input-8, 1963] 
pruning_in_iteration open status: True
ratio of positive domain = 16354 / 65536 = 0.249542236328125
pruning-in-iteration extra time: 0.0052280426025390625
Time: prepare 1.4037    bound 3.3713    transfer 0.6877    finalize 0.9339    func 6.3997    
Accumulated time: func 27.8360    prepare 7.1260    bound 13.9145    transfer 3.2711    finalize 3.5074    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07494 (26), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07340 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07260 (28), -0.07249 (28), -0.07239 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), 
Length of domains: 61155
Time: pickout 0.5821    decision 3.3232    set_bounds 2.3849    solve 6.4123    add 0.1507    
Accumulated time: pickout 2.6492    decision 16.9898    set_bounds 11.3940    solve 28.3608    add 0.8432    
Current (lb-rhs): -0.07630836963653564
229492 domains visited
Cumulative time: 61.10664629936218

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] [/input-12, 97] 
pruning_in_iteration open status: False
ratio of positive domain = 12852 / 65536 = 0.19610595703125
pruning-in-iteration extra time: 0.0003826618194580078
Time: prepare 1.4551    bound 7.7426    transfer 0.6947    finalize 0.4578    func 10.3581    
Accumulated time: func 38.1941    prepare 8.5815    bound 21.6571    transfer 3.9658    finalize 3.9652    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07150 (27), -0.07120 (28), -0.07111 (26), 
Length of domains: 80884
Time: pickout 0.5805    decision 3.5627    set_bounds 2.7646    solve 10.3757    add 0.2617    
Accumulated time: pickout 3.2297    decision 20.5525    set_bounds 14.1587    solve 38.7365    add 1.1049    
Current (lb-rhs): -0.07630836963653564
281989 domains visited
Cumulative time: 78.93016052246094

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1241] [/input-8, 1241] [/input-8, 722] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] [/input-8, 1241] 
pruning_in_iteration open status: False
ratio of positive domain = 12108 / 65536 = 0.18475341796875
pruning-in-iteration extra time: 0.00035881996154785156
Time: prepare 1.4577    bound 7.7499    transfer 0.6917    finalize 0.4678    func 10.3712    
Accumulated time: func 48.5653    prepare 10.0397    bound 29.4070    transfer 4.6575    finalize 4.4330    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 101368
Time: pickout 0.7468    decision 4.7221    set_bounds 3.7615    solve 10.3880    add 0.1806    
Accumulated time: pickout 3.9765    decision 25.2746    set_bounds 17.9202    solve 49.1245    add 1.2856    
Current (lb-rhs): -0.07630836963653564
335241 domains visited
Cumulative time: 98.9229588508606

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 483] [/input-8, 1635] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] [/input-8, 483] 
pruning_in_iteration open status: True
ratio of positive domain = 16528 / 65536 = 0.252197265625
pruning-in-iteration extra time: 0.005318403244018555
Time: prepare 1.5206    bound 3.3727    transfer 0.6928    finalize 0.4447    func 6.0349    
Accumulated time: func 54.6003    prepare 11.5607    bound 32.7797    transfer 5.3503    finalize 4.8777    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 117608
Time: pickout 0.6295    decision 3.9804    set_bounds 2.5790    solve 7.0205    add 0.3534    
Accumulated time: pickout 4.6060    decision 29.2550    set_bounds 20.4992    solve 56.1449    add 1.6390    
Current (lb-rhs): -0.07630836963653564
384249 domains visited
Cumulative time: 113.67976140975952

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] [/input-8, 482] 
pruning_in_iteration open status: True
ratio of positive domain = 15272 / 65536 = 0.2330322265625
pruning-in-iteration extra time: 0.006147146224975586
Time: prepare 1.4704    bound 2.8640    transfer 0.6898    finalize 1.5953    func 6.6223    
Accumulated time: func 61.2225    prepare 13.0316    bound 35.6437    transfer 6.0402    finalize 6.4730    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 135104
Time: pickout 0.6162    decision 3.4156    set_bounds 2.7878    solve 6.6364    add 0.2806    
Accumulated time: pickout 5.2222    decision 32.6706    set_bounds 23.2871    solve 62.7813    add 1.9196    
Current (lb-rhs): -0.07630836963653564
434513 domains visited
Cumulative time: 127.57172083854675

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] [/input-8, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 25623 / 65536 = 0.3909759521484375
pruning-in-iteration extra time: 0.006036520004272461
Time: prepare 1.5009    bound 2.5492    transfer 0.6921    finalize 1.7253    func 6.4698    
Accumulated time: func 67.6923    prepare 14.5330    bound 38.1929    transfer 6.7323    finalize 8.1983    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 142249
Time: pickout 0.6253    decision 3.4259    set_bounds 3.0416    solve 6.4839    add 0.3020    
Accumulated time: pickout 5.8475    decision 36.0965    set_bounds 26.3287    solve 69.2652    add 2.2216    
Current (lb-rhs): -0.07630836963653564
474426 domains visited
Cumulative time: 141.6556921005249

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 722] [/input-8, 722] [/input-8, 1241] [/input-8, 722] [/input-8, 1241] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] [/input-8, 722] 
pruning_in_iteration open status: True
ratio of positive domain = 19857 / 65536 = 0.3029937744140625
pruning-in-iteration extra time: 0.006278038024902344
Time: prepare 1.4868    bound 2.7144    transfer 0.6995    finalize 0.4510    func 5.3552    
Accumulated time: func 73.0474    prepare 16.0203    bound 40.9073    transfer 7.4318    finalize 8.6493    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 155160
Time: pickout 0.6466    decision 3.4276    set_bounds 3.1694    solve 5.3761    add 0.1685    
Accumulated time: pickout 6.4941    decision 39.5241    set_bounds 29.4980    solve 74.6414    add 2.3900    
Current (lb-rhs): -0.07630836963653564
520105 domains visited
Cumulative time: 154.6679162979126

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] [/input-8, 932] 
pruning_in_iteration open status: True
ratio of positive domain = 25131 / 65536 = 0.3834686279296875
pruning-in-iteration extra time: 0.006196498870849609
Time: prepare 1.4770    bound 2.5174    transfer 0.7152    finalize 0.4230    func 5.1360    
Accumulated time: func 78.1834    prepare 17.4977    bound 43.4247    transfer 8.1470    finalize 9.0723    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 162797
Time: pickout 0.6848    decision 5.0046    set_bounds 3.2453    solve 5.1575    add 0.1516    
Accumulated time: pickout 7.1789    decision 44.5288    set_bounds 32.7434    solve 79.7989    add 2.5417    
Current (lb-rhs): -0.07630836963653564
560510 domains visited
Cumulative time: 169.14284133911133

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1644] [/input-8, 755] [/input-8, 401] [/input-8, 401] [/input-8, 755] [/input-8, 401] [/input-8, 401] [/input-8, 1644] [/input-8, 1644] [/input-8, 1644] 
pruning_in_iteration open status: True
ratio of positive domain = 21093 / 65536 = 0.3218536376953125
pruning-in-iteration extra time: 0.006446123123168945
Time: prepare 1.5031    bound 2.6497    transfer 0.7167    finalize 0.4256    func 5.2983    
Accumulated time: func 83.4818    prepare 19.0013    bound 46.0744    transfer 8.8637    finalize 9.4979    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 174472
Time: pickout 0.6806    decision 4.7271    set_bounds 3.4624    solve 5.3206    add 0.1975    
Accumulated time: pickout 7.8595    decision 49.2559    set_bounds 36.2057    solve 85.1195    add 2.7392    
Current (lb-rhs): -0.07630836963653564
604953 domains visited
Cumulative time: 183.74622297286987

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input-8, 401] [/input-8, 401] [/input-8, 401] [/input-8, 401] [/input-8, 1644] [/input-8, 1644] [/input-8, 401] [/input-8, 1644] [/input-8, 401] [/input-8, 1644] 
pruning_in_iteration open status: True
ratio of positive domain = 20401 / 65536 = 0.3112945556640625
pruning-in-iteration extra time: 0.005931854248046875
Time: prepare 1.4844    bound 2.6673    transfer 0.7157    finalize 0.4290    func 5.3010    
Accumulated time: func 88.7828    prepare 20.4860    bound 48.7417    transfer 9.5794    finalize 9.9269    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 186839
Time: pickout 0.6691    decision 3.4525    set_bounds 3.5306    solve 5.3237    add 0.1679    
Accumulated time: pickout 8.5286    decision 52.7083    set_bounds 39.7363    solve 90.4432    add 2.9070    
Current (lb-rhs): -0.07630836963653564
650088 domains visited
Cumulative time: 197.10435509681702

BaB round 27
batch: 32768
splitting decisions: 
split level 0: [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 465] [/input-8, 1644] [/input-8, 465] [/input-8, 465] 
pruning_in_iteration open status: True
ratio of positive domain = 22791 / 65536 = 0.3477630615234375
pruning-in-iteration extra time: 0.005915403366088867
Time: prepare 1.4665    bound 2.5852    transfer 0.7279    finalize 0.4718    func 5.2544    
Accumulated time: func 94.0372    prepare 21.9531    bound 51.3270    transfer 10.3073    finalize 10.3987    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07631 (25), -0.07561 (24), -0.07547 (25), -0.07477 (25), -0.07474 (24), -0.07464 (26), -0.07403 (24), -0.07393 (25), -0.07367 (26), -0.07316 (24), -0.07310 (26), -0.07265 (26), -0.07249 (28), -0.07226 (28), -0.07214 (26), -0.07188 (25), -0.07173 (25), -0.07120 (28), -0.07111 (26), -0.07102 (25), 
Length of domains: 196816
Time: pickout 0.7093    decision 5.4060    set_bounds 3.6378    solve 5.2767    add 0.1748    
Accumulated time: pickout 9.2380    decision 58.1144    set_bounds 43.3741    solve 95.7198    add 3.0819    
Current (lb-rhs): -0.07630836963653564
692833 domains visited
Time out!!!!!!!!
Result: unknown in 215.3092 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
         -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [598]; unstable size 598; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 213, 1, 598] with unstable size 212 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 598] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 598] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [212]; unstable size 212; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 212] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 212] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.89664257,  0.67908740,  0.19554472,  0.18955255,  0.73444748,
          0.71419168,  0.94188952,  0.96517801, -1.17427886]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
         -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.17530060, -23.26024055, -22.88537025, -22.34073830, -22.57217026,
          -22.95246124, -23.25955200, -23.61799812, -23.03639603, -21.12484741]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05045319]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0762 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.98194313, -18.68232346, -13.41521168, -15.12617874, -13.36238766,
         -15.23961639, -11.65827942, -15.93192387, -18.96205139, -18.87558174]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [486]; unstable size 486; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 486] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 486] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 486] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 298] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.17124963, 4.88726807, 0.27177000, 2.09687948, 0.18416500, 2.01368809,
         2.31736898, 5.04107523, 4.79337215]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0695 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.01308823, -19.76593781, -25.22100067, -25.57647514, -25.42583656,
         -26.01211357, -25.51028061, -24.41519165, -23.07863426, -17.48029327]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [532]; unstable size 532; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 532] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 532] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 532] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 203] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.27216339, 1.49679089, 6.10778522, 6.38268852, 6.18334293, 6.67019939,
         6.18721342, 4.92642689, 4.46745014]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0643 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.90496635, -15.11729813, -17.63558197, -17.40718079, -18.01904297,
         -18.32819939, -17.60610199, -17.95012093, -15.46633625, -14.21533680]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [703]; unstable size 703; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 270, 1, 703] with unstable size 269 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 703] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 703] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [269]; unstable size 269; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 269] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 269] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.32847357,  0.70178246,  0.40967369,  0.70709372,  1.10043955,
          0.47019577,  0.52032614, -0.85370040, -1.78019547]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.90496635, -15.11729813, -17.63558197, -17.40718079, -18.01904297,
         -18.32819939, -17.60610199, -17.95012093, -15.46633625, -14.21533680]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.90496635, -15.11729908, -17.63558006, -17.40718079, -18.01904488,
          -18.32819939, -17.60610390, -17.95012093, -15.46633720, -14.21533775],
         [-16.90496635, -15.11729908, -17.63558006, -17.40718079, -18.01904488,
          -18.32819939, -17.60610390, -17.95012093, -15.46633720, -14.21533775]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.34903812, -0.90196133]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0755 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-25.14345169, -26.23081017, -22.50061417, -23.41731834, -23.96586800,
         -24.21544456, -20.18602753, -25.76428032, -26.53347778, -25.24602318]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [390]; unstable size 390; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 390] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 390] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 390] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 311] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.16251469, 3.85129452, 1.07807159, 2.04974079, 2.45816231, 2.71345639,
         3.85838270, 4.14238644, 3.23237848]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0657 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.55906677, -26.64030838, -19.33113098, -21.43922997, -19.03748703,
         -20.97289085, -20.39774704, -20.86362457, -27.58946419, -25.17458534]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [519]; unstable size 519; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 519] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 519] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 519] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 219] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02097797,  5.33160543, -0.73743284,  1.28090417,  0.87938416,
          0.03270638,  0.89394522,  6.65467358,  4.26477146]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.55906677, -26.64030838, -19.33113098, -21.43922997, -19.03748703,
         -20.97289085, -20.39774704, -20.86362457, -27.58946419, -25.17458534]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.88814735, -26.08496284, -18.49759293, -20.76161766, -18.65445518,
          -20.33452797, -19.75658226, -20.62588882, -26.97995377, -24.70828247]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15686226]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0073 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0662 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.72182465, -25.40373611, -21.20227242, -20.08390617, -21.28728104,
         -19.64896584, -22.07214165, -21.57941437, -23.54422569, -23.66501617]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [553]; unstable size 553; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 225, 1, 553] with unstable size 224 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 553] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 553] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [224]; unstable size 224; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 224] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 224] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.95499587, 4.21736097, 0.73983395, 0.09517524, 0.76654351, 1.38522911,
         0.98252285, 2.42742276, 2.46281290]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0455 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.44517517, -24.66761017, -18.86577606, -18.69302559, -20.38499641,
         -19.18245506, -20.75661469, -21.50863075, -24.90008926, -24.19531822]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [771]; unstable size 771; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 771] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 771] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 771] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 252] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.21118450,  4.10177040, -1.16934407, -0.72179776,  0.25676227,
          0.67854643,  1.19206476,  4.31922340,  3.50376463]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.44517517, -24.66761017, -18.86577606, -18.69302559, -20.38499641,
         -19.18245506, -20.75661469, -21.50863075, -24.90008926, -24.19531822]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.44517326, -24.66760826, -18.86577415, -18.69302559, -20.38499451,
          -19.18245316, -20.75661469, -21.50863075, -24.90009117, -24.19531822],
         [-21.44517326, -24.66760826, -18.86577415, -18.69302559, -20.38499451,
          -19.18245316, -20.75661469, -21.50863075, -24.90009117, -24.19531822]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31667900, -0.48942757]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]],


         [[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0616 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.38232803, -35.89345551, -38.77233124, -38.86247635, -39.62222672,
         -39.86164474, -39.87382126, -39.40642929, -30.93457031, -36.03558350]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 499] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 499] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 197] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.37971115, 3.87611628, 6.40737152, 6.38697481, 7.03273010, 7.19149971,
         7.20581627, 6.50212860, 4.14407969]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0688 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-34.24032974, -37.65886307, -32.76491928, -35.87559128, -36.34276581,
         -36.02743912, -34.61969757, -36.23526382, -36.62348938, -40.18959427]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [734]; unstable size 734; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 734] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 734] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 734] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 228] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.42341971, 3.43717360, 2.28934193, 2.53784966, 2.29686999, 0.88678980,
         1.92648387, 2.44576812, 5.71752739]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0598 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.79258919, -17.99694252, -16.45632553, -15.40058136, -16.56349564,
         -14.87314796, -17.80143356, -13.41994190, -19.54096222, -16.64786148]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [937]; unstable size 937; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 937] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 937] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 937] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 249] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.73422432, 2.70791626, 1.68733335, 0.95580459, 2.14770603, 0.50132132,
         2.85892773, 3.87416124, 1.62221122]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0644 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.01166153, -22.78888702, -15.86253738, -18.02544975, -16.82504082,
         -17.96582985, -15.98325729, -20.20303345, -22.22256470, -22.36408424]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [720]; unstable size 720; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 334, 1, 720] with unstable size 333 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 720] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 720] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [333]; unstable size 333; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 333] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 333] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.70876312,  4.66763496,  1.06026268, -0.11882269,  0.88787532,
         -0.96121264,  2.31396723,  4.62897253,  4.35728931]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.01166153, -22.78888702, -15.86253738, -18.02544975, -16.82504082,
         -17.96582985, -15.98325729, -20.20303345, -22.22256470, -22.36408424]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.41568375, -22.94868088, -16.33391953, -18.23425102, -17.13017273,
          -18.21309471, -15.88277435, -20.45126534, -22.60630798, -22.50936317],
         [-20.41568375, -22.94868088, -16.33391953, -18.23425102, -17.13017273,
          -18.21309471, -15.88277435, -20.45126534, -22.60630798, -22.50936317]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.79625320, -0.45114517]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0753 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.39692688, -33.50623703, -38.63787079, -39.79333878, -37.69999313,
         -41.03482437, -40.31786346, -38.34481812, -33.13186264, -33.37991333]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [788]; unstable size 788; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 788] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 788] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 788] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 259] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.16784954,  2.02646828,  3.53692198,  1.20165110,  4.52165127,
          3.78477287,  1.66250563, -2.21134377, -1.22387242]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-33.39692688, -33.50623703, -38.63787079, -39.79333878, -37.69999313,
         -41.03482437, -40.31786346, -38.34481812, -33.13186264, -33.37991333]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-33.39692307, -33.50624084, -38.63787079, -39.79333115, -37.69999313,
          -41.03482437, -40.31786346, -38.34482574, -33.13185501, -33.37990952],
         [-33.39692307, -33.50624084, -38.63787079, -39.79333115, -37.69999313,
          -41.03482437, -40.31786346, -38.34482574, -33.13185501, -33.37990952]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.10931778, -0.37438583, -0.12633133]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0422 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.86795235, -23.21092606, -17.76663589, -16.98049545, -18.63553619,
         -17.40380287, -19.50118446, -17.26604271, -23.47448921, -21.17066383]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 654] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 654] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 260] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.18142700,  4.33078861, -0.50892055, -0.65947890,  0.37091148,
          1.13457894, -0.94743353,  4.42701197,  2.60953641]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.86795235, -23.21092606, -17.76663589, -16.98049545, -18.63553619,
         -17.40380287, -19.50118446, -17.26604271, -23.47448921, -21.17066383]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.86795235, -23.21092987, -17.76663589, -16.98049545, -18.63553619,
          -17.40380287, -19.50118637, -17.26604462, -23.47449112, -21.17066383],
         [-21.86795235, -23.21092987, -17.76663589, -16.98049545, -18.63553619,
          -17.40380287, -19.50118637, -17.26604462, -23.47449112, -21.17066383]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36283302, -0.42330742, -0.13775826]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0560 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
         -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [494]; unstable size 494; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 494] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 494] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 494] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 270] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.14928710,  4.51440144,  1.64132607, -1.13099456,  1.91445684,
          0.33408684,  1.53952146,  3.79073143,  4.14098597]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
         -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.97657204, -24.17541313, -17.49859619, -20.07994652, -17.44471931,
          -20.39148903, -18.74324608, -20.42260742, -22.87066269, -23.45691490]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05387688]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-9.41269815e-01, -9.09523785e-01, -1.33809519e+00,  ...,
            -6.39682531e-01,  7.46032670e-02,  1.85714364e-01],
           [-5.28571427e-01, -7.98412681e-01, -1.25873005e+00,  ...,
            -5.76190472e-01, -2.42857039e-01,  1.06349289e-01],
           [-4.65079248e-01, -4.01587188e-01, -7.66666651e-01,  ...,
            -3.85714173e-01, -3.53968143e-01, -1.63491964e-01],
           ...,
           [ 1.97936535e+00,  1.10634947e+00,  1.42380977e+00,  ...,
             1.94761932e+00,  1.94761932e+00,  1.97936535e+00],
           [ 1.94761932e+00,  1.47142887e+00,  1.37619078e+00,  ...,
             1.96349227e+00,  1.82063520e+00,  1.80476213e+00],
           [ 1.99523830e+00,  1.78888917e+00,  1.85238123e+00,  ...,
             1.99523830e+00,  1.99523830e+00,  1.94761932e+00]],

          [[-1.12721294e-01, -1.44927412e-01, -6.28019273e-01,  ...,
            -2.25442708e-01,  3.54267418e-01,  6.28019392e-01],
           [ 2.09339887e-01, -1.12721294e-01, -5.47504008e-01,  ...,
            -2.89854944e-01,  1.22934580e-07,  5.47504127e-01],
           [ 1.93236828e-01,  2.25442946e-01, -1.61029361e-02,  ...,
            -8.05151686e-02, -8.05151686e-02,  2.89855182e-01],
           ...,
           [ 1.70692456e+00,  8.37359190e-01,  1.14331758e+00,  ...,
             1.75523376e+00,  1.73913074e+00,  1.78743994e+00],
           [ 1.73913074e+00,  1.20772982e+00,  1.04669893e+00,  ...,
             1.72302771e+00,  1.57810009e+00,  1.61030626e+00],
           [ 1.85185218e+00,  1.57810009e+00,  1.56199706e+00,  ...,
             1.75523376e+00,  1.75523376e+00,  1.73913074e+00]],

          [[-1.39280367e+00, -1.30284870e+00, -1.61769128e+00,  ...,
            -1.27286363e+00, -7.48125911e-01, -3.73313308e-01],
           [-1.19790113e+00, -1.39280367e+00, -1.60269880e+00,  ...,
            -1.25787115e+00, -1.03298354e+00, -4.33283329e-01],
           [-1.13793111e+00, -1.21289361e+00, -1.45277369e+00,  ...,
            -1.18290865e+00, -1.03298354e+00, -7.18140900e-01],
           ...,
           [ 1.84557760e+00,  9.76012170e-01,  1.24587750e+00,  ...,
             1.87556267e+00,  1.84557760e+00,  1.87556267e+00],
           [ 1.87556267e+00,  1.33583248e+00,  1.15592217e+00,  ...,
             1.83058512e+00,  1.69565260e+00,  1.69565260e+00],
           [ 1.96551764e+00,  1.69565260e+00,  1.68066013e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.84557760e+00]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0527 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.82804489, -23.63042831, -29.23712158, -28.24177551, -29.14320946,
         -29.41248703, -29.22246933, -29.10352325, -24.23150253, -21.39186287]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [726]; unstable size 726; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 726] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 726] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 726] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 264] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.64157248, 1.36549675, 5.86060524, 5.40555191, 5.76025963, 6.48044968,
         6.13686466, 6.01794624, 1.13634682]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
         -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [942]; unstable size 942; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 942] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 942] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 942] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 241] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.41716480,  5.54713631,  0.52021480, -0.06935585, -0.04526949,
          0.63125229,  1.37135768,  2.56105852,  5.77544498]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
         -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.67it/s]100%|██████████| 1/1 [00:00<00:00,  8.67it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.30893517, -30.56543732, -25.00318527, -23.76297760, -24.40168571,
          -23.71816635, -24.78357506, -26.12542915, -27.38504028, -30.68838120],
         [-29.30893517, -30.56543732, -25.00318527, -23.76297760, -24.40168571,
          -23.71816635, -24.78357506, -26.12542915, -27.38504028, -30.68838120]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04481125, 0.68351936]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1181 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.083850860595703
alpha/beta optimization time: 1.1576058864593506
initial alpha-crown bounds: tensor([[ 4.47513866,  5.59848642,  0.56283212, -0.05797219, -0.01270843,
          0.67102242,  1.41879416,  2.60586262,  5.82239676]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.05797219276428223
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6668303012848
Verifying property 0 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.4751386642456055.

Properties batch 1, size 1
Remaining timeout: 198.5227518081665
Verifying property 1 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.598486423492432.

Properties batch 2, size 1
Remaining timeout: 198.40647554397583
Verifying property 2 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5628321170806885.

Properties batch 3, size 1
Remaining timeout: 198.30779814720154
Verifying property 3 with 1 instances.
##### Instance 154 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.05797219]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.78194427, -31.17414474, -25.47965050, -24.27825546, -24.95229912,
        -24.05517769, -25.49534607, -26.49033356, -27.99845505, -31.18796158],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.05797219]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 942
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 235
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 1190
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 72] 
split level 2: [/input-12, 31] 
split level 3: [/input-8, 403] 
split level 4: [/input-8, 140] 
split level 5: [/input-8, 1713] 
split level 6: [/input-8, 771] 
split level 7: [/input-8, 418] 
pruning_in_iteration open status: True
ratio of positive domain = 128 / 256 = 0.5
pruning-in-iteration extra time: 0.004827260971069336
Time: prepare 0.0030    bound 0.1269    transfer 0.0014    finalize 0.0017    func 0.1331    
Accumulated time: func 0.1331    prepare 0.0034    bound 0.1269    transfer 0.0014    finalize 0.0017    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03110 (8), -0.03088 (8), -0.03013 (8), -0.02937 (8), -0.02932 (8), -0.02913 (8), -0.02910 (8), -0.02884 (8), -0.02839 (8), -0.02819 (8), -0.02749 (8), -0.02737 (8), -0.02737 (8), -0.02710 (8), -0.02676 (8), -0.02645 (8), -0.02629 (8), -0.02611 (8), -0.02563 (8), -0.02562 (8), 
Length of domains: 128
Time: pickout 0.0004    decision 0.0221    set_bounds 0.0171    solve 0.1331    add 0.0017    
Accumulated time: pickout 0.0004    decision 0.0221    set_bounds 0.0171    solve 0.1331    add 0.0017    
Current (lb-rhs): -0.031096935272216797
128 domains visited
Cumulative time: 0.1825556755065918

BaB round 2
batch: 128
splitting decisions: 
split level 0: [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] [/input-8, 770] 
pruning_in_iteration open status: False
ratio of positive domain = 2 / 256 = 0.0078125
pruning-in-iteration extra time: 5.7697296142578125e-05
Time: prepare 0.0050    bound 0.0910    transfer 0.0007    finalize 0.0017    func 0.0984    
Accumulated time: func 0.2315    prepare 0.0086    bound 0.2179    transfer 0.0021    finalize 0.0033    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03057 (9), -0.03036 (9), -0.02926 (9), -0.02878 (9), -0.02878 (9), -0.02857 (9), -0.02852 (9), -0.02826 (9), -0.02780 (9), -0.02729 (9), -0.02688 (9), -0.02677 (9), -0.02673 (9), -0.02645 (9), -0.02614 (9), -0.02583 (9), -0.02576 (9), -0.02555 (9), -0.02508 (9), -0.02503 (9), 
Length of domains: 254
Time: pickout 0.0020    decision 0.0195    set_bounds 0.0058    solve 0.0985    add 0.0020    
Accumulated time: pickout 0.0024    decision 0.0416    set_bounds 0.0228    solve 0.2317    add 0.0037    
Current (lb-rhs): -0.030568957328796387
382 domains visited
Cumulative time: 0.31058263778686523

BaB round 3
batch: 254
splitting decisions: 
split level 0: [/input-12, 83] [/input-8, 1731] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-8, 1731] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-8, 1731] 
pruning_in_iteration open status: False
ratio of positive domain = 97 / 508 = 0.19094488188976377
pruning-in-iteration extra time: 5.841255187988281e-05
Time: prepare 0.0099    bound 0.1034    transfer 0.0031    finalize 0.0032    func 0.1197    
Accumulated time: func 0.3513    prepare 0.0187    bound 0.3213    transfer 0.0053    finalize 0.0065    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02970 (10), -0.02966 (10), -0.02875 (10), -0.02805 (10), -0.02791 (10), -0.02783 (10), -0.02781 (10), -0.02766 (10), -0.02691 (10), -0.02676 (10), -0.02626 (10), -0.02598 (10), -0.02592 (10), -0.02584 (10), -0.02531 (10), -0.02494 (10), -0.02487 (10), -0.02477 (10), -0.02466 (10), -0.02429 (10), 
Length of domains: 410
Time: pickout 0.0030    decision 0.0282    set_bounds 0.0113    solve 0.1198    add 0.0031    
Accumulated time: pickout 0.0054    decision 0.0698    set_bounds 0.0341    solve 0.3515    add 0.0068    
Current (lb-rhs): -0.02970057725906372
792 domains visited
Cumulative time: 0.4768383502960205

BaB round 4
batch: 410
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
pruning_in_iteration open status: True
ratio of positive domain = 238 / 820 = 0.2902439024390244
pruning-in-iteration extra time: 0.004590749740600586
Time: prepare 0.0158    bound 0.1408    transfer 0.0045    finalize 0.0051    func 0.1663    
Accumulated time: func 0.5176    prepare 0.0347    bound 0.4621    transfer 0.0098    finalize 0.0117    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02902 (11), -0.02879 (11), -0.02808 (11), -0.02722 (11), -0.02718 (11), -0.02695 (11), -0.02693 (11), -0.02663 (11), -0.02633 (11), -0.02624 (11), -0.02539 (11), -0.02504 (11), -0.02494 (11), -0.02492 (11), -0.02479 (11), -0.02451 (11), -0.02443 (11), -0.02401 (11), -0.02396 (11), -0.02382 (11), 
Length of domains: 582
Time: pickout 0.0049    decision 0.0377    set_bounds 0.0175    solve 0.1665    add 0.0034    
Accumulated time: pickout 0.0103    decision 0.1075    set_bounds 0.0516    solve 0.5180    add 0.0102    
Current (lb-rhs): -0.02901935577392578
1374 domains visited
Cumulative time: 0.7089133262634277

BaB round 5
batch: 582
splitting decisions: 
split level 0: [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] [/input-12, 83] 
pruning_in_iteration open status: False
ratio of positive domain = 182 / 1164 = 0.1563573883161512
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0222    bound 0.1126    transfer 0.0035    finalize 0.0078    func 0.1462    
Accumulated time: func 0.6638    prepare 0.0571    bound 0.5748    transfer 0.0133    finalize 0.0195    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02813 (12), -0.02783 (12), -0.02715 (12), -0.02675 (12), -0.02630 (12), -0.02625 (12), -0.02598 (12), -0.02579 (12), -0.02575 (12), -0.02553 (12), -0.02551 (12), -0.02535 (12), -0.02501 (12), -0.02490 (12), -0.02452 (12), -0.02447 (12), -0.02436 (12), -0.02414 (12), -0.02405 (12), -0.02405 (12), 
Length of domains: 980
Time: pickout 0.0083    decision 0.0406    set_bounds 0.0244    solve 0.1464    add 0.0050    
Accumulated time: pickout 0.0186    decision 0.1481    set_bounds 0.0760    solve 0.6644    add 0.0153    
Current (lb-rhs): -0.028127193450927734
2354 domains visited
Cumulative time: 0.9352388381958008

BaB round 6
batch: 980
splitting decisions: 
split level 0: [/input-8, 1716] [/input-8, 772] [/input-8, 772] [/input-8, 772] [/input-8, 1701] [/input-8, 1028] [/input-8, 772] [/input-8, 1701] [/input-8, 772] [/input-8, 772] 
pruning_in_iteration open status: False
ratio of positive domain = 92 / 1960 = 0.04693877551020409
pruning-in-iteration extra time: 5.7697296142578125e-05
Time: prepare 0.0382    bound 0.1265    transfer 0.0156    finalize 0.0134    func 0.1939    
Accumulated time: func 0.8577    prepare 0.0955    bound 0.7013    transfer 0.0289    finalize 0.0329    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02680 (13), -0.02663 (13), -0.02643 (13), -0.02583 (13), -0.02558 (13), -0.02545 (13), -0.02524 (13), -0.02511 (13), -0.02506 (13), -0.02491 (13), -0.02479 (13), -0.02478 (13), -0.02464 (13), -0.02463 (13), -0.02458 (13), -0.02450 (13), -0.02419 (13), -0.02399 (13), -0.02398 (13), -0.02389 (13), 
Length of domains: 1862
Time: pickout 0.0146    decision 0.0689    set_bounds 0.0410    solve 0.1943    add 0.0127    
Accumulated time: pickout 0.0332    decision 0.2170    set_bounds 0.1170    solve 0.8587    add 0.0279    
Current (lb-rhs): -0.026801705360412598
4216 domains visited
Cumulative time: 1.2688829898834229

BaB round 7
batch: 1862
splitting decisions: 
split level 0: [/input-8, 772] [/input-8, 1716] [/input-8, 731] [/input-8, 1261] [/input-8, 1028] [/input-8, 731] [/input-8, 1261] [/input-8, 1028] [/input-8, 731] [/input-8, 1261] 
pruning_in_iteration open status: False
ratio of positive domain = 191 / 3724 = 0.05128893662728251
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0744    bound 0.2008    transfer 0.0319    finalize 0.0221    func 0.3306    
Accumulated time: func 1.1883    prepare 0.1701    bound 0.9021    transfer 0.0608    finalize 0.0550    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02569 (14), -0.02516 (14), -0.02514 (14), -0.02497 (14), -0.02479 (14), -0.02477 (14), -0.02452 (14), -0.02437 (14), -0.02414 (14), -0.02409 (14), -0.02393 (14), -0.02391 (14), -0.02386 (14), -0.02380 (14), -0.02374 (14), -0.02366 (14), -0.02360 (14), -0.02359 (14), -0.02345 (14), -0.02332 (14), 
Length of domains: 3526
Time: pickout 0.0246    decision 0.1180    set_bounds 0.2036    solve 0.3313    add 0.0181    
Accumulated time: pickout 0.0578    decision 0.3350    set_bounds 0.3206    solve 1.1900    add 0.0460    
Current (lb-rhs): -0.025689780712127686
7742 domains visited
Cumulative time: 1.9698750972747803

BaB round 8
batch: 3526
splitting decisions: 
split level 0: [/input-8, 1261] [/input-8, 1261] [/input-8, 1261] [/input-8, 1716] [/input-8, 731] [/input-8, 1261] [/input-8, 1716] [/input-8, 772] [/input-8, 1261] [/input-8, 1716] 
pruning_in_iteration open status: False
ratio of positive domain = 456 / 7052 = 0.06466250709018717
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.1381    bound 0.3281    transfer 0.0264    finalize 0.0359    func 0.5294    
Accumulated time: func 1.7177    prepare 0.3085    bound 1.2302    transfer 0.0872    finalize 0.0909    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02427 (15), -0.02425 (15), -0.02407 (15), -0.02402 (15), -0.02393 (15), -0.02390 (15), -0.02387 (15), -0.02368 (15), -0.02343 (15), -0.02341 (15), -0.02312 (15), -0.02306 (15), -0.02303 (15), -0.02303 (15), -0.02300 (15), -0.02281 (15), -0.02272 (15), -0.02271 (15), -0.02270 (15), -0.02269 (15), 
Length of domains: 6575
Time: pickout 0.0483    decision 0.2086    set_bounds 0.2781    solve 0.5307    add 0.0267    
Accumulated time: pickout 0.1061    decision 0.5435    set_bounds 0.5988    solve 1.7207    add 0.0728    
Current (lb-rhs): -0.02427232265472412
14317 domains visited
Cumulative time: 3.071227550506592

BaB round 9
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 1699] [/input-8, 731] [/input-8, 1261] [/input-8, 1701] [/input-8, 1699] [/input-8, 731] [/input-8, 1261] [/input-8, 731] [/input-8, 731] 
pruning_in_iteration open status: False
ratio of positive domain = 1177 / 8192 = 0.1436767578125
pruning-in-iteration extra time: 9.1552734375e-05
Time: prepare 0.1662    bound 0.3653    transfer 0.0482    finalize 0.0391    func 0.6203    
Accumulated time: func 2.3380    prepare 0.4750    bound 1.5954    transfer 0.1354    finalize 0.1300    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02427 (15), -0.02425 (15), -0.02407 (15), -0.02393 (15), -0.02387 (15), -0.02343 (16), -0.02303 (15), -0.02300 (15), -0.02288 (16), -0.02281 (15), -0.02271 (15), -0.02269 (15), -0.02262 (15), -0.02255 (15), -0.02240 (15), -0.02239 (16), -0.02237 (16), -0.02234 (15), -0.02231 (15), -0.02211 (16), 
Length of domains: 9471
Time: pickout 0.0544    decision 0.2343    set_bounds 0.3334    solve 0.6216    add 0.0353    
Accumulated time: pickout 0.1605    decision 0.7778    set_bounds 0.9321    solve 2.3423    add 0.1080    
Current (lb-rhs): -0.02427232265472412
21309 domains visited
current_vram/total_varm: 27.8GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.36422872543335

BaB round 10
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 731] [/input-8, 1699] [/input-8, 1701] [/input-8, 731] [/input-8, 1701] [/input-8, 731] [/input-8, 1701] [/input-8, 731] [/input-8, 1261] 
pruning_in_iteration open status: False
ratio of positive domain = 3085 / 16384 = 0.18829345703125
pruning-in-iteration extra time: 0.0001366138458251953
Time: prepare 0.3292    bound 0.6856    transfer 0.1624    finalize 0.0960    func 1.2748    
Accumulated time: func 3.6129    prepare 0.8045    bound 2.2810    transfer 0.2977    finalize 0.2260    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02425 (15), -0.02393 (15), -0.02387 (15), -0.02326 (16), -0.02300 (15), -0.02269 (15), -0.02260 (17), -0.02255 (15), -0.02249 (16), -0.02247 (16), -0.02240 (15), -0.02216 (16), -0.02210 (15), -0.02207 (17), -0.02204 (15), -0.02202 (16), -0.02201 (16), -0.02177 (15), -0.02175 (15), -0.02170 (16), 
Length of domains: 14509
Time: pickout 0.1043    decision 0.6714    set_bounds 0.5303    solve 1.2785    add 0.0479    
Accumulated time: pickout 0.2648    decision 1.4493    set_bounds 1.4625    solve 3.6208    add 0.1560    
Current (lb-rhs): -0.024249136447906494
34539 domains visited
current_vram/total_varm: 33.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 7.036214828491211

BaB round 11
batch: 14509
splitting decisions: 
split level 0: [/input-8, 731] [/input-8, 731] [/input-8, 1701] [/input-8, 731] [/input-8, 1261] [/input-8, 1701] [/input-8, 731] [/input-8, 1699] [/input-8, 1701] [/input-8, 731] 
pruning_in_iteration open status: False
ratio of positive domain = 4949 / 29018 = 0.17054931421876074
pruning-in-iteration extra time: 0.0002503395080566406
Time: prepare 0.5922    bound 1.1858    transfer 0.3083    finalize 0.3928    func 2.4811    
Accumulated time: func 6.0939    prepare 1.3971    bound 3.4668    transfer 0.6060    finalize 0.6188    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02332 (16), -0.02323 (16), -0.02285 (16), -0.02244 (17), -0.02215 (16), -0.02199 (16), -0.02177 (16), -0.02167 (16), -0.02156 (16), -0.02147 (17), -0.02147 (17), -0.02144 (16), -0.02139 (18), -0.02133 (18), -0.02131 (17), -0.02119 (17), -0.02118 (17), -0.02096 (18), -0.02095 (16), -0.02095 (16), 
Length of domains: 23882
Time: pickout 0.1872    decision 1.2068    set_bounds 0.8399    solve 2.4875    add 0.1070    
Accumulated time: pickout 0.4520    decision 2.6560    set_bounds 2.3023    solve 6.1084    add 0.2629    
Current (lb-rhs): -0.023323118686676025
58421 domains visited
Cumulative time: 11.92820119857788

BaB round 12
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1699] [/input-8, 1699] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] [/input-8, 138] 
pruning_in_iteration open status: True
ratio of positive domain = 9697 / 32768 = 0.295928955078125
pruning-in-iteration extra time: 0.005379438400268555
Time: prepare 0.6556    bound 1.1800    transfer 0.3477    finalize 0.4967    func 2.6820    
Accumulated time: func 8.7759    prepare 2.0530    bound 4.6468    transfer 0.9537    finalize 1.1155    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02332 (16), -0.02323 (16), -0.02285 (16), -0.02199 (16), -0.02176 (18), -0.02167 (16), -0.02156 (16), -0.02147 (17), -0.02144 (16), -0.02133 (18), -0.02131 (17), -0.02118 (17), -0.02095 (16), -0.02092 (17), -0.02087 (16), -0.02086 (17), -0.02086 (16), -0.02085 (18), -0.02083 (16), -0.02081 (19), 
Length of domains: 30569
Time: pickout 0.2185    decision 1.6742    set_bounds 0.9984    solve 2.6876    add 0.0762    
Accumulated time: pickout 0.6705    decision 4.3303    set_bounds 3.3007    solve 8.7959    add 0.3392    
Current (lb-rhs): -0.023323118686676025
81492 domains visited
current_vram/total_varm: 43.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.65928053855896

BaB round 13
batch: 30569
splitting decisions: 
split level 0: [/input-8, 1701] [/input-8, 1701] [/input-8, 1716] [/input-8, 1701] [/input-8, 1699] [/input-8, 1716] [/input-8, 1701] [/input-8, 731] [/input-8, 1716] [/input-8, 1701] 
pruning_in_iteration open status: True
ratio of positive domain = 17903 / 61138 = 0.2928293369099414
pruning-in-iteration extra time: 0.005591630935668945
Time: prepare 1.2307    bound 2.1298    transfer 0.6700    finalize 0.7708    func 4.8042    
Accumulated time: func 13.5801    prepare 3.2841    bound 6.7766    transfer 1.6237    finalize 1.8864    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02242 (17), -0.02204 (17), -0.02137 (17), -0.02118 (19), -0.02117 (17), -0.02098 (17), -0.02086 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02060 (18), -0.02030 (19), -0.02028 (20), -0.02022 (18), -0.02020 (17), -0.02000 (19), -0.02000 (18), -0.01996 (17), -0.01992 (19), 
Length of domains: 43235
Time: pickout 0.4201    decision 3.1026    set_bounds 2.0314    solve 4.8161    add 0.1516    
Accumulated time: pickout 1.0905    decision 7.4329    set_bounds 5.3321    solve 13.6121    add 0.4908    
Current (lb-rhs): -0.02249521017074585
124727 domains visited
Cumulative time: 28.326892137527466

BaB round 14
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1733] [/input-8, 582] [/input-8, 772] [/input-8, 582] [/input-8, 582] [/input-8, 1733] [/input-8, 582] [/input-8, 1733] [/input-8, 579] [/input-8, 1733] 
pruning_in_iteration open status: True
ratio of positive domain = 14144 / 65536 = 0.2158203125
pruning-in-iteration extra time: 0.00418400764465332
Time: prepare 1.3761    bound 4.8660    transfer 0.7233    finalize 0.4964    func 7.4661    
Accumulated time: func 21.0462    prepare 4.6605    bound 11.6427    transfer 2.3470    finalize 2.3827    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02008 (20), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), 
Length of domains: 61859
Time: pickout 0.4516    decision 3.3322    set_bounds 2.7674    solve 7.4814    add 0.1868    
Accumulated time: pickout 1.5421    decision 10.7651    set_bounds 8.0995    solve 21.0935    add 0.6776    
Current (lb-rhs): -0.02249521017074585
176119 domains visited
Cumulative time: 42.70453715324402

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1733] [/input-8, 1730] [/input-8, 1733] 
pruning_in_iteration open status: True
ratio of positive domain = 15037 / 65536 = 0.2294464111328125
pruning-in-iteration extra time: 0.005621910095214844
Time: prepare 1.4192    bound 3.5022    transfer 0.7259    finalize 1.1555    func 6.8065    
Accumulated time: func 27.8527    prepare 6.0801    bound 15.1449    transfer 3.0729    finalize 3.5383    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 79590
Time: pickout 0.4772    decision 3.4611    set_bounds 2.5910    solve 6.8195    add 0.3337    
Accumulated time: pickout 2.0193    decision 14.2262    set_bounds 10.6905    solve 27.9130    add 1.0113    
Current (lb-rhs): -0.02249521017074585
226618 domains visited
Cumulative time: 56.54409074783325

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 580] [/input, 131] [/input-8, 580] [/input-8, 580] [/input-8, 579] [/input-8, 579] [/input-8, 1730] [/input-8, 580] [/input-8, 580] [/input-8, 579] 
pruning_in_iteration open status: True
ratio of positive domain = 14671 / 65536 = 0.2238616943359375
pruning-in-iteration extra time: 0.005603313446044922
Time: prepare 1.4559    bound 3.5137    transfer 0.7307    finalize 0.5139    func 6.2202    
Accumulated time: func 34.0729    prepare 7.5365    bound 18.6587    transfer 3.8036    finalize 4.0522    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 97687
Time: pickout 0.4951    decision 3.3620    set_bounds 2.8715    solve 7.0135    add 0.3140    
Accumulated time: pickout 2.5144    decision 17.5882    set_bounds 13.5620    solve 34.9265    add 1.3253    
Current (lb-rhs): -0.02249521017074585
277483 domains visited
Cumulative time: 70.80473256111145

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 582] [/input-8, 582] [/input-8, 579] [/input-8, 579] [/input-8, 580] [/input-8, 579] [/input-8, 580] [/input-8, 580] [/input-8, 578] [/input-8, 580] 
pruning_in_iteration open status: True
ratio of positive domain = 15543 / 65536 = 0.2371673583984375
pruning-in-iteration extra time: 0.006375789642333984
Time: prepare 1.4561    bound 2.9431    transfer 0.7295    finalize 1.3534    func 6.4869    
Accumulated time: func 40.5598    prepare 8.9930    bound 21.6018    transfer 4.5331    finalize 5.4056    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 114912
Time: pickout 0.5106    decision 3.3953    set_bounds 2.4306    solve 6.5013    add 0.1860    
Accumulated time: pickout 3.0250    decision 20.9835    set_bounds 15.9926    solve 41.4278    add 1.5112    
Current (lb-rhs): -0.02249521017074585
327476 domains visited
Cumulative time: 84.0104763507843

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 578] [/input-8, 1733] [/input-8, 1733] [/input-8, 142] [/input-8, 580] [/input, 131] [/input-8, 142] [/input, 131] [/input-8, 580] [/input-8, 580] 
pruning_in_iteration open status: True
ratio of positive domain = 20441 / 65536 = 0.3119049072265625
pruning-in-iteration extra time: 0.006163597106933594
Time: prepare 1.5661    bound 2.7769    transfer 0.7213    finalize 0.5332    func 5.6026    
Accumulated time: func 46.1624    prepare 10.5597    bound 24.3787    transfer 5.2544    finalize 5.9388    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 127239
Time: pickout 0.5553    decision 4.0395    set_bounds 2.4587    solve 5.6219    add 0.2600    
Accumulated time: pickout 3.5804    decision 25.0230    set_bounds 18.4513    solve 47.0497    add 1.7713    
Current (lb-rhs): -0.02249521017074585
372571 domains visited
Cumulative time: 97.17372369766235

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input, 2968] [/input, 2968] [/input, 2968] [/input, 2968] [/input, 2968] [/input, 2968] [/input, 2968] [/input-8, 142] [/input-8, 142] [/input-8, 1325] 
pruning_in_iteration open status: True
ratio of positive domain = 21768 / 65536 = 0.3321533203125
pruning-in-iteration extra time: 0.006107807159423828
Time: prepare 1.7542    bound 2.7269    transfer 0.7265    finalize 0.5187    func 5.7302    
Accumulated time: func 51.8926    prepare 12.3143    bound 27.1057    transfer 5.9809    finalize 6.4574    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 138239
Time: pickout 0.5646    decision 4.1995    set_bounds 2.3398    solve 5.7472    add 0.2729    
Accumulated time: pickout 4.1450    decision 29.2225    set_bounds 20.7911    solve 52.7969    add 2.0442    
Current (lb-rhs): -0.02249521017074585
416339 domains visited
Cumulative time: 110.52610230445862

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 578] [/input-8, 578] [/input-8, 578] [/input-8, 1576] [/input-8, 1325] [/input-8, 578] [/input, 131] [/input, 131] [/input-8, 142] [/input-8, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 23065 / 65536 = 0.3519439697265625
pruning-in-iteration extra time: 0.0063703060150146484
Time: prepare 1.8456    bound 2.6790    transfer 0.7238    finalize 0.5359    func 5.7889    
Accumulated time: func 57.6815    prepare 14.1602    bound 29.7846    transfer 6.7047    finalize 6.9933    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 147942
Time: pickout 0.6489    decision 4.3061    set_bounds 2.7415    solve 5.8089    add 0.2934    
Accumulated time: pickout 4.7939    decision 33.5287    set_bounds 23.5326    solve 58.6058    add 2.3376    
Current (lb-rhs): -0.02249521017074585
458810 domains visited
Cumulative time: 124.6337673664093

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 382] [/input-8, 578] [/input-8, 578] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 382] 
pruning_in_iteration open status: True
ratio of positive domain = 24138 / 65536 = 0.368316650390625
pruning-in-iteration extra time: 0.006178617477416992
Time: prepare 1.8935    bound 2.6410    transfer 0.7336    finalize 1.9946    func 7.2664    
Accumulated time: func 64.9479    prepare 16.0543    bound 32.4256    transfer 7.4382    finalize 8.9879    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 156572
Time: pickout 0.6424    decision 4.5495    set_bounds 1.5471    solve 7.2828    add 0.2631    
Accumulated time: pickout 5.4364    decision 38.0781    set_bounds 25.0797    solve 65.8886    add 2.6007    
Current (lb-rhs): -0.02249521017074585
500208 domains visited
Cumulative time: 139.12789297103882

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1171] [/input-8, 1171] [/input-8, 1171] [/input-8, 1171] [/input-8, 1593] [/input-8, 1171] [/input-8, 142] [/input-8, 779] [/input-8, 779] [/input-8, 1171] 
pruning_in_iteration open status: True
ratio of positive domain = 26767 / 65536 = 0.4084320068359375
pruning-in-iteration extra time: 0.006226539611816406
Time: prepare 1.8496    bound 2.5449    transfer 0.7363    finalize 0.5412    func 5.6771    
Accumulated time: func 70.6250    prepare 17.9044    bound 34.9706    transfer 8.1745    finalize 9.5292    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 162573
Time: pickout 0.6630    decision 3.4752    set_bounds 3.2696    solve 5.6984    add 0.1567    
Accumulated time: pickout 6.0993    decision 41.5534    set_bounds 28.3493    solve 71.5870    add 2.7574    
Current (lb-rhs): -0.02249521017074585
538977 domains visited
Cumulative time: 152.6508514881134

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 382] [/input-8, 779] [/input-8, 578] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 382] [/input-8, 1576] [/input-8, 1576] 
pruning_in_iteration open status: True
ratio of positive domain = 30336 / 65536 = 0.462890625
pruning-in-iteration extra time: 0.006170511245727539
Time: prepare 1.8171    bound 2.4163    transfer 0.7352    finalize 0.5357    func 5.5098    
Accumulated time: func 76.1348    prepare 19.7220    bound 37.3869    transfer 8.9097    finalize 10.0648    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 165005
Time: pickout 0.6835    decision 4.6466    set_bounds 1.6842    solve 5.5343    add 0.1466    
Accumulated time: pickout 6.7829    decision 46.2000    set_bounds 30.0335    solve 77.1214    add 2.9040    
Current (lb-rhs): -0.02249521017074585
574177 domains visited
Cumulative time: 165.61096286773682

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1171] [/input-8, 1171] [/input-8, 1171] [/input-8, 1325] [/input-8, 1325] [/input-8, 1171] [/input-8, 1171] [/input-8, 1171] [/input-8, 1576] [/input-8, 142] 
pruning_in_iteration open status: True
ratio of positive domain = 32298 / 65536 = 0.492828369140625
pruning-in-iteration extra time: 0.00629425048828125
Time: prepare 3.2785    bound 2.3331    transfer 0.7379    finalize 0.5312    func 6.8863    
Accumulated time: func 83.0211    prepare 23.0010    bound 39.7200    transfer 9.6476    finalize 10.5960    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 165475
Time: pickout 0.6676    decision 5.0100    set_bounds 1.6608    solve 6.9077    add 0.1360    
Accumulated time: pickout 7.4505    decision 51.2099    set_bounds 31.6943    solve 84.0291    add 3.0400    
Current (lb-rhs): -0.02249521017074585
607415 domains visited
Cumulative time: 180.27670645713806

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input-8, 779] [/input-8, 141] [/input-8, 578] [/input-8, 578] [/input-8, 578] [/input-8, 578] [/input-8, 141] [/input-8, 141] [/input-8, 1171] [/input-8, 1171] 
pruning_in_iteration open status: True
ratio of positive domain = 32242 / 65536 = 0.491973876953125
pruning-in-iteration extra time: 0.00619959831237793
Time: prepare 1.8750    bound 2.3394    transfer 0.7453    finalize 0.5687    func 5.5338    
Accumulated time: func 88.5549    prepare 24.8764    bound 42.0595    transfer 10.3929    finalize 11.1647    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 166001
Time: pickout 0.7137    decision 3.4647    set_bounds 3.3286    solve 5.5557    add 0.1305    
Accumulated time: pickout 8.1642    decision 54.6746    set_bounds 35.0229    solve 89.5847    add 3.1705    
Current (lb-rhs): -0.02249521017074585
640709 domains visited
Cumulative time: 193.76433897018433

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1171] [/input-8, 141] [/input-8, 141] [/input, 809] [/input-8, 141] [/input-8, 906] [/input, 1449] [/input, 1912] [/input-8, 379] [/input-8, 1593] 
pruning_in_iteration open status: True
ratio of positive domain = 29725 / 65536 = 0.4535675048828125
pruning-in-iteration extra time: 0.006438016891479492
Time: prepare 2.3197    bound 2.4222    transfer 0.7206    finalize 2.2296    func 7.6966    
Accumulated time: func 96.2515    prepare 27.1966    bound 44.4816    transfer 11.1134    finalize 13.3944    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02250 (17), -0.02174 (18), -0.02137 (18), -0.02098 (17), -0.02085 (18), -0.02065 (19), -0.02061 (17), -0.02048 (18), -0.02030 (19), -0.02028 (20), -0.02020 (17), -0.02017 (18), -0.02009 (18), -0.02000 (18), -0.01999 (19), -0.01996 (17), -0.01992 (19), -0.01992 (19), -0.01985 (17), -0.01984 (17), 
Length of domains: 169044
Time: pickout 0.7020    decision 5.0855    set_bounds 1.6681    solve 7.7166    add 0.2220    
Accumulated time: pickout 8.8662    decision 59.7601    set_bounds 36.6910    solve 97.3013    add 3.3925    
Current (lb-rhs): -0.02249521017074585
676520 domains visited
Time out!!!!!!!!
Result: unknown in 212.5522 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.92134666, -14.68086624, -14.01877499, -12.96694374, -13.68891144,
         -13.29801559, -12.61456585, -14.58385181, -12.91630363, -13.61004829]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 293, 1, 523] with unstable size 292 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 523] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [292]; unstable size 292; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 292] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 292] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.07341301,  0.02069974, -0.45618200, -0.75070500, -0.48273396,
         -0.58674043,  0.21641368, -1.83327842, -0.92162538]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.92134666, -14.68086624, -14.01877499, -12.96694374, -13.68891144,
         -13.29801559, -12.61456585, -14.58385181, -12.91630363, -13.61004829]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.55156803, -14.16532898, -13.73093128, -12.51956940, -13.35653687,
          -12.80827332, -12.73153305, -14.19154167, -12.43016529, -13.13587379],
         [-14.55156803, -14.16532898, -13.73093128, -12.51956940, -13.35653687,
          -12.80827332, -12.73153305, -14.19154167, -12.43016529, -13.13587379]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.99939823, -0.21196365,  0.62500381,  0.07674026, -0.30136776,
           0.40434074]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0187 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0878 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.54337883, -22.91224098, -19.67365646, -18.07358360, -18.92478752,
         -18.42077827, -18.27539825, -20.47289658, -23.38033676, -23.14374924]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [789]; unstable size 789; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 789] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 789] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 789] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 259] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.47897148,  2.52675533,  0.01573062, -0.71339220, -0.73171186,
         -1.54283834,  0.69137228,  2.97468781,  2.91973925]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.54337883, -22.91224098, -19.67365646, -18.07358360, -18.92478752,
         -18.42077827, -18.27539825, -20.47289658, -23.38033676, -23.14374924]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.54338074, -22.91224098, -19.67365646, -18.07358170, -18.92478561,
          -18.42077637, -18.27539635, -20.47289658, -23.38033676, -23.14374733],
         [-22.54338074, -22.91224098, -19.67365646, -18.07358170, -18.92478561,
          -18.42077637, -18.27539635, -20.47289658, -23.38033676, -23.14374733]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.34719467,  0.50400925, -0.14538002]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0522 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.22789001, -20.43865013, -26.99475098, -25.86932182, -27.76927757,
         -27.09349632, -26.96388435, -26.58814430, -23.07920265, -18.19562912]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [462]; unstable size 462; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 183, 1, 462] with unstable size 182 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 462] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [182]; unstable size 182; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 182] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 182] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89370680, 1.38738155, 7.23277378, 6.41899109, 8.12875843, 7.56016350,
         7.36910725, 6.89903069, 3.88113165]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
         -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 235, 1, 584] with unstable size 234 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 584] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [234]; unstable size 234; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 234] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 234] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.98524362,  0.54466248,  1.17118835, -0.38150382,  1.88505030,
         -0.46537066,  0.44484568,  0.24631691,  3.03603697]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
         -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.76it/s]100%|██████████| 1/1 [00:00<00:00,  8.76it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.40622520, -27.82097435, -28.63790131, -26.83477974, -29.47041893,
          -26.86197472, -27.89007187, -27.95905685, -26.50016022, -30.27786064],
         [-28.40622520, -27.82097435, -28.63790131, -26.83477974, -29.47041893,
          -26.86197472, -27.89007187, -27.95905685, -26.50016022, -30.27786064]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.33461952, 0.36181450]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1169 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.091228485107422
alpha/beta optimization time: 1.16890287399292
initial alpha-crown bounds: tensor([[ 1.03688896,  0.59373093,  1.24077320, -0.31201267,  1.97173214,
         -0.38633823,  0.51818991,  0.33714414,  3.09112024]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.3863382339477539
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66061115264893
Verifying property 0 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0368889570236206.

Properties batch 1, size 1
Remaining timeout: 198.5214638710022
Verifying property 1 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5937309265136719.

Properties batch 2, size 1
Remaining timeout: 198.42468667030334
Verifying property 2 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2407732009887695.

Properties batch 3, size 1
Remaining timeout: 198.33240747451782
Verifying property 3 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.31201267]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
        -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.31201267]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 584
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 230
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 829
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 8] 
split level 3: [/input-12, 2] 
split level 4: [/input-12, 64] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 246 / 256 = 0.9609375
pruning-in-iteration extra time: 0.0045621395111083984
Time: prepare 0.0018    bound 0.1198    transfer 0.0012    finalize 0.0015    func 0.1243    
Accumulated time: func 0.1243    prepare 0.0022    bound 0.1198    transfer 0.0012    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05661 (8), -0.05341 (8), -0.05082 (8), -0.04726 (8), -0.02153 (8), -0.01997 (8), -0.01721 (8), -0.01379 (8), -0.00555 (8), -0.00322 (8), 
Length of domains: 10
Time: pickout 0.0003    decision 0.0224    set_bounds 0.0162    solve 0.1244    add 0.0009    
Accumulated time: pickout 0.0003    decision 0.0224    set_bounds 0.0162    solve 0.1244    add 0.0009    
Current (lb-rhs): -0.056609153747558594
10 domains visited
Cumulative time: 0.1729118824005127

BaB round 2
batch: 10
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] [/input-12, 90] 
split level 1: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 2: [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 268] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] 
split level 3: [/input, 3017] [/input, 3017] [/input, 3018] [/input-8, 171] [/input, 3018] [/input, 3017] [/input-8, 179] [/input, 3017] [/input, 3018] [/input, 3018] 
split level 4: [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input, 3018] [/input-8, 179] [/input-8, 179] [/input-8, 179] 
pruning_in_iteration open status: True
ratio of positive domain = 308 / 320 = 0.9625
pruning-in-iteration extra time: 0.004520893096923828
Time: prepare 0.0078    bound 0.1294    transfer 0.0023    finalize 0.0028    func 0.1423    
Accumulated time: func 0.2666    prepare 0.0104    bound 0.2491    transfer 0.0035    finalize 0.0042    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00964 (13), -0.00775 (13), -0.00725 (13), -0.00506 (13), -0.00450 (13), -0.00447 (13), -0.00297 (13), -0.00293 (13), -0.00253 (13), -0.00192 (13), -0.00045 (13), -0.00009 (13), 
Length of domains: 12
Time: pickout 0.0008    decision 0.0204    set_bounds 0.0182    solve 0.1424    add 0.0009    
Accumulated time: pickout 0.0012    decision 0.0427    set_bounds 0.0344    solve 0.2668    add 0.0019    
Current (lb-rhs): -0.009643077850341797
22 domains visited
Cumulative time: 0.35753321647644043

BaB round 3
batch: 12
splitting decisions: 
split level 0: [/input-8, 171] [/input-8, 172] [/input, 3000] [/input-8, 172] [/input-8, 171] [/input, 3000] [/input-8, 172] [/input-8, 171] [/input, 3000] [/input-8, 172] 
split level 1: [/input, 3018] [/input-8, 171] [/input, 3018] [/input-8, 171] [/input, 3018] [/input, 3018] [/input-8, 171] [/input, 3032] [/input, 3018] [/input-8, 171] 
split level 2: [/input-8, 372] [/input, 3018] [/input, 3032] [/input, 3018] [/input-8, 372] [/input, 3032] [/input, 3018] [/input, 3018] [/input, 3032] [/input, 3018] 
split level 3: [/input, 3032] [/input, 3032] [/input, 3002] [/input, 3032] [/input, 3032] [/input-8, 1125] [/input, 3032] [/input-8, 372] [/input, 3002] [/input, 3032] 
split level 4: [/input, 3002] [/input, 3002] [/input-8, 1125] [/input, 3002] [/input, 3002] [/input, 3002] [/input, 3002] [/input, 3002] [/input-8, 1125] [/input, 3002] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 4.076957702636719e-05
Time: prepare 0.0092    bound 0.0074    transfer 0.0037    finalize 0.0025    func 0.0229    
Accumulated time: func 0.2895    prepare 0.0199    bound 0.2565    transfer 0.0072    finalize 0.0067    
all_split False
Length of domains: 0
Time: pickout 0.0024    decision 0.0166    set_bounds 0.0201    solve 0.0229    add 0.0001    
Accumulated time: pickout 0.0036    decision 0.0593    set_bounds 0.0545    solve 0.2897    add 0.0019    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
22 domains visited
Cumulative time: 0.4205763339996338


Properties batch 4, size 1
Remaining timeout: 197.79290914535522
Verifying property 4 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9717321395874023.

Properties batch 5, size 1
Remaining timeout: 197.66189074516296
Verifying property 5 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38633823]], device='cuda:0') need to verify.
Model prediction is: tensor([-29.36944771, -28.77778244, -30.05463600, -28.34849167, -31.03860283,
        -28.43247223, -29.29167557, -29.50824356, -27.05603409, -31.43330383],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38633823]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 584
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 230
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 829
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 42] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 90] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 61] 
split level 7: [/input-12, 46] 
pruning_in_iteration open status: True
ratio of positive domain = 240 / 256 = 0.9375
pruning-in-iteration extra time: 0.00452733039855957
Time: prepare 0.0018    bound 0.1090    transfer 0.0009    finalize 0.0013    func 0.1129    
Accumulated time: func 0.1129    prepare 0.0022    bound 0.1090    transfer 0.0009    finalize 0.0013    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07240 (8), -0.06919 (8), -0.06656 (8), -0.06261 (8), -0.03046 (8), -0.02859 (8), -0.02683 (8), -0.02493 (8), -0.02275 (8), -0.02075 (8), -0.01601 (8), -0.01198 (8), -0.01122 (8), -0.00840 (8), -0.00816 (8), -0.00281 (8), 
Length of domains: 16
Time: pickout 0.0003    decision 0.0221    set_bounds 0.0159    solve 0.1130    add 0.0013    
Accumulated time: pickout 0.0003    decision 0.0221    set_bounds 0.0159    solve 0.1130    add 0.0013    
Current (lb-rhs): -0.07240152359008789
16 domains visited
Cumulative time: 0.15659832954406738

BaB round 2
batch: 16
splitting decisions: 
split level 0: [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
split level 1: [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input-8, 268] [/input-8, 171] [/input-8, 171] 
split level 2: [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 179] [/input-8, 171] [/input-8, 179] [/input-8, 179] 
split level 3: [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3017] [/input, 3018] [/input-8, 179] [/input, 3017] [/input, 3017] 
pruning_in_iteration open status: True
ratio of positive domain = 226 / 256 = 0.8828125
pruning-in-iteration extra time: 0.004473209381103516
Time: prepare 0.0063    bound 0.1172    transfer 0.0008    finalize 0.0017    func 0.1261    
Accumulated time: func 0.2390    prepare 0.0087    bound 0.2262    transfer 0.0016    finalize 0.0031    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02814 (12), -0.02702 (12), -0.02544 (12), -0.02459 (12), -0.02392 (12), -0.02316 (12), -0.02308 (12), -0.02295 (12), -0.02176 (12), -0.02053 (12), -0.02035 (12), -0.01924 (12), -0.01914 (12), -0.01908 (12), -0.01891 (12), -0.01732 (12), -0.01719 (12), -0.01617 (12), -0.01529 (12), -0.01505 (12), 
Length of domains: 30
Time: pickout 0.0011    decision 0.0209    set_bounds 0.0124    solve 0.1262    add 0.0011    
Accumulated time: pickout 0.0014    decision 0.0430    set_bounds 0.0283    solve 0.2392    add 0.0024    
Current (lb-rhs): -0.028141498565673828
46 domains visited
Cumulative time: 0.3191964626312256

BaB round 3
batch: 30
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input, 3000] [/input-8, 171] [/input-8, 171] [/input-8, 171] [/input-8, 171] 
split level 2: [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] [/input, 3018] 
pruning_in_iteration open status: True
ratio of positive domain = 226 / 240 = 0.9416666666666667
pruning-in-iteration extra time: 0.004525423049926758
Time: prepare 0.0060    bound 0.1179    transfer 0.0011    finalize 0.0014    func 0.1265    
Accumulated time: func 0.3655    prepare 0.0149    bound 0.3440    transfer 0.0028    finalize 0.0044    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00805 (15), -0.00637 (15), -0.00626 (15), -0.00460 (15), -0.00417 (15), -0.00357 (15), -0.00319 (15), -0.00259 (15), -0.00249 (15), -0.00224 (15), -0.00206 (15), -0.00112 (15), -0.00070 (15), -0.00041 (15), 
Length of domains: 14
Time: pickout 0.0018    decision 0.0159    set_bounds 0.0118    solve 0.1265    add 0.0008    
Accumulated time: pickout 0.0032    decision 0.0589    set_bounds 0.0401    solve 0.3657    add 0.0032    
Current (lb-rhs): -0.008047819137573242
60 domains visited
Cumulative time: 0.4767751693725586

BaB round 4
batch: 14
splitting decisions: 
split level 0: [/input-8, 172] [/input-8, 372] [/input, 3032] [/input-8, 172] [/input-8, 372] [/input-8, 172] [/input-8, 372] [/input-8, 372] [/input-8, 172] [/input-8, 372] 
split level 1: [/input, 3032] [/input, 3002] [/input-8, 372] [/input-8, 372] [/input, 3032] [/input, 3032] [/input-8, 178] [/input, 3032] [/input, 3032] [/input, 3032] 
split level 2: [/input, 3002] [/input-8, 178] [/input, 3002] [/input, 3032] [/input, 3002] [/input-8, 178] [/input, 3032] [/input, 3002] [/input, 3002] [/input-8, 178] 
split level 3: [/input-8, 178] [/input, 3032] [/input-8, 178] [/input, 3002] [/input-8, 1125] [/input, 3002] [/input, 3002] [/input-8, 1125] [/input-8, 178] [/input, 3002] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 224 / 224 = 1.0
pruning-in-iteration extra time: 4.0531158447265625e-05
Time: prepare 0.0055    bound 0.0070    transfer 0.0014    finalize 0.0013    func 0.0153    
Accumulated time: func 0.3808    prepare 0.0206    bound 0.3510    transfer 0.0042    finalize 0.0058    
all_split False
Length of domains: 0
Time: pickout 0.0012    decision 0.0165    set_bounds 0.0105    solve 0.0153    add 0.0001    
Accumulated time: pickout 0.0044    decision 0.0754    set_bounds 0.0506    solve 0.3810    add 0.0032    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
60 domains visited
Cumulative time: 0.5209355354309082


Properties batch 6, size 1
Remaining timeout: 196.9818253517151
Verifying property 6 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5181899070739746.

Properties batch 7, size 1
Remaining timeout: 196.87687039375305
Verifying property 7 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.337144136428833.

Properties batch 8, size 1
Remaining timeout: 196.78259754180908
Verifying property 8 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0911202430725098.
Result: safe in 3.3094 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.30548668, -31.13262558, -30.14710617, -29.36580276, -31.43879890,
         -30.41797447, -28.40415192, -33.04300690, -32.20061874, -30.97929573]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [616]; unstable size 616; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 616] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 616] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 616] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 173] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89829934, 1.27482843, 1.03844345, 0.41801423, 2.17892408, 1.35105932,
         3.53787756, 2.40265918, 1.21200323]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
         -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1027]; unstable size 1027; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 1027] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 1027] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1027] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 298] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.02182817,  4.76163769, -0.19650871,  1.45338261,  1.88351464,
          0.29130304,  1.95355964,  2.40450525,  4.61817598]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
         -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.82it/s]100%|██████████| 1/1 [00:00<00:00,  8.81it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.18057632, -18.80869865, -12.22730350, -14.22425270, -11.66834641,
          -14.76986408, -13.08735275, -14.91366482, -16.30006790, -18.73601723]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.55895710]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1161 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.154895782470703
alpha/beta optimization time: 1.1308841705322266
initial alpha-crown bounds: tensor([[ 2.14901733,  4.91513777, -0.11741772,  1.51492643,  1.96165812,
          0.36733109,  2.03420496,  2.56605911,  4.76397705]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11741772294044495
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.69484758377075
Verifying property 0 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.149017333984375.

Properties batch 1, size 1
Remaining timeout: 198.57588267326355
Verifying property 1 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.915137767791748.

Properties batch 2, size 1
Remaining timeout: 198.47415614128113
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11741772]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.07235527, -18.64887428, -12.18960285, -14.05477905, -11.31740856,
        -14.56902885, -12.93454456, -14.51499081, -16.24306488, -18.54707718],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11741772]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1027
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 30
-----------------
# of unstable neurons: 1350
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 24] 
split level 2: [/input-12, 53] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 6] 
split level 5: [/input-12, 72] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 46] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.4345855712890625e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0009    finalize 0.0018    func 0.0085    
Accumulated time: func 0.0085    prepare 0.0022    bound 0.0039    transfer 0.0009    finalize 0.0018    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0220    set_bounds 0.0162    solve 0.0085    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0220    set_bounds 0.0162    solve 0.0085    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05099916458129883


Properties batch 3, size 1
Remaining timeout: 198.2719156742096
Verifying property 3 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5149264335632324.

Properties batch 4, size 1
Remaining timeout: 198.1743881702423
Verifying property 4 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9616581201553345.

Properties batch 5, size 1
Remaining timeout: 198.08056688308716
Verifying property 5 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3673310875892639.

Properties batch 6, size 1
Remaining timeout: 197.98875045776367
Verifying property 6 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0342049598693848.

Properties batch 7, size 1
Remaining timeout: 197.89726734161377
Verifying property 7 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.566059112548828.

Properties batch 8, size 1
Remaining timeout: 197.80556440353394
Verifying property 8 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.76397705078125.
Result: safe in 2.2865 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-30.26904869, -33.04354858, -25.95203400, -25.30147362, -26.82607079,
         -23.58791351, -27.02210999, -26.74736023, -30.97900772, -31.80931664]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [497]; unstable size 497; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 497] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 497] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 497] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 235] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.07312489, 7.09390211, 1.17368317, 1.32954621, 1.97331953, 2.09624100,
         2.19010615, 5.61076927, 6.28059959]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0541 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
         -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [914]; unstable size 914; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 914] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 914] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 914] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 264] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50396144,  4.56140280,  1.59753525,  0.26819623,  2.21705437,
         -0.30545187,  3.74951553,  1.75252271,  5.38511610]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
         -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.58it/s]100%|██████████| 1/1 [00:00<00:00,  7.57it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.65819931, -26.38527298, -20.12338066, -22.42969704, -20.93481636,
          -23.17112923, -20.35648537, -24.91724396, -23.23488617, -27.27224159]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.23310471]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1357 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 21.216480255126953
alpha/beta optimization time: 1.3260655403137207
initial alpha-crown bounds: tensor([[ 1.54622173,  4.63079166,  1.64909267,  0.31041110,  2.27289939,
         -0.27205801,  3.81806326,  1.79653955,  5.46451950]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.27205801010131836
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.44279026985168
Verifying property 0 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5462217330932617.

Properties batch 1, size 1
Remaining timeout: 198.26402258872986
Verifying property 1 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.630791664123535.

Properties batch 2, size 1
Remaining timeout: 198.1399528980255
Verifying property 2 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.649092674255371.

Properties batch 3, size 1
Remaining timeout: 198.03223752975464
Verifying property 3 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.31041109561920166.

Properties batch 4, size 1
Remaining timeout: 197.9298713207245
Verifying property 4 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2728993892669678.

Properties batch 5, size 1
Remaining timeout: 197.82735061645508
Verifying property 5 with 1 instances.
##### Instance 162 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27205801]], device='cuda:0') need to verify.
Model prediction is: tensor([-22.48896790, -26.36515045, -19.88720322, -22.34896469, -20.88877678,
        -23.03698540, -20.63687515, -24.80028343, -23.16793442, -27.18689156],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27205801]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 914
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 259
Node /15 input 0: size torch.Size([100]) unstable 17
-----------------
# of unstable neurons: 1190
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 83] 
split level 1: [/input-12, 36] 
split level 2: [/input-12, 96] 
split level 3: [/input-12, 89] 
split level 4: [/input-12, 43] 
split level 5: [/input-12, 18] 
split level 6: [/input-8, 1171] 
split level 7: [/input, 2984] 
pruning_in_iteration open status: True
ratio of positive domain = 237 / 256 = 0.92578125
pruning-in-iteration extra time: 0.004550933837890625
Time: prepare 0.0043    bound 0.1428    transfer 0.0015    finalize 0.0018    func 0.1504    
Accumulated time: func 0.1504    prepare 0.0047    bound 0.1428    transfer 0.0015    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11614 (8), -0.11067 (8), -0.10986 (8), -0.10439 (8), -0.09761 (8), -0.09234 (8), -0.09166 (8), -0.08643 (8), -0.05946 (8), -0.05591 (8), -0.05394 (8), -0.05040 (8), -0.02296 (8), -0.01939 (8), -0.01858 (8), -0.01496 (8), -0.01449 (8), -0.01066 (8), -0.00342 (8), 
Length of domains: 19
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0200    solve 0.1504    add 0.0040    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0200    solve 0.1504    add 0.0040    
Current (lb-rhs): -0.11614394187927246
19 domains visited
Cumulative time: 0.20195579528808594

BaB round 2
batch: 19
splitting decisions: 
split level 0: [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] [/input-12, 15] 
split level 1: [/input-8, 1649] [/input-12, 2] [/input-8, 1650] [/input-12, 2] [/input-8, 1649] [/input-12, 2] [/input-8, 1650] [/input-12, 2] [/input-8, 1756] [/input-8, 1649] 
split level 2: [/input-8, 1650] [/input, 2966] [/input-8, 1649] [/input, 2966] [/input-8, 1650] [/input, 2966] [/input-8, 1649] [/input, 2966] [/input, 2966] [/input-8, 1650] 
split level 3: [/input-8, 1077] [/input-8, 1762] [/input-8, 1077] [/input-8, 1236] [/input-8, 1077] [/input-8, 1762] [/input-8, 1077] [/input-8, 1236] [/input-8, 1762] [/input-8, 1077] 
pruning_in_iteration open status: True
ratio of positive domain = 229 / 304 = 0.7532894736842105
pruning-in-iteration extra time: 0.004720926284790039
Time: prepare 0.0077    bound 0.1489    transfer 0.0019    finalize 0.0027    func 0.1613    
Accumulated time: func 0.3116    prepare 0.0126    bound 0.2917    transfer 0.0034    finalize 0.0045    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10285 (12), -0.10085 (12), -0.09910 (12), -0.09737 (12), -0.09714 (12), -0.09662 (12), -0.09537 (12), -0.09362 (12), -0.09331 (12), -0.09289 (12), -0.09167 (12), -0.09114 (12), -0.08960 (12), -0.08783 (12), -0.08740 (12), -0.08486 (12), -0.08412 (12), -0.08111 (12), -0.07965 (12), -0.07878 (12), 
Length of domains: 75
Time: pickout 0.0013    decision 0.0215    set_bounds 0.0163    solve 0.1614    add 0.0014    
Accumulated time: pickout 0.0017    decision 0.0439    set_bounds 0.0363    solve 0.3118    add 0.0054    
Current (lb-rhs): -0.10285091400146484
94 domains visited
Cumulative time: 0.40520310401916504

BaB round 3
batch: 75
splitting decisions: 
split level 0: [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] [/input-8, 1236] [/input-8, 1772] [/input-12, 90] 
split level 1: [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] [/input, 3028] [/input-12, 90] [/input-8, 1756] 
pruning_in_iteration open status: True
ratio of positive domain = 116 / 300 = 0.3866666666666667
pruning-in-iteration extra time: 0.004307270050048828
Time: prepare 0.0075    bound 0.1361    transfer 0.0010    finalize 0.0019    func 0.1466    
Accumulated time: func 0.4582    prepare 0.0203    bound 0.4278    transfer 0.0044    finalize 0.0064    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09793 (14), -0.09590 (14), -0.09423 (14), -0.09250 (14), -0.09225 (14), -0.09167 (14), -0.09047 (14), -0.08881 (14), -0.08810 (14), -0.08802 (14), -0.08684 (14), -0.08624 (14), -0.08448 (14), -0.08266 (14), -0.08258 (14), -0.07913 (14), -0.07904 (14), -0.07545 (14), -0.07388 (14), -0.07320 (14), 
Length of domains: 184
Time: pickout 0.0025    decision 0.0208    set_bounds 0.0104    solve 0.1467    add 0.0025    
Accumulated time: pickout 0.0042    decision 0.0647    set_bounds 0.0467    solve 0.4585    add 0.0079    
Current (lb-rhs): -0.09793257713317871
278 domains visited
Cumulative time: 0.5889363288879395

BaB round 4
batch: 184
splitting decisions: 
split level 0: [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] [/input-12, 2] [/input-8, 1762] [/input-8, 1772] 
pruning_in_iteration open status: True
ratio of positive domain = 127 / 368 = 0.34510869565217395
pruning-in-iteration extra time: 0.004556179046630859
Time: prepare 0.0088    bound 0.1299    transfer 0.0021    finalize 0.0026    func 0.1435    
Accumulated time: func 0.6017    prepare 0.0294    bound 0.5577    transfer 0.0065    finalize 0.0090    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09483 (15), -0.09282 (15), -0.09087 (15), -0.08941 (15), -0.08892 (15), -0.08890 (15), -0.08852 (15), -0.08739 (15), -0.08702 (15), -0.08690 (15), -0.08545 (15), -0.08498 (15), -0.08481 (15), -0.08457 (15), -0.08349 (15), -0.08349 (15), -0.08310 (15), -0.08270 (15), -0.08165 (15), -0.08149 (15), 
Length of domains: 241
Time: pickout 0.0037    decision 0.0255    set_bounds 0.0074    solve 0.1436    add 0.0024    
Accumulated time: pickout 0.0079    decision 0.0902    set_bounds 0.0542    solve 0.6021    add 0.0103    
Current (lb-rhs): -0.09482717514038086
519 domains visited
Cumulative time: 0.7723209857940674

BaB round 5
batch: 241
splitting decisions: 
split level 0: [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-8, 1236] [/input-8, 954] [/input-12, 90] [/input-8, 1236] 
pruning_in_iteration open status: True
ratio of positive domain = 131 / 482 = 0.27178423236514526
pruning-in-iteration extra time: 0.004341840744018555
Time: prepare 0.0120    bound 0.1559    transfer 0.0055    finalize 0.0033    func 0.1768    
Accumulated time: func 0.7786    prepare 0.0416    bound 0.7136    transfer 0.0121    finalize 0.0123    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09312 (16), -0.09109 (16), -0.08841 (16), -0.08822 (16), -0.08771 (16), -0.08678 (16), -0.08649 (16), -0.08632 (16), -0.08624 (16), -0.08499 (16), -0.08449 (16), -0.08435 (16), -0.08302 (16), -0.08300 (16), -0.08299 (16), -0.08282 (16), -0.08251 (16), -0.08189 (16), -0.08137 (16), -0.08112 (16), 
Length of domains: 351
Time: pickout 0.0045    decision 0.0277    set_bounds 0.0096    solve 0.1770    add 0.0020    
Accumulated time: pickout 0.0124    decision 0.1178    set_bounds 0.0637    solve 0.7791    add 0.0124    
Current (lb-rhs): -0.09311580657958984
870 domains visited
Cumulative time: 0.9940950870513916

BaB round 6
batch: 351
splitting decisions: 
split level 0: [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input-8, 1756] [/input-8, 1245] [/input, 901] 
pruning_in_iteration open status: False
ratio of positive domain = 60 / 702 = 0.0854700854700855
pruning-in-iteration extra time: 5.173683166503906e-05
Time: prepare 0.0172    bound 0.1009    transfer 0.0073    finalize 0.0053    func 0.1307    
Accumulated time: func 0.9093    prepare 0.0590    bound 0.8145    transfer 0.0193    finalize 0.0176    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09066 (17), -0.08870 (17), -0.08571 (17), -0.08550 (17), -0.08525 (17), -0.08424 (17), -0.08381 (17), -0.08355 (17), -0.08324 (17), -0.08305 (17), -0.08206 (17), -0.08152 (17), -0.08144 (17), -0.08127 (17), -0.08095 (17), -0.08060 (17), -0.08046 (17), -0.08032 (17), -0.08010 (17), -0.07997 (17), 
Length of domains: 639
Time: pickout 0.0069    decision 0.0337    set_bounds 0.0144    solve 0.1309    add 0.0030    
Accumulated time: pickout 0.0193    decision 0.1515    set_bounds 0.0781    solve 0.9100    add 0.0154    
Current (lb-rhs): -0.09065651893615723
1509 domains visited
Cumulative time: 1.184396505355835

BaB round 7
batch: 639
splitting decisions: 
split level 0: [/input-8, 1374] [/input, 3028] [/input-8, 954] [/input, 2935] [/input-8, 954] [/input, 3028] [/input-8, 954] [/input, 2935] [/input-8, 1374] [/input-8, 1756] 
pruning_in_iteration open status: False
ratio of positive domain = 114 / 1278 = 0.08920187793427226
pruning-in-iteration extra time: 5.7697296142578125e-05
Time: prepare 0.0314    bound 0.1171    transfer 0.0067    finalize 0.0102    func 0.1656    
Accumulated time: func 1.0749    prepare 0.0906    bound 0.9316    transfer 0.0261    finalize 0.0278    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08775 (18), -0.08579 (18), -0.08540 (18), -0.08364 (18), -0.08277 (18), -0.08235 (18), -0.08230 (18), -0.08208 (18), -0.08131 (18), -0.08096 (18), -0.08081 (18), -0.08049 (18), -0.08037 (18), -0.08004 (18), -0.07999 (18), -0.07986 (18), -0.07943 (18), -0.07877 (18), -0.07870 (18), -0.07851 (18), 
Length of domains: 1148
Time: pickout 0.0115    decision 0.0513    set_bounds 0.0255    solve 0.1658    add 0.0052    
Accumulated time: pickout 0.0308    decision 0.2028    set_bounds 0.1036    solve 1.0758    add 0.0206    
Current (lb-rhs): -0.08774590492248535
2657 domains visited
Cumulative time: 1.4456958770751953

BaB round 8
batch: 1148
splitting decisions: 
split level 0: [/input-8, 954] [/input, 901] [/input-8, 1374] [/input, 3028] [/input-8, 1374] [/input, 901] [/input, 3028] [/input, 3028] [/input-8, 954] [/input, 3028] 
pruning_in_iteration open status: False
ratio of positive domain = 197 / 2296 = 0.08580139372822304
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0562    bound 0.1396    transfer 0.0112    finalize 0.0164    func 0.2236    
Accumulated time: func 1.2985    prepare 0.1470    bound 1.0712    transfer 0.0373    finalize 0.0443    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08455 (19), -0.08321 (19), -0.08258 (19), -0.08219 (19), -0.08123 (19), -0.08084 (19), -0.08084 (19), -0.08045 (19), -0.07958 (19), -0.07949 (19), -0.07915 (19), -0.07910 (19), -0.07888 (19), -0.07823 (19), -0.07812 (19), -0.07781 (19), -0.07761 (19), -0.07753 (19), -0.07730 (19), -0.07725 (19), 
Length of domains: 2081
Time: pickout 0.0191    decision 0.0793    set_bounds 0.0467    solve 0.2240    add 0.0145    
Accumulated time: pickout 0.0500    decision 0.2821    set_bounds 0.1503    solve 1.2998    add 0.0352    
Current (lb-rhs): -0.08455157279968262
4738 domains visited
Cumulative time: 1.8324296474456787

BaB round 9
batch: 2081
splitting decisions: 
split level 0: [/input, 3028] [/input, 2935] [/input, 3028] [/input-8, 228] [/input, 3028] [/input, 2935] [/input, 2935] [/input-8, 228] [/input, 3028] [/input, 2935] 
pruning_in_iteration open status: False
ratio of positive domain = 527 / 4162 = 0.1266218164344065
pruning-in-iteration extra time: 5.245208740234375e-05
Time: prepare 0.1042    bound 0.2175    transfer 0.0290    finalize 0.1497    func 0.5009    
Accumulated time: func 1.7994    prepare 0.2514    bound 1.2886    transfer 0.0663    finalize 0.1939    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08177 (20), -0.08042 (20), -0.07977 (20), -0.07935 (20), -0.07843 (20), -0.07801 (20), -0.07801 (20), -0.07761 (20), -0.07679 (20), -0.07666 (20), -0.07626 (20), -0.07615 (20), -0.07604 (20), -0.07593 (20), -0.07554 (20), -0.07544 (20), -0.07536 (20), -0.07480 (20), -0.07469 (20), -0.07445 (20), 
Length of domains: 3609
Time: pickout 0.0369    decision 0.1307    set_bounds 0.0834    solve 0.5017    add 0.0155    
Accumulated time: pickout 0.0869    decision 0.4128    set_bounds 0.2337    solve 1.8016    add 0.0506    
Current (lb-rhs): -0.08176922798156738
8347 domains visited
Cumulative time: 2.6070709228515625

BaB round 10
batch: 3609
splitting decisions: 
split level 0: [/input, 2935] [/input-8, 228] [/input, 2935] [/input, 1928] [/input, 2935] [/input-8, 228] [/input-8, 1374] [/input, 1928] [/input-8, 1740] [/input-8, 228] 
pruning_in_iteration open status: False
ratio of positive domain = 681 / 7218 = 0.09434746467165422
pruning-in-iteration extra time: 6.961822509765625e-05
Time: prepare 0.1843    bound 0.3356    transfer 0.0350    finalize 0.0467    func 0.6031    
Accumulated time: func 2.4025    prepare 0.4359    bound 1.6242    transfer 0.1013    finalize 0.2406    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08099 (21), -0.07965 (21), -0.07900 (21), -0.07858 (21), -0.07765 (21), -0.07723 (21), -0.07722 (21), -0.07683 (21), -0.07602 (21), -0.07587 (21), -0.07548 (21), -0.07538 (21), -0.07525 (21), -0.07513 (21), -0.07477 (21), -0.07467 (21), -0.07458 (21), -0.07402 (21), -0.07390 (21), -0.07370 (21), 
Length of domains: 6509
Time: pickout 0.0618    decision 0.2211    set_bounds 0.1449    solve 0.6044    add 0.0218    
Accumulated time: pickout 0.1487    decision 0.6339    set_bounds 0.3786    solve 2.4059    add 0.0724    
Current (lb-rhs): -0.0809943675994873
14856 domains visited
Cumulative time: 3.6708779335021973

BaB round 11
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input-8, 1740] [/input, 948] [/input, 948] [/input, 948] [/input, 2935] [/input, 1912] 
pruning_in_iteration open status: False
ratio of positive domain = 555 / 8192 = 0.0677490234375
pruning-in-iteration extra time: 0.00010085105895996094
Time: prepare 0.2249    bound 0.3746    transfer 0.0636    finalize 0.0565    func 0.7209    
Accumulated time: func 3.1234    prepare 0.6611    bound 1.9988    transfer 0.1648    finalize 0.2971    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07965 (21), -0.07816 (22), -0.07765 (21), -0.07723 (21), -0.07615 (22), -0.07587 (21), -0.07573 (22), -0.07551 (22), -0.07548 (21), -0.07513 (21), -0.07477 (21), -0.07467 (21), -0.07435 (22), -0.07398 (22), -0.07390 (21), -0.07367 (22), -0.07342 (21), -0.07323 (21), -0.07318 (22), -0.07315 (21), 
Length of domains: 10037
Time: pickout 0.0692    decision 0.3986    set_bounds 0.1671    solve 0.7224    add 0.0377    
Accumulated time: pickout 0.2178    decision 1.0325    set_bounds 0.5457    solve 3.1284    add 0.1101    
Current (lb-rhs): -0.07964634895324707
22480 domains visited
current_vram/total_varm: 10.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.086970567703247

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input, 964] [/input, 3028] [/input-8, 1740] [/input-8, 1740] [/input, 137] [/input, 3028] [/input, 3028] [/input, 3028] [/input, 3028] [/input, 3028] 
pruning_in_iteration open status: False
ratio of positive domain = 1326 / 16384 = 0.0809326171875
pruning-in-iteration extra time: 0.0001518726348876953
Time: prepare 0.4290    bound 0.6882    transfer 0.1773    finalize 0.1122    func 1.4087    
Accumulated time: func 4.5321    prepare 1.0904    bound 2.6871    transfer 0.3421    finalize 0.4093    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07775 (22), -0.07666 (23), -0.07576 (22), -0.07533 (22), -0.07513 (21), -0.07477 (21), -0.07467 (23), -0.07446 (22), -0.07426 (23), -0.07396 (22), -0.07389 (23), -0.07377 (23), -0.07359 (22), -0.07342 (21), -0.07315 (21), -0.07307 (21), -0.07293 (21), -0.07286 (23), -0.07281 (22), -0.07274 (21), 
Length of domains: 16865
Time: pickout 0.1500    decision 0.6107    set_bounds 0.4950    solve 1.4120    add 0.0530    
Accumulated time: pickout 0.3679    decision 1.6432    set_bounds 1.0408    solve 4.5404    add 0.1630    
Current (lb-rhs): -0.07775354385375977
37500 domains visited
current_vram/total_varm: 19.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 7.840449094772339

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input, 901] [/input, 901] [/input, 901] [/input, 964] [/input-8, 1740] [/input-8, 1740] [/input, 2936] [/input, 901] [/input, 964] [/input, 964] 
pruning_in_iteration open status: False
ratio of positive domain = 2807 / 32768 = 0.085662841796875
pruning-in-iteration extra time: 0.00029659271240234375
Time: prepare 0.8673    bound 1.3269    transfer 0.3669    finalize 0.4681    func 3.0319    
Accumulated time: func 7.5640    prepare 1.9581    bound 4.0140    transfer 0.7091    finalize 0.8774    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07491 (23), -0.07446 (24), -0.07315 (21), -0.07291 (23), -0.07274 (21), -0.07250 (23), -0.07228 (24), -0.07226 (23), -0.07213 (22), -0.07204 (24), -0.07194 (22), -0.07185 (24), -0.07166 (24), -0.07159 (23), -0.07153 (22), -0.07149 (22), -0.07146 (24), -0.07141 (21), -0.07110 (23), -0.07100 (21), 
Length of domains: 30343
Time: pickout 0.2787    decision 1.8857    set_bounds 0.8726    solve 3.0379    add 0.0946    
Accumulated time: pickout 0.6466    decision 3.5289    set_bounds 1.9134    solve 7.5783    add 0.2577    
Current (lb-rhs): -0.07490682601928711
67362 domains visited
current_vram/total_varm: 33.9GB/99.9GB, batch_size increase to 32768
Cumulative time: 14.068415403366089

BaB round 14
batch: 30343
splitting decisions: 
split level 0: [/input-8, 1740] [/input, 1928] [/input-8, 1740] [/input-8, 1374] [/input-8, 1740] [/input, 1928] [/input-8, 1740] [/input-8, 1374] [/input, 2935] [/input, 1928] 
pruning_in_iteration open status: False
ratio of positive domain = 5993 / 60686 = 0.09875424315328085
pruning-in-iteration extra time: 0.0005548000335693359
Time: prepare 1.6078    bound 2.4272    transfer 0.6772    finalize 0.7648    func 5.4811    
Accumulated time: func 13.0451    prepare 3.5662    bound 6.4411    transfer 1.3863    finalize 1.6421    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07224 (25), -0.07054 (24), -0.07044 (23), -0.07031 (24), -0.07013 (22), -0.07011 (24), -0.07007 (25), -0.07005 (25), -0.06985 (24), -0.06983 (25), -0.06969 (22), -0.06962 (25), -0.06944 (25), -0.06940 (24), -0.06929 (23), -0.06921 (25), -0.06893 (24), -0.06886 (23), -0.06874 (23), 
Length of domains: 54477
Time: pickout 0.5354    decision 3.3354    set_bounds 1.5595    solve 5.4917    add 0.1854    
Accumulated time: pickout 1.1820    decision 6.8644    set_bounds 3.4729    solve 13.0699    add 0.4430    
Current (lb-rhs): -0.07272100448608398
121839 domains visited
Cumulative time: 25.286897659301758

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input, 871] [/input, 885] [/input, 871] [/input, 885] [/input, 1390] [/input, 419] [/input, 419] [/input-8, 1193] [/input, 3028] [/input, 1390] 
pruning_in_iteration open status: False
ratio of positive domain = 7431 / 65536 = 0.1133880615234375
pruning-in-iteration extra time: 0.0006067752838134766
Time: prepare 1.7581    bound 7.8014    transfer 0.7279    finalize 1.0133    func 11.3043    
Accumulated time: func 24.3494    prepare 5.3248    bound 14.2426    transfer 2.1141    finalize 2.6554    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06788 (25), -0.06782 (26), -0.06779 (24), 
Length of domains: 79475
Time: pickout 0.5904    decision 3.7148    set_bounds 1.7963    solve 11.3157    add 0.2579    
Accumulated time: pickout 1.7724    decision 10.5792    set_bounds 5.2692    solve 24.3856    add 0.7009    
Current (lb-rhs): -0.07272100448608398
179605 domains visited
Cumulative time: 43.07150459289551

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input, 419] [/input, 1928] [/input, 1912] [/input-8, 1769] [/input-8, 1769] [/input-8, 1769] [/input-8, 1769] [/input-8, 1769] [/input, 1928] [/input-8, 1769] 
pruning_in_iteration open status: False
ratio of positive domain = 8575 / 65536 = 0.1308441162109375
pruning-in-iteration extra time: 0.0007927417755126953
Time: prepare 1.7751    bound 7.8000    transfer 0.7354    finalize 0.5348    func 10.8496    
Accumulated time: func 35.1990    prepare 7.1002    bound 22.0426    transfer 2.8495    finalize 3.1902    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 103278
Time: pickout 0.6139    decision 3.4287    set_bounds 1.9437    solve 11.4973    add 0.2003    
Accumulated time: pickout 2.3863    decision 14.0079    set_bounds 7.2129    solve 35.8830    add 0.9012    
Current (lb-rhs): -0.07272100448608398
236176 domains visited
Cumulative time: 60.87903594970703

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2006] [/input-8, 1193] [/input-8, 1193] [/input-8, 1740] [/input-8, 1193] [/input-8, 1193] [/input-8, 1769] [/input, 885] [/input, 885] [/input-8, 1193] 
pruning_in_iteration open status: False
ratio of positive domain = 9401 / 65536 = 0.1434478759765625
pruning-in-iteration extra time: 0.0006146430969238281
Time: prepare 1.7815    bound 7.8014    transfer 0.7362    finalize 1.3068    func 11.6297    
Accumulated time: func 46.8287    prepare 8.8822    bound 29.8440    transfer 3.5857    finalize 4.4970    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 126243
Time: pickout 0.6495    decision 3.3830    set_bounds 2.1582    solve 11.6419    add 0.2928    
Accumulated time: pickout 3.0358    decision 17.3909    set_bounds 9.3711    solve 47.5249    add 1.1940    
Current (lb-rhs): -0.07272100448608398
291909 domains visited
Cumulative time: 79.1318211555481

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 2006] [/input, 2936] [/input-8, 2006] [/input, 901] [/input, 1928] [/input, 964] [/input, 901] [/input, 1913] [/input, 884] [/input, 2936] 
pruning_in_iteration open status: False
ratio of positive domain = 9374 / 65536 = 0.143035888671875
pruning-in-iteration extra time: 0.0006151199340820312
Time: prepare 1.7910    bound 7.8043    transfer 0.7438    finalize 1.4394    func 11.7831    
Accumulated time: func 58.6118    prepare 10.6736    bound 37.6483    transfer 4.3295    finalize 5.9364    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 149238
Time: pickout 0.6177    decision 3.8421    set_bounds 1.4808    solve 11.7994    add 0.2358    
Accumulated time: pickout 3.6535    decision 21.2330    set_bounds 10.8519    solve 59.3243    add 1.4298    
Current (lb-rhs): -0.07272100448608398
347672 domains visited
Cumulative time: 97.30058860778809

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input, 916] [/input, 968] [/input, 2936] [/input, 884] [/input, 1390] [/input-8, 956] [/input, 1390] [/input, 916] [/input-8, 1716] [/input, 885] 
pruning_in_iteration open status: False
ratio of positive domain = 9156 / 65536 = 0.13970947265625
pruning-in-iteration extra time: 0.0005667209625244141
Time: prepare 1.9351    bound 7.8081    transfer 0.7364    finalize 0.5418    func 11.0245    
Accumulated time: func 69.6363    prepare 12.6094    bound 45.4565    transfer 5.0658    finalize 6.4782    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 172518
Time: pickout 0.8550    decision 3.5081    set_bounds 2.7756    solve 12.1173    add 0.2968    
Accumulated time: pickout 4.5086    decision 24.7411    set_bounds 13.6275    solve 71.4416    add 1.7267    
Current (lb-rhs): -0.07272100448608398
403720 domains visited
Cumulative time: 116.98466420173645

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input, 1928] [/input, 871] [/input, 1390] [/input, 871] [/input, 1390] [/input, 406] [/input-8, 1193] [/input, 167] [/input, 1390] [/input, 1928] 
pruning_in_iteration open status: False
ratio of positive domain = 9339 / 65536 = 0.1425018310546875
pruning-in-iteration extra time: 0.0005781650543212891
Time: prepare 1.7445    bound 7.8030    transfer 0.7381    finalize 0.5376    func 10.8263    
Accumulated time: func 80.4626    prepare 14.3543    bound 53.2595    transfer 5.8039    finalize 7.0157    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 195614
Time: pickout 0.6752    decision 3.3821    set_bounds 2.7947    solve 10.8423    add 0.2775    
Accumulated time: pickout 5.1838    decision 28.1232    set_bounds 16.4222    solve 82.2839    add 2.0041    
Current (lb-rhs): -0.07272100448608398
459584 domains visited
Cumulative time: 135.12470746040344

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input, 855] [/input, 968] [/input, 855] [/input, 968] [/input, 968] [/input, 968] [/input, 631] [/input, 964] [/input, 631] [/input, 855] 
pruning_in_iteration open status: False
ratio of positive domain = 9762 / 65536 = 0.148956298828125
pruning-in-iteration extra time: 0.0005822181701660156
Time: prepare 1.7872    bound 7.8030    transfer 0.7411    finalize 1.8837    func 12.2177    
Accumulated time: func 92.6802    prepare 16.1418    bound 61.0626    transfer 6.5450    finalize 8.8995    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 218247
Time: pickout 0.6721    decision 4.3532    set_bounds 1.5108    solve 12.2302    add 0.4327    
Accumulated time: pickout 5.8558    decision 32.4764    set_bounds 17.9330    solve 94.5142    add 2.4369    
Current (lb-rhs): -0.07272100448608398
514985 domains visited
Cumulative time: 154.49188709259033

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input, 964] [/input, 964] [/input, 167] [/input, 2936] [/input, 916] [/input, 916] [/input, 916] [/input, 916] [/input-8, 2006] [/input, 167] 
pruning_in_iteration open status: False
ratio of positive domain = 10312 / 65536 = 0.1573486328125
pruning-in-iteration extra time: 0.0005707740783691406
Time: prepare 1.7856    bound 7.8048    transfer 0.7383    finalize 0.5566    func 10.8885    
Accumulated time: func 103.5688    prepare 17.9279    bound 68.8673    transfer 7.2833    finalize 9.4560    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 240329
Time: pickout 0.6836    decision 3.3811    set_bounds 3.0908    solve 10.9055    add 0.3003    
Accumulated time: pickout 6.5394    decision 35.8575    set_bounds 21.0238    solve 105.4196    add 2.7372    
Current (lb-rhs): -0.07272100448608398
569835 domains visited
Cumulative time: 173.06464171409607

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1716] [/input, 884] [/input, 884] [/input, 884] [/input, 1912] [/input, 167] [/input, 901] [/input, 167] [/input, 167] [/input, 964] 
pruning_in_iteration open status: False
ratio of positive domain = 10748 / 65536 = 0.16400146484375
pruning-in-iteration extra time: 0.0005795955657958984
Time: prepare 1.8116    bound 7.8004    transfer 0.7396    finalize 0.5734    func 10.9281    
Accumulated time: func 114.4968    prepare 19.7400    bound 76.6678    transfer 8.0229    finalize 10.0294    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 262022
Time: pickout 0.7141    decision 3.4171    set_bounds 3.2694    solve 10.9449    add 0.2187    
Accumulated time: pickout 7.2535    decision 39.2747    set_bounds 24.2932    solve 116.3645    add 2.9559    
Current (lb-rhs): -0.07272100448608398
624296 domains visited
Cumulative time: 191.84499549865723

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 885] [/input-8, 1625] [/input-8, 1625] [/input, 884] [/input-8, 1716] [/input, 1912] [/input, 916] [/input, 964] [/input-8, 1625] [/input, 885] 
pruning_in_iteration open status: False
ratio of positive domain = 11091 / 65536 = 0.1692352294921875
pruning-in-iteration extra time: 0.0005669593811035156
Time: prepare 1.8210    bound 7.8023    transfer 0.7418    finalize 0.5810    func 10.9488    
Accumulated time: func 125.4456    prepare 21.5615    bound 84.4700    transfer 8.7647    finalize 10.6104    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07272 (24), -0.07054 (24), -0.07044 (23), -0.07035 (26), -0.07031 (24), -0.07005 (25), -0.06985 (24), -0.06940 (24), -0.06929 (23), -0.06893 (24), -0.06886 (23), -0.06874 (23), -0.06868 (23), -0.06859 (23), -0.06842 (24), -0.06797 (25), -0.06796 (26), -0.06779 (24), -0.06775 (24), -0.06772 (26), 
Length of domains: 283398
Time: pickout 0.7070    decision 4.8868    set_bounds 1.5744    solve 10.9659    add 0.2154    
Accumulated time: pickout 7.9605    decision 44.1614    set_bounds 25.8676    solve 127.3304    add 3.1713    
Current (lb-rhs): -0.07272100448608398
678440 domains visited
Time out!!!!!!!!
Result: unknown in 214.3749 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.72241402, -24.34649849, -23.13090515, -23.33512688, -23.44177818,
         -22.72599030, -24.29437256, -23.28028107, -25.88602257, -23.95406342]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [815]; unstable size 815; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 815] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 815] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 815] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 288] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.40899789, -1.25211000, -1.71174979, -1.47050440, -0.92382860,
         -2.03374100, -0.67183757,  0.06250143, -1.59028816]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.72241402, -24.34649849, -23.13090515, -23.33512688, -23.44177818,
         -22.72599030, -24.29437256, -23.28028107, -25.88602257, -23.95406342]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.72241211, -24.34649277, -23.13090134, -23.33512497, -23.44177628,
          -22.72598839, -24.29437065, -23.28027916, -25.88602257, -23.95405960],
         [-23.72241211, -24.34649277, -23.13090134, -23.33512497, -23.44177628,
          -22.72598839, -24.29437065, -23.28027916, -25.88602257, -23.95405960]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.44213295,  1.06621361, -0.14937782,  0.05484581,  0.16149712,
          -0.55429077,  1.01409149,  0.67378044]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         ...,


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]],


         [[[-0.32222211, -0.33809513, -0.41746020,  ..., -0.30634910,
            -0.22698402, -0.22698402],
           [-0.22698402, -0.27460307, -0.30634910,  ..., -0.40158719,
            -0.30634910, -0.29047608],
           [-0.17936498, -0.17936498, -0.21111101,  ..., -0.43333322,
            -0.35396814, -0.32222211],
           ...,
           [ 0.12222230,  0.21746039,  0.28095245,  ..., -0.41746020,
             0.16984135,  0.32857150],
           [ 0.32857150,  0.36031753,  0.37619054,  ...,  0.01111121,
             0.42380959,  0.42380959],
           [ 0.59841275,  0.55079371,  0.47142863,  ...,  0.07460327,
             0.37619054,  0.55079371]],

          [[-1.09500802, -1.11111104, -1.17552328,  ..., -1.03059578,
            -0.95008045, -0.93397743],
           [-0.96618354, -1.03059578, -1.04669881,  ..., -1.11111104,
            -1.01449275, -0.99838966],
           [-0.91787434, -0.91787434, -0.93397743,  ..., -1.14331722,
            -1.06280184, -1.03059578],
           ...,
           [-0.01610294,  0.08051541,  0.14492765,  ..., -0.28985494,
             0.14492765,  0.24154601],
           [ 0.19323683,  0.22544295,  0.24154601,  ...,  0.11272153,
             0.40257660,  0.35426742],
           [ 0.46698883,  0.41867965,  0.33816436,  ...,  0.16103071,
             0.35426742,  0.53140104]],

          [[-1.09295356, -1.12293863, -1.18290865,  ..., -1.16791618,
            -1.09295356, -1.09295356],
           [-1.03298354, -1.09295356, -1.10794616,  ..., -1.24287868,
            -1.15292358, -1.13793111],
           [-1.04797614, -1.04797614, -1.06296861,  ..., -1.27286363,
            -1.19790113, -1.16791618],
           ...,
           [-0.17841063, -0.08845562, -0.02848560,  ..., -0.31334329,
            -0.08845562,  0.06146942],
           [ 0.01649191,  0.04647692,  0.06146942,  ...,  0.06146942,
             0.18140946,  0.16641696],
           [ 0.27136448,  0.22638696,  0.15142445,  ...,  0.07646193,
             0.18140946,  0.33133450]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0710 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.75207901, -26.19200516, -21.51674461, -21.03239250, -21.79173470,
         -19.86995125, -22.43434525, -21.71803665, -25.64961243, -25.42793655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [834]; unstable size 834; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 834] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 834] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 834] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 272] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.31165791, 4.29574919, 0.41222417, 0.84093666, 0.84679615, 1.26739883,
         0.78366554, 3.96632385, 3.82774234]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0457 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.22746849, -18.94099426, -15.30552959, -16.48309898, -16.57509995,
         -17.20245552, -18.03771782, -16.32104874, -17.03782463, -18.11646080]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [739]; unstable size 739; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 296, 1, 739] with unstable size 295 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 739] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 739] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [295]; unstable size 295; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 295] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 295] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56572247,  0.72621620, -1.85110521, -0.71412635, -0.72852254,
         -0.07062459,  0.71391773, -0.96604085,  0.12609541]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.22746849, -18.94099426, -15.30552959, -16.48309898, -16.57509995,
         -17.20245552, -18.03771782, -16.32104874, -17.03782463, -18.11646080]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.22747231, -18.94099617, -15.30552959, -16.48309898, -16.57509995,
          -17.20245552, -18.03771782, -16.32104874, -17.03782654, -18.11646080],
         [-17.22747231, -18.94099617, -15.30552959, -16.48309898, -16.57509995,
          -17.20245552, -18.03771782, -16.32104874, -17.03782654, -18.11646080]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.90642357, -1.01551914,  0.16205025,  0.25405121,  0.88140678,
           0.71677780]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0775 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.80888367, -17.65867996, -15.04872608, -14.86061478, -14.44957924,
         -15.80550385, -12.51641083, -16.93015480, -17.87636757, -16.77168083]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [527]; unstable size 527; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 300, 1, 527] with unstable size 299 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 527] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 527] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [299]; unstable size 299; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 299] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 299] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.97510791, 3.01688457, 0.83104944, 0.91215861, 0.13671112, 1.58025622,
         1.78175282, 2.71599054, 2.04945326]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0590 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.61078835, -21.87978363, -18.13955688, -19.07592964, -19.79349327,
         -19.61386681, -20.54054451, -20.75547600, -18.17226410, -21.24487877]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [616]; unstable size 616; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 264, 1, 616] with unstable size 263 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 616] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 616] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [263]; unstable size 263; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 263] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 263] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55854011, -0.58301997, -0.01108885,  0.84704137,  0.37303174,
          1.41230488,  1.42802858, -0.66239882,  1.97629523]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.61078835, -21.87978363, -18.13955688, -19.07592964, -19.79349327,
         -19.61386681, -20.54054451, -20.75547600, -18.17226410, -21.24487877]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-18.57685661, -22.56581497, -19.07938957, -19.82606697, -20.69490051,
          -20.37679100, -21.29722595, -21.48613167, -18.54705811, -21.81942558],
         [-18.57685661, -22.56581497, -19.07938957, -19.82606697, -20.69490051,
          -20.37679100, -21.29722595, -21.48613167, -18.54705811, -21.81942558]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.50253296,  1.24921036, -0.02979851]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0085 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0512 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.20258904, -28.97587204, -21.97974777, -26.12151527, -22.80328751,
         -24.79159355, -26.35929489, -25.88696289, -29.32278824, -27.97410202]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 81, 1, 659] with unstable size 80 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 659] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [80]; unstable size 80; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 80] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 80] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.61785412, 5.97946167, 3.68134069, 0.37307784, 2.26610637, 3.72874069,
         3.38983059, 6.45273161, 5.22464943]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0617 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.22389221, -25.61617279, -20.58332062, -23.34521294, -20.21918297,
         -23.68240929, -23.30189896, -22.01793289, -23.25316620, -24.99141312]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [521]; unstable size 521; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 521] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 521] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 521] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 193] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.86727285,  3.52099228, -0.37071097,  2.10049105,  2.35707188,
          2.03269434,  1.03111446,  1.52145684,  3.31146574]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-22.22389221, -25.61617279, -20.58332062, -23.34521294, -20.21918297,
         -23.68240929, -23.30189896, -22.01793289, -23.25316620, -24.99141312]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.60488319, -25.99536514, -20.81976700, -23.81729126, -20.91196251,
          -24.20612526, -23.65208626, -22.70511818, -23.60512924, -25.38808250]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.09219551]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0456 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.96089172, -27.30179405, -18.06871414, -21.83080864, -18.06796074,
         -20.49729729, -22.39441490, -20.41414833, -26.60469437, -25.81503868]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [620]; unstable size 620; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 620] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 620] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 620] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 180] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.75783110,  7.53109455, -0.86600590,  3.01546717,  1.56956530,
          3.31403422,  1.72679353,  7.39529657,  6.39896202]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.96089172, -27.30179405, -18.06871414, -21.83080864, -18.06796074,
         -20.49729729, -22.39441490, -20.41414833, -26.60469437, -25.81503868]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.90667343, -27.24209404, -18.02988434, -21.79633713, -18.04055214,
          -20.46184349, -22.36747742, -20.38863564, -26.56404114, -25.75972939]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01066780]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0041 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.76115799, -29.22484970, -26.75863647, -27.30132103, -27.79590416,
         -27.84509468, -25.49637985, -28.66069603, -31.11473465, -27.50533867]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [617]; unstable size 617; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 617] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 617] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 617] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 213] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.97265625, 2.28189516, 0.24724329, 0.96132326, 1.16451263, 1.43096864,
         1.79910505, 3.81141281, 0.72075969]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0400 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
         -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [854]; unstable size 854; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 854] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 854] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 854] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 206] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.99029827,  0.58493638,  2.75045776,  0.33922243,  3.42682910,
          3.47799659,  2.48519015, -0.45412546,  3.58810258]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
         -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.73it/s]100%|██████████| 1/1 [00:00<00:00,  8.73it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.22096062, -26.21256256, -23.75860405, -25.94044685, -23.61741447,
          -26.77490807, -27.01570129, -26.42127228, -22.25056458, -26.82394600]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.02960396]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1171 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.7633056640625
alpha/beta optimization time: 1.1525397300720215
initial alpha-crown bounds: tensor([[ 3.05976629,  0.63149059,  2.80625105,  0.39776468,  3.48817968,
          3.54834986,  2.58086801, -0.39641106,  3.64704728]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.39641106128692627
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68126726150513
Verifying property 0 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0597662925720215.

Properties batch 1, size 1
Remaining timeout: 198.52854561805725
Verifying property 1 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6314905881881714.

Properties batch 2, size 1
Remaining timeout: 198.4192714691162
Verifying property 2 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.806251049041748.

Properties batch 3, size 1
Remaining timeout: 198.3155574798584
Verifying property 3 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3977646827697754.

Properties batch 4, size 1
Remaining timeout: 198.212299823761
Verifying property 4 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4881796836853027.

Properties batch 5, size 1
Remaining timeout: 198.10616087913513
Verifying property 5 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5483498573303223.

Properties batch 6, size 1
Remaining timeout: 198.0029137134552
Verifying property 6 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5808680057525635.

Properties batch 7, size 1
Remaining timeout: 197.89997577667236
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.39641106]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.93356705, -26.18995857, -23.55833054, -25.85114861, -23.34313011,
        -26.63274956, -26.89310074, -26.08115768, -22.53829002, -26.71156120],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.39641106]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 854
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 201
Node /15 input 0: size torch.Size([100]) unstable 25
-----------------
# of unstable neurons: 1080
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 36] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 24] 
split level 3: [/input-12, 0] 
split level 4: [/input-8, 819] 
split level 5: [/input-8, 818] 
split level 6: [/input-8, 1334] 
split level 7: [/input-8, 500] 
pruning_in_iteration open status: True
ratio of positive domain = 138 / 256 = 0.5390625
pruning-in-iteration extra time: 0.004634857177734375
Time: prepare 0.0034    bound 0.1427    transfer 0.0029    finalize 0.0015    func 0.1505    
Accumulated time: func 0.1505    prepare 0.0039    bound 0.1427    transfer 0.0029    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18666 (8), -0.18569 (8), -0.17575 (8), -0.17343 (8), -0.17246 (8), -0.17151 (8), -0.16767 (8), -0.16393 (8), -0.16310 (8), -0.16166 (8), -0.15594 (8), -0.15348 (8), -0.15303 (8), -0.15299 (8), -0.14840 (8), -0.14811 (8), -0.14649 (8), -0.14467 (8), -0.14327 (8), -0.14058 (8), 
Length of domains: 118
Time: pickout 0.0004    decision 0.0249    set_bounds 0.0176    solve 0.1506    add 0.0029    
Accumulated time: pickout 0.0004    decision 0.0249    set_bounds 0.0176    solve 0.1506    add 0.0029    
Current (lb-rhs): -0.1866627186536789
118 domains visited
Cumulative time: 0.2034928798675537

BaB round 2
batch: 118
splitting decisions: 
split level 0: [/input, 2938] [/input-8, 157] [/input-8, 817] [/input-8, 817] [/input-8, 1399] [/input-8, 1399] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] 
pruning_in_iteration open status: False
ratio of positive domain = 18 / 236 = 0.07627118644067798
pruning-in-iteration extra time: 5.0067901611328125e-05
Time: prepare 0.0048    bound 0.1031    transfer 0.0008    finalize 0.0023    func 0.1111    
Accumulated time: func 0.2616    prepare 0.0089    bound 0.2458    transfer 0.0037    finalize 0.0038    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18238 (9), -0.18168 (9), -0.17103 (9), -0.16902 (9), -0.16812 (9), -0.16741 (9), -0.16341 (9), -0.15897 (9), -0.15873 (9), -0.15694 (9), -0.15536 (9), -0.15154 (9), -0.15001 (9), -0.14851 (9), -0.14844 (9), -0.14720 (9), -0.14401 (9), -0.14373 (9), -0.14369 (9), -0.14227 (9), 
Length of domains: 218
Time: pickout 0.0021    decision 0.0219    set_bounds 0.0051    solve 0.1111    add 0.0023    
Accumulated time: pickout 0.0024    decision 0.0468    set_bounds 0.0227    solve 0.2617    add 0.0053    
Current (lb-rhs): -0.18238259851932526
336 domains visited
Cumulative time: 0.34636449813842773

BaB round 3
batch: 218
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 1516] [/input-8, 1715] [/input-8, 1715] [/input-8, 157] [/input-8, 1661] [/input-8, 1715] [/input-12, 20] [/input-8, 1715] [/input-8, 817] 
pruning_in_iteration open status: False
ratio of positive domain = 71 / 436 = 0.16284403669724767
pruning-in-iteration extra time: 5.0067901611328125e-05
Time: prepare 0.0090    bound 0.1046    transfer 0.0027    finalize 0.0036    func 0.1200    
Accumulated time: func 0.3816    prepare 0.0180    bound 0.3504    transfer 0.0064    finalize 0.0074    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17975 (10), -0.17914 (10), -0.16821 (10), -0.16627 (10), -0.16536 (10), -0.16474 (10), -0.15820 (10), -0.15615 (10), -0.15423 (10), -0.15408 (10), -0.15214 (10), -0.14764 (10), -0.14669 (10), -0.14667 (10), -0.14419 (10), -0.14342 (10), -0.14308 (10), -0.14263 (10), -0.14061 (10), -0.13968 (10), 
Length of domains: 364
Time: pickout 0.0031    decision 0.0259    set_bounds 0.0096    solve 0.1201    add 0.0033    
Accumulated time: pickout 0.0055    decision 0.0727    set_bounds 0.0323    solve 0.3818    add 0.0085    
Current (lb-rhs): -0.17974717915058136
700 domains visited
Cumulative time: 0.5091533660888672

BaB round 4
batch: 364
splitting decisions: 
split level 0: [/input-8, 1661] [/input-8, 1399] [/input, 3521] [/input-12, 64] [/input-8, 1661] [/input-8, 1516] [/input, 3521] [/input-8, 1516] [/input, 3521] [/input-8, 1661] 
pruning_in_iteration open status: False
ratio of positive domain = 138 / 728 = 0.18956043956043955
pruning-in-iteration extra time: 7.343292236328125e-05
Time: prepare 0.0156    bound 0.1049    transfer 0.0087    finalize 0.0049    func 0.1348    
Accumulated time: func 0.5164    prepare 0.0338    bound 0.4553    transfer 0.0151    finalize 0.0123    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17588 (11), -0.17508 (11), -0.16439 (11), -0.16244 (11), -0.16146 (11), -0.16092 (11), -0.16066 (11), -0.15992 (11), -0.15564 (11), -0.15233 (11), -0.15152 (11), -0.15038 (11), -0.15010 (11), -0.14768 (11), -0.14744 (11), -0.14649 (11), -0.14549 (11), -0.14481 (11), -0.14412 (11), -0.14220 (11), 
Length of domains: 586
Time: pickout 0.0059    decision 0.0341    set_bounds 0.0145    solve 0.1350    add 0.0034    
Accumulated time: pickout 0.0114    decision 0.1068    set_bounds 0.0468    solve 0.5168    add 0.0119    
Current (lb-rhs): -0.17587749660015106
1286 domains visited
Cumulative time: 0.7030935287475586

BaB round 5
batch: 586
splitting decisions: 
split level 0: [/input-8, 1661] [/input, 2938] [/input-8, 1174] [/input-8, 157] [/input, 2938] [/input-8, 157] [/input-8, 1661] [/input, 2938] [/input-8, 498] [/input-8, 1174] 
pruning_in_iteration open status: False
ratio of positive domain = 212 / 1172 = 0.1808873720136519
pruning-in-iteration extra time: 5.4836273193359375e-05
Time: prepare 0.0255    bound 0.1126    transfer 0.0074    finalize 0.0088    func 0.1544    
Accumulated time: func 0.6708    prepare 0.0595    bound 0.5678    transfer 0.0226    finalize 0.0211    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17302 (12), -0.17217 (12), -0.16149 (12), -0.15951 (12), -0.15857 (12), -0.15771 (12), -0.15708 (12), -0.15606 (12), -0.15270 (12), -0.14937 (12), -0.14860 (12), -0.14739 (12), -0.14655 (12), -0.14446 (12), -0.14386 (12), -0.14262 (12), -0.14160 (12), -0.14159 (12), -0.14111 (12), -0.13904 (12), 
Length of domains: 955
Time: pickout 0.0070    decision 0.0462    set_bounds 0.0224    solve 0.1546    add 0.0060    
Accumulated time: pickout 0.0185    decision 0.1531    set_bounds 0.0692    solve 0.6715    add 0.0180    
Current (lb-rhs): -0.17302368581295013
2241 domains visited
Cumulative time: 0.9410793781280518

BaB round 6
batch: 955
splitting decisions: 
split level 0: [/input-8, 1065] [/input-8, 817] [/input-8, 1662] [/input-12, 64] [/input-8, 1662] [/input-8, 1715] [/input, 3521] [/input-8, 817] [/input-8, 1662] [/input-12, 64] 
pruning_in_iteration open status: False
ratio of positive domain = 341 / 1910 = 0.17853403141361257
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0417    bound 0.1268    transfer 0.0225    finalize 0.0138    func 0.2051    
Accumulated time: func 0.8759    prepare 0.1015    bound 0.6946    transfer 0.0451    finalize 0.0349    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16931 (13), -0.16888 (13), -0.16755 (13), -0.16391 (13), -0.15734 (13), -0.15614 (13), -0.15602 (13), -0.15485 (13), -0.15393 (13), -0.15381 (13), -0.15261 (13), -0.15256 (13), -0.15250 (13), -0.15131 (13), -0.14966 (13), -0.14962 (13), -0.14946 (13), -0.14556 (13), -0.14548 (13), -0.14465 (13), 
Length of domains: 1560
Time: pickout 0.0120    decision 0.0671    set_bounds 0.0373    solve 0.2061    add 0.0063    
Accumulated time: pickout 0.0305    decision 0.2201    set_bounds 0.1064    solve 0.8775    add 0.0243    
Current (lb-rhs): -0.16931238770484924
3801 domains visited
Cumulative time: 1.2727038860321045

BaB round 7
batch: 1560
splitting decisions: 
split level 0: [/input-8, 157] [/input-8, 1662] [/input-8, 1654] [/input-8, 748] [/input-8, 498] [/input, 2938] [/input-8, 1662] [/input-8, 1654] [/input-8, 157] [/input-8, 748] 
pruning_in_iteration open status: True
ratio of positive domain = 708 / 3120 = 0.2269230769230769
pruning-in-iteration extra time: 0.0015647411346435547
Time: prepare 0.0729    bound 0.2086    transfer 0.0391    finalize 0.0219    func 0.3438    
Accumulated time: func 1.2197    prepare 0.1746    bound 0.9033    transfer 0.0842    finalize 0.0568    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16666 (14), -0.16533 (14), -0.16516 (14), -0.16411 (14), -0.16384 (14), -0.16278 (14), -0.16216 (14), -0.15424 (14), -0.15392 (14), -0.15258 (14), -0.15198 (14), -0.15170 (14), -0.15158 (14), -0.15150 (14), -0.15065 (14), -0.15021 (14), -0.15018 (14), -0.15009 (14), -0.15004 (14), -0.14915 (14), 
Length of domains: 2412
Time: pickout 0.0202    decision 0.1002    set_bounds 0.1948    solve 0.3443    add 0.0099    
Accumulated time: pickout 0.0506    decision 0.3203    set_bounds 0.3013    solve 1.2219    add 0.0342    
Current (lb-rhs): -0.16666142642498016
6213 domains visited
Cumulative time: 1.9481594562530518

BaB round 8
batch: 2412
splitting decisions: 
split level 0: [/input-8, 748] [/input, 3521] [/input-12, 64] [/input-8, 157] [/input-12, 64] [/input, 3521] [/input-12, 64] [/input-8, 748] [/input-12, 64] [/input-8, 498] 
pruning_in_iteration open status: True
ratio of positive domain = 1212 / 4824 = 0.2512437810945274
pruning-in-iteration extra time: 0.004311561584472656
Time: prepare 0.1098    bound 0.3237    transfer 0.0457    finalize 0.0332    func 0.5129    
Accumulated time: func 1.7327    prepare 0.2846    bound 1.2270    transfer 0.1299    finalize 0.0900    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16378 (15), -0.16247 (15), -0.16202 (15), -0.16123 (15), -0.16072 (15), -0.15992 (15), -0.15797 (15), -0.15770 (15), -0.15743 (15), -0.15666 (15), -0.15639 (15), -0.15608 (15), -0.15489 (15), -0.15358 (15), -0.15173 (15), -0.15041 (15), -0.14969 (15), -0.14968 (15), -0.14909 (15), -0.14884 (15), 
Length of domains: 3612
Time: pickout 0.0332    decision 0.1473    set_bounds 0.0972    solve 0.5143    add 0.0124    
Accumulated time: pickout 0.0839    decision 0.4676    set_bounds 0.3984    solve 1.7361    add 0.0466    
Current (lb-rhs): -0.1637822985649109
9825 domains visited
Cumulative time: 2.7668492794036865

BaB round 9
batch: 3612
splitting decisions: 
split level 0: [/input-8, 498] [/input-8, 748] [/input-8, 748] [/input-8, 748] [/input-8, 498] [/input-8, 748] [/input-8, 817] [/input-12, 64] [/input-8, 498] [/input, 3521] 
pruning_in_iteration open status: True
ratio of positive domain = 1550 / 7224 = 0.21456256921373196
pruning-in-iteration extra time: 0.001611471176147461
Time: prepare 0.1767    bound 0.3524    transfer 0.0683    finalize 0.0529    func 0.6522    
Accumulated time: func 2.3849    prepare 0.4615    bound 1.5794    transfer 0.1982    finalize 0.1430    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16054 (16), -0.16012 (16), -0.15921 (16), -0.15896 (16), -0.15879 (16), -0.15818 (16), -0.15759 (16), -0.15687 (16), -0.15606 (16), -0.15564 (16), -0.15509 (16), -0.15485 (16), -0.15473 (16), -0.15432 (16), -0.15377 (16), -0.15348 (16), -0.15156 (16), -0.15151 (16), -0.15026 (16), -0.15020 (16), 
Length of domains: 5674
Time: pickout 0.0514    decision 0.3650    set_bounds 0.1513    solve 0.6538    add 0.0316    
Accumulated time: pickout 0.1352    decision 0.8327    set_bounds 0.5497    solve 2.3900    add 0.0782    
Current (lb-rhs): -0.1605425775051117
15499 domains visited
Cumulative time: 4.038474082946777

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 498] [/input-8, 1654] [/input-8, 748] [/input-8, 748] [/input, 889] [/input, 2938] [/input-8, 747] [/input-8, 1399] [/input-12, 64] [/input, 889] 
pruning_in_iteration open status: True
ratio of positive domain = 1750 / 8192 = 0.213623046875
pruning-in-iteration extra time: 0.0019063949584960938
Time: prepare 0.1992    bound 0.3825    transfer 0.0662    finalize 0.0535    func 0.7022    
Accumulated time: func 3.0871    prepare 0.6610    bound 1.9619    transfer 0.2644    finalize 0.1965    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15832 (17), -0.15759 (16), -0.15738 (17), -0.15699 (17), -0.15614 (17), -0.15603 (17), -0.15577 (17), -0.15543 (17), -0.15466 (17), -0.15444 (17), -0.15411 (17), -0.15382 (17), -0.15334 (17), -0.15286 (17), -0.15250 (17), -0.15151 (17), -0.15127 (17), -0.15106 (17), -0.15031 (17), -0.14998 (17), 
Length of domains: 8020
Time: pickout 0.0608    decision 0.3795    set_bounds 0.1679    solve 0.7040    add 0.0266    
Accumulated time: pickout 0.1960    decision 1.2122    set_bounds 0.7177    solve 3.0940    add 0.1048    
Current (lb-rhs): -0.1583186537027359
21941 domains visited
current_vram/total_varm: 28.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.39835786819458

BaB round 11
batch: 8020
splitting decisions: 
split level 0: [/input-8, 747] [/input-8, 747] [/input-12, 64] [/input-8, 747] [/input-8, 747] [/input-8, 1516] [/input-8, 747] [/input-8, 1516] [/input-8, 747] [/input-8, 747] 
pruning_in_iteration open status: False
ratio of positive domain = 2907 / 16040 = 0.18123441396508733
pruning-in-iteration extra time: 0.000118255615234375
Time: prepare 0.4147    bound 0.6750    transfer 0.1794    finalize 0.1156    func 1.3869    
Accumulated time: func 4.4741    prepare 1.0760    bound 2.6370    transfer 0.4437    finalize 0.3121    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15560 (18), -0.15479 (17), -0.15425 (18), -0.15406 (18), -0.15304 (18), -0.15286 (18), -0.15280 (18), -0.15272 (18), -0.15176 (18), -0.15169 (18), -0.15160 (18), -0.15153 (18), -0.15130 (18), -0.15112 (18), -0.15074 (18), -0.15041 (18), -0.15014 (18), -0.14998 (18), -0.14977 (18), -0.14939 (18), 
Length of domains: 13087
Time: pickout 0.1189    decision 0.6427    set_bounds 0.4845    solve 1.3903    add 0.0568    
Accumulated time: pickout 0.3148    decision 1.8549    set_bounds 1.2022    solve 4.4843    add 0.1616    
Current (lb-rhs): -0.15559865534305573
35028 domains visited
Cumulative time: 8.12991213798523

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1065] [/input-8, 794] [/input-8, 1399] [/input-8, 157] [/input-8, 1065] [/input-8, 157] [/input, 978] [/input-8, 1324] [/input-8, 157] [/input-8, 1324] 
pruning_in_iteration open status: False
ratio of positive domain = 2804 / 16384 = 0.171142578125
pruning-in-iteration extra time: 0.0001270771026611328
Time: prepare 0.4142    bound 0.6852    transfer 0.1813    finalize 0.1074    func 1.3898    
Accumulated time: func 5.8639    prepare 1.4906    bound 3.3222    transfer 0.6250    finalize 0.4195    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15467 (19), -0.15332 (19), -0.15222 (19), -0.15160 (18), -0.15153 (18), -0.15143 (18), -0.15095 (19), -0.15088 (19), -0.15022 (18), -0.15019 (19), -0.15001 (19), -0.14994 (19), -0.14975 (19), -0.14922 (19), -0.14911 (19), -0.14884 (19), -0.14883 (18), -0.14881 (19), -0.14867 (19), -0.14861 (19), 
Length of domains: 18428
Time: pickout 0.1253    decision 0.6503    set_bounds 0.5549    solve 1.3930    add 0.0605    
Accumulated time: pickout 0.4401    decision 2.5052    set_bounds 1.7571    solve 5.8773    add 0.2222    
Current (lb-rhs): -0.15467020869255066
48561 domains visited
current_vram/total_varm: 39.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.948103189468384

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 747] [/input-8, 1114] [/input-12, 64] [/input, 3030] [/input-12, 64] [/input-12, 64] [/input-8, 1114] [/input-8, 1114] [/input, 3030] 
pruning_in_iteration open status: False
ratio of positive domain = 4986 / 32768 = 0.15216064453125
pruning-in-iteration extra time: 0.0002574920654296875
Time: prepare 0.8456    bound 1.3198    transfer 0.3673    finalize 0.2361    func 2.7712    
Accumulated time: func 8.6351    prepare 2.3365    bound 4.6420    transfer 0.9923    finalize 0.6556    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15099 (20), -0.15075 (20), -0.14994 (20), -0.14990 (19), -0.14964 (20), -0.14959 (19), -0.14946 (20), -0.14940 (20), -0.14860 (20), -0.14848 (20), -0.14817 (20), -0.14791 (20), -0.14790 (19), -0.14762 (20), -0.14731 (20), -0.14713 (20), -0.14706 (19), -0.14682 (20), -0.14656 (20), -0.14654 (19), 
Length of domains: 29709
Time: pickout 0.2581    decision 1.8994    set_bounds 1.1668    solve 2.7778    add 0.0999    
Accumulated time: pickout 0.6982    decision 4.4046    set_bounds 2.9239    solve 8.6551    add 0.3220    
Current (lb-rhs): -0.1509912610054016
76226 domains visited
current_vram/total_varm: 39.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.214701414108276

BaB round 14
batch: 29709
splitting decisions: 
split level 0: [/input-8, 1114] [/input-8, 1114] [/input, 889] [/input-8, 1114] [/input-8, 747] [/input-8, 1114] [/input-8, 1114] [/input-8, 747] [/input-8, 1114] [/input, 889] 
pruning_in_iteration open status: False
ratio of positive domain = 7377 / 59418 = 0.12415429667777445
pruning-in-iteration extra time: 0.0004885196685791016
Time: prepare 1.5361    bound 2.3652    transfer 0.6645    finalize 0.8138    func 5.3828    
Accumulated time: func 14.0179    prepare 3.8730    bound 7.0072    transfer 1.6569    finalize 1.4694    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14917 (21), -0.14896 (20), -0.14833 (21), -0.14811 (20), -0.14797 (21), -0.14782 (21), -0.14704 (21), -0.14696 (21), -0.14663 (21), -0.14648 (21), -0.14646 (21), -0.14609 (21), -0.14607 (21), -0.14606 (20), -0.14520 (20), -0.14520 (21), -0.14511 (21), -0.14499 (20), -0.14489 (21), -0.14484 (21), 
Length of domains: 51847
Time: pickout 0.4769    decision 3.3526    set_bounds 1.5935    solve 5.7517    add 0.2981    
Accumulated time: pickout 1.1750    decision 7.7572    set_bounds 4.5174    solve 14.4067    add 0.6201    
Current (lb-rhs): -0.1491725891828537
128073 domains visited
Cumulative time: 28.80883526802063

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1654] [/input-8, 498] [/input-8, 1654] [/input-8, 748] [/input-8, 794] [/input-8, 748] [/input-8, 497] [/input-8, 498] [/input-8, 1174] [/input-8, 1174] 
pruning_in_iteration open status: False
ratio of positive domain = 7854 / 65536 = 0.119842529296875
pruning-in-iteration extra time: 0.0005586147308349609
Time: prepare 1.7069    bound 7.7846    transfer 0.7282    finalize 1.0416    func 11.2650    
Accumulated time: func 25.2828    prepare 5.5803    bound 14.7918    transfer 2.3850    finalize 2.5110    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14748 (22), -0.14663 (21), -0.14647 (22), -0.14614 (22), -0.14606 (20), -0.14566 (21), -0.14530 (21), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14438 (22), -0.14421 (22), -0.14404 (22), -0.14404 (22), -0.14385 (20), -0.14361 (21), 
Length of domains: 76535
Time: pickout 0.5309    decision 3.3711    set_bounds 1.8901    solve 11.2764    add 0.4054    
Accumulated time: pickout 1.7060    decision 11.1283    set_bounds 6.4075    solve 25.6832    add 1.0255    
Current (lb-rhs): -0.1479695588350296
185529 domains visited
Cumulative time: 46.41034698486328

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1611] [/input-8, 1611] [/input, 3030] [/input-8, 497] [/input, 3030] [/input-8, 1611] [/input, 3030] [/input-8, 497] [/input-8, 1134] [/input-8, 748] 
pruning_in_iteration open status: False
ratio of positive domain = 7597 / 65536 = 0.1159210205078125
pruning-in-iteration extra time: 0.0007011890411376953
Time: prepare 1.8129    bound 7.7848    transfer 0.7411    finalize 1.2046    func 11.5478    
Accumulated time: func 36.8307    prepare 7.3936    bound 22.5766    transfer 3.1261    finalize 3.7156    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14506 (23), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14369 (23), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14295 (22), 
Length of domains: 101521
Time: pickout 0.5748    decision 3.5856    set_bounds 2.0041    solve 11.5608    add 0.2094    
Accumulated time: pickout 2.2808    decision 14.7139    set_bounds 8.4116    solve 37.2440    add 1.2349    
Current (lb-rhs): -0.1479695588350296
243283 domains visited
Cumulative time: 64.48978447914124

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1169] [/input, 3221] [/input-8, 497] [/input-8, 1662] [/input-8, 497] [/input-8, 1611] [/input-8, 1662] [/input-8, 1662] [/input-8, 1662] [/input-8, 1662] 
pruning_in_iteration open status: False
ratio of positive domain = 6710 / 65536 = 0.102386474609375
pruning-in-iteration extra time: 0.0005609989166259766
Time: prepare 1.8589    bound 7.7869    transfer 0.7424    finalize 0.5580    func 10.9500    
Accumulated time: func 47.7807    prepare 9.2530    bound 30.3635    transfer 3.8685    finalize 4.2736    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 127384
Time: pickout 0.5889    decision 3.7461    set_bounds 2.1923    solve 10.9662    add 0.2107    
Accumulated time: pickout 2.8697    decision 18.4600    set_bounds 10.6039    solve 48.2102    add 1.4457    
Current (lb-rhs): -0.1479695588350296
301914 domains visited
Cumulative time: 82.33984422683716

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1169] [/input, 2938] [/input-8, 1134] [/input-8, 498] [/input-8, 747] [/input-8, 1169] [/input-8, 1169] [/input, 1459] [/input, 3031] [/input, 993] 
pruning_in_iteration open status: False
ratio of positive domain = 7137 / 65536 = 0.1089019775390625
pruning-in-iteration extra time: 0.0005247592926025391
Time: prepare 1.8880    bound 7.7822    transfer 0.7446    finalize 0.5567    func 10.9752    
Accumulated time: func 58.7558    prepare 11.1414    bound 38.1457    transfer 4.6131    finalize 4.8303    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 152796
Time: pickout 0.6303    decision 4.3506    set_bounds 2.3274    solve 11.9519    add 0.2103    
Accumulated time: pickout 3.5001    decision 22.8106    set_bounds 12.9313    solve 60.1620    add 1.6560    
Current (lb-rhs): -0.1479695588350296
360094 domains visited
Cumulative time: 101.91695737838745

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input, 3221] [/input, 889] [/input, 3537] [/input-8, 1661] [/input-8, 1662] [/input-8, 747] [/input-8, 1322] [/input-8, 1324] [/input-8, 1610] [/input-8, 1661] 
pruning_in_iteration open status: False
ratio of positive domain = 7992 / 65536 = 0.1219482421875
pruning-in-iteration extra time: 0.0005278587341308594
Time: prepare 1.8600    bound 7.7830    transfer 0.7530    finalize 0.5662    func 10.9660    
Accumulated time: func 69.7218    prepare 13.0018    bound 45.9288    transfer 5.3662    finalize 5.3966    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 177323
Time: pickout 0.6019    decision 3.4309    set_bounds 2.5852    solve 10.9821    add 0.2152    
Accumulated time: pickout 4.1020    decision 26.2415    set_bounds 15.5165    solve 71.1442    add 1.8712    
Current (lb-rhs): -0.1479695588350296
417389 domains visited
Cumulative time: 119.88905549049377

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1654] [/input-8, 1924] [/input, 3031] [/input-8, 1661] [/input-8, 1653] [/input-8, 497] [/input-8, 1662] [/input, 2766] [/input-8, 1324] [/input-8, 1653] 
pruning_in_iteration open status: False
ratio of positive domain = 8885 / 65536 = 0.1355743408203125
pruning-in-iteration extra time: 0.0005023479461669922
Time: prepare 1.8693    bound 7.7855    transfer 0.7370    finalize 1.7798    func 12.1746    
Accumulated time: func 81.8964    prepare 14.8715    bound 53.7143    transfer 6.1031    finalize 7.1764    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 200977
Time: pickout 0.6476    decision 4.2241    set_bounds 1.4802    solve 12.1877    add 0.2102    
Accumulated time: pickout 4.7496    decision 30.4655    set_bounds 16.9967    solve 83.3318    add 2.0814    
Current (lb-rhs): -0.1479695588350296
473811 domains visited
Cumulative time: 138.7812783718109

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1653] [/input-8, 1169] [/input-8, 1611] [/input-8, 1611] [/input-8, 1653] [/input-8, 1611] [/input-8, 1549] [/input-8, 1549] [/input-8, 1611] [/input-8, 1611] 
pruning_in_iteration open status: False
ratio of positive domain = 9653 / 65536 = 0.1472930908203125
pruning-in-iteration extra time: 0.0005288124084472656
Time: prepare 1.8930    bound 7.7858    transfer 0.7354    finalize 0.5583    func 10.9753    
Accumulated time: func 92.8717    prepare 16.7650    bound 61.5001    transfer 6.8385    finalize 7.7347    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 223799
Time: pickout 0.6456    decision 3.4342    set_bounds 2.8787    solve 10.9922    add 0.2086    
Accumulated time: pickout 5.3951    decision 33.8997    set_bounds 19.8755    solve 94.3241    add 2.2900    
Current (lb-rhs): -0.1479695588350296
529401 domains visited
Cumulative time: 157.1198742389679

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input, 889] [/input, 889] [/input-8, 442] [/input-8, 497] [/input-8, 1661] [/input, 3031] [/input, 978] [/input, 978] [/input-8, 1654] [/input, 978] 
pruning_in_iteration open status: False
ratio of positive domain = 9765 / 65536 = 0.1490020751953125
pruning-in-iteration extra time: 0.0005884170532226562
Time: prepare 1.9279    bound 7.7839    transfer 0.7389    finalize 2.0662    func 12.5199    
Accumulated time: func 105.3916    prepare 18.6933    bound 69.2839    transfer 7.5774    finalize 9.8009    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 246496
Time: pickout 0.6610    decision 4.9967    set_bounds 1.4883    solve 12.5355    add 0.3940    
Accumulated time: pickout 6.0561    decision 38.8964    set_bounds 21.3637    solve 106.8596    add 2.6840    
Current (lb-rhs): -0.1479695588350296
584866 domains visited
Cumulative time: 177.37480998039246

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1169] [/input, 2747] [/input, 345] [/input, 345] [/input, 2766] [/input, 345] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input, 2766] 
pruning_in_iteration open status: False
ratio of positive domain = 10375 / 65536 = 0.1583099365234375
pruning-in-iteration extra time: 0.0005724430084228516
Time: prepare 1.8764    bound 7.7874    transfer 0.7362    finalize 0.5797    func 10.9828    
Accumulated time: func 116.3744    prepare 20.5701    bound 77.0713    transfer 8.3136    finalize 10.3807    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 268596
Time: pickout 0.6456    decision 3.4200    set_bounds 3.2890    solve 10.9996    add 0.2173    
Accumulated time: pickout 6.7017    decision 42.3164    set_bounds 24.6527    solve 117.8592    add 2.9013    
Current (lb-rhs): -0.1479695588350296
639734 domains visited
Cumulative time: 196.1727111339569

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input, 2766] [/input-8, 1611] [/input-8, 1654] [/input-8, 1654] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 404] [/input-8, 1654] [/input-8, 402] 
pruning_in_iteration open status: False
ratio of positive domain = 12350 / 65536 = 0.188446044921875
pruning-in-iteration extra time: 0.0005674362182617188
Time: prepare 1.9963    bound 7.7853    transfer 0.7397    finalize 0.5749    func 11.0992    
Accumulated time: func 127.4737    prepare 22.5669    bound 84.8566    transfer 9.0533    finalize 10.9556    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14797 (21), -0.14663 (21), -0.14647 (22), -0.14606 (20), -0.14520 (20), -0.14518 (22), -0.14510 (22), -0.14476 (21), -0.14472 (20), -0.14466 (21), -0.14421 (22), -0.14385 (20), -0.14381 (22), -0.14361 (21), -0.14345 (22), -0.14341 (21), -0.14341 (21), -0.14321 (24), -0.14295 (22), -0.14285 (22), 
Length of domains: 288655
Time: pickout 0.7251    decision 3.4540    set_bounds 3.4954    solve 11.1161    add 0.2051    
Accumulated time: pickout 7.4268    decision 45.7704    set_bounds 28.1481    solve 128.9753    add 3.1064    
Current (lb-rhs): -0.1479695588350296
692561 domains visited
Time out!!!!!!!!
Result: unknown in 219.2365 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.90053749, -18.83853912, -16.65795326, -15.93625736, -16.87875748,
         -16.65612221, -15.87883949, -18.48574829, -19.30859566, -18.32104874]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 775] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 775] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 291] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.07465255,  0.67120790, -0.69678211, -0.40189266,  0.40540996,
         -1.27040482,  0.91171956,  1.11740518,  0.40299344]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.90053749, -18.83853912, -16.65795326, -15.93625736, -16.87875748,
         -16.65612221, -15.87883949, -18.48574829, -19.30859566, -18.32104874]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.90053940, -18.83854103, -16.65795326, -15.93625832, -16.87875938,
          -16.65612030, -15.87884331, -18.48575401, -19.30859756, -18.32105255],
         [-17.90053940, -18.83854103, -16.65795326, -15.93625832, -16.87875938,
          -16.65612030, -15.87884331, -18.48575401, -19.30859756, -18.32105255]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.96428108,  0.72169495,  0.94250107, -0.05741501]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0730 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-27.01452446, -31.17614365, -24.06021309, -25.31211662, -23.70052147,
         -25.47224236, -25.36236954, -25.44280624, -27.95291138, -29.38704109]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [639]; unstable size 639; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 639] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 639] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 639] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 277] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.53353548,  4.77915478, -0.68763781,  0.12715691,  0.16958117,
          0.30826432,  0.61279368,  2.10399437,  3.39013529]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-27.01452446, -31.17614365, -24.06021309, -25.31211662, -23.70052147,
         -25.47224236, -25.36236954, -25.44280624, -27.95291138, -29.38704109]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-26.68703270, -30.86822891, -23.70858955, -25.04109001, -23.84642792,
          -25.24173546, -25.21504593, -25.60833549, -27.57862473, -29.10008049]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.13783836]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0500 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.88498878, -31.32757950, -31.15767288, -32.62705231, -31.05282402,
         -32.13772202, -32.09079361, -30.79269218, -31.35886765, -30.31673813]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [770]; unstable size 770; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 291, 1, 770] with unstable size 290 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 770] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 770] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [290]; unstable size 290; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 290] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 290] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78770685,  1.03243494,  1.96444607,  0.51057196,  1.33818650,
          1.22204280,  0.09968007,  0.93596232, -0.07644701]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.88498878, -31.32757950, -31.15767288, -32.62705231, -31.05282402,
         -32.13772202, -32.09079361, -30.79269218, -31.35886765, -30.31673813]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.09it/s]100%|██████████| 1/1 [00:00<00:00,  9.08it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-29.30589676, -31.02769279, -31.51187515, -32.71813583, -31.26396370,
          -32.18457031, -32.28963852, -30.93294144, -31.53766632, -30.01214409]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.70624733]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1126 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 23th iter
best_l after optimization: 8.50500202178955
alpha/beta optimization time: 0.2701742649078369
initial alpha-crown bounds: tensor([[8.78650665e-01, 1.08035851e+00, 2.04135466e+00, 5.90096951e-01,
         1.42439270e+00, 1.30015922e+00, 2.00367212e-01, 9.89597201e-01,
         2.45571136e-05]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 2.4557113647460938e-05
verified with init bound!
Result: safe-incomplete in 0.4317 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.17542076, -27.76688576, -22.42221451, -23.23637009, -22.93698311,
         -23.34073257, -23.85361671, -24.75134850, -25.51817131, -27.31844711]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [710]; unstable size 710; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 710] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 710] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 710] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 187] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.05221015,  3.04186678, -1.68551731, -1.26099980, -0.22333625,
          0.06938839,  0.46372649,  0.85233903,  2.67835474]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.17542076, -27.76688576, -22.42221451, -23.23637009, -22.93698311,
         -23.34073257, -23.85361671, -24.75134850, -25.51817131, -27.31844711]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.17541504, -27.76688766, -22.42221451, -23.23637199, -22.93698311,
          -23.34073448, -23.85361481, -24.75134277, -25.51817131, -27.31844521],
         [-24.17541504, -27.76688766, -22.42221451, -23.23637199, -22.93698311,
          -23.34073448, -23.85361481, -24.75134277, -25.51817131, -27.31844521]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.81415749, -0.29938889,  0.10436249]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]],


         [[[0.01111121, 0.07460327, 0.07460327,  ..., 0.09047628,
            0.07460327, 0.05873025],
           [0.07460327, 0.07460327, 0.15396833,  ..., 0.15396833,
            0.15396833, 0.15396833],
           [0.01111121, 0.15396833, 0.75714290,  ..., 0.18571436,
            0.16984135, 0.20158738],
           ...,
           [0.93174607, 0.61428577, 1.37619078,  ..., 1.20158756,
            1.12222254, 1.09047651],
           [0.99523818, 0.50317466, 1.02698421,  ..., 1.28095269,
            1.20158756, 1.15396857],
           [0.93174607, 0.64603180, 0.56666672,  ..., 1.28095269,
            1.21746063, 1.16984153]],

          [[0.30595824, 0.35426742, 0.38647354,  ..., 0.46698883,
            0.46698883, 0.45088577],
           [0.35426742, 0.30595824, 0.33816436,  ..., 0.54750413,
            0.54750413, 0.56360716],
           [0.33816436, 0.40257660, 0.90177143,  ..., 0.57971025,
            0.56360716, 0.59581327],
           ...,
           [0.99838978, 0.62801939, 1.38486338,  ..., 1.33655429,
            1.25603890, 1.20772982],
           [1.07890511, 0.49919492, 1.01449287,  ..., 1.40096653,
            1.33655429, 1.27214205],
           [1.01449287, 0.64412248, 0.54750413,  ..., 1.41706955,
            1.33655429, 1.28824508]],

          [[0.30134949, 0.33133450, 0.34632701,  ..., 0.39130452,
            0.39130452, 0.39130452],
           [0.34632701, 0.28635699, 0.30134949,  ..., 0.46626705,
            0.46626705, 0.48125952],
           [0.28635699, 0.36131951, 0.81109464,  ..., 0.49625200,
            0.48125952, 0.52623707],
           ...,
           [1.08095968, 0.69115460, 1.38081002,  ..., 1.32084000,
            1.27586246, 1.24587750],
           [1.14092970, 0.58620709, 1.03598225,  ..., 1.39580250,
            1.35082495, 1.33583248],
           [1.06596720, 0.73613209, 0.64617711,  ..., 1.42578757,
            1.39580250, 1.35082495]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0399 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-45.55731201, -50.89083099, -42.06116486, -47.85534668, -48.62054062,
         -48.15819550, -49.32711411, -47.74969101, -49.46615982, -52.86323929]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [518]; unstable size 518; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 116, 1, 518] with unstable size 115 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 3, 1, 518] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 518] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [115]; unstable size 115; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 3, 1, 115] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 115] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.03215981, 7.96402073, 5.21769333, 5.94199753, 5.50237179, 6.70993805,
         5.09641886, 6.72968769, 9.94023323]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0396 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-28.28612328, -36.58068848, -28.50667953, -31.36640739, -29.10656929,
         -32.13262939, -33.39686966, -30.94572258, -36.68356323, -37.42233658]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [770]; unstable size 770; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 770] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 770] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 770] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 149] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.97211361, -0.64362013,  1.92279077, -0.18267322,  2.60485053,
          3.75918317,  1.37062311,  7.21187735,  7.83291054]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-28.28612328, -36.58068848, -28.50667953, -31.36640739, -29.10656929,
         -32.13262939, -33.39686966, -30.94572258, -36.68356323, -37.42233658]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-28.54264641, -36.73462677, -28.27592087, -31.21742058, -28.90563011,
          -31.94429970, -33.19551468, -30.80367088, -36.82108307, -37.53708267],
         [-28.54264641, -36.73462677, -28.27592087, -31.21742058, -28.90563011,
          -31.94429970, -33.19551468, -30.80367088, -36.82108307, -37.53708267]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26672554,  0.36298370]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0433 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-22.31065178, -29.77011871, -24.73226166, -28.38901711, -26.21283531,
         -28.98853493, -28.51242447, -30.11011124, -25.90357208, -30.21725655]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [606]; unstable size 606; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 606] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 606] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 606] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 204] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.38776445, 1.62000215, 4.98641109, 2.86554313, 5.48513174, 5.11340523,
         6.28316832, 2.58398366, 6.84431124]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0306 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.24666405, -28.76270676, -23.26070213, -22.05362892, -20.50691032,
         -21.35376549, -23.01077271, -17.43795013, -27.58108521, -26.06879044]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 274, 1, 599] with unstable size 273 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 599] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [273]; unstable size 273; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 273] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 273] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.87904978, 8.74207592, 3.91814947, 3.03320646, 2.01956129, 2.34560633,
         3.41726947, 7.67006588, 6.18134117]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0354 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
         -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [694]; unstable size 694; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 694] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 694] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 694] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 259] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.01481509,  2.06576967, -0.04681468,  1.60054731, -0.07306194,
          1.60960841,  2.27459693,  1.25393069,  2.08621788]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
         -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.92it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-17.10665894, -18.15736580, -14.30402184, -16.10336876, -14.55302238,
          -16.18386459, -13.99254227, -17.08933067, -16.75724792, -17.95055962],
         [-17.10665894, -18.15736580, -14.30402184, -16.10336876, -14.55302238,
          -16.18386459, -13.99254227, -17.08933067, -16.75724792, -17.95055962]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31147957, 0.56048012]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1149 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.356432914733887
alpha/beta optimization time: 1.1215262413024902
initial alpha-crown bounds: tensor([[ 2.11682558,  2.15421200, -0.00883794,  1.63260901, -0.03195834,
          1.64549232,  2.32464290,  1.34506524,  2.17838240]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.03195834159851074
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.73562240600586
Verifying property 0 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.116825580596924.

Properties batch 1, size 1
Remaining timeout: 198.58827590942383
Verifying property 1 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.15421199798584.

Properties batch 2, size 1
Remaining timeout: 198.4836928844452
Verifying property 2 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.00883794]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
        -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.00883794]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 694
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 964
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 12] 
split level 2: [/input-12, 61] 
split level 3: [/input-8, 1635] 
split level 4: [/input-12, 92] 
split level 5: [/input-8, 924] 
split level 6: [/input-12, 50] 
split level 7: [/input-8, 1963] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.4345855712890625e-05
Time: prepare 0.0030    bound 0.0039    transfer 0.0010    finalize 0.0017    func 0.0097    
Accumulated time: func 0.0097    prepare 0.0035    bound 0.0039    transfer 0.0010    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0225    set_bounds 0.0172    solve 0.0098    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0225    set_bounds 0.0172    solve 0.0098    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05960988998413086


Properties batch 3, size 1
Remaining timeout: 198.25883722305298
Verifying property 3 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6326090097427368.

Properties batch 4, size 1
Remaining timeout: 198.15061783790588
Verifying property 4 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03195834]], device='cuda:0') need to verify.
Model prediction is: tensor([-17.61829376, -18.38642883, -14.96894455, -16.51321602, -15.02400494,
        -16.66117096, -14.13184452, -17.61631203, -17.11466599, -18.21944618],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03195834]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 694
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 257
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 964
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 46] 
split level 1: [/input-12, 50] 
split level 2: [/input-12, 61] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 92] 
split level 6: [/input-8, 300] 
split level 7: [/input-8, 924] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.3392181396484375e-05
Time: prepare 0.0031    bound 0.0060    transfer 0.0009    finalize 0.0022    func 0.0121    
Accumulated time: func 0.0121    prepare 0.0035    bound 0.0060    transfer 0.0009    finalize 0.0022    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0230    set_bounds 0.0174    solve 0.0122    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0230    set_bounds 0.0174    solve 0.0122    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05760693550109863


Properties batch 5, size 1
Remaining timeout: 197.93945026397705
Verifying property 5 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6454923152923584.

Properties batch 6, size 1
Remaining timeout: 197.83306646347046
Verifying property 6 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3246428966522217.

Properties batch 7, size 1
Remaining timeout: 197.7259166240692
Verifying property 7 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3450652360916138.

Properties batch 8, size 1
Remaining timeout: 197.62331366539001
Verifying property 8 with 1 instances.
##### Instance 181 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.178382396697998.
Result: safe in 2.4795 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-39.90199280, -44.40210342, -40.76707840, -43.34727097, -43.50157547,
         -44.47279358, -43.63641739, -44.64598465, -42.91106033, -44.25598907]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [505]; unstable size 505; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 505] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 505] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 505] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 148] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.55335236, 0.12430644, 2.72152352, 3.00824618, 3.66845274, 2.93544912,
         3.93169451, 2.25763464, 3.53325558]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0558 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.65114021, -23.35434914, -17.16299438, -18.00729561, -16.22119331,
         -18.46559906, -16.77936554, -19.72109604, -21.88067436, -23.28927422]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 507, 1, 818] with unstable size 506 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 29, 1, 818] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [506]; unstable size 506; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 29, 1, 506] with unstable size 28 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 506] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [28]; unstable size 28; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 28] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.09171414,  3.97727108, -0.48304802,  0.36927634,  0.67224574,
         -1.08889961,  1.76183915,  2.47835660,  4.03331804]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.65114021, -23.35434914, -17.16299438, -18.00729561, -16.22119331,
         -18.46559906, -16.77936554, -19.72109604, -21.88067436, -23.28927422]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.52699089, -24.13881493, -17.97516441, -18.83475685, -17.27757835,
          -19.32626915, -17.26466370, -20.90072250, -22.71590424, -24.12178040],
         [-21.52699089, -24.13881493, -17.97516441, -18.83475685, -17.27757835,
          -19.32626915, -17.26466370, -20.90072250, -22.71590424, -24.12178040]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.69758606, -0.01291466]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0062 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.96131706, -20.58467484, -24.37945938, -24.98764610, -24.46944046,
         -25.62986183, -27.33307266, -24.34143448, -19.32966995, -19.06360817]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [585]; unstable size 585; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 585] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 585] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 585] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 203] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81747198,  0.87446868,  3.82560635,  4.56164455,  3.79659176,
          5.13660049,  6.65209436,  3.81942272, -1.01505280]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.96131706, -20.58467484, -24.37945938, -24.98764610, -24.46944046,
         -25.62986183, -27.33307266, -24.34143448, -19.32966995, -19.06360817]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.07253075, -20.96897125, -24.48687744, -25.10561180, -24.55494499,
          -25.78580666, -27.47519875, -24.59646225, -19.11740875, -19.64290428]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.52549553]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0703 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
         -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 234, 1, 650] with unstable size 233 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 650] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [233]; unstable size 233; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 233] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 233] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.41751957,  0.11601001,  0.06584787,  0.44963503, -0.42950106,
          0.86466169, -0.55640650,  0.24044418,  2.07411814]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
         -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.89it/s]100%|██████████| 1/1 [00:00<00:00,  8.88it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.83787632, -12.90878677, -13.31283855, -13.55456448, -12.88510323,
          -14.10630894, -12.37308025, -13.75913048, -15.46708488, -12.04697514],
         [-15.83787632, -12.90878677, -13.31283855, -13.55456448, -12.88510323,
          -14.10630894, -12.37308025, -13.75913048, -15.46708488, -12.04697514]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.83812809, 0.32610512]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1153 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.90281343460083
alpha/beta optimization time: 1.130171298980713
initial alpha-crown bounds: tensor([[ 2.50665331,  0.15565413,  0.15051460,  0.50773621, -0.35287428,
          0.92790365, -0.47352791,  0.32139540,  2.15935850]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4735279083251953
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.7091383934021
Verifying property 0 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.506653308868408.

Properties batch 1, size 1
Remaining timeout: 198.5752079486847
Verifying property 1 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.15565413236618042.

Properties batch 2, size 1
Remaining timeout: 198.47166872024536
Verifying property 2 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.1505146026611328.

Properties batch 3, size 1
Remaining timeout: 198.36878085136414
Verifying property 3 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5077362060546875.

Properties batch 4, size 1
Remaining timeout: 198.26528120040894
Verifying property 4 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35287428]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
        -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35287428]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 899
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 13] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 69] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 38] 
split level 7: [/input-12, 79] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.1484832763671875e-05
Time: prepare 0.0017    bound 0.0039    transfer 0.0009    finalize 0.0016    func 0.0082    
Accumulated time: func 0.0082    prepare 0.0022    bound 0.0039    transfer 0.0009    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0166    solve 0.0083    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0225    set_bounds 0.0166    solve 0.0083    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.051738739013671875


Properties batch 5, size 1
Remaining timeout: 198.07770609855652
Verifying property 5 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9279036521911621.

Properties batch 6, size 1
Remaining timeout: 197.97153854370117
Verifying property 6 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.47352791]], device='cuda:0') need to verify.
Model prediction is: tensor([-16.26067162, -13.01693153, -13.98059750, -14.13839722, -13.50657654,
        -14.73349571, -13.24168968, -14.22063255, -15.82023048, -12.07003784],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.47352791]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 650
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 24
-----------------
# of unstable neurons: 899
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 64] 
split level 1: [/input-12, 0] 
split level 2: [/input-12, 38] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 13] 
split level 5: [/input-12, 2] 
split level 6: [/input-12, 12] 
split level 7: [/input-12, 90] 
pruning_in_iteration open status: True
ratio of positive domain = 252 / 256 = 0.984375
pruning-in-iteration extra time: 0.004549503326416016
Time: prepare 0.0018    bound 0.1270    transfer 0.0009    finalize 0.0014    func 0.1311    
Accumulated time: func 0.1311    prepare 0.0022    bound 0.1270    transfer 0.0009    finalize 0.0014    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03852 (8), -0.02850 (8), -0.00513 (8), -0.00417 (8), 
Length of domains: 4
Time: pickout 0.0003    decision 0.0227    set_bounds 0.0165    solve 0.1312    add 0.0007    
Accumulated time: pickout 0.0003    decision 0.0227    set_bounds 0.0165    solve 0.1312    add 0.0007    
Current (lb-rhs): -0.038518428802490234
4 domains visited
Cumulative time: 0.17554116249084473

BaB round 2
batch: 4
splitting decisions: 
split level 0: [/input-12, 46] [/input-12, 46] [/input-12, 46] [/input-12, 46] 
split level 1: [/input-12, 69] [/input-12, 69] [/input-12, 69] [/input-12, 69] 
split level 2: [/input-12, 79] [/input-12, 79] [/input-12, 79] [/input-8, 1966] 
split level 3: [/input-12, 6] [/input-12, 6] [/input-8, 1693] [/input-12, 79] 
split level 4: [/input-12, 34] [/input-12, 34] [/input-12, 34] [/input-12, 6] 
split level 5: [/input-8, 1698] [/input-8, 1698] [/input-12, 6] [/input-12, 34] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.1484832763671875e-05
Time: prepare 0.0051    bound 0.0038    transfer 0.0007    finalize 0.0015    func 0.0112    
Accumulated time: func 0.1423    prepare 0.0076    bound 0.1308    transfer 0.0016    finalize 0.0029    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0173    set_bounds 0.0152    solve 0.0112    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0400    set_bounds 0.0316    solve 0.1424    add 0.0008    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
4 domains visited
Cumulative time: 0.22094249725341797


Properties batch 7, size 1
Remaining timeout: 197.58997988700867
Verifying property 7 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3213953971862793.

Properties batch 8, size 1
Remaining timeout: 197.48019433021545
Verifying property 8 with 1 instances.
##### Instance 185 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.159358501434326.
Result: safe in 2.6241 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.58661270, -19.23237419, -17.80228806, -19.64345360, -18.73787880,
         -20.88980293, -20.24271202, -20.68834686, -12.61566162, -18.87177277]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 600] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 600] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 197] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.94333243, 5.41133118, 3.87400508, 5.60846663, 4.71442032, 6.68207455,
         6.00083208, 6.36807251, 5.18235636]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0505 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
         -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1008]; unstable size 1008; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 327, 1, 1008] with unstable size 326 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 1008] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1008] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [326]; unstable size 326; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 326] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 326] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10357320,  2.68191552, -0.13346767, -0.21289110, -0.43652701,
          0.26639295,  0.25994730,  0.99712384,  1.33664036]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
         -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.67it/s]100%|██████████| 1/1 [00:00<00:00,  8.66it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.90251732, -26.33744431, -23.53162193, -23.43214035, -23.35580063,
          -24.08613586, -24.26792908, -25.13724709, -22.15360260, -24.83103943],
         [-22.90251732, -26.33744431, -23.53162193, -23.43214035, -23.35580063,
          -24.08613586, -24.26792908, -25.13724709, -22.15360260, -24.83103943]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.74891472, 1.37801933, 1.27853775, 1.20219803]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1183 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 5.630870819091797
alpha/beta optimization time: 1.1286931037902832
initial alpha-crown bounds: tensor([[-0.02824771,  2.79288411, -0.02321959, -0.12002301, -0.32431316,
          0.37612772,  0.35790396,  1.15994835,  1.43981028]], device='cuda:0')
Number of class (without rhs): 4 ; Worst class: (+ rhs) -0.3243131637573242
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.68575501441956
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02824771]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02824771]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 32] 
split level 1: [/input-12, 69] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 2] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 89] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.363059997558594e-05
Time: prepare 0.0018    bound 0.0038    transfer 0.0007    finalize 0.0015    func 0.0079    
Accumulated time: func 0.0079    prepare 0.0023    bound 0.0038    transfer 0.0007    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0221    set_bounds 0.0160    solve 0.0080    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0221    set_bounds 0.0160    solve 0.0080    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.050440073013305664


Properties batch 1, size 1
Remaining timeout: 198.46543860435486
Verifying property 1 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.792884111404419.

Properties batch 2, size 1
Remaining timeout: 198.3598461151123
Verifying property 2 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02321959]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02321959]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 32] 
split level 5: [/input-12, 12] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 79] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.076957702636719e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0007    finalize 0.0015    func 0.0080    
Accumulated time: func 0.0080    prepare 0.0023    bound 0.0039    transfer 0.0007    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0225    set_bounds 0.0162    solve 0.0080    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0225    set_bounds 0.0162    solve 0.0080    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05134081840515137


Properties batch 3, size 1
Remaining timeout: 198.1458122730255
Verifying property 3 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12002301]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12002301]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 67] 
split level 5: [/input-12, 79] 
split level 6: [/input-12, 59] 
split level 7: [/input-12, 46] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.100799560546875e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0008    finalize 0.0015    func 0.0080    
Accumulated time: func 0.0080    prepare 0.0022    bound 0.0039    transfer 0.0008    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0221    set_bounds 0.0159    solve 0.0081    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0221    set_bounds 0.0159    solve 0.0081    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05028986930847168


Properties batch 4, size 1
Remaining timeout: 197.95819187164307
Verifying property 4 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32431316]], device='cuda:0') need to verify.
Model prediction is: tensor([-23.04545403, -26.20975113, -23.74771309, -23.44443512, -23.54808426,
        -24.14472198, -24.38294220, -25.31268120, -21.74912643, -24.68721199],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32431316]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 1008
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 315
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1349
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 2] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 53] 
split level 6: [/input-12, 79] 
split level 7: [/input-12, 67] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.863739013671875e-05
Time: prepare 0.0018    bound 0.0048    transfer 0.0008    finalize 0.0019    func 0.0093    
Accumulated time: func 0.0093    prepare 0.0023    bound 0.0048    transfer 0.0008    finalize 0.0019    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0222    set_bounds 0.0162    solve 0.0093    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0222    set_bounds 0.0162    solve 0.0093    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05220508575439453


Properties batch 5, size 1
Remaining timeout: 197.76113438606262
Verifying property 5 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3761277198791504.

Properties batch 6, size 1
Remaining timeout: 197.65504813194275
Verifying property 6 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.35790395736694336.

Properties batch 7, size 1
Remaining timeout: 197.55183959007263
Verifying property 7 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1599483489990234.

Properties batch 8, size 1
Remaining timeout: 197.44918727874756
Verifying property 8 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4398102760314941.
Result: safe in 2.6537 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.53459740, -20.49768829, -16.34491158, -18.79847145, -17.40628815,
         -19.14499092, -17.82529068, -20.38037872, -18.29029465, -19.59790993]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 480] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 480] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 238] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.72171766,  2.40926933,  1.62155724,  0.22273873,  1.79393649,
          0.73343110,  2.65353632,  0.41378766,  1.72563505]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-16.53459740, -20.49768829, -16.34491158, -18.79847145, -17.40628815,
         -19.14499092, -17.82529068, -20.38037872, -18.29029465, -19.59790993]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-16.48662758, -20.62913132, -16.81054306, -19.12439919, -17.79170799,
          -19.52311707, -18.19662857, -20.78978157, -18.31701279, -19.74012566]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.32391548]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0595 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
         -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [516]; unstable size 516; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 516] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 516] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 516] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 215] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.92542017,  3.79097652, -0.20490730,  0.89167619,  1.22881341,
         -0.10279584,  2.61780810,  4.21574497,  3.57154131]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
         -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.78it/s]100%|██████████| 1/1 [00:00<00:00,  8.78it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.15584469, -17.83042526, -12.47017097, -14.04410172, -12.16684818,
          -14.42788124, -13.11213207, -15.65166855, -18.07901192, -17.04457092],
         [-15.15584469, -17.83042526, -12.47017097, -14.04410172, -12.16684818,
          -14.42788124, -13.11213207, -15.65166855, -18.07901192, -17.04457092]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.30332279, 0.94528389]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1167 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.44194984436035
alpha/beta optimization time: 1.1384809017181396
initial alpha-crown bounds: tensor([[ 1.97218466,  3.86037683, -0.17338085,  0.95068455,  1.30200791,
         -0.04648691,  2.66390991,  4.29102325,  3.62163067]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.17338085174560547
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6869513988495
Verifying property 0 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.972184658050537.

Properties batch 1, size 1
Remaining timeout: 198.55251955986023
Verifying property 1 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8603768348693848.

Properties batch 2, size 1
Remaining timeout: 198.44784426689148
Verifying property 2 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17338085]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
        -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17338085]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 516
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 211
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 750
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 53] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 69] 
split level 4: [/input-12, 12] 
split level 5: [/input-12, 18] 
split level 6: [/input-12, 49] 
split level 7: [/input-12, 38] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.38690185546875e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0007    finalize 0.0016    func 0.0081    
Accumulated time: func 0.0081    prepare 0.0022    bound 0.0039    transfer 0.0007    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0220    set_bounds 0.0162    solve 0.0081    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0220    set_bounds 0.0162    solve 0.0081    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05103254318237305


Properties batch 3, size 1
Remaining timeout: 198.25410771369934
Verifying property 3 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9506845474243164.

Properties batch 4, size 1
Remaining timeout: 198.14884996414185
Verifying property 4 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3020079135894775.

Properties batch 5, size 1
Remaining timeout: 198.04628562927246
Verifying property 5 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04648691]], device='cuda:0') need to verify.
Model prediction is: tensor([-15.10610676, -17.76342773, -12.52653217, -13.96433544, -11.74744606,
        -14.36178112, -12.99651241, -15.44241428, -18.03474236, -17.01032066],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04648691]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 516
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 211
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 750
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 49] 
split level 1: [/input-12, 42] 
split level 2: [/input-12, 18] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 78] 
split level 5: [/input-12, 38] 
split level 6: [/input-12, 53] 
split level 7: [/input-12, 57] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.00543212890625e-05
Time: prepare 0.0018    bound 0.0039    transfer 0.0009    finalize 0.0016    func 0.0082    
Accumulated time: func 0.0082    prepare 0.0022    bound 0.0039    transfer 0.0009    finalize 0.0016    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0223    set_bounds 0.0164    solve 0.0082    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0223    set_bounds 0.0164    solve 0.0082    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.051236867904663086


Properties batch 6, size 1
Remaining timeout: 197.83396005630493
Verifying property 6 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.663909912109375.

Properties batch 7, size 1
Remaining timeout: 197.72858119010925
Verifying property 7 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.291023254394531.

Properties batch 8, size 1
Remaining timeout: 197.6258988380432
Verifying property 8 with 1 instances.
##### Instance 189 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6216306686401367.
Result: safe in 2.4766 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.31871891, -18.47064972, -19.12639618, -20.47543144, -18.57441521,
         -21.48938560, -20.72224808, -20.14287567, -13.06752682, -17.90552711]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [738]; unstable size 738; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 738] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 738] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 738] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 239] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.85416609, 3.53390455, 4.32532692, 5.85610437, 3.81353569, 6.73792982,
         5.85598993, 5.13794994, 3.02939796]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0603 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
         -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 646] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 646] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 297] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.24239588,  5.63601112,  0.64621520, -0.16879261, -0.18126956,
          1.30519724,  1.09948564,  4.69383430,  5.11891747]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
         -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.73it/s]100%|██████████| 1/1 [00:00<00:00,  8.72it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-24.64265060, -26.67287445, -20.56673622, -18.70374489, -19.68147850,
          -18.73836899, -21.39741135, -21.13756561, -25.31505966, -26.03724861],
         [-24.64265060, -26.67287445, -20.56673622, -18.70374489, -19.68147850,
          -18.73836899, -21.39741135, -21.13756561, -25.31505966, -26.03724861]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.97773361, 0.03462410]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1174 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 23.097370147705078
alpha/beta optimization time: 1.1318514347076416
initial alpha-crown bounds: tensor([[ 4.31553078,  5.74813271,  0.69852757, -0.09507668, -0.16205463,
          1.35331500,  1.20960534,  4.79450607,  5.23488522]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.1620546281337738
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.70422673225403
Verifying property 0 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.315530776977539.

Properties batch 1, size 1
Remaining timeout: 198.5706911087036
Verifying property 1 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.748132705688477.

Properties batch 2, size 1
Remaining timeout: 198.46759629249573
Verifying property 2 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6985275745391846.

Properties batch 3, size 1
Remaining timeout: 198.36494040489197
Verifying property 3 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.09507668]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
        -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.09507668]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 960
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 59] 
split level 1: [/input-12, 4] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 56] 
split level 4: [/input-12, 97] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 83] 
split level 7: [/input-12, 79] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.1961669921875e-05
Time: prepare 0.0018    bound 0.0040    transfer 0.0008    finalize 0.0017    func 0.0083    
Accumulated time: func 0.0083    prepare 0.0022    bound 0.0040    transfer 0.0008    finalize 0.0017    
all_split False
Length of domains: 0
Time: pickout 0.0003    decision 0.0224    set_bounds 0.0163    solve 0.0084    add 0.0001    
Accumulated time: pickout 0.0003    decision 0.0224    set_bounds 0.0163    solve 0.0084    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.05150628089904785


Properties batch 4, size 1
Remaining timeout: 198.19317531585693
Verifying property 4 with 1 instances.
##### Instance 191 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16205463]], device='cuda:0') need to verify.
Model prediction is: tensor([-24.47589493, -26.35393333, -20.38714218, -18.54223824, -19.56955147,
        -18.76048660, -21.12660980, -21.15067482, -25.07092285, -25.82291603],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16205463]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 293
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 960
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 68] 
split level 1: [/input-12, 2] 
split level 2: [/input-12, 10] 
split level 3: [/input-12, 8] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 97] 
split level 6: [/input-12, 17] 
split level 7: [/input-8, 868] 
pruning_in_iteration open status: True
ratio of positive domain = 228 / 256 = 0.890625
pruning-in-iteration extra time: 0.04704880714416504
Time: prepare 0.0030    bound 0.3667    transfer 0.0009    finalize 0.0015    func 0.3723    
Accumulated time: func 0.3723    prepare 0.0035    bound 0.3667    transfer 0.0009    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07009 (8), -0.06937 (8), -0.06603 (8), -0.06577 (8), -0.06351 (8), -0.06287 (8), -0.05986 (8), -0.05899 (8), -0.05829 (8), -0.05374 (8), -0.05323 (8), -0.04902 (8), -0.04466 (8), -0.04156 (8), -0.04033 (8), -0.03734 (8), -0.02156 (8), -0.01919 (8), -0.01829 (8), -0.01710 (8), 
Length of domains: 28
Time: pickout 0.0003    decision 0.0220    set_bounds 0.0173    solve 0.3723    add 0.0012    
Accumulated time: pickout 0.0003    decision 0.0220    set_bounds 0.0173    solve 0.3723    add 0.0012    
Current (lb-rhs): -0.07008664309978485
28 domains visited
Cumulative time: 0.4178891181945801

BaB round 2
batch: 28
splitting decisions: 
split level 0: [/input-8, 909] [/input-8, 1052] [/input-8, 860] [/input-8, 869] [/input-8, 1052] [/input-8, 860] [/input-8, 909] [/input-8, 860] [/input-8, 909] [/input-8, 860] 
split level 1: [/input-8, 869] [/input-8, 869] [/input-8, 1052] [/input-8, 1052] [/input-8, 869] [/input-8, 1052] [/input-8, 869] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] 
split level 2: [/input-8, 1052] [/input-8, 860] [/input-8, 1748] [/input-8, 860] [/input-8, 860] [/input-8, 861] [/input-8, 1052] [/input-8, 861] [/input-8, 869] [/input-8, 861] 
pruning_in_iteration open status: False
ratio of positive domain = 32 / 224 = 0.1428571428571429
pruning-in-iteration extra time: 4.9591064453125e-05
Time: prepare 0.0043    bound 0.0922    transfer 0.0023    finalize 0.0011    func 0.1000    
Accumulated time: func 0.4723    prepare 0.0079    bound 0.4590    transfer 0.0032    finalize 0.0027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06049 (11), -0.06041 (11), -0.06002 (11), -0.05931 (11), -0.05704 (11), -0.05699 (11), -0.05691 (11), -0.05623 (11), -0.05592 (11), -0.05577 (11), -0.05529 (11), -0.05489 (11), -0.05484 (11), -0.05469 (11), -0.05437 (11), -0.05423 (11), -0.05406 (11), -0.05369 (11), -0.05330 (11), -0.05327 (11), 
Length of domains: 192
Time: pickout 0.0013    decision 0.0184    set_bounds 0.0075    solve 0.1001    add 0.0013    
Accumulated time: pickout 0.0016    decision 0.0405    set_bounds 0.0248    solve 0.4724    add 0.0026    
Current (lb-rhs): -0.06048627197742462
220 domains visited
Cumulative time: 0.5468270778656006

BaB round 3
batch: 192
splitting decisions: 
split level 0: [/input-8, 908] [/input-8, 908] [/input-8, 20] [/input-8, 20] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 908] [/input-8, 908] 
pruning_in_iteration open status: False
ratio of positive domain = 64 / 384 = 0.16666666666666663
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.0076    bound 0.0974    transfer 0.0035    finalize 0.0031    func 0.1117    
Accumulated time: func 0.5840    prepare 0.0156    bound 0.5564    transfer 0.0068    finalize 0.0058    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05889 (12), -0.05883 (12), -0.05839 (12), -0.05771 (12), -0.05546 (12), -0.05544 (12), -0.05533 (12), -0.05467 (12), -0.05435 (12), -0.05419 (12), -0.05372 (12), -0.05314 (12), -0.05297 (12), -0.05288 (12), -0.05261 (12), -0.05250 (12), -0.05240 (12), -0.05176 (12), -0.05173 (12), -0.05154 (12), 
Length of domains: 317
Time: pickout 0.0031    decision 0.0355    set_bounds 0.0084    solve 0.1117    add 0.0025    
Accumulated time: pickout 0.0048    decision 0.0760    set_bounds 0.0332    solve 0.5842    add 0.0050    
Current (lb-rhs): -0.0588923916220665
537 domains visited
Cumulative time: 0.7086894512176514

BaB round 4
batch: 317
splitting decisions: 
split level 0: [/input-8, 20] [/input-8, 20] [/input-8, 908] [/input-8, 908] [/input-12, 56] [/input-8, 20] [/input-12, 56] [/input-8, 20] [/input-12, 56] [/input-8, 20] 
pruning_in_iteration open status: False
ratio of positive domain = 95 / 634 = 0.14984227129337535
pruning-in-iteration extra time: 5.340576171875e-05
Time: prepare 0.0126    bound 0.1080    transfer 0.0046    finalize 0.0048    func 0.1301    
Accumulated time: func 0.7141    prepare 0.0284    bound 0.6644    transfer 0.0114    finalize 0.0106    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05721 (13), -0.05717 (13), -0.05669 (13), -0.05605 (13), -0.05379 (13), -0.05378 (13), -0.05367 (13), -0.05301 (13), -0.05269 (13), -0.05256 (13), -0.05210 (13), -0.05152 (13), -0.05096 (13), -0.05089 (13), -0.05086 (13), -0.05081 (13), -0.05033 (13), -0.05013 (13), -0.04984 (13), -0.04963 (13), 
Length of domains: 534
Time: pickout 0.0044    decision 0.0328    set_bounds 0.0139    solve 0.1303    add 0.0063    
Accumulated time: pickout 0.0092    decision 0.1088    set_bounds 0.0472    solve 0.7144    add 0.0113    
Current (lb-rhs): -0.057211533188819885
1071 domains visited
Cumulative time: 0.8976256847381592

BaB round 5
batch: 534
splitting decisions: 
split level 0: [/input-8, 860] [/input-8, 909] [/input-8, 909] [/input-8, 909] [/input-8, 909] [/input-8, 860] [/input-8, 860] [/input-8, 909] [/input-12, 56] [/input-8, 860] 
pruning_in_iteration open status: False
ratio of positive domain = 158 / 1068 = 0.14794007490636707
pruning-in-iteration extra time: 5.173683166503906e-05
Time: prepare 0.0213    bound 0.1047    transfer 0.0032    finalize 0.0066    func 0.1367    
Accumulated time: func 0.8508    prepare 0.0499    bound 0.7692    transfer 0.0146    finalize 0.0172    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05535 (14), -0.05533 (14), -0.05337 (14), -0.05292 (14), -0.05268 (14), -0.05221 (14), -0.05192 (14), -0.05182 (14), -0.05083 (14), -0.05043 (14), -0.05025 (14), -0.04993 (14), -0.04965 (14), -0.04937 (14), -0.04909 (14), -0.04898 (14), -0.04896 (14), -0.04889 (14), -0.04845 (14), -0.04839 (14), 
Length of domains: 899
Time: pickout 0.0082    decision 0.0448    set_bounds 0.0230    solve 0.1369    add 0.0042    
Accumulated time: pickout 0.0174    decision 0.1536    set_bounds 0.0701    solve 0.8513    add 0.0156    
Current (lb-rhs): -0.055354468524456024
1970 domains visited
Cumulative time: 1.1163945198059082

BaB round 6
batch: 899
splitting decisions: 
split level 0: [/input-8, 877] [/input-8, 1252] [/input-8, 1932] [/input-8, 1932] [/input-8, 1252] [/input-8, 1252] [/input-8, 860] [/input-8, 1748] [/input-8, 877] [/input-8, 918] 
pruning_in_iteration open status: False
ratio of positive domain = 179 / 1798 = 0.09955506117908786
pruning-in-iteration extra time: 5.602836608886719e-05
Time: prepare 0.0352    bound 0.1242    transfer 0.0133    finalize 0.0111    func 0.1840    
Accumulated time: func 1.0348    prepare 0.0853    bound 0.8934    transfer 0.0279    finalize 0.0283    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05229 (15), -0.05222 (15), -0.05192 (15), -0.05179 (15), -0.05098 (15), -0.05049 (15), -0.05028 (15), -0.05004 (15), -0.04999 (15), -0.04954 (15), -0.04922 (15), -0.04889 (15), -0.04872 (15), -0.04858 (15), -0.04842 (15), -0.04815 (15), -0.04805 (15), -0.04792 (15), -0.04745 (15), -0.04730 (15), 
Length of domains: 1601
Time: pickout 0.0127    decision 0.0653    set_bounds 0.0381    solve 0.1843    add 0.0066    
Accumulated time: pickout 0.0302    decision 0.2189    set_bounds 0.1083    solve 1.0356    add 0.0222    
Current (lb-rhs): -0.05228757858276367
3571 domains visited
Cumulative time: 1.4259331226348877

BaB round 7
batch: 1601
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 918] [/input-12, 56] [/input-8, 918] [/input-12, 56] [/input-8, 1748] [/input-8, 877] [/input-12, 56] [/input-8, 1748] [/input-8, 1252] 
pruning_in_iteration open status: False
ratio of positive domain = 578 / 3202 = 0.1805121798875703
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0646    bound 0.1762    transfer 0.0192    finalize 0.0190    func 0.2804    
Accumulated time: func 1.3152    prepare 0.1501    bound 1.0696    transfer 0.0471    finalize 0.0473    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05022 (16), -0.05015 (16), -0.04966 (16), -0.04946 (16), -0.04936 (16), -0.04905 (16), -0.04890 (16), -0.04883 (16), -0.04865 (16), -0.04864 (16), -0.04837 (16), -0.04833 (16), -0.04829 (16), -0.04768 (16), -0.04756 (16), -0.04711 (16), -0.04698 (16), -0.04672 (16), -0.04667 (16), -0.04656 (16), 
Length of domains: 2570
Time: pickout 0.0254    decision 0.1038    set_bounds 0.1886    solve 0.2810    add 0.0183    
Accumulated time: pickout 0.0556    decision 0.3227    set_bounds 0.2969    solve 1.3166    add 0.0404    
Current (lb-rhs): -0.05021623522043228
6141 domains visited
Cumulative time: 2.048814535140991

BaB round 8
batch: 2570
splitting decisions: 
split level 0: [/input-8, 1252] [/input-8, 877] [/input-8, 1363] [/input-12, 56] [/input-8, 877] [/input-12, 56] [/input-8, 1748] [/input-8, 938] [/input-8, 1252] [/input-8, 1932] 
pruning_in_iteration open status: True
ratio of positive domain = 2043 / 5140 = 0.3974708171206226
pruning-in-iteration extra time: 0.0046002864837646484
Time: prepare 0.1049    bound 0.3312    transfer 0.0351    finalize 0.0298    func 0.6582    
Accumulated time: func 1.9734    prepare 0.2553    bound 1.4009    transfer 0.0822    finalize 0.0772    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04810 (17), -0.04761 (17), -0.04760 (17), -0.04752 (17), -0.04740 (17), -0.04724 (17), -0.04702 (17), -0.04688 (17), -0.04685 (17), -0.04681 (17), -0.04657 (17), -0.04651 (17), -0.04651 (17), -0.04643 (17), -0.04640 (17), -0.04625 (17), -0.04623 (17), -0.04607 (17), -0.04607 (17), -0.04573 (17), 
Length of domains: 3097
Time: pickout 0.0340    decision 0.1567    set_bounds 0.1065    solve 0.6592    add 0.0107    
Accumulated time: pickout 0.0895    decision 0.4794    set_bounds 0.4033    solve 1.9759    add 0.0511    
Current (lb-rhs): -0.04809916764497757
9238 domains visited
Cumulative time: 3.029195547103882

BaB round 9
batch: 3097
splitting decisions: 
split level 0: [/input-12, 56] [/input-8, 877] [/input-8, 26] [/input-8, 1748] [/input-8, 877] [/input-8, 26] [/input-8, 26] [/input-12, 56] [/input-8, 918] [/input-8, 26] 
pruning_in_iteration open status: False
ratio of positive domain = 842 / 6194 = 0.13593800452050375
pruning-in-iteration extra time: 6.4849853515625e-05
Time: prepare 0.1242    bound 0.2926    transfer 0.0328    finalize 0.0353    func 0.4864    
Accumulated time: func 2.4598    prepare 0.3797    bound 1.6935    transfer 0.1150    finalize 0.1125    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04645 (18), -0.04596 (18), -0.04595 (18), -0.04580 (18), -0.04575 (18), -0.04557 (18), -0.04530 (18), -0.04522 (18), -0.04521 (18), -0.04509 (18), -0.04491 (18), -0.04481 (18), -0.04478 (18), -0.04476 (18), -0.04476 (18), -0.04459 (18), -0.04457 (18), -0.04439 (18), -0.04434 (18), -0.04402 (18), 
Length of domains: 5279
Time: pickout 0.0430    decision 0.1854    set_bounds 0.1328    solve 0.4877    add 0.0193    
Accumulated time: pickout 0.1326    decision 0.6648    set_bounds 0.5361    solve 2.4635    add 0.0704    
Current (lb-rhs): -0.04644666612148285
14517 domains visited
Cumulative time: 3.906710624694824

BaB round 10
batch: 4096
splitting decisions: 
split level 0: [/input-8, 877] [/input-8, 1748] [/input-12, 56] [/input-12, 56] [/input-8, 26] [/input-8, 1061] [/input-8, 877] [/input-8, 1076] [/input-8, 918] [/input-8, 877] 
pruning_in_iteration open status: False
ratio of positive domain = 1161 / 8192 = 0.1417236328125
pruning-in-iteration extra time: 6.031990051269531e-05
Time: prepare 0.1706    bound 0.3628    transfer 0.0767    finalize 0.1980    func 0.8092    
Accumulated time: func 3.2690    prepare 0.5505    bound 2.0563    transfer 0.1917    finalize 0.3105    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04580 (18), -0.04530 (18), -0.04522 (18), -0.04509 (18), -0.04483 (19), -0.04481 (18), -0.04478 (18), -0.04476 (18), -0.04476 (18), -0.04459 (18), -0.04435 (19), -0.04434 (19), -0.04434 (18), -0.04414 (19), -0.04402 (18), -0.04397 (19), -0.04358 (19), -0.04337 (18), -0.04330 (19), -0.04296 (19), 
Length of domains: 8148
Time: pickout 0.0570    decision 0.3809    set_bounds 0.1849    solve 0.8107    add 0.0290    
Accumulated time: pickout 0.1896    decision 1.0457    set_bounds 0.7210    solve 3.2742    add 0.0994    
Current (lb-rhs): -0.04579553008079529
21482 domains visited
current_vram/total_varm: 11.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.3875203132629395

BaB round 11
batch: 8148
splitting decisions: 
split level 0: [/input-8, 1061] [/input-8, 1363] [/input-8, 1061] [/input-8, 1061] [/input-8, 1076] [/input-8, 1252] [/input-8, 918] [/input-8, 26] [/input-8, 938] [/input-8, 918] 
pruning_in_iteration open status: False
ratio of positive domain = 2207 / 16296 = 0.13543200785468823
pruning-in-iteration extra time: 0.0001201629638671875
Time: prepare 0.3312    bound 0.6807    transfer 0.1830    finalize 0.2657    func 1.4621    
Accumulated time: func 4.7311    prepare 0.8820    bound 2.7370    transfer 0.3747    finalize 0.5762    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04415 (19), -0.04362 (19), -0.04338 (20), -0.04317 (19), -0.04315 (19), -0.04298 (19), -0.04292 (19), -0.04287 (20), -0.04284 (20), -0.04271 (19), -0.04261 (20), -0.04249 (20), -0.04244 (19), -0.04213 (20), -0.04207 (19), -0.04204 (19), -0.04202 (19), -0.04185 (19), -0.04170 (19), -0.04167 (19), 
Length of domains: 13959
Time: pickout 0.1155    decision 0.4703    set_bounds 0.5269    solve 1.4654    add 0.0529    
Accumulated time: pickout 0.3050    decision 1.5160    set_bounds 1.2479    solve 4.7396    add 0.1523    
Current (lb-rhs): -0.044145286083221436
35441 domains visited
Cumulative time: 8.055208206176758

BaB round 12
batch: 8192
splitting decisions: 
split level 0: [/input-8, 877] [/input-8, 1076] [/input-8, 26] [/input-8, 1932] [/input-8, 877] [/input-8, 861] [/input-8, 1076] [/input-8, 26] [/input-8, 1932] [/input-8, 1061] 
pruning_in_iteration open status: False
ratio of positive domain = 2301 / 16384 = 0.14044189453125
pruning-in-iteration extra time: 0.00010371208190917969
Time: prepare 0.3385    bound 0.6798    transfer 0.1817    finalize 0.2812    func 1.4829    
Accumulated time: func 6.2140    prepare 1.2207    bound 3.4168    transfer 0.5564    finalize 0.8574    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04415 (19), -0.04338 (20), -0.04292 (19), -0.04287 (20), -0.04284 (20), -0.04271 (19), -0.04261 (20), -0.04249 (20), -0.04244 (19), -0.04213 (20), -0.04212 (20), -0.04204 (19), -0.04202 (19), -0.04170 (19), -0.04161 (20), -0.04158 (20), -0.04146 (20), -0.04109 (19), -0.04109 (20), -0.04091 (20), 
Length of domains: 19721
Time: pickout 0.1133    decision 0.4717    set_bounds 0.5613    solve 1.4855    add 0.0781    
Accumulated time: pickout 0.4183    decision 1.9877    set_bounds 1.8092    solve 6.2251    add 0.2304    
Current (lb-rhs): -0.044145286083221436
49395 domains visited
current_vram/total_varm: 24.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.796128034591675

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1748] [/input-8, 1076] [/input-8, 918] [/input-8, 1932] [/input-8, 1932] [/input-8, 1748] [/input-8, 26] [/input-8, 1932] [/input-8, 1061] [/input-8, 26] 
pruning_in_iteration open status: False
ratio of positive domain = 4639 / 32768 = 0.141571044921875
pruning-in-iteration extra time: 0.0002200603485107422
Time: prepare 0.6678    bound 1.3140    transfer 0.3680    finalize 0.1759    func 2.5279    
Accumulated time: func 8.7419    prepare 1.8888    bound 4.7308    transfer 0.9244    finalize 1.0333    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04415 (19), -0.04292 (19), -0.04271 (19), -0.04244 (19), -0.04227 (21), -0.04204 (19), -0.04202 (19), -0.04174 (21), -0.04173 (21), -0.04170 (19), -0.04148 (21), -0.04148 (21), -0.04109 (19), -0.04109 (21), -0.04100 (21), -0.04086 (19), -0.04061 (20), -0.04053 (19), -0.04047 (21), -0.04047 (21), 
Length of domains: 31257
Time: pickout 0.2388    decision 1.6612    set_bounds 1.2579    solve 2.5341    add 0.1015    
Accumulated time: pickout 0.6571    decision 3.6489    set_bounds 3.0671    solve 8.7592    add 0.3319    
Current (lb-rhs): -0.044145286083221436
77315 domains visited
current_vram/total_varm: 33.4GB/99.9GB, batch_size increase to 32768
Cumulative time: 16.66236925125122

BaB round 14
batch: 31257
splitting decisions: 
split level 0: [/input-8, 918] [/input-8, 26] [/input-8, 938] [/input-8, 1252] [/input-8, 877] [/input-8, 1061] [/input-8, 877] [/input-8, 1363] [/input-8, 26] [/input-8, 1061] 
pruning_in_iteration open status: False
ratio of positive domain = 9528 / 62514 = 0.15241385929551776
pruning-in-iteration extra time: 0.00044536590576171875
Time: prepare 1.2531    bound 2.4731    transfer 0.6980    finalize 0.3923    func 4.8191    
Accumulated time: func 13.5610    prepare 3.1424    bound 7.2039    transfer 1.6224    finalize 1.4257    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04309 (20), -0.04181 (20), -0.04157 (20), -0.04134 (20), -0.04099 (20), -0.04092 (20), -0.04068 (20), -0.04006 (20), -0.04000 (22), -0.03951 (21), -0.03947 (22), -0.03946 (22), -0.03941 (20), -0.03931 (22), -0.03928 (20), -0.03926 (22), -0.03920 (22), -0.03912 (20), -0.03905 (20), -0.03897 (21), 
Length of domains: 52508
Time: pickout 0.4614    decision 3.7907    set_bounds 2.0829    solve 5.1945    add 0.2446    
Accumulated time: pickout 1.1184    decision 7.4396    set_bounds 5.1500    solve 13.9537    add 0.5765    
Current (lb-rhs): -0.04309028387069702
129823 domains visited
Cumulative time: 28.562489986419678

BaB round 15
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1932] [/input-8, 938] [/input-8, 1076] [/input-8, 938] [/input-8, 1076] [/input-8, 1076] [/input-8, 938] [/input-8, 1076] [/input-8, 938] [/input-8, 1076] 
pruning_in_iteration open status: False
ratio of positive domain = 11125 / 65536 = 0.1697540283203125
pruning-in-iteration extra time: 0.0004639625549316406
Time: prepare 1.3668    bound 7.7730    transfer 0.7334    finalize 0.9402    func 10.8166    
Accumulated time: func 24.3776    prepare 4.5095    bound 14.9769    transfer 2.3558    finalize 2.3659    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04072 (21), -0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03940 (21), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03899 (21), -0.03887 (22), -0.03877 (20), -0.03876 (21), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), 
Length of domains: 73594
Time: pickout 0.4761    decision 3.3639    set_bounds 1.9317    solve 10.8264    add 0.2338    
Accumulated time: pickout 1.5945    decision 10.8035    set_bounds 7.0817    solve 24.7801    add 0.8103    
Current (lb-rhs): -0.04071655869483948
183677 domains visited
Cumulative time: 45.51841354370117

BaB round 16
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1076] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 364] 
pruning_in_iteration open status: True
ratio of positive domain = 15235 / 65536 = 0.2324676513671875
pruning-in-iteration extra time: 0.0029397010803222656
Time: prepare 1.3771    bound 5.8983    transfer 0.7406    finalize 0.4753    func 8.4946    
Accumulated time: func 32.8722    prepare 5.8870    bound 20.8753    transfer 3.0964    finalize 2.8411    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03918 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), 
Length of domains: 91127
Time: pickout 0.5001    decision 3.9680    set_bounds 2.7046    solve 8.5098    add 0.3208    
Accumulated time: pickout 2.0946    decision 14.7715    set_bounds 9.7863    solve 33.2899    add 1.1310    
Current (lb-rhs): -0.03999902307987213
233978 domains visited
Cumulative time: 61.70423746109009

BaB round 17
batch: 32768
splitting decisions: 
split level 0: [/input-8, 861] [/input-8, 1618] [/input-8, 930] [/input-8, 861] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] [/input-8, 930] 
pruning_in_iteration open status: True
ratio of positive domain = 19784 / 65536 = 0.3018798828125
pruning-in-iteration extra time: 0.005763053894042969
Time: prepare 1.4475    bound 3.0376    transfer 0.7402    finalize 0.4942    func 5.7243    
Accumulated time: func 38.5964    prepare 7.3349    bound 23.9128    transfer 3.8365    finalize 3.3354    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 104111
Time: pickout 0.5289    decision 4.1499    set_bounds 3.1140    solve 5.7396    add 0.1771    
Accumulated time: pickout 2.6235    decision 18.9214    set_bounds 12.9003    solve 39.0296    add 1.3082    
Current (lb-rhs): -0.03999902307987213
279730 domains visited
Cumulative time: 75.62684345245361

BaB round 18
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1932] [/input-8, 1618] [/input-8, 1076] [/input-8, 930] [/input-8, 364] [/input-8, 812] [/input-8, 930] [/input-8, 930] [/input-8, 1676] [/input-8, 930] 
pruning_in_iteration open status: True
ratio of positive domain = 18275 / 65536 = 0.2788543701171875
pruning-in-iteration extra time: 0.005428791046142578
Time: prepare 1.4115    bound 3.3621    transfer 0.7440    finalize 0.4781    func 6.0058    
Accumulated time: func 44.6023    prepare 8.7470    bound 27.2749    transfer 4.5805    finalize 3.8134    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 118604
Time: pickout 0.5370    decision 3.8987    set_bounds 2.4803    solve 6.0240    add 0.1945    
Accumulated time: pickout 3.1605    decision 22.8201    set_bounds 15.3806    solve 45.0535    add 1.5026    
Current (lb-rhs): -0.03999902307987213
326991 domains visited
Cumulative time: 88.94464802742004

BaB round 19
batch: 32768
splitting decisions: 
split level 0: [/input-8, 861] [/input-8, 861] [/input-8, 1939] [/input, 1400] [/input-8, 1371] [/input-8, 1371] [/input-8, 1371] [/input-8, 1259] [/input, 1400] [/input-8, 1371] 
pruning_in_iteration open status: True
ratio of positive domain = 16895 / 65536 = 0.2577972412109375
pruning-in-iteration extra time: 0.005384206771850586
Time: prepare 1.4383    bound 3.6801    transfer 0.7484    finalize 1.5955    func 7.4723    
Accumulated time: func 52.0746    prepare 10.1857    bound 30.9550    transfer 5.3289    finalize 5.4089    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 134477
Time: pickout 0.5516    decision 4.4609    set_bounds 2.5524    solve 7.4936    add 0.2597    
Accumulated time: pickout 3.7121    decision 27.2810    set_bounds 17.9330    solve 52.5471    add 1.7623    
Current (lb-rhs): -0.03999902307987213
375632 domains visited
Cumulative time: 104.5083966255188

BaB round 20
batch: 32768
splitting decisions: 
split level 0: [/input-8, 862] [/input-8, 1618] [/input-8, 1076] [/input-8, 794] [/input, 1400] [/input-8, 862] [/input-8, 1939] [/input-8, 364] [/input-8, 794] [/input-8, 1939] 
pruning_in_iteration open status: True
ratio of positive domain = 18374 / 65536 = 0.280364990234375
pruning-in-iteration extra time: 0.005938291549682617
Time: prepare 1.5535    bound 3.3639    transfer 0.7433    finalize 1.6917    func 7.3564    
Accumulated time: func 59.4310    prepare 11.7398    bound 34.3189    transfer 6.0722    finalize 7.1006    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 148871
Time: pickout 0.7120    decision 3.5290    set_bounds 2.9645    solve 7.3730    add 0.3789    
Accumulated time: pickout 4.4240    decision 30.8100    set_bounds 20.8975    solve 59.9201    add 2.1412    
Current (lb-rhs): -0.03999902307987213
422794 domains visited
Cumulative time: 119.69492030143738

BaB round 21
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1371] [/input-8, 862] [/input-8, 1371] [/input-8, 930] [/input-8, 1371] [/input-8, 1234] [/input-8, 812] [/input-8, 1371] [/input-8, 862] [/input-8, 1234] 
pruning_in_iteration open status: True
ratio of positive domain = 18993 / 65536 = 0.2898101806640625
pruning-in-iteration extra time: 0.005688667297363281
Time: prepare 1.5750    bound 3.3530    transfer 0.7342    finalize 0.5026    func 6.1720    
Accumulated time: func 65.6030    prepare 13.3153    bound 37.6720    transfer 6.8063    finalize 7.6032    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 162646
Time: pickout 0.6011    decision 3.4497    set_bounds 3.0083    solve 7.5998    add 0.3119    
Accumulated time: pickout 5.0251    decision 34.2597    set_bounds 23.9058    solve 67.5199    add 2.4530    
Current (lb-rhs): -0.03999902307987213
469337 domains visited
Cumulative time: 134.8534824848175

BaB round 22
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1636] [/input-8, 930] [/input-8, 862] [/input-8, 1676] [/input-8, 862] [/input-8, 812] [/input-8, 930] [/input-8, 1676] [/input-8, 364] [/input-8, 1371] 
pruning_in_iteration open status: True
ratio of positive domain = 19598 / 65536 = 0.299041748046875
pruning-in-iteration extra time: 0.006906270980834961
Time: prepare 1.9885    bound 2.8093    transfer 0.7193    finalize 0.5451    func 6.0723    
Accumulated time: func 71.6753    prepare 15.3044    bound 40.4812    transfer 7.5256    finalize 8.1483    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 175816
Time: pickout 0.6272    decision 3.4669    set_bounds 3.1728    solve 6.0976    add 0.1753    
Accumulated time: pickout 5.6523    decision 37.7266    set_bounds 27.0786    solve 73.6175    add 2.6283    
Current (lb-rhs): -0.03999902307987213
515275 domains visited
Cumulative time: 148.68050265312195

BaB round 23
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1242] [/input-8, 1242] [/input-8, 1676] [/input-8, 1242] [/input, 889] [/input-8, 1242] [/input-8, 930] [/input-8, 364] [/input-8, 812] [/input-8, 812] 
pruning_in_iteration open status: True
ratio of positive domain = 19350 / 65536 = 0.295257568359375
pruning-in-iteration extra time: 0.006120443344116211
Time: prepare 1.6622    bound 2.7993    transfer 0.7372    finalize 2.1712    func 7.3752    
Accumulated time: func 79.0504    prepare 16.9671    bound 43.2805    transfer 8.2628    finalize 10.3195    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 189234
Time: pickout 0.6878    decision 4.9131    set_bounds 1.5652    solve 7.3928    add 0.2506    
Accumulated time: pickout 6.3401    decision 42.6397    set_bounds 28.6438    solve 81.0103    add 2.8789    
Current (lb-rhs): -0.03999902307987213
561461 domains visited
Cumulative time: 163.70511841773987

BaB round 24
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1379] [/input-8, 1676] [/input-8, 812] [/input-8, 862] [/input-8, 1242] [/input-8, 1939] [/input-8, 1676] [/input-8, 1676] [/input-8, 934] [/input-8, 1763] 
pruning_in_iteration open status: True
ratio of positive domain = 19057 / 65536 = 0.2907867431640625
pruning-in-iteration extra time: 0.006424903869628906
Time: prepare 1.7540    bound 2.8030    transfer 0.7447    finalize 0.5208    func 5.8289    
Accumulated time: func 84.8793    prepare 18.7216    bound 46.0836    transfer 9.0075    finalize 10.8403    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 202945
Time: pickout 0.6755    decision 3.4727    set_bounds 3.5001    solve 5.8531    add 0.1753    
Accumulated time: pickout 7.0156    decision 46.1124    set_bounds 32.1439    solve 86.8634    add 3.0542    
Current (lb-rhs): -0.03999902307987213
607940 domains visited
Cumulative time: 177.6153748035431

BaB round 25
batch: 32768
splitting decisions: 
split level 0: [/input, 885] [/input, 1400] [/input-8, 1365] [/input-8, 1365] [/input-8, 1763] [/input-8, 1387] [/input-8, 1387] [/input, 3444] [/input-8, 1763] [/input-8, 934] 
pruning_in_iteration open status: True
ratio of positive domain = 18946 / 65536 = 0.289093017578125
pruning-in-iteration extra time: 0.006644248962402344
Time: prepare 1.8212    bound 2.8089    transfer 0.7569    finalize 0.5678    func 5.9593    
Accumulated time: func 90.8386    prepare 20.5433    bound 48.8925    transfer 9.7645    finalize 11.4080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 216767
Time: pickout 0.6838    decision 5.0642    set_bounds 1.5738    solve 5.9827    add 0.1762    
Accumulated time: pickout 7.6994    decision 51.1766    set_bounds 33.7178    solve 92.8461    add 3.2305    
Current (lb-rhs): -0.03999902307987213
654530 domains visited
Cumulative time: 191.3538122177124

BaB round 26
batch: 32768
splitting decisions: 
split level 0: [/input, 4042] [/input-8, 364] [/input-8, 1371] [/input-8, 930] [/input-8, 1371] [/input-8, 1242] [/input, 885] [/input-8, 1379] [/input, 921] [/input-8, 1379] 
pruning_in_iteration open status: True
ratio of positive domain = 20149 / 65536 = 0.3074493408203125
pruning-in-iteration extra time: 0.006137847900390625
Time: prepare 2.0561    bound 2.7562    transfer 0.7464    finalize 2.5947    func 8.1568    
Accumulated time: func 98.9954    prepare 22.5999    bound 51.6486    transfer 10.5108    finalize 14.0027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04000 (22), -0.03994 (21), -0.03947 (22), -0.03946 (22), -0.03928 (20), -0.03928 (21), -0.03926 (22), -0.03920 (22), -0.03887 (22), -0.03877 (20), -0.03875 (20), -0.03873 (22), -0.03866 (21), -0.03859 (21), -0.03852 (22), -0.03844 (21), -0.03825 (21), -0.03825 (22), -0.03821 (22), -0.03820 (22), 
Length of domains: 229386
Time: pickout 0.7137    decision 5.5896    set_bounds 1.5991    solve 8.1743    add 0.3590    
Accumulated time: pickout 8.4131    decision 56.7662    set_bounds 35.3168    solve 101.0205    add 3.5895    
Current (lb-rhs): -0.03999902307987213
699917 domains visited
Time out!!!!!!!!
Result: unknown in 211.2962 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.11565208, -26.29471397, -20.11076927, -23.31661606, -21.61720848,
         -22.97149086, -21.28172302, -23.18593788, -27.03968811, -25.88165855]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [697]; unstable size 697; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 312, 1, 697] with unstable size 311 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 697] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 697] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [311]; unstable size 311; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 311] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 311] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.78565788, 4.27323198, 2.01961493, 0.27245510, 1.55622101, 0.05097020,
         1.07475853, 5.46636105, 4.11699820]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0690 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-33.48653412, -28.85784149, -33.36421204, -32.71415710, -32.16485214,
         -32.94163132, -33.09236145, -31.24285507, -33.00304794, -27.07908058]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [755]; unstable size 755; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 755] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 755] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 755] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 272] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.82790470, 0.86489153, 4.30059433, 3.81733036, 3.25241184, 3.89844656,
         3.96334553, 2.53978395, 4.38356304]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0361 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-20.57879448, -25.87275887, -18.40335464, -22.53392982, -18.78349113,
         -22.35590553, -20.82909393, -22.13958931, -23.90252686, -25.55131340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [942]; unstable size 942; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 942] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 942] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 942] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 298] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.78787923,  5.47186089,  3.06105709, -0.50585997,  2.82687855,
          1.17288113,  2.26738572,  3.64541650,  5.32217264]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-20.57879448, -25.87275887, -18.40335464, -22.53392982, -18.78349113,
         -22.35590553, -20.82909393, -22.13958931, -23.90252686, -25.55131340]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-21.34274864, -26.69354248, -19.10419273, -23.07092094, -19.10215950,
          -22.83916855, -21.32789803, -22.39095688, -24.61488724, -26.29346466]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00203323]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0094 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0561 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.54196358, -20.82349014, -15.98302746, -15.75083733, -17.00555420,
         -16.15604782, -17.53281975, -17.70917892, -21.04745102, -20.12406921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [787]; unstable size 787; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 787] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 787] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 787] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 259] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.29445910,  2.55111361, -1.20112336,  0.14969802, -0.85841596,
          0.26714218,  0.60579479,  3.49371672,  1.95312929]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.54196358, -20.82349014, -15.98302746, -15.75083733, -17.00555420,
         -16.15604782, -17.53281975, -17.70917892, -21.04745102, -20.12406921]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.54196358, -20.82349205, -15.98302746, -15.75083637, -17.00555229,
          -16.15604591, -17.53282166, -17.70917892, -21.04744911, -20.12407112],
         [-19.54196358, -20.82349205, -15.98302746, -15.75083637, -17.00555229,
          -16.15604591, -17.53282166, -17.70917892, -21.04744911, -20.12407112]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.23219109,  0.17301846]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.03650784, -1.02063489,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.06825387, -1.05238092, -1.03650784,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.09999990, -1.06825387, -1.06825387,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           ...,
           [-1.29047608, -1.17936504, -1.16349196,  ..., -1.13174593,
            -1.13174593, -1.13174593],
           [-1.35396814, -1.27460313, -1.24285710,  ..., -1.11587298,
            -1.13174593, -1.13174593],
           [-1.32222211, -1.32222211, -1.22698402,  ..., -1.11587298,
            -1.13174593, -1.13174593]],

          [[-1.14331722, -1.14331722, -1.11111104,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.15942025, -1.14331722, -1.12721407,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.17552328, -1.14331722, -1.14331722,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           ...,
           [-1.27214170, -1.20772946, -1.20772946,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.35265696, -1.28824472, -1.25603855,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.33655393, -1.32045078, -1.23993552,  ..., -1.20772946,
            -1.19162631, -1.19162631]],

          [[-1.16791618, -1.18290865, -1.16791618,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.22788620, -1.21289361, -1.19790113,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.25787115, -1.21289361, -1.18290865,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           ...,
           [-1.09295356, -1.04797614, -1.06296861,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.15292358, -1.10794616, -1.07796109,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.12293863, -1.12293863, -1.01799107,  ..., -1.25787115,
            -1.25787115, -1.25787115]]],


         [[[-1.03650784, -1.03650784, -1.02063489,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.06825387, -1.05238092, -1.03650784,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           [-1.09999990, -1.06825387, -1.06825387,  ..., -0.89365077,
            -0.94126981, -1.02063489],
           ...,
           [-1.29047608, -1.17936504, -1.16349196,  ..., -1.13174593,
            -1.13174593, -1.13174593],
           [-1.35396814, -1.27460313, -1.24285710,  ..., -1.11587298,
            -1.13174593, -1.13174593],
           [-1.32222211, -1.32222211, -1.22698402,  ..., -1.11587298,
            -1.13174593, -1.13174593]],

          [[-1.14331722, -1.14331722, -1.11111104,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.15942025, -1.14331722, -1.12721407,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           [-1.17552328, -1.14331722, -1.14331722,  ..., -1.07890499,
            -1.12721407, -1.15942025],
           ...,
           [-1.27214170, -1.20772946, -1.20772946,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.35265696, -1.28824472, -1.25603855,  ..., -1.20772946,
            -1.19162631, -1.19162631],
           [-1.33655393, -1.32045078, -1.23993552,  ..., -1.20772946,
            -1.19162631, -1.19162631]],

          [[-1.16791618, -1.18290865, -1.16791618,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.22788620, -1.21289361, -1.19790113,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           [-1.25787115, -1.21289361, -1.18290865,  ..., -1.12293863,
            -1.15292358, -1.18290865],
           ...,
           [-1.09295356, -1.04797614, -1.06296861,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.15292358, -1.10794616, -1.07796109,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.12293863, -1.12293863, -1.01799107,  ..., -1.25787115,
            -1.25787115, -1.25787115]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0514 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-23.03269768, -23.39742851, -19.98416901, -18.36516571, -20.57546043,
         -19.22831917, -18.52441025, -21.12701797, -21.40182495, -21.89733315]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [675]; unstable size 675; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 330, 1, 675] with unstable size 329 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 675] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 675] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [329]; unstable size 329; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 329] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 329] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.27801895,  2.64099789,  0.07614565,  0.77937651,  0.49395740,
         -0.89621007,  1.17210209,  0.74582696,  1.35976243]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-23.03269768, -23.39742851, -19.98416901, -18.36516571, -20.57546043,
         -19.22831917, -18.52441025, -21.12701797, -21.40182495, -21.89733315]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-23.70111656, -23.92578506, -20.54925156, -19.09409904, -21.12871933,
          -19.96413612, -18.72333908, -21.88397980, -22.08024597, -22.51139450]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.37075996]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0053 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0497 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.98860359, -29.81665421, -22.90506172, -26.87357140, -25.76964569,
         -27.17270279, -26.79407501, -29.03504753, -24.31199837, -29.65661049]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 140, 1, 508] with unstable size 139 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 508] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [139]; unstable size 139; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 139] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 139] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[7.01010847, 0.43884718, 4.07559061, 3.17350507, 4.33794928, 3.97197723,
         6.33449650, 1.59434104, 6.97273016]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0298 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
         -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [796]; unstable size 796; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 161, 1, 796] with unstable size 160 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 796] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 796] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [160]; unstable size 160; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 160] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 160] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.89236903, -0.28250694, -0.08627716,  1.25970411,  0.33654204,
          1.56063473,  2.24391055,  2.57144308,  3.82517886]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
         -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-22.14568901, -27.12878036, -22.18230820, -22.67010307, -24.06120300,
          -23.14287567, -24.43312645, -25.13286972, -25.67265129, -26.70305634],
         [-22.14568901, -27.12878036, -22.18230820, -22.67010307, -24.06120300,
          -23.14287567, -24.43312645, -25.13286972, -25.67265129, -26.70305634]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.03661919, 0.52441406]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1159 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 15.66608715057373
alpha/beta optimization time: 1.1722321510314941
initial alpha-crown bounds: tensor([[ 3.92945361, -0.25881660, -0.04859877,  1.30887032,  0.37676290,
          1.59917879,  2.28565168,  2.62420321,  3.84938145]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.25881659984588623
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.66368103027344
Verifying property 0 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9294536113739014.

Properties batch 1, size 1
Remaining timeout: 198.50643157958984
Verifying property 1 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.25881660]], device='cuda:0') need to verify.
Model prediction is: tensor([-21.75551414, -26.88309479, -22.24279404, -22.79791832, -24.11035538,
        -23.30415535, -24.49540329, -25.17525864, -25.53401184, -26.56663895],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.25881660]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 796
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 160
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 971
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 12] 
split level 1: [/input-12, 59] 
split level 2: [/input-12, 0] 
split level 3: [/input-12, 10] 
split level 4: [/input-8, 283] 
split level 5: [/input-12, 58] 
split level 6: [/input-8, 470] 
split level 7: [/input-8, 461] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 256 = 0.6796875
pruning-in-iteration extra time: 0.00450897216796875
Time: prepare 0.0031    bound 0.1615    transfer 0.0010    finalize 0.0015    func 0.1671    
Accumulated time: func 0.1671    prepare 0.0035    bound 0.1615    transfer 0.0010    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15008 (8), -0.14789 (8), -0.14786 (8), -0.14507 (8), -0.14479 (8), -0.14393 (8), -0.14263 (8), -0.14222 (8), -0.14208 (8), -0.14184 (8), -0.13930 (8), -0.13886 (8), -0.13703 (8), -0.13519 (8), -0.13454 (8), -0.13165 (8), -0.12674 (8), -0.12600 (8), -0.12454 (8), -0.12432 (8), 
Length of domains: 82
Time: pickout 0.0004    decision 0.0228    set_bounds 0.0173    solve 0.1672    add 0.0014    
Accumulated time: pickout 0.0004    decision 0.0228    set_bounds 0.0173    solve 0.1672    add 0.0014    
Current (lb-rhs): -0.15007787942886353
82 domains visited
Cumulative time: 0.2171487808227539

BaB round 2
batch: 82
splitting decisions: 
split level 0: [/input-8, 794] [/input-8, 794] [/input-8, 796] [/input-8, 796] [/input-8, 794] [/input-8, 794] [/input-8, 794] [/input-8, 796] [/input-8, 796] [/input-8, 794] 
split level 1: [/input-8, 1612] [/input-8, 1612] [/input-8, 794] [/input-8, 1581] [/input-8, 1612] [/input-8, 1612] [/input-8, 1581] [/input-8, 794] [/input-8, 1581] [/input-8, 1612] 
pruning_in_iteration open status: False
ratio of positive domain = 60 / 328 = 0.18292682926829273
pruning-in-iteration extra time: 5.078315734863281e-05
Time: prepare 0.0061    bound 0.0930    transfer 0.0048    finalize 0.0020    func 0.1061    
Accumulated time: func 0.2732    prepare 0.0098    bound 0.2545    transfer 0.0059    finalize 0.0035    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14481 (10), -0.14256 (10), -0.14255 (10), -0.13942 (10), -0.13940 (10), -0.13831 (10), -0.13692 (10), -0.13654 (10), -0.13644 (10), -0.13619 (10), -0.13610 (10), -0.13386 (10), -0.13385 (10), -0.13363 (10), -0.13319 (10), -0.13106 (10), -0.13071 (10), -0.13001 (10), -0.12914 (10), -0.12854 (10), 
Length of domains: 268
Time: pickout 0.0018    decision 0.0189    set_bounds 0.0087    solve 0.1062    add 0.0015    
Accumulated time: pickout 0.0021    decision 0.0417    set_bounds 0.0260    solve 0.2733    add 0.0029    
Current (lb-rhs): -0.14480745792388916
350 domains visited
Cumulative time: 0.35456418991088867

BaB round 3
batch: 268
splitting decisions: 
split level 0: [/input-8, 1581] [/input-8, 1581] [/input-8, 1573] [/input-8, 794] [/input-8, 1571] [/input-8, 1581] [/input-8, 1573] [/input-8, 794] [/input-8, 1581] [/input-8, 1581] 
pruning_in_iteration open status: False
ratio of positive domain = 19 / 536 = 0.035447761194029814
pruning-in-iteration extra time: 5.3882598876953125e-05
Time: prepare 0.0102    bound 0.1102    transfer 0.0041    finalize 0.0035    func 0.1280    
Accumulated time: func 0.4011    prepare 0.0202    bound 0.3646    transfer 0.0100    finalize 0.0070    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14151 (11), -0.13927 (11), -0.13925 (11), -0.13611 (11), -0.13599 (11), -0.13527 (11), -0.13351 (11), -0.13332 (11), -0.13312 (11), -0.13311 (11), -0.13311 (11), -0.13235 (11), -0.13112 (11), -0.13085 (11), -0.13052 (11), -0.13012 (11), -0.13008 (11), -0.12977 (11), -0.12795 (11), -0.12774 (11), 
Length of domains: 515
Time: pickout 0.0032    decision 0.0288    set_bounds 0.0119    solve 0.1281    add 0.0034    
Accumulated time: pickout 0.0053    decision 0.0705    set_bounds 0.0378    solve 0.4014    add 0.0063    
Current (lb-rhs): -0.14151275157928467
865 domains visited
Cumulative time: 0.5311334133148193

BaB round 4
batch: 515
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1637] [/input-8, 1581] [/input-8, 1573] [/input-8, 796] [/input-8, 1637] [/input-8, 1581] [/input-8, 1573] [/input-8, 1571] [/input-8, 460] 
pruning_in_iteration open status: False
ratio of positive domain = 17 / 1030 = 0.01650485436893201
pruning-in-iteration extra time: 5.269050598144531e-05
Time: prepare 0.0197    bound 0.1118    transfer 0.0029    finalize 0.0074    func 0.1419    
Accumulated time: func 0.5431    prepare 0.0400    bound 0.4765    transfer 0.0129    finalize 0.0144    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13850 (12), -0.13626 (12), -0.13623 (12), -0.13318 (12), -0.13309 (12), -0.13271 (12), -0.13077 (12), -0.13069 (12), -0.13057 (12), -0.13028 (12), -0.12973 (12), -0.12915 (12), -0.12884 (12), -0.12795 (12), -0.12749 (12), -0.12746 (12), -0.12693 (12), -0.12691 (12), -0.12687 (12), -0.12684 (12), 
Length of domains: 1013
Time: pickout 0.0077    decision 0.0454    set_bounds 0.0225    solve 0.1421    add 0.0045    
Accumulated time: pickout 0.0130    decision 0.1158    set_bounds 0.0603    solve 0.5435    add 0.0108    
Current (lb-rhs): -0.13850319385528564
1878 domains visited
Cumulative time: 0.7547581195831299

BaB round 5
batch: 1013
splitting decisions: 
split level 0: [/input-8, 460] [/input-8, 460] [/input-8, 1612] [/input-8, 1612] [/input-8, 1581] [/input-8, 1182] [/input-8, 1612] [/input-8, 1612] [/input-8, 796] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 135 / 2026 = 0.0666337611056268
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0388    bound 0.1307    transfer 0.0302    finalize 0.0158    func 0.2157    
Accumulated time: func 0.7588    prepare 0.0790    bound 0.6071    transfer 0.0431    finalize 0.0302    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13501 (13), -0.13270 (13), -0.13252 (13), -0.13124 (13), -0.13015 (13), -0.12974 (13), -0.12936 (13), -0.12915 (13), -0.12902 (13), -0.12717 (13), -0.12711 (13), -0.12696 (13), -0.12695 (13), -0.12679 (13), -0.12610 (13), -0.12557 (13), -0.12554 (13), -0.12516 (13), -0.12493 (13), -0.12446 (13), 
Length of domains: 1884
Time: pickout 0.0147    decision 0.0707    set_bounds 0.0433    solve 0.2161    add 0.0059    
Accumulated time: pickout 0.0277    decision 0.1865    set_bounds 0.1036    solve 0.7596    add 0.0166    
Current (lb-rhs): -0.13500535488128662
3762 domains visited
Cumulative time: 1.107903003692627

BaB round 6
batch: 1884
splitting decisions: 
split level 0: [/input-8, 796] [/input-8, 1571] [/input-8, 1637] [/input-8, 460] [/input-8, 1571] [/input-8, 1571] [/input-8, 1637] [/input-8, 796] [/input-8, 460] [/input-8, 174] 
pruning_in_iteration open status: False
ratio of positive domain = 366 / 3768 = 0.09713375796178347
pruning-in-iteration extra time: 5.507469177246094e-05
Time: prepare 0.0734    bound 0.1989    transfer 0.0482    finalize 0.0201    func 0.3410    
Accumulated time: func 1.0998    prepare 0.1527    bound 0.8060    transfer 0.0913    finalize 0.0504    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13195 (14), -0.12960 (14), -0.12908 (14), -0.12903 (14), -0.12769 (14), -0.12717 (14), -0.12695 (14), -0.12685 (14), -0.12676 (14), -0.12664 (14), -0.12644 (14), -0.12582 (14), -0.12494 (14), -0.12494 (14), -0.12477 (14), -0.12459 (14), -0.12428 (14), -0.12394 (14), -0.12380 (14), -0.12376 (14), 
Length of domains: 3390
Time: pickout 0.0268    decision 0.1199    set_bounds 0.2040    solve 0.3416    add 0.0106    
Accumulated time: pickout 0.0545    decision 0.3064    set_bounds 0.3076    solve 1.1012    add 0.0273    
Current (lb-rhs): -0.13194894790649414
7152 domains visited
Cumulative time: 1.8161230087280273

BaB round 7
batch: 3390
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1571] [/input-8, 174] [/input-8, 796] [/input-8, 1571] [/input-8, 309] [/input-8, 1637] [/input, 935] [/input-8, 1637] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 743 / 6780 = 0.10958702064896753
pruning-in-iteration extra time: 5.7697296142578125e-05
Time: prepare 0.1374    bound 0.3166    transfer 0.0364    finalize 0.0402    func 0.5314    
Accumulated time: func 1.6312    prepare 0.2903    bound 1.1226    transfer 0.1277    finalize 0.0906    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13063 (15), -0.12829 (15), -0.12773 (15), -0.12770 (15), -0.12636 (15), -0.12585 (15), -0.12560 (15), -0.12554 (15), -0.12543 (15), -0.12525 (15), -0.12449 (15), -0.12378 (15), -0.12366 (15), -0.12363 (15), -0.12346 (15), -0.12327 (15), -0.12243 (15), -0.12241 (15), -0.12228 (15), -0.12219 (15), 
Length of domains: 6022
Time: pickout 0.0434    decision 0.2051    set_bounds 0.2774    solve 0.5327    add 0.0206    
Accumulated time: pickout 0.0978    decision 0.5115    set_bounds 0.5850    solve 1.6339    add 0.0479    
Current (lb-rhs): -0.13063347339630127
13174 domains visited
Cumulative time: 2.9066741466522217

BaB round 8
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1573] [/input-8, 174] [/input-8, 174] [/input-8, 1571] [/input-8, 1637] [/input-8, 174] [/input-8, 174] [/input-8, 1571] [/input-8, 1182] [/input-8, 796] 
pruning_in_iteration open status: False
ratio of positive domain = 934 / 8192 = 0.114013671875
pruning-in-iteration extra time: 5.817413330078125e-05
Time: prepare 0.1655    bound 0.3626    transfer 0.0674    finalize 0.0462    func 0.6433    
Accumulated time: func 2.2745    prepare 0.4560    bound 1.4852    transfer 0.1951    finalize 0.1368    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12986 (16), -0.12751 (16), -0.12692 (16), -0.12691 (16), -0.12559 (16), -0.12506 (16), -0.12482 (16), -0.12476 (16), -0.12466 (16), -0.12370 (16), -0.12289 (16), -0.12284 (16), -0.12267 (16), -0.12249 (16), -0.12246 (16), -0.12172 (16), -0.12166 (16), -0.12028 (16), -0.12021 (16), -0.12004 (16), 
Length of domains: 9157
Time: pickout 0.0507    decision 0.2340    set_bounds 0.3428    solve 0.6447    add 0.0323    
Accumulated time: pickout 0.1486    decision 0.7455    set_bounds 0.9278    solve 2.2786    add 0.0802    
Current (lb-rhs): -0.12985682487487793
20405 domains visited
current_vram/total_varm: 29.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.228250980377197

BaB round 9
batch: 8192
splitting decisions: 
split level 0: [/input-8, 174] [/input-8, 460] [/input-8, 1571] [/input-8, 1637] [/input-8, 1182] [/input-8, 309] [/input-8, 1571] [/input-8, 1573] [/input-8, 174] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 2710 / 16384 = 0.1654052734375
pruning-in-iteration extra time: 0.00010800361633300781
Time: prepare 0.3370    bound 0.6798    transfer 0.1863    finalize 0.1046    func 1.3092    
Accumulated time: func 3.5837    prepare 0.7933    bound 2.1650    transfer 0.3814    finalize 0.2414    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12608 (17), -0.12534 (17), -0.12373 (17), -0.12313 (17), -0.12313 (17), -0.12300 (17), -0.12240 (17), -0.12240 (17), -0.12180 (17), -0.12175 (17), -0.12129 (17), -0.12107 (17), -0.12104 (17), -0.12098 (17), -0.12087 (17), -0.12056 (17), -0.12031 (17), -0.12025 (17), -0.12014 (17), -0.11991 (17), 
Length of domains: 14561
Time: pickout 0.1033    decision 0.6333    set_bounds 0.5374    solve 1.3127    add 0.0544    
Accumulated time: pickout 0.2519    decision 1.3788    set_bounds 1.4653    solve 3.5913    add 0.1347    
Current (lb-rhs): -0.12607526779174805
34001 domains visited
current_vram/total_varm: 35.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 6.911489725112915

BaB round 10
batch: 14561
splitting decisions: 
split level 0: [/input, 935] [/input-8, 460] [/input-8, 1571] [/input-8, 460] [/input-8, 1637] [/input-8, 460] [/input-8, 309] [/input-8, 1571] [/input, 935] [/input-8, 460] 
pruning_in_iteration open status: True
ratio of positive domain = 6060 / 29122 = 0.2080901037016688
pruning-in-iteration extra time: 0.0004940032958984375
Time: prepare 0.8186    bound 1.1808    transfer 0.3344    finalize 0.2016    func 2.5397    
Accumulated time: func 6.1234    prepare 1.6124    bound 3.3458    transfer 0.7158    finalize 0.4429    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12205 (18), -0.12134 (18), -0.12101 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11970 (18), -0.11911 (18), -0.11910 (18), -0.11900 (18), -0.11878 (18), -0.11867 (18), -0.11855 (18), -0.11841 (18), -0.11840 (18), -0.11840 (18), -0.11826 (18), -0.11807 (18), -0.11807 (18), 
Length of domains: 23062
Time: pickout 0.1842    decision 1.0488    set_bounds 1.0305    solve 2.5463    add 0.0791    
Accumulated time: pickout 0.4361    decision 2.4276    set_bounds 2.4958    solve 6.1376    add 0.2137    
Current (lb-rhs): -0.1230553388595581
57063 domains visited
Cumulative time: 11.870816230773926

BaB round 11
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 1637] [/input-8, 460] [/input, 3259] [/input-8, 1637] [/input-8, 460] [/input-8, 309] [/input-8, 460] [/input, 3259] [/input-8, 1637] 
pruning_in_iteration open status: True
ratio of positive domain = 7858 / 32768 = 0.23980712890625
pruning-in-iteration extra time: 0.003605365753173828
Time: prepare 0.7591    bound 1.2731    transfer 0.3764    finalize 0.2254    func 2.6365    
Accumulated time: func 8.7599    prepare 2.3719    bound 4.6190    transfer 1.0922    finalize 0.6683    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12072 (19), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11999 (19), -0.11964 (19), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11837 (19), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11777 (19), -0.11776 (19), -0.11765 (19), -0.11729 (19), 
Length of domains: 31588
Time: pickout 0.2258    decision 1.9310    set_bounds 1.1630    solve 2.6432    add 0.0852    
Accumulated time: pickout 0.6619    decision 4.3586    set_bounds 3.6588    solve 8.7808    add 0.2989    
Current (lb-rhs): -0.1230553388595581
81973 domains visited
Cumulative time: 17.998762130737305

BaB round 12
batch: 16384
splitting decisions: 
split level 0: [/input-8, 309] [/input-12, 8] [/input-8, 1613] [/input-12, 8] [/input-8, 309] [/input-8, 1182] [/input-8, 1613] [/input, 3259] [/input-8, 1590] [/input-8, 1182] 
pruning_in_iteration open status: True
ratio of positive domain = 8880 / 32768 = 0.27099609375
pruning-in-iteration extra time: 0.004807233810424805
Time: prepare 0.7946    bound 1.2199    transfer 0.3745    finalize 0.2036    func 2.5951    
Accumulated time: func 11.3550    prepare 3.1668    bound 5.8389    transfer 1.4667    finalize 0.8719    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11921 (20), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11785 (20), -0.11780 (18), -0.11749 (20), -0.11723 (18), -0.11689 (18), -0.11686 (20), -0.11682 (18), -0.11641 (20), 
Length of domains: 39092
Time: pickout 0.2450    decision 2.0141    set_bounds 1.3558    solve 2.6026    add 0.1146    
Accumulated time: pickout 0.9069    decision 6.3727    set_bounds 5.0147    solve 11.3835    add 0.4135    
Current (lb-rhs): -0.1230553388595581
105861 domains visited
Cumulative time: 24.41133975982666

BaB round 13
batch: 16384
splitting decisions: 
split level 0: [/input, 935] [/input, 935] [/input-8, 309] [/input-12, 8] [/input-8, 1819] [/input-12, 8] [/input, 3259] [/input, 935] [/input-8, 589] [/input, 3259] 
pruning_in_iteration open status: True
ratio of positive domain = 8681 / 32768 = 0.264923095703125
pruning-in-iteration extra time: 0.00541996955871582
Time: prepare 0.8382    bound 1.2140    transfer 0.3781    finalize 0.2258    func 2.6594    
Accumulated time: func 14.0145    prepare 4.0054    bound 7.0528    transfer 1.8448    finalize 1.0977    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11710 (21), -0.11689 (18), -0.11682 (18), -0.11649 (21), -0.11641 (20), -0.11636 (18), -0.11616 (21), 
Length of domains: 46795
Time: pickout 0.2604    decision 1.8616    set_bounds 1.0990    solve 2.6677    add 0.0866    
Accumulated time: pickout 1.1673    decision 8.2342    set_bounds 6.1136    solve 14.0512    add 0.5001    
Current (lb-rhs): -0.1230553388595581
129948 domains visited
Cumulative time: 30.46759796142578

BaB round 14
batch: 16384
splitting decisions: 
split level 0: [/input-12, 8] [/input-8, 1590] [/input-12, 8] [/input-12, 8] [/input, 3257] [/input-12, 8] [/input-12, 8] [/input, 935] [/input, 3257] [/input, 3259] 
pruning_in_iteration open status: True
ratio of positive domain = 6703 / 32768 = 0.204559326171875
pruning-in-iteration extra time: 0.00019812583923339844
Time: prepare 0.8755    bound 1.3131    transfer 0.3742    finalize 0.1980    func 2.7641    
Accumulated time: func 16.7785    prepare 4.8814    bound 8.3659    transfer 2.2190    finalize 1.2957    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 56476
Time: pickout 0.2884    decision 1.9524    set_bounds 1.1701    solve 2.7720    add 0.0954    
Accumulated time: pickout 1.4557    decision 10.1866    set_bounds 7.2837    solve 16.8232    add 0.5955    
Current (lb-rhs): -0.1230553388595581
156013 domains visited
Cumulative time: 36.817962646484375

BaB round 15
batch: 16384
splitting decisions: 
split level 0: [/input-12, 8] [/input, 3257] [/input, 3257] [/input, 3257] [/input, 3257] [/input-8, 1590] [/input, 3257] [/input-8, 1613] [/input, 935] [/input, 2780] 
pruning_in_iteration open status: False
ratio of positive domain = 4759 / 32768 = 0.145233154296875
pruning-in-iteration extra time: 0.00023102760314941406
Time: prepare 0.9078    bound 1.3152    transfer 0.3781    finalize 0.2260    func 2.8311    
Accumulated time: func 19.6096    prepare 5.7895    bound 9.6812    transfer 2.5970    finalize 1.5217    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 68017
Time: pickout 0.2916    decision 2.0385    set_bounds 1.2080    solve 2.8406    add 0.1840    
Accumulated time: pickout 1.7473    decision 12.2252    set_bounds 8.4917    solve 19.6638    add 0.7795    
Current (lb-rhs): -0.1230553388595581
183938 domains visited
Cumulative time: 43.44761347770691

BaB round 16
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1590] [/input-8, 246] [/input-8, 1590] [/input, 901] [/input, 3257] [/input, 3259] [/input, 2780] [/input, 3257] [/input, 935] [/input, 2780] 
pruning_in_iteration open status: False
ratio of positive domain = 4039 / 32768 = 0.123260498046875
pruning-in-iteration extra time: 0.0002257823944091797
Time: prepare 0.9455    bound 1.3135    transfer 0.3764    finalize 0.2181    func 2.8560    
Accumulated time: func 22.4656    prepare 6.7354    bound 10.9947    transfer 2.9734    finalize 1.7398    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 80255
Time: pickout 0.3142    decision 2.3497    set_bounds 0.7069    solve 2.8641    add 0.1050    
Accumulated time: pickout 2.0615    decision 14.5748    set_bounds 9.1986    solve 22.5279    add 0.8845    
Current (lb-rhs): -0.1230553388595581
212560 domains visited
Cumulative time: 49.84691572189331

BaB round 17
batch: 16384
splitting decisions: 
split level 0: [/input-12, 8] [/input-12, 8] [/input-8, 166] [/input, 983] [/input-8, 246] [/input-8, 166] [/input-8, 246] [/input-8, 166] [/input, 983] [/input-8, 246] 
pruning_in_iteration open status: False
ratio of positive domain = 4272 / 32768 = 0.13037109375
pruning-in-iteration extra time: 0.00027251243591308594
Time: prepare 0.9374    bound 1.3155    transfer 0.3746    finalize 0.9451    func 3.5746    
Accumulated time: func 26.0402    prepare 7.6732    bound 12.3102    transfer 3.3480    finalize 2.6849    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 92254
Time: pickout 0.3147    decision 2.4557    set_bounds 0.7122    solve 3.5827    add 0.1766    
Accumulated time: pickout 2.3762    decision 17.0306    set_bounds 9.9108    solve 26.1106    add 1.0611    
Current (lb-rhs): -0.1230553388595581
240943 domains visited
Cumulative time: 57.158421754837036

BaB round 18
batch: 16384
splitting decisions: 
split level 0: [/input-8, 166] [/input-8, 1182] [/input-8, 1182] [/input-8, 1590] [/input-8, 595] [/input-8, 595] [/input-8, 166] [/input-8, 166] [/input-8, 1182] [/input-8, 1590] 
pruning_in_iteration open status: False
ratio of positive domain = 4352 / 32768 = 0.1328125
pruning-in-iteration extra time: 0.0002262592315673828
Time: prepare 0.9233    bound 1.3180    transfer 0.3776    finalize 0.2280    func 2.8492    
Accumulated time: func 28.8894    prepare 8.5971    bound 13.6282    transfer 3.7257    finalize 2.9129    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 104163
Time: pickout 0.3384    decision 1.6831    set_bounds 1.5593    solve 2.8583    add 0.1019    
Accumulated time: pickout 2.7146    decision 18.7137    set_bounds 11.4701    solve 28.9689    add 1.1630    
Current (lb-rhs): -0.1230553388595581
269236 domains visited
Cumulative time: 63.76566457748413

BaB round 19
batch: 16384
splitting decisions: 
split level 0: [/input-8, 166] [/input, 3259] [/input-8, 1590] [/input-8, 246] [/input, 949] [/input-8, 1590] [/input, 3259] [/input-8, 246] [/input, 948] [/input-8, 1805] 
pruning_in_iteration open status: False
ratio of positive domain = 4049 / 32768 = 0.123565673828125
pruning-in-iteration extra time: 0.0002238750457763672
Time: prepare 0.8892    bound 1.3137    transfer 0.3772    finalize 0.2287    func 2.8114    
Accumulated time: func 31.7009    prepare 9.4868    bound 14.9419    transfer 4.1029    finalize 3.1416    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 116363
Time: pickout 0.3298    decision 1.6922    set_bounds 1.6336    solve 2.8201    add 0.1036    
Accumulated time: pickout 3.0444    decision 20.4059    set_bounds 13.1037    solve 31.7890    add 1.2666    
Current (lb-rhs): -0.1230553388595581
297820 domains visited
Cumulative time: 70.40938711166382

BaB round 20
batch: 16384
splitting decisions: 
split level 0: [/input-8, 246] [/input-8, 589] [/input, 988] [/input-8, 1182] [/input-8, 595] [/input-8, 1372] [/input, 3259] [/input-8, 1182] [/input-8, 1590] [/input, 983] 
pruning_in_iteration open status: False
ratio of positive domain = 3728 / 32768 = 0.11376953125
pruning-in-iteration extra time: 0.00023293495178222656
Time: prepare 0.8944    bound 1.3147    transfer 0.3739    finalize 0.2277    func 2.8128    
Accumulated time: func 34.5136    prepare 10.3815    bound 16.2566    transfer 4.4768    finalize 3.3694    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 128893
Time: pickout 0.3284    decision 2.6557    set_bounds 0.7629    solve 2.8212    add 0.1080    
Accumulated time: pickout 3.3727    decision 23.0616    set_bounds 13.8666    solve 34.6101    add 1.3746    
Current (lb-rhs): -0.1230553388595581
326734 domains visited
Cumulative time: 77.1480143070221

BaB round 21
batch: 16384
splitting decisions: 
split level 0: [/input, 948] [/input, 988] [/input, 972] [/input-8, 595] [/input-8, 595] [/input-8, 1590] [/input, 983] [/input, 988] [/input-8, 1613] [/input, 988] 
pruning_in_iteration open status: False
ratio of positive domain = 3851 / 32768 = 0.117523193359375
pruning-in-iteration extra time: 0.00024271011352539062
Time: prepare 0.9201    bound 1.3146    transfer 0.3721    finalize 0.2230    func 2.8314    
Accumulated time: func 37.3451    prepare 11.3020    bound 17.5711    transfer 4.8489    finalize 3.5924    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 141291
Time: pickout 0.3345    decision 2.5202    set_bounds 0.7209    solve 2.8389    add 0.1041    
Accumulated time: pickout 3.7073    decision 25.5818    set_bounds 14.5875    solve 37.4491    add 1.4787    
Current (lb-rhs): -0.1230553388595581
355516 domains visited
Cumulative time: 83.72696876525879

BaB round 22
batch: 16384
splitting decisions: 
split level 0: [/input-8, 166] [/input, 3259] [/input, 949] [/input-8, 166] [/input-8, 1622] [/input, 949] [/input, 3564] [/input-8, 166] [/input, 924] [/input, 3257] 
pruning_in_iteration open status: False
ratio of positive domain = 3413 / 32768 = 0.104156494140625
pruning-in-iteration extra time: 0.00024700164794921875
Time: prepare 0.8790    bound 1.3150    transfer 0.3732    finalize 0.2256    func 2.7953    
Accumulated time: func 40.1403    prepare 12.1814    bound 18.8862    transfer 5.2222    finalize 3.8180    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 154152
Time: pickout 0.3440    decision 2.6376    set_bounds 0.7039    solve 2.8026    add 0.1136    
Accumulated time: pickout 4.0513    decision 28.2194    set_bounds 15.2914    solve 40.2516    add 1.5923    
Current (lb-rhs): -0.1230553388595581
384761 domains visited
Cumulative time: 90.40230011940002

BaB round 23
batch: 16384
splitting decisions: 
split level 0: [/input, 3564] [/input-8, 1804] [/input, 3563] [/input, 949] [/input, 3257] [/input, 3257] [/input-8, 595] [/input, 2152] [/input, 2714] [/input-8, 246] 
pruning_in_iteration open status: False
ratio of positive domain = 3655 / 32768 = 0.111541748046875
pruning-in-iteration extra time: 0.00023937225341796875
Time: prepare 0.9142    bound 1.3163    transfer 0.3715    finalize 0.2370    func 2.8414    
Accumulated time: func 42.9818    prepare 13.0960    bound 20.2025    transfer 5.5937    finalize 4.0549    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 166738
Time: pickout 0.3617    decision 1.6843    set_bounds 1.9736    solve 2.8498    add 0.1186    
Accumulated time: pickout 4.4130    decision 29.9037    set_bounds 17.2650    solve 43.1014    add 1.7109    
Current (lb-rhs): -0.1230553388595581
413731 domains visited
Cumulative time: 97.46130537986755

BaB round 24
batch: 16384
splitting decisions: 
split level 0: [/input, 972] [/input-8, 166] [/input, 949] [/input-8, 246] [/input, 1006] [/input, 1006] [/input, 1006] [/input, 949] [/input-8, 1182] [/input, 1006] 
pruning_in_iteration open status: False
ratio of positive domain = 3600 / 32768 = 0.10986328125
pruning-in-iteration extra time: 0.00023555755615234375
Time: prepare 0.8808    bound 1.3154    transfer 0.3705    finalize 0.2285    func 2.7967    
Accumulated time: func 45.7784    prepare 13.9773    bound 21.5179    transfer 5.9642    finalize 4.2834    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 179383
Time: pickout 0.3507    decision 1.6820    set_bounds 2.1061    solve 2.8053    add 0.1138    
Accumulated time: pickout 4.7637    decision 31.5857    set_bounds 19.3711    solve 45.9067    add 1.8247    
Current (lb-rhs): -0.1230553388595581
442760 domains visited
Cumulative time: 104.58411931991577

BaB round 25
batch: 16384
splitting decisions: 
split level 0: [/input, 3563] [/input-8, 1182] [/input, 3563] [/input-8, 1804] [/input, 3259] [/input-8, 1182] [/input-8, 1182] [/input, 983] [/input, 983] [/input, 972] 
pruning_in_iteration open status: False
ratio of positive domain = 3802 / 32768 = 0.11602783203125
pruning-in-iteration extra time: 0.0002574920654296875
Time: prepare 0.8972    bound 1.3154    transfer 0.3730    finalize 0.2402    func 2.8277    
Accumulated time: func 48.6062    prepare 14.8749    bound 22.8333    transfer 6.3372    finalize 4.5236    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 191812
Time: pickout 0.3488    decision 1.6801    set_bounds 0.6980    solve 4.3617    add 0.1300    
Accumulated time: pickout 5.1125    decision 33.2658    set_bounds 20.0692    solve 50.2684    add 1.9547    
Current (lb-rhs): -0.1230553388595581
471573 domains visited
Cumulative time: 111.86522364616394

BaB round 26
batch: 16384
splitting decisions: 
split level 0: [/input, 2120] [/input-8, 916] [/input, 2780] [/input, 2764] [/input, 3292] [/input-8, 916] [/input, 2780] [/input, 3292] [/input-8, 916] [/input, 2120] 
pruning_in_iteration open status: False
ratio of positive domain = 3754 / 32768 = 0.11456298828125
pruning-in-iteration extra time: 0.00023365020751953125
Time: prepare 0.8757    bound 1.3138    transfer 0.3734    finalize 0.2458    func 2.8100    
Accumulated time: func 51.4162    prepare 15.7510    bound 24.1470    transfer 6.7106    finalize 4.7694    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 204296
Time: pickout 0.3365    decision 1.6932    set_bounds 0.7093    solve 2.8186    add 0.1252    
Accumulated time: pickout 5.4490    decision 34.9590    set_bounds 20.7785    solve 53.0870    add 2.0799    
Current (lb-rhs): -0.1230553388595581
500441 domains visited
Cumulative time: 117.6184561252594

BaB round 27
batch: 16384
splitting decisions: 
split level 0: [/input, 3292] [/input, 3292] [/input, 2120] [/input, 3292] [/input, 2152] [/input, 2152] [/input, 2152] [/input, 2152] [/input, 2120] [/input, 3292] 
pruning_in_iteration open status: False
ratio of positive domain = 3645 / 32768 = 0.111236572265625
pruning-in-iteration extra time: 0.0002357959747314453
Time: prepare 0.8841    bound 1.3193    transfer 0.3721    finalize 0.2287    func 2.8059    
Accumulated time: func 54.2221    prepare 16.6354    bound 25.4663    transfer 7.0828    finalize 4.9981    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 216881
Time: pickout 0.3467    decision 3.3668    set_bounds 0.6847    solve 2.8130    add 0.1235    
Accumulated time: pickout 5.7957    decision 38.3257    set_bounds 21.4632    solve 55.9000    add 2.2034    
Current (lb-rhs): -0.1230553388595581
529410 domains visited
Cumulative time: 125.03400087356567

BaB round 28
batch: 16384
splitting decisions: 
split level 0: [/input, 949] [/input-8, 1197] [/input, 3563] [/input-8, 1197] [/input, 662] [/input, 420] [/input, 3563] [/input-8, 1197] [/input, 662] [/input, 3563] 
pruning_in_iteration open status: False
ratio of positive domain = 3590 / 32768 = 0.10955810546875
pruning-in-iteration extra time: 0.0002491474151611328
Time: prepare 0.8601    bound 1.3149    transfer 0.3725    finalize 2.0100    func 4.5601    
Accumulated time: func 58.7822    prepare 17.4958    bound 26.7812    transfer 7.4553    finalize 7.0080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 229542
Time: pickout 0.3556    decision 1.6941    set_bounds 0.7213    solve 4.5672    add 0.2398    
Accumulated time: pickout 6.1513    decision 40.0198    set_bounds 22.1845    solve 60.4672    add 2.4432    
Current (lb-rhs): -0.1230553388595581
558455 domains visited
Cumulative time: 132.70387434959412

BaB round 29
batch: 16384
splitting decisions: 
split level 0: [/input, 3292] [/input, 3292] [/input, 3292] [/input, 963] [/input, 963] [/input, 3563] [/input, 963] [/input, 3563] [/input, 963] [/input, 3563] 
pruning_in_iteration open status: False
ratio of positive domain = 3648 / 32768 = 0.111328125
pruning-in-iteration extra time: 0.00023818016052246094
Time: prepare 0.8743    bound 1.3159    transfer 0.3694    finalize 0.2391    func 2.8003    
Accumulated time: func 61.5825    prepare 18.3704    bound 28.0971    transfer 7.8247    finalize 7.2472    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 242131
Time: pickout 0.3474    decision 1.6894    set_bounds 0.7080    solve 2.8074    add 0.1189    
Accumulated time: pickout 6.4987    decision 41.7092    set_bounds 22.8924    solve 63.2746    add 2.5621    
Current (lb-rhs): -0.1230553388595581
587428 domains visited
Cumulative time: 138.46178364753723

BaB round 30
batch: 16384
splitting decisions: 
split level 0: [/input, 3563] [/input, 3563] [/input, 3563] [/input, 3563] [/input, 3563] [/input-8, 508] [/input, 3563] [/input, 3563] [/input, 3563] [/input-8, 508] 
pruning_in_iteration open status: False
ratio of positive domain = 3306 / 32768 = 0.10089111328125
pruning-in-iteration extra time: 0.00023412704467773438
Time: prepare 0.8743    bound 1.3176    transfer 0.3740    finalize 0.2475    func 2.8160    
Accumulated time: func 64.3985    prepare 19.2450    bound 29.4147    transfer 8.1986    finalize 7.4947    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 255089
Time: pickout 0.3823    decision 1.7148    set_bounds 2.5967    solve 2.8229    add 0.1319    
Accumulated time: pickout 6.8809    decision 43.4240    set_bounds 25.4891    solve 66.0976    add 2.6940    
Current (lb-rhs): -0.1230553388595581
616770 domains visited
Cumulative time: 146.20648837089539

BaB round 31
batch: 16384
splitting decisions: 
split level 0: [/input, 3563] [/input, 3564] [/input, 3564] [/input, 3564] [/input, 3564] [/input, 3564] [/input, 3564] [/input, 3564] [/input, 3564] [/input, 963] 
pruning_in_iteration open status: False
ratio of positive domain = 2922 / 32768 = 0.08917236328125
pruning-in-iteration extra time: 0.0002753734588623047
Time: prepare 0.8923    bound 1.3182    transfer 0.3788    finalize 0.2671    func 2.8581    
Accumulated time: func 67.2566    prepare 20.1377    bound 30.7329    transfer 8.5775    finalize 7.7618    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 268432
Time: pickout 0.3983    decision 1.7148    set_bounds 0.7411    solve 2.8658    add 0.2052    
Accumulated time: pickout 7.2792    decision 45.1389    set_bounds 26.2302    solve 68.9634    add 2.8992    
Current (lb-rhs): -0.1230553388595581
646497 domains visited
Cumulative time: 152.23658990859985

BaB round 32
batch: 16384
splitting decisions: 
split level 0: [/input, 972] [/input, 972] [/input, 972] [/input-8, 1597] [/input-8, 1597] [/input, 972] [/input, 972] [/input, 972] [/input, 972] [/input, 963] 
pruning_in_iteration open status: False
ratio of positive domain = 3105 / 32768 = 0.094757080078125
pruning-in-iteration extra time: 0.0002727508544921875
Time: prepare 0.9472    bound 1.3166    transfer 0.3761    finalize 0.2581    func 2.9002    
Accumulated time: func 70.1568    prepare 21.0852    bound 32.0495    transfer 8.9536    finalize 8.0198    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 281585
Time: pickout 0.4052    decision 3.8295    set_bounds 0.7205    solve 2.9078    add 0.1264    
Accumulated time: pickout 7.6844    decision 48.9684    set_bounds 26.9507    solve 71.8712    add 3.0256    
Current (lb-rhs): -0.1230553388595581
676034 domains visited
Cumulative time: 160.3291449546814

BaB round 33
batch: 16384
splitting decisions: 
split level 0: [/input, 963] [/input, 3563] [/input, 963] [/input-8, 951] [/input, 963] [/input, 963] [/input, 963] [/input, 963] [/input-8, 508] [/input, 963] 
pruning_in_iteration open status: False
ratio of positive domain = 2736 / 32768 = 0.08349609375
pruning-in-iteration extra time: 0.00023603439331054688
Time: prepare 0.8768    bound 1.3151    transfer 0.3755    finalize 2.5183    func 5.0872    
Accumulated time: func 75.2440    prepare 21.9623    bound 33.3646    transfer 9.3291    finalize 10.5381    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 295128
Time: pickout 0.3874    decision 1.7271    set_bounds 0.7274    solve 5.1002    add 0.2537    
Accumulated time: pickout 8.0718    decision 50.6955    set_bounds 27.6781    solve 76.9714    add 3.2793    
Current (lb-rhs): -0.1230553388595581
705961 domains visited
Cumulative time: 168.6202473640442

BaB round 34
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1805] [/input-8, 1805] [/input, 3563] [/input-8, 508] [/input, 948] [/input-8, 508] [/input, 3563] [/input-8, 508] [/input-8, 1805] [/input, 420] 
pruning_in_iteration open status: False
ratio of positive domain = 2632 / 32768 = 0.080322265625
pruning-in-iteration extra time: 0.00023436546325683594
Time: prepare 0.9304    bound 1.3158    transfer 0.3781    finalize 0.2710    func 2.8973    
Accumulated time: func 78.1413    prepare 22.8932    bound 34.6805    transfer 9.7072    finalize 10.8091    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 308758
Time: pickout 0.3913    decision 1.7186    set_bounds 0.7156    solve 2.9061    add 0.1331    
Accumulated time: pickout 8.4631    decision 52.4141    set_bounds 28.3936    solve 79.8775    add 3.4124    
Current (lb-rhs): -0.1230553388595581
735975 domains visited
Cumulative time: 174.57610034942627

BaB round 35
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] [/input-8, 1805] 
pruning_in_iteration open status: False
ratio of positive domain = 3044 / 32768 = 0.0928955078125
pruning-in-iteration extra time: 0.00019979476928710938
Time: prepare 0.9140    bound 1.3158    transfer 0.3767    finalize 2.7146    func 5.3224    
Accumulated time: func 83.4637    prepare 23.8076    bound 35.9963    transfer 10.0839    finalize 13.5237    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 321956
Time: pickout 0.4006    decision 1.7206    set_bounds 0.7102    solve 5.3297    add 0.1343    
Accumulated time: pickout 8.8637    decision 54.1347    set_bounds 29.1039    solve 85.2073    add 3.5467    
Current (lb-rhs): -0.1230553388595581
765557 domains visited
Cumulative time: 182.97649431228638

BaB round 36
batch: 16384
splitting decisions: 
split level 0: [/input, 963] [/input-8, 508] [/input-8, 508] [/input-8, 508] [/input-8, 508] [/input-8, 508] [/input-8, 508] [/input-8, 508] [/input-8, 508] [/input, 2152] 
pruning_in_iteration open status: False
ratio of positive domain = 3167 / 32768 = 0.096649169921875
pruning-in-iteration extra time: 0.00023937225341796875
Time: prepare 0.8755    bound 1.3179    transfer 0.3800    finalize 0.2580    func 2.8331    
Accumulated time: func 86.2968    prepare 24.6834    bound 37.3142    transfer 10.4640    finalize 13.7817    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 335060
Time: pickout 0.4001    decision 1.7257    set_bounds 0.7068    solve 2.8402    add 0.1883    
Accumulated time: pickout 9.2638    decision 55.8604    set_bounds 29.8107    solve 88.0474    add 3.7350    
Current (lb-rhs): -0.1230553388595581
795045 domains visited
Cumulative time: 188.93482184410095

BaB round 37
batch: 16384
splitting decisions: 
split level 0: [/input, 988] [/input-8, 1197] [/input-8, 508] [/input-8, 1597] [/input-8, 508] [/input-8, 1197] [/input-8, 508] [/input, 3563] [/input-8, 508] [/input, 988] 
pruning_in_iteration open status: False
ratio of positive domain = 4060 / 32768 = 0.1239013671875
pruning-in-iteration extra time: 0.00022077560424804688
Time: prepare 0.8840    bound 1.3164    transfer 0.3745    finalize 2.9280    func 5.5049    
Accumulated time: func 91.8017    prepare 25.5677    bound 38.6306    transfer 10.8384    finalize 16.7097    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 347160
Time: pickout 0.4329    decision 1.7268    set_bounds 0.7010    solve 5.5122    add 0.2425    
Accumulated time: pickout 9.6967    decision 57.5872    set_bounds 30.5117    solve 93.5596    add 3.9774    
Current (lb-rhs): -0.1230553388595581
823529 domains visited
Cumulative time: 197.6489815711975

BaB round 38
batch: 16384
splitting decisions: 
split level 0: [/input, 2765] [/input, 2765] [/input, 2121] [/input-8, 508] [/input, 2765] [/input, 2765] [/input, 661] [/input-8, 508] [/input, 661] [/input, 922] 
pruning_in_iteration open status: False
ratio of positive domain = 5114 / 32768 = 0.15606689453125
pruning-in-iteration extra time: 0.00023293495178222656
Time: prepare 0.8954    bound 1.3175    transfer 0.3769    finalize 0.2563    func 2.8475    
Accumulated time: func 94.6492    prepare 26.4636    bound 39.9481    transfer 11.2154    finalize 16.9660    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12306 (18), -0.12071 (18), -0.12011 (18), -0.12011 (18), -0.11878 (18), -0.11855 (18), -0.11840 (18), -0.11826 (18), -0.11802 (18), -0.11796 (18), -0.11785 (18), -0.11780 (18), -0.11723 (18), -0.11689 (18), -0.11682 (18), -0.11641 (20), -0.11636 (18), -0.11609 (18), -0.11605 (18), -0.11588 (18), 
Length of domains: 358122
Time: pickout 0.3920    decision 1.7344    set_bounds 0.7374    solve 2.8560    add 0.1282    
Accumulated time: pickout 10.0887    decision 59.3216    set_bounds 31.2490    solve 96.4156    add 4.1056    
Current (lb-rhs): -0.1230553388595581
850875 domains visited
Time out!!!!!!!!
Result: unknown in 207.4617 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
         -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 288, 1, 674] with unstable size 287 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 32, 1, 674] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [287]; unstable size 287; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 32, 1, 287] with unstable size 31 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 287] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [31]; unstable size 31; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 31] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.81797123, -0.16427088,  0.28392172, -0.02352804,  0.05720687,
          0.13988936,  0.34796596,  2.02355766, -0.78494501]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
         -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.87it/s]100%|██████████| 1/1 [00:00<00:00,  8.86it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-20.02352142, -19.11580658, -19.11502075, -18.61793518, -18.98342514,
          -19.01864624, -17.76090240, -19.74974632, -21.62246895, -18.24372292],
         [-20.02352142, -19.11580658, -19.11502075, -18.61793518, -18.98342514,
          -19.01864624, -17.76090240, -19.74974632, -21.62246895, -18.24372292]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.35490417, 0.85703278, 0.48282051]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1161 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 3.67546010017395
alpha/beta optimization time: 1.118145227432251
initial alpha-crown bounds: tensor([[ 0.93886751,  0.00690460,  0.35141206,  0.04002142,  0.13587189,
          0.21446025,  0.44983989,  2.16908240, -0.63100004]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6310000419616699
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.7067835330963
Verifying property 0 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9388675093650818.

Properties batch 1, size 1
Remaining timeout: 198.56137681007385
Verifying property 1 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.00690460205078125.

Properties batch 2, size 1
Remaining timeout: 198.45371842384338
Verifying property 2 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3514120578765869.

Properties batch 3, size 1
Remaining timeout: 198.35079503059387
Verifying property 3 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.040021419525146484.

Properties batch 4, size 1
Remaining timeout: 198.24837684631348
Verifying property 4 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.13587188720703125.

Properties batch 5, size 1
Remaining timeout: 198.1459720134735
Verifying property 5 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.21446025371551514.

Properties batch 6, size 1
Remaining timeout: 198.0436851978302
Verifying property 6 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.44983989000320435.

Properties batch 7, size 1
Remaining timeout: 197.92049050331116
Verifying property 7 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1690824031829834.

Properties batch 8, size 1
Remaining timeout: 197.8139672279358
Verifying property 8 with 1 instances.
##### Instance 199 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.63100004]], device='cuda:0') need to verify.
Model prediction is: tensor([-19.63621330, -19.31394958, -18.21076202, -17.92309380, -18.10323524,
        -18.31404495, -16.63964081, -19.00939178, -21.36870193, -18.44220543],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.63100004]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 674
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 282
Node /15 input 0: size torch.Size([100]) unstable 31
-----------------
# of unstable neurons: 987
-----------------

BaB round 1
batch: 1
splitting decisions: 
split level 0: [/input-12, 72] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 20] 
split level 3: [/input-12, 7] 
split level 4: [/input-12, 86] 
split level 5: [/input-12, 32] 
split level 6: [/input-8, 868] 
split level 7: [/input-12, 92] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.004487514495849609
Time: prepare 0.0030    bound 0.1116    transfer 0.0027    finalize 0.0016    func 0.1189    
Accumulated time: func 0.1189    prepare 0.0035    bound 0.1116    transfer 0.0027    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05537 (8), -0.05080 (8), 
Length of domains: 2
Time: pickout 0.0003    decision 0.0220    set_bounds 0.0173    solve 0.1189    add 0.0029    
Accumulated time: pickout 0.0003    decision 0.0220    set_bounds 0.0173    solve 0.1189    add 0.0029    
Current (lb-rhs): -0.05536985397338867
2 domains visited
Cumulative time: 0.16565489768981934

BaB round 2
batch: 2
splitting decisions: 
split level 0: [/input-8, 870] [/input-8, 870] 
split level 1: [/input-8, 155] [/input-8, 155] 
split level 2: [/input-8, 877] [/input-8, 877] 
split level 3: [/input-8, 1380] [/input-8, 156] 
split level 4: [/input-8, 156] [/input-8, 1044] 
split level 5: [/input-8, 1044] [/input-8, 1036] 
split level 6: [/input-8, 1370] [/input-8, 1562] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.00543212890625e-05
Time: prepare 0.0048    bound 0.0036    transfer 0.0011    finalize 0.0012    func 0.0108    
Accumulated time: func 0.1296    prepare 0.0086    bound 0.1152    transfer 0.0038    finalize 0.0028    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0223    set_bounds 0.0149    solve 0.0108    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0443    set_bounds 0.0322    solve 0.1297    add 0.0030    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2150583267211914

Result: safe in 2.5618 seconds
############# Summary #############
Final verified acc: 51.0% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 102 , total falsified (unsafe/sat): 85 , timeout: 13
mean time for ALL instances (total 200):14.22084194366295, max time: 219.23646092414856
mean time for verified SAFE instances(total 102): 0.7951666490704405, max time: 15.756534099578857
mean time for verified (SAFE + UNSAFE) instances (total 187): 0.4620590439454757, max time: [2.2007157802581787, 6.162113189697266, 0.045758962631225586, 0.03776097297668457, 0.06318402290344238, 0.07327008247375488, 0.04471421241760254, 0.29589033126831055, 2.323180675506592, 0.07243752479553223, 0.04543805122375488, 0.06340193748474121, 2.4539499282836914, 0.04564189910888672, 0.02078986167907715, 0.05645608901977539, 0.04957413673400879, 0.04484391212463379, 0.048769474029541016, 0.04906296730041504, 2.277930498123169, 0.07376456260681152, 0.05325198173522949, 0.06109905242919922, 0.06662774085998535, 0.042519330978393555, 2.2639622688293457, 0.04918336868286133, 0.06223416328430176, 0.05023360252380371, 2.218546152114868, 0.06601667404174805, 0.07364988327026367, 0.06296229362487793, 2.669139862060547, 2.568532705307007, 0.0577244758605957, 0.04988431930541992, 0.06713438034057617, 0.0606837272644043, 0.07199907302856445, 0.06744146347045898, 0.06324028968811035, 0.03532242774963379, 0.0577397346496582, 15.756534099578857, 0.06560182571411133, 0.05075955390930176, 0.06305789947509766, 2.386828660964966, 2.393848180770874, 0.23154163360595703, 0.04474806785583496, 2.3560986518859863, 0.04569578170776367, 0.05881071090698242, 0.05569720268249512, 2.365427017211914, 0.04596400260925293, 0.04386305809020996, 0.06410336494445801, 0.0381627082824707, 0.05486011505126953, 2.3545141220092773, 0.07547426223754883, 0.029999256134033203, 2.394467830657959, 0.04395246505737305, 2.5684585571289062, 0.06616020202636719, 0.06946659088134766, 0.06432652473449707, 0.06569051742553711, 0.04547715187072754, 0.06881380081176758, 0.059801340103149414, 0.0643918514251709, 0.04982876777648926, 0.04975771903991699, 3.3094482421875, 0.036103248596191406, 2.2864911556243896, 0.054121971130371094, 0.045671701431274414, 0.05900311470031738, 0.06171751022338867, 0.0399775505065918, 0.43172407150268555, 0.039629459381103516, 0.030553817749023438, 0.03537464141845703, 2.4795479774475098, 0.05578780174255371, 2.6241371631622314, 0.05051898956298828, 2.653693914413452, 2.4765658378601074, 0.06029081344604492, 0.06902337074279785, 0.03614091873168945, 0.029752492904663086, 2.561760902404785]
mean time for verified SAFE + TIMEOUT instances (total 115): 24.68583032981209, max time: [209.86107349395752, 211.5666265487671, 211.50277423858643, 213.1840991973877, 204.9435589313507, 214.3829219341278, 212.09181261062622, 215.30920696258545, 212.55219268798828, 214.37490391731262, 219.23646092414856, 211.29617857933044, 207.46167969703674] 
mean time for verified UNSAFE instances (total 85): 0.062329917795517865, max time: 0.1149587631225586
safe-incomplete (total 79), index: [0, 7, 8, 11, 14, 17, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 37, 39, 40, 41, 42, 47, 49, 51, 52, 55, 60, 62, 68, 69, 70, 71, 73, 74, 75, 79, 81, 85, 86, 89, 98, 103, 107, 109, 110, 114, 115, 116, 117, 118, 121, 131, 133, 136, 139, 140, 142, 144, 146, 147, 148, 153, 157, 159, 161, 164, 166, 168, 171, 175, 177, 179, 180, 182, 186, 190, 192, 193, 197]
unsafe-pgd (total 85), index: [1, 3, 4, 5, 6, 9, 10, 12, 15, 16, 21, 25, 29, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 56, 58, 61, 63, 65, 72, 78, 80, 82, 84, 87, 88, 90, 91, 92, 94, 95, 96, 99, 100, 101, 102, 105, 106, 108, 112, 113, 119, 122, 123, 124, 125, 126, 128, 129, 130, 134, 138, 141, 143, 145, 149, 150, 151, 152, 155, 156, 163, 165, 167, 169, 170, 173, 174, 176, 178, 183, 184, 188, 194, 195, 196]
safe (total 23), index: [2, 19, 24, 38, 48, 54, 64, 67, 83, 93, 97, 104, 111, 120, 132, 135, 158, 160, 181, 185, 187, 189, 199]
unknown (total 13), index: [13, 57, 59, 66, 76, 77, 127, 137, 154, 162, 172, 191, 198]
