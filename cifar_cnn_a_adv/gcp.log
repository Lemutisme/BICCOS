Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: patches
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  verify_onnxruntime_output: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  prepare_only: false
  complete_verifier: bab
  enable_incomplete_verification: true
  csv_name: null
  results_file: ablation_results/cifar_cnn_a_adv/gcp.out
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  buffer_has_batchdim: false
  save_output: false
  output_file: out.pkl
  return_optimized_model: false
model:
  name: cnn_4layer_adv
  path: models/sdp/cifar_cnn_a_adv.model
  onnx_path: null
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: null
  input_shape: null
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: []
  onnx_vnnlib_joint_optimization_flags: none
  check_optimized: false
  flatten_final_output: false
  optimize_graph: null
  with_jacobian: false
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: CIFAR_SDP
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: 0.00784313725
  epsilon_min: 0.0
  vnnlib_path: null
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 4096
  auto_enlarge_batch_size: true
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  optimize_disjuncts_separately: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
    relu_option: adaptive
    compare_crown_with_ibp: false
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    disable_optimization: []
    max_time: 1.0
  invprop:
    apply_output_constraints_to: []
    tighten_input_bounds: false
    best_of_oc_and_no_oc: false
    directly_optimize: []
    oc_lr: 0.1
    share_gammas: false
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 20
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    max_dim: 10000
    reset_threshold: 1.0
  intermediate_refinement:
    enabled: false
    batch_size: 10
    opt_coeffs: false
    opt_bias: false
    lr: 0.05
    layers: [-1]
    max_domains: 1000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    unstable_neuron_threshold: 0
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
    topk_filter: 1.0
    sliding_window: -1
    extra_constraint: false
    refine_neuron_timeout_increasement: 0
    timeout_neuron_percentage: 0.3
    remaining_timeout_threshold: 1
    remove_unstable_neurons: false
    lp_solver: mip
    output_cut: false
bab:
  initial_max_domains: 1
  backing_up_max_domain: null
  max_domains: .inf
  decision_thresh: 0
  timeout: 200
  timeout_scale: 1
  max_iterations: -1
  override_timeout: null
  get_upper_bound: false
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: false
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  tree_traversal: depth_first
  cut:
    enabled: true
    cuts_path: /tmp/abcrown_cuts_18112
    implication: false
    bab_cut: true
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 0.99
    iteration: 200
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.05
    number_cuts: 500
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: true
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
    _tmp_cuts: null
    fixed_cuts: false
    add_implied_cuts: false
    add_input_cuts: false
    biccos:
      enabled: false
      auto_param: true
      constraint_strengthening: true
      recursively_strengthening: false
      merge_cut_enabled: false
      fast_inference_enabled: false
      drop_ratio: 0.5
      max_infer_iter: 40
      heuristic: neuron_influence_score
      save_cuts: false
      multi_tree_branching:
        enabled: false
        restore_best_tree: false
        keep_n_best_domains: 50
        target_batch_size: 200
        iterations: 5
  branching:
    method: kfsb
    candidates: 3
    reduceop: max
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      filter: false
      filter_beta: false
      filter_clamp: false
      filter_batch_size: 10000
      filter_iterations: 25
      relu_only: false
      loose_tanh_threshold: null
      dynamic_bbps: false
      dynamic_options: [uniform, three_left, three_right]
      branching_point_node: ''
      branching_point_db: []
    input_split:
      enable_clip_domains: false
      split_hint: null
      reorder_bab: false
      enable: false
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_sum: false
      sb_primary_spec: null
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_iters: 1000000000.0
      bf_batch_size: 100000
      bf_zero_crossing_score: false
      touch_zero_score: 0
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
      sb_coeff_thresh: 0.001
      sort_index: null
      sort_descending: true
      show_progress: false
      presplit_domains: null
      skip_getting_worst_domain: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: middle
  pgd_steps: 100
  pgd_restarts: 50
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_alpha_scale: false
  pgd_loss_mode: null
  pgd_restart_when_stuck: false
  enable_mip_attack: false
  adv_saver: default_adv_saver
  adv_verifier: default_adv_verifier
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    enabled: auto
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0
  print_verbose_decisions: false
  biccos_mip_sanity_check: false
  sanity_check: 0
  z_split_enabled: false

Experiments at Wed Oct 30 16:29:00 2024 on w23g0003.hpc.itc.rwth-aachen.de
Sequential(
  (0): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (1): ReLU()
  (2): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  (3): ReLU()
  (4): Flatten(start_dim=1, end_dim=-1)
  (5): Linear(in_features=2048, out_features=100, bias=True)
  (6): ReLU()
  (7): Linear(in_features=100, out_features=10, bias=True)
)
Parameters:
  0.weight: shape torch.Size([16, 3, 4, 4])
  0.bias: shape torch.Size([16])
  2.weight: shape torch.Size([32, 16, 4, 4])
  2.bias: shape torch.Size([32])
  5.weight: shape torch.Size([100, 2048])
  5.bias: shape torch.Size([100])
  7.weight: shape torch.Size([10, 100])
  7.bias: shape torch.Size([10])
############################
Sampled data loaded. Data already preprocessed!
Shape: torch.Size([200, 3, 32, 32]) torch.Size([200]) torch.Size([200])
X range: tensor(2.12560368) tensor(-1.98888886) tensor(-0.01308715)
############################
Internal results will be saved to ablation_results/cifar_cnn_a_adv/gcp.out.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.60389853, -4.03890705, -0.96637481, -1.08776557, -1.28065956,
         -1.57759106, -2.01748729, -1.63907158, -4.69097900, -3.85279989]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [218]; unstable size 218; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 98, 1, 218] with unstable size 97 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 218] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 218] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 97] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.15867960,  2.57397413, -0.32336396, -0.12450504,  0.40432653,
          0.56075501,  0.24401039,  3.10249233,  2.30172920]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.60389853, -4.03890705, -0.96637481, -1.08776557, -1.28065956,
         -1.57759106, -2.01748729, -1.63907158, -4.69097900, -3.85279989]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.60389853, -4.03890657, -0.96637493, -1.08776581, -1.28065979,
          -1.57759106, -2.01748776, -1.63907230, -4.69097900, -3.85279989],
         [-2.60389853, -4.03890657, -0.96637493, -1.08776581, -1.28065979,
          -1.57759106, -2.01748776, -1.63907230, -4.69097900, -3.85279989]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12139088,  0.19289398]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.97301579, -1.96507931, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.96507931],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.94126987,
            -1.96507931, -1.97301579],
           ...,
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.93236721,
            -1.93236721, -1.96457338],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.95652175,
            -1.95652175, -1.96457338],
           [-1.96457338, -1.95652175, -1.94847023,  ..., -1.96457338,
            -1.96457338, -1.95652175],
           ...,
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.66266882, -1.64767623],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.68515754,
            -1.68515754, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           ...,
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.96507931, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.96507931],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.96507931, -1.97301579, -1.97301579,  ..., -1.94126987,
            -1.96507931, -1.97301579],
           ...,
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.97301579, -1.97301579]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.93236721,
            -1.93236721, -1.96457338],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.95652175,
            -1.95652175, -1.96457338],
           [-1.96457338, -1.95652175, -1.94847023,  ..., -1.96457338,
            -1.96457338, -1.95652175],
           ...,
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.66266882, -1.64767623],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.68515754,
            -1.68515754, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           ...,
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 4.7944 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 1, vnnlib ID: 1 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.91239977,  1.30044675, -7.26831532, -7.87342548, -7.74763012,
         -8.46835899, -6.64607763, -8.08242130, -6.15906239,  1.63948882]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [567]; unstable size 567; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 163, 1, 567] with unstable size 162 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 567] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 567] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [162]; unstable size 162; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 162] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.13653445, -0.81675255,  7.20471907,  7.60528660,  7.75196028,
          8.15055847,  6.22120667,  7.95112419,  6.37312317]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.91239977,  1.30044675, -7.26831532, -7.87342548, -7.74763012,
         -8.46835899, -6.64607763, -8.08242130, -6.15906239,  1.63948882]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.29230642,  1.39088631, -7.69417095, -8.36273766, -8.14110756,
          -8.96644974, -7.15948677, -8.63516712, -6.20971012,  1.18852425]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20236206]]], device='cuda:0')
number of violation:  1
Attack finished in 0.8873 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.9418 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 2, vnnlib ID: 2 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.38900280,  -6.91815758, -13.39404202, -12.50848293, -12.34240627,
         -13.34833145, -12.47480679, -13.81170845, -10.09896183,  -8.65394974]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [799]; unstable size 799; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 799] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 799] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 799] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 219] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.81504011, 4.21952820, 3.42958927, 3.38334274, 4.03887367, 3.68367100,
         4.85273266, 1.66043186, 0.65433025]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0550 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 3, vnnlib ID: 3 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
          -6.85573816, -10.31254101,  -5.30293274, -15.13275623, -13.36650562]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [471]; unstable size 471; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 471] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 471] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 471] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 208] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.96806812,  7.51881886,  0.34542710,  0.43790013, -0.23603088,
          3.05391574, -1.87563014,  7.75412464,  5.88288021]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
          -6.85573816, -10.31254101,  -5.30293274, -15.13275623, -13.36650562]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
           -6.85573816, -10.31254101,  -5.30293274, -15.13275719, -13.36650467],
         [-12.38513088, -15.12822247,  -7.38964939,  -7.50558901,  -6.26222038,
           -6.85573816, -10.31254101,  -5.30293274, -15.13275719, -13.36650467]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.59351778, -0.95928764]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]],


         [[[ 0.28095245, -0.35396814, -0.21111101,  ..., -0.43333322,
            -0.76666665,  0.32857150],
           [-1.11587298, -0.44920623, -0.59206349,  ..., -0.41746020,
            -1.09999990, -1.02063489],
           [-1.30634916, -0.59206349, -0.86190474,  ..., -0.06825387,
            -0.81428570, -1.17936504],
           ...,
           [ 0.94761908,  1.24920666,  1.42380977,  ...,  1.45555580,
             1.15396857,  0.80476195],
           [ 0.77301592,  0.97936511,  1.23333359,  ...,  1.18571460,
             1.13809550,  0.86825401],
           [ 0.85238099,  0.24920642,  0.50317466,  ...,  0.86825401,
             0.86825401,  0.99523818]],

          [[ 0.28985518, -0.33816412, -0.19323659,  ..., -0.46698871,
            -0.78904986,  0.33816436],
           [-1.11111104, -0.41867942, -0.54750401,  ..., -0.48309177,
            -1.12721407, -1.03059578],
           [-1.28824472, -0.54750401, -0.80515295,  ..., -0.17713353,
            -0.86956519, -1.17552328],
           ...,
           [ 0.93397754,  1.06280196,  1.20772982,  ...,  1.33655429,
             1.14331758,  0.83735919],
           [ 0.78904998,  0.85346222,  1.04669893,  ...,  1.14331758,
             1.19162667,  0.98228669],
           [ 0.88566834,  0.17713377,  0.35426742,  ...,  0.83735919,
             0.90177143,  1.07890511]],

          [[ 0.40629703, -0.26836565, -0.22338814,  ..., -0.35832080,
            -0.55322337,  0.48125952],
           [-0.92803597, -0.37331331, -0.56821585,  ..., -0.41829082,
            -0.91304344, -0.80809593],
           [-1.10794616, -0.53823084, -0.85307342,  ..., -0.19340314,
            -0.74812591, -1.01799107],
           ...,
           [ 0.28635699,  0.34632701,  0.52623707,  ...,  0.51124454,
             0.31634200,  0.09145443],
           [ 0.36131951,  0.34632701,  0.55622208,  ...,  0.27136448,
             0.34632701,  0.24137947],
           [ 0.69115460, -0.01349309,  0.18140946,  ...,  0.37631202,
             0.48125952,  0.75112462]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0557 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 4, vnnlib ID: 4 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
          -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [543]; unstable size 543; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 225, 1, 543] with unstable size 224 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 543] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 543] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [224]; unstable size 224; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 224] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 224] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20494175,  3.45831871, -1.40828776,  1.23128557,  0.91527987,
          0.49897861,  1.02173996,  3.54240799,  2.59704590]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
          -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.68809223, -12.13025570,  -6.63767338,  -9.10205269,  -6.98852253,
           -8.95999241,  -8.94991684,  -9.34213543, -12.00477028, -11.17362881]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.35084915]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.45555562,  0.47142863,  0.50317466,  ...,  0.23333341,
             0.16984135, -0.06825387],
           [ 0.37619054,  0.55079371,  0.91587305,  ...,  0.39206356,
             0.59841275,  0.21746039],
           [ 0.47142863,  0.64603180,  0.70952386,  ...,  0.58253974,
             0.85238099,  0.82063496],
           ...,
           [ 0.32857150,  0.55079371,  0.18571436,  ..., -0.67142856,
            -1.22698402, -1.06825387],
           [ 0.47142863,  0.47142863,  0.21746039,  ..., -0.00476181,
            -1.14761901, -1.44920623],
           [ 0.45555562,  0.15396833, -0.11587292,  ...,  1.04285717,
             0.34444451, -0.54444444]],

          [[ 1.03059590,  1.09500813,  1.19162667,  ...,  1.12721443,
             0.96618366,  0.70853472],
           [ 1.03059590,  1.14331758,  1.28824508,  ...,  1.27214205,
             1.36876035,  0.98228669],
           [ 1.15942061,  1.22383285,  1.23993587,  ...,  1.38486338,
             1.54589403,  1.44927561],
           ...,
           [ 1.07890511,  1.28824508,  0.86956531,  ..., -0.70853460,
            -1.20772946, -0.96618354],
           [ 1.15942061,  1.22383285,  1.03059590,  ..., -0.19323659,
            -1.12721407, -1.33655393],
           [ 1.07890511,  0.93397754,  0.85346222,  ...,  0.99838978,
             0.28985518, -0.43478248]],

          [[ 0.10644694,  0.19640197,  0.42128953,  ..., -0.01349309,
             0.09145443, -0.31334329],
           [ 0.16641696,  0.45127454,  0.94602716,  ...,  0.19640197,
             0.75112462,  0.28635699],
           [ 0.16641696,  0.39130452,  0.48125952,  ...,  0.36131951,
             0.91604215,  1.03598225],
           ...,
           [ 0.06146942,  0.37631202,  0.07646193,  ..., -0.83808094,
            -1.27286363, -1.09295356],
           [ 0.19640197,  0.37631202, -0.11844061,  ..., -0.43328333,
            -1.27286363, -1.42278874],
           [ 0.25637197, -0.14842562, -0.73313338,  ...,  0.82608712,
            -0.02848560, -0.82308841]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0579 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 5, vnnlib ID: 5 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.08061361, -7.35808754, -1.52466714, -0.79548538, -0.38909817,
         -1.03977191, -3.36049914, -3.42065954, -6.66970348, -6.69352865]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [658]; unstable size 658; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 658] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 658] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 658] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 200] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.36226130,  5.20612192,  0.11421609, -0.45663387, -0.35881883,
          1.67416453,  1.85006595,  4.62577057,  5.01755571]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.08061361, -7.35808754, -1.52466714, -0.79548538, -0.38909817,
         -1.03977191, -3.36049914, -3.42065954, -6.66970348, -6.69352865]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-1.72007203, -6.67509556, -1.02529848, -0.02632031, -0.06467843,
          -0.23389345, -2.63078475, -2.87741232, -6.08596230, -5.98822784],
         [-1.72007203, -6.67509556, -1.02529848, -0.02632031, -0.06467843,
          -0.23389345, -2.63078475, -2.87741232, -6.08596230, -5.98822784]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.03835812,  0.16921502]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0122 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0544 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 6, vnnlib ID: 6 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.40164280,  -8.37019825, -13.00969315, -14.79013634, -13.45650959,
         -15.46328926, -15.14051628, -13.42083931,  -9.22426891, -11.21731853]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [529]; unstable size 529; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 529] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 529] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 529] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 192] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.41059279,  2.25627041,  3.81135941,  2.82651424,  4.25359440,
          4.02583885,  2.31334639, -1.35637224,  0.51038718]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.40164280,  -8.37019825, -13.00969315, -14.79013634, -13.45650959,
         -15.46328926, -15.14051628, -13.42083931,  -9.22426891, -11.21731853]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.40164471,  -8.37019730, -13.00969315, -14.79013538, -13.45650864,
          -15.46328926, -15.14051723, -13.42084026,  -9.22426891, -11.21731758],
         [ -9.40164471,  -8.37019730, -13.00969315, -14.79013538, -13.45650864,
          -15.46328926, -15.14051723, -13.42084026,  -9.22426891, -11.21731758]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.03144741, -0.17737579]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]],


         [[[ 0.55079371,  0.96349210,  0.82063496,  ..., -0.19523799,
            -0.21111101, -0.16349196],
           [ 0.21746039,  0.55079371, -0.21111101,  ..., -0.29047608,
            -0.30634910, -0.29047608],
           [ 0.01111121, -0.36984116, -0.40158719,  ..., -0.49682540,
            -0.48095238, -0.43333322],
           ...,
           [-0.62380952, -0.63968253, -0.65555555,  ..., -0.56031746,
            -0.54444444, -0.41746020],
           [-0.60793650, -0.65555555, -0.63968253,  ..., -0.52857143,
            -0.48095238, -0.36984116],
           [-0.56031746, -0.60793650, -0.62380952,  ..., -0.65555555,
            -0.59206349, -0.52857143]],

          [[ 0.61191636,  1.07890511,  0.98228669,  ..., -0.01610294,
            -0.01610294,  0.03220624],
           [ 0.12882459,  0.56360716, -0.12882435,  ..., -0.40257636,
            -0.41867942, -0.40257636],
           [-0.27375188, -0.57971013, -0.54750401,  ..., -1.06280184,
            -1.04669881, -1.01449275],
           ...,
           [-0.46698871, -0.48309177, -0.49919480,  ..., -0.46698871,
            -0.49919480, -0.45088565],
           [-0.45088565, -0.49919480, -0.48309177,  ..., -0.41867942,
            -0.43478248, -0.40257636],
           [-0.43478248, -0.48309177, -0.49919480,  ..., -0.49919480,
            -0.46698871, -0.45088565]],

          [[ 0.87106466,  1.38081002,  1.27586246,  ...,  0.27136448,
             0.24137947,  0.28635699],
           [ 0.30134949,  0.78110963,  0.13643195,  ..., -0.23838064,
            -0.23838064, -0.22338814],
           [-0.17841063, -0.37331331, -0.34332830,  ..., -1.09295356,
            -1.04797614, -0.98800600],
           ...,
           [-1.16791618, -1.18290865, -1.19790113,  ..., -1.15292358,
            -1.18290865, -1.12293863],
           [-1.15292358, -1.19790113, -1.19790113,  ..., -1.13793111,
            -1.12293863, -1.07796109],
           [-1.15292358, -1.18290865, -1.19790113,  ..., -1.22788620,
            -1.19790113, -1.16791618]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0379 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 7, vnnlib ID: 7 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.00835705, -8.96086788, -3.69912124, -5.03624153, -2.68869019,
         -5.63221502, -2.51778221, -6.42361641, -8.76600933, -9.71107197]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [503]; unstable size 503; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 503] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 503] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 503] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 253] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.85433102,  4.63593197,  0.09867144,  1.33992839, -1.07176185,
          1.69816649,  1.94883680,  4.31601477,  5.46722841]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.00835705, -8.96086788, -3.69912124, -5.03624153, -2.68869019,
         -5.63221502, -2.51778221, -6.42361641, -8.76600933, -9.71107197]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.24038744,  -9.28610897,  -3.84454465,  -5.20589828,  -2.66719246,
           -5.68954802,  -3.06507778,  -6.37724495,  -8.96725273, -10.02994823]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.39788532]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0543 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 8, vnnlib ID: 8 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.93469334, -20.12154388, -17.33457947, -19.86049843, -20.21372986,
         -21.25618935, -22.65778542, -22.05707359, -17.64817047, -20.80877304]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [1012]; unstable size 1012; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 127, 1, 1012] with unstable size 126 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 1012] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 1012] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [126]; unstable size 126; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 126] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 126] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.23773289, 2.69126439, 5.14333248, 5.34886742, 6.31123447, 7.75378227,
         7.14196920, 2.92753410, 5.99536991]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0332 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 9, vnnlib ID: 9 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.80179358, -12.46501255,  -6.57853985,  -6.68956470,  -7.61111355,
          -7.23589230,  -7.87289953,  -9.75897789,  -7.54242992, -11.49101162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [483]; unstable size 483; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 483] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 483] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 483] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 223] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.44218934,  3.89411879, -1.74409580, -0.80226827, -0.57978749,
         -0.20545292,  1.59700739, -1.08158219,  2.85933161]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.80179358, -12.46501255,  -6.57853985,  -6.68956470,  -7.61111355,
          -7.23589230,  -7.87289953,  -9.75897789,  -7.54242992, -11.49101162]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.80179310, -12.46501160,  -6.57853985,  -6.68956327,  -7.61111259,
           -7.23589230,  -7.87289858,  -9.75897694,  -7.54242992, -11.49100971],
         [ -7.80179310, -12.46501160,  -6.57853985,  -6.68956327,  -7.61111259,
           -7.23589230,  -7.87289858,  -9.75897694,  -7.54242992, -11.49100971]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56590080, -0.65735245, -0.54632902,  0.37522030,  0.63700628,
           0.30653763]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]],


         [[[-1.73492062, -1.81428576, -1.92539680,  ...,  0.61428577,
             0.56666672,  0.31269848],
           [-1.67142856, -1.81428576, -1.92539680,  ...,  0.66190481,
             0.56666672,  0.29682547],
           [-1.71904767, -1.84603179, -1.92539680,  ...,  0.72539687,
             0.51904768,  0.40793657],
           ...,
           [-1.17936504, -1.41746020, -1.13174593,  ..., -1.38571417,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.13174593,  ..., -1.40158725,
            -1.49682534, -1.38571417],
           [-0.86190474, -0.14761895,  0.74126989,  ..., -1.40158725,
            -1.46507931, -1.40158725]],

          [[-1.15942025, -1.22383249, -1.35265696,  ...,  0.41867965,
             0.32206130,  0.04830930],
           [-1.07890499, -1.22383249, -1.33655393,  ...,  0.48309189,
             0.33816436,  0.04830930],
           [-1.14331722, -1.27214170, -1.35265696,  ...,  0.56360716,
             0.32206130,  0.17713377],
           ...,
           [-0.69243151, -1.06280184, -0.85346210,  ..., -0.88566822,
            -0.95008045, -0.93397743],
           [-0.64412236, -0.78904986,  0.01610318,  ..., -0.77294683,
            -0.88566822, -0.95008045],
           [-0.43478248,  0.01610318,  0.80515307,  ..., -0.82125598,
            -0.90177131, -0.93397743]],

          [[-0.68815589, -0.62818587, -0.41829082,  ...,  0.13643195,
             0.09145443, -0.23838064],
           [-0.59820086, -0.58320838, -0.38830581,  ...,  0.24137947,
             0.12143944, -0.22338814],
           [-0.59820086, -0.56821585, -0.38830581,  ...,  0.37631202,
             0.09145443, -0.10344811],
           ...,
           [ 0.03148442, -0.05847061,  0.16641696,  ...,  0.37631202,
             0.33133450,  0.28635699],
           [-0.08845562, -0.19340314,  0.33133450,  ...,  0.28635699,
             0.22638696,  0.09145443],
           [-0.10344811,  0.09145443,  0.63118458,  ...,  0.28635699,
             0.28635699,  0.16641696]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0737 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 10, vnnlib ID: 10 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.70068169, -10.68916798,  -4.80894661,  -4.48129988,  -7.59597015,
          -3.34438372,  -9.78639984,  -5.25471544,  -8.97214031,  -9.17322254]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [326]; unstable size 326; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 99, 1, 326] with unstable size 98 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 8, 1, 326] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 326] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [98]; unstable size 98; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 8, 1, 98] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 98] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.76745176,  4.58752918, -0.99277103, -1.30379093,  1.80976796,
         -2.48497868,  3.87898970,  2.81910563,  3.04527569]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.70068169, -10.68916798,  -4.80894661,  -4.48129988,  -7.59597015,
          -3.34438372,  -9.78639984,  -5.25471544,  -8.97214031,  -9.17322254]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.70068073, -10.68916893,  -4.80894661,  -4.48130035,  -7.59597015,
           -3.34438372,  -9.78640079,  -5.25471544,  -8.97214031,  -9.17322254],
         [ -8.70068073, -10.68916893,  -4.80894661,  -4.48130035,  -7.59597015,
           -3.34438372,  -9.78640079,  -5.25471544,  -8.97214031,  -9.17322254]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44576883, -0.77341509, -1.91033173]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]],


         [[[-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           [-1.97301579, -1.97301579, -1.97301579,  ..., -1.97301579,
            -1.95714283, -1.92539680],
           ...,
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.89365077,
            -1.90952384, -1.63968253],
           [-1.97301579, -1.97301579, -1.96507931,  ..., -1.96507931,
            -1.95714283, -1.96507931],
           [-1.97301579, -1.97301579, -1.94126987,  ..., -1.97301579,
            -1.97301579, -1.96507931]],

          [[-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           [-1.96457338, -1.96457338, -1.96457338,  ..., -1.96457338,
            -1.96457338, -1.96457338],
           ...,
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.70692432,
            -1.77133656, -1.54589367],
           [-1.96457338, -1.96457338, -1.95652175,  ..., -1.80354273,
            -1.81964576, -1.86795497],
           [-1.96457338, -1.96457338, -1.93236721,  ..., -1.86795497,
            -1.91626418, -1.93236721]],

          [[-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           [-1.69265378, -1.69265378, -1.69265378,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.60269880,
            -1.63268375, -1.39280367],
           [-1.69265378, -1.69265378, -1.68515754,  ..., -1.67766130,
            -1.68515754, -1.69265378],
           [-1.69265378, -1.69265378, -1.66266882,  ..., -1.69265378,
            -1.69265378, -1.69265378]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0439 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 11, vnnlib ID: 11 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
         -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [507]; unstable size 507; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 507] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 507] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 507] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 252] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.93055749,  5.50861359,  2.43715668, -0.28564250,  2.95803738,
          1.64144325,  2.49058819,  4.06993961,  5.13847542]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
         -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.27it/s]100%|██████████| 1/1 [00:00<00:00,  9.26it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.85260201, -9.94958401, -2.69204354, -5.95113659, -2.83771229,
          -6.45710039, -5.35251665, -5.97749758, -8.52292919, -9.41183758]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.14566875]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1105 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.60955047607422
alpha/beta optimization time: 4.0765697956085205
initial alpha-crown bounds: tensor([[ 2.00031996,  5.62875462,  2.49428225, -0.20550334,  3.01036167,
          1.72182679,  2.55286407,  4.16995430,  5.23668957]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20550334453582764
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6128 seconds.
lower bounds for all target labels: [2.000319242477417, 5.628754615783691, 2.4942822456359863, -0.20550334453582764, 3.0103607177734375, 1.721826434135437, 2.5528640747070312, 4.169954299926758, 5.236689567565918]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [3]
start creating model mps for candidates: ['lay/16_3']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=11_spec=3_30215215.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=11_spec=3_30215215.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 137418 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 195.56367564201355
Verifying property 0 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.628754615783691.

Properties batch 1, size 1
Remaining timeout: 195.39487886428833
Verifying property 1 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.236689567565918.

Properties batch 2, size 1
Remaining timeout: 195.30465126037598
Verifying property 2 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.169954299926758.

Properties batch 3, size 1
Remaining timeout: 195.2155258655548
Verifying property 3 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.010361671447754.

Properties batch 4, size 1
Remaining timeout: 195.124849319458
Verifying property 4 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5528640747070312.

Properties batch 5, size 1
Remaining timeout: 195.0363485813141
Verifying property 5 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.4942822456359863.

Properties batch 6, size 1
Remaining timeout: 194.9481725692749
Verifying property 6 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0003199577331543.

Properties batch 7, size 1
Remaining timeout: 194.85393476486206
Verifying property 7 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7218267917633057.

Properties batch 8, size 1
Remaining timeout: 194.76544976234436
Verifying property 8 with 1 instances.
##### Instance 11 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20550334]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.63478470, -9.97276974, -2.42177224, -5.98180294, -3.01294947,
        -6.49992609, -5.35868835, -6.09445810, -8.49534416, -9.48241520],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20550334]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 507
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 252
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 782
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008642673492431641
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 58] 
split level 4: [/input-12, 61] 
split level 5: [/input-12, 4] 
split level 6: [/input-12, 40] 
split level 7: [/input, 393] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.004592180252075195
Time: prepare 0.0031    bound 0.4557    transfer 0.0017    finalize 0.0014    func 0.4621    
Accumulated time: func 0.4621    prepare 0.0036    bound 0.4557    transfer 0.0017    finalize 0.0014    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03249 (8), -0.02878 (8), 
Length of domains: 2
Time: pickout 0.0005    decision 0.2530    set_bounds 0.0164    solve 0.4621    add 0.0268    
Accumulated time: pickout 0.0005    decision 0.2530    set_bounds 0.0164    solve 0.4621    add 0.0268    
Current (lb-rhs): -0.032489776611328125
2 domains visited
Cumulative time: 0.7942678928375244

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 2
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] 
split level 1: [/input, 392] [/input, 377] 
split level 2: [/input-8, 1411] [/input-8, 1411] 
split level 3: [/input-8, 1251] [/input-8, 1251] 
split level 4: [/input-8, 2043] [/input-8, 2043] 
split level 5: [/input, 428] [/input, 378] 
split level 6: [/input, 378] [/input, 428] 
pruning_in_iteration open status: True
ratio of positive domain = 188 / 256 = 0.734375
pruning-in-iteration extra time: 0.004843711853027344
Time: prepare 0.0065    bound 0.1251    transfer 0.0024    finalize 0.0011    func 0.1351    
Accumulated time: func 0.5972    prepare 0.0105    bound 0.5808    transfer 0.0042    finalize 0.0025    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01325 (15), -0.01307 (15), -0.01281 (15), -0.01263 (15), -0.01207 (15), -0.01189 (15), -0.01177 (15), -0.01163 (15), -0.01159 (15), -0.01145 (15), -0.01133 (15), -0.01116 (15), -0.01059 (15), -0.01041 (15), -0.01015 (15), -0.00997 (15), -0.00868 (15), -0.00863 (15), -0.00854 (15), -0.00850 (15), 
Length of domains: 68
Time: pickout 0.0007    decision 0.0212    set_bounds 0.0176    solve 0.1352    add 0.0505    
Accumulated time: pickout 0.0012    decision 0.2742    set_bounds 0.0340    solve 0.5973    add 0.0773    
Current (lb-rhs): -0.013249993324279785
70 domains visited
Cumulative time: 1.0201873779296875

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 68
splitting decisions: 
split level 0: [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] [/input, 377] [/input, 392] 
split level 1: [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] [/input-8, 1389] [/input-8, 818] 
pruning_in_iteration open status: True
ratio of positive domain = 216 / 272 = 0.7941176470588236
pruning-in-iteration extra time: 0.0049059391021728516
Time: prepare 0.0069    bound 0.1428    transfer 0.0008    finalize 0.0013    func 0.1518    
Accumulated time: func 0.7490    prepare 0.0176    bound 0.7236    transfer 0.0050    finalize 0.0038    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01029 (17), -0.01011 (17), -0.00991 (17), -0.00973 (17), -0.00911 (17), -0.00893 (17), -0.00891 (17), -0.00873 (17), -0.00873 (17), -0.00855 (17), -0.00853 (17), -0.00835 (17), -0.00773 (17), -0.00755 (17), -0.00735 (17), -0.00717 (17), -0.00571 (17), -0.00553 (17), -0.00533 (17), -0.00514 (17), 
Length of domains: 56
Time: pickout 0.0015    decision 0.0161    set_bounds 0.0093    solve 0.1519    add 0.0014    
Accumulated time: pickout 0.0027    decision 0.2903    set_bounds 0.0433    solve 0.7493    add 0.0787    
Current (lb-rhs): -0.01029050350189209
126 domains visited
Cumulative time: 1.2014985084533691

BaB round 4
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=11_spec=3_30215215.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0014
batch: 56
splitting decisions: 
split level 0: [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] [/input-8, 818] 
split level 1: [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 224 = 0.7767857142857143
pruning-in-iteration extra time: 0.004499912261962891
Time: prepare 0.0055    bound 0.1181    transfer 0.0007    finalize 0.0010    func 0.1255    
Accumulated time: func 0.8746    prepare 0.0232    bound 0.8417    transfer 0.0056    finalize 0.0048    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00469 (19), -0.00445 (19), -0.00413 (19), -0.00400 (19), -0.00388 (19), -0.00375 (19), -0.00351 (19), -0.00340 (19), -0.00331 (19), -0.00326 (19), -0.00315 (19), -0.00307 (19), -0.00291 (19), -0.00282 (19), -0.00275 (19), -0.00266 (19), -0.00262 (19), -0.00257 (19), -0.00250 (19), -0.00237 (19), 
Length of domains: 50
Time: pickout 0.0014    decision 0.0154    set_bounds 0.0056    solve 0.1256    add 0.0606    
Accumulated time: pickout 0.0041    decision 0.3057    set_bounds 0.0489    solve 0.8749    add 0.1393    
Current (lb-rhs): -0.004693806171417236
176 domains visited
Cumulative time: 1.4187281131744385

BaB round 5
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=11_spec=3_30215215.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0041
batch: 50
splitting decisions: 
split level 0: [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] [/input, 327] 
split level 1: [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] [/input-8, 292] [/input-8, 610] 
split level 2: [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] [/input-8, 1410] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 400 / 400 = 1.0
pruning-in-iteration extra time: 4.792213439941406e-05
Time: prepare 0.0097    bound 0.1417    transfer 0.0031    finalize 0.0024    func 0.1570    
Accumulated time: func 1.0315    prepare 0.0331    bound 0.9834    transfer 0.0088    finalize 0.0072    
all_split False
Length of domains: 0
Time: pickout 0.0048    decision 0.0160    set_bounds 0.0153    solve 0.1571    add 0.0001    
Accumulated time: pickout 0.0089    decision 0.3217    set_bounds 0.0642    solve 1.0319    add 0.1393    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
176 domains visited
Cumulative time: 1.617262840270996

found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=11_spec=3_30215215.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=11_spec=3_30215215.log
found process for pidx=3
Result: safe in 7.0081 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 12, vnnlib ID: 12 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.60971117, -6.54356766, -3.77449369, -4.58758783, -5.85971212,
         -3.70617151, -9.49713802, -3.95379829, -6.54922104, -5.37819719]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [436]; unstable size 436; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 114, 1, 436] with unstable size 113 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 436] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 436] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [113]; unstable size 113; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 113] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 113] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 6.80846334e-01,  1.01449513e+00, -8.60394835e-01,  3.58971953e-03,
          1.15603209e+00, -9.08453703e-01,  4.73845720e+00,  1.30274642e+00,
          2.83696055e-01]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.60971117, -6.54356766, -3.77449369, -4.58758783, -5.85971212,
         -3.70617151, -9.49713802, -3.95379829, -6.54922104, -5.37819719]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60971117, -6.54356766, -3.77449417, -4.58758783, -5.85971165,
          -3.70617199, -9.49713802, -3.95379782, -6.54922009, -5.37819719],
         [-5.60971117, -6.54356766, -3.77449417, -4.58758783, -5.85971165,
          -3.70617199, -9.49713802, -3.95379782, -6.54922009, -5.37819719]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.17930365, -0.24762583]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]],


         [[[ 0.56666672,  0.66190481,  0.64603180,  ...,  0.24920642,
             0.26507944,  0.21746039],
           [ 0.43968260,  0.53492069,  0.51904768,  ...,  0.29682547,
             0.29682547,  0.24920642],
           [ 0.34444451,  0.39206356,  0.39206356,  ...,  0.32857150,
             0.34444451,  0.29682547],
           ...,
           [-1.83015871, -1.73492062, -1.73492062,  ..., -0.51269841,
            -0.52857143, -0.60793650],
           [-1.87777781, -1.81428576, -1.81428576,  ..., -0.52857143,
            -0.51269841, -0.52857143],
           [-1.90952384, -1.89365077, -1.87777781,  ..., -0.56031746,
            -0.59206349, -0.54444444]],

          [[ 1.15942061,  1.20772982,  1.19162667,  ...,  0.95008057,
             0.96618366,  0.91787446],
           [ 1.09500813,  1.12721443,  1.09500813,  ...,  0.98228669,
             0.99838978,  0.93397754],
           [ 0.99838978,  1.03059590,  1.01449287,  ...,  0.98228669,
             0.99838978,  0.95008057],
           ...,
           [-1.72302747, -1.57809973, -1.61030602,  ..., -0.06441211,
            -0.01610294, -0.09661824],
           [-1.80354273, -1.72302747, -1.73913050,  ..., -0.03220600,
            -0.01610294, -0.04830906],
           [-1.83574879, -1.81964576, -1.80354273,  ..., -0.06441211,
            -0.08051517, -0.04830906]],

          [[ 1.62069011,  1.62069011,  1.60569763,  ...,  1.50075006,
             1.51574254,  1.47076499],
           [ 1.59070504,  1.59070504,  1.56072009,  ...,  1.53073502,
             1.54572761,  1.48575759],
           [ 1.51574254,  1.51574254,  1.50075006,  ...,  1.50075006,
             1.51574254,  1.47076499],
           ...,
           [-1.49775124, -1.37781119, -1.39280367,  ..., -0.55322337,
            -0.61319339, -0.70314842],
           [-1.55772126, -1.49775124, -1.49775124,  ..., -0.56821585,
            -0.61319339, -0.58320838],
           [-1.58770621, -1.57271373, -1.55772126,  ..., -0.65817088,
            -0.71814090, -0.61319339]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0506 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 13, vnnlib ID: 13 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.31652355, -10.39834499, -14.53281593, -16.07817841, -15.67444897,
         -18.01647186, -16.02903366, -17.28762436, -10.97990608, -12.63942242]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [677]; unstable size 677; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 677] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 677] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 677] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 164] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.35580826,  2.29579544,  4.09076548,  3.52531242,  5.89760590,
          4.21795750,  5.18644428, -0.70376635,  1.22269154]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.31652355, -10.39834499, -14.53281593, -16.07817841, -15.67444897,
         -18.01647186, -16.02903366, -17.28762436, -10.97990608, -12.63942242]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.31652260, -10.39834595, -14.53281403, -16.07817841, -15.67444897,
          -18.01647186, -16.02903175, -17.28762627, -10.97990513, -12.63942051],
         [-10.31652260, -10.39834595, -14.53281403, -16.07817841, -15.67444897,
          -18.01647186, -16.02903175, -17.28762627, -10.97990513, -12.63942051]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.08182335,  0.58155918]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[0.45555562, 0.40793657, 0.42380959,  ..., 0.75714290,
            0.74126989, 0.70952386],
           [0.47142863, 0.42380959, 0.43968260,  ..., 0.72539687,
            0.69365084, 0.66190481],
           [0.53492069, 0.50317466, 0.55079371,  ..., 0.70952386,
            0.69365084, 0.66190481],
           ...,
           [0.63015878, 0.64603180, 0.66190481,  ..., 0.64603180,
            0.67777783, 0.66190481],
           [0.64603180, 0.61428577, 0.59841275,  ..., 0.63015878,
            0.64603180, 0.66190481],
           [0.72539687, 0.66190481, 0.63015878,  ..., 0.63015878,
            0.59841275, 0.64603180]],

          [[0.48309189, 0.43478271, 0.45088577,  ..., 0.75684386,
            0.72463775, 0.69243163],
           [0.49919492, 0.45088577, 0.46698883,  ..., 0.70853472,
            0.67632860, 0.64412248],
           [0.56360716, 0.53140104, 0.57971025,  ..., 0.69243163,
            0.67632860, 0.64412248],
           ...,
           [0.61191636, 0.62801939, 0.64412248,  ..., 0.62801939,
            0.66022551, 0.64412248],
           [0.62801939, 0.59581327, 0.57971025,  ..., 0.61191636,
            0.62801939, 0.64412248],
           [0.70853472, 0.64412248, 0.61191636,  ..., 0.61191636,
            0.57971025, 0.62801939]],

          [[0.66116959, 0.61619210, 0.63118458,  ..., 0.76611710,
            0.81109464, 0.79610211],
           [0.67616212, 0.63118458, 0.64617711,  ..., 0.76611710,
            0.78110963, 0.75112462],
           [0.73613209, 0.70614707, 0.75112462,  ..., 0.79610211,
            0.78110963, 0.75112462],
           ...,
           [0.66116959, 0.67616212, 0.72113961,  ..., 0.73613209,
            0.76611710, 0.75112462],
           [0.67616212, 0.64617711, 0.66116959,  ..., 0.72113961,
            0.73613209, 0.75112462],
           [0.75112462, 0.69115460, 0.69115460,  ..., 0.72113961,
            0.69115460, 0.73613209]]],


         [[[0.45555562, 0.40793657, 0.42380959,  ..., 0.75714290,
            0.74126989, 0.70952386],
           [0.47142863, 0.42380959, 0.43968260,  ..., 0.72539687,
            0.69365084, 0.66190481],
           [0.53492069, 0.50317466, 0.55079371,  ..., 0.70952386,
            0.69365084, 0.66190481],
           ...,
           [0.63015878, 0.64603180, 0.66190481,  ..., 0.64603180,
            0.67777783, 0.66190481],
           [0.64603180, 0.61428577, 0.59841275,  ..., 0.63015878,
            0.64603180, 0.66190481],
           [0.72539687, 0.66190481, 0.63015878,  ..., 0.63015878,
            0.59841275, 0.64603180]],

          [[0.48309189, 0.43478271, 0.45088577,  ..., 0.75684386,
            0.72463775, 0.69243163],
           [0.49919492, 0.45088577, 0.46698883,  ..., 0.70853472,
            0.67632860, 0.64412248],
           [0.56360716, 0.53140104, 0.57971025,  ..., 0.69243163,
            0.67632860, 0.64412248],
           ...,
           [0.61191636, 0.62801939, 0.64412248,  ..., 0.62801939,
            0.66022551, 0.64412248],
           [0.62801939, 0.59581327, 0.57971025,  ..., 0.61191636,
            0.62801939, 0.64412248],
           [0.70853472, 0.64412248, 0.61191636,  ..., 0.61191636,
            0.57971025, 0.62801939]],

          [[0.66116959, 0.61619210, 0.63118458,  ..., 0.76611710,
            0.81109464, 0.79610211],
           [0.67616212, 0.63118458, 0.64617711,  ..., 0.76611710,
            0.78110963, 0.75112462],
           [0.73613209, 0.70614707, 0.75112462,  ..., 0.79610211,
            0.78110963, 0.75112462],
           ...,
           [0.66116959, 0.67616212, 0.72113961,  ..., 0.73613209,
            0.76611710, 0.75112462],
           [0.67616212, 0.64617711, 0.66116959,  ..., 0.72113961,
            0.73613209, 0.75112462],
           [0.75112462, 0.69115460, 0.69115460,  ..., 0.72113961,
            0.69115460, 0.73613209]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0538 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 14, vnnlib ID: 14 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.58788013, -3.57877111, -7.49758530, -6.42473507, -6.46546555,
         -7.68810511, -6.21870279, -6.45115232, -5.74132729, -1.41073096]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [534]; unstable size 534; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 534] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 534] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 185] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.82803428, 1.00371778, 4.58163691, 3.52479601, 3.45554495, 4.66323185,
         3.15355444, 3.39953947, 2.80839324]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0336 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 15, vnnlib ID: 15 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.55321646, -5.81442928, -1.99641812,  0.06207272, -0.82771432,
          0.04142630, -2.41349435, -1.42710316, -5.66043377, -4.60286999]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [492]; unstable size 492; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 188, 1, 492] with unstable size 187 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 492] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 492] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [187]; unstable size 187; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 187] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 187] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.35873795,  4.47410536,  0.94619060,  0.06511045, -0.33263910,
          1.83395338,  0.21094531,  4.77025223,  3.27124619]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.55321646, -5.81442928, -1.99641812,  0.06207272, -0.82771432,
          0.04142630, -2.41349435, -1.42710316, -5.66043377, -4.60286999]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.96010399, -6.20732403, -2.32285213, -0.28913876, -1.16081107,
          -0.13703477, -2.92448115, -1.63956416, -6.15403843, -4.97522259]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15210399]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0060 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0407 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 16, vnnlib ID: 16 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.37839031, -13.42577553,  -6.48252678,  -7.11965179,  -6.67908382,
          -7.55561876,  -7.39423037,  -8.94825554, -12.10931110, -13.00597000]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [788]; unstable size 788; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 362, 1, 788] with unstable size 361 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 788] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 788] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [361]; unstable size 361; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 361] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 361] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.24375081,  3.81155133, -1.93120492, -1.85189033, -0.03242287,
         -1.13493085,  0.07367384,  2.53733778,  3.71830559]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.37839031, -13.42577553,  -6.48252678,  -7.11965179,  -6.67908382,
          -7.55561876,  -7.39423037,  -8.94825554, -12.10931110, -13.00597000]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.37839031, -13.42577457,  -6.48252583,  -7.11965132,  -6.67908287,
           -7.55561876,  -7.39422894,  -8.94825554, -12.10931206, -13.00597095],
         [-10.37839031, -13.42577457,  -6.48252583,  -7.11965132,  -6.67908287,
           -7.55561876,  -7.39422894,  -8.94825554, -12.10931206, -13.00597095]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.63712549, -0.44056845,  0.43596745,  0.27457762]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]],


         [[[-0.59206349, -0.57619047, -0.54444444,  ..., -1.27460313,
            -1.17936504, -1.05238092],
           [-0.54444444, -0.54444444, -0.51269841,  ..., -1.21111107,
            -1.17936504, -0.94126981],
           [-0.52857143, -0.56031746, -0.52857143,  ..., -1.29047608,
            -1.21111107, -0.90952379],
           ...,
           [-0.35396814, -0.35396814, -0.33809513,  ...,  0.05873025,
             0.09047628,  0.02698422],
           [-0.33809513, -0.32222211, -0.30634910,  ...,  0.15396833,
             0.23333341,  0.24920642],
           [-0.36984116, -0.30634910, -0.35396814,  ...,  0.21746039,
             0.24920642,  0.24920642]],

          [[-0.70853460, -0.69243151, -0.66022539,  ..., -1.25603855,
            -1.19162631, -1.07890499],
           [-0.66022539, -0.66022539, -0.62801927,  ..., -1.19162631,
            -1.19162631, -0.98228657],
           [-0.66022539, -0.67632848, -0.64412236,  ..., -1.27214170,
            -1.22383249, -0.95008045],
           ...,
           [-0.46698871, -0.46698871, -0.45088565,  ..., -0.06441211,
            -0.03220600, -0.09661824],
           [-0.43478248, -0.41867942, -0.38647330,  ...,  0.03220624,
             0.11272153,  0.12882459],
           [-0.45088565, -0.37037024, -0.38647330,  ...,  0.09661847,
             0.14492765,  0.12882459]],

          [[-0.74812591, -0.73313338, -0.68815589,  ..., -1.01799107,
            -0.95802099, -0.95802099],
           [-0.70314842, -0.70314842, -0.67316341,  ..., -0.95802099,
            -0.95802099, -0.86806595],
           [-0.70314842, -0.71814090, -0.68815589,  ..., -1.03298354,
            -0.98800600, -0.82308841],
           ...,
           [-0.46326834, -0.44827583, -0.44827583,  ..., -0.07346311,
            -0.04347810, -0.10344811],
           [-0.43328333, -0.41829082, -0.40329832,  ...,  0.01649191,
             0.09145443,  0.10644694],
           [-0.47826082, -0.40329832, -0.43328333,  ...,  0.04647692,
             0.09145443,  0.07646193]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0642 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 17, vnnlib ID: 17 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.48207045,  -2.39753056,  -9.58371258, -10.52106094,  -9.25177765,
         -11.82708836, -10.46574306, -11.05204582,  -6.78091049,  -5.65733051]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [502]; unstable size 502; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 502] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 502] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 502] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 253] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89075232, 4.35961151, 5.77320910, 4.46269083, 6.95126152, 5.95177650,
         6.24258137, 2.54485893, 2.28885126]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0455 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 18, vnnlib ID: 18 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.97675323, -17.08073425,  -8.92278004, -11.53713417,  -9.34353065,
         -11.19538307,  -8.12182331, -11.58376312, -17.60232544, -15.83768177]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 512] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 512] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 259] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.63812399,  6.80160332, -0.75694036,  2.17035437, -0.29967928,
          1.59824908,  1.65513253,  7.41604900,  5.91091490]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.97675323, -17.08073425,  -8.92278004, -11.53713417,  -9.34353065,
         -11.19538307,  -8.12182331, -11.58376312, -17.60232544, -15.83768177]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.56005764, -18.10161591,  -9.57238865, -12.55412483, -10.26584530,
          -12.21403694,  -9.57373428, -12.60732460, -18.38806343, -16.88108253],
         [-14.56005764, -18.10161591,  -9.57238865, -12.55412483, -10.26584530,
          -12.21403694,  -9.57373428, -12.60732460, -18.38806343, -16.88108253]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00134563,  0.69211102]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0058 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0425 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 19, vnnlib ID: 19 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.67748737, -15.99068165,  -8.99268341,  -7.79347992,  -8.35536575,
          -8.22471714,  -9.16943359, -11.52655983, -13.26644325, -15.81279469]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [547]; unstable size 547; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 547] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 547] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 259] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.43207645,  6.44367409,  0.19957757, -0.46666574,  0.09526157,
          0.46659350,  2.60346127,  3.93457651,  6.28853273]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.67748737, -15.99068165,  -8.99268341,  -7.79347992,  -8.35536575,
          -8.22471714,  -9.16943359, -11.52655983, -13.26644325, -15.81279469]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.68204021, -16.05737877,  -8.96092319,  -8.17651176,  -8.15779305,
           -8.62596226,  -9.30371189, -11.61334324, -13.34238148, -16.04029083]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01871872]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0052 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0497 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 20, vnnlib ID: 20 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.99751091, -10.60476208,  -5.80764198,  -6.15668106,  -6.26862431,
          -6.07673597,  -4.08238983,  -8.79667854,  -9.22789669, -10.72688580]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [601]; unstable size 601; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 601] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 601] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 601] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 286] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.22418499, 4.25854826, 0.62012935, 0.93473434, 0.88097095, 0.60569596,
         2.78608990, 3.20536137, 4.78958321]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0411 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 21, vnnlib ID: 21 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.39633656, -10.81733418,  -8.14680481,  -7.67903614,  -8.47020626,
          -6.77577496, -10.40852451,  -8.02430439, -10.83304310,  -9.56988335]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [512]; unstable size 512; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 512] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 512] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 512] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 171] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.18678737, 2.55919075, 0.31564933, 0.61779255, 0.64823699, 2.52021670,
         0.37382317, 2.55972433, 1.61684608]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0447 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 22, vnnlib ID: 22 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.61524105, -12.71203899, -11.56439686, -11.98183823, -11.60697556,
         -12.97468090, -12.19276619, -14.18572140,  -5.67168808, -12.38231468]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 173, 1, 599] with unstable size 172 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 599] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [172]; unstable size 172; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 172] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 172] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.42892742, 5.35214663, 4.30808020, 4.89422417, 4.33142805, 5.69092846,
         5.16717815, 6.89458752, 4.89000034]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0482 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 23, vnnlib ID: 23 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.84393740, -7.84841537, -4.07208776, -2.13655066, -4.59707069,
         -1.22025633, -5.05424547, -3.93261433, -4.29843807, -6.48314619]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 499] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 499] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 184] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.94525373, 4.37971783, 1.50863898, 0.51084447, 2.10668588, 2.74753046,
         1.74771583, 1.16706705, 3.61705422]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0267 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 24, vnnlib ID: 24 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
         -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [778]; unstable size 778; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 305, 1, 778] with unstable size 304 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 778] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 778] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [304]; unstable size 304; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 304] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 304] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.83722591,  1.20715904,  3.54842567,  1.72621727,  4.45857143,
          2.37408257,  3.37173080,  0.75684547,  1.53906167]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
         -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.32it/s]100%|██████████| 1/1 [00:00<00:00,  9.31it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.18222904,  -8.04493713, -10.81180954, -13.20889759, -11.28295040,
          -14.31022644, -12.04443455, -13.26400185,  -9.93011951, -10.47806263]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13729191]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1098 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.560543060302734
alpha/beta optimization time: 1.1658530235290527
initial alpha-crown bounds: tensor([[-0.67048168,  1.36126232,  3.71650028,  1.91702366,  4.64379406,
          2.51711655,  3.56975985,  0.87808609,  1.62748027]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6704816818237305
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.5902 seconds.
lower bounds for all target labels: [-0.6704807281494141, 1.361262321472168, 3.716498851776123, 1.917022705078125, 4.643793106079102, 2.51711368560791, 3.5697593688964844, 0.878089427947998, 1.627479910850525]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/16_0']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 138215 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.638733625412
Verifying property 0 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.643794059753418.

Properties batch 1, size 1
Remaining timeout: 198.49329662322998
Verifying property 1 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7165002822875977.

Properties batch 2, size 1
Remaining timeout: 198.4013373851776
Verifying property 2 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5697598457336426.

Properties batch 3, size 1
Remaining timeout: 198.31114220619202
Verifying property 3 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5171165466308594.

Properties batch 4, size 1
Remaining timeout: 198.22121739387512
Verifying property 4 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9170236587524414.

Properties batch 5, size 1
Remaining timeout: 198.13134717941284
Verifying property 5 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6274802684783936.

Properties batch 6, size 1
Remaining timeout: 198.04153633117676
Verifying property 6 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.361262321472168.

Properties batch 7, size 1
Remaining timeout: 197.95128273963928
Verifying property 7 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8780860900878906.

Properties batch 8, size 1
Remaining timeout: 197.8588352203369
Verifying property 8 with 1 instances.
##### Instance 24 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.67048168]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.95971680,  -7.97020435, -11.66736698, -13.97354507, -12.17215443,
        -15.07821083, -12.78244114, -14.01900578, -10.50253868, -10.70786572],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.67048168]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 778
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 300
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 1101
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007967948913574219
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 60] 
split level 2: [/input-12, 13] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 36] 
split level 5: [/input-12, 92] 
split level 6: [/input-12, 93] 
split level 7: [/input-12, 37] 
pruning_in_iteration open status: True
ratio of positive domain = 202 / 256 = 0.7890625
pruning-in-iteration extra time: 0.004952669143676758
Time: prepare 0.0018    bound 0.1208    transfer 0.0024    finalize 0.0015    func 0.1265    
Accumulated time: func 0.1265    prepare 0.0022    bound 0.1208    transfer 0.0024    finalize 0.0015    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22763 (8), -0.22605 (8), -0.21837 (8), -0.21766 (8), -0.21756 (8), -0.21695 (8), -0.21537 (8), -0.21409 (8), -0.19646 (8), -0.19493 (8), -0.19323 (8), -0.19282 (8), -0.18915 (8), -0.18794 (8), -0.18786 (8), -0.18623 (8), -0.18577 (8), -0.18318 (8), -0.17836 (8), -0.17775 (8), 
Length of domains: 54
Time: pickout 0.0005    decision 0.0223    set_bounds 0.0160    solve 0.1266    add 0.0654    
Accumulated time: pickout 0.0005    decision 0.0223    set_bounds 0.0160    solve 0.1266    add 0.0654    
Current (lb-rhs): -0.2276287078857422
54 domains visited
Cumulative time: 0.24530816078186035

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 54
splitting decisions: 
split level 0: [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] [/input-12, 51] 
split level 1: [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] [/input-8, 677] [/input-12, 4] 
pruning_in_iteration open status: True
ratio of positive domain = 152 / 216 = 0.7037037037037037
pruning-in-iteration extra time: 0.004502058029174805
Time: prepare 0.0037    bound 0.1245    transfer 0.0007    finalize 0.0013    func 0.1301    
Accumulated time: func 0.2567    prepare 0.0060    bound 0.2453    transfer 0.0031    finalize 0.0027    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21034 (10), -0.20879 (10), -0.20109 (10), -0.20064 (10), -0.19969 (10), -0.19906 (10), -0.19756 (10), -0.19635 (10), -0.17733 (10), -0.17660 (10), -0.17358 (10), -0.17292 (10), -0.17098 (10), -0.16987 (10), -0.16923 (10), -0.16800 (10), -0.16673 (10), -0.16431 (10), -0.15823 (10), -0.15721 (10), 
Length of domains: 64
Time: pickout 0.0127    decision 0.0163    set_bounds 0.0065    solve 0.1302    add 0.0691    
Accumulated time: pickout 0.0132    decision 0.0387    set_bounds 0.0225    solve 0.2568    add 0.1344    
Current (lb-rhs): -0.2103424072265625
118 domains visited
Cumulative time: 0.4910588264465332

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 64
splitting decisions: 
split level 0: [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] [/input-12, 4] 
split level 1: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-8, 603] [/input-8, 603] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
pruning_in_iteration open status: True
ratio of positive domain = 160 / 256 = 0.625
pruning-in-iteration extra time: 0.004579067230224609
Time: prepare 0.0049    bound 0.1184    transfer 0.0012    finalize 0.0015    func 0.1261    
Accumulated time: func 0.3827    prepare 0.0111    bound 0.3637    transfer 0.0043    finalize 0.0043    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19513 (12), -0.18880 (12), -0.18634 (12), -0.18627 (12), -0.18545 (12), -0.18524 (12), -0.18306 (12), -0.18291 (12), -0.18128 (12), -0.17680 (12), -0.16777 (12), -0.16259 (12), -0.16225 (12), -0.16028 (12), -0.16018 (12), -0.15974 (12), -0.15533 (12), -0.15055 (12), -0.15029 (12), -0.14944 (12), 
Length of domains: 96
Time: pickout 0.0122    decision 0.0140    set_bounds 0.0076    solve 0.1261    add 0.0749    
Accumulated time: pickout 0.0254    decision 0.0527    set_bounds 0.0301    solve 0.3830    add 0.2094    
Current (lb-rhs): -0.1951284408569336
214 domains visited
Cumulative time: 0.7336597442626953

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 96
splitting decisions: 
split level 0: [/input-8, 1880] [/input-12, 90] [/input-12, 90] [/input-8, 670] [/input-8, 1045] [/input-8, 670] [/input-12, 90] [/input-12, 33] [/input-12, 90] [/input-8, 1880] 
split level 1: [/input-8, 670] [/input-8, 1045] [/input-8, 670] [/input-12, 90] [/input-8, 1880] [/input-8, 603] [/input-8, 1045] [/input-12, 90] [/input-8, 670] [/input-8, 603] 
pruning_in_iteration open status: True
ratio of positive domain = 135 / 384 = 0.3515625
pruning-in-iteration extra time: 0.0046155452728271484
Time: prepare 0.0074    bound 0.1728    transfer 0.0016    finalize 0.0026    func 0.1845    
Accumulated time: func 0.5672    prepare 0.0187    bound 0.5365    transfer 0.0059    finalize 0.0069    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18257 (14), -0.17854 (14), -0.17580 (14), -0.17499 (14), -0.17250 (14), -0.17116 (14), -0.16767 (14), -0.16664 (14), -0.16504 (14), -0.16409 (14), -0.16326 (14), -0.16173 (14), -0.16075 (14), -0.15914 (14), -0.15872 (14), -0.15744 (14), -0.15729 (14), -0.15723 (14), -0.15565 (14), -0.15380 (14), 
Length of domains: 249
Time: pickout 0.0149    decision 0.0281    set_bounds 0.0116    solve 0.1846    add 0.0737    
Accumulated time: pickout 0.0403    decision 0.0808    set_bounds 0.0418    solve 0.5675    add 0.2831    
Current (lb-rhs): -0.1825714111328125
463 domains visited
Cumulative time: 1.0541212558746338

BaB round 5
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 249
splitting decisions: 
split level 0: [/input-12, 90] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-12, 33] [/input-8, 1880] [/input-12, 33] [/input-8, 1880] [/input-12, 33] [/input-12, 33] 
pruning_in_iteration open status: True
ratio of positive domain = 230 / 498 = 0.4618473895582329
pruning-in-iteration extra time: 0.004347085952758789
Time: prepare 0.0096    bound 0.1596    transfer 0.0037    finalize 0.0033    func 0.1761    
Accumulated time: func 0.7433    prepare 0.0284    bound 0.6960    transfer 0.0096    finalize 0.0102    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.17798 (15), -0.17147 (15), -0.17109 (15), -0.17075 (15), -0.16501 (15), -0.16328 (15), -0.16235 (15), -0.16041 (15), -0.15945 (15), -0.15909 (15), -0.15728 (15), -0.15628 (15), -0.15560 (15), -0.15434 (15), -0.15434 (15), -0.15288 (15), -0.15279 (15), -0.15277 (15), -0.14952 (15), -0.14771 (15), 
Length of domains: 268
Time: pickout 0.0138    decision 0.0252    set_bounds 0.0101    solve 0.1762    add 0.0464    
Accumulated time: pickout 0.0541    decision 0.1059    set_bounds 0.0518    solve 0.7437    add 0.3295    
Current (lb-rhs): -0.177978515625
731 domains visited
Cumulative time: 1.3306431770324707

BaB round 6
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0007
batch: 268
splitting decisions: 
split level 0: [/input-12, 33] [/input-12, 90] [/input-8, 670] [/input-12, 33] [/input-8, 670] [/input-12, 90] [/input-8, 603] [/input-8, 670] [/input-12, 90] [/input-8, 603] 
pruning_in_iteration open status: True
ratio of positive domain = 146 / 536 = 0.2723880597014925
pruning-in-iteration extra time: 0.004318714141845703
Time: prepare 0.0101    bound 0.1451    transfer 0.0027    finalize 0.0032    func 0.1611    
Accumulated time: func 0.9045    prepare 0.0387    bound 0.8411    transfer 0.0123    finalize 0.0134    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.16657 (16), -0.16562 (16), -0.16048 (16), -0.15961 (16), -0.15939 (16), -0.15926 (16), -0.15884 (16), -0.15857 (16), -0.15837 (16), -0.15455 (16), -0.15332 (16), -0.15315 (16), -0.15257 (16), -0.15245 (16), -0.15209 (16), -0.15111 (16), -0.15059 (16), -0.14694 (16), -0.14556 (16), -0.14553 (16), 
Length of domains: 390
Time: pickout 0.0036    decision 0.0248    set_bounds 0.0109    solve 0.1612    add 0.0833    
Accumulated time: pickout 0.0577    decision 0.1307    set_bounds 0.0627    solve 0.9050    add 0.4128    
Current (lb-rhs): -0.16656970977783203
1121 domains visited
Cumulative time: 1.622711420059204

BaB round 7
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0007
batch: 390
splitting decisions: 
split level 0: [/input-8, 603] [/input-8, 811] [/input-8, 670] [/input-8, 603] [/input-8, 1880] [/input-8, 670] [/input-8, 1880] [/input-8, 811] [/input-8, 603] [/input-8, 811] 
pruning_in_iteration open status: False
ratio of positive domain = 120 / 780 = 0.15384615384615385
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0150    bound 0.0965    transfer 0.0038    finalize 0.0042    func 0.1195    
Accumulated time: func 1.0240    prepare 0.0539    bound 0.9376    transfer 0.0160    finalize 0.0176    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15738 (17), -0.15733 (17), -0.15691 (17), -0.15260 (17), -0.15198 (17), -0.15163 (17), -0.15131 (17), -0.15096 (17), -0.15094 (17), -0.15079 (17), -0.14996 (17), -0.14983 (17), -0.14976 (17), -0.14606 (17), -0.14560 (17), -0.14554 (17), -0.14552 (17), -0.14501 (17), -0.14496 (17), -0.14463 (17), 
Length of domains: 657
Time: pickout 0.0214    decision 0.0312    set_bounds 0.0156    solve 0.1201    add 0.0842    
Accumulated time: pickout 0.0792    decision 0.1619    set_bounds 0.0783    solve 1.0251    add 0.4970    
Current (lb-rhs): -0.15738391876220703
1778 domains visited
Cumulative time: 1.9035162925720215

BaB round 8
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0007
batch: 657
splitting decisions: 
split level 0: [/input-8, 811] [/input-8, 158] [/input-8, 811] [/input-12, 80] [/input-12, 80] [/input-8, 811] [/input-12, 80] [/input-8, 670] [/input-8, 811] [/input-8, 158] 
pruning_in_iteration open status: False
ratio of positive domain = 209 / 1314 = 0.15905631659056318
pruning-in-iteration extra time: 5.7220458984375e-05
Time: prepare 0.0249    bound 0.1092    transfer 0.0064    finalize 0.0069    func 0.1480    
Accumulated time: func 1.1720    prepare 0.0790    bound 1.0468    transfer 0.0225    finalize 0.0245    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15565 (18), -0.15523 (18), -0.15439 (18), -0.15028 (18), -0.14994 (18), -0.14992 (18), -0.14921 (18), -0.14911 (18), -0.14778 (18), -0.14693 (18), -0.14560 (18), -0.14532 (18), -0.14433 (18), -0.14371 (18), -0.14355 (18), -0.14112 (18), -0.14044 (18), -0.14030 (18), -0.14016 (18), -0.13967 (18), 
Length of domains: 1094
Time: pickout 0.0202    decision 0.0454    set_bounds 0.0260    solve 0.1482    add 0.1033    
Accumulated time: pickout 0.0994    decision 0.2072    set_bounds 0.1043    solve 1.1733    add 0.6003    
Current (lb-rhs): -0.15565204620361328
2872 domains visited
Cumulative time: 2.2554585933685303

BaB round 9
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 1094
splitting decisions: 
split level 0: [/input-12, 80] [/input-8, 603] [/input-12, 80] [/input-8, 1315] [/input-12, 80] [/input-8, 603] [/input-12, 80] [/input-12, 80] [/input-8, 677] [/input-12, 80] 
pruning_in_iteration open status: True
ratio of positive domain = 513 / 2188 = 0.23446069469835462
pruning-in-iteration extra time: 0.0015273094177246094
Time: prepare 0.0411    bound 0.1488    transfer 0.0114    finalize 0.0110    func 0.2124    
Accumulated time: func 1.3844    prepare 0.1203    bound 1.1956    transfer 0.0338    finalize 0.0355    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15309 (19), -0.15253 (19), -0.14755 (19), -0.14732 (19), -0.14692 (19), -0.14662 (19), -0.14626 (19), -0.14299 (19), -0.14253 (19), -0.14224 (19), -0.14188 (19), -0.14145 (19), -0.14106 (19), -0.14058 (19), -0.14023 (19), -0.13929 (19), -0.13802 (19), -0.13756 (19), -0.13741 (19), -0.13695 (19), 
Length of domains: 1675
Time: pickout 0.0311    decision 0.0685    set_bounds 0.0429    solve 0.2132    add 0.0983    
Accumulated time: pickout 0.1305    decision 0.2757    set_bounds 0.1472    solve 1.3865    add 0.6986    
Current (lb-rhs): -0.15308570861816406
4547 domains visited
Cumulative time: 2.7214229106903076

BaB round 10
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 1675
splitting decisions: 
split level 0: [/input-12, 80] [/input-8, 987] [/input-8, 811] [/input-8, 1069] [/input-8, 811] [/input-8, 987] [/input-8, 158] [/input-8, 677] [/input-8, 811] [/input-12, 80] 
pruning_in_iteration open status: False
ratio of positive domain = 599 / 3350 = 0.1788059701492537
pruning-in-iteration extra time: 5.459785461425781e-05
Time: prepare 0.0725    bound 0.1766    transfer 0.0165    finalize 0.0223    func 0.2880    
Accumulated time: func 1.6725    prepare 0.1930    bound 1.3722    transfer 0.0504    finalize 0.0578    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14850 (20), -0.14802 (20), -0.14308 (20), -0.14280 (20), -0.14203 (20), -0.14170 (20), -0.14060 (20), -0.13938 (20), -0.13899 (20), -0.13812 (20), -0.13689 (20), -0.13649 (20), -0.13644 (20), -0.13611 (20), -0.13568 (20), -0.13477 (20), -0.13439 (20), -0.13386 (20), -0.13357 (20), -0.13288 (20), 
Length of domains: 2731
Time: pickout 0.0372    decision 0.2473    set_bounds 0.0670    solve 0.2890    add 0.1236    
Accumulated time: pickout 0.1677    decision 0.5230    set_bounds 0.2142    solve 1.6755    add 0.8222    
Current (lb-rhs): -0.14850330352783203
7278 domains visited
Cumulative time: 3.4989030361175537

BaB round 11
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 2731
splitting decisions: 
split level 0: [/input-8, 987] [/input-12, 80] [/input-8, 158] [/input-12, 80] [/input-12, 80] [/input-8, 987] [/input-12, 80] [/input-12, 80] [/input-8, 988] [/input-8, 158] 
pruning_in_iteration open status: False
ratio of positive domain = 973 / 5462 = 0.17813987550347854
pruning-in-iteration extra time: 6.437301635742188e-05
Time: prepare 0.1189    bound 0.2620    transfer 0.0295    finalize 0.0305    func 0.4412    
Accumulated time: func 2.1137    prepare 0.3121    bound 1.6342    transfer 0.0799    finalize 0.0883    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14188 (21), -0.14144 (21), -0.13652 (21), -0.13639 (21), -0.13616 (21), -0.13539 (21), -0.13512 (21), -0.13492 (21), -0.13339 (21), -0.13201 (21), -0.13194 (21), -0.13058 (21), -0.13027 (21), -0.12982 (21), -0.12973 (21), -0.12948 (21), -0.12936 (21), -0.12928 (21), -0.12873 (21), -0.12865 (21), 
Length of domains: 4448
Time: pickout 0.0506    decision 0.1546    set_bounds 0.2306    solve 0.4422    add 0.1837    
Accumulated time: pickout 0.2183    decision 0.6776    set_bounds 0.4448    solve 2.1177    add 1.0059    
Current (lb-rhs): -0.14188289642333984
11726 domains visited
Cumulative time: 4.573474645614624

BaB round 12
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1315] [/input-12, 80] [/input-8, 987] [/input-8, 670] [/input-8, 1315] [/input-8, 810] [/input-8, 810] [/input-8, 987] [/input-8, 677] [/input-8, 1315] 
pruning_in_iteration open status: False
ratio of positive domain = 1251 / 8192 = 0.1527099609375
pruning-in-iteration extra time: 7.748603820800781e-05
Time: prepare 0.1828    bound 0.3646    transfer 0.0436    finalize 0.0454    func 0.6377    
Accumulated time: func 2.7514    prepare 0.4952    bound 1.9988    transfer 0.1235    finalize 0.1337    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13882 (22), -0.13843 (22), -0.13351 (22), -0.13310 (22), -0.13229 (22), -0.13209 (22), -0.13005 (22), -0.12925 (22), -0.12859 (22), -0.12724 (22), -0.12672 (22), -0.12661 (22), -0.12605 (22), -0.12550 (22), -0.12523 (22), -0.12513 (22), -0.12498 (22), -0.12475 (22), -0.12453 (22), -0.12442 (22), 
Length of domains: 7257
Time: pickout 0.0678    decision 0.2267    set_bounds 0.2936    solve 0.6390    add 0.1538    
Accumulated time: pickout 0.2861    decision 0.9043    set_bounds 0.7385    solve 2.7567    add 1.1597    
Current (lb-rhs): -0.13881874084472656
18631 domains visited
current_vram/total_varm: 12.7GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.969845533370972

BaB round 13
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 7257
splitting decisions: 
split level 0: [/input-8, 1315] [/input-8, 1315] [/input-12, 80] [/input-8, 1315] [/input-8, 677] [/input-8, 1315] [/input-8, 1315] [/input-8, 1315] [/input-8, 987] [/input-8, 987] 
pruning_in_iteration open status: False
ratio of positive domain = 2608 / 14514 = 0.17968857654678239
pruning-in-iteration extra time: 0.00013208389282226562
Time: prepare 0.3135    bound 0.6128    transfer 0.0793    finalize 0.0906    func 1.0971    
Accumulated time: func 3.8484    prepare 0.8090    bound 2.6116    transfer 0.2027    finalize 0.2243    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13113 (23), -0.13034 (23), -0.12905 (23), -0.12795 (23), -0.12537 (23), -0.12534 (23), -0.12457 (23), -0.12449 (23), -0.12425 (23), -0.12417 (23), -0.12395 (23), -0.12334 (23), -0.12293 (23), -0.12260 (23), -0.12254 (23), -0.12220 (23), -0.12161 (23), -0.12119 (23), -0.12017 (23), -0.11951 (23), 
Length of domains: 11836
Time: pickout 0.1093    decision 0.5459    set_bounds 0.4526    solve 1.0994    add 0.2631    
Accumulated time: pickout 0.3954    decision 1.4502    set_bounds 1.1910    solve 3.8561    add 1.4228    
Current (lb-rhs): -0.13113117218017578
30467 domains visited
Cumulative time: 8.464770555496216

BaB round 14
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 8192
splitting decisions: 
split level 0: [/input-8, 810] [/input-8, 82] [/input-8, 677] [/input-8, 1055] [/input-8, 988] [/input-8, 158] [/input-8, 981] [/input-8, 1069] [/input-8, 986] [/input-8, 1055] 
pruning_in_iteration open status: False
ratio of positive domain = 2981 / 16384 = 0.18194580078125
pruning-in-iteration extra time: 0.00012540817260742188
Time: prepare 0.3515    bound 0.6836    transfer 0.0867    finalize 0.0936    func 1.2166    
Accumulated time: func 5.0651    prepare 1.1609    bound 3.2952    transfer 0.2894    finalize 0.3179    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12905 (23), -0.12795 (23), -0.12504 (24), -0.12427 (24), -0.12334 (23), -0.12293 (23), -0.12260 (23), -0.12254 (23), -0.12185 (24), -0.12161 (23), -0.12119 (23), -0.12115 (24), -0.12008 (24), -0.11965 (24), -0.11955 (24), -0.11944 (24), -0.11919 (23), -0.11906 (24), -0.11895 (24), -0.11891 (24), 
Length of domains: 16960
Time: pickout 0.1237    decision 0.6308    set_bounds 0.5188    solve 1.2192    add 0.4178    
Accumulated time: pickout 0.5191    decision 2.0809    set_bounds 1.7098    solve 5.0753    add 1.8406    
Current (lb-rhs): -0.12904644012451172
43783 domains visited
current_vram/total_varm: 23.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.414265871047974

BaB round 15
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0013
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1019] [/input-8, 810] [/input-8, 1069] [/input-8, 1019] [/input-8, 981] [/input-8, 810] [/input-8, 810] [/input-8, 987] [/input-8, 1055] [/input-8, 810] 
pruning_in_iteration open status: True
ratio of positive domain = 7183 / 32768 = 0.219207763671875
pruning-in-iteration extra time: 0.0018203258514404297
Time: prepare 0.7325    bound 1.3034    transfer 0.1729    finalize 0.2037    func 2.4148    
Accumulated time: func 7.4799    prepare 1.8937    bound 4.5986    transfer 0.4624    finalize 0.5216    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12271 (24), -0.12258 (24), -0.12206 (25), -0.12163 (24), -0.12121 (25), -0.12113 (25), -0.11922 (24), -0.11888 (24), -0.11815 (25), -0.11781 (24), -0.11708 (25), -0.11703 (24), -0.11687 (25), -0.11663 (24), -0.11654 (23), -0.11647 (25), -0.11647 (25), -0.11634 (25), -0.11627 (24), -0.11622 (24), 
Length of domains: 26161
Time: pickout 0.2491    decision 1.6889    set_bounds 1.1329    solve 2.4202    add 0.2209    
Accumulated time: pickout 0.7681    decision 3.7698    set_bounds 2.8428    solve 7.4954    add 2.0616    
Current (lb-rhs): -0.12270736694335938
69368 domains visited
current_vram/total_varm: 28.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.18596839904785

BaB round 16
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts: total 490 constraints, 33112 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2789
batch: 26161
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1069] [/input-8, 1315] [/input-8, 987] [/input-8, 1315] [/input-12, 80] [/input-8, 1055] [/input-8, 1315] [/input-8, 987] [/input-8, 1315] [/input-12, 80] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1216115951538086
10 lb beta sum: 58.09857177734375, worst -0.05696296691894531
pruning_in_iteration open status: True
ratio of positive domain = 50498 / 52322 = 0.9651389472879477
pruning-in-iteration extra time: 0.004927158355712891
Time: prepare 1.1931    bound 7.4775    transfer 0.2847    finalize 0.3378    func 9.6359    
Accumulated time: func 17.1158    prepare 3.0872    bound 12.0761    transfer 0.7470    finalize 0.8595    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04486 (26), -0.04142 (26), -0.04125 (26), -0.04111 (25), -0.04059 (24), -0.03982 (26), -0.03959 (25), -0.03759 (26), -0.03728 (26), -0.03682 (26), -0.03680 (26), -0.03674 (25), -0.03650 (26), -0.03635 (25), -0.03630 (25), -0.03629 (26), -0.03621 (26), -0.03531 (25), -0.03515 (26), -0.03514 (25), 
Length of domains: 1824
Time: pickout 0.4000    decision 2.9094    set_bounds 1.7093    solve 9.9886    add 0.1304    
Accumulated time: pickout 1.1681    decision 6.6793    set_bounds 4.5521    solve 17.4841    add 2.1919    
Current (lb-rhs): -0.04485556483268738
71192 domains visited
Cumulative time: 32.83458375930786

BaB round 17
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts: total 1135 constraints, 61095 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5096
batch: 1824
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 987] [/input-8, 987] [/input-8, 810] [/input-8, 987] [/input-8, 987] [/input-8, 987] [/input-8, 987] [/input-8, 1019] [/input, 332] [/input-8, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11982250213623047
10 lb beta sum: 11.306473731994629, worst -0.048795104026794434
pruning_in_iteration open status: True
ratio of positive domain = 3353 / 3648 = 0.9191337719298246
pruning-in-iteration extra time: 0.002293825149536133
Time: prepare 0.0943    bound 0.9881    transfer 0.0187    finalize 0.0227    func 1.1481    
Accumulated time: func 18.2639    prepare 3.1817    bound 13.0643    transfer 0.7657    finalize 0.8821    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02307 (26), -0.02051 (27), -0.01976 (27), -0.01873 (26), -0.01682 (27), -0.01656 (27), -0.01588 (27), -0.01582 (27), -0.01540 (25), -0.01501 (27), -0.01490 (27), -0.01479 (27), -0.01422 (26), -0.01393 (27), -0.01391 (26), -0.01341 (26), -0.01338 (26), -0.01317 (26), -0.01288 (26), -0.01249 (27), 
Length of domains: 295
Time: pickout 0.0455    decision 0.1085    set_bounds 0.0756    solve 1.1492    add 0.0772    
Accumulated time: pickout 1.2136    decision 6.7878    set_bounds 4.6277    solve 18.6333    add 2.2691    
Current (lb-rhs): -0.0230676531791687
71487 domains visited
Cumulative time: 34.83220815658569

BaB round 18
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0021
batch: 295
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 810] [/input-8, 810] [/input-8, 810] [/input-8, 810] [/input-8, 1055] [/input-8, 1055] [/input-8, 1494] [/input-8, 1494] [/input-8, 1019] [/input-8, 633] 
cut re-enabled after branching node selection
0 lb beta sum: 9.868768692016602, worst -0.023068130016326904
10 lb beta sum: 18.024938583374023, worst -0.04286009073257446
pruning_in_iteration open status: True
ratio of positive domain = 316 / 590 = 0.535593220338983
pruning-in-iteration extra time: 0.004604816436767578
Time: prepare 0.0276    bound 0.2804    transfer 0.0032    finalize 0.0040    func 0.3191    
Accumulated time: func 18.5830    prepare 3.2095    bound 13.3447    transfer 0.7689    finalize 0.8862    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02192 (27), -0.01976 (27), -0.01858 (27), -0.01812 (28), -0.01540 (26), -0.01518 (28), -0.01515 (28), -0.01470 (28), -0.01422 (27), -0.01408 (27), -0.01392 (28), -0.01386 (27), -0.01331 (28), -0.01323 (27), -0.01197 (27), -0.01189 (28), -0.01165 (27), -0.01153 (27), -0.01146 (26), -0.01100 (28), 
Length of domains: 274
Time: pickout 0.0166    decision 0.0270    set_bounds 0.0109    solve 0.3192    add 0.0771    
Accumulated time: pickout 1.2302    decision 6.8148    set_bounds 4.6386    solve 18.9524    add 2.3462    
Current (lb-rhs): -0.021922171115875244
71761 domains visited
Cumulative time: 35.29373598098755

BaB round 19
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 274
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 633] [/input-8, 633] [/input-8, 1019] [/input-8, 1019] [/input-8, 986] [/input, 332] [/input-8, 1019] [/input-8, 1019] [/input-8, 1019] [/input-8, 986] 
cut re-enabled after branching node selection
0 lb beta sum: 9.937385559082031, worst -0.021884024143218994
10 lb beta sum: 20.326019287109375, worst -0.04843258857727051
pruning_in_iteration open status: True
ratio of positive domain = 310 / 548 = 0.5656934306569343
pruning-in-iteration extra time: 0.004637718200683594
Time: prepare 0.0261    bound 0.2533    transfer 0.0014    finalize 0.0037    func 0.2880    
Accumulated time: func 18.8710    prepare 3.2358    bound 13.5980    transfer 0.7704    finalize 0.8898    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01824 (28), -0.01779 (28), -0.01540 (27), -0.01388 (29), -0.01364 (28), -0.01305 (28), -0.01255 (28), -0.01227 (29), -0.01172 (29), -0.01169 (28), -0.01160 (29), -0.01140 (28), -0.01132 (29), -0.01103 (28), -0.01073 (28), -0.01073 (27), -0.01054 (27), -0.01039 (29), -0.01029 (28), -0.01023 (29), 
Length of domains: 238
Time: pickout 0.0164    decision 0.0255    set_bounds 0.0102    solve 0.2881    add 0.0758    
Accumulated time: pickout 1.2466    decision 6.8403    set_bounds 4.6487    solve 19.2406    add 2.4220    
Current (lb-rhs): -0.018244445323944092
71999 domains visited
Cumulative time: 35.718945264816284

BaB round 20
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts: total 1260 constraints, 75526 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6267
batch: 238
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 332] [/input-8, 986] [/input-8, 1446] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.11512947082519531
10 lb beta sum: 12.33043384552002, worst -0.040595054626464844
pruning_in_iteration open status: True
ratio of positive domain = 375 / 476 = 0.7878151260504201
pruning-in-iteration extra time: 0.00079345703125
Time: prepare 0.0113    bound 0.2392    transfer 0.0013    finalize 0.0027    func 0.2576    
Accumulated time: func 19.1286    prepare 3.2473    bound 13.8372    transfer 0.7716    finalize 0.8925    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01251 (29), -0.01213 (28), -0.01002 (29), -0.00994 (29), -0.00921 (29), -0.00901 (29), -0.00897 (28), -0.00867 (29), -0.00818 (28), -0.00807 (29), -0.00805 (29), -0.00775 (30), -0.00768 (29), -0.00722 (29), -0.00714 (30), -0.00712 (29), -0.00711 (30), -0.00679 (30), -0.00657 (30), -0.00649 (29), 
Length of domains: 101
Time: pickout 0.0192    decision 0.0241    set_bounds 0.0098    solve 0.2577    add 0.0753    
Accumulated time: pickout 1.2658    decision 6.8644    set_bounds 4.6585    solve 19.4983    add 2.4973    
Current (lb-rhs): -0.012508988380432129
72100 domains visited
Cumulative time: 36.739949226379395

BaB round 21
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 101
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1446] [/input-8, 981] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 986] [/input-8, 1454] 
split level 1: [/input-8, 1454] [/input-8, 1454] [/input-8, 82] [/input-8, 82] [/input-8, 1494] [/input-8, 1494] [/input-8, 1494] [/input-8, 1494] [/input-8, 633] [/input-8, 1494] 
cut re-enabled after branching node selection
0 lb beta sum: 10.590920448303223, worst -0.00529325008392334
10 lb beta sum: 138.2158660888672, worst -0.03210216760635376
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 373 / 404 = 0.9232673267326733
pruning-in-iteration extra time: 0.003107786178588867
Time: prepare 0.0193    bound 0.1517    transfer 0.0014    finalize 0.0026    func 0.1774    
Accumulated time: func 19.3060    prepare 3.2668    bound 13.9888    transfer 0.7730    finalize 0.8952    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00529 (31), -0.00445 (31), -0.00419 (31), -0.00403 (31), -0.00360 (30), -0.00317 (30), -0.00266 (32), -0.00266 (32), -0.00249 (31), -0.00225 (31), -0.00203 (32), -0.00202 (32), -0.00187 (31), -0.00180 (31), -0.00161 (31), -0.00159 (30), -0.00155 (31), -0.00137 (31), -0.00128 (31), -0.00116 (30), 
Length of domains: 31
Time: pickout 0.0144    decision 0.0175    set_bounds 0.0101    solve 0.1775    add 0.0607    
Accumulated time: pickout 1.2802    decision 6.8819    set_bounds 4.6686    solve 19.6758    add 2.5580    
Current (lb-rhs): -0.00529325008392334
72131 domains visited
Cumulative time: 37.02872586250305

BaB round 22
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 31
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 981] [/input-8, 986] [/input-8, 981] [/input-8, 986] [/input-8, 981] [/input-8, 981] [/input-8, 981] [/input-8, 981] [/input-8, 981] [/input-8, 986] 
split level 1: [/input-8, 633] [/input-8, 981] [/input-8, 633] [/input-8, 981] [/input-8, 633] [/input-8, 633] [/input-8, 633] [/input-8, 633] [/input-8, 633] [/input-8, 981] 
split level 2: [/input, 395] [/input-8, 633] [/input, 395] [/input-8, 633] [/input, 395] [/input, 395] [/input, 395] [/input, 395] [/input, 395] [/input-8, 633] 
cut re-enabled after branching node selection
0 lb beta sum: 10.630655288696289, worst -0.012931585311889648
10 lb beta sum: 29.59822654724121, worst -0.0242006778717041
pruning_in_iteration open status: True
ratio of positive domain = 247 / 248 = 0.9959677419354839
pruning-in-iteration extra time: 0.0046007633209228516
Time: prepare 0.0124    bound 0.2662    transfer 0.0010    finalize 0.0018    func 0.2831    
Accumulated time: func 19.5891    prepare 3.2793    bound 14.2551    transfer 0.7740    finalize 0.8970    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00064 (34), 
Length of domains: 1
Time: pickout 0.0066    decision 0.0150    set_bounds 0.0096    solve 0.2832    add 0.0077    
Accumulated time: pickout 1.2868    decision 6.8969    set_bounds 4.6782    solve 19.9590    add 2.5657    
Current (lb-rhs): -0.0006388425827026367
72132 domains visited
Cumulative time: 37.352965116500854

BaB round 23
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1503] 
split level 1: [/input-8, 1883] 
split level 2: [/input-8, 1447] 
split level 3: [/input-8, 102] 
split level 4: [/input, 396] 
split level 5: [/input-8, 81] 
split level 6: [/input, 2519] 
split level 7: [/input, 1768] 
cut re-enabled after branching node selection
0 lb beta sum: 10.732917785644531, worst 0.00400698184967041

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.291534423828125e-05
Time: prepare 0.0127    bound 0.0063    transfer 0.0006    finalize 0.0013    func 0.0226    
Accumulated time: func 19.6117    prepare 3.2925    bound 14.2614    transfer 0.7746    finalize 0.8983    
all_split False
Length of domains: 0
Time: pickout 0.0007    decision 0.0215    set_bounds 0.0187    solve 0.0226    add 0.0001    
Accumulated time: pickout 1.2875    decision 6.9184    set_bounds 4.6969    solve 19.9816    add 2.5658    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
72132 domains visited
Cumulative time: 37.41802263259888

found process to kill: terminal indx = 0
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=24_spec=0_30215642.log
found process for pidx=0
kill process for pidx=0
Result: safe in 39.9197 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 25, vnnlib ID: 25 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.14924717, -7.20264626, -3.62566066, -3.26617622, -3.26720905,
         -3.86512804, -2.64753652, -4.15916395, -7.16723728, -5.27643299]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [704]; unstable size 704; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 299, 1, 704] with unstable size 298 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 704] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [298]; unstable size 298; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 298] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 298] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.08242023, -2.05952239, -2.42161846, -2.46702027, -2.20508480,
         -3.01655006, -2.22386432,  1.33762681, -0.76212668]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.14924717, -7.20264626, -3.62566066, -3.26617622, -3.26720905,
         -3.86512804, -2.64753652, -4.15916395, -7.16723728, -5.27643299]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.14924717, -7.20264530, -3.62566042, -3.26617575, -3.26720858,
          -3.86512756, -2.64753628, -4.15916443, -7.16723728, -5.27643251],
         [-4.14924717, -7.20264530, -3.62566042, -3.26617575, -3.26720858,
          -3.86512756, -2.64753628, -4.15916443, -7.16723728, -5.27643251]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.52358675, -0.88307142, -0.88203859, -0.28411961, -1.50171089,
           0.00991726,  1.12718534]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         ...,


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]],


         [[[ 0.86825401,  0.86825401,  0.80476195,  ...,  1.24920666,
             1.21746063,  1.13809550],
           [ 0.83650798,  0.75714290,  0.72539687,  ...,  1.07460344,
             1.01111114,  0.90000004],
           [ 0.75714290,  0.80476195,  0.82063496,  ...,  0.93174607,
             0.83650798,  0.78888893],
           ...,
           [ 1.18571460,  1.16984153,  1.23333359,  ..., -0.21111101,
             0.20158738,  0.10634929],
           [ 1.28095269,  1.29682565,  1.32857168,  ..., -0.52857143,
            -0.25873005,  0.26507944],
           [ 1.34444475,  1.37619078,  1.40793681,  ..., -0.08412688,
            -0.27460307,  0.09047628]],

          [[ 0.69243163,  0.67632860,  0.62801939,  ...,  1.06280196,
             1.03059590,  0.93397754],
           [ 0.67632860,  0.59581327,  0.56360716,  ...,  0.93397754,
             0.85346222,  0.74074084],
           [ 0.64412248,  0.69243163,  0.72463775,  ...,  0.82125610,
             0.74074084,  0.67632860],
           ...,
           [ 1.06280196,  1.06280196,  1.12721443,  ..., -0.28985494,
             0.14492765,  0.04830930],
           [ 1.09500813,  1.12721443,  1.15942061,  ..., -0.49919480,
            -0.27375188,  0.20933989],
           [ 1.15942061,  1.17552364,  1.20772982,  ..., -0.06441211,
            -0.30595800,  0.01610318]],

          [[ 0.72113961,  0.72113961,  0.67616212,  ...,  0.91604215,
             0.91604215,  0.88605714],
           [ 0.70614707,  0.64617711,  0.60119957,  ...,  0.88605714,
             0.84107965,  0.76611710],
           [ 0.67616212,  0.70614707,  0.73613209,  ...,  0.85607213,
             0.81109464,  0.79610211],
           ...,
           [ 1.03598225,  1.03598225,  1.09595215,  ..., -0.11844061,
             0.19640197,  0.01649191],
           [ 1.11094475,  1.14092970,  1.17091501,  ..., -0.37331331,
            -0.16341813,  0.25637197],
           [ 1.17091501,  1.18590748,  1.21589243,  ..., -0.01349309,
            -0.20839565,  0.10644694]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0534 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 26, vnnlib ID: 26 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.82686090, -6.41171074, -7.68403912, -6.35791826, -7.00407124,
         -6.85788012, -7.81835127, -6.72433424, -6.81869602, -4.52237940]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 573] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 573] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 164] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93261272, 0.64227372, 1.35773551, 0.14541268, 0.77890706, 0.42941666,
         1.61863852, 0.36068940, 0.89056158]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0493 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 27, vnnlib ID: 27 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.06539822, -17.73662376, -13.52726841, -13.91146278, -10.88764858,
         -13.52410698, -16.07256508,  -5.87544203, -16.85854721, -15.41843987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [650]; unstable size 650; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 650] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 650] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 650] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 191] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.35606575, 9.58715725, 6.00918579, 6.42040968, 3.78135014, 6.19913816,
         8.01423836, 8.93800354, 7.41418409]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0450 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 28, vnnlib ID: 28 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.62422132, -12.83205509, -10.86794376, -11.14358330, -11.48577309,
         -12.18943787, -11.86716270, -14.63631248, -10.53621006, -12.42279720]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [928]; unstable size 928; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 124, 1, 928] with unstable size 123 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 928] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 928] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [123]; unstable size 123; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 123] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 123] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.12223959, 2.45312428, 2.49229217, 2.85657811, 3.25084138, 3.41792583,
         5.43004131, 2.01518488, 3.76126575]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0477 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 29, vnnlib ID: 29 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
          -5.51355600,  -5.88568926,  -6.49064875, -10.61816978, -10.64415073]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [574]; unstable size 574; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 216, 1, 574] with unstable size 215 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 574] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 574] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [215]; unstable size 215; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 215] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 215] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.72788858,  3.64086795, -0.86040497, -2.15425515, -2.38526630,
         -1.95328188, -1.94343710,  2.43316650,  2.66482735]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
          -5.51355600,  -5.88568926,  -6.49064875, -10.61816978, -10.64415073]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
           -5.51355553,  -5.88568926,  -6.49064827, -10.61816883, -10.64415073],
         [-10.71822071, -11.80851841,  -6.85466003,  -5.36537838,  -5.07366467,
           -5.51355553,  -5.88568926,  -6.49064827, -10.61816883, -10.64415073]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.36401176, -1.12526989, -1.41698360, -0.97709274, -0.60495901]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]],


         [[[-1.95714283, -1.94126987, -1.94126987,  ..., -1.76666665,
            -1.78253973, -1.79841268],
           [-1.92539680, -1.94126987, -1.94126987,  ..., -1.79841268,
            -1.81428576, -1.83015871],
           [-1.92539680, -1.92539680, -1.94126987,  ..., -1.83015871,
            -1.84603179, -1.86190474],
           ...,
           [ 0.16984135,  0.12222230,  0.24920642,  ..., -0.24285704,
            -0.36984116, -0.49682540],
           [-0.33809513, -0.19523799,  0.05873025,  ..., -0.30634910,
            -0.38571417, -0.49682540],
           [-0.87777776, -0.27460307, -0.02063482,  ..., -0.32222211,
            -0.43333322, -0.54444444]],

          [[-1.94847023, -1.93236721, -1.93236721,  ..., -1.75523353,
            -1.77133656, -1.78743970],
           [-1.91626418, -1.93236721, -1.93236721,  ..., -1.78743970,
            -1.80354273, -1.81964576],
           [-1.91626418, -1.91626418, -1.93236721,  ..., -1.81964576,
            -1.83574879, -1.85185194],
           ...,
           [ 0.04830930, -0.04830906,  0.06441236,  ..., -0.41867942,
            -0.54750401, -0.66022539],
           [-0.46698871, -0.37037024, -0.14492741,  ..., -0.48309177,
            -0.56360704, -0.67632848],
           [-1.03059578, -0.45088565, -0.22544271,  ..., -0.49919480,
            -0.61191624, -0.72463763]],

          [[-1.67766130, -1.66266882, -1.66266882,  ..., -1.49775124,
            -1.51274371, -1.52773619],
           [-1.64767623, -1.66266882, -1.66266882,  ..., -1.52773619,
            -1.54272878, -1.55772126],
           [-1.64767623, -1.64767623, -1.66266882,  ..., -1.55772126,
            -1.57271373, -1.58770621],
           ...,
           [-0.08845562, -0.19340314, -0.13343313,  ..., -0.53823084,
            -0.65817088, -0.76311839],
           [-0.55322337, -0.47826082, -0.29835078,  ..., -0.59820086,
            -0.67316341, -0.76311839],
           [-1.04797614, -0.52323836, -0.34332830,  ..., -0.61319339,
            -0.71814090, -0.80809593]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0605 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 30, vnnlib ID: 30 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.18480682, -14.47258854, -11.18161869, -14.32627869, -12.30105877,
         -15.18956566, -14.34846020, -16.43445969, -12.35407734, -15.00505161]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [778]; unstable size 778; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 155, 1, 778] with unstable size 154 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 778] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 778] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [154]; unstable size 154; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 154] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 154] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.25004578, 2.19218016, 5.06827354, 3.28106451, 5.71236038, 5.22400045,
         7.04772663, 3.23776245, 5.66314316]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0446 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 31, vnnlib ID: 31 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.54959202, -14.93725681,  -9.59988976, -11.64203358,  -7.25195312,
         -11.52101326, -11.52331543,  -9.14212132, -13.16885757, -13.51460266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [559]; unstable size 559; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 280, 1, 559] with unstable size 279 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 559] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 559] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [279]; unstable size 279; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 279] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 279] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.93221837, 5.50633144, 1.10160053, 3.24868989, 3.06275177, 2.55501699,
         0.80379391, 3.91150260, 4.20123243]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0408 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 32, vnnlib ID: 32 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.27112675, -12.63512135,  -8.63367748,  -9.42183304,  -7.46700573,
          -9.92411232,  -9.37480068,  -7.93249464, -10.13228416, -10.65295982]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [673]; unstable size 673; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 673] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 673] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 673] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 249] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.22755623,  2.35429478, -1.18080211, -0.14742768, -1.67962360,
          0.47270048, -0.58272386, -0.47875619,  1.04633427]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.27112675, -12.63512135,  -8.63367748,  -9.42183304,  -7.46700573,
          -9.92411232,  -9.37480068,  -7.93249464, -10.13228416, -10.65295982]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.27112770, -12.63512135,  -8.63367748,  -9.42183399,  -7.46700478,
           -9.92411232,  -9.37480068,  -7.93249464, -10.13228512, -10.65296173],
         [-10.27112770, -12.63512135,  -8.63367748,  -9.42183399,  -7.46700478,
           -9.92411232,  -9.37480068,  -7.93249464, -10.13228512, -10.65296173]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.70118284,  1.48933935, -0.46548986,  1.44230604,  2.19979048]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]],


         [[[ 5.50793707e-01,  2.49206424e-01, -4.76180762e-03,  ...,
            -2.11111009e-01, -1.63491964e-01, -8.41268823e-02],
           [ 3.12698483e-01,  1.53968334e-01, -2.26984024e-01,  ...,
            -1.95237994e-01, -1.47618949e-01, -1.63491964e-01],
           [ 2.01587379e-01,  1.22222304e-01, -1.63491964e-01,  ...,
            -1.79364979e-01, -2.26984024e-01, -1.95237994e-01],
           ...,
           [ 1.11112073e-02, -3.65078375e-02, -5.23808524e-02,  ...,
            -1.15872920e-01, -8.41268823e-02, -3.65078375e-02],
           [-4.76180762e-03, -5.23808524e-02, -6.82538673e-02,  ...,
            -8.41268823e-02, -8.41268823e-02, -6.82538673e-02],
           [-8.41268823e-02, -1.31745934e-01, -1.15872920e-01,  ...,
             1.11112073e-02, -3.65078375e-02, -3.65078375e-02]],

          [[ 1.11111140e+00,  7.08534718e-01,  2.73752123e-01,  ...,
            -1.61030471e-01, -1.12721294e-01, -3.22059989e-02],
           [ 8.37359190e-01,  5.31401038e-01, -6.44121096e-02,  ...,
            -1.44927412e-01, -9.66182351e-02, -1.12721294e-01],
           [ 5.95813274e-01,  4.34782714e-01, -4.83090580e-02,  ...,
            -1.28824353e-01, -1.77133530e-01, -1.44927412e-01],
           ...,
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -1.44927412e-01, -1.28824353e-01, -8.05151686e-02],
           [-1.61029361e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.12721294e-01],
           [-9.66182351e-02, -1.44927412e-01, -1.28824353e-01,  ...,
            -3.22059989e-02, -6.44121096e-02, -8.05151686e-02]],

          [[ 1.56072009e+00,  1.17091501e+00,  6.61169589e-01,  ...,
             7.64619336e-02,  1.06446937e-01,  1.81409463e-01],
           [ 1.23088503e+00,  9.16042149e-01,  2.41379470e-01,  ...,
             7.64619336e-02,  1.21439442e-01,  1.06446937e-01],
           [ 9.01049674e-01,  7.21139610e-01,  1.96401969e-01,  ...,
             9.14544314e-02,  4.64769229e-02,  7.64619336e-02],
           ...,
           [-1.33433133e-01, -1.63418129e-01, -1.78410634e-01,  ...,
            -1.63418129e-01, -8.84556174e-02, -1.34930937e-02],
           [-1.33433133e-01, -1.78410634e-01, -1.93403140e-01,  ...,
            -1.18440613e-01, -7.34631121e-02, -2.84855980e-02],
           [-2.08395645e-01, -2.53373146e-01, -2.38380641e-01,  ...,
            -2.84855980e-02, -2.84855980e-02,  1.49940979e-03]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0525 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 33, vnnlib ID: 33 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.97903728, -15.47458935, -14.82082081, -16.93464851, -16.98804283,
         -18.22283363, -17.40720367, -19.39607430, -13.83522511, -16.04048157]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [961]; unstable size 961; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 147, 1, 961] with unstable size 146 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 961] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 961] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [146]; unstable size 146; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 146] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.36850715, 2.85024309, 4.83520412, 4.84200573, 5.83571911, 5.30677128,
         7.12614679, 1.81439686, 4.14064837]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0640 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 34, vnnlib ID: 34 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.24514103, -9.31445694, -4.68999958, -4.27805805, -4.32876205,
         -4.84132576, -4.94563007, -5.30884266, -9.89639282, -8.35261440]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 576] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 576] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 270] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.30363107,  2.67125368, -0.65277290, -0.97995400,  0.21614310,
         -0.59253991,  0.02449504,  3.50285625,  2.09800625]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.24514103, -9.31445694, -4.68999958, -4.27805805, -4.32876205,
         -4.84132576, -4.94563007, -5.30884266, -9.89639282, -8.35261440]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.15455532, -10.60125256,  -5.41358471,  -5.43196726,  -5.26921654,
           -5.97929192,  -6.01046705,  -6.31621122, -10.86349106,  -9.62036419],
         [ -9.15455532, -10.60125256,  -5.41358471,  -5.43196726,  -5.26921654,
           -5.97929192,  -6.01046705,  -6.31621122, -10.86349106,  -9.62036419]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.01838255, -0.16275072,  0.57849979]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0115 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0571 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 35, vnnlib ID: 35 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.70502281, -7.45960903, -2.49920797, -1.05304623, -3.13333511,
         -1.90231669, -1.12411547, -2.32658529, -5.78024006, -5.08773088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 256, 1, 540] with unstable size 255 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 540] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [255]; unstable size 255; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 255] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 255] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.87189960,  3.69729853,  0.41519809,  1.04059935,  0.46059471,
         -1.19380593,  0.21724123,  2.69666743,  1.93056870]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.70502281, -7.45960903, -2.49920797, -1.05304623, -3.13333511,
         -1.90231669, -1.12411547, -2.32658529, -5.78024006, -5.08773088]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.05819893, -7.58267593, -2.72234511, -1.43960345, -3.43121195,
          -2.28614616, -0.89729089, -2.77882195, -6.09740543, -5.29890108]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54231256]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0625 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 36, vnnlib ID: 36 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.26436710, -5.76788616, -1.08416247,  0.26655820, -2.02816391,
         -0.65419853, -1.94119561, -0.85351741, -4.12531948, -3.61707258]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [746]; unstable size 746; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 148, 1, 746] with unstable size 147 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 746] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 746] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [147]; unstable size 147; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 147] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 147] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.37818599,  3.92298651, -0.56011486, -1.79689813,  0.44506049,
         -0.89399880,  0.06454682,  2.27980328,  1.70670187]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.26436710, -5.76788616, -1.08416247,  0.26655820, -2.02816391,
         -0.65419853, -1.94119561, -0.85351741, -4.12531948, -3.61707258]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.26436663, -5.76788521, -1.08416212,  0.26655802, -2.02816391,
          -0.65419877, -1.94119525, -0.85351765, -4.12531900, -3.61707306],
         [-2.26436663, -5.76788521, -1.08416212,  0.26655802, -2.02816391,
          -0.65419877, -1.94119525, -0.85351765, -4.12531900, -3.61707306]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.23064446, -1.12007570, -0.19931889]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]],


         [[[ 1.85238123,  1.91587329,  1.88412726,  ...,  1.93174624,
             1.96349227,  1.90000021],
           [ 1.82063520,  1.88412726,  1.86825418,  ...,  1.90000021,
             1.93174624,  1.86825418],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  1.91587329,
             1.94761932,  1.90000021],
           ...,
           [ 1.85238123,  1.91587329,  1.88412726,  ..., -0.94126981,
            -1.13174593, -1.14761901],
           [ 1.85238123,  1.90000021,  1.88412726,  ..., -0.43333322,
            -0.90952379, -1.11587298],
           [ 1.83650815,  1.90000021,  1.86825418,  ...,  0.56666672,
            -0.44920623, -0.95714283]],

          [[ 1.90016127,  1.96457350,  1.93236744,  ...,  1.99677968,
             2.02898574,  1.96457350],
           [ 1.86795521,  1.93236744,  1.91626441,  ...,  1.96457350,
             1.99677968,  1.93236744],
           [ 1.88405824,  1.94847047,  1.91626441,  ...,  1.98067665,
             2.01288271,  1.96457350],
           ...,
           [ 1.91626441,  1.98067665,  1.94847047,  ..., -1.35265696,
            -1.44927526, -1.40096617],
           [ 1.91626441,  1.96457350,  1.94847047,  ..., -0.80515295,
            -1.32045078, -1.41706920],
           [ 1.90016127,  1.96457350,  1.93236744,  ...,  0.37037048,
            -0.88566822, -1.30434775]],

          [[ 1.98051023,  2.04048014,  2.01049519,  ...,  2.02548766,
             2.05547261,  1.99550271],
           [ 1.95052516,  2.01049519,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.96551764],
           [ 1.96551764,  2.02548766,  1.99550271,  ...,  1.99550271,
             2.02548766,  1.99550271],
           ...,
           [ 1.95052516,  2.01049519,  1.98051023,  ..., -1.51274371,
            -1.55772126, -1.54272878],
           [ 1.95052516,  1.99550271,  1.98051023,  ..., -1.01799107,
            -1.55772126, -1.52773619],
           [ 1.93553269,  1.99550271,  1.96551764,  ...,  0.27136448,
            -1.21289361, -1.48275876]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0537 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 37, vnnlib ID: 37 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.01291561, -12.13928890, -12.98730183, -15.90724564, -13.82077122,
         -17.84158707, -17.88521957, -16.36121368, -11.50735950, -12.93546104]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [566]; unstable size 566; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 566] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 566] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 566] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 180] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.04726791, 2.13469362, 4.88873768, 2.78446722, 6.62359524, 6.58985138,
         4.87536240, 0.22735929, 1.88157797]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0444 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 38, vnnlib ID: 38 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
         -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [421]; unstable size 421; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 421] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 421] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 421] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 249] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.48716259,  5.17507696,  0.09683537,  0.57209551, -0.21805668,
          0.58378100,  1.18988442,  5.01148224,  3.44507003]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
         -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  9.31it/s]100%|██████████| 1/1 [00:00<00:00,  9.31it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.36143351, -8.27827263, -2.67933655, -3.03170109, -2.11203384,
          -3.19349098, -1.59651995, -3.84145784, -8.13518906, -6.71451759]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.51551390]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1099 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.927520751953125
alpha/beta optimization time: 1.1916446685791016
initial alpha-crown bounds: tensor([[ 4.54304790,  5.26645184,  0.14525390,  0.62454069, -0.16246295,
          0.64612103,  1.25837040,  5.08361483,  3.52258205]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.16246294975280762
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6218 seconds.
lower bounds for all target labels: [4.543048858642578, 5.266451835632324, 0.14525413513183594, 0.6245379447937012, -0.16246318817138672, 0.6461223363876343, 1.2583707571029663, 5.08361291885376, 3.522582530975342]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [4]
start creating model mps for candidates: ['lay/16_4']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.6041247844696
Verifying property 0 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.266451835632324.

Properties batch 1, size 1
Remaining timeout: 198.40213656425476
Verifying property 1 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.083614826202393.

Properties batch 2, size 1
Remaining timeout: 198.2903368473053
Verifying property 2 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.543047904968262.

Properties batch 3, size 1
Remaining timeout: 198.18616247177124
Verifying property 3 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.5225820541381836.

Properties batch 4, size 1
Remaining timeout: 198.08089923858643
Verifying property 4 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2583703994750977.

Properties batch 5, size 1
Remaining timeout: 197.9772219657898
Verifying property 5 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6461210250854492.

Properties batch 6, size 1
Remaining timeout: 197.87091779708862
Verifying property 6 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6245406866073608.

Properties batch 7, size 1
Remaining timeout: 197.76538491249084
Verifying property 7 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.14525389671325684.

Properties batch 8, size 1
Remaining timeout: 197.64891076087952
Verifying property 8 with 1 instances.
##### Instance 38 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.16246295]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.67120075, -8.34336758, -2.96194768, -3.20485783, -2.59110832,
        -3.43676805, -1.38701296, -4.13833094, -8.45190620, -6.74960279],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.16246295]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 421
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 246
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 688
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009446144104003906
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 60] 
split level 2: [/input-12, 35] 
split level 3: [/input-12, 92] 
split level 4: [/input-12, 29] 
split level 5: [/input-12, 11] 
split level 6: [/input-12, 17] 
split level 7: [/input-12, 46] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.649162292480469e-05
Time: prepare 0.0018    bound 0.0130    transfer 0.0036    finalize 0.0027    func 0.0213    
Accumulated time: func 0.0213    prepare 0.0022    bound 0.0130    transfer 0.0036    finalize 0.0027    
all_split False
Length of domains: 0
Time: pickout 0.0005    decision 0.0241    set_bounds 0.0169    solve 0.0213    add 0.0001    
Accumulated time: pickout 0.0005    decision 0.0241    set_bounds 0.0169    solve 0.0213    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06847667694091797

the mip building process is not terminated yet, kill it
Result: safe in 2.7917 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 39, vnnlib ID: 39 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.08262920, -10.85117626,  -6.26876736,  -6.31408882,  -5.73352718,
          -6.74807501,  -3.77881598,  -7.22824049, -11.69428158, -10.35355473]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [375]; unstable size 375; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 375] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 375] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 375] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 208] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.36300135, 4.89374256, 1.18320274, 1.43400931, 0.60667610, 1.79556406,
         1.70379901, 5.56933165, 4.72802114]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0700 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 40, vnnlib ID: 40 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.55409622,  -9.96810532,  -6.92626286,  -8.56464005,  -8.43423653,
          -9.26128197, -10.86567974,  -8.56524467,  -8.85235691, -11.04646587]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 169, 1, 508] with unstable size 168 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 508] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [168]; unstable size 168; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 168] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 168] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.94185495, 0.70694840, 2.04573965, 1.92763674, 2.63131189, 4.18971491,
         1.79439867, 2.23234749, 4.28507805]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0513 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 41, vnnlib ID: 41 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.03971958, -11.64941406, -10.00275898,  -8.47386932,  -9.92812920,
          -8.93652153, -10.23073101, -10.63002968,  -4.10415173,  -9.58254910]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [504]; unstable size 504; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 504] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 504] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 504] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 206] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.82665896, 6.09783554, 4.47349644, 3.14197659, 4.34114599, 3.46894121,
         4.61985540, 4.88829041, 4.12811470]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0450 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 42, vnnlib ID: 42 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
         -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [590]; unstable size 590; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 590] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 590] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 590] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 244] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.87620592,  4.30693913, -0.06645775, -0.26148754,  0.30728030,
         -0.24854964,  2.13002586,  1.88156319,  3.71216249]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
         -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.80it/s]100%|██████████| 1/1 [00:00<00:00,  8.79it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.03449631, -9.09223366, -3.54179525, -2.84015751, -4.05080748,
          -3.00110483, -2.64081597, -5.93490744, -6.32542515, -8.11971188],
         [-6.03449631, -9.09223366, -3.54179525, -2.84015751, -4.05080748,
          -3.00110483, -2.64081597, -5.93490744, -6.32542515, -8.11971188]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.90097928, 0.19934154, 0.36028886]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1168 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 14.594411849975586
alpha/beta optimization time: 1.21343994140625
initial alpha-crown bounds: tensor([[ 1.98166323,  4.46373272,  0.01902866, -0.21572948,  0.40181971,
         -0.18405652,  2.22683120,  2.03213930,  3.86898398]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.2157294750213623
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6297 seconds.
lower bounds for all target labels: [1.9816632270812988, 4.463732719421387, 0.019028186798095703, -0.2157294750213623, 0.40181946754455566, -0.18405652046203613, 2.2268311977386475, 2.032139301300049, 3.8689839839935303]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [3, 5]
start creating model mps for candidates: ['lay/16_3', 'lay/16_5']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=5_30220018.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=5_30220018.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 139496 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 139499 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.5702669620514
Verifying property 0 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.463732719421387.

Properties batch 1, size 1
Remaining timeout: 198.36892676353455
Verifying property 1 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.8689839839935303.

Properties batch 2, size 1
Remaining timeout: 198.23061609268188
Verifying property 2 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2268311977386475.

Properties batch 3, size 1
Remaining timeout: 198.14717769622803
Verifying property 3 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.032139301300049.

Properties batch 4, size 1
Remaining timeout: 198.06697058677673
Verifying property 4 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9816632270812988.

Properties batch 5, size 1
Remaining timeout: 197.97287559509277
Verifying property 5 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.40181970596313477.

Properties batch 6, size 1
Remaining timeout: 197.87767553329468
Verifying property 6 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.019028663635253906.

Properties batch 7, size 1
Remaining timeout: 197.7961175441742
Verifying property 7 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.18405652]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
        -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.18405652]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 590
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 242
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 853
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008764266967773438
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 11] 
split level 4: [/input-12, 13] 
split level 5: [/input-12, 45] 
split level 6: [/input-8, 483] 
split level 7: [/input-8, 475] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.125999450683594e-05
Time: prepare 0.0033    bound 0.0052    transfer 0.0038    finalize 0.0031    func 0.0155    
Accumulated time: func 0.0155    prepare 0.0038    bound 0.0052    transfer 0.0038    finalize 0.0031    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0294    set_bounds 0.0226    solve 0.0155    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0294    set_bounds 0.0226    solve 0.0155    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07503604888916016


Properties batch 8, size 1
Remaining timeout: 197.4715359210968
Verifying property 8 with 1 instances.
##### Instance 42 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21572948]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.23514986, -9.22857761, -3.75808716, -3.27435327, -4.29405165,
        -3.58545446, -2.41056466, -6.29414511, -6.66572762, -8.34386063],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21572948]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 590
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 242
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 853
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00022840499877929688
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 33] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 41] 
split level 5: [/input-12, 13] 
split level 6: [/input-12, 45] 
split level 7: [/input-12, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 248 / 256 = 0.96875
pruning-in-iteration extra time: 0.005130767822265625
Time: prepare 0.0019    bound 0.1524    transfer 0.0007    finalize 0.0016    func 0.1566    
Accumulated time: func 0.1566    prepare 0.0024    bound 0.1524    transfer 0.0007    finalize 0.0016    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09066 (8), -0.08842 (8), -0.04857 (8), -0.04744 (8), -0.03315 (8), -0.03088 (8), -0.02837 (8), -0.02376 (8), 
Length of domains: 8
Time: pickout 0.0004    decision 0.0240    set_bounds 0.0162    solve 0.1567    add 0.0325    
Accumulated time: pickout 0.0004    decision 0.0240    set_bounds 0.0162    solve 0.1567    add 0.0325    
Current (lb-rhs): -0.09065943956375122
8 domains visited
Cumulative time: 0.2516758441925049

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 8
splitting decisions: 
split level 0: [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 1308] [/input-8, 850] [/input-8, 850] [/input-8, 850] 
split level 1: [/input-8, 92] [/input-8, 92] [/input-8, 117] [/input-8, 1909] [/input-8, 117] [/input-8, 1308] [/input-8, 92] [/input-8, 92] 
split level 2: [/input-8, 483] [/input-8, 483] [/input-8, 92] [/input-8, 483] [/input-8, 1909] [/input-8, 1909] [/input-8, 484] [/input-8, 484] 
split level 3: [/input-8, 94] [/input-8, 94] [/input-8, 1909] [/input-8, 94] [/input-8, 92] [/input-8, 483] [/input-8, 654] [/input-8, 654] 
split level 4: [/input-8, 1468] [/input-8, 1468] [/input-8, 483] [/input-8, 484] [/input-8, 620] [/input-8, 94] [/input-8, 620] [/input-8, 620] 
pruning_in_iteration open status: True
ratio of positive domain = 168 / 256 = 0.65625
pruning-in-iteration extra time: 0.005404949188232422
Time: prepare 0.0051    bound 0.1617    transfer 0.0006    finalize 0.0013    func 0.1689    
Accumulated time: func 0.3255    prepare 0.0078    bound 0.3141    transfer 0.0012    finalize 0.0029    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06356 (13), -0.06044 (13), -0.06041 (13), -0.05925 (13), -0.05897 (13), -0.05796 (13), -0.05730 (13), -0.05713 (13), -0.05609 (13), -0.05604 (13), -0.05547 (13), -0.05512 (13), -0.05445 (13), -0.05429 (13), -0.05367 (13), -0.05319 (13), -0.05289 (13), -0.05168 (13), -0.05167 (13), -0.05112 (13), 
Length of domains: 88
Time: pickout 0.0011    decision 0.0204    set_bounds 0.0106    solve 0.1689    add 0.0785    
Accumulated time: pickout 0.0015    decision 0.0444    set_bounds 0.0268    solve 0.3256    add 0.1110    
Current (lb-rhs): -0.06356209516525269
96 domains visited
Cumulative time: 0.5392100811004639

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 88
splitting decisions: 
split level 0: [/input-8, 850] [/input-8, 92] [/input-8, 850] [/input-8, 92] [/input-8, 1453] [/input-8, 1453] [/input-8, 850] [/input-8, 92] [/input-8, 484] [/input-8, 1453] 
split level 1: [/input-8, 92] [/input-8, 654] [/input-8, 92] [/input-8, 654] [/input-8, 654] [/input-8, 654] [/input-8, 92] [/input-8, 484] [/input-8, 654] [/input-8, 654] 
pruning_in_iteration open status: True
ratio of positive domain = 108 / 352 = 0.30681818181818177
pruning-in-iteration extra time: 0.0048372745513916016
Time: prepare 0.0071    bound 0.1511    transfer 0.0033    finalize 0.0030    func 0.1651    
Accumulated time: func 0.4906    prepare 0.0151    bound 0.4651    transfer 0.0045    finalize 0.0059    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05292 (15), -0.05213 (15), -0.05066 (15), -0.04952 (15), -0.04931 (15), -0.04871 (15), -0.04843 (15), -0.04835 (15), -0.04753 (15), -0.04735 (15), -0.04727 (15), -0.04589 (15), -0.04567 (15), -0.04560 (15), -0.04542 (15), -0.04494 (15), -0.04481 (15), -0.04473 (15), -0.04413 (15), -0.04363 (15), 
Length of domains: 244
Time: pickout 0.0151    decision 0.0221    set_bounds 0.0102    solve 0.1653    add 0.0077    
Accumulated time: pickout 0.0166    decision 0.0665    set_bounds 0.0370    solve 0.4909    add 0.1188    
Current (lb-rhs): -0.05292391777038574
340 domains visited
Cumulative time: 0.760777473449707

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 244
splitting decisions: 
split level 0: [/input-8, 654] [/input-8, 979] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 654] [/input-8, 979] [/input-8, 979] [/input-8, 654] [/input-8, 979] 
pruning_in_iteration open status: False
ratio of positive domain = 60 / 488 = 0.12295081967213117
pruning-in-iteration extra time: 6.127357482910156e-05
Time: prepare 0.0098    bound 0.1021    transfer 0.0029    finalize 0.0056    func 0.1206    
Accumulated time: func 0.6111    prepare 0.0251    bound 0.5672    transfer 0.0074    finalize 0.0116    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04734 (16), -0.04681 (16), -0.04531 (16), -0.04465 (16), -0.04419 (16), -0.04375 (16), -0.04373 (16), -0.04317 (16), -0.04278 (16), -0.04274 (16), -0.04273 (16), -0.04256 (16), -0.04219 (16), -0.04184 (16), -0.04162 (16), -0.04158 (16), -0.04103 (16), -0.04054 (16), -0.04047 (16), -0.04042 (16), 
Length of domains: 427
Time: pickout 0.0064    decision 0.0265    set_bounds 0.0114    solve 0.1208    add 0.0923    
Accumulated time: pickout 0.0230    decision 0.0930    set_bounds 0.0485    solve 0.6117    add 0.2110    
Current (lb-rhs): -0.04734295606613159
767 domains visited
Cumulative time: 1.0258734226226807

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 427
splitting decisions: 
split level 0: [/input-8, 475] [/input-8, 484] [/input-8, 484] [/input-8, 979] [/input-8, 654] [/input-8, 484] [/input-8, 484] [/input-8, 654] [/input-8, 475] [/input-8, 654] 
pruning_in_iteration open status: False
ratio of positive domain = 100 / 854 = 0.11709601873536302
pruning-in-iteration extra time: 9.560585021972656e-05
Time: prepare 0.0168    bound 0.1077    transfer 0.0033    finalize 0.0092    func 0.1371    
Accumulated time: func 0.7483    prepare 0.0422    bound 0.6749    transfer 0.0107    finalize 0.0208    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04148 (17), -0.04089 (17), -0.04056 (17), -0.04013 (17), -0.03908 (17), -0.03884 (17), -0.03852 (17), -0.03824 (17), -0.03790 (17), -0.03781 (17), -0.03781 (17), -0.03752 (17), -0.03736 (17), -0.03730 (17), -0.03693 (17), -0.03690 (17), -0.03688 (17), -0.03678 (17), -0.03638 (17), -0.03636 (17), 
Length of domains: 754
Time: pickout 0.0195    decision 0.0355    set_bounds 0.0190    solve 0.1374    add 0.1897    
Accumulated time: pickout 0.0426    decision 0.1285    set_bounds 0.0675    solve 0.7491    add 0.4007    
Current (lb-rhs): -0.041480183601379395
1521 domains visited
Cumulative time: 1.4354002475738525

BaB round 6
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 754
splitting decisions: 
split level 0: [/input-8, 979] [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 979] [/input-8, 475] [/input-8, 475] [/input-8, 475] [/input-8, 475] 
pruning_in_iteration open status: True
ratio of positive domain = 316 / 1508 = 0.20954907161803715
pruning-in-iteration extra time: 0.0024530887603759766
Time: prepare 0.0314    bound 0.1685    transfer 0.0091    finalize 0.0100    func 0.2191    
Accumulated time: func 0.9674    prepare 0.0738    bound 0.8434    transfer 0.0198    finalize 0.0307    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03570 (18), -0.03526 (18), -0.03494 (18), -0.03489 (18), -0.03451 (18), -0.03449 (18), -0.03378 (18), -0.03341 (18), -0.03286 (18), -0.03280 (18), -0.03265 (18), -0.03261 (18), -0.03256 (18), -0.03252 (18), -0.03223 (18), -0.03223 (18), -0.03217 (18), -0.03202 (18), -0.03180 (18), -0.03178 (18), 
Length of domains: 1192
Time: pickout 0.0288    decision 0.0540    set_bounds 0.0358    solve 0.2194    add 0.1064    
Accumulated time: pickout 0.0714    decision 0.1825    set_bounds 0.1033    solve 0.9685    add 0.5071    
Current (lb-rhs): -0.03569763898849487
2713 domains visited
Cumulative time: 1.8923802375793457

BaB round 7
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 1192
splitting decisions: 
split level 0: [/input-8, 1468] [/input-8, 1468] [/input-8, 878] [/input-8, 878] [/input-8, 878] [/input-8, 1468] [/input-8, 1468] [/input-8, 878] [/input-8, 878] [/input-8, 117] 
pruning_in_iteration open status: True
ratio of positive domain = 598 / 2384 = 0.25083892617449666
pruning-in-iteration extra time: 0.0063228607177734375
Time: prepare 0.0574    bound 0.2884    transfer 0.0283    finalize 0.0224    func 0.3970    
Accumulated time: func 1.3643    prepare 0.1315    bound 1.1318    transfer 0.0481    finalize 0.0532    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03221 (19), -0.03161 (19), -0.03144 (19), -0.03136 (19), -0.03095 (19), -0.03086 (19), -0.03022 (19), -0.02996 (19), -0.02979 (19), -0.02957 (19), -0.02934 (19), -0.02920 (19), -0.02914 (19), -0.02909 (19), -0.02907 (19), -0.02906 (19), -0.02885 (19), -0.02881 (19), -0.02876 (19), -0.02860 (19), 
Length of domains: 1786
Time: pickout 0.0238    decision 0.0859    set_bounds 0.0627    solve 0.3976    add 0.1307    
Accumulated time: pickout 0.0952    decision 0.2685    set_bounds 0.1660    solve 1.3662    add 0.6379    
Current (lb-rhs): -0.03220653533935547
4499 domains visited
Cumulative time: 2.6090855598449707

BaB round 8
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0024
batch: 1786
splitting decisions: 
split level 0: [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 1468] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] [/input-8, 117] 
pruning_in_iteration open status: True
ratio of positive domain = 1785 / 3572 = 0.49972004479283316
pruning-in-iteration extra time: 0.006109952926635742
Time: prepare 0.0813    bound 0.2447    transfer 0.0169    finalize 0.0215    func 0.3648    
Accumulated time: func 1.7291    prepare 0.2131    bound 1.3765    transfer 0.0650    finalize 0.0747    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03015 (20), -0.02954 (20), -0.02939 (20), -0.02934 (20), -0.02889 (20), -0.02879 (20), -0.02817 (20), -0.02796 (20), -0.02775 (20), -0.02755 (20), -0.02724 (20), -0.02721 (20), -0.02715 (20), -0.02708 (20), -0.02700 (20), -0.02697 (20), -0.02681 (20), -0.02680 (20), -0.02674 (20), -0.02652 (20), 
Length of domains: 1787
Time: pickout 0.0449    decision 0.2964    set_bounds 0.0870    solve 0.3656    add 0.0973    
Accumulated time: pickout 0.1401    decision 0.5649    set_bounds 0.2530    solve 1.7318    add 0.7351    
Current (lb-rhs): -0.03014552593231201
6286 domains visited
Cumulative time: 3.5237326622009277

BaB round 9
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 1787
splitting decisions: 
split level 0: [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] [/input-8, 485] 
pruning_in_iteration open status: True
ratio of positive domain = 1707 / 3574 = 0.4776161163961947
pruning-in-iteration extra time: 0.0058252811431884766
Time: prepare 0.0836    bound 0.2940    transfer 0.0205    finalize 0.1476    func 0.5461    
Accumulated time: func 2.2751    prepare 0.2971    bound 1.6705    transfer 0.0855    finalize 0.2222    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02637 (21), -0.02583 (21), -0.02569 (21), -0.02559 (21), -0.02528 (21), -0.02495 (21), -0.02471 (21), -0.02421 (21), -0.02417 (21), -0.02373 (21), -0.02365 (21), -0.02344 (21), -0.02343 (21), -0.02334 (21), -0.02327 (21), -0.02323 (21), -0.02322 (21), -0.02298 (21), -0.02284 (21), -0.02271 (21), 
Length of domains: 1867
Time: pickout 0.0427    decision 0.1220    set_bounds 0.0940    solve 0.5469    add 0.1106    
Accumulated time: pickout 0.1828    decision 0.6869    set_bounds 0.3470    solve 2.2787    add 0.8457    
Current (lb-rhs): -0.026369154453277588
8153 domains visited
Cumulative time: 4.4623095989227295

BaB round 10
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 1867
splitting decisions: 
split level 0: [/input-8, 878] [/input-8, 878] [/input-8, 620] [/input-8, 878] [/input-8, 620] [/input-8, 485] [/input-8, 485] [/input-8, 878] [/input-8, 620] [/input-8, 1468] 
pruning_in_iteration open status: True
ratio of positive domain = 1634 / 3734 = 0.43760042849491165
pruning-in-iteration extra time: 0.0059490203857421875
Time: prepare 0.0956    bound 0.2780    transfer 0.0173    finalize 0.0236    func 0.4151    
Accumulated time: func 2.6903    prepare 0.3930    bound 1.9486    transfer 0.1028    finalize 0.2458    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02369 (22), -0.02320 (22), -0.02290 (22), -0.02244 (22), -0.02202 (22), -0.02169 (22), -0.02091 (22), -0.02079 (22), -0.02073 (22), -0.02066 (22), -0.02056 (22), -0.02053 (22), -0.02019 (22), -0.02006 (22), -0.01998 (22), -0.01997 (22), -0.01996 (22), -0.01986 (22), -0.01979 (22), -0.01959 (22), 
Length of domains: 2100
Time: pickout 0.0462    decision 0.1247    set_bounds 0.0903    solve 0.4165    add 0.0992    
Accumulated time: pickout 0.2289    decision 0.8117    set_bounds 0.4373    solve 2.6951    add 0.9449    
Current (lb-rhs): -0.023688077926635742
10253 domains visited
Cumulative time: 5.256353855133057

BaB round 11
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0039
batch: 2100
splitting decisions: 
split level 0: [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 507] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 620] [/input-8, 507] [/input-8, 828] 
pruning_in_iteration open status: True
ratio of positive domain = 1996 / 4200 = 0.47523809523809524
pruning-in-iteration extra time: 0.005802631378173828
Time: prepare 0.1164    bound 0.2721    transfer 0.0268    finalize 0.0385    func 0.4553    
Accumulated time: func 3.1456    prepare 0.5097    bound 2.2206    transfer 0.1296    finalize 0.2843    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01837 (23), -0.01810 (23), -0.01781 (23), -0.01760 (23), -0.01759 (23), -0.01750 (23), -0.01738 (23), -0.01714 (23), -0.01697 (23), -0.01696 (23), -0.01694 (23), -0.01676 (23), -0.01675 (23), -0.01666 (23), -0.01649 (23), -0.01647 (23), -0.01647 (23), -0.01639 (23), -0.01623 (23), -0.01621 (23), 
Length of domains: 2204
Time: pickout 0.0475    decision 0.1353    set_bounds 0.3450    solve 0.4567    add 0.1103    
Accumulated time: pickout 0.2764    decision 0.9470    set_bounds 0.7823    solve 3.1518    add 1.0553    
Current (lb-rhs): -0.018365144729614258
12457 domains visited
Cumulative time: 6.381510972976685

BaB round 12
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 2204
splitting decisions: 
split level 0: [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] [/input-8, 507] 
pruning_in_iteration open status: True
ratio of positive domain = 2373 / 4408 = 0.5383393829401089
pruning-in-iteration extra time: 0.005834102630615234
Time: prepare 0.1081    bound 0.2715    transfer 0.0186    finalize 0.0290    func 0.4275    
Accumulated time: func 3.5731    prepare 0.6182    bound 2.4921    transfer 0.1481    finalize 0.3133    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01402 (24), -0.01382 (24), -0.01355 (24), -0.01327 (24), -0.01308 (24), -0.01294 (24), -0.01292 (24), -0.01277 (24), -0.01272 (24), -0.01242 (24), -0.01241 (24), -0.01237 (24), -0.01224 (24), -0.01220 (24), -0.01218 (24), -0.01218 (24), -0.01204 (24), -0.01199 (24), -0.01195 (24), -0.01182 (24), 
Length of domains: 2035
Time: pickout 0.0513    decision 0.1434    set_bounds 0.1072    solve 0.4289    add 0.0973    
Accumulated time: pickout 0.3277    decision 1.0904    set_bounds 0.8895    solve 3.5807    add 1.1525    
Current (lb-rhs): -0.014015614986419678
14492 domains visited
Cumulative time: 7.233124494552612

BaB round 13
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 2035
splitting decisions: 
split level 0: [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 307] [/input-8, 507] [/input-8, 828] [/input-8, 307] [/input-8, 307] 
pruning_in_iteration open status: True
ratio of positive domain = 2897 / 4070 = 0.7117936117936118
pruning-in-iteration extra time: 0.0070285797119140625
Time: prepare 0.0995    bound 0.2740    transfer 0.0442    finalize 0.0366    func 0.4548    
Accumulated time: func 4.0279    prepare 0.7180    bound 2.7661    transfer 0.1923    finalize 0.3499    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01188 (25), -0.01166 (25), -0.01138 (25), -0.01112 (25), -0.01091 (25), -0.01084 (25), -0.01080 (25), -0.01062 (25), -0.01057 (25), -0.01027 (25), -0.01024 (25), -0.01021 (25), -0.01008 (25), -0.01007 (25), -0.01006 (25), -0.01004 (25), -0.00987 (25), -0.00983 (25), -0.00981 (25), -0.00968 (25), 
Length of domains: 1173
Time: pickout 0.0464    decision 0.3522    set_bounds 0.1471    solve 0.4572    add 0.0968    
Accumulated time: pickout 0.3740    decision 1.4426    set_bounds 1.0366    solve 4.0379    add 1.2493    
Current (lb-rhs): -0.011875033378601074
15665 domains visited
Cumulative time: 8.35974407196045

BaB round 14
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0045
batch: 1173
splitting decisions: 
split level 0: [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] 
pruning_in_iteration open status: True
ratio of positive domain = 1751 / 2346 = 0.7463768115942029
pruning-in-iteration extra time: 0.005637645721435547
Time: prepare 0.0584    bound 0.2386    transfer 0.0045    finalize 0.0146    func 0.3174    
Accumulated time: func 4.3454    prepare 0.7766    bound 3.0047    transfer 0.1968    finalize 0.3645    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00957 (26), -0.00937 (26), -0.00869 (26), -0.00869 (26), -0.00839 (26), -0.00831 (26), -0.00812 (26), -0.00807 (26), -0.00793 (26), -0.00793 (26), -0.00792 (26), -0.00779 (26), -0.00764 (26), -0.00756 (26), -0.00755 (26), -0.00749 (26), -0.00720 (26), -0.00716 (26), -0.00716 (26), -0.00703 (26), 
Length of domains: 595
Time: pickout 0.0384    decision 0.0835    set_bounds 0.0570    solve 0.3181    add 0.0897    
Accumulated time: pickout 0.4124    decision 1.5260    set_bounds 1.0937    solve 4.3560    add 1.3390    
Current (lb-rhs): -0.009570598602294922
16260 domains visited
Cumulative time: 8.964725255966187

BaB round 15
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 595
splitting decisions: 
split level 0: [/input-8, 620] [/input-8, 878] [/input-8, 1453] [/input-8, 1453] [/input-8, 1940] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1940] [/input-8, 1453] 
pruning_in_iteration open status: True
ratio of positive domain = 962 / 1190 = 0.8084033613445378
pruning-in-iteration extra time: 0.005423069000244141
Time: prepare 0.0283    bound 0.1830    transfer 0.0021    finalize 0.0070    func 0.2213    
Accumulated time: func 4.5667    prepare 0.8051    bound 3.1877    transfer 0.1989    finalize 0.3715    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00637 (27), -0.00635 (27), -0.00606 (27), -0.00598 (27), -0.00522 (27), -0.00515 (27), -0.00488 (27), -0.00483 (27), -0.00447 (27), -0.00443 (27), -0.00429 (27), -0.00429 (27), -0.00428 (27), -0.00425 (27), -0.00424 (27), -0.00416 (27), -0.00407 (27), -0.00406 (27), -0.00401 (27), -0.00394 (27), 
Length of domains: 228
Time: pickout 0.0227    decision 0.0459    set_bounds 0.1966    solve 0.2216    add 0.0861    
Accumulated time: pickout 0.4351    decision 1.5719    set_bounds 1.2902    solve 4.5776    add 1.4252    
Current (lb-rhs): -0.006365478038787842
16488 domains visited
Cumulative time: 9.551219701766968

BaB round 16
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 228
splitting decisions: 
split level 0: [/input-8, 124] [/input-8, 124] [/input-8, 124] [/input-8, 124] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 1453] [/input-8, 124] [/input-8, 1453] 
pruning_in_iteration open status: True
ratio of positive domain = 406 / 456 = 0.8903508771929824
pruning-in-iteration extra time: 0.005587577819824219
Time: prepare 0.0097    bound 0.1368    transfer 0.0011    finalize 0.0034    func 0.1510    
Accumulated time: func 4.7177    prepare 0.8150    bound 3.3245    transfer 0.2000    finalize 0.3749    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00414 (28), -0.00413 (28), -0.00383 (28), -0.00375 (28), -0.00299 (28), -0.00293 (28), -0.00264 (28), -0.00259 (28), -0.00231 (28), -0.00230 (28), -0.00220 (28), -0.00215 (28), -0.00208 (28), -0.00203 (28), -0.00190 (28), -0.00189 (28), -0.00188 (28), -0.00177 (28), -0.00173 (28), -0.00170 (28), 
Length of domains: 50
Time: pickout 0.0159    decision 0.0259    set_bounds 0.0103    solve 0.1512    add 0.0620    
Accumulated time: pickout 0.4510    decision 1.5978    set_bounds 1.3006    solve 4.7287    add 1.4871    
Current (lb-rhs): -0.0041353702545166016
16538 domains visited
Cumulative time: 9.83027696609497

BaB round 17
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 50
splitting decisions: 
split level 0: [/input, 391] [/input, 391] [/input-8, 1348] [/input, 391] [/input, 391] [/input, 391] [/input-8, 828] [/input-8, 828] [/input-8, 828] [/input-8, 878] 
split level 1: [/input-8, 1348] [/input-8, 1348] [/input, 391] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input, 391] [/input, 391] [/input, 391] [/input, 391] 
split level 2: [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] [/input-8, 1348] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 400 / 400 = 1.0
pruning-in-iteration extra time: 4.57763671875e-05
Time: prepare 0.0101    bound 0.0044    transfer 0.0021    finalize 0.0024    func 0.0191    
Accumulated time: func 4.7368    prepare 0.8253    bound 3.3289    transfer 0.2021    finalize 0.3772    
all_split False
Length of domains: 0
Time: pickout 0.0087    decision 0.0159    set_bounds 0.0152    solve 0.0192    add 0.0001    
Accumulated time: pickout 0.4598    decision 1.6137    set_bounds 1.3158    solve 4.7479    add 1.4872    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
16538 domains visited
Cumulative time: 9.891807794570923

found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=3_30220018.log
found process to kill: terminal indx = 5
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=5_30220018.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=5_30220018.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=42_spec=5_30220018.log
found process for pidx=3
kill process for pidx=3
found process for pidx=5
Result: safe in 12.8234 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 43, vnnlib ID: 43 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.89999580, -8.55049229, -2.24591589, -3.50618315, -2.26213169,
         -3.34141207, -2.12596679, -3.44707155, -7.70838165, -6.43066359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [559]; unstable size 559; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 559] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 559] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 559] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 275] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.40751857,  2.20469379, -2.32452035, -0.32005548, -2.33795691,
         -2.70371628, -1.07307506,  1.97626185,  0.69333458]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.89999580, -8.55049229, -2.24591589, -3.50618315, -2.26213169,
         -3.34141207, -2.12596679, -3.44707155, -7.70838165, -6.43066359]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.89999676, -8.55049229, -2.24591589, -3.50618315, -2.26213217,
          -3.34141254, -2.12596703, -3.44707155, -7.70838165, -6.43066359],
         [-5.89999676, -8.55049229, -2.24591589, -3.50618315, -2.26213217,
          -3.34141254, -2.12596703, -3.44707155, -7.70838165, -6.43066359]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.09549665,  0.16477060, -1.07928038, -1.21544552,  0.10565901]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]],


         [[[-7.82539666e-01, -7.50793636e-01, -7.50793636e-01,  ...,
            -9.57142830e-01, -7.66666651e-01, -5.92063487e-01],
           [-8.93650770e-01, -7.82539666e-01, -9.41269815e-01,  ...,
            -7.66666651e-01, -7.03174591e-01, -7.50793636e-01],
           [-7.98412681e-01, -7.82539666e-01, -8.61904740e-01,  ...,
            -1.95237994e-01,  2.69842222e-02,  1.38095319e-01],
           ...,
           [-6.55555546e-01, -4.80952382e-01, -2.74603069e-01,  ...,
            -1.05238092e+00, -1.06825387e+00, -9.41269815e-01],
           [-6.39682531e-01, -7.34920621e-01, -6.23809516e-01,  ...,
            -1.09999990e+00, -1.08412695e+00, -9.88888860e-01],
           [-7.19047606e-01, -7.19047606e-01, -5.92063487e-01,  ...,
            -9.41269815e-01, -1.09999990e+00, -1.16349196e+00]],

          [[ 1.61031820e-02,  1.22934580e-07,  1.61031820e-02,  ...,
            -4.83090580e-02,  9.66184735e-02,  2.09339887e-01],
           [-9.66182351e-02,  1.61031820e-02, -1.28824353e-01,  ...,
             4.83092964e-02,  9.66184735e-02,  3.22062373e-02],
           [-3.22059989e-02,  3.22062373e-02,  1.22934580e-07,  ...,
             6.11916363e-01,  8.69565308e-01,  9.33977544e-01],
           ...,
           [-1.61030471e-01,  1.61031820e-02,  2.25442946e-01,  ...,
            -6.92431509e-01, -4.83091772e-01, -3.05958003e-01],
           [ 1.61031820e-02, -6.44121096e-02,  3.22062373e-02,  ...,
            -5.63607037e-01, -4.02576357e-01, -2.73751885e-01],
           [-1.61029361e-02, -6.44121096e-02,  6.44123554e-02,  ...,
            -6.11916244e-01, -6.60225391e-01, -5.79710126e-01]],

          [[-7.18140900e-01, -6.58170879e-01, -7.93103397e-01,  ...,
            -1.03298354e+00, -7.93103397e-01, -5.68215847e-01],
           [-8.68065953e-01, -7.03148425e-01, -9.58020985e-01,  ...,
            -8.98050964e-01, -8.83058429e-01, -8.98050964e-01],
           [-7.18140900e-01, -5.68215847e-01, -7.18140900e-01,  ...,
            -5.23238361e-01, -3.43328297e-01, -2.23388135e-01],
           ...,
           [-6.88155890e-01, -5.23238361e-01, -2.83358276e-01,  ...,
            -1.13793111e+00, -1.12293863e+00, -1.00299859e+00],
           [-5.83208382e-01, -6.73163414e-01, -5.83208382e-01,  ...,
            -1.06296861e+00, -1.03298354e+00, -9.73013461e-01],
           [-5.98200858e-01, -6.58170879e-01, -5.83208382e-01,  ...,
            -9.28035975e-01, -1.01799107e+00, -1.04797614e+00]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0841 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 44, vnnlib ID: 44 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.03364277, -19.56793976, -11.80023479, -14.44734001, -11.96190071,
         -15.16267776, -13.56670475, -14.41914845, -17.25975418, -18.72661972]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 366, 1, 579] with unstable size 365 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 579] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [365]; unstable size 365; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 365] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 365] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.44665456,  4.78386021,  1.24888611, -0.92591429,  1.73357201,
          0.40172124,  0.80255365,  3.31306195,  4.20044756]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-15.03364277, -19.56793976, -11.80023479, -14.44734001, -11.96190071,
         -15.16267776, -13.56670475, -14.41914845, -17.25975418, -18.72661972]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-15.04666615, -19.50651550, -11.78564644, -14.38106823, -11.57203579,
          -15.05305195, -13.48137379, -14.08794785, -17.24640465, -18.64059067]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21361065]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0071 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0793 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 45, vnnlib ID: 45 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.78477669, -6.78171825, -6.26888752, -6.35238361, -6.19891071,
         -6.76594496, -7.28494310, -7.20223379, -6.12016869, -6.41277218]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [523]; unstable size 523; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 523] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 523] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 523] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 203] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.61079025, -2.42233181, -2.06717396, -2.44244194, -1.87546444,
         -1.27228260, -1.18069935, -2.12183666, -1.19985127]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.78477669, -6.78171825, -6.26888752, -6.35238361, -6.19891071,
         -6.76594496, -7.28494310, -7.20223379, -6.12016869, -6.41277218]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.78477764, -6.78171730, -6.26888752, -6.35238314, -6.19891167,
          -6.76594448, -7.28494167, -7.20223379, -6.12016869, -6.41277170],
         [-6.78477764, -6.78171730, -6.26888752, -6.35238314, -6.19891167,
          -6.76594448, -7.28494167, -7.20223379, -6.12016869, -6.41277170]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.00306034, -0.51282978, -0.42933416, -0.58280563, -0.01577282,
           0.50322437,  0.42051649, -0.66154861, -0.36894560]]],
       device='cuda:0')
number of violation:  6
clean attack image tensor([[[[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         ...,


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]],


         [[[-0.90952379, -0.83015871, -0.84603173,  ..., -0.59206349,
            -0.54444444, -0.67142856],
           [-0.92539680, -0.87777776, -1.03650784,  ..., -0.54444444,
            -0.62380952, -0.68730158],
           [-0.97301590, -0.76666665, -0.94126981,  ..., -0.60793650,
            -0.60793650, -0.62380952],
           ...,
           [ 0.53492069,  0.42380959,  0.37619054,  ...,  0.96349210,
             0.96349210,  0.94761908],
           [ 0.75714290,  0.75714290,  0.64603180,  ...,  0.93174607,
             0.93174607,  0.93174607],
           [ 0.91587305,  0.90000004,  0.72539687,  ...,  0.94761908,
             0.93174607,  0.90000004]],

          [[-0.54750401, -0.46698871, -0.48309177,  ..., -0.24154577,
            -0.19323659, -0.32206106],
           [-0.56360704, -0.51529789, -0.67632848,  ..., -0.19323659,
            -0.27375188, -0.33816412],
           [-0.61191624, -0.40257636, -0.57971013,  ..., -0.25764883,
            -0.25764883, -0.27375188],
           ...,
           [ 0.62801939,  0.51529801,  0.46698883,  ...,  1.09500813,
             1.09500813,  1.07890511],
           [ 0.85346222,  0.85346222,  0.74074084,  ...,  1.06280196,
             1.06280196,  1.06280196],
           [ 1.01449287,  0.99838978,  0.82125610,  ...,  1.07890511,
             1.06280196,  1.03059590]],

          [[-0.65817088, -0.58320838, -0.59820086,  ..., -0.25337315,
            -0.20839565, -0.32833579],
           [-0.65817088, -0.61319339, -0.74812591,  ..., -0.20839565,
            -0.28335828, -0.34332830],
           [-0.65817088, -0.47826082, -0.64317840,  ..., -0.26836565,
            -0.26836565, -0.28335828],
           ...,
           [ 0.82608712,  0.72113961,  0.67616212,  ...,  1.24587750,
             1.24587750,  1.23088503],
           [ 1.03598225,  1.03598225,  0.93103468,  ...,  1.21589243,
             1.21589243,  1.21589243],
           [ 1.18590748,  1.17091501,  1.00599718,  ...,  1.23088503,
             1.21589243,  1.18590748]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0885 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 46, vnnlib ID: 46 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.35317993, -10.05822277,  -5.70741463,  -5.30954361,  -5.77602005,
          -5.75247955,  -5.90963793,  -7.28197336,  -9.95428562,  -8.67804050]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [767]; unstable size 767; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 280, 1, 767] with unstable size 279 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 767] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 767] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [279]; unstable size 279; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 279] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 279] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.12624133,  2.47288227, -1.31481600, -0.78547335, -1.26456141,
         -0.82690167,  0.44953930,  2.35486078,  1.43794250]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.35317993, -10.05822277,  -5.70741463,  -5.30954361,  -5.77602005,
          -5.75247955,  -5.90963793,  -7.28197336,  -9.95428562,  -8.67804050]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.35317993, -10.05822277,  -5.70741367,  -5.30954361,  -5.77602053,
           -5.75248098,  -5.90963840,  -7.28197336,  -9.95428562,  -8.67804050],
         [ -7.35317993, -10.05822277,  -5.70741367,  -5.30954361,  -5.77602053,
           -5.75248098,  -5.90963840,  -7.28197336,  -9.95428562,  -8.67804050]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04506731, -0.44293737,  0.02353954,  0.15715742]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]],


         [[[ 6.93650842e-01, -2.11111009e-01,  1.06349289e-01,  ...,
             5.87302521e-02,  7.46032670e-02,  1.22222304e-01],
           [ 7.57142901e-01, -1.47618949e-01,  7.46032670e-02,  ...,
             1.22222304e-01,  9.04762819e-02,  1.06349289e-01],
           [ 8.52380991e-01, -6.82538673e-02,  1.06349289e-01,  ...,
             9.04762819e-02,  9.04762819e-02,  1.22222304e-01],
           ...,
           [ 1.83650815e+00,  1.10634947e+00,  9.31746066e-01,  ...,
             9.47619081e-01,  9.31746066e-01,  8.20634961e-01],
           [ 1.82063520e+00,  1.09047651e+00,  9.31746066e-01,  ...,
             5.66666722e-01,  6.61904812e-01,  6.46031797e-01],
           [ 1.85238123e+00,  1.15396857e+00,  1.05873048e+00,  ...,
             5.50793707e-01,  5.66666722e-01,  5.34920692e-01]],

          [[ 6.60225511e-01, -4.99194801e-01, -2.73751885e-01,  ...,
            -6.44121096e-02, -4.83090580e-02,  1.22934580e-07],
           [ 7.24637747e-01, -4.34782475e-01, -3.05958003e-01,  ...,
             1.22934580e-07, -3.22059989e-02, -1.61029361e-02],
           [ 8.21256101e-01, -3.54267180e-01, -2.73751885e-01,  ...,
            -1.61029361e-02, -3.22059989e-02,  1.61031820e-02],
           ...,
           [ 1.98067665e+00,  1.17552364e+00,  9.33977544e-01,  ...,
             6.28019392e-01,  6.11916363e-01,  5.31401038e-01],
           [ 1.96457350e+00,  1.14331758e+00,  9.33977544e-01,  ...,
            -1.61029361e-02,  9.66184735e-02,  9.66184735e-02],
           [ 1.99677968e+00,  1.22383285e+00,  1.04669893e+00,  ...,
            -2.09339648e-01, -1.93236589e-01, -2.25442708e-01]],

          [[ 7.96102107e-01, -3.73313308e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -5.84706068e-02, -1.34930937e-02],
           [ 8.56072128e-01, -3.13343287e-01, -2.98350781e-01,  ...,
            -2.84855980e-02, -5.84706068e-02, -4.34781015e-02],
           [ 9.46027160e-01, -2.38380641e-01, -2.68365651e-01,  ...,
            -7.34631121e-02, -8.84556174e-02, -4.34781015e-02],
           ...,
           [ 2.04048014e+00,  1.29085493e+00,  1.00599718e+00,  ...,
             6.16192102e-01,  4.96252000e-01,  3.46327007e-01],
           [ 2.02548766e+00,  1.27586246e+00,  1.00599718e+00,  ...,
            -1.48425624e-01, -1.63418129e-01, -2.23388135e-01],
           [ 2.05547261e+00,  1.33583248e+00,  1.12593722e+00,  ...,
            -5.38230836e-01, -5.68215847e-01, -5.98200858e-01]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0805 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 47, vnnlib ID: 47 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.96445751, -13.95264721, -11.88872242, -12.43732738, -11.28103065,
         -13.65725136, -13.27398205, -14.68500137,  -4.78945637, -13.98094654]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [407]; unstable size 407; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 136, 1, 407] with unstable size 135 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 407] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 407] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [135]; unstable size 135; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 135] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 135] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.02164364, 7.83872032, 5.93336391, 6.63180161, 5.40730762, 7.70184612,
         7.39634609, 8.62479115, 8.04601288]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0720 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 48, vnnlib ID: 48 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.38742971, -8.09583473, -4.17398930, -2.21849561, -4.56612682,
         -1.60451329, -3.84133196, -3.18707657, -8.22775269, -6.31927729]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [525]; unstable size 525; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 525] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 525] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 525] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 226] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.95492077, 4.49830723, 1.13714671, 0.18978095, 1.74934769, 0.88679516,
         0.59362930, 4.57968712, 2.70802236]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0652 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 49, vnnlib ID: 49 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.61658096,  -4.85169363, -11.21480465, -12.01975822, -10.98789406,
         -12.65254879, -10.85314465, -10.63402939,  -8.40850830,  -8.61452770]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [603]; unstable size 603; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 603] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 603] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 603] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 214] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.89015579, 3.85943222, 4.84163618, 3.92532969, 5.16841745, 3.74945736,
         3.27850246, 1.93241119, 2.38752604]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0698 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 50, vnnlib ID: 50 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.94205475, -17.04773521, -14.67247200, -15.90819740, -14.60353470,
         -15.82103157, -16.25810432, -18.06786919, -16.98810387, -17.41020012]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [822]; unstable size 822; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 273, 1, 822] with unstable size 272 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 822] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 822] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [272]; unstable size 272; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 272] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 272] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.36523795, -0.94602108, -2.17604685, -0.24087635, -2.33651733,
         -0.49621725,  0.76373535, -0.90574360, -0.11941814]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-14.94205475, -17.04773521, -14.67247200, -15.90819740, -14.60353470,
         -15.82103157, -16.25810432, -18.06786919, -16.98810387, -17.41020012]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-14.94205666, -17.04773521, -14.67247486, -15.90820122, -14.60353661,
          -15.82103348, -16.25810814, -18.06787491, -16.98810387, -17.41019821],
         [-14.94205666, -17.04773521, -14.67247486, -15.90820122, -14.60353661,
          -15.82103348, -16.25810814, -18.06787491, -16.98810387, -17.41019821]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.87897682,  1.22670174, -1.14855862,  0.08716774, -1.21749687,
           0.43707466,  1.16707039,  1.58916473]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         ...,


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]],


         [[[-1.09999990, -1.06825387, -1.08412695,  ..., -1.24285710,
            -1.25873005, -1.30634916],
           [-1.06825387, -1.05238092, -1.06825387,  ..., -1.14761901,
            -1.14761901, -1.16349196],
           [-1.08412695, -1.06825387, -1.08412695,  ..., -1.00476182,
            -0.98888886, -0.98888886],
           ...,
           [ 0.01111121,  0.05873025,  0.05873025,  ...,  0.29682547,
             0.39206356,  0.34444451],
           [-0.00476181,  0.01111121,  0.02698422,  ...,  0.43968260,
             0.43968260,  0.37619054],
           [-0.02063482,  0.01111121,  0.04285724,  ...,  0.42380959,
             0.40793657,  0.39206356]],

          [[-1.15942025, -1.12721407, -1.14331722,  ..., -1.28824472,
            -1.32045078, -1.35265696],
           [-1.12721407, -1.11111104, -1.12721407,  ..., -1.20772946,
            -1.20772946, -1.22383249],
           [-1.14331722, -1.12721407, -1.14331722,  ..., -1.09500802,
            -1.07890499, -1.07890499],
           ...,
           [-0.11272129, -0.06441211, -0.06441211,  ..., -0.01610294,
             0.16103071,  0.16103071],
           [-0.12882435, -0.11272129, -0.09661824,  ...,  0.14492765,
             0.20933989,  0.19323683],
           [-0.16103047, -0.12882435, -0.09661824,  ...,  0.14492765,
             0.16103071,  0.19323683]],

          [[-1.03298354, -1.00299859, -1.01799107,  ..., -1.10794616,
            -1.13793111, -1.16791618],
           [-1.00299859, -0.98800600, -1.00299859,  ..., -1.04797614,
            -1.04797614, -1.06296861],
           [-1.01799107, -1.00299859, -1.01799107,  ..., -0.97301346,
            -0.95802099, -0.95802099],
           ...,
           [-0.11844061, -0.07346311, -0.07346311,  ..., -0.08845562,
             0.06146942,  0.07646193],
           [-0.13343313, -0.11844061, -0.10344811,  ...,  0.06146942,
             0.10644694,  0.10644694],
           [-0.16341813, -0.11844061, -0.10344811,  ...,  0.04647692,
             0.07646193,  0.10644694]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0892 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 51, vnnlib ID: 51 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.99211121, -14.04107761,  -7.31353474,  -9.89678955,  -8.41009998,
         -10.75332451, -10.63476658, -14.15501976,  -8.49472427, -14.58970451]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 141, 1, 584] with unstable size 140 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 584] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [140]; unstable size 140; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 140] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 140] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.93474388, 0.60455751, 3.06741571, 1.66697311, 3.81926012, 3.66227579,
         7.25833130, 1.59742701, 7.46314812]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0655 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 52, vnnlib ID: 52 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.61421394, -9.33402538, -5.16767883, -2.64045858, -3.99503326,
         -2.02855682, -4.62166262, -4.60086203, -9.98200893, -8.04814816]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [560]; unstable size 560; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 560] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 560] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 560] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 249] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.83084631, 5.06325245, 1.78347683, 0.29397488, 0.66198230, 1.20087194,
         1.58306217, 5.80479527, 4.18815947]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0508 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 53, vnnlib ID: 53 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.78492880, -7.88765907, -5.16387463, -4.98481178, -5.33830261,
         -5.60749578, -4.95262003, -5.78874540, -8.26618099, -6.25775003]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 170, 1, 600] with unstable size 169 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 600] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [169]; unstable size 169; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 169] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.27218628,  1.68873835, -0.96977460, -0.89153814, -0.69919324,
         -0.37939477, -0.73812211,  2.16678500,  0.28935480]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.78492880, -7.88765907, -5.16387463, -4.98481178, -5.33830261,
         -5.60749578, -4.95262003, -5.78874540, -8.26618099, -6.25775003]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.78492785, -7.88765907, -5.16387367, -4.98481131, -5.33830214,
          -5.60749578, -4.95261955, -5.78874445, -8.26618099, -6.25774956],
         [-4.78492785, -7.88765907, -5.16387367, -4.98481131, -5.33830214,
          -5.60749578, -4.95261955, -5.78874445, -8.26618099, -6.25774956]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16769171,  0.21125412,  0.03219175,  0.38568258,  0.65487623,
           0.83612490]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]],


         [[[ 1.53492093,  1.47142887,  1.45555580,  ..., -0.78253967,
            -0.78253967, -0.51269841],
           [ 1.56666696,  1.53492093,  1.50317490,  ..., -0.73492062,
            -0.70317459, -0.36984116],
           [ 1.63015902,  1.59841299,  1.56666696,  ..., -0.63968253,
            -0.56031746, -0.14761895],
           ...,
           [ 1.48730183,  1.21746063,  1.09047651,  ...,  1.40793681,
             1.37619078,  1.34444475],
           [ 1.45555580,  1.28095269,  1.28095269,  ...,  1.45555580,
             1.40793681,  1.37619078],
           [ 1.39206374,  1.37619078,  1.37619078,  ...,  1.51904786,
             1.47142887,  1.42380977]],

          [[ 1.67471850,  1.61030626,  1.59420323,  ..., -0.48309177,
            -0.48309177, -0.24154577],
           [ 1.70692456,  1.65861547,  1.62640929,  ..., -0.43478248,
            -0.41867942, -0.08051517],
           [ 1.75523376,  1.72302771,  1.69082153,  ..., -0.33816412,
            -0.25764883,  0.12882459],
           ...,
           [ 1.65861547,  1.41706955,  1.22383285,  ...,  1.57810009,
             1.54589403,  1.52979100],
           [ 1.59420323,  1.43317258,  1.41706955,  ...,  1.61030626,
             1.57810009,  1.54589403],
           [ 1.52979100,  1.49758482,  1.52979100,  ...,  1.65861547,
             1.62640929,  1.59420323]],

          [[ 1.39580250,  1.33583248,  1.32084000,  ..., -0.97301346,
            -0.92803597, -0.61319339],
           [ 1.45577252,  1.41079497,  1.38081002,  ..., -0.94302845,
            -0.85307342, -0.46326834],
           [ 1.54572761,  1.51574254,  1.48575759,  ..., -0.83808094,
            -0.70314842, -0.26836565],
           ...,
           [ 1.51574254,  1.23088503,  0.91604215,  ...,  1.41079497,
             1.30584753,  1.29085493],
           [ 1.47076499,  1.26086998,  1.17091501,  ...,  1.53073502,
             1.39580250,  1.33583248],
           [ 1.32084000,  1.26086998,  1.29085493,  ...,  1.68066013,
             1.51574254,  1.42578757]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0652 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 54, vnnlib ID: 54 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
         -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 638] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 638] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 200] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.26122451,  2.70693874, -0.04236650,  0.30218887,  0.55265045,
          0.28326631,  0.97746348, -0.14264750,  2.10263681]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
         -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.56it/s]100%|██████████| 1/1 [00:00<00:00,  8.55it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.18685913, -9.02146721, -6.04399967, -6.18254805, -6.46242762,
          -6.28525734, -6.96298456, -5.72760868, -4.99939823, -8.02779961],
         [-8.18685913, -9.02146721, -6.04399967, -6.18254805, -6.46242762,
          -6.28525734, -6.96298456, -5.72760868, -4.99939823, -8.02779961]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.04460144, 0.72821045]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1200 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 9.889850616455078
alpha/beta optimization time: 1.2560341358184814
initial alpha-crown bounds: tensor([[ 2.37169123,  2.83057594,  0.08211231,  0.37143302,  0.65308642,
          0.37245798,  1.04918575, -0.03270423,  2.19201255]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.03270423412322998
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6296 seconds.
lower bounds for all target labels: [2.3716914653778076, 2.8305752277374268, 0.08211326599121094, 0.3714313507080078, 0.6530859470367432, 0.37245750427246094, 1.049187183380127, -0.03270459175109863, 2.19201397895813]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [7]
start creating model mps for candidates: ['lay/16_7']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.52588391304016
Verifying property 0 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.830575942993164.

Properties batch 1, size 1
Remaining timeout: 198.3377788066864
Verifying property 1 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3716912269592285.

Properties batch 2, size 1
Remaining timeout: 198.23119068145752
Verifying property 2 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1920125484466553.

Properties batch 3, size 1
Remaining timeout: 198.1261010169983
Verifying property 3 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0491857528686523.

Properties batch 4, size 1
Remaining timeout: 198.0202133655548
Verifying property 4 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6530864238739014.

Properties batch 5, size 1
Remaining timeout: 197.9154589176178
Verifying property 5 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.37245798110961914.

Properties batch 6, size 1
Remaining timeout: 197.81243324279785
Verifying property 6 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3714330196380615.

Properties batch 7, size 1
Remaining timeout: 197.70801663398743
Verifying property 7 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.08211231231689453.

Properties batch 8, size 1
Remaining timeout: 197.60301733016968
Verifying property 8 with 1 instances.
##### Instance 54 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03270423]], device='cuda:0') need to verify.
Model prediction is: tensor([-8.60030365, -9.18505859, -6.79131508, -6.88497829, -7.22082901,
        -7.05521584, -7.65325308, -6.61295652, -4.71676254, -8.33832359],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03270423]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 638
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 196
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 854
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008406639099121094
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 31] 
split level 1: [/input-12, 18] 
split level 2: [/input-12, 36] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 26] 
split level 6: [/input-8, 1892] 
split level 7: [/input-8, 875] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.5299530029296875e-05
Time: prepare 0.0032    bound 0.0047    transfer 0.0044    finalize 0.0026    func 0.0149    
Accumulated time: func 0.0149    prepare 0.0036    bound 0.0047    transfer 0.0044    finalize 0.0026    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0258    set_bounds 0.0226    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0258    set_bounds 0.0226    solve 0.0150    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07024860382080078

the mip building process is not terminated yet, kill it
Result: safe in 2.8457 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 55, vnnlib ID: 55 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
          -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [553]; unstable size 553; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 553] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 553] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 553] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 288] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.69566989,  4.02234936, -0.46736056,  1.18290877, -0.48098493,
          1.44691169,  2.02048278,  4.17298079,  4.86422634]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
          -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.68it/s]100%|██████████| 1/1 [00:00<00:00,  8.67it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.66092777, -10.91280365,  -4.69080067,  -6.58803511,  -5.26302862,
           -6.99822426,  -4.68125200,  -8.21521473, -10.48723888, -11.44526005],
         [ -8.66092777, -10.91280365,  -4.69080067,  -6.58803511,  -5.26302862,
           -6.99822426,  -4.68125200,  -8.21521473, -10.48723888, -11.44526005]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.00954866, 0.58177662]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1184 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 20.3638858795166
alpha/beta optimization time: 1.2071592807769775
initial alpha-crown bounds: tensor([[ 2.79173470,  4.12782192, -0.40548486,  1.27908754, -0.38319397,
          1.54761827,  2.13196874,  4.29718590,  4.97714663]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.4054848551750183
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6250 seconds.
lower bounds for all target labels: [2.7917373180389404, 4.127820014953613, -0.405484139919281, 1.2790886163711548, -0.38319385051727295, 1.547616958618164, 2.1319684982299805, 4.297183990478516, 4.977147102355957]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 4]
start creating model mps for candidates: ['lay/16_2', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=4_30221678.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=4_30221678.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 140503 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 140506 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.54706025123596
Verifying property 0 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.977146625518799.

Properties batch 1, size 1
Remaining timeout: 198.37427306175232
Verifying property 1 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.297185897827148.

Properties batch 2, size 1
Remaining timeout: 198.26431369781494
Verifying property 2 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.127821922302246.

Properties batch 3, size 1
Remaining timeout: 198.16096782684326
Verifying property 3 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7917346954345703.

Properties batch 4, size 1
Remaining timeout: 198.05851697921753
Verifying property 4 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.1319687366485596.

Properties batch 5, size 1
Remaining timeout: 197.94980573654175
Verifying property 5 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.5476182699203491.

Properties batch 6, size 1
Remaining timeout: 197.83841967582703
Verifying property 6 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2790875434875488.

Properties batch 7, size 1
Remaining timeout: 197.7350025177002
Verifying property 7 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.38319397]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
         -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.38319397]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 553
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 283
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 856
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006439685821533203
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 65] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 35] 
split level 3: [/input-12, 60] 
split level 4: [/input-12, 41] 
split level 5: [/input-12, 11] 
split level 6: [/input-12, 46] 
split level 7: [/input-12, 32] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.57763671875e-05
Time: prepare 0.0019    bound 0.0050    transfer 0.0038    finalize 0.0023    func 0.0130    
Accumulated time: func 0.0130    prepare 0.0023    bound 0.0050    transfer 0.0038    finalize 0.0023    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0253    set_bounds 0.0176    solve 0.0131    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0253    set_bounds 0.0176    solve 0.0131    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.062085628509521484


Properties batch 8, size 1
Remaining timeout: 197.49515175819397
Verifying property 8 with 1 instances.
##### Instance 55 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.40548486]], device='cuda:0') need to verify.
Model prediction is: tensor([ -8.89316845, -11.06601906,  -5.14806175,  -6.90553761,  -5.56315517,
         -7.37682629,  -4.56512213,  -8.62777042, -10.82919407, -11.60672951],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.40548486]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 553
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 283
Node /15 input 0: size torch.Size([100]) unstable 20
-----------------
# of unstable neurons: 856
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0002913475036621094
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 11] 
split level 2: [/input-12, 58] 
split level 3: [/input-12, 65] 
split level 4: [/input-12, 35] 
split level 5: [/input-8, 1902] 
split level 6: [/input-8, 1563] 
split level 7: [/input-8, 1903] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 256 = 0.75
pruning-in-iteration extra time: 0.005171775817871094
Time: prepare 0.0033    bound 0.1128    transfer 0.0008    finalize 0.0022    func 0.1191    
Accumulated time: func 0.1191    prepare 0.0037    bound 0.1128    transfer 0.0008    finalize 0.0022    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.23587 (8), -0.23479 (8), -0.23205 (8), -0.23121 (8), -0.23090 (8), -0.23056 (8), -0.22740 (8), -0.22667 (8), -0.22381 (8), -0.22358 (8), -0.22343 (8), -0.22225 (8), -0.22190 (8), -0.22102 (8), -0.22011 (8), -0.21997 (8), -0.21969 (8), -0.21909 (8), -0.21842 (8), -0.21801 (8), 
Length of domains: 64
Time: pickout 0.0004    decision 0.0223    set_bounds 0.0191    solve 0.1193    add 0.0709    
Accumulated time: pickout 0.0004    decision 0.0223    set_bounds 0.0191    solve 0.1193    add 0.0709    
Current (lb-rhs): -0.2358715534210205
64 domains visited
Cumulative time: 0.24255633354187012

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 64
splitting decisions: 
split level 0: [/input-8, 1371] [/input-8, 1371] [/input-8, 1370] [/input-8, 1371] [/input-8, 147] [/input-8, 1371] [/input-8, 1370] [/input-8, 1371] [/input-8, 1371] [/input-8, 1371] 
split level 1: [/input-8, 924] [/input-8, 924] [/input-8, 1371] [/input-8, 1020] [/input-8, 924] [/input-8, 924] [/input-8, 1371] [/input-8, 1020] [/input-8, 924] [/input-8, 924] 
pruning_in_iteration open status: True
ratio of positive domain = 66 / 256 = 0.2578125
pruning-in-iteration extra time: 0.002972126007080078
Time: prepare 0.0051    bound 0.1454    transfer 0.0008    finalize 0.0018    func 0.1531    
Accumulated time: func 0.2723    prepare 0.0090    bound 0.2582    transfer 0.0015    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22515 (10), -0.22401 (10), -0.22134 (10), -0.22053 (10), -0.22009 (10), -0.21973 (10), -0.21825 (10), -0.21756 (10), -0.21671 (10), -0.21581 (10), -0.21441 (10), -0.21432 (10), -0.21364 (10), -0.21362 (10), -0.21353 (10), -0.21331 (10), -0.21329 (10), -0.21297 (10), -0.21264 (10), -0.21163 (10), 
Length of domains: 190
Time: pickout 0.0148    decision 0.0141    set_bounds 0.0070    solve 0.1532    add 0.0402    
Accumulated time: pickout 0.0152    decision 0.0365    set_bounds 0.0261    solve 0.2725    add 0.1111    
Current (lb-rhs): -0.22515445947647095
254 domains visited
Cumulative time: 0.47284746170043945

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 190
splitting decisions: 
split level 0: [/input-8, 1436] [/input-8, 1370] [/input-8, 650] [/input-8, 1370] [/input-8, 1436] [/input-8, 1370] [/input-8, 650] [/input-8, 1370] [/input-8, 1436] [/input-8, 1370] 
pruning_in_iteration open status: True
ratio of positive domain = 86 / 380 = 0.22631578947368425
pruning-in-iteration extra time: 0.0019941329956054688
Time: prepare 0.0079    bound 0.1296    transfer 0.0040    finalize 0.0056    func 0.1471    
Accumulated time: func 0.4194    prepare 0.0170    bound 0.3878    transfer 0.0055    finalize 0.0096    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.22107 (11), -0.22022 (11), -0.21731 (11), -0.21643 (11), -0.21628 (11), -0.21591 (11), -0.21419 (11), -0.21377 (11), -0.21266 (11), -0.21197 (11), -0.21050 (11), -0.21041 (11), -0.20998 (11), -0.20985 (11), -0.20952 (11), -0.20947 (11), -0.20875 (11), -0.20875 (11), -0.20870 (11), -0.20757 (11), 
Length of domains: 294
Time: pickout 0.0061    decision 0.0238    set_bounds 0.0093    solve 0.1472    add 0.0842    
Accumulated time: pickout 0.0212    decision 0.0602    set_bounds 0.0354    solve 0.4197    add 0.1953    
Current (lb-rhs): -0.22107034921646118
548 domains visited
Cumulative time: 0.7505793571472168

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 294
splitting decisions: 
split level 0: [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 1436] [/input-8, 933] [/input-8, 1020] [/input-8, 1436] 
pruning_in_iteration open status: False
ratio of positive domain = 62 / 588 = 0.1054421768707483
pruning-in-iteration extra time: 8.654594421386719e-05
Time: prepare 0.0115    bound 0.1226    transfer 0.0095    finalize 0.0057    func 0.1494    
Accumulated time: func 0.5688    prepare 0.0287    bound 0.5103    transfer 0.0150    finalize 0.0153    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21712 (12), -0.21319 (12), -0.21288 (12), -0.21246 (12), -0.21160 (12), -0.21022 (12), -0.20920 (12), -0.20884 (12), -0.20824 (12), -0.20769 (12), -0.20726 (12), -0.20674 (12), -0.20602 (12), -0.20587 (12), -0.20570 (12), -0.20554 (12), -0.20515 (12), -0.20485 (12), -0.20467 (12), -0.20364 (12), 
Length of domains: 525
Time: pickout 0.0175    decision 0.0292    set_bounds 0.0139    solve 0.1495    add 0.1691    
Accumulated time: pickout 0.0387    decision 0.0894    set_bounds 0.0493    solve 0.5692    add 0.3644    
Current (lb-rhs): -0.21711570024490356
1073 domains visited
Cumulative time: 1.1374194622039795

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 525
splitting decisions: 
split level 0: [/input-8, 650] [/input-8, 1436] [/input-8, 933] [/input-8, 1436] [/input-8, 650] [/input-8, 933] [/input-8, 933] [/input-8, 1436] [/input-8, 650] [/input-8, 933] 
pruning_in_iteration open status: False
ratio of positive domain = 26 / 1050 = 0.024761904761904763
pruning-in-iteration extra time: 5.435943603515625e-05
Time: prepare 0.0202    bound 0.1070    transfer 0.0091    finalize 0.0072    func 0.1446    
Accumulated time: func 0.7134    prepare 0.0491    bound 0.6173    transfer 0.0241    finalize 0.0226    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.21013 (13), -0.20932 (13), -0.20845 (13), -0.20752 (13), -0.20587 (13), -0.20546 (13), -0.20495 (13), -0.20484 (13), -0.20421 (13), -0.20380 (13), -0.20321 (13), -0.20317 (13), -0.20313 (13), -0.20287 (13), -0.20153 (13), -0.20119 (13), -0.20106 (13), -0.20047 (13), -0.19961 (13), -0.19892 (13), 
Length of domains: 1024
Time: pickout 0.0201    decision 0.0423    set_bounds 0.0233    solve 0.1448    add 0.1082    
Accumulated time: pickout 0.0587    decision 0.1317    set_bounds 0.0726    solve 0.7141    add 0.4727    
Current (lb-rhs): -0.21012938022613525
2097 domains visited
Cumulative time: 1.4845507144927979

BaB round 6
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0032
batch: 1024
splitting decisions: 
split level 0: [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 1020] [/input-8, 1018] [/input-8, 933] [/input-8, 1018] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 2048 = 0.0
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0395    bound 0.1189    transfer 0.0287    finalize 0.0131    func 0.2013    
Accumulated time: func 0.9146    prepare 0.0888    bound 0.7363    transfer 0.0529    finalize 0.0357    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20810 (14), -0.20717 (14), -0.20642 (14), -0.20537 (14), -0.20382 (14), -0.20342 (14), -0.20278 (14), -0.20269 (14), -0.20219 (14), -0.20177 (14), -0.20101 (14), -0.20099 (14), -0.20097 (14), -0.20050 (14), -0.19931 (14), -0.19917 (14), -0.19870 (14), -0.19831 (14), -0.19755 (14), -0.19679 (14), 
Length of domains: 2048
Time: pickout 0.0115    decision 0.0675    set_bounds 0.0450    solve 0.2017    add 0.1006    
Accumulated time: pickout 0.0703    decision 0.1992    set_bounds 0.1176    solve 0.9157    add 0.5733    
Current (lb-rhs): -0.20810329914093018
4145 domains visited
Cumulative time: 1.924551010131836

BaB round 7
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0014
batch: 2048
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 1340] [/input-8, 1131] [/input-8, 650] [/input-8, 1292] [/input-8, 1340] [/input-8, 1131] [/input-8, 650] [/input-8, 1292] [/input-8, 1340] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 4096 = 0.0
pruning-in-iteration extra time: 6.699562072753906e-05
Time: prepare 0.0865    bound 0.2071    transfer 0.0241    finalize 0.0283    func 0.3465    
Accumulated time: func 1.2611    prepare 0.1755    bound 0.9434    transfer 0.0770    finalize 0.0640    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.20146 (15), -0.20054 (15), -0.19979 (15), -0.19952 (15), -0.19874 (15), -0.19855 (15), -0.19783 (15), -0.19716 (15), -0.19678 (15), -0.19676 (15), -0.19615 (15), -0.19607 (15), -0.19554 (15), -0.19523 (15), -0.19512 (15), -0.19484 (15), -0.19438 (15), -0.19436 (15), -0.19422 (15), -0.19417 (15), 
Length of domains: 4096
Time: pickout 0.0236    decision 0.1267    set_bounds 0.2245    solve 0.3479    add 0.1456    
Accumulated time: pickout 0.0939    decision 0.3259    set_bounds 0.3421    solve 1.2636    add 0.7189    
Current (lb-rhs): -0.20145702362060547
8241 domains visited
Cumulative time: 2.804307460784912

BaB round 8
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 4096
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 650] [/input-8, 1340] [/input-8, 1340] [/input-8, 84] [/input-8, 650] [/input-8, 1340] [/input-8, 1340] [/input-8, 84] [/input-8, 650] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 8192 = 0.0
pruning-in-iteration extra time: 8.988380432128906e-05
Time: prepare 0.1874    bound 0.3639    transfer 0.0459    finalize 0.0533    func 0.6517    
Accumulated time: func 1.9128    prepare 0.3632    bound 1.3073    transfer 0.1228    finalize 0.1172    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19635 (16), -0.19501 (16), -0.19470 (16), -0.19440 (16), -0.19424 (16), -0.19322 (16), -0.19306 (16), -0.19302 (16), -0.19273 (16), -0.19252 (16), -0.19230 (16), -0.19203 (16), -0.19167 (16), -0.19126 (16), -0.19124 (16), -0.19106 (16), -0.19063 (16), -0.19058 (16), -0.19056 (16), -0.19048 (16), 
Length of domains: 8192
Time: pickout 0.0434    decision 0.2376    set_bounds 0.3483    solve 0.6535    add 0.1721    
Accumulated time: pickout 0.1373    decision 0.5635    set_bounds 0.6904    solve 1.9171    add 0.8910    
Current (lb-rhs): -0.1963534951210022
16433 domains visited
current_vram/total_varm: 9.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.2767698764801025

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1291] [/input-8, 795] [/input-8, 1018] [/input-8, 795] [/input-8, 1291] [/input-8, 795] [/input-8, 1018] [/input-8, 795] [/input-8, 1291] [/input-8, 795] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 16384 = 0.0
pruning-in-iteration extra time: 0.00012111663818359375
Time: prepare 0.3388    bound 0.6785    transfer 0.0876    finalize 0.0896    func 1.1964    
Accumulated time: func 3.1092    prepare 0.7024    bound 1.9858    transfer 0.2105    finalize 0.2069    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.19114 (17), -0.18983 (17), -0.18960 (17), -0.18947 (17), -0.18918 (17), -0.18895 (17), -0.18819 (17), -0.18789 (17), -0.18783 (17), -0.18761 (17), -0.18755 (17), -0.18751 (17), -0.18744 (17), -0.18744 (17), -0.18722 (17), -0.18699 (17), -0.18696 (17), -0.18646 (17), -0.18621 (17), -0.18584 (17), 
Length of domains: 16384
Time: pickout 0.0887    decision 0.6298    set_bounds 0.5408    solve 1.1993    add 0.1971    
Accumulated time: pickout 0.2260    decision 1.1933    set_bounds 1.2312    solve 3.1164    add 1.0881    
Current (lb-rhs): -0.1911352276802063
32817 domains visited
current_vram/total_varm: 19.0GB/99.9GB, batch_size increase to 16384
Cumulative time: 6.9548187255859375

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1018] [/input-8, 1131] [/input-8, 1292] [/input-8, 1131] [/input-8, 1018] [/input-8, 1131] [/input-8, 1292] [/input-8, 1131] [/input-8, 1018] [/input-8, 1131] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 32768 = 0.0
pruning-in-iteration extra time: 0.00019121170043945312
Time: prepare 0.6589    bound 1.3198    transfer 0.1740    finalize 0.4143    func 2.5688    
Accumulated time: func 5.6780    prepare 1.3617    bound 3.3056    transfer 0.3844    finalize 0.6211    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18856 (18), -0.18715 (18), -0.18699 (18), -0.18689 (18), -0.18633 (18), -0.18607 (18), -0.18550 (18), -0.18522 (18), -0.18484 (18), -0.18473 (18), -0.18470 (18), -0.18467 (18), -0.18459 (18), -0.18447 (18), -0.18440 (18), -0.18437 (18), -0.18388 (18), -0.18384 (18), -0.18308 (18), -0.18300 (18), 
Length of domains: 32768
Time: pickout 0.1696    decision 1.8473    set_bounds 0.9505    solve 2.5738    add 0.3145    
Accumulated time: pickout 0.3955    decision 3.0406    set_bounds 2.1816    solve 5.6902    add 1.4026    
Current (lb-rhs): -0.18855911493301392
65585 domains visited
current_vram/total_varm: 26.5GB/99.9GB, batch_size increase to 32768
Cumulative time: 12.846757650375366

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0013
batch: 32768
splitting decisions: 
split level 0: [/input-8, 1340] [/input-8, 1291] [/input-8, 989] [/input-8, 1886] [/input-8, 1340] [/input-8, 1291] [/input-8, 989] [/input-8, 1886] [/input-8, 1340] [/input-8, 1291] 
pruning_in_iteration open status: False
ratio of positive domain = 0 / 65536 = 0.0
pruning-in-iteration extra time: 0.00039696693420410156
Time: prepare 1.2740    bound 7.7624    transfer 0.3506    finalize 0.3572    func 9.7468    
Accumulated time: func 15.4248    prepare 2.6362    bound 11.0680    transfer 0.7351    finalize 0.9783    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18550 (19), -0.18407 (19), -0.18383 (19), -0.18382 (19), -0.18327 (19), -0.18264 (19), -0.18242 (19), -0.18242 (19), -0.18206 (19), -0.18187 (19), -0.18160 (19), -0.18158 (19), -0.18152 (19), -0.18150 (19), -0.18136 (19), -0.18130 (19), -0.18099 (19), -0.18096 (19), -0.18095 (19), -0.18081 (19), 
Length of domains: 65536
Time: pickout 0.3485    decision 3.8362    set_bounds 1.9988    solve 10.0929    add 0.8431    
Accumulated time: pickout 0.7440    decision 6.8768    set_bounds 4.1804    solve 15.7831    add 2.2457    
Current (lb-rhs): -0.18549585342407227
131121 domains visited
Cumulative time: 30.046193599700928

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts: total 532 constraints, 42101 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3489
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 893] [/input-8, 1292] [/input-8, 795] [/input-8, 893] [/input-8, 893] [/input-8, 1292] [/input-8, 795] [/input-8, 893] [/input-8, 893] [/input-8, 1292] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17947816848754883
10 lb beta sum: 4.481642723083496, worst -0.14186125993728638
pruning_in_iteration open status: False
ratio of positive domain = 7 / 65536 = 0.0001068115234375
pruning-in-iteration extra time: 0.0008676052093505859
Time: prepare 1.2900    bound 16.5075    transfer 0.3514    finalize 0.7768    func 19.3484    
Accumulated time: func 34.7732    prepare 3.9266    bound 27.5754    transfer 1.0865    finalize 1.7551    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18550 (19), -0.18407 (19), -0.18383 (19), -0.18382 (19), -0.18327 (19), -0.18242 (19), -0.18206 (19), -0.18160 (19), -0.18158 (19), -0.18152 (19), -0.18150 (19), -0.18130 (19), -0.18081 (19), -0.17986 (19), -0.17984 (19), -0.17984 (19), -0.17983 (19), -0.17965 (19), -0.17963 (19), -0.17954 (19), 
Length of domains: 98292
Time: pickout 0.3997    decision 3.2607    set_bounds 1.8358    solve 19.3569    add 32.5350    
Accumulated time: pickout 1.1437    decision 10.1376    set_bounds 6.0162    solve 35.1400    add 34.7807    
Current (lb-rhs): -0.18549585342407227
196645 domains visited
Cumulative time: 87.86366534233093

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts: total 844 constraints, 85156 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7513
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 485] [/input-8, 84] [/input-8, 84] [/input-8, 924] [/input-8, 1131] [/input-8, 84] [/input-8, 893] [/input-8, 924] [/input-8, 485] [/input-8, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17729347944259644
10 lb beta sum: 5.901641845703125, worst -0.13828563690185547
pruning_in_iteration open status: False
ratio of positive domain = 205 / 65536 = 0.0031280517578125
pruning-in-iteration extra time: 0.0011873245239257812
Time: prepare 1.3470    bound 19.9362    transfer 0.3518    finalize 1.0096    func 23.0655    
Accumulated time: func 57.8387    prepare 5.2749    bound 47.5116    transfer 1.4383    finalize 2.7647    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18550 (19), -0.18407 (19), -0.18383 (19), -0.18382 (19), -0.18327 (19), -0.18242 (19), -0.18206 (19), -0.18160 (19), -0.18158 (19), -0.18152 (19), -0.18150 (19), -0.18130 (19), -0.18081 (19), -0.17986 (19), -0.17984 (19), -0.17984 (19), -0.17983 (19), -0.17965 (19), -0.17963 (19), -0.17954 (19), 
Length of domains: 130685
Time: pickout 0.4726    decision 4.0485    set_bounds 2.0591    solve 23.0743    add 0.4686    
Accumulated time: pickout 1.6163    decision 14.1860    set_bounds 8.0753    solve 58.2143    add 35.2493    
Current (lb-rhs): -0.18549585342407227
261806 domains visited
Cumulative time: 118.84685063362122

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts: total 1125 constraints, 109053 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9210
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1291] [/input-8, 924] [/input-8, 485] [/input-8, 1886] [/input-8, 989] [/input-8, 924] [/input-8, 485] [/input-8, 1291] [/input-8, 795] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17228680849075317
10 lb beta sum: 6.262434482574463, worst -0.13371573388576508
pruning_in_iteration open status: False
ratio of positive domain = 540 / 65536 = 0.00823974609375
pruning-in-iteration extra time: 0.0013632774353027344
Time: prepare 1.3731    bound 23.2984    transfer 0.3375    finalize 0.4390    func 25.8655    
Accumulated time: func 83.7042    prepare 6.6485    bound 70.8101    transfer 1.7758    finalize 3.2038    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18550 (19), -0.18407 (19), -0.18383 (19), -0.18382 (19), -0.18327 (19), -0.18242 (19), -0.18206 (19), -0.18160 (19), -0.18158 (19), -0.18152 (19), -0.18150 (19), -0.18130 (19), -0.18081 (19), -0.17986 (19), -0.17984 (19), -0.17984 (19), -0.17983 (19), -0.17965 (19), -0.17963 (19), -0.17954 (19), 
Length of domains: 162276
Time: pickout 0.4732    decision 3.6275    set_bounds 2.2688    solve 25.8748    add 0.5494    
Accumulated time: pickout 2.0895    decision 17.8135    set_bounds 10.3442    solve 84.0891    add 35.7988    
Current (lb-rhs): -0.18549585342407227
326165 domains visited
Cumulative time: 152.7123143672943

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts: total 1255 constraints, 113001 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9502
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 84] [/input-8, 1292] [/input-8, 1562] [/input-8, 1291] [/input-8, 84] [/input-8, 1386] [/input-8, 1562] [/input-8, 1291] [/input-8, 84] [/input-8, 1386] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16702556610107422
10 lb beta sum: 6.29443359375, worst -0.1288686841726303
pruning_in_iteration open status: False
ratio of positive domain = 1205 / 65536 = 0.0183868408203125
pruning-in-iteration extra time: 0.0014870166778564453
Time: prepare 1.4101    bound 24.8879    transfer 0.3874    finalize 0.4347    func 27.5434    
Accumulated time: func 111.2476    prepare 8.0591    bound 95.6980    transfer 2.1632    finalize 3.6384    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18550 (19), -0.18407 (19), -0.18383 (19), -0.18382 (19), -0.18327 (19), -0.18242 (19), -0.18206 (19), -0.18160 (19), -0.18158 (19), -0.18152 (19), -0.18150 (19), -0.18130 (19), -0.18081 (19), -0.17986 (19), -0.17984 (19), -0.17984 (19), -0.17983 (19), -0.17965 (19), -0.17963 (19), -0.17954 (19), 
Length of domains: 192373
Time: pickout 0.5059    decision 4.2556    set_bounds 2.4354    solve 27.5551    add 0.5870    
Accumulated time: pickout 2.5954    decision 22.0691    set_bounds 12.7795    solve 111.6442    add 36.3858    
Current (lb-rhs): -0.18549585342407227
389030 domains visited
Cumulative time: 189.15780997276306

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts: total 1289 constraints, 114412 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9626
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 795] [/input-8, 1386] [/input-8, 1562] [/input-8, 1292] [/input-8, 795] [/input-8, 1386] [/input-8, 1589] [/input-8, 1292] [/input-8, 1562] [/input-8, 1386] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16506212949752808
10 lb beta sum: 6.386991500854492, worst -0.12618091702461243
pruning_in_iteration open status: False
ratio of positive domain = 1447 / 65536 = 0.0220794677734375
pruning-in-iteration extra time: 0.0015153884887695312
Time: prepare 1.4076    bound 25.3407    transfer 0.4348    finalize 1.4148    func 29.0174    
Accumulated time: func 140.2650    prepare 9.4673    bound 121.0387    transfer 2.5981    finalize 5.0532    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.18550 (19), -0.18407 (19), -0.18383 (19), -0.18382 (19), -0.18327 (19), -0.18242 (19), -0.18206 (19), -0.18160 (19), -0.18158 (19), -0.18152 (19), -0.18150 (19), -0.18130 (19), -0.18081 (19), -0.17986 (19), -0.17984 (19), -0.17984 (19), -0.17983 (19), -0.17965 (19), -0.17963 (19), -0.17954 (19), 
Length of domains: 221937
Time: pickout 0.5148    decision 4.0353    set_bounds 1.5388    solve 29.0289    add 0.6410    
Accumulated time: pickout 3.1102    decision 26.1044    set_bounds 14.3184    solve 140.6731    add 37.0268    
Current (lb-rhs): -0.18549585342407227
451362 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=2_30221678.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=4_30221678.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=4_30221678.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=4_30221678.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=55_spec=4_30221678.log
found process for pidx=2
kill process for pidx=2
found process for pidx=4
Result: unknown in 229.8872 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 56, vnnlib ID: 56 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
         -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [579]; unstable size 579; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 579] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 579] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 579] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 191] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.80924940,  2.66314459,  6.04739952,  2.98685718,  6.92152929,
          6.10498810,  4.46677589, -1.73226333,  3.55088115]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
         -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.88202381, -15.77611637, -13.39399529, -17.09332085, -13.82697010,
          -18.11546516, -17.38292885, -15.74606514,  -9.08050442, -14.54284763]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.80151939]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.24920666e+00,  1.67777801e+00,  1.32857168e+00,  ...,
             2.80952454e-01,  1.06349289e-01, -5.23808524e-02],
           [ 9.79365110e-01,  1.39206374e+00,  1.24920666e+00,  ...,
            -1.95237994e-01, -1.79364979e-01, -1.31745934e-01],
           [ 1.28095269e+00,  1.39206374e+00,  9.15873051e-01,  ...,
            -2.06348225e-02,  1.11112073e-02,  2.17460394e-01],
           ...,
           [-4.96825397e-01, -4.80952382e-01, -4.33333218e-01,  ...,
            -4.80952382e-01, -4.96825397e-01, -4.96825397e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.80952382e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01],
           [-4.33333218e-01, -4.65079248e-01, -4.96825397e-01,  ...,
            -4.65079248e-01, -4.49206233e-01, -4.49206233e-01]],

          [[ 1.91626441e+00,  2.06119204e+00,  1.70692456e+00,  ...,
             1.27214205e+00,  1.15942061e+00,  1.06280196e+00],
           [ 1.72302771e+00,  1.88405824e+00,  1.83574903e+00,  ...,
             1.07890511e+00,  1.06280196e+00,  1.04669893e+00],
           [ 1.94847047e+00,  1.91626441e+00,  1.69082153e+00,  ...,
             1.19162667e+00,  1.20772982e+00,  1.30434811e+00],
           ...,
           [-3.22059989e-02, -4.83090580e-02, -3.22059989e-02,  ...,
            -6.44121096e-02, -8.05151686e-02, -8.05151686e-02],
           [ 1.22934580e-07, -4.83090580e-02, -6.44121096e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -3.22059989e-02],
           [-6.44121096e-02, -6.44121096e-02, -8.05151686e-02,  ...,
            -3.22059989e-02, -1.61029361e-02, -1.61029361e-02]],

          [[ 2.10045004e+00,  2.08545780e+00,  1.81559265e+00,  ...,
             1.84557760e+00,  1.80060017e+00,  1.74063015e+00],
           [ 1.96551764e+00,  1.92054021e+00,  1.96551764e+00,  ...,
             1.87556267e+00,  1.86057019e+00,  1.81559265e+00],
           [ 2.08545780e+00,  1.96551764e+00,  1.96551764e+00,  ...,
             1.95052516e+00,  1.95052516e+00,  1.96551764e+00],
           ...,
           [ 2.11394474e-01,  1.21439442e-01,  1.81409463e-01,  ...,
             2.11394474e-01,  2.11394474e-01,  2.11394474e-01],
           [ 2.26386964e-01,  1.51424453e-01,  1.81409463e-01,  ...,
             2.26386964e-01,  2.26386964e-01,  2.41379470e-01],
           [ 1.81409463e-01,  1.66416958e-01,  1.96401969e-01,  ...,
             1.96401969e-01,  2.11394474e-01,  2.26386964e-01]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1917 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 57, vnnlib ID: 57 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.99673080, -8.42243385, -3.26751232, -2.50442123, -3.13881588,
         -2.46149969, -4.81901884, -3.50631714, -8.64563560, -7.38313150]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [561]; unstable size 561; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 250, 1, 561] with unstable size 249 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 561] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [249]; unstable size 249; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 249] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 249] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.82033300,  4.02014828, -0.46752238, -0.34412271, -0.36842299,
          1.16381502, -0.08054912,  4.18153286,  2.90686536]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.99673080, -8.42243385, -3.26751232, -2.50442123, -3.13881588,
         -2.46149969, -4.81901884, -3.50631714, -8.64563560, -7.38313150]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.70134592, -8.23771763, -3.13766503, -2.45283818, -3.00211191,
          -2.61360407, -4.50399113, -3.52637243, -8.28448200, -7.23547888],
         [-6.70134592, -8.23771763, -3.13766503, -2.45283818, -3.00211191,
          -2.61360407, -4.50399113, -3.52637243, -8.28448200, -7.23547888]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.52406096, -0.16076589,  0.38850784,  0.91276836]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0445 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.1000 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 58, vnnlib ID: 58 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.83774090, -5.62437820, -5.73738670, -5.16293812, -7.36110210,
         -6.22037792, -5.42629576, -7.85859919, -5.66585159, -6.29455137]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [486]; unstable size 486; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 486] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 486] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 486] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 197] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.56799006, -1.02534294, -0.31647977,  1.51819468,  0.67600739,
         -0.32146615,  2.05102563, -1.13650191, -0.20026422]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.83774090, -5.62437820, -5.73738670, -5.16293812, -7.36110210,
         -6.22037792, -5.42629576, -7.85859919, -5.66585159, -6.29455137]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.01980782, -5.32583332, -6.20267487, -5.75788021, -7.85785675,
          -6.85762787, -5.91456890, -8.37323284, -5.61990356, -6.29581690],
         [-6.01980782, -5.32583332, -6.20267487, -5.75788021, -7.85785675,
          -6.85762787, -5.91456890, -8.37323284, -5.61990356, -6.29581690]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.26192760, -0.43204689,  0.44479465,  0.15668869, -0.13797665,
           0.53793669]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0130 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0799 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 59, vnnlib ID: 59 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.93982983, -9.67457962, -3.81645751, -4.62450838, -3.47099352,
         -5.53091383, -3.97788739, -6.31543112, -7.47973061, -9.39750957]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [610]; unstable size 610; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 203, 1, 610] with unstable size 202 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 610] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 610] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [202]; unstable size 202; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 202] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 202] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.79685640,  4.36240864, -0.97976089, -0.08943802, -1.19198728,
          0.69136405,  1.47140527,  2.15872240,  4.19818258]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.93982983, -9.67457962, -3.81645751, -4.62450838, -3.47099352,
         -5.53091383, -3.97788739, -6.31543112, -7.47973061, -9.39750957]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.93982983, -9.67457867, -3.81645751, -4.62450838, -3.47099352,
          -5.53091431, -3.97788668, -6.31543159, -7.47973061, -9.39750862],
         [-6.93982983, -9.67457867, -3.81645751, -4.62450838, -3.47099352,
          -5.53091431, -3.97788668, -6.31543159, -7.47973061, -9.39750862]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.16142917,  0.64662170, -0.50689316]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]],


         [[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]],


         [[[-1.44920623, -1.36984122, -1.52857137,  ..., -1.43333328,
            -1.35396814, -1.33809519],
           [-1.41746020, -1.40158725, -1.51269829,  ..., -1.38571417,
            -1.44920623, -1.33809519],
           [-1.57619035, -1.46507931, -1.48095226,  ..., -1.46507931,
            -1.51269829, -1.30634916],
           ...,
           [-1.78253973, -1.83015871, -1.84603179,  ..., -1.41746020,
            -1.33809519, -1.35396814],
           [-1.83015871, -1.86190474, -1.86190474,  ..., -1.65555561,
            -1.43333328, -1.46507931],
           [-1.87777781, -1.84603179, -1.83015871,  ..., -1.73492062,
            -1.43333328, -1.48095226]],

          [[-1.49758446, -1.41706920, -1.54589367,  ..., -1.49758446,
            -1.38486302, -1.32045078],
           [-1.43317223, -1.41706920, -1.49758446,  ..., -1.46537840,
            -1.49758446, -1.30434775],
           [-1.59420288, -1.48148143, -1.48148143,  ..., -1.54589367,
            -1.54589367, -1.23993552],
           ...,
           [-1.75523353, -1.81964576, -1.81964576,  ..., -1.41706920,
            -1.38486302, -1.36875999],
           [-1.78743970, -1.81964576, -1.83574879,  ..., -1.62640905,
            -1.46537840, -1.46537840],
           [-1.80354273, -1.78743970, -1.80354273,  ..., -1.69082129,
            -1.48148143, -1.46537840]],

          [[-1.31784117, -1.42278874, -1.40779614,  ..., -1.36281872,
            -1.21289361, -1.07796109],
           [-1.21289361, -1.33283365, -1.37781119,  ..., -1.39280367,
            -1.27286363, -1.06296861],
           [-1.36281872, -1.34782624, -1.39280367,  ..., -1.45277369,
            -1.31784117, -1.04797614],
           ...,
           [-1.42278874, -1.48275876, -1.46776617,  ..., -1.18290865,
            -1.30284870, -1.31784117],
           [-1.40779614, -1.43778121, -1.45277369,  ..., -1.27286363,
            -1.33283365, -1.36281872],
           [-1.42278874, -1.39280367, -1.45277369,  ..., -1.30284870,
            -1.30284870, -1.37781119]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0547 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 60, vnnlib ID: 60 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
         -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [842]; unstable size 842; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 125, 1, 842] with unstable size 124 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 842] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 842] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [124]; unstable size 124; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 124] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 124] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70171237,  2.55571461,  1.94688416,  4.01660633,  2.85764074,
          4.14926767,  3.74387574, -0.07238436,  1.06150925]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
         -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.96it/s]100%|██████████| 1/1 [00:00<00:00,  8.95it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.24313164, -10.83115482, -14.41390800, -13.75766754, -15.91440678,
          -14.81871986, -15.97586060, -15.75201797, -11.26198959, -12.42057705]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.43083477]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1142 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.35385513305664
alpha/beta optimization time: 1.2339565753936768
initial alpha-crown bounds: tensor([[ 1.73520613,  2.60585260,  1.99403715,  4.06510401,  2.91426325,
          4.19391060,  3.79336476, -0.03199387,  1.08410907]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.031993865966796875
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.7127 seconds.
lower bounds for all target labels: [1.735206127166748, 2.6058526039123535, 1.99403715133667, 4.065104007720947, 2.914261817932129, 4.193909168243408, 3.7933645248413086, -0.031996726989746094, 1.0841090679168701]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [7]
start creating model mps for candidates: ['lay/16_7']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.53137612342834
Verifying property 0 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.193910598754883.

Properties batch 1, size 1
Remaining timeout: 198.26193022727966
Verifying property 1 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.065104007720947.

Properties batch 2, size 1
Remaining timeout: 198.126886844635
Verifying property 2 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7933647632598877.

Properties batch 3, size 1
Remaining timeout: 198.00291180610657
Verifying property 3 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.9142632484436035.

Properties batch 4, size 1
Remaining timeout: 197.8663911819458
Verifying property 4 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.6058526039123535.

Properties batch 5, size 1
Remaining timeout: 197.7423906326294
Verifying property 5 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.99403715133667.

Properties batch 6, size 1
Remaining timeout: 197.61360931396484
Verifying property 6 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.735206127166748.

Properties batch 7, size 1
Remaining timeout: 197.48703622817993
Verifying property 7 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0841090679168701.

Properties batch 8, size 1
Remaining timeout: 197.36192440986633
Verifying property 8 with 1 instances.
##### Instance 60 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03199387]], device='cuda:0') need to verify.
Model prediction is: tensor([-13.75205898, -10.95473385, -15.05265713, -14.31469154, -16.47543526,
        -15.42162323, -16.59076691, -16.32046509, -12.06099701, -12.79094601],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03199387]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 842
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 121
Node /15 input 0: size torch.Size([100]) unstable 11
-----------------
# of unstable neurons: 974
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008463859558105469
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 54] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 37] 
split level 6: [/input-8, 817] 
split level 7: [/input-8, 865] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 7.605552673339844e-05
Time: prepare 0.0032    bound 0.0045    transfer 0.0043    finalize 0.0028    func 0.0149    
Accumulated time: func 0.0149    prepare 0.0036    bound 0.0045    transfer 0.0043    finalize 0.0028    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0264    set_bounds 0.0204    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0264    set_bounds 0.0204    solve 0.0150    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06827092170715332

the mip building process is not terminated yet, kill it
Result: safe in 3.1072 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 61, vnnlib ID: 61 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.10208607, -11.41786957, -13.13540363, -14.61515522, -12.72880554,
         -15.42352676, -14.81626129, -14.02141857, -10.58820438, -11.90863419]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [689]; unstable size 689; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 287, 1, 689] with unstable size 286 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 689] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 689] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [286]; unstable size 286; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 286] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 286] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.29984093, -0.42211032,  0.77767408, -0.92977953,  1.27496159,
          0.91095710, -0.04363620, -2.54635859, -1.79969788]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.10208607, -11.41786957, -13.13540363, -14.61515522, -12.72880554,
         -15.42352676, -14.81626129, -14.02141857, -10.58820438, -11.90863419]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.10208607, -11.41786957, -13.13540268, -14.61515522, -12.72880459,
          -15.42352581, -14.81626034, -14.02141666, -10.58820248, -11.90863228],
         [-12.10208607, -11.41786957, -13.13540268, -14.61515522, -12.72880459,
          -15.42352581, -14.81626034, -14.02141666, -10.58820248, -11.90863228]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.68421650,  1.03331661,  0.62671852,  1.91933060, -1.51388359,
          -0.19345379]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]],


         [[[ 1.24920666,  1.23333359,  1.24920666,  ...,  0.94761908,
             0.94761908,  1.01111114],
           [ 1.09047651,  1.07460344,  1.09047651,  ...,  0.67777783,
             0.64603180,  0.70952386],
           [ 0.86825401,  0.88412702,  0.91587305,  ...,  0.48730165,
             0.43968260,  0.50317466],
           ...,
           [-0.67142856, -0.59206349, -0.71904761,  ..., -1.14761901,
            -0.95714283, -0.94126981],
           [-0.92539680, -0.79841268, -0.84603173,  ..., -1.19523799,
            -1.03650784, -1.11587298],
           [-1.00476182, -0.83015871, -0.78253967,  ..., -1.22698402,
            -1.17936504, -1.21111107]],

          [[ 1.25603890,  1.23993587,  1.25603890,  ...,  0.82125610,
             0.82125610,  0.88566834],
           [ 1.07890511,  1.06280196,  1.09500813,  ...,  0.61191636,
             0.57971025,  0.64412248],
           [ 0.85346222,  0.86956531,  0.90177143,  ...,  0.45088577,
             0.40257660,  0.48309189],
           ...,
           [-0.83735907, -0.75684375, -0.88566822,  ..., -1.23993552,
            -1.06280184, -1.04669881],
           [-1.06280184, -0.91787434, -0.96618354,  ..., -1.27214170,
            -1.09500802, -1.17552328],
           [-1.07890499, -0.91787434, -0.85346210,  ..., -1.30434775,
            -1.19162631, -1.23993552]],

          [[ 1.20089996,  1.18590748,  1.21589243,  ...,  0.78110963,
             0.76611710,  0.81109464],
           [ 1.08095968,  1.06596720,  1.08095968,  ...,  0.66116959,
             0.60119957,  0.66116959],
           [ 0.90104967,  0.91604215,  0.94602716,  ...,  0.55622208,
             0.51124454,  0.57121456],
           ...,
           [-0.64317840, -0.56821585, -0.68815589,  ..., -1.00299859,
            -0.88305843, -0.86806595],
           [-0.86806595, -0.73313338, -0.79310340,  ..., -1.03298354,
            -0.92803597, -1.00299859],
           [-0.91304344, -0.74812591, -0.70314842,  ..., -1.07796109,
            -1.03298354, -1.06296861]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0759 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 62, vnnlib ID: 62 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.22134018, -15.56860352, -14.70451355, -17.13485336, -15.30204296,
         -19.28796387, -19.05625916, -17.42904091,  -7.39751339, -15.77822590]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 143, 1, 638] with unstable size 142 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 638] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [142]; unstable size 142; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 142] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70733380,  6.82938194,  6.02555275,  8.45529366,  6.40188885,
         10.40295410, 10.22137833,  8.17284584,  6.93548489]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0481 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 63, vnnlib ID: 63 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.89003658, -14.52937984,  -8.65657139, -11.09509850,  -9.84154129,
         -10.49578381, -11.10558414, -12.61307526, -14.24301243, -14.45481777]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [532]; unstable size 532; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 158, 1, 532] with unstable size 157 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 532] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 532] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [157]; unstable size 157; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 157] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 157] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66265595,  2.43688154, -3.43360925, -0.71080726, -2.08376074,
         -1.43809307,  0.69530213,  2.01353741,  2.55464077]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.89003658, -14.52937984,  -8.65657139, -11.09509850,  -9.84154129,
         -10.49578381, -11.10558414, -12.61307526, -14.24301243, -14.45481777]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.89003754, -14.52938080,  -8.65657139, -11.09509850,  -9.84154224,
          -10.49578571, -11.10558605, -12.61307430, -14.24301243, -14.45481777],
         [-12.89003754, -14.52938080,  -8.65657139, -11.09509850,  -9.84154224,
          -10.49578571, -11.10558605, -12.61307430, -14.24301243, -14.45481777]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-2.44901466, -0.01048756, -1.26404381, -0.60980034]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]],


         [[[-8.77777755e-01, -7.66666651e-01, -8.46031725e-01,  ...,
             1.72539711e+00,  1.48730183e+00,  5.98412752e-01],
           [-8.77777755e-01, -8.14285696e-01, -8.61904740e-01,  ...,
             1.67777801e+00,  1.67777801e+00,  1.40793681e+00],
           [-8.61904740e-01, -8.30158710e-01, -8.61904740e-01,  ...,
             1.72539711e+00,  1.63015902e+00,  1.69365108e+00],
           ...,
           [-1.17936504e+00, -1.13174593e+00, -5.28571427e-01,  ...,
             3.92063558e-01,  3.76190543e-01,  3.60317528e-01],
           [-1.17936504e+00, -1.17936504e+00, -8.93650770e-01,  ...,
             3.44444513e-01,  3.28571498e-01,  3.28571498e-01],
           [-1.14761901e+00, -1.25873005e+00, -1.25873005e+00,  ...,
             2.96825469e-01,  2.96825469e-01,  3.12698483e-01]],

          [[ 1.22934580e-07,  9.66184735e-02,  4.83092964e-02,  ...,
             1.96457350e+00,  1.77133679e+00,  8.85668337e-01],
           [-1.61029361e-02,  4.83092964e-02,  1.61031820e-02,  ...,
             1.94847047e+00,  1.96457350e+00,  1.70692456e+00],
           [ 1.22934580e-07,  3.22062373e-02,  1.61031820e-02,  ...,
             1.96457350e+00,  1.85185218e+00,  1.91626441e+00],
           ...,
           [-3.86473298e-01, -3.54267180e-01,  2.41546005e-01,  ...,
             7.89049983e-01,  7.72946954e-01,  7.72946954e-01],
           [-3.86473298e-01, -4.02576357e-01, -1.28824353e-01,  ...,
             7.40740836e-01,  7.24637747e-01,  7.24637747e-01],
           [-3.54267180e-01, -4.83091772e-01, -5.15297890e-01,  ...,
             6.76328599e-01,  6.92431629e-01,  6.92431629e-01]],

          [[-1.10794616e+00, -1.04797614e+00, -1.15292358e+00,  ...,
             5.86207092e-01,  4.96252000e-01, -8.84556174e-02],
           [-1.10794616e+00, -1.09295356e+00, -1.18290865e+00,  ...,
             6.61169589e-01,  6.76162124e-01,  4.51274544e-01],
           [-1.09295356e+00, -1.10794616e+00, -1.16791618e+00,  ...,
             1.05097473e+00,  9.16042149e-01,  8.71064663e-01],
           ...,
           [-1.48275876e+00, -1.42278874e+00, -7.18140900e-01,  ...,
             1.44078004e+00,  1.42578757e+00,  1.41079497e+00],
           [-1.48275876e+00, -1.46776617e+00, -1.06296861e+00,  ...,
             1.42578757e+00,  1.41079497e+00,  1.41079497e+00],
           [-1.45277369e+00, -1.54272878e+00, -1.42278874e+00,  ...,
             1.41079497e+00,  1.41079497e+00,  1.42578757e+00]]]]],
       device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0599 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 64, vnnlib ID: 64 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.45442581, -10.84073353,  -2.11443281,  -5.11572742,  -2.45199776,
          -5.34400368,  -5.73184919,  -6.24624300,  -8.44986820, -10.21909809]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 540] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 540] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 216] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34607959,  7.68123960,  1.94801557, -0.41767752,  2.08386660,
          2.53074336,  2.96769238,  4.98291540,  6.93700266]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.45442581, -10.84073353,  -2.11443281,  -5.11572742,  -2.45199776,
          -5.34400368,  -5.73184919,  -6.24624300,  -8.44986820, -10.21909809]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.49234295, -10.80588436,  -2.29469967,  -5.01693249,  -2.21906614,
           -5.26282883,  -5.61701155,  -6.03597450,  -8.41149426, -10.12084866]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07563353]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0559 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 65, vnnlib ID: 65 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.03724480, -11.18434811,  -9.06159973,  -6.82672215,  -8.31060886,
          -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811810]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 540] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 540] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 165] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.06153616,  2.03039908,  0.34189337, -1.49903512, -0.37442607,
         -0.95892555, -0.33255005, -0.89728689,  0.12400293]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.03724480, -11.18434811,  -9.06159973,  -6.82672215,  -8.31060886,
          -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811810]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.03724575, -11.18434811,  -9.06159973,  -6.82672262,  -8.31061077,
           -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811714],
         [ -9.03724575, -11.18434811,  -9.06159973,  -6.82672262,  -8.31061077,
           -7.42542219,  -7.49326038,  -8.39577389,  -8.11735439,  -9.31811714]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.66653776,  0.81735039, -0.06783819,  0.90251350,  0.62409401]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]],


         [[[0.47142863, 0.45555562, 0.47142863,  ..., 0.43968260,
            0.45555562, 0.39206356],
           [0.42380959, 0.40793657, 0.42380959,  ..., 0.36031753,
            0.36031753, 0.31269848],
           [0.39206356, 0.36031753, 0.37619054,  ..., 0.31269848,
            0.29682547, 0.28095245],
           ...,
           [1.40793681, 1.31269872, 1.37619078,  ..., 1.31269872,
            1.29682565, 1.32857168],
           [1.45555580, 1.43968284, 1.43968284,  ..., 1.37619078,
            1.32857168, 1.40793681],
           [1.47142887, 1.43968284, 1.51904786,  ..., 1.40793681,
            1.37619078, 1.47142887]],

          [[1.03059590, 0.99838978, 1.03059590,  ..., 0.95008057,
            0.95008057, 0.90177143],
           [0.98228669, 0.95008057, 0.96618366,  ..., 0.86956531,
            0.86956531, 0.83735919],
           [0.93397754, 0.90177143, 0.91787446,  ..., 0.83735919,
            0.82125610, 0.82125610],
           ...,
           [1.75523376, 1.65861547, 1.73913074,  ..., 1.64251232,
            1.64251232, 1.67471850],
           [1.80354297, 1.78743994, 1.80354297,  ..., 1.69082153,
            1.64251232, 1.72302771],
           [1.81964600, 1.78743994, 1.86795521,  ..., 1.72302771,
            1.69082153, 1.78743994]],

          [[1.29085493, 1.26086998, 1.27586246,  ..., 1.27586246,
            1.27586246, 1.23088503],
           [1.32084000, 1.27586246, 1.30584753,  ..., 1.26086998,
            1.26086998, 1.23088503],
           [1.32084000, 1.29085493, 1.30584753,  ..., 1.26086998,
            1.24587750, 1.24587750],
           ...,
           [1.95052516, 1.84557760, 1.87556267,  ..., 1.84557760,
            1.83058512, 1.83058512],
           [1.98051023, 1.95052516, 1.93553269,  ..., 1.95052516,
            1.89055514, 1.92054021],
           [1.96551764, 1.93553269, 2.01049519,  ..., 1.95052516,
            1.90554762, 1.96551764]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0662 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 66, vnnlib ID: 66 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.38867235, -7.83663368, -1.97538805, -3.76285219, -1.67582381,
         -3.71006250, -2.32488132, -4.60400915, -6.09743786, -7.12869167]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [547]; unstable size 547; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 547] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 547] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 547] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 270] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.79902244,  3.61575794, -1.01848125,  0.80863643,  0.56699347,
         -0.88418722,  1.54361391,  1.63250840,  3.27348709]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.38867235, -7.83663368, -1.97538805, -3.76285219, -1.67582381,
         -3.71006250, -2.32488132, -4.60400915, -6.09743786, -7.12869167]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.27879572, -7.94890785, -1.78546190, -3.82703066, -2.03851891,
          -3.82423735, -2.29042339, -4.81013393, -6.21499157, -7.37135839],
         [-4.27879572, -7.94890785, -1.78546190, -3.82703066, -2.03851891,
          -3.82423735, -2.29042339, -4.81013393, -6.21499157, -7.37135839]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.25305700,  0.25190449]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0458 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 67, vnnlib ID: 67 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.84932995, -17.33446884,  -8.64849091, -12.04424667,  -9.06044197,
         -11.72052956, -11.48574638, -12.39857960, -14.52266598, -15.66392040]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [629]; unstable size 629; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 629] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 629] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 629] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 204] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.34933925,  7.33656406,  2.46383572, -0.40431595,  2.07216477,
          1.93970633,  2.30366516,  4.55638123,  5.68612194]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.84932995, -17.33446884,  -8.64849091, -12.04424667,  -9.06044197,
         -11.72052956, -11.48574638, -12.39857960, -14.52266598, -15.66392040]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-13.16704941, -17.55948639,  -9.04862404, -12.28578377,  -9.04834080,
          -11.96090889, -11.69873047, -12.37973595, -14.72574997, -15.88174343]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00028324]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0089 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0557 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 68, vnnlib ID: 68 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-17.69871712, -20.69267273, -15.76616573, -14.43220711, -12.67657566,
         -14.10208035, -15.81092930,  -9.57836342, -21.12655640, -18.97427750]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [565]; unstable size 565; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 565] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 565] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 565] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 219] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.13234711, 8.93222618, 4.50618744, 3.55561543, 1.94738889, 3.30281472,
         4.49555874, 9.35066795, 7.40655899]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0406 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 69, vnnlib ID: 69 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.06598377, -12.28655052, -10.90278053, -11.53813744,  -9.47263813,
         -13.18623543, -12.00863743, -11.38340187,  -8.27437782, -11.53199673]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [870]; unstable size 870; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 870] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 870] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 870] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 184] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.42442560,  2.45793104,  1.12414598,  1.64930105, -0.25776613,
          3.05331540,  2.07846880,  1.21149397,  1.63006783]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.06598377, -12.28655052, -10.90278053, -11.53813744,  -9.47263813,
         -13.18623543, -12.00863743, -11.38340187,  -8.27437782, -11.53199673]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.06598473, -12.28655148, -10.90278149, -11.53813839,  -9.47263718,
          -13.18623447, -12.00863838, -11.38340282,  -8.27437973, -11.53199673],
         [ -8.06598473, -12.28655148, -10.90278149, -11.53813839,  -9.47263718,
          -13.18623447, -12.00863838, -11.38340282,  -8.27437973, -11.53199673]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.20839500,  1.19825745]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]],


         [[[ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           [ 1.80476213,  1.80476213,  1.80476213,  ...,  1.78888917,
             1.78888917,  1.78888917],
           ...,
           [-0.29047608, -0.46507925, -0.11587292,  ...,  0.13809532,
             0.02698422, -0.13174593],
           [ 0.97936511,  0.94761908,  0.99523818,  ...,  0.67777783,
             0.63015878,  0.67777783],
           [ 1.31269872,  1.29682565,  1.26507962,  ..., -0.09999990,
             0.01111121,  0.02698422]],

          [[ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           [ 1.86795521,  1.86795521,  1.86795521,  ...,  1.78743994,
             1.78743994,  1.78743994],
           ...,
           [-0.27375188, -0.46698871, -0.12882435,  ..., -0.27375188,
            -0.32206106, -0.53140092],
           [ 0.95008057,  0.88566834,  0.91787446,  ...,  0.12882459,
             0.12882459,  0.11272153],
           [ 1.20772982,  1.17552364,  1.14331758,  ..., -0.40257636,
            -0.25764883, -0.30595800]],

          [[ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           [ 1.87556267,  1.87556267,  1.87556267,  ...,  1.81559265,
             1.81559265,  1.81559265],
           ...,
           [-0.26836565, -0.44827583, -0.11844061,  ..., -0.64317840,
            -0.68815589, -0.85307342],
           [ 0.82608712,  0.79610211,  0.82608712,  ..., -0.46326834,
            -0.44827583, -0.44827583],
           [ 1.09595215,  1.06596720,  1.03598225,  ..., -0.73313338,
            -0.61319339, -0.65817088]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0450 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 70, vnnlib ID: 70 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
          -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [479]; unstable size 479; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 181, 1, 479] with unstable size 180 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 479] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 479] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [180]; unstable size 180; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 180] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 180] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.27840686,  4.92119694,  0.44460058,  2.50914335, -0.39846015,
          3.07961297,  3.62197113,  4.85315418,  6.55421686]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
          -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.49it/s]100%|██████████| 1/1 [00:00<00:00,  8.48it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.24029589,  -9.04307461,  -4.27071857,  -6.51712275,  -3.25431824,
           -7.24005508,  -3.20525861,  -7.73866796,  -9.34815121, -10.61236477]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.04905963]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1206 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.355344772338867
alpha/beta optimization time: 1.246959924697876
initial alpha-crown bounds: tensor([[ 3.32722855,  4.96577740,  0.48747444,  2.55623007, -0.35164118,
          3.13634515,  3.69880295,  4.92325401,  6.61187267]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.3516411781311035
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6302 seconds.
lower bounds for all target labels: [3.3272273540496826, 4.9657793045043945, 0.4874725341796875, 2.5562291145324707, -0.3516428470611572, 3.1363449096679688, 3.6988039016723633, 4.923252105712891, 6.611872673034668]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [4]
start creating model mps for candidates: ['lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 142447 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49609851837158
Verifying property 0 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.611872673034668.

Properties batch 1, size 1
Remaining timeout: 198.22575092315674
Verifying property 1 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.965777397155762.

Properties batch 2, size 1
Remaining timeout: 198.09413981437683
Verifying property 2 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.923254013061523.

Properties batch 3, size 1
Remaining timeout: 197.99163818359375
Verifying property 3 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.698802947998047.

Properties batch 4, size 1
Remaining timeout: 197.88567066192627
Verifying property 4 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.327228546142578.

Properties batch 5, size 1
Remaining timeout: 197.78397727012634
Verifying property 5 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.136345148086548.

Properties batch 6, size 1
Remaining timeout: 197.6809298992157
Verifying property 6 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.556230068206787.

Properties batch 7, size 1
Remaining timeout: 197.5781614780426
Verifying property 7 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4874744415283203.

Properties batch 8, size 1
Remaining timeout: 197.47607731819153
Verifying property 8 with 1 instances.
##### Instance 70 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.35164118]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.38531876,  -9.15226841,  -4.51170063,  -6.71956348,  -3.59781837,
         -7.57347631,  -2.96594071,  -8.17208290,  -9.44402599, -10.74759960],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.35164118]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 479
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 180
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 673
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.001046895980834961
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 11] 
split level 2: [/input-12, 45] 
split level 3: [/input-12, 46] 
split level 4: [/input-12, 26] 
split level 5: [/input-12, 37] 
split level 6: [/input-12, 33] 
split level 7: [/input-8, 101] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 256 = 0.75
pruning-in-iteration extra time: 0.008026599884033203
Time: prepare 0.0032    bound 0.1277    transfer 0.0045    finalize 0.0025    func 0.1380    
Accumulated time: func 0.1380    prepare 0.0037    bound 0.1277    transfer 0.0045    finalize 0.0025    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14619 (8), -0.14253 (8), -0.13945 (8), -0.13572 (8), -0.12755 (8), -0.12351 (8), -0.12004 (8), -0.11880 (8), -0.11641 (8), -0.11465 (8), -0.11412 (8), -0.10877 (8), -0.10664 (8), -0.10537 (8), -0.10348 (8), -0.10120 (8), -0.10111 (8), -0.09954 (8), -0.09920 (8), -0.09525 (8), 
Length of domains: 64
Time: pickout 0.0012    decision 0.0279    set_bounds 0.0207    solve 0.1380    add 0.0631    
Accumulated time: pickout 0.0012    decision 0.0279    set_bounds 0.0207    solve 0.1380    add 0.0631    
Current (lb-rhs): -0.14618515968322754
64 domains visited
Cumulative time: 0.26323628425598145

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 64
splitting decisions: 
split level 0: [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] [/input-8, 100] 
split level 1: [/input-8, 614] [/input-8, 613] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 613] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 604] 
pruning_in_iteration open status: False
ratio of positive domain = 25 / 256 = 0.09765625
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0050    bound 0.0947    transfer 0.0007    finalize 0.0016    func 0.1020    
Accumulated time: func 0.2399    prepare 0.0089    bound 0.2224    transfer 0.0052    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.13257 (10), -0.12871 (10), -0.12358 (10), -0.12188 (10), -0.12149 (10), -0.11970 (10), -0.11840 (10), -0.11788 (10), -0.11578 (10), -0.11489 (10), -0.11478 (10), -0.11392 (10), -0.11183 (10), -0.11149 (10), -0.11074 (10), -0.11054 (10), -0.10873 (10), -0.10688 (10), -0.10571 (10), -0.10550 (10), 
Length of domains: 228
Time: pickout 0.0073    decision 0.0143    set_bounds 0.0070    solve 0.1020    add 0.0825    
Accumulated time: pickout 0.0085    decision 0.0423    set_bounds 0.0277    solve 0.2400    add 0.1456    
Current (lb-rhs): -0.1325688362121582
292 domains visited
Cumulative time: 0.4834303855895996

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 228
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 614] [/input-8, 106] [/input-8, 102] [/input-8, 604] [/input-8, 614] [/input-8, 859] [/input-8, 604] [/input-8, 614] [/input-8, 614] 
pruning_in_iteration open status: False
ratio of positive domain = 39 / 456 = 0.08552631578947367
pruning-in-iteration extra time: 8.296966552734375e-05
Time: prepare 0.0090    bound 0.0967    transfer 0.0054    finalize 0.0040    func 0.1152    
Accumulated time: func 0.3551    prepare 0.0180    bound 0.3191    transfer 0.0106    finalize 0.0080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12370 (11), -0.12283 (11), -0.12030 (11), -0.11863 (11), -0.11715 (11), -0.11352 (11), -0.11330 (11), -0.11223 (11), -0.11148 (11), -0.11103 (11), -0.10915 (11), -0.10915 (11), -0.10894 (11), -0.10861 (11), -0.10834 (11), -0.10786 (11), -0.10782 (11), -0.10643 (11), -0.10591 (11), -0.10559 (11), 
Length of domains: 416
Time: pickout 0.0166    decision 0.0265    set_bounds 0.0107    solve 0.1155    add 0.0971    
Accumulated time: pickout 0.0251    decision 0.0688    set_bounds 0.0385    solve 0.3555    add 0.2427    
Current (lb-rhs): -0.12370157241821289
708 domains visited
Cumulative time: 0.7544770240783691

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 416
splitting decisions: 
split level 0: [/input-8, 102] [/input-8, 604] [/input-8, 614] [/input-8, 613] [/input-8, 614] [/input-8, 102] [/input-8, 820] [/input-8, 102] [/input-8, 613] [/input-8, 106] 
pruning_in_iteration open status: False
ratio of positive domain = 84 / 832 = 0.10096153846153844
pruning-in-iteration extra time: 8.606910705566406e-05
Time: prepare 0.0165    bound 0.1038    transfer 0.0119    finalize 0.0061    func 0.1383    
Accumulated time: func 0.4934    prepare 0.0347    bound 0.4228    transfer 0.0225    finalize 0.0141    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11773 (12), -0.11704 (12), -0.11403 (12), -0.11395 (12), -0.11247 (12), -0.11237 (12), -0.11081 (12), -0.10855 (12), -0.10830 (12), -0.10787 (12), -0.10760 (12), -0.10630 (12), -0.10536 (12), -0.10433 (12), -0.10421 (12), -0.10382 (12), -0.10294 (12), -0.10280 (12), -0.10274 (12), -0.10225 (12), 
Length of domains: 740
Time: pickout 0.0198    decision 0.0363    set_bounds 0.0195    solve 0.1385    add 0.0958    
Accumulated time: pickout 0.0449    decision 0.1051    set_bounds 0.0580    solve 0.4940    add 0.3385    
Current (lb-rhs): -0.11773300170898438
1448 domains visited
Cumulative time: 1.0725631713867188

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 740
splitting decisions: 
split level 0: [/input-8, 613] [/input-8, 859] [/input-8, 102] [/input-8, 859] [/input-8, 859] [/input-8, 613] [/input-8, 614] [/input-8, 613] [/input-8, 820] [/input-8, 102] 
pruning_in_iteration open status: False
ratio of positive domain = 242 / 1480 = 0.1635135135135135
pruning-in-iteration extra time: 0.0001323223114013672
Time: prepare 0.0310    bound 0.1461    transfer 0.0259    finalize 0.0145    func 0.2178    
Accumulated time: func 0.7112    prepare 0.0660    bound 0.5690    transfer 0.0484    finalize 0.0286    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11238 (13), -0.11166 (13), -0.10949 (13), -0.10877 (13), -0.10860 (13), -0.10834 (13), -0.10691 (13), -0.10668 (13), -0.10571 (13), -0.10541 (13), -0.10515 (13), -0.10399 (13), -0.10350 (13), -0.10295 (13), -0.10286 (13), -0.10250 (13), -0.10217 (13), -0.10059 (13), -0.10003 (13), -0.09998 (13), 
Length of domains: 1225
Time: pickout 0.0235    decision 0.0549    set_bounds 0.0372    solve 0.2182    add 0.0839    
Accumulated time: pickout 0.0685    decision 0.1600    set_bounds 0.0952    solve 0.7122    add 0.4224    
Current (lb-rhs): -0.11237740516662598
2673 domains visited
Cumulative time: 1.4946675300598145

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1225
splitting decisions: 
split level 0: [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 820] [/input-8, 106] [/input-8, 820] [/input-8, 820] [/input-8, 820] 
pruning_in_iteration open status: False
ratio of positive domain = 391 / 2450 = 0.1595918367346939
pruning-in-iteration extra time: 5.459785461425781e-05
Time: prepare 0.0492    bound 0.1402    transfer 0.0373    finalize 0.0172    func 0.2443    
Accumulated time: func 0.9555    prepare 0.1155    bound 0.7092    transfer 0.0857    finalize 0.0458    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10616 (14), -0.10571 (14), -0.10388 (14), -0.10332 (14), -0.10295 (14), -0.10285 (14), -0.10194 (14), -0.10156 (14), -0.10125 (14), -0.10101 (14), -0.10014 (14), -0.10010 (14), -0.10000 (14), -0.09961 (14), -0.09909 (14), -0.09856 (14), -0.09848 (14), -0.09837 (14), -0.09833 (14), -0.09825 (14), 
Length of domains: 2038
Time: pickout 0.0346    decision 0.0811    set_bounds 0.0559    solve 0.2449    add 0.0481    
Accumulated time: pickout 0.1030    decision 0.2411    set_bounds 0.1510    solve 0.9571    add 0.4704    
Current (lb-rhs): -0.10616207122802734
4711 domains visited
Cumulative time: 1.9647905826568604

BaB round 7
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 2038
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 821] [/input-8, 821] [/input-8, 821] [/input-8, 106] [/input-8, 821] [/input-8, 821] [/input-8, 859] [/input-8, 604] [/input-8, 821] 
pruning_in_iteration open status: False
ratio of positive domain = 661 / 4076 = 0.16216879293424924
pruning-in-iteration extra time: 5.602836608886719e-05
Time: prepare 0.0893    bound 0.2148    transfer 0.0344    finalize 0.0279    func 0.3667    
Accumulated time: func 1.3222    prepare 0.2051    bound 0.9240    transfer 0.1201    finalize 0.0737    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10448 (15), -0.10400 (15), -0.10207 (15), -0.10131 (15), -0.10041 (15), -0.10022 (15), -0.09972 (15), -0.09954 (15), -0.09846 (15), -0.09828 (15), -0.09818 (15), -0.09758 (15), -0.09660 (15), -0.09659 (15), -0.09653 (15), -0.09643 (15), -0.09597 (15), -0.09507 (15), -0.09440 (15), -0.09437 (15), 
Length of domains: 3378
Time: pickout 0.0476    decision 0.3384    set_bounds 0.0983    solve 0.3678    add 0.1538    
Accumulated time: pickout 0.1507    decision 0.5795    set_bounds 0.2493    solve 1.3249    add 0.6242    
Current (lb-rhs): -0.10448074340820312
8089 domains visited
Cumulative time: 2.989732027053833

BaB round 8
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 3378
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 1827] [/input-8, 106] [/input-8, 859] [/input-8, 867] [/input-8, 1827] [/input-8, 106] [/input-8, 1827] [/input-8, 106] [/input-8, 426] 
pruning_in_iteration open status: True
ratio of positive domain = 1508 / 6756 = 0.2232089994079337
pruning-in-iteration extra time: 0.0020787715911865234
Time: prepare 0.1473    bound 0.3174    transfer 0.0293    finalize 0.0362    func 0.5311    
Accumulated time: func 1.8533    prepare 0.3527    bound 1.2414    transfer 0.1494    finalize 0.1099    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10149 (16), -0.10106 (16), -0.09909 (16), -0.09835 (16), -0.09748 (16), -0.09681 (16), -0.09611 (16), -0.09603 (16), -0.09551 (16), -0.09485 (16), -0.09383 (16), -0.09354 (16), -0.09307 (16), -0.09285 (16), -0.09269 (16), -0.09223 (16), -0.09195 (16), -0.09176 (16), -0.09092 (16), -0.09059 (16), 
Length of domains: 5248
Time: pickout 0.0585    decision 0.1963    set_bounds 0.2986    solve 0.5325    add 0.1527    
Accumulated time: pickout 0.2091    decision 0.7758    set_bounds 0.5479    solve 1.8575    add 0.7769    
Current (lb-rhs): -0.1014869213104248
13337 domains visited
Cumulative time: 4.254648685455322

BaB round 9
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 4096
splitting decisions: 
split level 0: [/input-8, 426] [/input-8, 821] [/input-8, 1828] [/input-8, 1819] [/input-8, 1389] [/input-8, 867] [/input-8, 604] [/input-8, 801] [/input-8, 106] [/input-8, 859] 
pruning_in_iteration open status: True
ratio of positive domain = 1985 / 8192 = 0.2423095703125
pruning-in-iteration extra time: 0.003368854522705078
Time: prepare 0.1793    bound 0.3527    transfer 0.0486    finalize 0.0457    func 0.6272    
Accumulated time: func 2.4805    prepare 0.5323    bound 1.5941    transfer 0.1980    finalize 0.1556    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10149 (16), -0.10106 (16), -0.09909 (16), -0.09835 (16), -0.09681 (16), -0.09611 (16), -0.09551 (16), -0.09485 (17), -0.09485 (16), -0.09383 (16), -0.09307 (16), -0.09195 (16), -0.09176 (16), -0.09091 (17), -0.09039 (16), -0.09029 (17), -0.08947 (17), -0.08888 (16), -0.08888 (16), -0.08878 (16), 
Length of domains: 7359
Time: pickout 0.0711    decision 0.2347    set_bounds 0.3441    solve 0.6290    add 0.1564    
Accumulated time: pickout 0.2802    decision 1.0105    set_bounds 0.8920    solve 2.4864    add 0.9333    
Current (lb-rhs): -0.1014869213104248
19544 domains visited
current_vram/total_varm: 10.6GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.725584506988525

BaB round 10
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 7359
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 801] [/input-8, 290] [/input-8, 426] [/input-8, 801] [/input-8, 821] [/input-8, 1828] [/input-8, 1389] [/input-8, 867] [/input-8, 1827] 
pruning_in_iteration open status: False
ratio of positive domain = 2898 / 14718 = 0.19690175295556467
pruning-in-iteration extra time: 6.532669067382812e-05
Time: prepare 0.3195    bound 0.6101    transfer 0.0816    finalize 0.0880    func 1.1003    
Accumulated time: func 3.5807    prepare 0.8521    bound 2.2041    transfer 0.2796    finalize 0.2436    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09842 (17), -0.09645 (17), -0.09473 (17), -0.09414 (17), -0.09333 (17), -0.09289 (17), -0.09220 (17), -0.09155 (17), -0.09063 (17), -0.09018 (17), -0.08952 (17), -0.08935 (17), -0.08931 (17), -0.08851 (18), -0.08821 (18), -0.08818 (17), -0.08797 (17), -0.08745 (18), -0.08719 (17), -0.08713 (18), 
Length of domains: 11736
Time: pickout 0.1082    decision 0.6108    set_bounds 0.5168    solve 1.1036    add 0.1790    
Accumulated time: pickout 0.3885    decision 1.6213    set_bounds 1.4088    solve 3.5900    add 1.1123    
Current (lb-rhs): -0.09841513633728027
31280 domains visited
Cumulative time: 8.279372215270996

BaB round 11
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 1828] [/input-8, 821] [/input-8, 1828] [/input-8, 1828] [/input-8, 290] [/input-8, 106] [/input-8, 1828] [/input-8, 1827] [/input-8, 290] 
pruning_in_iteration open status: False
ratio of positive domain = 2717 / 16384 = 0.16583251953125
pruning-in-iteration extra time: 0.00010180473327636719
Time: prepare 0.3481    bound 0.6767    transfer 0.0929    finalize 0.1083    func 1.2272    
Accumulated time: func 4.8079    prepare 1.2005    bound 2.8809    transfer 0.3725    finalize 0.3519    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09842 (17), -0.09645 (17), -0.09414 (17), -0.09333 (17), -0.09289 (17), -0.09220 (17), -0.09207 (18), -0.09063 (17), -0.09018 (17), -0.08931 (17), -0.08888 (18), -0.08851 (18), -0.08821 (18), -0.08797 (17), -0.08719 (17), -0.08713 (18), -0.08665 (18), -0.08622 (17), -0.08612 (17), -0.08598 (17), 
Length of domains: 17121
Time: pickout 0.1306    decision 0.6920    set_bounds 0.5834    solve 1.4630    add 0.2450    
Accumulated time: pickout 0.5191    decision 2.3133    set_bounds 1.9922    solve 5.0531    add 1.3573    
Current (lb-rhs): -0.09841513633728027
44857 domains visited
current_vram/total_varm: 22.8GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.4448561668396

BaB round 12
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 309 constraints, 18263 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.1555
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 821] [/input-8, 426] [/input-8, 821] [/input-8, 1827] [/input-8, 106] [/input-8, 1827] [/input-8, 604] [/input-8, 1389] [/input-8, 1378] [/input-8, 106] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08847808837890625
10 lb beta sum: 4.398041725158691, worst -0.06716197729110718
pruning_in_iteration open status: True
ratio of positive domain = 19228 / 32768 = 0.5867919921875
pruning-in-iteration extra time: 0.0046427249908447266
Time: prepare 0.6727    bound 3.4577    transfer 0.1766    finalize 0.4458    func 4.9618    
Accumulated time: func 9.7697    prepare 1.8736    bound 6.3385    transfer 0.5491    finalize 0.7976    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09842 (17), -0.09645 (17), -0.09414 (17), -0.09333 (17), -0.09289 (17), -0.09220 (17), -0.09063 (17), -0.09018 (17), -0.08931 (17), -0.08797 (17), -0.08719 (17), -0.08612 (17), -0.08598 (17), -0.08515 (17), -0.08488 (17), -0.08443 (17), -0.08440 (17), -0.08437 (17), -0.08423 (17), -0.08392 (17), 
Length of domains: 14277
Time: pickout 0.2253    decision 1.6737    set_bounds 1.0329    solve 4.9704    add 0.2012    
Accumulated time: pickout 0.7444    decision 3.9870    set_bounds 3.0251    solve 10.0235    add 1.5585    
Current (lb-rhs): -0.09841513633728027
58397 domains visited
current_vram/total_varm: 42.1GB/99.9GB, batch_size increase to 32768
Cumulative time: 19.811707019805908

BaB round 13
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 642 constraints, 42751 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3618
batch: 14277
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 604] [/input-8, 106] [/input-8, 604] [/input-8, 106] [/input-8, 1828] [/input-8, 106] [/input-8, 106] [/input-8, 604] [/input-8, 102] [/input-8, 1827] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0918879508972168
10 lb beta sum: 3.9231834411621094, worst -0.06434875726699829
pruning_in_iteration open status: True
ratio of positive domain = 14181 / 28554 = 0.49663794914898085
pruning-in-iteration extra time: 0.001074075698852539
Time: prepare 0.6241    bound 5.7670    transfer 0.1556    finalize 0.1912    func 6.9255    
Accumulated time: func 16.6952    prepare 2.4980    bound 12.1055    transfer 0.7047    finalize 0.9889    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05921 (18), -0.05814 (18), -0.05769 (18), -0.05630 (18), -0.05609 (18), -0.05558 (18), -0.05518 (18), -0.05471 (18), -0.05462 (18), -0.05389 (18), -0.05369 (18), -0.05240 (18), -0.05222 (18), -0.05211 (18), -0.05157 (18), -0.05131 (18), -0.05113 (18), -0.05093 (18), -0.05022 (18), -0.04917 (20), 
Length of domains: 14373
Time: pickout 0.1906    decision 1.0881    set_bounds 1.2192    solve 7.2574    add 0.1851    
Accumulated time: pickout 0.9350    decision 5.0751    set_bounds 4.2443    solve 17.2808    add 1.7436    
Current (lb-rhs): -0.059209465980529785
72770 domains visited
Cumulative time: 30.220884323120117

BaB round 14
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 843 constraints, 61421 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5318
batch: 14373
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 290] [/input-8, 1828] [/input-8, 290] [/input-8, 1828] [/input-8, 867] [/input-8, 1828] [/input-8, 290] [/input-8, 821] [/input-8, 1828] [/input-8, 290] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08838510513305664
10 lb beta sum: 4.424921989440918, worst -0.08045047521591187
pruning_in_iteration open status: False
ratio of positive domain = 3158 / 28746 = 0.10985876295832464
pruning-in-iteration extra time: 0.0005888938903808594
Time: prepare 0.6167    bound 6.6883    transfer 0.1579    finalize 0.1880    func 8.1578    
Accumulated time: func 24.8530    prepare 3.1151    bound 18.7938    transfer 0.8626    finalize 1.1769    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05921 (19), -0.05814 (19), -0.05769 (19), -0.05630 (19), -0.05605 (19), -0.05531 (19), -0.05471 (19), -0.05420 (19), -0.05389 (19), -0.05339 (19), -0.05303 (19), -0.05297 (19), -0.05240 (19), -0.05211 (19), -0.05163 (19), -0.05131 (19), -0.05126 (19), -0.05113 (19), -0.05103 (19), -0.05102 (19), 
Length of domains: 20877
Time: pickout 0.2009    decision 0.8322    set_bounds 1.2203    solve 8.1649    add 0.2057    
Accumulated time: pickout 1.1359    decision 5.9074    set_bounds 5.4646    solve 25.4458    add 1.9493    
Current (lb-rhs): -0.059209465980529785
93647 domains visited
Cumulative time: 41.45992708206177

BaB round 15
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 835 constraints, 75734 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6401
batch: 20877
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1827] [/input-8, 867] [/input-8, 1827] [/input-8, 106] [/input-8, 867] [/input-8, 1827] [/input-8, 290] [/input-8, 867] [/input-8, 1827] [/input-8, 426] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08346104621887207
10 lb beta sum: 4.6725921630859375, worst -0.06400030851364136
pruning_in_iteration open status: True
ratio of positive domain = 23357 / 41754 = 0.5593955070172918
pruning-in-iteration extra time: 0.0007312297821044922
Time: prepare 0.8948    bound 9.5635    transfer 0.2288    finalize 0.2745    func 11.2442    
Accumulated time: func 36.0973    prepare 4.0102    bound 28.3572    transfer 1.0914    finalize 1.4514    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04800 (20), -0.04772 (20), -0.04713 (20), -0.04668 (20), -0.04621 (20), -0.04597 (20), -0.04575 (20), -0.04546 (22), -0.04526 (20), -0.04492 (20), -0.04459 (20), -0.04453 (20), -0.04422 (22), -0.04387 (20), -0.04364 (22), -0.04349 (20), -0.04341 (20), -0.04321 (20), -0.04316 (22), -0.04248 (22), 
Length of domains: 18397
Time: pickout 0.3013    decision 2.1769    set_bounds 1.7048    solve 11.6628    add 0.2361    
Accumulated time: pickout 1.4372    decision 8.0842    set_bounds 7.1694    solve 37.1086    add 2.1854    
Current (lb-rhs): -0.047996699810028076
112044 domains visited
Cumulative time: 58.34633779525757

BaB round 16
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 867 constraints, 99911 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8510
batch: 18397
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 801] [/input-8, 106] [/input-8, 1828] [/input-8, 1827] [/input-8, 106] [/input-8, 1828] [/input-8, 290] [/input-8, 106] [/input-8, 801] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08074784278869629
10 lb beta sum: 5.394290447235107, worst -0.056900620460510254
pruning_in_iteration open status: True
ratio of positive domain = 27196 / 36794 = 0.7391422514540414
pruning-in-iteration extra time: 0.0017940998077392578
Time: prepare 0.7719    bound 8.5130    transfer 0.2054    finalize 0.5913    func 10.3201    
Accumulated time: func 46.4173    prepare 4.7826    bound 36.8702    transfer 1.2968    finalize 2.0427    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03629 (23), -0.03556 (21), -0.03541 (23), -0.03468 (21), -0.03435 (21), -0.03413 (21), -0.03406 (21), -0.03392 (21), -0.03347 (21), -0.03334 (21), -0.03309 (21), -0.03304 (21), -0.03285 (23), -0.03273 (23), -0.03267 (21), -0.03244 (21), -0.03242 (21), -0.03239 (23), -0.03221 (21), -0.03215 (21), 
Length of domains: 9598
Time: pickout 0.2777    decision 1.8858    set_bounds 1.4767    solve 10.3291    add 0.1924    
Accumulated time: pickout 1.7149    decision 9.9701    set_bounds 8.6461    solve 47.4377    add 2.3778    
Current (lb-rhs): -0.03628748655319214
121642 domains visited
Cumulative time: 73.52711319923401

BaB round 17
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 921 constraints, 107005 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8959
batch: 9598
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 801] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 801] [/input-8, 106] [/input-8, 106] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07765460014343262
10 lb beta sum: 5.892643928527832, worst -0.05666649341583252
pruning_in_iteration open status: True
ratio of positive domain = 12664 / 19196 = 0.659720775161492
pruning-in-iteration extra time: 0.0014188289642333984
Time: prepare 0.4179    bound 4.7911    transfer 0.1079    finalize 0.1278    func 5.5711    
Accumulated time: func 51.9884    prepare 5.2009    bound 41.6614    transfer 1.4047    finalize 2.1706    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03039 (22), -0.02936 (22), -0.02850 (22), -0.02793 (22), -0.02789 (22), -0.02787 (24), -0.02779 (22), -0.02771 (22), -0.02753 (24), -0.02727 (22), -0.02719 (22), -0.02681 (24), -0.02680 (22), -0.02658 (22), -0.02631 (25), -0.02614 (24), -0.02607 (24), -0.02604 (22), -0.02581 (22), -0.02578 (22), 
Length of domains: 6532
Time: pickout 0.1484    decision 0.7746    set_bounds 0.7093    solve 5.8444    add 0.1523    
Accumulated time: pickout 1.8632    decision 10.7446    set_bounds 9.3554    solve 53.2821    add 2.5302    
Current (lb-rhs): -0.03038787841796875
128174 domains visited
Cumulative time: 82.14245104789734

BaB round 18
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 847 constraints, 113659 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9570
batch: 6532
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] [/input-8, 106] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07692313194274902
10 lb beta sum: 6.357256889343262, worst -0.04597675800323486
pruning_in_iteration open status: True
ratio of positive domain = 9742 / 13064 = 0.7457134109001837
pruning-in-iteration extra time: 0.001012563705444336
Time: prepare 0.2851    bound 3.1006    transfer 0.0724    finalize 0.0887    func 3.8673    
Accumulated time: func 55.8557    prepare 5.4862    bound 44.7620    transfer 1.4772    finalize 2.2593    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02519 (23), -0.02416 (23), -0.02414 (23), -0.02409 (23), -0.02323 (23), -0.02295 (23), -0.02290 (23), -0.02275 (23), -0.02273 (23), -0.02264 (25), -0.02259 (23), -0.02253 (23), -0.02145 (23), -0.02144 (23), -0.02139 (25), -0.02137 (25), -0.02129 (23), -0.02109 (23), -0.02105 (23), -0.02091 (25), 
Length of domains: 3322
Time: pickout 0.1262    decision 0.3716    set_bounds 0.4995    solve 3.8704    add 0.1436    
Accumulated time: pickout 1.9895    decision 11.1163    set_bounds 9.8550    solve 57.1525    add 2.6738    
Current (lb-rhs): -0.02518630027770996
131496 domains visited
Cumulative time: 88.17763638496399

BaB round 19
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 889 constraints, 115224 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9728
batch: 3322
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 801] [/input-8, 801] [/input-8, 801] [/input-8, 988] [/input-8, 1819] [/input-8, 1819] [/input-8, 1819] [/input-8, 801] [/input-8, 801] [/input-8, 1819] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07508039474487305
10 lb beta sum: 6.709665775299072, worst -0.03082132339477539
pruning_in_iteration open status: True
ratio of positive domain = 5098 / 6644 = 0.767308850090307
pruning-in-iteration extra time: 0.0011370182037353516
Time: prepare 0.1516    bound 1.6649    transfer 0.0418    finalize 0.0437    func 1.9458    
Accumulated time: func 57.8015    prepare 5.6381    bound 46.4269    transfer 1.5189    finalize 2.3029    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02084 (24), -0.02069 (24), -0.01840 (24), -0.01794 (24), -0.01793 (24), -0.01747 (24), -0.01725 (24), -0.01679 (24), -0.01658 (24), -0.01642 (24), -0.01573 (24), -0.01568 (24), -0.01565 (24), -0.01557 (24), -0.01553 (24), -0.01547 (24), -0.01540 (24), -0.01527 (24), -0.01519 (24), -0.01490 (24), 
Length of domains: 1546
Time: pickout 0.0811    decision 0.1948    set_bounds 0.3309    solve 1.9483    add 0.0999    
Accumulated time: pickout 2.0706    decision 11.3111    set_bounds 10.1859    solve 59.1008    add 2.7736    
Current (lb-rhs): -0.020835399627685547
133042 domains visited
Cumulative time: 91.84519219398499

BaB round 20
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0023
batch: 1546
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1819] [/input-8, 1819] [/input-8, 1007] [/input-8, 1007] [/input-8, 988] [/input-8, 1007] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] 
cut re-enabled after branching node selection
0 lb beta sum: 5.801461219787598, worst -0.020691990852355957
10 lb beta sum: 8.393257141113281, worst -0.04604458808898926
pruning_in_iteration open status: True
ratio of positive domain = 1392 / 3092 = 0.4501940491591203
pruning-in-iteration extra time: 0.004873037338256836
Time: prepare 0.1407    bound 0.7325    transfer 0.0166    finalize 0.0197    func 0.9303    
Accumulated time: func 58.7318    prepare 5.7790    bound 47.1594    transfer 1.5355    finalize 2.3227    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01961 (25), -0.01785 (25), -0.01639 (25), -0.01617 (25), -0.01581 (25), -0.01562 (25), -0.01559 (25), -0.01527 (25), -0.01520 (25), -0.01513 (25), -0.01490 (25), -0.01448 (25), -0.01437 (25), -0.01408 (25), -0.01396 (25), -0.01393 (25), -0.01393 (25), -0.01388 (25), -0.01370 (25), -0.01367 (27), 
Length of domains: 1700
Time: pickout 0.0414    decision 0.0954    set_bounds 0.0676    solve 0.9311    add 0.0983    
Accumulated time: pickout 2.1120    decision 11.4065    set_bounds 10.2535    solve 60.0319    add 2.8720    
Current (lb-rhs): -0.019614219665527344
134742 domains visited
Cumulative time: 93.09651803970337

BaB round 21
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0019
batch: 1700
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 938] [/input-8, 1299] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 82] [/input-8, 82] [/input-8, 938] [/input-8, 82] [/input-8, 988] 
cut re-enabled after branching node selection
0 lb beta sum: 5.831418037414551, worst -0.019613981246948242
10 lb beta sum: 8.453210830688477, worst -0.05114006996154785
pruning_in_iteration open status: True
ratio of positive domain = 1597 / 3400 = 0.4697058823529412
pruning-in-iteration extra time: 0.004824399948120117
Time: prepare 0.1562    bound 0.8200    transfer 0.0078    finalize 0.0177    func 1.0251    
Accumulated time: func 59.7569    prepare 5.9354    bound 47.9794    transfer 1.5433    finalize 2.3404    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01622 (26), -0.01547 (26), -0.01494 (26), -0.01461 (26), -0.01376 (26), -0.01369 (26), -0.01360 (26), -0.01360 (26), -0.01354 (26), -0.01284 (28), -0.01282 (26), -0.01279 (26), -0.01267 (26), -0.01254 (26), -0.01253 (26), -0.01237 (26), -0.01214 (26), -0.01206 (26), -0.01205 (26), -0.01195 (26), 
Length of domains: 1803
Time: pickout 0.0429    decision 0.1030    set_bounds 0.2366    solve 1.0270    add 0.0977    
Accumulated time: pickout 2.1549    decision 11.5095    set_bounds 10.4901    solve 61.0589    add 2.9697    
Current (lb-rhs): -0.016216039657592773
136545 domains visited
Cumulative time: 94.62472605705261

BaB round 22
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0020
batch: 1803
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1299] [/input-8, 82] [/input-8, 1299] [/input-8, 82] [/input-8, 938] [/input-8, 1299] [/input-8, 938] [/input-8, 1299] [/input-8, 1299] [/input-8, 938] 
cut re-enabled after branching node selection
0 lb beta sum: 5.832098484039307, worst -0.016216516494750977
10 lb beta sum: 8.240962028503418, worst -0.04367697238922119
pruning_in_iteration open status: True
ratio of positive domain = 1973 / 3606 = 0.5471436494731003
pruning-in-iteration extra time: 0.004938840866088867
Time: prepare 0.1624    bound 0.8679    transfer 0.0294    finalize 0.0263    func 1.1103    
Accumulated time: func 60.8672    prepare 6.0981    bound 48.8473    transfer 1.5727    finalize 2.3667    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01622 (27), -0.01527 (27), -0.01385 (27), -0.01369 (27), -0.01303 (27), -0.01267 (27), -0.01203 (27), -0.01202 (27), -0.01194 (27), -0.01189 (29), -0.01171 (27), -0.01169 (27), -0.01142 (27), -0.01136 (27), -0.01132 (27), -0.01118 (27), -0.01115 (27), -0.01107 (27), -0.01096 (27), -0.01095 (27), 
Length of domains: 1633
Time: pickout 0.0519    decision 0.1085    set_bounds 0.0781    solve 1.1112    add 0.0953    
Accumulated time: pickout 2.2067    decision 11.6181    set_bounds 10.5682    solve 62.1701    add 3.0649    
Current (lb-rhs): -0.016216039657592773
138178 domains visited
Cumulative time: 96.09294652938843

BaB round 23
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0019
batch: 1633
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1299] [/input-8, 1299] [/input-8, 1299] [/input-8, 1299] [/input-8, 82] [/input-8, 938] [/input-8, 596] [/input-8, 1300] [/input-8, 82] [/input-8, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 5.7970075607299805, worst -0.01613903045654297
10 lb beta sum: 8.343279838562012, worst -0.04527747631072998
pruning_in_iteration open status: True
ratio of positive domain = 1793 / 3266 = 0.5489895897121861
pruning-in-iteration extra time: 0.004746913909912109
Time: prepare 0.1519    bound 0.7792    transfer 0.0146    finalize 0.1738    func 1.1415    
Accumulated time: func 62.0087    prepare 6.2501    bound 49.6266    transfer 1.5873    finalize 2.5405    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01466 (28), -0.01360 (28), -0.01257 (28), -0.01178 (28), -0.01169 (28), -0.01138 (28), -0.01118 (28), -0.01092 (28), -0.01085 (28), -0.01080 (28), -0.01070 (28), -0.01065 (28), -0.01026 (28), -0.01025 (28), -0.01000 (28), -0.00999 (28), -0.00993 (28), -0.00991 (28), -0.00990 (28), -0.00983 (30), 
Length of domains: 1473
Time: pickout 0.0481    decision 0.0992    set_bounds 0.0721    solve 1.1422    add 0.0958    
Accumulated time: pickout 2.2549    decision 11.7172    set_bounds 10.6403    solve 63.3123    add 3.1608    
Current (lb-rhs): -0.014656305313110352
139651 domains visited
Cumulative time: 97.56781888008118

BaB round 24
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts: total 879 constraints, 116798 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9778
batch: 1473
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1910] [/input-8, 1299] [/input-8, 82] [/input-8, 82] [/input-8, 851] [/input-8, 1300] [/input-8, 82] [/input-8, 82] [/input-8, 938] [/input-8, 931] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.060300588607788086
10 lb beta sum: 6.653365612030029, worst -0.026887059211730957
pruning_in_iteration open status: True
ratio of positive domain = 2755 / 2946 = 0.9351663272233537
pruning-in-iteration extra time: 0.0010800361633300781
Time: prepare 0.0636    bound 0.7685    transfer 0.0066    finalize 0.0182    func 0.8772    
Accumulated time: func 62.8859    prepare 6.3140    bound 50.3950    transfer 1.5939    finalize 2.5587    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00829 (29), -0.00827 (29), -0.00770 (29), -0.00663 (29), -0.00657 (29), -0.00653 (29), -0.00646 (29), -0.00643 (29), -0.00641 (29), -0.00576 (29), -0.00568 (29), -0.00545 (29), -0.00544 (29), -0.00542 (29), -0.00538 (29), -0.00513 (29), -0.00492 (29), -0.00490 (29), -0.00478 (29), -0.00468 (29), 
Length of domains: 191
Time: pickout 0.0447    decision 0.0954    set_bounds 0.2225    solve 0.8779    add 0.0768    
Accumulated time: pickout 2.2995    decision 11.8126    set_bounds 10.8628    solve 64.1902    add 3.2376    
Current (lb-rhs): -0.008292198181152344
139842 domains visited
Cumulative time: 99.88338828086853

BaB round 25
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0029
batch: 191
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 82] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 938] [/input-8, 938] 
cut re-enabled after branching node selection
0 lb beta sum: 5.8746256828308105, worst -0.008267879486083984
10 lb beta sum: 8.6935396194458, worst -0.030894994735717773
pruning_in_iteration open status: True
ratio of positive domain = 198 / 382 = 0.5183246073298429
pruning-in-iteration extra time: 0.004746437072753906
Time: prepare 0.0169    bound 0.2653    transfer 0.0025    finalize 0.0022    func 0.2894    
Accumulated time: func 63.1753    prepare 6.3311    bound 50.6604    transfer 1.5964    finalize 2.5609    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00580 (30), -0.00579 (30), -0.00523 (30), -0.00511 (30), -0.00492 (30), -0.00475 (30), -0.00470 (30), -0.00437 (30), -0.00432 (30), -0.00432 (30), -0.00427 (30), -0.00425 (30), -0.00418 (30), -0.00411 (30), -0.00408 (30), -0.00365 (30), -0.00359 (30), -0.00356 (30), -0.00349 (30), -0.00336 (30), 
Length of domains: 184
Time: pickout 0.0144    decision 0.0261    set_bounds 0.0084    solve 0.2895    add 0.0761    
Accumulated time: pickout 2.3139    decision 11.8387    set_bounds 10.8712    solve 64.4797    add 3.3137    
Current (lb-rhs): -0.005797266960144043
140026 domains visited
Cumulative time: 100.3086724281311

BaB round 26
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0007
batch: 184
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 931] [/input-8, 931] [/input-8, 82] [/input-8, 82] [/input-8, 931] [/input-8, 931] [/input-8, 82] [/input-8, 931] [/input-8, 931] [/input-8, 931] 
cut re-enabled after branching node selection
0 lb beta sum: 5.865869998931885, worst -0.0071332454681396484
10 lb beta sum: 11.470525741577148, worst -0.033370256423950195
pruning_in_iteration open status: True
ratio of positive domain = 258 / 368 = 0.7010869565217391
pruning-in-iteration extra time: 0.004671573638916016
Time: prepare 0.0161    bound 0.2893    transfer 0.0012    finalize 0.0021    func 0.3112    
Accumulated time: func 63.4865    prepare 6.3474    bound 50.9497    transfer 1.5975    finalize 2.5630    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00437 (31), -0.00430 (31), -0.00389 (31), -0.00356 (31), -0.00349 (31), -0.00333 (31), -0.00316 (31), -0.00294 (31), -0.00292 (31), -0.00283 (31), -0.00283 (31), -0.00280 (31), -0.00278 (31), -0.00274 (31), -0.00272 (31), -0.00271 (31), -0.00263 (31), -0.00261 (31), -0.00242 (31), -0.00232 (31), 
Length of domains: 110
Time: pickout 0.0158    decision 0.0239    set_bounds 0.0082    solve 0.3113    add 0.0766    
Accumulated time: pickout 2.3297    decision 11.8626    set_bounds 10.8794    solve 64.7910    add 3.3902    
Current (lb-rhs): -0.004370927810668945
140136 domains visited
Cumulative time: 100.75470781326294

BaB round 27
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0013
batch: 110
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 82] [/input-8, 82] [/input-8, 82] [/input-8, 82] [/input-8, 82] [/input-8, 1910] [/input-8, 82] [/input-8, 82] [/input-8, 938] [/input-8, 82] 
cut re-enabled after branching node selection
0 lb beta sum: 5.822345733642578, worst -0.005826473236083984
10 lb beta sum: 9.209490776062012, worst -0.02912914752960205
pruning_in_iteration open status: True
ratio of positive domain = 148 / 220 = 0.6727272727272727
pruning-in-iteration extra time: 0.0049021244049072266
Time: prepare 0.0103    bound 0.3077    transfer 0.0014    finalize 0.0015    func 0.3225    
Accumulated time: func 63.8090    prepare 6.3579    bound 51.2574    transfer 1.5989    finalize 2.5645    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00365 (32), -0.00333 (32), -0.00323 (32), -0.00316 (32), -0.00309 (32), -0.00273 (32), -0.00272 (32), -0.00263 (32), -0.00242 (32), -0.00232 (32), -0.00227 (32), -0.00207 (32), -0.00202 (32), -0.00191 (32), -0.00190 (32), -0.00190 (32), -0.00187 (32), -0.00178 (32), -0.00172 (32), -0.00168 (32), 
Length of domains: 72
Time: pickout 0.0137    decision 0.0232    set_bounds 0.0050    solve 0.3225    add 0.0613    
Accumulated time: pickout 2.3434    decision 11.8858    set_bounds 10.8843    solve 65.1136    add 3.4515    
Current (lb-rhs): -0.0036486387252807617
140208 domains visited
Cumulative time: 101.18907165527344

BaB round 28
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 72
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] [/input-8, 1300] 
split level 1: [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input-8, 473] [/input, 119] [/input-8, 473] 
cut re-enabled after branching node selection
0 lb beta sum: 5.866060256958008, worst -0.0038379430770874023
10 lb beta sum: 9.845337867736816, worst -0.02303457260131836
pruning_in_iteration open status: True
ratio of positive domain = 239 / 288 = 0.8298611111111112
pruning-in-iteration extra time: 0.004659414291381836
Time: prepare 0.0130    bound 0.2884    transfer 0.0043    finalize 0.0019    func 0.3095    
Accumulated time: func 64.1184    prepare 6.3710    bound 51.5458    transfer 1.6032    finalize 2.5664    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00206 (34), -0.00193 (34), -0.00190 (34), -0.00164 (34), -0.00163 (34), -0.00151 (34), -0.00148 (34), -0.00143 (34), -0.00142 (34), -0.00141 (34), -0.00137 (34), -0.00126 (34), -0.00126 (34), -0.00124 (34), -0.00119 (34), -0.00115 (34), -0.00109 (34), -0.00091 (34), -0.00090 (34), -0.00090 (34), 
Length of domains: 49
Time: pickout 0.0109    decision 0.0179    set_bounds 0.0080    solve 0.3096    add 0.0609    
Accumulated time: pickout 2.3543    decision 11.9037    set_bounds 10.8924    solve 65.4231    add 3.5124    
Current (lb-rhs): -0.0020627975463867188
140257 domains visited
Cumulative time: 101.60483932495117

BaB round 29
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 49
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 596] [/input-8, 596] [/input-8, 596] [/input-8, 1910] [/input-8, 596] [/input-8, 596] [/input-8, 596] [/input-8, 596] [/input-8, 596] [/input-8, 1910] 
split level 1: [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input, 119] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input, 119] 
split level 2: [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] [/input, 3543] 
cut re-enabled after branching node selection
0 lb beta sum: 5.741666316986084, worst -0.003698587417602539
10 lb beta sum: 25.40022087097168, worst -0.019614577293395996
pruning_in_iteration open status: True
ratio of positive domain = 389 / 392 = 0.9923469387755102
pruning-in-iteration extra time: 0.004923582077026367
Time: prepare 0.0192    bound 0.3095    transfer 0.0042    finalize 0.0027    func 0.3388    
Accumulated time: func 64.4573    prepare 6.3904    bound 51.8554    transfer 1.6075    finalize 2.5690    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00069 (37), -0.00059 (37), -0.00055 (37), 
Length of domains: 3
Time: pickout 0.0105    decision 0.0202    set_bounds 0.0145    solve 0.3389    add 0.0181    
Accumulated time: pickout 2.3648    decision 11.9239    set_bounds 10.9069    solve 65.7620    add 3.5305    
Current (lb-rhs): -0.0006940364837646484
140260 domains visited
Cumulative time: 102.01614952087402

BaB round 30
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0012
batch: 3
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] 
split level 1: [/input-8, 114] [/input-8, 114] [/input-8, 114] 
split level 2: [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] 
split level 3: [/input, 354] [/input, 354] [/input, 354] 
split level 4: [/input, 119] [/input-8, 1818] [/input, 119] 
split level 5: [/input-8, 1756] [/input-8, 1756] [/input-8, 1756] 
split level 6: [/input-8, 851] [/input-8, 851] [/input-8, 851] 
cut re-enabled after branching node selection
0 lb beta sum: 5.735829830169678, worst -0.002906322479248047
10 lb beta sum: 99.97530364990234, worst -0.014882326126098633

all verified at 16th iter
pruning_in_iteration open status: True
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 0.003914356231689453
Time: prepare 0.0189    bound 0.2292    transfer 0.0017    finalize 0.0024    func 0.2547    
Accumulated time: func 64.7119    prepare 6.4096    bound 52.0845    transfer 1.6091    finalize 2.5714    
all_split False
Length of domains: 0
Time: pickout 0.0007    decision 0.0226    set_bounds 0.0263    solve 0.2548    add 0.0001    
Accumulated time: pickout 2.3655    decision 11.9465    set_bounds 10.9332    solve 66.0168    add 3.5306    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
140260 domains visited
Cumulative time: 102.3235125541687

found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=70_spec=4_30245082.log
found process for pidx=4
kill process for pidx=4
Result: safe in 105.2261 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 71, vnnlib ID: 71 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.23181081, -6.13865471, -5.08255959, -5.81894684, -5.10377789,
         -6.43214750, -5.88667679, -5.84751606, -6.03846073, -6.48124504]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [600]; unstable size 600; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 134, 1, 600] with unstable size 133 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 600] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 600] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [133]; unstable size 133; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 133] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 133] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.68216133, 2.01670504, 2.51456141, 1.81788039, 2.98190928, 2.39753652,
         2.20995569, 2.77434301, 3.16959429]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0300 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 72, vnnlib ID: 72 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.04805279, -11.81328869,  -6.59518147,  -6.36475563,  -7.03116512,
          -6.60425329,  -7.20965433,  -8.31397438,  -8.97400188, -10.04430199]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [644]; unstable size 644; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 218, 1, 644] with unstable size 217 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 644] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 644] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [217]; unstable size 217; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 217] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 217] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.59573519,  3.84289050, -0.66203940, -0.35017103, -0.20632467,
          0.11054748,  0.49438119,  0.95489413,  1.85776711]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.04805279, -11.81328869,  -6.59518147,  -6.36475563,  -7.03116512,
          -6.60425329,  -7.20965433,  -8.31397438,  -8.97400188, -10.04430199]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.36461830, -12.41466999,  -6.69172573,  -6.96715069,  -7.39786720,
           -7.23974705,  -7.79054642,  -8.72789097,  -9.53622437, -10.75177860],
         [ -7.36461830, -12.41466999,  -6.69172573,  -6.96715069,  -7.39786720,
           -7.23974705,  -7.79054642,  -8.72789097,  -9.53622437, -10.75177860]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39746761, -0.27542496,  0.43071651,  0.27259636]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0526 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 73, vnnlib ID: 73 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.91584206, -11.23733044,  -4.95584011,  -5.17609406,  -4.67090321,
          -5.68216658,  -2.94505668,  -7.65497255, -10.49558067, -10.30911922]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [530]; unstable size 530; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 286, 1, 530] with unstable size 285 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 530] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 530] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [285]; unstable size 285; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 285] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 285] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.01592350, 5.78018808, 0.67337465, 0.94681942, 0.40892172, 1.18366730,
         2.78911281, 4.93772888, 4.91414547]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0408 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 74, vnnlib ID: 74 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.75821781, -13.33421040,  -9.89368343,  -9.90017796,  -8.64980602,
          -9.78042221,  -9.99710751,  -4.75752258, -13.64687443, -11.43529987]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [557]; unstable size 557; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 217, 1, 557] with unstable size 216 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 557] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 557] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [216]; unstable size 216; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 216] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 216] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.65111160, 6.98895836, 3.93457913, 3.96870136, 2.90565801, 3.92689157,
         3.80601072, 7.22786140, 5.19846964]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0650 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 75, vnnlib ID: 75 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.29954243, -11.45261860, -13.34986973, -13.67515564, -13.40554333,
         -14.42231846, -13.27403164, -13.71299839, -10.82265949, -11.58751392]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 682] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 682] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 184] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.10945773,  1.98779702,  2.28032851,  1.90550280,  2.75677037,
          1.69960523,  1.94381022, -0.60779345, -0.09704113]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.29954243, -11.45261860, -13.34986973, -13.67515564, -13.40554333,
         -14.42231846, -13.27403164, -13.71299839, -10.82265949, -11.58751392]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.56004143, -11.40791702, -13.46516991, -13.67159748, -13.50708389,
          -14.36042309, -13.32153130, -13.76793098, -10.36413670, -11.49154568],
         [-10.56004143, -11.40791702, -13.46516991, -13.67159748, -13.50708389,
          -14.36042309, -13.32153130, -13.76793098, -10.36413670, -11.49154568]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.84787560, -0.19590473,  0.93150425]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0390 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 76, vnnlib ID: 76 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.85307121, -8.24333668, -2.96728778, -1.66786790, -3.85206652,
         -1.00410879, -4.09244967, -4.12650394, -7.75833988, -6.65997744]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [554]; unstable size 554; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 554] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 554] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 226] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.37778521, 5.08529711, 0.43795514, 0.25316501, 1.50299859, 1.94422340,
         2.22069502, 4.52716446, 3.75112438]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0638 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 77, vnnlib ID: 77 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.27097034, -11.59263897, -13.77681637, -13.17456245, -13.49902725,
         -13.92919827, -14.42542553, -14.19969749,  -9.72965145,  -9.57371902]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [484]; unstable size 484; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 175, 1, 484] with unstable size 174 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 484] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 484] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [174]; unstable size 174; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 174] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 174] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.28471613,  1.18307209,  2.52050495,  2.22602820,  2.26000214,
          2.91944098,  3.25191498,  3.06435537, -1.13768911]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.27097034, -11.59263897, -13.77681637, -13.17456245, -13.49902725,
         -13.92919827, -14.42542553, -14.19969749,  -9.72965145,  -9.57371902]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00795650, -11.61491489, -13.44652462, -12.92903709, -13.19156456,
          -13.75599670, -14.05601978, -14.12758446,  -9.19895077,  -9.85582066]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.65686989]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0055 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0535 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 78, vnnlib ID: 78 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.73918152, -8.53411102, -3.85345960, -3.82583189, -3.55089569,
         -4.12887335, -4.16478586, -5.91378498, -8.29353142, -8.77650642]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [613]; unstable size 613; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 281, 1, 613] with unstable size 280 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 613] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 613] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [280]; unstable size 280; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 280] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 280] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.07348102,  1.60172224, -1.32437325, -1.43540144, -0.22906244,
         -0.94617903,  0.48511791,  2.09677768,  2.21030140]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.73918152, -8.53411102, -3.85345960, -3.82583189, -3.55089569,
         -4.12887335, -4.16478586, -5.91378498, -8.29353142, -8.77650642]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.73918104, -8.53411007, -3.85345936, -3.82583237, -3.55089521,
          -4.12887335, -4.16478539, -5.91378498, -8.29353142, -8.77650642],
         [-5.73918104, -8.53411007, -3.85345936, -3.82583237, -3.55089521,
          -4.12887335, -4.16478539, -5.91378498, -8.29353142, -8.77650642]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.91334867,  0.02762699, -0.27493715,  0.30304098,  0.33895302]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]],


         [[[-0.00476181,  0.01111121,  0.02698422,  ..., -0.51269841,
            -0.56031746, -0.62380952],
           [ 0.04285724, -0.00476181,  0.05873025,  ..., -0.59206349,
            -0.63968253, -0.71904761],
           [ 0.01111121, -0.05238085,  0.09047628,  ..., -0.71904761,
            -0.73492062, -0.71904761],
           ...,
           [ 0.02698422, -0.00476181,  0.10634929,  ..., -1.02063489,
            -1.08412695, -1.51269829],
           [-0.02063482, -0.00476181,  0.05873025,  ..., -0.95714283,
            -1.11587298, -1.48095226],
           [ 0.01111121,  0.02698422,  0.05873025,  ..., -0.94126981,
            -1.19523799, -1.48095226]],

          [[-0.90177131, -0.96618354, -0.96618354,  ..., -1.33655393,
            -1.33655393, -1.36875999],
           [-0.91787434, -0.98228657, -0.86956519,  ..., -1.35265696,
            -1.38486302, -1.43317223],
           [-1.01449275, -1.04669881, -0.80515295,  ..., -1.44927526,
            -1.44927526, -1.44927526],
           ...,
           [-0.99838966, -0.96618354, -0.96618354,  ..., -1.38486302,
            -1.41706920, -1.78743970],
           [-1.03059578, -0.99838966, -1.04669881,  ..., -1.32045078,
            -1.44927526, -1.75523353],
           [-0.99838966, -1.01449275, -1.07890499,  ..., -1.27214170,
            -1.49758446, -1.73913050]],

          [[-1.00299859, -1.03298354, -1.03298354,  ..., -1.27286363,
            -1.27286363, -1.30284870],
           [-1.00299859, -1.03298354, -0.91304344,  ..., -1.28785622,
            -1.31784117, -1.33283365],
           [-1.09295356, -1.07796109, -0.82308841,  ..., -1.39280367,
            -1.37781119, -1.31784117],
           ...,
           [-1.06296861, -1.12293863, -1.09295356,  ..., -1.12293863,
            -1.13793111, -1.43778121],
           [-1.12293863, -1.13793111, -1.12293863,  ..., -1.04797614,
            -1.16791618, -1.43778121],
           [-1.09295356, -1.10794616, -1.09295356,  ..., -1.00299859,
            -1.21289361, -1.46776617]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0647 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 79, vnnlib ID: 79 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.05248165, -11.65894604, -12.25777149, -10.95008183,  -9.94209957,
         -10.12332249, -11.05361462,  -6.32633877, -14.71703625, -10.15004635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [432]; unstable size 432; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 201, 1, 432] with unstable size 200 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 432] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 432] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [200]; unstable size 200; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 200] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 200] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.82437634, 2.96819687, 4.11948061, 3.11231112, 2.39884830, 2.32052016,
         2.91186929, 6.36293173, 1.88987482]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0476 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 80, vnnlib ID: 80 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.44930172, -15.25463963,  -9.82252502, -12.00500107,  -9.42480278,
         -12.67968750, -10.39871120, -11.85678768, -11.46559906, -13.09015942]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [742]; unstable size 742; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 301, 1, 742] with unstable size 300 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 742] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 742] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [300]; unstable size 300; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 300] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 300] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.98650312, -1.78932309,  0.26673219, -2.52717876,  0.69541460,
         -1.41547859, -0.58254182, -0.39011693,  1.13849354]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.44930172, -15.25463963,  -9.82252502, -12.00500107,  -9.42480278,
         -12.67968750, -10.39871120, -11.85678768, -11.46559906, -13.09015942]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.44930172, -15.25463867,  -9.82252502, -12.00500011,  -9.42480087,
          -12.67968464, -10.39871025, -11.85678864, -11.46559906, -13.09015942],
         [-10.44930172, -15.25463867,  -9.82252502, -12.00500011,  -9.42480087,
          -12.67968464, -10.39871025, -11.85678864, -11.46559906, -13.09015942]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.62677670, -1.02450085, -0.05059147,  1.40748692,  1.01629734]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]],


         [[[-0.13174593, -0.13174593, -0.11587292,  ...,  0.18571436,
             0.20158738,  0.21746039],
           [-0.09999990, -0.09999990, -0.08412688,  ...,  0.20158738,
             0.21746039,  0.23333341],
           [-0.06825387, -0.08412688, -0.06825387,  ...,  0.12222230,
             0.13809532,  0.10634929],
           ...,
           [-0.78253967, -0.78253967, -0.78253967,  ..., -0.43333322,
            -0.43333322, -0.43333322],
           [-0.84603173, -0.83015871, -0.81428570,  ..., -0.44920623,
            -0.41746020, -0.41746020],
           [-0.78253967, -0.78253967, -0.75079364,  ..., -0.49682540,
            -0.48095238, -0.48095238]],

          [[ 0.24154601,  0.24154601,  0.25764906,  ...,  0.62801939,
             0.64412248,  0.64412248],
           [ 0.24154601,  0.24154601,  0.25764906,  ...,  0.61191636,
             0.62801939,  0.61191636],
           [ 0.25764906,  0.24154601,  0.25764906,  ...,  0.40257660,
             0.41867965,  0.37037048],
           ...,
           [-0.74074072, -0.74074072, -0.74074072,  ..., -0.37037024,
            -0.35426718, -0.37037024],
           [-0.82125598, -0.80515295, -0.77294683,  ..., -0.40257636,
            -0.37037024, -0.37037024],
           [-0.77294683, -0.78904986, -0.72463763,  ..., -0.46698871,
            -0.45088565, -0.45088565]],

          [[ 0.69115460,  0.69115460,  0.69115460,  ...,  1.02098966,
             1.03598225,  1.03598225],
           [ 0.66116959,  0.64617711,  0.66116959,  ...,  0.97601217,
             0.97601217,  0.97601217],
           [ 0.63118458,  0.60119957,  0.63118458,  ...,  0.69115460,
             0.70614707,  0.66116959],
           ...,
           [-0.64317840, -0.64317840, -0.65817088,  ..., -0.41829082,
            -0.41829082, -0.43328333],
           [-0.70314842, -0.70314842, -0.68815589,  ..., -0.43328333,
            -0.40329832, -0.40329832],
           [-0.65817088, -0.65817088, -0.62818587,  ..., -0.44827583,
            -0.43328333, -0.44827583]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0625 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 81, vnnlib ID: 81 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.10813904, -15.89954853,  -7.31516552, -10.82333755,  -8.54076099,
         -10.33981800, -11.38731098, -12.22146320, -14.46312428, -15.25714493]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [595]; unstable size 595; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 595] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 595] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 595] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 190] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.01580000, 7.21389246, 2.88120985, 0.47409204, 2.25944805, 3.19084311,
         3.74374318, 5.93748760, 6.55921412]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0419 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 82, vnnlib ID: 82 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.24675894, -8.88183308, -4.39334679, -3.84514856, -4.41373539,
         -4.05639076, -4.91783571, -6.25871420, -9.17700768, -7.08661222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [586]; unstable size 586; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 303, 1, 586] with unstable size 302 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 586] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 586] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [302]; unstable size 302; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 302] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 302] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.48434639,  2.69666815, -0.88318062, -0.67275071, -1.05266643,
         -0.60235131,  1.16763580,  2.82550168,  1.08651733]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.24675894, -8.88183308, -4.39334679, -3.84514856, -4.41373539,
         -4.05639076, -4.91783571, -6.25871420, -9.17700768, -7.08661222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.24675846, -8.88183308, -4.39334631, -3.84514809, -4.41373491,
          -4.05638981, -4.91783571, -6.25871420, -9.17700863, -7.08661318],
         [-6.24675846, -8.88183308, -4.39334631, -3.84514809, -4.41373491,
          -4.05638981, -4.91783571, -6.25871420, -9.17700863, -7.08661318]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.33695650, -0.21124172,  0.35734510,  0.86144590]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]],


         [[[ 0.42380959,  0.39206356,  0.47142863,  ..., -0.57619047,
             0.16984135,  0.28095245],
           [ 0.29682547,  0.36031753,  0.53492069,  ..., -0.81428570,
            -0.43333322,  0.34444451],
           [ 0.20158738,  0.39206356,  0.55079371,  ..., -0.76666665,
            -0.79841268, -0.27460307],
           ...,
           [ 0.34444451,  0.50317466,  0.36031753,  ...,  0.36031753,
             0.40793657,  0.28095245],
           [ 0.48730165,  0.58253974,  0.43968260,  ...,  0.69365084,
             0.59841275,  0.50317466],
           [ 0.55079371,  0.61428577,  0.48730165,  ...,  0.80476195,
             0.67777783,  0.66190481]],

          [[ 0.48309189,  0.46698883,  0.57971025,  ..., -0.66022539,
             0.22544295,  0.37037048],
           [ 0.33816436,  0.41867965,  0.64412248,  ..., -1.01449275,
            -0.53140092,  0.35426742],
           [ 0.22544295,  0.45088577,  0.64412248,  ..., -0.95008045,
            -0.96618354, -0.32206106],
           ...,
           [ 0.66022551,  0.82125610,  0.66022551,  ...,  0.70853472,
             0.74074084,  0.59581327],
           [ 0.80515307,  0.90177143,  0.74074084,  ...,  1.06280196,
             0.96618366,  0.86956531],
           [ 0.86956531,  0.93397754,  0.78904998,  ...,  1.20772982,
             1.07890511,  1.06280196]],

          [[ 0.54122955,  0.54122955,  0.67616212,  ..., -0.64317840,
             0.31634200,  0.58620709],
           [ 0.37631202,  0.49625200,  0.69115460,  ..., -1.12293863,
            -0.52323836,  0.51124454],
           [ 0.27136448,  0.49625200,  0.67616212,  ..., -1.13793111,
            -1.04797614, -0.26836565],
           ...,
           [ 0.99100471,  1.14092970,  0.97601217,  ...,  1.05097473,
             1.11094475,  1.00599718],
           [ 1.14092970,  1.21589243,  1.06596720,  ...,  1.36581755,
             1.32084000,  1.26086998],
           [ 1.18590748,  1.24587750,  1.11094475,  ...,  1.54572761,
             1.45577252,  1.47076499]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0766 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 83, vnnlib ID: 83 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.36881924, -3.89865160, -7.93544197, -6.23400021, -6.74230671,
         -6.96568727, -8.17397594, -6.56449556, -5.37149715, -2.30208302]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [592]; unstable size 592; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 220, 1, 592] with unstable size 219 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 28, 1, 592] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 592] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [219]; unstable size 219; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 28, 1, 219] with unstable size 27 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 219] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [27]; unstable size 27; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 27] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.89441204, 0.29969534, 2.93555927, 1.68636417, 1.92623043, 2.15194559,
         3.21918106, 1.75679541, 0.56472826]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0463 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 84, vnnlib ID: 84 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
          -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [570]; unstable size 570; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 179, 1, 570] with unstable size 178 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 570] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 570] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [178]; unstable size 178; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 178] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.99768186,  7.91174030, -0.14131731,  2.21972227,  1.75214720,
          0.21273994,  3.05064678,  6.73370647,  7.60544586]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
          -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.85it/s]100%|██████████| 1/1 [00:00<00:00,  8.84it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.14279652, -15.40082264,  -6.68534565,  -9.07696342,  -6.41399288,
           -8.82852745,  -7.32211304, -10.51490021, -14.15589237, -15.02890968]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.27135277]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1159 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 33.624610900878906
alpha/beta optimization time: 1.231872797012329
initial alpha-crown bounds: tensor([[ 4.04458427,  7.94689608, -0.11414778,  2.23972154,  1.77452874,
          0.24281096,  3.07658243,  6.77713490,  7.63649845]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.11414778232574463
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6378 seconds.
lower bounds for all target labels: [4.044584274291992, 7.946896553039551, -0.11414670944213867, 2.2397212982177734, 1.7745296955108643, 0.2428112030029297, 3.0765833854675293, 6.777133941650391, 7.63649845123291]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.52382850646973
Verifying property 0 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.946896076202393.

Properties batch 1, size 1
Remaining timeout: 198.28948521614075
Verifying property 1 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.63649845123291.

Properties batch 2, size 1
Remaining timeout: 198.1552448272705
Verifying property 2 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.777134895324707.

Properties batch 3, size 1
Remaining timeout: 198.02386283874512
Verifying property 3 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.044584274291992.

Properties batch 4, size 1
Remaining timeout: 197.88610100746155
Verifying property 4 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.076582431793213.

Properties batch 5, size 1
Remaining timeout: 197.75062727928162
Verifying property 5 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2397215366363525.

Properties batch 6, size 1
Remaining timeout: 197.6026623249054
Verifying property 6 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7745287418365479.

Properties batch 7, size 1
Remaining timeout: 197.45791792869568
Verifying property 7 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.24281096458435059.

Properties batch 8, size 1
Remaining timeout: 197.31335878372192
Verifying property 8 with 1 instances.
##### Instance 84 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.11414778]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.80086327, -15.88022327,  -7.39093113,  -9.48237228,  -6.51979351,
         -9.19186211,  -7.76570368, -10.53886223, -14.64324093, -15.33413029],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.11414778]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 570
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 175
Node /15 input 0: size torch.Size([100]) unstable 11
-----------------
# of unstable neurons: 756
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008172988891601562
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 1] 
split level 1: [/input-12, 15] 
split level 2: [/input-12, 26] 
split level 3: [/input-12, 6] 
split level 4: [/input-12, 11] 
split level 5: [/input-12, 68] 
split level 6: [/input-8, 1884] 
split level 7: [/input-8, 1901] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.626678466796875e-05
Time: prepare 0.0035    bound 0.0065    transfer 0.0133    finalize 0.0060    func 0.0294    
Accumulated time: func 0.0294    prepare 0.0042    bound 0.0065    transfer 0.0133    finalize 0.0060    
all_split False
Length of domains: 0
Time: pickout 0.0014    decision 0.0366    set_bounds 0.0309    solve 0.0295    add 0.0001    
Accumulated time: pickout 0.0014    decision 0.0366    set_bounds 0.0309    solve 0.0295    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.10590028762817383

the mip building process is not terminated yet, kill it
Result: safe in 3.2103 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 85, vnnlib ID: 85 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.42035007, -11.01566029, -16.78618240, -17.08073235, -15.94405842,
         -18.31308746, -16.60547638, -16.45758438, -12.49265862, -13.06334209]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [534]; unstable size 534; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 534] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 534] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 534] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 197] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.66741276, 3.53291798, 4.23365259, 2.83012772, 5.27459431, 3.79739428,
         3.37451887, 0.14124155, 1.17811894]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0570 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 86, vnnlib ID: 86 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-15.28128910, -17.14933395, -11.40331554, -14.08204365, -14.06262875,
         -13.41378117, -16.03304672, -13.62230492, -16.91720581, -17.59583473]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [674]; unstable size 674; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 674] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 674] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 674] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 193] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.10949588, 4.45415878, 2.07507944, 2.01375389, 1.43745196, 3.63756800,
         1.59498572, 4.70254755, 5.05546284]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0678 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 87, vnnlib ID: 87 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.75811863, -7.24076557, -3.96754313, -3.75479078, -2.71305084,
         -3.64833927, -3.95274568, -3.04537916, -8.23825359, -5.63892746]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [434]; unstable size 434; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 222, 1, 434] with unstable size 221 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 27, 1, 434] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 434] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [221]; unstable size 221; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 27, 1, 221] with unstable size 26 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 221] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [26]; unstable size 26; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 26] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.55352426,  1.36358547, -0.76676738, -0.70900577, -1.60512829,
         -0.78009778, -1.31760657,  2.84528279,  0.56516743]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.75811863, -7.24076557, -3.96754313, -3.75479078, -2.71305084,
         -3.64833927, -3.95274568, -3.04537916, -8.23825359, -5.63892746]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.75811815, -7.24076557, -3.96754289, -3.75479031, -2.71305084,
          -3.64833879, -3.95274591, -3.04537868, -8.23825359, -5.63892746],
         [-7.75811815, -7.24076557, -3.96754289, -3.75479031, -2.71305084,
          -3.64833879, -3.95274591, -3.04537868, -8.23825359, -5.63892746]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.92216420,  0.70941162, -0.33232784,  0.60296011,  0.90736723]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]],


         [[[-1.06825387e+00, -1.29047608e+00, -9.25396800e-01,  ...,
            -6.55555546e-01, -8.14285696e-01, -7.50793636e-01],
           [-9.88888860e-01, -1.02063489e+00, -1.00476182e+00,  ...,
            -7.34920621e-01, -1.17936504e+00, -1.02063489e+00],
           [-1.00476182e+00, -7.66666651e-01, -8.14285696e-01,  ...,
            -1.00476182e+00, -1.17936504e+00, -1.09999990e+00],
           ...,
           [-1.51269829e+00, -2.90476084e-01,  9.00000036e-01,  ...,
             5.66666722e-01,  6.77777827e-01,  6.14285767e-01],
           [-7.66666651e-01,  5.98412752e-01,  9.31746066e-01,  ...,
             2.17460394e-01,  2.65079439e-01,  5.50793707e-01],
           [-1.79364979e-01,  9.63492095e-01,  8.84127021e-01,  ...,
             2.96825469e-01,  2.17460394e-01,  5.98412752e-01]],

          [[-9.33977425e-01, -1.27214170e+00, -9.33977425e-01,  ...,
            -7.08534598e-01, -8.85668218e-01, -8.21255982e-01],
           [-8.37359071e-01, -9.98389661e-01, -1.01449275e+00,  ...,
            -7.56843746e-01, -1.20772946e+00, -1.06280184e+00],
           [-8.53462100e-01, -7.40740716e-01, -8.21255982e-01,  ...,
            -9.82286572e-01, -1.15942025e+00, -1.09500802e+00],
           ...,
           [-1.65861523e+00, -5.15297890e-01,  5.95813274e-01,  ...,
             1.93236828e-01,  2.89855182e-01,  1.93236828e-01],
           [-9.17874336e-01,  3.70370477e-01,  6.11916363e-01,  ...,
            -1.93236589e-01, -1.44927412e-01,  1.61030710e-01],
           [-4.18679416e-01,  6.44122481e-01,  5.15298009e-01,  ...,
            -1.28824353e-01, -1.93236589e-01,  1.93236828e-01]],

          [[-6.28185868e-01, -1.06296861e+00, -8.38080943e-01,  ...,
            -5.53223372e-01, -6.88155890e-01, -5.98200858e-01],
           [-6.73163414e-01, -8.68065953e-01, -8.83058429e-01,  ...,
            -5.08245826e-01, -8.98050964e-01, -7.18140900e-01],
           [-6.28185868e-01, -6.13193393e-01, -7.18140900e-01,  ...,
            -7.93103397e-01, -9.28035975e-01, -8.23088408e-01],
           ...,
           [-1.48275876e+00, -7.48125911e-01,  2.11394474e-01,  ...,
             1.49940979e-03,  1.06446937e-01, -1.34930937e-02],
           [-8.98050964e-01,  1.49940979e-03,  1.81409463e-01,  ...,
            -3.73313308e-01, -3.58320802e-01, -1.18440613e-01],
           [-4.63268340e-01,  3.16341996e-01,  1.36431947e-01,  ...,
            -2.83358276e-01, -3.73313308e-01, -4.34781015e-02]]]]],
       device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0836 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 88, vnnlib ID: 88 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.13618565, -7.95294571, -3.64413977, -3.37936306, -3.17752457,
         -3.15863037, -5.09549570, -2.59429359, -6.38139343, -5.47579718]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [416]; unstable size 416; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 168, 1, 416] with unstable size 167 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 416] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 416] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [167]; unstable size 167; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 167] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.65106201,  3.34274673, -0.95804220, -1.22589231, -1.23296714,
          0.48913813, -2.05695391,  1.96782136,  0.53511190]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.13618565, -7.95294571, -3.64413977, -3.37936306, -3.17752457,
         -3.15863037, -5.09549570, -2.59429359, -6.38139343, -5.47579718]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.13618565, -7.95294476, -3.64413953, -3.37936282, -3.17752457,
          -3.15863037, -5.09549522, -2.59429312, -6.38139343, -5.47579718],
         [-6.13618565, -7.95294476, -3.64413953, -3.37936282, -3.17752457,
          -3.15863037, -5.09549522, -2.59429312, -6.38139343, -5.47579718]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.26477671, -0.46661496, -0.48550916, -1.04984641]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]],


         [[[ 1.55079389,  1.50317490,  1.53492093,  ...,  1.24920666,
             1.13809550,  1.47142887],
           [ 1.53492093,  1.50317490,  1.50317490,  ...,  1.02698421,
             1.24920666,  1.45555580],
           [ 1.55079389,  1.51904786,  1.51904786,  ...,  0.77301592,
             1.32857168,  1.48730183],
           ...,
           [-0.98888886,  0.21746039, -0.24285704,  ...,  1.13809550,
            -0.38571417,  1.21746063],
           [-1.24285710, -1.11587298, -1.09999990,  ...,  0.20158738,
            -0.65555555,  0.86825401],
           [-1.27460313, -1.33809519, -1.13174593,  ...,  0.50317466,
             0.21746039,  0.48730165]],

          [[ 2.10950065,  2.06119204,  2.09339786,  ...,  1.65861547,
             1.67471850,  2.07729483],
           [ 2.10144925,  2.06119204,  2.06119204,  ...,  1.43317258,
             1.80354297,  2.06119204],
           [ 2.10950065,  2.07729483,  2.07729483,  ...,  1.17552364,
             1.86795521,  2.09339786],
           ...,
           [-1.11111104,  0.35426742, -0.09661824,  ...,  1.64251232,
            -0.01610294,  1.56199706],
           [-1.40096617, -1.04669881, -0.99838966,  ...,  0.70853472,
            -0.27375188,  1.20772982],
           [-1.43317223, -1.27214170, -1.04669881,  ...,  1.04669893,
             0.61191636,  0.88566834]],

          [[ 2.10045004,  2.09295392,  2.10045004,  ...,  1.57571256,
             1.71064508,  2.10045004],
           [ 2.10045004,  2.08545780,  2.09295392,  ...,  1.36581755,
             1.81559265,  2.10045004],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  1.12593722,
             1.87556267,  2.10045004],
           ...,
           [-1.25787115,  0.03148442, -0.32833579,  ...,  1.68066013,
             0.01649191,  1.69565260],
           [-1.46776617, -1.18290865, -1.06296861,  ...,  0.88605714,
            -0.10344811,  1.44078004],
           [-1.34782624, -1.27286363, -1.03298354,  ...,  1.21589243,
             0.88605714,  1.18590748]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0778 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 89, vnnlib ID: 89 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
         -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [472]; unstable size 472; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 472] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 472] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 472] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 210] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.69297743,  3.94914913,  3.92555094,  4.07342148,  5.17004442,
          4.61110973,  4.71607876, -0.48206472,  1.52207375]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
         -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.58it/s]100%|██████████| 1/1 [00:00<00:00,  8.57it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.60679770, -2.84526992, -8.02832699, -7.76222277, -7.95738125,
          -9.17969418, -8.46947193, -8.89546585, -2.92605209, -5.02369881]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.08078218]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1195 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 29.900592803955078
alpha/beta optimization time: 1.252030372619629
initial alpha-crown bounds: tensor([[ 1.81915092,  4.04639435,  4.01018715,  4.15022850,  5.26251173,
          4.67265844,  4.80006599, -0.42643023,  1.56582618]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.42643022537231445
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6471 seconds.
lower bounds for all target labels: [1.8191499710083008, 4.046394348144531, 4.010186672210693, 4.150228500366211, 5.262511730194092, 4.672658443450928, 4.800065994262695, -0.42643022537231445, 1.565826177597046]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [7]
start creating model mps for candidates: ['lay/16_7']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 144054 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.48829174041748
Verifying property 0 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.262511730194092.

Properties batch 1, size 1
Remaining timeout: 198.09737586975098
Verifying property 1 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.800065994262695.

Properties batch 2, size 1
Remaining timeout: 197.9838523864746
Verifying property 2 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.672658443450928.

Properties batch 3, size 1
Remaining timeout: 197.8938808441162
Verifying property 3 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.150228500366211.

Properties batch 4, size 1
Remaining timeout: 197.80735158920288
Verifying property 4 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.046394348144531.

Properties batch 5, size 1
Remaining timeout: 197.72131896018982
Verifying property 5 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.010187149047852.

Properties batch 6, size 1
Remaining timeout: 197.63431859016418
Verifying property 6 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8191509246826172.

Properties batch 7, size 1
Remaining timeout: 197.54305171966553
Verifying property 7 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.565826177597046.

Properties batch 8, size 1
Remaining timeout: 197.4521405696869
Verifying property 8 with 1 instances.
##### Instance 89 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.42643023]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.58886576, -2.20369244, -8.07431412, -7.83337307, -7.94223309,
        -9.24308968, -8.43767738, -8.89227295, -3.14519000, -4.67166090],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.42643023]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 472
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 206
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 696
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0005564689636230469
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 35] 
split level 2: [/input-12, 74] 
split level 3: [/input-12, 10] 
split level 4: [/input-12, 11] 
split level 5: [/input-12, 60] 
split level 6: [/input-12, 1] 
split level 7: [/input-12, 6] 
pruning_in_iteration open status: True
ratio of positive domain = 250 / 256 = 0.9765625
pruning-in-iteration extra time: 0.005313873291015625
Time: prepare 0.0019    bound 0.1499    transfer 0.0046    finalize 0.0020    func 0.1584    
Accumulated time: func 0.1584    prepare 0.0024    bound 0.1499    transfer 0.0046    finalize 0.0020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.12683 (8), -0.08570 (8), -0.06540 (8), -0.04592 (8), -0.03566 (8), -0.03056 (8), 
Length of domains: 6
Time: pickout 0.0005    decision 0.0269    set_bounds 0.0176    solve 0.1585    add 0.0253    
Accumulated time: pickout 0.0005    decision 0.0269    set_bounds 0.0176    solve 0.1585    add 0.0253    
Current (lb-rhs): -0.1268291473388672
6 domains visited
Cumulative time: 0.24114394187927246

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 6
splitting decisions: 
split level 0: [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] [/input-12, 80] 
split level 1: [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] [/input-12, 54] 
split level 2: [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] [/input-12, 93] 
split level 3: [/input-8, 684] [/input-8, 1075] [/input-8, 684] [/input-8, 684] [/input-8, 1075] [/input-8, 827] 
split level 4: [/input-8, 812] [/input-8, 684] [/input-8, 812] [/input-8, 812] [/input-8, 684] [/input-8, 684] 
split level 5: [/input-8, 106] [/input-8, 1074] [/input-8, 106] [/input-8, 106] [/input-8, 812] [/input-8, 812] 
pruning_in_iteration open status: True
ratio of positive domain = 372 / 384 = 0.96875
pruning-in-iteration extra time: 0.005133628845214844
Time: prepare 0.0076    bound 0.1283    transfer 0.0064    finalize 0.0041    func 0.1465    
Accumulated time: func 0.3049    prepare 0.0103    bound 0.2781    transfer 0.0110    finalize 0.0062    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06557 (14), -0.05904 (14), -0.05758 (14), -0.05583 (14), -0.05218 (14), -0.04476 (14), -0.04397 (14), -0.04118 (14), -0.02553 (14), -0.02155 (14), -0.01943 (14), -0.01884 (14), 
Length of domains: 12
Time: pickout 0.0010    decision 0.0265    set_bounds 0.0249    solve 0.1466    add 0.0404    
Accumulated time: pickout 0.0015    decision 0.0535    set_bounds 0.0425    solve 0.3051    add 0.0657    
Current (lb-rhs): -0.0655670166015625
18 domains visited
Cumulative time: 0.4954845905303955

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 12
splitting decisions: 
split level 0: [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] [/input-8, 827] 
split level 1: [/input-8, 1075] [/input-8, 1075] [/input-8, 106] [/input-8, 1075] [/input-8, 1075] [/input-8, 106] [/input-8, 1075] [/input-8, 1075] [/input-8, 106] [/input-8, 1075] 
split level 2: [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] [/input-8, 1074] 
split level 3: [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] [/input-8, 108] [/input-8, 1332] [/input-8, 1332] [/input-8, 1332] 
split level 4: [/input-8, 108] [/input-8, 108] [/input-8, 861] [/input-8, 108] [/input-8, 108] [/input-8, 861] [/input-8, 1332] [/input-8, 108] [/input-8, 861] [/input-8, 108] 
pruning_in_iteration open status: True
ratio of positive domain = 317 / 384 = 0.8255208333333334
pruning-in-iteration extra time: 0.005442142486572266
Time: prepare 0.0075    bound 0.1799    transfer 0.0018    finalize 0.0021    func 0.1913    
Accumulated time: func 0.4962    prepare 0.0181    bound 0.4580    transfer 0.0128    finalize 0.0082    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04691 (19), -0.04526 (19), -0.04310 (19), -0.04192 (19), -0.03988 (19), -0.03905 (19), -0.03823 (19), -0.03580 (19), -0.03569 (19), -0.03528 (19), -0.03520 (19), -0.03462 (19), -0.03434 (19), -0.03381 (19), -0.03351 (19), -0.03338 (19), -0.03278 (19), -0.03250 (19), -0.03228 (19), -0.03109 (19), 
Length of domains: 67
Time: pickout 0.0014    decision 0.0223    set_bounds 0.0175    solve 0.1914    add 0.0625    
Accumulated time: pickout 0.0029    decision 0.0758    set_bounds 0.0600    solve 0.4965    add 0.1282    
Current (lb-rhs): -0.04691362380981445
85 domains visited
Cumulative time: 0.8029632568359375

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 67
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 403] [/input-8, 817] [/input-8, 817] 
split level 1: [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] [/input-8, 270] 
pruning_in_iteration open status: True
ratio of positive domain = 73 / 268 = 0.2723880597014925
pruning-in-iteration extra time: 0.003896951675415039
Time: prepare 0.0053    bound 0.1853    transfer 0.0038    finalize 0.0017    func 0.1962    
Accumulated time: func 0.6924    prepare 0.0236    bound 0.6433    transfer 0.0166    finalize 0.0099    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04080 (21), -0.03899 (21), -0.03830 (21), -0.03698 (21), -0.03649 (21), -0.03560 (21), -0.03448 (21), -0.03391 (21), -0.03388 (21), -0.03311 (21), -0.03295 (21), -0.03223 (21), -0.03207 (21), -0.03142 (21), -0.03138 (21), -0.03045 (21), -0.03006 (21), -0.02983 (21), -0.02974 (21), -0.02957 (21), 
Length of domains: 195
Time: pickout 0.0057    decision 0.0154    set_bounds 0.0071    solve 0.1963    add 0.0796    
Accumulated time: pickout 0.0086    decision 0.0912    set_bounds 0.0671    solve 0.6928    add 0.2078    
Current (lb-rhs): -0.040798187255859375
280 domains visited
Cumulative time: 1.1144347190856934

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 195
splitting decisions: 
split level 0: [/input-8, 403] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 64] [/input-8, 403] [/input-8, 64] [/input-8, 64] [/input-8, 64] 
pruning_in_iteration open status: True
ratio of positive domain = 111 / 390 = 0.2846153846153846
pruning-in-iteration extra time: 0.004075050354003906
Time: prepare 0.0078    bound 0.1889    transfer 0.0010    finalize 0.0025    func 0.2004    
Accumulated time: func 0.8928    prepare 0.0317    bound 0.8322    transfer 0.0176    finalize 0.0124    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03947 (22), -0.03755 (22), -0.03697 (22), -0.03569 (22), -0.03505 (22), -0.03416 (22), -0.03319 (22), -0.03272 (22), -0.03199 (22), -0.03169 (22), -0.03165 (22), -0.03102 (22), -0.03022 (22), -0.03007 (22), -0.02946 (22), -0.02919 (22), -0.02864 (22), -0.02852 (22), -0.02824 (22), -0.02824 (22), 
Length of domains: 279
Time: pickout 0.0159    decision 0.0301    set_bounds 0.0084    solve 0.2006    add 0.0796    
Accumulated time: pickout 0.0244    decision 0.1213    set_bounds 0.0755    solve 0.8933    add 0.2874    
Current (lb-rhs): -0.039469242095947266
559 domains visited
Cumulative time: 1.4598112106323242

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 279
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 403] [/input-8, 64] [/input-8, 403] [/input-8, 403] [/input-8, 817] [/input-8, 817] 
pruning_in_iteration open status: True
ratio of positive domain = 200 / 558 = 0.3584229390681004
pruning-in-iteration extra time: 0.00495147705078125
Time: prepare 0.0111    bound 0.2686    transfer 0.0076    finalize 0.0055    func 0.2930    
Accumulated time: func 1.1858    prepare 0.0431    bound 1.1009    transfer 0.0253    finalize 0.0179    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03754 (23), -0.03552 (23), -0.03503 (23), -0.03378 (23), -0.03302 (23), -0.03214 (23), -0.03127 (23), -0.03088 (23), -0.02986 (23), -0.02980 (23), -0.02964 (23), -0.02915 (23), -0.02837 (23), -0.02784 (23), -0.02732 (23), -0.02729 (23), -0.02680 (23), -0.02665 (23), -0.02631 (23), -0.02609 (23), 
Length of domains: 358
Time: pickout 0.0171    decision 0.0317    set_bounds 0.0138    solve 0.2932    add 0.0430    
Accumulated time: pickout 0.0415    decision 0.1530    set_bounds 0.0893    solve 1.1865    add 0.3304    
Current (lb-rhs): -0.03754234313964844
917 domains visited
Cumulative time: 1.8633854389190674

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 358
splitting decisions: 
split level 0: [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] [/input, 2133] 
pruning_in_iteration open status: True
ratio of positive domain = 156 / 716 = 0.2178770949720671
pruning-in-iteration extra time: 0.005276203155517578
Time: prepare 0.0207    bound 0.2901    transfer 0.0111    finalize 0.0052    func 0.3272    
Accumulated time: func 1.5130    prepare 0.0640    bound 1.3910    transfer 0.0363    finalize 0.0231    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03450 (24), -0.03385 (24), -0.03236 (24), -0.03205 (24), -0.03171 (24), -0.03112 (24), -0.03069 (24), -0.03004 (24), -0.02991 (24), -0.02898 (24), -0.02891 (24), -0.02826 (24), -0.02824 (24), -0.02784 (24), -0.02730 (24), -0.02719 (24), -0.02674 (24), -0.02666 (24), -0.02646 (24), -0.02609 (24), 
Length of domains: 560
Time: pickout 0.0100    decision 0.0390    set_bounds 0.0121    solve 0.3274    add 0.0890    
Accumulated time: pickout 0.0515    decision 0.1921    set_bounds 0.1014    solve 1.5139    add 0.4194    
Current (lb-rhs): -0.034502506256103516
1477 domains visited
Cumulative time: 2.350130796432495

BaB round 8
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 560
splitting decisions: 
split level 0: [/input, 424] [/input, 424] [/input, 424] [/input-8, 1331] [/input, 424] [/input, 481] [/input-8, 1618] [/input, 481] [/input-8, 1618] [/input-8, 1331] 
pruning_in_iteration open status: True
ratio of positive domain = 283 / 1120 = 0.2526785714285714
pruning-in-iteration extra time: 0.005181074142456055
Time: prepare 0.0290    bound 0.2409    transfer 0.0142    finalize 0.0080    func 0.2923    
Accumulated time: func 1.8052    prepare 0.0932    bound 1.6319    transfer 0.0505    finalize 0.0311    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03218 (25), -0.03154 (25), -0.02992 (25), -0.02974 (25), -0.02967 (25), -0.02928 (25), -0.02904 (25), -0.02881 (25), -0.02778 (25), -0.02747 (25), -0.02741 (25), -0.02723 (25), -0.02714 (25), -0.02678 (25), -0.02655 (25), -0.02631 (25), -0.02597 (25), -0.02552 (25), -0.02533 (25), -0.02533 (25), 
Length of domains: 837
Time: pickout 0.0216    decision 0.0485    set_bounds 0.0234    solve 0.2925    add 0.0994    
Accumulated time: pickout 0.0732    decision 0.2406    set_bounds 0.1247    solve 1.8065    add 0.5188    
Current (lb-rhs): -0.03217601776123047
2314 domains visited
Cumulative time: 2.8475592136383057

BaB round 9
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0027
batch: 837
splitting decisions: 
split level 0: [/input, 481] [/input-8, 1331] [/input, 481] [/input-8, 861] [/input-8, 1331] [/input, 481] [/input-8, 1331] [/input-8, 861] [/input, 481] [/input-8, 861] 
pruning_in_iteration open status: True
ratio of positive domain = 487 / 1674 = 0.2909199522102748
pruning-in-iteration extra time: 0.005182027816772461
Time: prepare 0.0418    bound 0.1778    transfer 0.0242    finalize 0.0148    func 0.2588    
Accumulated time: func 2.0640    prepare 0.1352    bound 1.8097    transfer 0.0747    finalize 0.0460    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02963 (26), -0.02901 (26), -0.02866 (26), -0.02804 (26), -0.02732 (26), -0.02720 (26), -0.02712 (26), -0.02671 (26), -0.02650 (26), -0.02635 (26), -0.02627 (26), -0.02623 (26), -0.02614 (26), -0.02575 (26), -0.02553 (26), -0.02540 (26), -0.02530 (26), -0.02490 (26), -0.02480 (26), -0.02478 (26), 
Length of domains: 1187
Time: pickout 0.0279    decision 0.0637    set_bounds 0.0335    solve 0.2592    add 0.1008    
Accumulated time: pickout 0.1010    decision 0.3043    set_bounds 0.1583    solve 2.0657    add 0.6196    
Current (lb-rhs): -0.029632568359375
3501 domains visited
Cumulative time: 3.349623203277588

BaB round 10
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 1187
splitting decisions: 
split level 0: [/input-8, 861] [/input-8, 75] [/input-8, 861] [/input, 449] [/input-8, 861] [/input, 449] [/input-8, 75] [/input-8, 861] [/input-8, 861] [/input-8, 861] 
pruning_in_iteration open status: True
ratio of positive domain = 1117 / 2374 = 0.470513900589722
pruning-in-iteration extra time: 0.005245685577392578
Time: prepare 0.0663    bound 0.2575    transfer 0.0442    finalize 0.0206    func 0.3899    
Accumulated time: func 2.4540    prepare 0.2018    bound 2.0673    transfer 0.1189    finalize 0.0666    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02834 (27), -0.02773 (27), -0.02738 (27), -0.02676 (27), -0.02592 (27), -0.02586 (27), -0.02581 (27), -0.02525 (27), -0.02521 (27), -0.02499 (27), -0.02496 (27), -0.02491 (27), -0.02486 (27), -0.02429 (27), -0.02424 (27), -0.02403 (27), -0.02344 (27), -0.02339 (27), -0.02334 (27), -0.02284 (27), 
Length of domains: 1257
Time: pickout 0.0402    decision 0.0849    set_bounds 0.0481    solve 0.3905    add 0.1154    
Accumulated time: pickout 0.1413    decision 0.3892    set_bounds 0.2064    solve 2.4562    add 0.7351    
Current (lb-rhs): -0.02834033966064453
4758 domains visited
Cumulative time: 4.042719602584839

BaB round 11
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 1257
splitting decisions: 
split level 0: [/input, 2726] [/input, 2726] [/input-8, 75] [/input-8, 75] [/input-8, 1629] [/input-8, 1629] [/input, 2726] [/input, 2726] [/input-8, 75] [/input, 2726] 
pruning_in_iteration open status: True
ratio of positive domain = 1194 / 2514 = 0.47494033412887826
pruning-in-iteration extra time: 0.005382537841796875
Time: prepare 0.0759    bound 0.2460    transfer 0.0060    finalize 0.0167    func 0.3448    
Accumulated time: func 2.7988    prepare 0.2779    bound 2.3132    transfer 0.1249    finalize 0.0833    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02669 (28), -0.02608 (28), -0.02573 (28), -0.02512 (28), -0.02425 (28), -0.02415 (28), -0.02354 (28), -0.02333 (28), -0.02330 (28), -0.02320 (28), -0.02274 (28), -0.02265 (28), -0.02259 (28), -0.02239 (28), -0.02238 (28), -0.02200 (28), -0.02179 (28), -0.02172 (28), -0.02170 (28), -0.02144 (28), 
Length of domains: 1320
Time: pickout 0.0420    decision 0.0858    set_bounds 0.2553    solve 0.3461    add 0.1070    
Accumulated time: pickout 0.1832    decision 0.4749    set_bounds 0.4617    solve 2.8023    add 0.8421    
Current (lb-rhs): -0.026694774627685547
6078 domains visited
Cumulative time: 4.893247604370117

BaB round 12
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 1320
splitting decisions: 
split level 0: [/input-8, 1629] [/input-8, 1629] [/input-8, 75] [/input-8, 1618] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input-8, 1629] [/input-8, 970] [/input-8, 970] 
pruning_in_iteration open status: True
ratio of positive domain = 1077 / 2640 = 0.40795454545454546
pruning-in-iteration extra time: 0.005331277847290039
Time: prepare 0.0795    bound 0.3065    transfer 0.0183    finalize 0.0187    func 0.4232    
Accumulated time: func 3.2221    prepare 0.3576    bound 2.6197    transfer 0.1433    finalize 0.1020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02358 (29), -0.02349 (29), -0.02323 (29), -0.02283 (29), -0.02262 (29), -0.02254 (29), -0.02227 (29), -0.02188 (29), -0.02123 (29), -0.02109 (29), -0.02105 (29), -0.02103 (29), -0.02100 (29), -0.02094 (29), -0.02074 (29), -0.02068 (29), -0.02063 (29), -0.02034 (29), -0.02028 (29), -0.02027 (29), 
Length of domains: 1563
Time: pickout 0.0472    decision 0.0949    set_bounds 0.0615    solve 0.4247    add 0.1028    
Accumulated time: pickout 0.2304    decision 0.5698    set_bounds 0.5231    solve 3.2270    add 0.9450    
Current (lb-rhs): -0.023581981658935547
7641 domains visited
Cumulative time: 5.641398906707764

BaB round 13
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 1563
splitting decisions: 
split level 0: [/input-8, 678] [/input, 2726] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input, 2726] [/input-8, 678] [/input-8, 75] [/input-8, 75] [/input-8, 1618] 
pruning_in_iteration open status: True
ratio of positive domain = 1191 / 3126 = 0.3809980806142035
pruning-in-iteration extra time: 0.005303859710693359
Time: prepare 0.0861    bound 0.3169    transfer 0.0288    finalize 0.0224    func 0.4556    
Accumulated time: func 3.6777    prepare 0.4440    bound 2.9366    transfer 0.1721    finalize 0.1244    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02157 (30), -0.02149 (30), -0.02121 (30), -0.02082 (30), -0.02061 (30), -0.02053 (30), -0.02025 (30), -0.01985 (30), -0.01953 (30), -0.01945 (30), -0.01930 (30), -0.01907 (30), -0.01901 (30), -0.01898 (30), -0.01892 (30), -0.01872 (30), -0.01867 (30), -0.01865 (30), -0.01857 (30), -0.01849 (30), 
Length of domains: 1935
Time: pickout 0.0483    decision 0.1048    set_bounds 0.0652    solve 0.4562    add 0.1250    
Accumulated time: pickout 0.2788    decision 0.6746    set_bounds 0.5884    solve 3.6832    add 1.0699    
Current (lb-rhs): -0.021572589874267578
9576 domains visited
Cumulative time: 6.45698356628418

BaB round 14
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 1935
splitting decisions: 
split level 0: [/input, 2726] [/input, 3994] [/input, 2726] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input-8, 1629] [/input, 2726] [/input, 3994] [/input, 2726] 
pruning_in_iteration open status: True
ratio of positive domain = 1531 / 3870 = 0.3956072351421188
pruning-in-iteration extra time: 0.005322456359863281
Time: prepare 0.1183    bound 0.3354    transfer 0.0328    finalize 0.0321    func 0.5189    
Accumulated time: func 4.1965    prepare 0.5625    bound 3.2720    transfer 0.2049    finalize 0.1565    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01858 (31), -0.01849 (31), -0.01844 (31), -0.01836 (31), -0.01822 (31), -0.01808 (31), -0.01782 (31), -0.01768 (31), -0.01762 (31), -0.01753 (31), -0.01748 (31), -0.01740 (31), -0.01725 (31), -0.01712 (31), -0.01686 (31), -0.01679 (31), -0.01672 (31), -0.01649 (31), -0.01639 (31), -0.01637 (31), 
Length of domains: 2339
Time: pickout 0.0675    decision 0.1243    set_bounds 0.2241    solve 0.5202    add 0.1039    
Accumulated time: pickout 0.3462    decision 0.7989    set_bounds 0.8124    solve 4.2034    add 1.1738    
Current (lb-rhs): -0.018580913543701172
11915 domains visited
Cumulative time: 7.5145440101623535

BaB round 15
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 2339
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input-8, 1618] [/input, 2726] [/input-8, 678] [/input-8, 1618] 
pruning_in_iteration open status: True
ratio of positive domain = 2572 / 4678 = 0.549807610089782
pruning-in-iteration extra time: 0.005276203155517578
Time: prepare 0.1301    bound 0.2816    transfer 0.0162    finalize 0.0308    func 0.4602    
Accumulated time: func 4.6567    prepare 0.6929    bound 3.5535    transfer 0.2211    finalize 0.1873    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01736 (32), -0.01728 (32), -0.01727 (32), -0.01718 (32), -0.01700 (32), -0.01690 (32), -0.01660 (32), -0.01651 (32), -0.01640 (32), -0.01631 (32), -0.01631 (32), -0.01622 (32), -0.01603 (32), -0.01594 (32), -0.01564 (32), -0.01554 (32), -0.01523 (32), -0.01516 (32), -0.01516 (32), -0.01509 (32), 
Length of domains: 2106
Time: pickout 0.0662    decision 0.1456    set_bounds 0.1010    solve 0.4611    add 0.1069    
Accumulated time: pickout 0.4124    decision 0.9446    set_bounds 0.9134    solve 4.6645    add 1.2807    
Current (lb-rhs): -0.017358779907226562
14021 domains visited
Cumulative time: 8.41521430015564

BaB round 16
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0033
batch: 2106
splitting decisions: 
split level 0: [/input-8, 678] [/input-8, 678] [/input-8, 678] [/input, 2726] [/input, 2726] [/input, 2726] [/input, 2726] [/input-8, 678] [/input-8, 678] [/input-8, 678] 
pruning_in_iteration open status: True
ratio of positive domain = 2334 / 4212 = 0.5541310541310541
pruning-in-iteration extra time: 0.005448341369628906
Time: prepare 0.1246    bound 0.4333    transfer 0.0221    finalize 0.0330    func 0.6134    
Accumulated time: func 5.2701    prepare 0.8177    bound 3.9869    transfer 0.2432    finalize 0.2202    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01625 (33), -0.01621 (33), -0.01612 (33), -0.01611 (33), -0.01607 (33), -0.01575 (33), -0.01567 (33), -0.01546 (33), -0.01538 (33), -0.01538 (33), -0.01535 (33), -0.01530 (33), -0.01510 (33), -0.01502 (33), -0.01471 (33), -0.01462 (33), -0.01423 (33), -0.01421 (33), -0.01415 (33), -0.01407 (33), 
Length of domains: 1878
Time: pickout 0.0607    decision 0.1323    set_bounds 0.0882    solve 0.6145    add 0.1051    
Accumulated time: pickout 0.4731    decision 1.0768    set_bounds 1.0016    solve 5.2789    add 1.3857    
Current (lb-rhs): -0.01625204086303711
15899 domains visited
Cumulative time: 9.435701370239258

BaB round 17
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0032
batch: 1878
splitting decisions: 
split level 0: [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] [/input-8, 844] 
pruning_in_iteration open status: True
ratio of positive domain = 2123 / 3756 = 0.5652289669861554
pruning-in-iteration extra time: 0.00533294677734375
Time: prepare 0.1037    bound 0.2832    transfer 0.0063    finalize 0.0216    func 0.4162    
Accumulated time: func 5.6864    prepare 0.9216    bound 4.2700    transfer 0.2495    finalize 0.2418    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01528 (34), -0.01519 (34), -0.01518 (34), -0.01510 (34), -0.01491 (34), -0.01482 (34), -0.01452 (34), -0.01442 (34), -0.01432 (34), -0.01423 (34), -0.01422 (34), -0.01414 (34), -0.01395 (34), -0.01386 (34), -0.01355 (34), -0.01347 (34), -0.01311 (34), -0.01307 (34), -0.01304 (34), -0.01298 (34), 
Length of domains: 1633
Time: pickout 0.0539    decision 0.1198    set_bounds 0.0782    solve 0.4169    add 0.1012    
Accumulated time: pickout 0.5270    decision 1.1966    set_bounds 1.0797    solve 5.6959    add 1.4869    
Current (lb-rhs): -0.015278339385986328
17532 domains visited
Cumulative time: 10.227591514587402

BaB round 18
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 1633
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input, 424] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input, 424] [/input-8, 970] 
pruning_in_iteration open status: True
ratio of positive domain = 1946 / 3266 = 0.5958358848744642
pruning-in-iteration extra time: 0.005316495895385742
Time: prepare 0.0944    bound 0.2742    transfer 0.0079    finalize 0.0230    func 0.3999    
Accumulated time: func 6.0862    prepare 1.0163    bound 4.5443    transfer 0.2575    finalize 0.2648    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01394 (35), -0.01385 (35), -0.01385 (35), -0.01376 (35), -0.01358 (35), -0.01348 (35), -0.01318 (35), -0.01309 (35), -0.01298 (35), -0.01289 (35), -0.01289 (35), -0.01280 (35), -0.01261 (35), -0.01252 (35), -0.01222 (35), -0.01213 (35), -0.01177 (35), -0.01173 (35), -0.01169 (35), -0.01165 (35), 
Length of domains: 1320
Time: pickout 0.0543    decision 0.0994    set_bounds 0.0657    solve 0.4010    add 0.1009    
Accumulated time: pickout 0.5813    decision 1.2960    set_bounds 1.1454    solve 6.0969    add 1.5878    
Current (lb-rhs): -0.013938426971435547
18852 domains visited
Cumulative time: 10.966797113418579

BaB round 19
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 1320
splitting decisions: 
split level 0: [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 844] [/input-8, 844] 
pruning_in_iteration open status: True
ratio of positive domain = 1597 / 2640 = 0.6049242424242425
pruning-in-iteration extra time: 0.005189180374145508
Time: prepare 0.0705    bound 0.2190    transfer 0.0104    finalize 0.0145    func 0.3155    
Accumulated time: func 6.4017    prepare 1.0870    bound 4.7633    transfer 0.2679    finalize 0.2793    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01310 (36), -0.01303 (36), -0.01298 (36), -0.01291 (36), -0.01274 (36), -0.01263 (36), -0.01235 (36), -0.01223 (36), -0.01214 (36), -0.01206 (36), -0.01202 (36), -0.01195 (36), -0.01178 (36), -0.01167 (36), -0.01139 (36), -0.01127 (36), -0.01089 (36), -0.01085 (36), -0.01079 (36), -0.01075 (36), 
Length of domains: 1043
Time: pickout 0.0446    decision 0.0812    set_bounds 0.1829    solve 0.3160    add 0.1009    
Accumulated time: pickout 0.6259    decision 1.3772    set_bounds 1.3283    solve 6.4129    add 1.6888    
Current (lb-rhs): -0.013103485107421875
19895 domains visited
Cumulative time: 11.70925760269165

BaB round 20
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 1043
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 67] [/input-8, 970] [/input-8, 67] [/input-8, 970] [/input-8, 970] [/input-8, 970] 
pruning_in_iteration open status: True
ratio of positive domain = 1151 / 2086 = 0.5517737296260786
pruning-in-iteration extra time: 0.005316495895385742
Time: prepare 0.0563    bound 0.2945    transfer 0.0032    finalize 0.0133    func 0.3675    
Accumulated time: func 6.7692    prepare 1.1434    bound 5.0577    transfer 0.2711    finalize 0.2926    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01100 (37), -0.01088 (37), -0.01088 (37), -0.01076 (37), -0.01061 (37), -0.01049 (37), -0.01026 (37), -0.01014 (37), -0.01004 (37), -0.00992 (37), -0.00992 (37), -0.00980 (37), -0.00977 (37), -0.00967 (37), -0.00965 (37), -0.00965 (37), -0.00957 (37), -0.00955 (37), -0.00954 (37), -0.00945 (37), 
Length of domains: 935
Time: pickout 0.0389    decision 0.0736    set_bounds 0.0413    solve 0.3687    add 0.0929    
Accumulated time: pickout 0.6648    decision 1.4508    set_bounds 1.3696    solve 6.7816    add 1.7817    
Current (lb-rhs): -0.01100015640258789
20830 domains visited
Cumulative time: 12.347894668579102

BaB round 21
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 935
splitting decisions: 
split level 0: [/input, 3994] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input-8, 67] [/input, 3994] [/input-8, 67] [/input, 3994] 
pruning_in_iteration open status: True
ratio of positive domain = 1007 / 1870 = 0.5385026737967915
pruning-in-iteration extra time: 0.0052716732025146484
Time: prepare 0.0512    bound 0.2969    transfer 0.0133    finalize 0.0133    func 0.3749    
Accumulated time: func 7.1440    prepare 1.1949    bound 5.3546    transfer 0.2844    finalize 0.3059    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00924 (38), -0.00913 (38), -0.00912 (38), -0.00900 (38), -0.00885 (38), -0.00873 (38), -0.00850 (38), -0.00838 (38), -0.00828 (38), -0.00817 (38), -0.00816 (38), -0.00804 (38), -0.00795 (38), -0.00789 (38), -0.00787 (38), -0.00783 (38), -0.00777 (38), -0.00776 (38), -0.00775 (38), -0.00764 (38), 
Length of domains: 863
Time: pickout 0.0383    decision 0.0687    set_bounds 0.0381    solve 0.3753    add 0.0851    
Accumulated time: pickout 0.7031    decision 1.5195    set_bounds 1.4077    solve 7.1568    add 1.8668    
Current (lb-rhs): -0.009244441986083984
21693 domains visited
Cumulative time: 12.966973781585693

BaB round 22
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0017
batch: 863
splitting decisions: 
split level 0: [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 970] [/input-8, 1847] [/input-8, 1847] [/input-8, 75] [/input-8, 1847] 
pruning_in_iteration open status: True
ratio of positive domain = 846 / 1726 = 0.4901506373117034
pruning-in-iteration extra time: 0.0052013397216796875
Time: prepare 0.0472    bound 0.2117    transfer 0.0119    finalize 0.0106    func 0.2815    
Accumulated time: func 7.4256    prepare 1.2424    bound 5.5663    transfer 0.2963    finalize 0.3165    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00785 (39), -0.00773 (39), -0.00772 (39), -0.00760 (39), -0.00745 (39), -0.00733 (39), -0.00710 (39), -0.00698 (39), -0.00688 (39), -0.00677 (39), -0.00676 (39), -0.00664 (39), -0.00655 (39), -0.00649 (39), -0.00646 (39), -0.00643 (39), -0.00637 (39), -0.00635 (39), -0.00635 (39), -0.00624 (39), 
Length of domains: 880
Time: pickout 0.0293    decision 0.0642    set_bounds 0.0346    solve 0.2819    add 0.0895    
Accumulated time: pickout 0.7323    decision 1.5837    set_bounds 1.4423    solve 7.4387    add 1.9563    
Current (lb-rhs): -0.007845401763916016
22573 domains visited
Cumulative time: 13.478330373764038

BaB round 23
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0018
batch: 880
splitting decisions: 
split level 0: [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] [/input-8, 1611] 
pruning_in_iteration open status: True
ratio of positive domain = 1113 / 1760 = 0.6323863636363636
pruning-in-iteration extra time: 0.006745100021362305
Time: prepare 0.0472    bound 0.2143    transfer 0.0144    finalize 0.0130    func 0.2891    
Accumulated time: func 7.7147    prepare 1.2897    bound 5.7806    transfer 0.3107    finalize 0.3296    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00701 (40), -0.00689 (40), -0.00688 (40), -0.00676 (40), -0.00660 (40), -0.00648 (40), -0.00623 (40), -0.00612 (40), -0.00604 (40), -0.00593 (40), -0.00592 (40), -0.00581 (40), -0.00564 (40), -0.00558 (40), -0.00552 (40), -0.00550 (40), -0.00547 (40), -0.00540 (40), -0.00538 (40), -0.00538 (40), 
Length of domains: 647
Time: pickout 0.0286    decision 0.0643    set_bounds 0.0351    solve 0.2902    add 0.0964    
Accumulated time: pickout 0.7610    decision 1.6480    set_bounds 1.4774    solve 7.7289    add 2.0527    
Current (lb-rhs): -0.007005214691162109
23220 domains visited
Cumulative time: 14.007184028625488

BaB round 24
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 647
splitting decisions: 
split level 0: [/input-8, 1935] [/input-8, 1935] [/input, 424] [/input-8, 1935] [/input, 424] [/input-8, 1935] [/input-8, 1935] [/input-8, 1935] [/input-8, 1935] [/input, 424] 
pruning_in_iteration open status: True
ratio of positive domain = 892 / 1294 = 0.6893353941267388
pruning-in-iteration extra time: 0.005158901214599609
Time: prepare 0.0323    bound 0.2380    transfer 0.0141    finalize 0.0075    func 0.4193    
Accumulated time: func 8.1341    prepare 1.3223    bound 6.0186    transfer 0.3248    finalize 0.3370    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00529 (41), -0.00518 (41), -0.00517 (41), -0.00505 (41), -0.00489 (41), -0.00477 (41), -0.00452 (41), -0.00441 (41), -0.00433 (41), -0.00422 (41), -0.00421 (41), -0.00410 (41), -0.00394 (41), -0.00388 (41), -0.00382 (41), -0.00379 (41), -0.00376 (41), -0.00369 (41), -0.00367 (41), -0.00366 (41), 
Length of domains: 402
Time: pickout 0.0256    decision 0.0520    set_bounds 0.0262    solve 0.4196    add 0.0875    
Accumulated time: pickout 0.7866    decision 1.7000    set_bounds 1.5036    solve 8.1486    add 2.1401    
Current (lb-rhs): -0.005292415618896484
23622 domains visited
Cumulative time: 14.630275249481201

BaB round 25
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts: total 282 constraints, 19571 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.1743
batch: 402
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] [/input-8, 1734] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.004155635833740234

all verified at 3th iter
pruning_in_iteration open status: True
ratio of positive domain = 804 / 804 = 1.0
pruning-in-iteration extra time: 0.0007703304290771484
Time: prepare 0.0203    bound 0.0575    transfer 0.0062    finalize 0.0045    func 0.0935    
Accumulated time: func 8.2276    prepare 1.3428    bound 6.0761    transfer 0.3310    finalize 0.3415    
all_split False
Length of domains: 0
Time: pickout 0.0199    decision 0.0395    set_bounds 0.0160    solve 0.0937    add 0.0001    
Accumulated time: pickout 0.8065    decision 1.7395    set_bounds 1.5196    solve 8.2423    add 2.1402    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
23622 domains visited
Cumulative time: 14.976433038711548

found process to kill: terminal indx = 7
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=89_spec=7_30256037.log
found process for pidx=7
kill process for pidx=7
Result: safe in 17.9034 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 90, vnnlib ID: 90 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.92437601, -4.53821707, -1.81814766, -0.89523673, -2.18286943,
         -1.50445235, -2.81978679, -2.90949965, -4.78050327, -3.54446316]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [640]; unstable size 640; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 228, 1, 640] with unstable size 227 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 640] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 640] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [227]; unstable size 227; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 227] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 227] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54901546, -0.55123186, -2.14694452, -2.65342498, -1.82377076,
         -2.15827703, -1.06202722,  0.01771498, -1.15435958]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.92437601, -4.53821707, -1.81814766, -0.89523673, -2.18286943,
         -1.50445235, -2.81978679, -2.90949965, -4.78050327, -3.54446316]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.92437601, -4.53821659, -1.81814742, -0.89523673, -2.18286896,
          -1.50445259, -2.81978631, -2.90949917, -4.78050327, -3.54446268],
         [-3.92437601, -4.53821659, -1.81814742, -0.89523673, -2.18286896,
          -1.50445259, -2.81978631, -2.90949917, -4.78050327, -3.54446268]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.10458970,  1.71843028, -1.00163889, -1.92454958, -0.63691735,
          -1.31533372,  0.08971286,  0.72467637]]], device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         ...,


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]],


         [[[ 1.26507962,  1.26507962,  1.28095269,  ..., -1.87777781,
            -1.87777781, -1.87777781],
           [ 1.23333359,  1.18571460,  1.34444475,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           [ 1.36031771,  1.09047651,  1.23333359,  ..., -1.86190474,
            -1.86190474, -1.86190474],
           ...,
           [-1.38571417, -1.21111107, -1.02063489,  ...,  0.42380959,
            -0.11587292, -0.17936498],
           [-1.79841268, -1.73492062, -1.63968253,  ...,  0.05873025,
            -0.54444444, -0.89365077],
           [-1.86190474, -1.86190474, -1.84603179,  ..., -0.86190474,
            -1.24285710, -1.57619035]],

          [[ 0.98228669,  0.98228669,  0.99838978,  ..., -1.86795497,
            -1.86795497, -1.86795497],
           [ 0.95008057,  0.90177143,  1.06280196,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           [ 1.07890511,  0.80515307,  0.95008057,  ..., -1.85185194,
            -1.85185194, -1.85185194],
           ...,
           [-1.44927526, -1.36875999, -1.25603855,  ..., -0.33816412,
            -0.72463763, -0.70853460],
           [-1.80354273, -1.80354273, -1.75523353,  ..., -0.57971013,
            -0.99838966, -1.25603855],
           [-1.85185194, -1.85185194, -1.86795497,  ..., -1.28824472,
            -1.54589367, -1.72302747]],

          [[ 1.12593722,  1.12593722,  1.14092970,  ..., -1.60269880,
            -1.60269880, -1.60269880],
           [ 1.09595215,  1.05097473,  1.20089996,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           [ 1.21589243,  0.96101969,  1.09595215,  ..., -1.58770621,
            -1.58770621, -1.58770621],
           ...,
           [-1.28785622, -1.18290865, -1.04797614,  ..., -0.07346311,
            -0.47826082, -0.49325335],
           [-1.57271373, -1.54272878, -1.49775124,  ..., -0.32833579,
            -0.77811092, -1.04797614],
           [-1.58770621, -1.58770621, -1.58770621,  ..., -1.01799107,
            -1.28785622, -1.49775124]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0931 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 91, vnnlib ID: 91 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
         -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [628]; unstable size 628; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 628] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 628] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 628] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 194] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.77330256,  5.60239124,  4.83423901,  3.93323135,  5.32919025,
          5.82401514,  3.69637299,  3.85418463, -1.36576080]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
         -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.28595638,  -5.88002491, -13.45972347, -12.72046280, -11.91884041,
          -13.39254284, -13.69190216, -11.92345619, -11.07378769,  -5.33333635]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54668856]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.32222211, -1.24285710, -1.14761901,  ..., -1.32222211,
            -1.32222211, -1.21111107],
           [-1.25873005, -1.24285710, -1.16349196,  ..., -1.32222211,
            -1.32222211, -1.32222211],
           [-1.22698402, -1.22698402, -1.21111107,  ..., -1.33809519,
            -1.32222211, -1.21111107],
           ...,
           [ 0.97936511,  0.99523818,  0.99523818,  ...,  1.04285717,
             1.05873048,  1.04285717],
           [ 1.04285717,  1.04285717,  1.02698421,  ...,  1.05873048,
             1.10634947,  1.13809550],
           [ 1.04285717,  1.04285717,  1.04285717,  ...,  1.01111114,
             1.07460344,  1.07460344]],

          [[-1.56199670, -1.48148143, -1.38486302,  ..., -1.46537840,
            -1.46537840, -1.35265696],
           [-1.44927526, -1.43317223, -1.35265696,  ..., -1.46537840,
            -1.46537840, -1.46537840],
           [-1.40096617, -1.40096617, -1.38486302,  ..., -1.48148143,
            -1.46537840, -1.35265696],
           ...,
           [ 0.72463775,  0.74074084,  0.74074084,  ...,  0.86956531,
             0.88566834,  0.86956531],
           [ 0.78904998,  0.78904998,  0.77294695,  ...,  0.88566834,
             0.93397754,  0.96618366],
           [ 0.78904998,  0.78904998,  0.78904998,  ...,  0.83735919,
             0.90177143,  0.90177143]],

          [[-1.30284870, -1.22788620, -1.13793111,  ..., -1.25787115,
            -1.25787115, -1.15292358],
           [-1.21289361, -1.19790113, -1.12293863,  ..., -1.25787115,
            -1.25787115, -1.25787115],
           [-1.16791618, -1.16791618, -1.15292358,  ..., -1.27286363,
            -1.25787115, -1.15292358],
           ...,
           [ 0.84107965,  0.85607213,  0.85607213,  ...,  0.94602716,
             0.96101969,  0.94602716],
           [ 0.90104967,  0.90104967,  0.88605714,  ...,  0.96101969,
             1.00599718,  1.03598225],
           [ 0.90104967,  0.90104967,  0.90104967,  ...,  0.91604215,
             0.97601217,  0.97601217]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0532 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 92, vnnlib ID: 92 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.22173882,  -9.89736652,  -4.68373394,  -3.01329088,  -4.28179979,
          -2.86711979,  -5.53003645,  -5.05347300, -11.67127705,  -7.88633108]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [485]; unstable size 485; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 197, 1, 485] with unstable size 196 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 485] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [196]; unstable size 196; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 196] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 196] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.00222683,  5.24682617,  0.82175922, -0.20462823,  0.32712030,
          1.14493608,  1.33189201,  7.36666679,  3.64896464]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.22173882,  -9.89736652,  -4.68373394,  -3.01329088,  -4.28179979,
          -2.86711979,  -5.53003645,  -5.05347300, -11.67127705,  -7.88633108]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.09519005,  -9.82092476,  -4.60778522,  -3.10166645,  -4.19021606,
           -3.15565491,  -5.31743002,  -5.17958307, -11.51678562,  -7.83411169]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.05398846]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0067 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 93, vnnlib ID: 93 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.15195465,  -9.58116150, -14.61256504, -15.32470417, -14.07134438,
         -16.02833176, -16.91090012, -13.49322128, -10.77580357, -11.62801266]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [531]; unstable size 531; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 531] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 531] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 531] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 184] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.31977272, 3.21350431, 3.97968578, 2.74568701, 4.38296318, 5.60134363,
         1.73482752, 0.05008936, 1.12907434]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0711 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 94, vnnlib ID: 94 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.19431782, -14.89802456,  -8.13741684,  -9.92391682,  -9.58477306,
          -9.65702534, -11.04900360, -13.72198963,  -7.17759037, -14.95812511]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [488]; unstable size 488; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 144, 1, 488] with unstable size 143 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 488] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 488] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [143]; unstable size 143; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 143] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 143] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.41919041,  6.05724716,  1.13111079,  0.98754299,  0.83572423,
          2.28893948,  4.95927334, -1.78601420,  6.10188055]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.19431782, -14.89802456,  -8.13741684,  -9.92391682,  -9.58477306,
          -9.65702534, -11.04900360, -13.72198963,  -7.17759037, -14.95812511]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.19431925, -14.89802551,  -8.13741779,  -9.92391777,  -9.58477402,
           -9.65702629, -11.04900360, -13.72199059,  -7.17759132, -14.95812702],
         [ -6.19431925, -14.89802551,  -8.13741779,  -9.92391777,  -9.58477402,
           -9.65702629, -11.04900360, -13.72199059,  -7.17759132, -14.95812702]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-1.94309855, -0.95982647]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]],


         [[[-9.88888860e-01, -8.93650770e-01, -7.66666651e-01,  ...,
            -5.12698412e-01, -2.26984024e-01,  1.36031771e+00],
           [-9.73015904e-01, -9.09523785e-01, -8.14285696e-01,  ...,
            -5.76190472e-01, -4.33333218e-01,  1.53968334e-01],
           [-8.77777755e-01, -8.61904740e-01, -7.82539666e-01,  ...,
            -5.12698412e-01, -4.49206233e-01, -6.82538673e-02],
           ...,
           [-1.27460313e+00, -1.16349196e+00, -1.09999990e+00,  ...,
            -1.14761901e+00, -9.73015904e-01, -8.41268823e-02],
           [-9.73015904e-01, -9.25396800e-01, -8.93650770e-01,  ...,
            -9.25396800e-01, -7.66666651e-01, -6.82538673e-02],
           [ 8.84127021e-01, -1.31745934e-01, -1.95237994e-01,  ...,
            -2.26984024e-01, -2.11111009e-01,  1.53968334e-01]],

          [[ 1.93236828e-01,  3.54267418e-01,  4.34782714e-01,  ...,
             6.60225511e-01,  6.44122481e-01,  1.57810009e+00],
           [ 3.22061300e-01,  4.34782714e-01,  4.83091891e-01,  ...,
             6.76328599e-01,  5.79710245e-01,  4.66988832e-01],
           [ 3.38164359e-01,  4.18679655e-01,  4.50885773e-01,  ...,
             6.44122481e-01,  5.31401038e-01,  2.25442946e-01],
           ...,
           [ 1.22934580e-07,  1.12721533e-01,  1.28824592e-01,  ...,
             2.41546005e-01,  1.12721533e-01,  1.44927651e-01],
           [ 3.22062373e-02, -1.61029361e-02,  1.61031820e-02,  ...,
             1.28824592e-01,  1.61031820e-02,  1.12721533e-01],
           [ 1.30434811e+00,  1.12721533e-01,  9.66184735e-02,  ...,
             1.44927651e-01,  9.66184735e-02,  1.44927651e-01]],

          [[ 1.11094475e+00,  1.24587750e+00,  1.23088503e+00,  ...,
             1.47076499e+00,  1.33583248e+00,  1.84557760e+00],
           [ 1.23088503e+00,  1.32084000e+00,  1.29085493e+00,  ...,
             1.54572761e+00,  1.45577252e+00,  1.00599718e+00],
           [ 1.15592217e+00,  1.21589243e+00,  1.17091501e+00,  ...,
             1.47076499e+00,  1.41079497e+00,  8.11094642e-01],
           ...,
           [ 7.81109631e-01,  1.06596720e+00,  1.06596720e+00,  ...,
             1.06596720e+00,  9.46027160e-01,  8.26087117e-01],
           [ 6.91154599e-01,  8.56072128e-01,  8.56072128e-01,  ...,
             8.86057138e-01,  7.81109631e-01,  7.81109631e-01],
           [ 1.59070504e+00,  7.81109631e-01,  7.06147075e-01,  ...,
             7.21139610e-01,  6.61169589e-01,  7.06147075e-01]]]]],
       device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0892 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 95, vnnlib ID: 95 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
          -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [510]; unstable size 510; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 179, 1, 510] with unstable size 178 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 510] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 510] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [178]; unstable size 178; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 178] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 178] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.50108469,  1.35111046,  0.54155397,  1.42685032,  0.50430536,
          1.14256787,  3.30734253,  2.23950028,  2.31573248]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
          -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.24it/s]100%|██████████| 1/1 [00:00<00:00,  8.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.63824320,  -6.32747936,  -8.66589260,  -7.82633018,  -8.96054363,
           -7.87379408,  -8.57020855, -11.11642838,  -9.56104088,  -9.26757812]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.31076384]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1242 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 12.91925048828125
alpha/beta optimization time: 1.3017685413360596
initial alpha-crown bounds: tensor([[-0.44016147,  1.42102575,  0.61154699,  1.51243019,  0.57645893,
          1.21278524,  3.40189648,  2.28027153,  2.34299731]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.44016146659851074
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6258 seconds.
lower bounds for all target labels: [-0.44016098976135254, 1.4210281372070312, 0.6115450859069824, 1.512427806854248, 0.5764584541320801, 1.2127857208251953, 3.40189790725708, 2.28027081489563, 2.342996120452881]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [0]
start creating model mps for candidates: ['lay/16_0']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.41438698768616
Verifying property 0 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4018964767456055.

Properties batch 1, size 1
Remaining timeout: 198.24015593528748
Verifying property 1 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3429973125457764.

Properties batch 2, size 1
Remaining timeout: 198.13946986198425
Verifying property 2 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.280271530151367.

Properties batch 3, size 1
Remaining timeout: 198.04003500938416
Verifying property 3 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.512430191040039.

Properties batch 4, size 1
Remaining timeout: 197.9425311088562
Verifying property 4 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4210257530212402.

Properties batch 5, size 1
Remaining timeout: 197.83372163772583
Verifying property 5 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.212785243988037.

Properties batch 6, size 1
Remaining timeout: 197.73275995254517
Verifying property 6 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6115469932556152.

Properties batch 7, size 1
Remaining timeout: 197.62461853027344
Verifying property 7 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5764589309692383.

Properties batch 8, size 1
Remaining timeout: 197.51248621940613
Verifying property 8 with 1 instances.
##### Instance 95 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.44016147]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.28730583,  -6.10024929,  -9.28009796,  -8.44915771,  -9.51987553,
         -8.47933578,  -8.97727776, -11.69865417,  -9.80428314,  -9.38548374],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.44016147]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 510
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 175
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 703
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010075569152832031
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 28] 
split level 2: [/input-12, 6] 
split level 3: [/input-12, 15] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 29] 
split level 6: [/input-12, 35] 
split level 7: [/input-12, 82] 
pruning_in_iteration open status: True
ratio of positive domain = 253 / 256 = 0.98828125
pruning-in-iteration extra time: 0.0051038265228271484
Time: prepare 0.0019    bound 0.1318    transfer 0.0054    finalize 0.0018    func 0.1410    
Accumulated time: func 0.1410    prepare 0.0024    bound 0.1318    transfer 0.0054    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01434 (8), -0.00939 (8), -0.00767 (8), 
Length of domains: 3
Time: pickout 0.0008    decision 0.0285    set_bounds 0.0198    solve 0.1411    add 0.0252    
Accumulated time: pickout 0.0008    decision 0.0285    set_bounds 0.0198    solve 0.1411    add 0.0252    
Current (lb-rhs): -0.014340758323669434
3 domains visited
Cumulative time: 0.22981476783752441

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 3
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 93] [/input-12, 93] 
split level 1: [/input-12, 93] [/input-8, 1428] [/input-8, 1428] 
split level 2: [/input-8, 1428] [/input-8, 173] [/input-8, 173] 
split level 3: [/input-8, 893] [/input-8, 893] [/input-8, 893] 
split level 4: [/input-8, 894] [/input-8, 894] [/input-8, 894] 
split level 5: [/input-8, 173] [/input-8, 661] [/input-8, 661] 
split level 6: [/input-8, 672] [/input-8, 793] [/input-8, 793] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 384 / 384 = 1.0
pruning-in-iteration extra time: 4.76837158203125e-05
Time: prepare 0.0079    bound 0.0046    transfer 0.0071    finalize 0.0033    func 0.0230    
Accumulated time: func 0.1640    prepare 0.0107    bound 0.1364    transfer 0.0125    finalize 0.0051    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0227    set_bounds 0.0296    solve 0.0231    add 0.0001    
Accumulated time: pickout 0.0017    decision 0.0512    set_bounds 0.0494    solve 0.1642    add 0.0253    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
3 domains visited
Cumulative time: 0.30811238288879395

the mip building process is not terminated yet, kill it
Result: safe in 3.1835 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 96, vnnlib ID: 96 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.44995165, -10.24393463,  -3.02499723,  -5.52738094,  -3.64600706,
          -4.67218781,  -4.64619398,  -5.73077822, -10.13163280,  -9.56945515]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [457]; unstable size 457; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 457] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 457] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 457] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 223] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.06982124,  3.56651115, -3.10427284, -0.30050802, -2.24185705,
         -1.43835664, -0.57025671,  3.45370221,  3.13693810]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.44995165, -10.24393463,  -3.02499723,  -5.52738094,  -3.64600706,
          -4.67218781,  -4.64619398,  -5.73077822, -10.13163280,  -9.56945515]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -5.44995213, -10.24393463,  -3.02499771,  -5.52738142,  -3.64600754,
           -4.67218828,  -4.64619493,  -5.73077869, -10.13163280,  -9.56945324],
         [ -5.44995213, -10.24393463,  -3.02499771,  -5.52738142,  -3.64600754,
           -4.67218828,  -4.64619493,  -5.73077869, -10.13163280,  -9.56945324]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.80375719, -1.62119722,  0.88118649, -1.00018740,  0.02599335,
           1.08458376]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]],


         [[[ 0.58253974,  0.59841275,  0.64603180,  ...,  0.97936511,
             1.09047651,  1.01111114],
           [ 0.69365084,  0.63015878,  0.66190481,  ...,  1.05873048,
             1.12222254,  1.07460344],
           [ 0.90000004,  0.69365084,  0.67777783,  ...,  1.04285717,
             1.04285717,  0.99523818],
           ...,
           [-0.14761895, -0.02063482,  0.13809532,  ...,  0.42380959,
             0.50317466,  0.64603180],
           [-0.68730158, -0.36984116, -0.02063482,  ...,  0.55079371,
             0.53492069,  0.61428577],
           [-0.71904761, -0.49682540, -0.09999990,  ...,  0.69365084,
             0.61428577,  0.64603180]],

          [[ 1.07890511,  1.11111140,  1.12721443,  ...,  1.46537876,
             1.54589403,  1.48148179],
           [ 1.17552364,  1.11111140,  1.15942061,  ...,  1.52979100,
             1.57810009,  1.54589403],
           [ 1.35265732,  1.17552364,  1.15942061,  ...,  1.51368785,
             1.52979100,  1.51368785],
           ...,
           [-0.43478248, -0.30595800, -0.12882435,  ...,  0.62801939,
             0.82125610,  1.09500813],
           [-0.88566822, -0.61191624, -0.19323659,  ...,  1.01449287,
             0.96618366,  0.83735919],
           [-0.90177131, -0.70853460, -0.14492741,  ...,  1.20772982,
             0.90177143,  0.83735919]],

          [[-0.26836565, -0.37331331, -0.44827583,  ...,  0.25637197,
             0.48125952,  0.37631202],
           [-0.28335828, -0.56821585, -0.73313338,  ...,  0.25637197,
             0.33133450,  0.16641696],
           [ 0.01649191, -0.74812591, -1.24287868,  ...,  0.04647692,
            -0.04347810, -0.22338814],
           ...,
           [-1.03298354, -1.03298354, -1.15292358,  ..., -0.71814090,
            -0.95802099, -0.91304344],
           [-1.46776617, -1.31784117, -1.25787115,  ..., -1.03298354,
            -0.97301346, -0.62818587],
           [-1.31784117, -1.28785622, -1.33283365,  ..., -0.74812591,
            -0.53823084, -0.40329832]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0933 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 97, vnnlib ID: 97 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
          -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [815]; unstable size 815; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 348, 1, 815] with unstable size 347 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 815] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 815] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [347]; unstable size 347; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 347] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 347] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.99483001,  5.88476849,  0.52514815, -0.25146767,  1.10865998,
          0.87214196,  1.88426161,  2.11473465,  4.06170082]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
          -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.98it/s]100%|██████████| 1/1 [00:00<00:00,  7.97it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.93084669, -12.23502636,  -4.64208126,  -5.98504353,  -4.79462719,
           -6.75994825,  -6.29002666,  -7.30920172,  -8.82366848, -10.70865059]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.15254593]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1283 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 18.19915199279785
alpha/beta optimization time: 1.334080696105957
initial alpha-crown bounds: tensor([[ 1.10888195,  6.06384850,  0.59163523, -0.20346993,  1.20185590,
          0.91255403,  1.97026157,  2.29743361,  4.25615025]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.20346993207931519
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6775 seconds.
lower bounds for all target labels: [1.1088793277740479, 6.063847064971924, 0.5916341543197632, -0.20347052812576294, 1.2018567323684692, 0.9125546216964722, 1.970261812210083, 2.2974367141723633, 4.25615119934082]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [3]
start creating model mps for candidates: ['lay/16_3']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 145055 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.37874579429626
Verifying property 0 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.063848495483398.

Properties batch 1, size 1
Remaining timeout: 198.11173391342163
Verifying property 1 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.256150245666504.

Properties batch 2, size 1
Remaining timeout: 198.0068383216858
Verifying property 2 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.297433614730835.

Properties batch 3, size 1
Remaining timeout: 197.91797494888306
Verifying property 3 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.970261573791504.

Properties batch 4, size 1
Remaining timeout: 197.82963347434998
Verifying property 4 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2018558979034424.

Properties batch 5, size 1
Remaining timeout: 197.7423050403595
Verifying property 5 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.108881950378418.

Properties batch 6, size 1
Remaining timeout: 197.65475940704346
Verifying property 6 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9125540256500244.

Properties batch 7, size 1
Remaining timeout: 197.56724548339844
Verifying property 7 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5916352272033691.

Properties batch 8, size 1
Remaining timeout: 197.47831797599792
Verifying property 8 with 1 instances.
##### Instance 97 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.20346993]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.42443323, -12.86629391,  -5.06406689,  -6.59175348,  -5.65273857,
         -7.37562561,  -6.97437239,  -7.97660685,  -9.45366764, -11.25179768],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.20346993]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 815
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 334
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 1167
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0006320476531982422
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 32] 
split level 3: [/input-12, 33] 
split level 4: [/input-8, 289] 
split level 5: [/input-8, 290] 
split level 6: [/input-8, 1748] 
split level 7: [/input-8, 429] 
pruning_in_iteration open status: True
ratio of positive domain = 204 / 256 = 0.796875
pruning-in-iteration extra time: 0.005655527114868164
Time: prepare 0.0032    bound 0.1478    transfer 0.0045    finalize 0.0023    func 0.1579    
Accumulated time: func 0.1579    prepare 0.0037    bound 0.1478    transfer 0.0045    finalize 0.0023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09788 (8), -0.09690 (8), -0.09450 (8), -0.09399 (8), -0.09351 (8), -0.09290 (8), -0.09260 (8), -0.09195 (8), -0.09165 (8), -0.09038 (8), -0.08952 (8), -0.08903 (8), -0.08857 (8), -0.08764 (8), -0.08671 (8), -0.08544 (8), -0.08108 (8), -0.08080 (8), -0.08011 (8), -0.07984 (8), 
Length of domains: 52
Time: pickout 0.0006    decision 0.0272    set_bounds 0.0206    solve 0.1580    add 0.0695    
Accumulated time: pickout 0.0006    decision 0.0272    set_bounds 0.0206    solve 0.1580    add 0.0695    
Current (lb-rhs): -0.09788411855697632
52 domains visited
Cumulative time: 0.28822779655456543

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 52
splitting decisions: 
split level 0: [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] [/input-8, 457] 
split level 1: [/input-8, 421] [/input-8, 421] [/input-8, 1749] [/input-8, 421] [/input-8, 116] [/input-8, 421] [/input-8, 421] [/input-8, 421] [/input-8, 1749] [/input-8, 421] 
pruning_in_iteration open status: True
ratio of positive domain = 65 / 208 = 0.3125
pruning-in-iteration extra time: 0.0050373077392578125
Time: prepare 0.0042    bound 0.1658    transfer 0.0053    finalize 0.0020    func 0.1772    
Accumulated time: func 0.3351    prepare 0.0080    bound 0.3136    transfer 0.0098    finalize 0.0043    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09320 (10), -0.09264 (10), -0.08977 (10), -0.08921 (10), -0.08904 (10), -0.08871 (10), -0.08824 (10), -0.08805 (10), -0.08771 (10), -0.08764 (10), -0.08641 (10), -0.08561 (10), -0.08533 (10), -0.08480 (10), -0.08463 (10), -0.08432 (10), -0.08427 (10), -0.08410 (10), -0.08372 (10), -0.08312 (10), 
Length of domains: 143
Time: pickout 0.0077    decision 0.0219    set_bounds 0.0059    solve 0.1773    add 0.0641    
Accumulated time: pickout 0.0083    decision 0.0491    set_bounds 0.0265    solve 0.3353    add 0.1335    
Current (lb-rhs): -0.09319859743118286
195 domains visited
Cumulative time: 0.5662798881530762

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 143
splitting decisions: 
split level 0: [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] 
pruning_in_iteration open status: False
ratio of positive domain = 22 / 286 = 0.07692307692307687
pruning-in-iteration extra time: 9.179115295410156e-05
Time: prepare 0.0058    bound 0.1100    transfer 0.0051    finalize 0.0022    func 0.1231    
Accumulated time: func 0.4582    prepare 0.0140    bound 0.4235    transfer 0.0149    finalize 0.0064    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09082 (11), -0.09038 (11), -0.08738 (11), -0.08693 (11), -0.08668 (11), -0.08661 (11), -0.08600 (11), -0.08578 (11), -0.08568 (11), -0.08555 (11), -0.08384 (11), -0.08317 (11), -0.08282 (11), -0.08258 (11), -0.08237 (11), -0.08210 (11), -0.08207 (11), -0.08172 (11), -0.08171 (11), -0.08149 (11), 
Length of domains: 264
Time: pickout 0.0029    decision 0.0178    set_bounds 0.0063    solve 0.1232    add 0.0199    
Accumulated time: pickout 0.0112    decision 0.0669    set_bounds 0.0328    solve 0.4585    add 0.1534    
Current (lb-rhs): -0.0908239483833313
459 domains visited
Cumulative time: 0.7372109889984131

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 264
splitting decisions: 
split level 0: [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 1003] [/input-8, 1749] [/input-8, 843] 
pruning_in_iteration open status: False
ratio of positive domain = 10 / 528 = 0.018939393939393923
pruning-in-iteration extra time: 7.82012939453125e-05
Time: prepare 0.0103    bound 0.1109    transfer 0.0181    finalize 0.0038    func 0.1431    
Accumulated time: func 0.6014    prepare 0.0245    bound 0.5344    transfer 0.0330    finalize 0.0102    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08876 (12), -0.08835 (12), -0.08488 (12), -0.08467 (12), -0.08448 (12), -0.08447 (12), -0.08390 (12), -0.08383 (12), -0.08355 (12), -0.08350 (12), -0.08195 (12), -0.08095 (12), -0.08081 (12), -0.08008 (12), -0.08007 (12), -0.08000 (12), -0.07977 (12), -0.07963 (12), -0.07962 (12), -0.07902 (12), 
Length of domains: 518
Time: pickout 0.0060    decision 0.0306    set_bounds 0.0126    solve 0.1438    add 0.0376    
Accumulated time: pickout 0.0172    decision 0.0975    set_bounds 0.0454    solve 0.6023    add 0.1910    
Current (lb-rhs): -0.08875572681427002
977 domains visited
Cumulative time: 0.9693562984466553

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 518
splitting decisions: 
split level 0: [/input-8, 1490] [/input-8, 843] [/input-8, 1490] [/input-8, 843] [/input-8, 1490] [/input-8, 843] [/input-8, 1490] [/input-8, 843] [/input-8, 1490] [/input-8, 1003] 
pruning_in_iteration open status: False
ratio of positive domain = 10 / 1036 = 0.009652509652509633
pruning-in-iteration extra time: 8.225440979003906e-05
Time: prepare 0.0201    bound 0.1175    transfer 0.0272    finalize 0.0088    func 0.1737    
Accumulated time: func 0.7750    prepare 0.0448    bound 0.6519    transfer 0.0602    finalize 0.0190    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08681 (13), -0.08642 (13), -0.08290 (13), -0.08273 (13), -0.08252 (13), -0.08250 (13), -0.08222 (13), -0.08212 (13), -0.08190 (13), -0.08190 (13), -0.08151 (13), -0.08076 (13), -0.07960 (13), -0.07881 (13), -0.07875 (13), -0.07866 (13), -0.07863 (13), -0.07841 (13), -0.07835 (13), -0.07801 (13), 
Length of domains: 1026
Time: pickout 0.0118    decision 0.0467    set_bounds 0.0244    solve 0.1739    add 0.1118    
Accumulated time: pickout 0.0290    decision 0.1442    set_bounds 0.0698    solve 0.7762    add 0.3028    
Current (lb-rhs): -0.08681359887123108
2003 domains visited
Cumulative time: 1.346635103225708

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1026
splitting decisions: 
split level 0: [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] [/input-8, 1859] 
pruning_in_iteration open status: False
ratio of positive domain = 24 / 2052 = 0.011695906432748537
pruning-in-iteration extra time: 6.246566772460938e-05
Time: prepare 0.0392    bound 0.1370    transfer 0.1083    finalize 0.0151    func 0.2998    
Accumulated time: func 1.0748    prepare 0.0842    bound 0.7889    transfer 0.1684    finalize 0.0341    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08402 (14), -0.08363 (14), -0.08208 (14), -0.08169 (14), -0.08009 (14), -0.07994 (14), -0.07969 (14), -0.07968 (14), -0.07942 (14), -0.07929 (14), -0.07908 (14), -0.07908 (14), -0.07869 (14), -0.07850 (14), -0.07810 (14), -0.07801 (14), -0.07779 (14), -0.07772 (14), -0.07739 (14), -0.07720 (14), 
Length of domains: 2027
Time: pickout 0.0422    decision 0.0737    set_bounds 0.0471    solve 0.3001    add 0.1228    
Accumulated time: pickout 0.0712    decision 0.2179    set_bounds 0.1169    solve 1.0763    add 0.4257    
Current (lb-rhs): -0.08401638269424438
4030 domains visited
Cumulative time: 1.9412710666656494

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 2027
splitting decisions: 
split level 0: [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] 
pruning_in_iteration open status: False
ratio of positive domain = 92 / 4054 = 0.022693635915145505
pruning-in-iteration extra time: 6.341934204101562e-05
Time: prepare 0.0940    bound 0.2217    transfer 0.0387    finalize 0.0344    func 0.3892    
Accumulated time: func 1.4639    prepare 0.1785    bound 1.0106    transfer 0.2071    finalize 0.0686    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08369 (15), -0.08330 (15), -0.08176 (15), -0.08136 (15), -0.07978 (15), -0.07938 (15), -0.07934 (15), -0.07895 (15), -0.07873 (15), -0.07835 (15), -0.07778 (15), -0.07741 (15), -0.07739 (15), -0.07725 (15), -0.07707 (15), -0.07703 (15), -0.07683 (15), -0.07646 (15), -0.07640 (15), -0.07636 (15), 
Length of domains: 3958
Time: pickout 0.0566    decision 0.1367    set_bounds 0.3014    solve 0.3903    add 0.1526    
Accumulated time: pickout 0.1278    decision 0.3545    set_bounds 0.4182    solve 1.4666    add 0.5783    
Current (lb-rhs): -0.0836935043334961
7988 domains visited
Cumulative time: 2.99577260017395

BaB round 8
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0025
batch: 3958
splitting decisions: 
split level 0: [/input-8, 995] [/input, 330] [/input-8, 995] [/input, 330] [/input-8, 473] [/input, 330] [/input-8, 473] [/input, 330] [/input-8, 995] [/input, 330] 
pruning_in_iteration open status: False
ratio of positive domain = 474 / 7916 = 0.05987872662961091
pruning-in-iteration extra time: 6.461143493652344e-05
Time: prepare 0.1791    bound 0.3638    transfer 0.0320    finalize 0.0675    func 0.6436    
Accumulated time: func 2.1075    prepare 0.3579    bound 1.3744    transfer 0.2391    finalize 0.1361    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07965 (16), -0.07955 (16), -0.07926 (16), -0.07915 (16), -0.07773 (16), -0.07757 (16), -0.07732 (16), -0.07718 (16), -0.07644 (16), -0.07606 (16), -0.07590 (16), -0.07573 (16), -0.07562 (16), -0.07559 (16), -0.07552 (16), -0.07551 (16), -0.07534 (16), -0.07533 (16), 
Length of domains: 7408
Time: pickout 0.0815    decision 0.2424    set_bounds 0.3270    solve 0.6452    add 0.1829    
Accumulated time: pickout 0.2094    decision 0.5969    set_bounds 0.7452    solve 2.1118    add 0.7612    
Current (lb-rhs): -0.08148166537284851
15396 domains visited
Cumulative time: 4.495202541351318

BaB round 9
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 4096
splitting decisions: 
split level 0: [/input-8, 617] [/input-8, 116] [/input-8, 617] [/input-8, 116] [/input-8, 617] [/input-8, 617] [/input-8, 617] [/input-8, 617] [/input-8, 995] [/input-8, 617] 
pruning_in_iteration open status: False
ratio of positive domain = 742 / 8192 = 0.090576171875
pruning-in-iteration extra time: 0.00010204315185546875
Time: prepare 0.2022    bound 0.3700    transfer 0.0377    finalize 0.0624    func 0.6730    
Accumulated time: func 2.7806    prepare 0.5603    bound 1.7444    transfer 0.2768    finalize 0.1985    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07955 (16), -0.07915 (16), -0.07817 (17), -0.07778 (17), -0.07757 (16), -0.07718 (16), -0.07615 (17), -0.07590 (16), -0.07576 (17), -0.07562 (16), -0.07559 (16), -0.07552 (16), -0.07551 (16), -0.07533 (16), -0.07519 (16), -0.07503 (16), -0.07491 (17), -0.07479 (16), 
Length of domains: 10721
Time: pickout 0.0702    decision 0.2406    set_bounds 0.3139    solve 0.6748    add 0.2118    
Accumulated time: pickout 0.2796    decision 0.8375    set_bounds 1.0591    solve 2.7866    add 0.9730    
Current (lb-rhs): -0.08148166537284851
22805 domains visited
current_vram/total_varm: 12.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.031301498413086

BaB round 10
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 8192
splitting decisions: 
split level 0: [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input, 620] [/input-8, 617] [/input, 620] 
pruning_in_iteration open status: False
ratio of positive domain = 2110 / 16384 = 0.1287841796875
pruning-in-iteration extra time: 0.00012636184692382812
Time: prepare 0.4282    bound 0.6893    transfer 0.0815    finalize 0.1398    func 1.3400    
Accumulated time: func 4.1206    prepare 0.9888    bound 2.4338    transfer 0.3583    finalize 0.3382    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07955 (16), -0.07915 (16), -0.07757 (16), -0.07718 (16), -0.07590 (16), -0.07568 (18), -0.07562 (16), -0.07559 (16), -0.07552 (16), -0.07551 (16), -0.07533 (16), -0.07529 (18), -0.07519 (16), -0.07503 (16), -0.07479 (16), -0.07441 (16), -0.07434 (16), -0.07399 (16), 
Length of domains: 16752
Time: pickout 0.1479    decision 0.6544    set_bounds 0.5412    solve 1.3438    add 0.2265    
Accumulated time: pickout 0.4275    decision 1.4919    set_bounds 1.6003    solve 4.1303    add 1.1994    
Current (lb-rhs): -0.08148166537284851
37028 domains visited
current_vram/total_varm: 19.2GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.994241714477539

BaB round 11
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts: total 661 constraints, 31125 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2755
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 617] [/input-8, 477] [/input-8, 617] [/input-8, 477] [/input-8, 617] [/input-8, 477] [/input-8, 617] [/input-8, 477] [/input-8, 617] [/input-8, 116] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07805469632148743
10 lb beta sum: 74.4535903930664, worst -0.02458733320236206
pruning_in_iteration open status: True
ratio of positive domain = 32567 / 32768 = 0.993865966796875
pruning-in-iteration extra time: 0.005605936050415039
Time: prepare 0.8685    bound 3.6460    transfer 0.1623    finalize 0.2468    func 5.1350    
Accumulated time: func 9.2556    prepare 1.8578    bound 6.0798    transfer 0.5206    finalize 0.5851    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08148 (16), -0.08109 (16), -0.07757 (16), -0.07718 (16), -0.07590 (16), -0.07552 (16), -0.07533 (16), -0.07441 (16), -0.07434 (16), -0.07321 (16), -0.07244 (16), -0.07199 (16), -0.07166 (16), -0.07162 (16), -0.07145 (16), -0.07085 (16), -0.07078 (16), -0.06967 (16), -0.06956 (16), -0.06950 (16), 
Length of domains: 569
Time: pickout 0.2701    decision 1.9451    set_bounds 1.1304    solve 5.4185    add 0.0872    
Accumulated time: pickout 0.6976    decision 3.4370    set_bounds 2.7307    solve 9.5489    add 1.2866    
Current (lb-rhs): -0.08148166537284851
37229 domains visited
Cumulative time: 18.305389881134033

BaB round 12
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts: total 1277 constraints, 53626 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4685
batch: 569
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 477] [/input-8, 843] [/input-8, 116] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08004584908485413
10 lb beta sum: 20.084213256835938, worst -0.006966531276702881

all verified at 13th iter
pruning_in_iteration open status: True
ratio of positive domain = 1138 / 1138 = 1.0
pruning-in-iteration extra time: 0.0018756389617919922
Time: prepare 0.0284    bound 0.2815    transfer 0.0088    finalize 0.0088    func 0.3346    
Accumulated time: func 9.5902    prepare 1.8864    bound 6.3613    transfer 0.5294    finalize 0.5939    
all_split False
Length of domains: 0
Time: pickout 0.0203    decision 0.0414    set_bounds 0.0230    solve 0.3349    add 0.0001    
Accumulated time: pickout 0.7179    decision 3.4784    set_bounds 2.7537    solve 9.8838    add 1.2867    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
37229 domains visited
Cumulative time: 19.200031042099

found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=97_spec=3_30258211.log
found process for pidx=3
kill process for pidx=3
Result: safe in 22.0904 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 98, vnnlib ID: 98 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.97282171, -9.59043694, -6.44806576, -4.78952980, -4.97297287,
         -4.42642069, -6.68016386, -6.68106413, -7.70960140, -9.47742367]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [664]; unstable size 664; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 664] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 664] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 664] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 239] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.04075253,  2.86903501,  0.75436532,  0.06829166, -0.61994445,
          1.08730888,  0.85343862,  1.25660872,  3.10610676]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.97282171, -9.59043694, -6.44806576, -4.78952980, -4.97297287,
         -4.42642069, -6.68016386, -6.68106413, -7.70960140, -9.47742367]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.20676279, -9.77461338, -6.61068249, -5.31555939, -4.99939442,
          -5.00283194, -7.04889584, -6.94918585, -7.99256420, -9.84183598]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00343752]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0079 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0901 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 99, vnnlib ID: 99 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.23901796, -6.11622238, -0.89747995, -2.37960625, -1.48292530,
         -3.00284576, -1.44222963, -3.95331812, -5.41394901, -6.03653765]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [445]; unstable size 445; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 180, 1, 445] with unstable size 179 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 445] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 445] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [179]; unstable size 179; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 179] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 179] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.11019564,  3.76489162, -1.18024540,  0.25222445, -0.68485975,
          0.81499958,  1.69955897,  2.79094553,  3.59716296]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.23901796, -6.11622238, -0.89747995, -2.37960625, -1.48292530,
         -3.00284576, -1.44222963, -3.95331812, -5.41394901, -6.03653765]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.23901796, -6.11622334, -0.89747965, -2.37960601, -1.48292530,
          -3.00284576, -1.44222927, -3.95331812, -5.41394997, -6.03653717],
         [-4.23901796, -6.11622334, -0.89747965, -2.37960601, -1.48292530,
          -3.00284576, -1.44222927, -3.95331812, -5.41394997, -6.03653717]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.54474962,  0.04069602]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.05873025,  0.34444451,  0.05873025,  ..., -1.52857137,
            -1.48095226, -1.48095226],
           [ 0.04285724, -0.30634910, -0.44920623,  ..., -1.54444432,
            -1.56031740, -1.52857137],
           [-0.25873005, -0.63968253, -0.94126981,  ..., -1.54444432,
            -1.56031740, -1.54444432],
           ...,
           [-1.92539680, -1.92539680, -1.95714283,  ..., -1.73492062,
            -1.73492062, -1.75079370],
           [-1.90952384, -1.95714283, -1.96507931,  ..., -1.73492062,
            -1.75079370, -1.76666665],
           [-1.89365077, -1.90952384, -1.92539680,  ..., -1.76666665,
            -1.78253973, -1.78253973]],

          [[-0.16103047,  0.11272153, -0.20933965,  ..., -1.41706920,
            -1.36875999, -1.36875999],
           [-0.25764883, -0.56360704, -0.64412236,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           [-0.51529789, -0.80515295, -1.03059578,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           ...,
           [-1.88405800, -1.90016103, -1.91626418,  ..., -1.88405800,
            -1.90016103, -1.88405800],
           [-1.88405800, -1.93236721, -1.94847023,  ..., -1.90016103,
            -1.90016103, -1.90016103],
           [-1.91626418, -1.94847023, -1.95652175,  ..., -1.88405800,
            -1.91626418, -1.91626418]],

          [[-0.92803597, -0.65817088, -0.97301346,  ..., -1.68515754,
            -1.64767623, -1.64767623],
           [-1.00299859, -1.27286363, -1.34782624,  ..., -1.69265378,
            -1.68515754, -1.68515754],
           [-1.25787115, -1.48275876, -1.61769128,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.68515754, -1.68515754, -1.69265378,  ..., -1.64767623,
            -1.66266882, -1.67766130],
           [-1.68515754, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.67766130, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.66266882,
            -1.67766130, -1.68515754]]],


         [[[ 0.05873025,  0.34444451,  0.05873025,  ..., -1.52857137,
            -1.48095226, -1.48095226],
           [ 0.04285724, -0.30634910, -0.44920623,  ..., -1.54444432,
            -1.56031740, -1.52857137],
           [-0.25873005, -0.63968253, -0.94126981,  ..., -1.54444432,
            -1.56031740, -1.54444432],
           ...,
           [-1.92539680, -1.92539680, -1.95714283,  ..., -1.73492062,
            -1.73492062, -1.75079370],
           [-1.90952384, -1.95714283, -1.96507931,  ..., -1.73492062,
            -1.75079370, -1.76666665],
           [-1.89365077, -1.90952384, -1.92539680,  ..., -1.76666665,
            -1.78253973, -1.78253973]],

          [[-0.16103047,  0.11272153, -0.20933965,  ..., -1.41706920,
            -1.36875999, -1.36875999],
           [-0.25764883, -0.56360704, -0.64412236,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           [-0.51529789, -0.80515295, -1.03059578,  ..., -1.43317223,
            -1.44927526, -1.41706920],
           ...,
           [-1.88405800, -1.90016103, -1.91626418,  ..., -1.88405800,
            -1.90016103, -1.88405800],
           [-1.88405800, -1.93236721, -1.94847023,  ..., -1.90016103,
            -1.90016103, -1.90016103],
           [-1.91626418, -1.94847023, -1.95652175,  ..., -1.88405800,
            -1.91626418, -1.91626418]],

          [[-0.92803597, -0.65817088, -0.97301346,  ..., -1.68515754,
            -1.64767623, -1.64767623],
           [-1.00299859, -1.27286363, -1.34782624,  ..., -1.69265378,
            -1.68515754, -1.68515754],
           [-1.25787115, -1.48275876, -1.61769128,  ..., -1.69265378,
            -1.69265378, -1.68515754],
           ...,
           [-1.68515754, -1.68515754, -1.69265378,  ..., -1.64767623,
            -1.66266882, -1.67766130],
           [-1.68515754, -1.69265378, -1.69265378,  ..., -1.66266882,
            -1.67766130, -1.67766130],
           [-1.69265378, -1.68515754, -1.68515754,  ..., -1.66266882,
            -1.67766130, -1.68515754]]]]], device='cuda:0') torch.Size([1, 2, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0823 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 100, vnnlib ID: 100 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.53976345, -13.16501808,  -7.78616238,  -7.53348351,  -7.22956753,
          -7.13146210,  -9.51203918,  -8.66154480, -12.44145298, -11.93621635]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [583]; unstable size 583; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 279, 1, 583] with unstable size 278 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 583] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 583] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [278]; unstable size 278; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 278] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 278] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.95121819,  2.65529919, -1.12760568, -1.74681807, -0.90773940,
          0.75648606, -0.87717199,  2.33981323,  1.64043427]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.53976345, -13.16501808,  -7.78616238,  -7.53348351,  -7.22956753,
          -7.13146210,  -9.51203918,  -8.66154480, -12.44145298, -11.93621635]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.53976154, -13.16501617,  -7.78616142,  -7.53348160,  -7.22956657,
           -7.13146067,  -9.51203918,  -8.66154480, -12.44145107, -11.93621540],
         [-10.53976154, -13.16501617,  -7.78616142,  -7.53348160,  -7.22956657,
           -7.13146067,  -9.51203918,  -8.66154480, -12.44145107, -11.93621540]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.25267982, -0.30391502, -0.40202093,  1.12806320]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]],


         [[[ 0.20158738,  0.32857150, -0.76666665,  ...,  0.31269848,
             0.53492069,  1.04285717],
           [ 0.26507944,  0.37619054, -0.73492062,  ...,  0.97936511,
             0.77301592,  0.91587305],
           [ 0.29682547,  0.36031753, -0.70317459,  ...,  1.16984153,
             1.15396857,  1.05873048],
           ...,
           [ 0.16984135,  0.15396833,  0.04285724,  ...,  0.32857150,
             0.53492069,  0.55079371],
           [ 0.15396833,  0.13809532,  0.01111121,  ...,  0.39206356,
             0.50317466,  0.51904768],
           [ 0.07460327,  0.05873025, -0.06825387,  ...,  0.45555562,
             0.51904768,  0.53492069]],

          [[ 0.08051541,  0.30595824, -0.83735907,  ...,  0.67632860,
             0.74074084,  0.95008057],
           [ 0.12882459,  0.32206130, -0.83735907,  ...,  0.98228669,
             0.70853472,  0.82125610],
           [ 0.12882459,  0.30595824, -0.83735907,  ...,  1.12721443,
             1.09500813,  1.03059590],
           ...,
           [ 0.01610318, -0.03220600, -0.56360704,  ..., -0.19323659,
            -0.09661824, -0.06441211],
           [ 0.01610318, -0.04830906, -0.59581316,  ..., -0.17713353,
            -0.14492741, -0.11272129],
           [-0.04830906, -0.09661824, -0.66022539,  ..., -0.14492741,
            -0.09661824, -0.06441211]],

          [[-0.17841063,  0.03148442, -0.92803597,  ...,  0.25637197,
             0.43628204,  0.96101969],
           [-0.13343313,  0.04647692, -0.92803597,  ...,  1.00599718,
             0.72113961,  0.78110963],
           [-0.11844061,  0.04647692, -0.97301346,  ...,  1.06596720,
             1.06596720,  0.99100471],
           ...,
           [ 0.01649191, -0.01349309, -0.67316341,  ...,  0.03148442,
             0.10644694,  0.18140946],
           [ 0.01649191, -0.02848560, -0.70314842,  ...,  0.00149941,
            -0.01349309,  0.07646193],
           [-0.02848560, -0.04347810, -0.77811092,  ...,  0.03148442,
             0.07646193,  0.15142445]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0801 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 101, vnnlib ID: 101 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.08083820, -14.74164295, -15.41894627, -16.35571480, -15.69711781,
         -17.93531990, -17.23896980, -18.14307785, -10.66590214, -14.52196217]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 178, 1, 682] with unstable size 177 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 682] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [177]; unstable size 177; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 177] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 177] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.62306988,  3.08737016,  3.49406075,  4.42359018,  3.72971249,
          5.79383612,  5.18702269,  5.91974592,  2.72902703]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.08083820, -14.74164295, -15.41894627, -16.35571480, -15.69711781,
         -17.93531990, -17.23896980, -18.14307785, -10.66590214, -14.52196217]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.87045002, -14.67684269, -15.32469082, -16.33616829, -15.64569569,
          -17.88966370, -17.18202591, -17.98422050, -10.99369526, -14.46965504]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12324524]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0059 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0779 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 102, vnnlib ID: 102 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.08662319, -10.92296124,  -4.84066486,  -5.63669729,  -5.64046621,
          -5.76534128,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [704]; unstable size 704; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 251, 1, 704] with unstable size 250 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 704] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 704] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [250]; unstable size 250; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 250] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 250] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.20884323,  3.62872171, -1.65299869, -0.98555779, -1.01563966,
          0.82072139,  0.33104634,  1.38739479,  2.34938645]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.08662319, -10.92296124,  -4.84066486,  -5.63669729,  -5.64046621,
          -5.76534128,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.08662319, -10.92296028,  -4.84066582,  -5.63669777,  -5.64046764,
           -5.76534081,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794],
         [ -7.08662319, -10.92296028,  -4.84066582,  -5.63669777,  -5.64046764,
           -5.76534081,  -7.64309168,  -7.17506170,  -8.36095524,  -9.82923794]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.79980183, -0.00376987,  0.12487316]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]],


         [[[ 1.05873048,  1.48730183,  1.43968284,  ...,  1.12222254,
             0.82063496,  1.02698421],
           [ 1.29682565,  1.50317490,  1.55079389,  ...,  0.70952386,
             1.01111114,  1.37619078],
           [ 1.24920666,  1.50317490,  1.63015902,  ...,  0.58253974,
             1.04285717,  1.15396857],
           ...,
           [ 0.47142863,  0.64603180,  0.37619054,  ..., -0.35396814,
            -0.43333322, -0.44920623],
           [ 0.23333341,  0.42380959,  0.28095245,  ..., -0.48095238,
            -0.44920623, -0.52857143],
           [ 0.15396833,  0.32857150,  0.21746039,  ..., -0.49682540,
            -0.44920623, -0.54444444]],

          [[ 1.06280196,  1.51368785,  1.48148179,  ...,  1.07890511,
             0.78904998,  0.99838978],
           [ 1.32045114,  1.52979100,  1.57810009,  ...,  0.66022551,
             0.98228669,  1.35265732],
           [ 1.27214205,  1.52979100,  1.67471850,  ...,  0.54750413,
             0.99838978,  1.11111140],
           ...,
           [ 0.43478271,  0.61191636,  0.32206130,  ..., -0.48309177,
            -0.49919480, -0.49919480],
           [ 0.20933989,  0.40257660,  0.24154601,  ..., -0.56360704,
            -0.51529789, -0.57971013],
           [ 0.11272153,  0.30595824,  0.17713377,  ..., -0.56360704,
            -0.51529789, -0.61191624]],

          [[ 0.99100471,  1.36581755,  1.29085493,  ...,  0.76611710,
             0.54122955,  0.73613209],
           [ 1.20089996,  1.35082495,  1.36581755,  ...,  0.37631202,
             0.75112462,  1.11094475],
           [ 1.12593722,  1.33583248,  1.41079497,  ...,  0.24137947,
             0.79610211,  0.91604215],
           ...,
           [ 0.07646193,  0.25637197,  0.06146942,  ..., -0.52323836,
            -0.61319339, -0.61319339],
           [-0.16341813,  0.01649191, -0.07346311,  ..., -0.62818587,
            -0.59820086, -0.64317840],
           [-0.25337315, -0.11844061, -0.16341813,  ..., -0.62818587,
            -0.58320838, -0.65817088]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0829 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 103, vnnlib ID: 103 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
          -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [682]; unstable size 682; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 257, 1, 682] with unstable size 256 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 682] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 682] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [256]; unstable size 256; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 256] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 256] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.48958635,  6.85282993, -0.38445073,  3.19247007,  3.10144281,
          1.89875460,  3.66963410,  5.16848564,  6.31332350]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
          -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.95it/s]100%|██████████| 1/1 [00:00<00:00,  7.94it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.09854698, -12.89455128,  -4.96760273,  -8.65318966,  -4.84691048,
           -8.76898766,  -7.63000536,  -9.29538918, -11.06066799, -12.34660625]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.12069225]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1287 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 32.900123596191406
alpha/beta optimization time: 1.311028242111206
initial alpha-crown bounds: tensor([[ 2.57451034,  6.94005299, -0.32821050,  3.23324537,  3.14501977,
          1.95601797,  3.71171618,  5.26033783,  6.40743494]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.3282105028629303
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6244 seconds.
lower bounds for all target labels: [2.574510335922241, 6.9400529861450195, -0.3282105028629303, 3.233245372772217, 3.1450185775756836, 1.9560163021087646, 3.7117159366607666, 5.260337829589844, 6.407434940338135]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 145766 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.40476942062378
Verifying property 0 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.9400529861450195.

Properties batch 1, size 1
Remaining timeout: 198.185800075531
Verifying property 1 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.407434940338135.

Properties batch 2, size 1
Remaining timeout: 198.07345819473267
Verifying property 2 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.260337829589844.

Properties batch 3, size 1
Remaining timeout: 197.96191930770874
Verifying property 3 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.7117161750793457.

Properties batch 4, size 1
Remaining timeout: 197.8502790927887
Verifying property 4 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.233245372772217.

Properties batch 5, size 1
Remaining timeout: 197.739488363266
Verifying property 5 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.145019769668579.

Properties batch 6, size 1
Remaining timeout: 197.6277723312378
Verifying property 6 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.574510335922241.

Properties batch 7, size 1
Remaining timeout: 197.51416397094727
Verifying property 7 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9560179710388184.

Properties batch 8, size 1
Remaining timeout: 197.39254522323608
Verifying property 8 with 1 instances.
##### Instance 103 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.32821050]], device='cuda:0') need to verify.
Model prediction is: tensor([ -7.82976532, -12.37597370,  -4.80148506,  -8.27321815,  -4.32335472,
         -8.39564705,  -7.14005709,  -8.87581921, -10.65055561, -11.85609341],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.32821050]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 682
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 253
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 949
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009546279907226562
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 44] 
split level 5: [/input-12, 51] 
split level 6: [/input-8, 1892] 
split level 7: [/input-8, 1364] 
pruning_in_iteration open status: True
ratio of positive domain = 237 / 256 = 0.92578125
pruning-in-iteration extra time: 0.004992246627807617
Time: prepare 0.0032    bound 0.1594    transfer 0.0049    finalize 0.0023    func 0.1698    
Accumulated time: func 0.1698    prepare 0.0036    bound 0.1594    transfer 0.0049    finalize 0.0023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11384 (8), -0.11067 (8), -0.09425 (8), -0.09116 (8), -0.07239 (8), -0.07087 (8), -0.06181 (8), -0.05896 (8), -0.05566 (8), -0.05411 (8), -0.04707 (8), -0.04411 (8), -0.04410 (8), -0.04334 (8), -0.03042 (8), -0.02961 (8), -0.00810 (8), -0.00784 (8), -0.00381 (8), 
Length of domains: 19
Time: pickout 0.0006    decision 0.0272    set_bounds 0.0219    solve 0.1699    add 0.0472    
Accumulated time: pickout 0.0006    decision 0.0272    set_bounds 0.0219    solve 0.1699    add 0.0472    
Current (lb-rhs): -0.11384204030036926
19 domains visited
Cumulative time: 0.28002095222473145

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 19
splitting decisions: 
split level 0: [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-12, 72] [/input-8, 542] [/input-12, 72] [/input-12, 72] 
split level 1: [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1363] [/input-8, 1891] [/input-8, 1363] [/input-8, 1891] [/input-8, 1891] [/input-8, 1363] [/input-8, 1363] 
split level 2: [/input-8, 1891] [/input-8, 1886] [/input-8, 1891] [/input-8, 1886] [/input-8, 539] [/input-8, 1886] [/input-8, 1373] [/input-8, 1894] [/input-8, 1886] [/input-8, 1886] 
split level 3: [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1373] [/input-8, 1381] [/input-8, 1893] [/input-8, 1373] [/input-8, 1373] 
pruning_in_iteration open status: True
ratio of positive domain = 192 / 304 = 0.631578947368421
pruning-in-iteration extra time: 0.005059242248535156
Time: prepare 0.0061    bound 0.1887    transfer 0.0063    finalize 0.0021    func 0.2033    
Accumulated time: func 0.3731    prepare 0.0099    bound 0.3481    transfer 0.0112    finalize 0.0044    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09104 (12), -0.08892 (12), -0.08721 (12), -0.08533 (12), -0.08341 (12), -0.08092 (12), -0.08065 (12), -0.07998 (12), -0.07850 (12), -0.07690 (12), -0.07381 (12), -0.07231 (12), -0.07197 (12), -0.07114 (12), -0.07057 (12), -0.06981 (12), -0.06811 (12), -0.06606 (12), -0.06539 (12), -0.06422 (12), 
Length of domains: 112
Time: pickout 0.0011    decision 0.0266    set_bounds 0.0148    solve 0.2034    add 0.0076    
Accumulated time: pickout 0.0017    decision 0.0538    set_bounds 0.0367    solve 0.3733    add 0.0548    
Current (lb-rhs): -0.09103617072105408
131 domains visited
Cumulative time: 0.5349459648132324

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 112
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1052] [/input-8, 1356] [/input-8, 1363] [/input-8, 1356] [/input-8, 1052] [/input-8, 1356] [/input-8, 1363] [/input-8, 1052] [/input-8, 1356] 
pruning_in_iteration open status: False
ratio of positive domain = 35 / 224 = 0.15625
pruning-in-iteration extra time: 5.078315734863281e-05
Time: prepare 0.0046    bound 0.1104    transfer 0.0030    finalize 0.0014    func 0.1195    
Accumulated time: func 0.4926    prepare 0.0147    bound 0.4585    transfer 0.0143    finalize 0.0058    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08665 (13), -0.08345 (13), -0.08274 (13), -0.08006 (13), -0.07891 (13), -0.07856 (13), -0.07660 (13), -0.07644 (13), -0.07540 (13), -0.07514 (13), -0.07392 (13), -0.07311 (13), -0.07277 (13), -0.07271 (13), -0.07080 (13), -0.07001 (13), -0.06920 (13), -0.06894 (13), -0.06750 (13), -0.06647 (13), 
Length of domains: 187
Time: pickout 0.0039    decision 0.0229    set_bounds 0.0050    solve 0.1196    add 0.0486    
Accumulated time: pickout 0.0056    decision 0.0767    set_bounds 0.0417    solve 0.4928    add 0.1034    
Current (lb-rhs): -0.08665382862091064
318 domains visited
Cumulative time: 0.7367842197418213

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 187
splitting decisions: 
split level 0: [/input-8, 1886] [/input-8, 1067] [/input-8, 1357] [/input-8, 1828] [/input-8, 1891] [/input-8, 1067] [/input-8, 1357] [/input-8, 1356] [/input-8, 1067] [/input-8, 1357] 
pruning_in_iteration open status: True
ratio of positive domain = 83 / 374 = 0.22192513368983957
pruning-in-iteration extra time: 0.004001140594482422
Time: prepare 0.0079    bound 0.2068    transfer 0.0129    finalize 0.0041    func 0.2318    
Accumulated time: func 0.7244    prepare 0.0228    bound 0.6653    transfer 0.0272    finalize 0.0099    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08281 (14), -0.08226 (14), -0.07825 (14), -0.07583 (14), -0.07465 (14), -0.07443 (14), -0.07442 (14), -0.07281 (14), -0.07209 (14), -0.07192 (14), -0.07138 (14), -0.06919 (14), -0.06884 (14), -0.06878 (14), -0.06810 (14), -0.06682 (14), -0.06672 (14), -0.06629 (14), -0.06500 (14), -0.06445 (14), 
Length of domains: 291
Time: pickout 0.0062    decision 0.0310    set_bounds 0.0094    solve 0.2320    add 0.0799    
Accumulated time: pickout 0.0118    decision 0.1077    set_bounds 0.0511    solve 0.7248    add 0.1833    
Current (lb-rhs): -0.0828130841255188
609 domains visited
Cumulative time: 1.1119797229766846

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 291
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1828] [/input-8, 1886] [/input-8, 1067] [/input-8, 1828] [/input-8, 1886] [/input-8, 1828] [/input-8, 1356] [/input-8, 1067] [/input-8, 1828] 
pruning_in_iteration open status: True
ratio of positive domain = 199 / 582 = 0.34192439862542956
pruning-in-iteration extra time: 0.0051174163818359375
Time: prepare 0.0123    bound 0.2629    transfer 0.0091    finalize 0.0069    func 0.2914    
Accumulated time: func 1.0158    prepare 0.0353    bound 0.9282    transfer 0.0363    finalize 0.0169    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07905 (15), -0.07876 (15), -0.07502 (15), -0.07213 (15), -0.07123 (15), -0.07031 (15), -0.07030 (15), -0.06883 (15), -0.06873 (15), -0.06870 (15), -0.06775 (15), -0.06704 (15), -0.06573 (15), -0.06523 (15), -0.06511 (15), -0.06478 (15), -0.06370 (15), -0.06274 (15), -0.06243 (15), -0.06239 (15), 
Length of domains: 383
Time: pickout 0.0241    decision 0.0478    set_bounds 0.0160    solve 0.2916    add 0.0948    
Accumulated time: pickout 0.0359    decision 0.1555    set_bounds 0.0671    solve 1.0164    add 0.2781    
Current (lb-rhs): -0.07904627919197083
992 domains visited
Cumulative time: 1.6008875370025635

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 383
splitting decisions: 
split level 0: [/input-8, 1357] [/input-8, 1356] [/input-8, 1357] [/input-8, 1357] [/input-8, 1886] [/input-8, 1357] [/input-8, 1067] [/input-8, 1357] [/input-8, 539] [/input-8, 1891] 
pruning_in_iteration open status: True
ratio of positive domain = 178 / 766 = 0.2323759791122716
pruning-in-iteration extra time: 0.005743265151977539
Time: prepare 0.0162    bound 0.2931    transfer 0.0169    finalize 0.0059    func 0.3335    
Accumulated time: func 1.3493    prepare 0.0517    bound 1.2213    transfer 0.0531    finalize 0.0228    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07514 (16), -0.07359 (16), -0.06986 (16), -0.06758 (16), -0.06688 (16), -0.06664 (16), -0.06608 (16), -0.06574 (16), -0.06560 (16), -0.06357 (16), -0.06349 (16), -0.06282 (16), -0.06280 (16), -0.06223 (16), -0.06114 (16), -0.06052 (16), -0.06050 (16), -0.06033 (16), -0.06011 (16), -0.05898 (16), 
Length of domains: 588
Time: pickout 0.0181    decision 0.0404    set_bounds 0.0225    solve 0.3340    add 0.0559    
Accumulated time: pickout 0.0540    decision 0.1960    set_bounds 0.0896    solve 1.3504    add 0.3339    
Current (lb-rhs): -0.0751362144947052
1580 domains visited
Cumulative time: 2.0756049156188965

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 588
splitting decisions: 
split level 0: [/input-8, 1067] [/input-8, 539] [/input-8, 1067] [/input-8, 1891] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 1357] [/input-8, 1891] 
pruning_in_iteration open status: True
ratio of positive domain = 377 / 1176 = 0.32057823129251706
pruning-in-iteration extra time: 0.004642009735107422
Time: prepare 0.0243    bound 0.2553    transfer 0.0151    finalize 0.0105    func 0.3054    
Accumulated time: func 1.6548    prepare 0.0763    bound 1.4766    transfer 0.0683    finalize 0.0333    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07159 (17), -0.07060 (17), -0.06797 (17), -0.06577 (17), -0.06369 (17), -0.06352 (17), -0.06343 (17), -0.06203 (17), -0.06161 (17), -0.06088 (17), -0.06063 (17), -0.06022 (17), -0.05971 (17), -0.05903 (17), -0.05863 (17), -0.05859 (17), -0.05844 (17), -0.05832 (17), -0.05795 (17), -0.05747 (17), 
Length of domains: 799
Time: pickout 0.0136    decision 0.0518    set_bounds 0.0299    solve 0.3058    add 0.0479    
Accumulated time: pickout 0.0676    decision 0.2478    set_bounds 0.1195    solve 1.6562    add 0.3819    
Current (lb-rhs): -0.07158595323562622
2379 domains visited
Cumulative time: 2.5333292484283447

BaB round 8
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0039
batch: 799
splitting decisions: 
split level 0: [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 542] [/input-8, 1356] [/input-8, 1356] [/input-8, 1067] [/input-8, 539] [/input-8, 542] [/input-8, 542] 
pruning_in_iteration open status: True
ratio of positive domain = 533 / 1598 = 0.3335419274092616
pruning-in-iteration extra time: 0.005562305450439453
Time: prepare 0.0331    bound 0.3276    transfer 0.0239    finalize 0.0116    func 0.3963    
Accumulated time: func 2.0511    prepare 0.1096    bound 1.8042    transfer 0.0921    finalize 0.0449    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07117 (18), -0.06863 (18), -0.06324 (18), -0.06220 (18), -0.06140 (18), -0.06002 (18), -0.05996 (18), -0.05978 (18), -0.05892 (18), -0.05774 (18), -0.05749 (18), -0.05700 (18), -0.05697 (18), -0.05674 (18), -0.05589 (18), -0.05563 (18), -0.05548 (18), -0.05458 (18), -0.05428 (18), -0.05372 (18), 
Length of domains: 1065
Time: pickout 0.0281    decision 0.0697    set_bounds 0.0392    solve 0.3977    add 0.1035    
Accumulated time: pickout 0.0957    decision 0.3175    set_bounds 0.1588    solve 2.0539    add 0.4853    
Current (lb-rhs): -0.07117000222206116
3444 domains visited
Cumulative time: 3.1861250400543213

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 1065
splitting decisions: 
split level 0: [/input-8, 539] [/input-8, 1356] [/input-8, 539] [/input-8, 539] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1356] [/input-8, 1828] 
pruning_in_iteration open status: True
ratio of positive domain = 884 / 2130 = 0.4150234741784038
pruning-in-iteration extra time: 0.005395412445068359
Time: prepare 0.0443    bound 0.2804    transfer 0.0270    finalize 0.0172    func 0.3692    
Accumulated time: func 2.4203    prepare 0.1541    bound 2.0847    transfer 0.1192    finalize 0.0621    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06542 (19), -0.06284 (19), -0.06190 (19), -0.06012 (19), -0.05965 (19), -0.05756 (19), -0.05740 (19), -0.05655 (19), -0.05634 (19), -0.05556 (19), -0.05553 (19), -0.05507 (19), -0.05430 (19), -0.05418 (19), -0.05407 (19), -0.05380 (19), -0.05278 (19), -0.05253 (19), -0.05248 (19), -0.05230 (19), 
Length of domains: 1246
Time: pickout 0.0304    decision 0.0771    set_bounds 0.0554    solve 0.3705    add 0.1074    
Accumulated time: pickout 0.1262    decision 0.3946    set_bounds 0.2141    solve 2.4243    add 0.5927    
Current (lb-rhs): -0.0654163658618927
4690 domains visited
Cumulative time: 3.8410377502441406

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0024
batch: 1246
splitting decisions: 
split level 0: [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] [/input-8, 1828] 
pruning_in_iteration open status: True
ratio of positive domain = 1095 / 2492 = 0.4394060995184591
pruning-in-iteration extra time: 0.005530834197998047
Time: prepare 0.0520    bound 0.3421    transfer 0.0233    finalize 0.0233    func 0.4409    
Accumulated time: func 2.8613    prepare 0.2064    bound 2.4268    transfer 0.1424    finalize 0.0854    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06513 (20), -0.06256 (20), -0.06146 (20), -0.05974 (20), -0.05921 (20), -0.05727 (20), -0.05703 (20), -0.05609 (20), -0.05595 (20), -0.05522 (20), -0.05484 (20), -0.05401 (20), -0.05378 (20), -0.05366 (20), -0.05334 (20), -0.05250 (20), -0.05222 (20), -0.05191 (20), -0.05147 (20), -0.05116 (20), 
Length of domains: 1397
Time: pickout 0.0447    decision 0.4080    set_bounds 0.0718    solve 0.4415    add 0.1083    
Accumulated time: pickout 0.1709    decision 0.8026    set_bounds 0.2859    solve 2.8658    add 0.7010    
Current (lb-rhs): -0.06513401865959167
6087 domains visited
Cumulative time: 4.930495500564575

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 1397
splitting decisions: 
split level 0: [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1292] [/input-8, 1901] 
pruning_in_iteration open status: True
ratio of positive domain = 792 / 2794 = 0.2834645669291339
pruning-in-iteration extra time: 0.005472660064697266
Time: prepare 0.0648    bound 0.3236    transfer 0.0090    finalize 0.0187    func 0.4164    
Accumulated time: func 3.2777    prepare 0.2714    bound 2.7504    transfer 0.1515    finalize 0.1042    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05950 (21), -0.05835 (21), -0.05748 (21), -0.05643 (21), -0.05531 (21), -0.05452 (21), -0.05416 (21), -0.05404 (21), -0.05287 (21), -0.05189 (21), -0.05187 (21), -0.05160 (21), -0.05106 (21), -0.05095 (21), -0.05057 (21), -0.05039 (21), -0.04971 (21), -0.04959 (21), -0.04922 (21), -0.04907 (21), 
Length of domains: 2002
Time: pickout 0.0430    decision 0.0963    set_bounds 0.0596    solve 0.4175    add 0.1127    
Accumulated time: pickout 0.2139    decision 0.8989    set_bounds 0.3455    solve 3.2834    add 0.8137    
Current (lb-rhs): -0.059504806995391846
8089 domains visited
Cumulative time: 5.684998035430908

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0039
batch: 2002
splitting decisions: 
split level 0: [/input-8, 542] [/input-8, 542] [/input-8, 1901] [/input-8, 542] [/input-8, 1292] [/input-8, 1292] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] 
pruning_in_iteration open status: True
ratio of positive domain = 936 / 4004 = 0.23376623376623373
pruning-in-iteration extra time: 0.005422830581665039
Time: prepare 0.0874    bound 0.3281    transfer 0.0504    finalize 0.0319    func 0.4992    
Accumulated time: func 3.7768    prepare 0.3591    bound 3.0785    transfer 0.2018    finalize 0.1361    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05428 (22), -0.05307 (22), -0.05291 (22), -0.05291 (22), -0.05218 (22), -0.05170 (22), -0.05071 (22), -0.04991 (22), -0.04904 (22), -0.04887 (22), -0.04882 (22), -0.04875 (22), -0.04844 (22), -0.04776 (22), -0.04754 (22), -0.04747 (22), -0.04734 (22), -0.04715 (22), -0.04666 (22), -0.04660 (22), 
Length of domains: 3068
Time: pickout 0.0556    decision 0.1316    set_bounds 0.2259    solve 0.5000    add 0.1433    
Accumulated time: pickout 0.2695    decision 1.0305    set_bounds 0.5715    solve 3.7834    add 0.9570    
Current (lb-rhs): -0.05427771806716919
11157 domains visited
Cumulative time: 6.758159637451172

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0013
batch: 3068
splitting decisions: 
split level 0: [/input-8, 1891] [/input-8, 1891] [/input-8, 1893] [/input, 2455] [/input-8, 542] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] [/input-8, 1893] 
pruning_in_iteration open status: True
ratio of positive domain = 1503 / 6136 = 0.24494784876140807
pruning-in-iteration extra time: 0.005414724349975586
Time: prepare 0.1382    bound 0.3641    transfer 0.0341    finalize 0.0471    func 0.5840    
Accumulated time: func 4.3609    prepare 0.4976    bound 3.4426    transfer 0.2359    finalize 0.1831    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05040 (23), -0.04918 (23), -0.04827 (23), -0.04782 (23), -0.04751 (23), -0.04725 (23), -0.04718 (23), -0.04660 (23), -0.04628 (23), -0.04614 (23), -0.04596 (23), -0.04595 (23), -0.04574 (23), -0.04541 (23), -0.04530 (23), -0.04509 (23), -0.04502 (23), -0.04483 (23), -0.04392 (23), -0.04363 (23), 
Length of domains: 4633
Time: pickout 0.0597    decision 0.1895    set_bounds 0.2917    solve 0.5857    add 0.1515    
Accumulated time: pickout 0.3291    decision 1.2200    set_bounds 0.8632    solve 4.3691    add 1.1085    
Current (lb-rhs): -0.05040031671524048
15790 domains visited
Cumulative time: 8.054666996002197

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0028
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1894] [/input-8, 931] [/input-8, 1044] [/input-8, 1044] [/input-8, 1894] [/input-8, 1894] [/input-8, 1894] [/input-8, 1894] [/input-8, 1894] [/input-8, 1894] 
pruning_in_iteration open status: True
ratio of positive domain = 2645 / 8192 = 0.3228759765625
pruning-in-iteration extra time: 0.0055234432220458984
Time: prepare 0.1843    bound 0.3975    transfer 0.0449    finalize 0.0580    func 0.6857    
Accumulated time: func 5.0466    prepare 0.6822    bound 3.8401    transfer 0.2808    finalize 0.2412    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04751 (23), -0.04627 (24), -0.04560 (24), -0.04530 (23), -0.04509 (23), -0.04475 (24), -0.04474 (24), -0.04404 (24), -0.04372 (24), -0.04340 (24), -0.04337 (24), -0.04336 (24), -0.04328 (23), -0.04302 (24), -0.04271 (24), -0.04219 (24), -0.04192 (23), -0.04156 (24), -0.04107 (24), -0.04094 (24), 
Length of domains: 6084
Time: pickout 0.0787    decision 0.2418    set_bounds 0.3296    solve 0.6877    add 0.1440    
Accumulated time: pickout 0.4079    decision 1.4617    set_bounds 1.1928    solve 5.0568    add 1.2525    
Current (lb-rhs): -0.047507017850875854
21337 domains visited
current_vram/total_varm: 12.2GB/99.9GB, batch_size increase to 8192
Cumulative time: 9.56883978843689

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 6084
splitting decisions: 
split level 0: [/input-8, 1894] [/input-8, 1891] [/input-8, 1894] [/input-8, 1894] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 1381] [/input-8, 1894] [/input-8, 1381] 
pruning_in_iteration open status: True
ratio of positive domain = 4264 / 12168 = 0.3504273504273504
pruning-in-iteration extra time: 0.0058133602142333984
Time: prepare 0.2799    bound 0.4894    transfer 0.0656    finalize 0.2385    func 1.0747    
Accumulated time: func 6.1213    prepare 0.9624    bound 4.3295    transfer 0.3464    finalize 0.4797    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04438 (24), -0.04253 (25), -0.04193 (24), -0.04160 (25), -0.04151 (25), -0.04093 (24), -0.04061 (25), -0.04021 (25), -0.04019 (25), -0.04000 (24), -0.03992 (25), -0.03960 (25), -0.03945 (25), -0.03919 (25), -0.03906 (25), -0.03890 (25), -0.03881 (24), -0.03872 (25), -0.03858 (25), -0.03858 (25), 
Length of domains: 7904
Time: pickout 0.1071    decision 0.5143    set_bounds 0.2699    solve 1.0773    add 0.1764    
Accumulated time: pickout 0.5150    decision 1.9760    set_bounds 1.4626    solve 6.1340    add 1.4289    
Current (lb-rhs): -0.04437854886054993
29241 domains visited
Cumulative time: 11.751079559326172

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0034
batch: 7904
splitting decisions: 
split level 0: [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 1894] [/input-8, 1894] [/input-8, 1044] [/input-8, 1044] [/input-8, 1044] [/input-8, 931] [/input-8, 931] 
pruning_in_iteration open status: True
ratio of positive domain = 5346 / 15808 = 0.33818319838056676
pruning-in-iteration extra time: 0.005584001541137695
Time: prepare 0.3429    bound 0.5872    transfer 0.0816    finalize 0.1072    func 1.1204    
Accumulated time: func 7.2417    prepare 1.3057    bound 4.9167    transfer 0.4281    finalize 0.5868    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03960 (25), -0.03903 (25), -0.03812 (26), -0.03771 (25), -0.03724 (26), -0.03713 (26), -0.03711 (26), -0.03677 (25), -0.03650 (25), -0.03626 (26), -0.03622 (26), -0.03620 (26), -0.03618 (25), -0.03611 (26), -0.03588 (26), -0.03573 (26), -0.03549 (26), -0.03532 (26), -0.03526 (26), -0.03524 (26), 
Length of domains: 10462
Time: pickout 0.1315    decision 0.4733    set_bounds 0.7280    solve 1.1242    add 0.1703    
Accumulated time: pickout 0.6465    decision 2.4493    set_bounds 2.1907    solve 7.2583    add 1.5992    
Current (lb-rhs): -0.03960421681404114
39703 domains visited
Cumulative time: 14.422461032867432

BaB round 17
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts: total 364 constraints, 29504 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2706
batch: 8192
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 571] [/input-8, 1901] [/input-8, 571] [/input-8, 571] [/input-8, 1358] [/input-8, 1358] [/input-8, 571] [/input-8, 1358] [/input-8, 1910] [/input-8, 1358] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03596997261047363
10 lb beta sum: 11.053654670715332, worst -0.01830626279115677
pruning_in_iteration open status: True
ratio of positive domain = 16081 / 16384 = 0.98150634765625
pruning-in-iteration extra time: 0.005609035491943359
Time: prepare 0.3691    bound 1.4008    transfer 0.0832    finalize 0.1318    func 2.0950    
Accumulated time: func 9.3367    prepare 1.6751    bound 6.3175    transfer 0.5113    finalize 0.7187    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03960 (25), -0.03724 (26), -0.03677 (25), -0.03650 (25), -0.03622 (26), -0.03532 (26), -0.03526 (26), -0.03498 (26), -0.03486 (26), -0.03461 (26), -0.03459 (25), -0.03431 (26), -0.03360 (26), -0.03322 (25), -0.03311 (26), -0.03305 (26), -0.03295 (26), -0.03247 (25), -0.03238 (26), -0.03238 (26), 
Length of domains: 2573
Time: pickout 0.1450    decision 0.6810    set_bounds 0.5814    solve 2.0996    add 0.0829    
Accumulated time: pickout 0.7915    decision 3.1303    set_bounds 2.7720    solve 9.3579    add 1.6821    
Current (lb-rhs): -0.03960421681404114
40006 domains visited
current_vram/total_varm: 27.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 18.374183654785156

BaB round 18
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0014
batch: 2573
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 931] [/input-8, 1381] [/input-8, 931] [/input-8, 1894] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] 
cut re-enabled after branching node selection
0 lb beta sum: 0.22660981118679047, worst -0.036322444677352905
10 lb beta sum: 7.271058082580566, worst -0.022559739649295807
pruning_in_iteration open status: True
ratio of positive domain = 4775 / 5146 = 0.9279051690633502
pruning-in-iteration extra time: 0.005493640899658203
Time: prepare 0.2475    bound 0.6019    transfer 0.0277    finalize 0.0303    func 0.9419    
Accumulated time: func 10.2786    prepare 1.9229    bound 6.9194    transfer 0.5390    finalize 0.7489    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01309 (27), -0.01302 (28), -0.01207 (26), -0.01150 (28), -0.01143 (27), -0.01127 (27), -0.01101 (27), -0.01095 (28), -0.01079 (28), -0.01068 (28), -0.01066 (27), -0.01064 (28), -0.01043 (27), -0.01006 (26), -0.01003 (28), -0.00992 (28), -0.00989 (28), -0.00984 (28), -0.00981 (27), -0.00969 (27), 
Length of domains: 371
Time: pickout 0.0663    decision 0.1583    set_bounds 0.2664    solve 0.9435    add 0.0846    
Accumulated time: pickout 0.8577    decision 3.2886    set_bounds 3.0384    solve 10.3014    add 1.7667    
Current (lb-rhs): -0.013089016079902649
40377 domains visited
Cumulative time: 19.962626218795776

BaB round 19
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts: total 567 constraints, 48051 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4264
batch: 371
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1901] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03442257642745972
10 lb beta sum: 3.499992847442627, worst -0.010356828570365906
pruning_in_iteration open status: True
ratio of positive domain = 732 / 742 = 0.9865229110512129
pruning-in-iteration extra time: 0.0035033226013183594
Time: prepare 0.0166    bound 0.3680    transfer 0.0094    finalize 0.0057    func 0.4047    
Accumulated time: func 10.6833    prepare 1.9398    bound 7.2874    transfer 0.5484    finalize 0.7547    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00247 (28), -0.00151 (28), -0.00146 (29), -0.00128 (29), -0.00106 (28), -0.00103 (28), -0.00084 (28), -0.00054 (29), -0.00028 (28), -0.00010 (27), 
Length of domains: 10
Time: pickout 0.0184    decision 0.0427    set_bounds 0.0182    solve 0.4049    add 0.0394    
Accumulated time: pickout 0.8762    decision 3.3313    set_bounds 3.0566    solve 10.7063    add 1.8061    
Current (lb-rhs): -0.0024698376655578613
40387 domains visited
Cumulative time: 20.92593240737915

BaB round 20
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0012
batch: 10
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1358] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] [/input-8, 1374] 
split level 1: [/input-8, 1369] [/input-8, 1861] [/input-8, 1861] [/input-8, 1861] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] [/input-8, 1369] 
split level 2: [/input-8, 931] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 571] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] [/input-8, 1901] 
split level 3: [/input-8, 571] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1381] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] [/input-8, 1910] 
split level 4: [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] [/input-8, 1350] 
cut re-enabled after branching node selection
0 lb beta sum: 2.830937147140503, worst 0.008264601230621338

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 320 / 320 = 1.0
pruning-in-iteration extra time: 4.220008850097656e-05
Time: prepare 0.0145    bound 0.0143    transfer 0.0024    finalize 0.0022    func 0.0353    
Accumulated time: func 10.7186    prepare 1.9546    bound 7.3017    transfer 0.5508    finalize 0.7568    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0231    set_bounds 0.0144    solve 0.0354    add 0.0001    
Accumulated time: pickout 0.8770    decision 3.3543    set_bounds 3.0710    solve 10.7416    add 1.8062    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
40387 domains visited
Cumulative time: 21.001617431640625

found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=103_spec=2_30260455.log
found process for pidx=2
kill process for pidx=2
Result: safe in 24.0098 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 104, vnnlib ID: 104 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.93376207, -6.71706390, -2.45791340, -1.94786179, -3.43069839,
         -0.01497591, -4.77984476, -2.99772120, -6.68260002, -5.67084932]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [775]; unstable size 775; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 265, 1, 775] with unstable size 264 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 775] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 775] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [264]; unstable size 264; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 264] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 264] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.31793952, 4.18651628, 1.24683070, 1.51535225, 1.97004461, 3.30764031,
         1.65014279, 4.22077942, 3.37990904]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0476 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 105, vnnlib ID: 105 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.58880043, -10.13493252,  -4.93114376,  -6.19413185,  -6.14457750,
          -6.40420198,  -6.35660315,  -6.51874971,  -8.22681046,  -9.13034344]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [623]; unstable size 623; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 253, 1, 623] with unstable size 252 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 623] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 623] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [252]; unstable size 252; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 252] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 252] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.65812528,  1.61883903, -2.82501531, -1.14642119, -1.45474648,
         -0.98869795, -1.28088367, -0.29947865,  0.88783264]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.58880043, -10.13493252,  -4.93114376,  -6.19413185,  -6.14457750,
          -6.40420198,  -6.35660315,  -6.51874971,  -8.22681046,  -9.13034344]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.58880091, -10.13493347,  -4.93114376,  -6.19413280,  -6.14457798,
           -6.40420198,  -6.35660315,  -6.51874971,  -8.22680950,  -9.13034534],
         [ -6.58880091, -10.13493347,  -4.93114376,  -6.19413280,  -6.14457798,
           -6.40420198,  -6.35660315,  -6.51874971,  -8.22680950,  -9.13034534]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.07005119, -1.58760595, -0.32461691, -0.37417173, -0.11454773,
          -0.16214657,  1.70805979]]], device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         ...,


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]],


         [[[-0.79841268, -0.78253967, -0.76666665,  ..., -0.73492062,
            -0.75079364, -0.79841268],
           [-0.79841268, -0.76666665, -0.78253967,  ..., -0.81428570,
            -0.83015871, -0.83015871],
           [-0.75079364, -0.79841268, -0.83015871,  ..., -0.83015871,
            -0.86190474, -0.86190474],
           ...,
           [-1.03650784, -0.98888886, -0.90952379,  ...,  0.39206356,
             0.40793657,  0.34444451],
           [-0.98888886, -1.11587298, -1.05238092,  ...,  0.66190481,
             0.69365084,  0.67777783],
           [-0.92539680, -1.06825387, -1.08412695,  ...,  0.37619054,
             0.42380959,  0.47142863]],

          [[-0.51529789, -0.49919480, -0.48309177,  ..., -0.46698871,
            -0.46698871, -0.49919480],
           [-0.51529789, -0.48309177, -0.49919480,  ..., -0.56360704,
            -0.54750401, -0.54750401],
           [-0.46698871, -0.51529789, -0.53140092,  ..., -0.57971013,
            -0.57971013, -0.56360704],
           ...,
           [-0.95008045, -0.90177131, -0.82125598,  ...,  0.19323683,
             0.24154601,  0.28985518],
           [-0.88566822, -1.01449275, -0.95008045,  ...,  0.53140104,
             0.54750413,  0.57971025],
           [-0.82125598, -0.96618354, -0.99838966,  ...,  0.32206130,
             0.33816436,  0.35426742]],

          [[-0.10344811, -0.07346311, -0.07346311,  ..., -0.01349309,
            -0.01349309, -0.04347810],
           [-0.10344811, -0.07346311, -0.08845562,  ..., -0.10344811,
            -0.08845562, -0.10344811],
           [-0.05847061, -0.10344811, -0.11844061,  ..., -0.10344811,
            -0.11844061, -0.11844061],
           ...,
           [-0.64317840, -0.55322337, -0.46326834,  ...,  0.48125952,
             0.54122955,  0.61619210],
           [-0.62818587, -0.70314842, -0.61319339,  ...,  0.73613209,
             0.76611710,  0.81109464],
           [-0.55322337, -0.67316341, -0.68815589,  ...,  0.52623707,
             0.55622208,  0.57121456]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0827 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 106, vnnlib ID: 106 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.73701859,  -4.31693745,  -8.52546501,  -9.33157349,  -8.00366402,
         -10.34507942,  -9.10334110,  -9.12430954,  -4.68865204,  -6.33631182]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [549]; unstable size 549; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 168, 1, 549] with unstable size 167 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 549] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 549] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [167]; unstable size 167; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 167] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 167] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.18721008,  2.73354053,  3.30611420,  2.10224628,  4.03056717,
          3.46064520,  2.85602808, -0.83577156,  1.03666806]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.73701859,  -4.31693745,  -8.52546501,  -9.33157349,  -8.00366402,
         -10.34507942,  -9.10334110,  -9.12430954,  -4.68865204,  -6.33631182]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.88665152,  -4.94309807,  -8.66058636,  -9.56620789,  -8.16523075,
          -10.62532234,  -9.38236713,  -9.36486244,  -4.54864693,  -6.86276865]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.39445114]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0065 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0740 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 107, vnnlib ID: 107 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
         -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 636] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 636] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 231] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.34137344,  0.70376396,  3.10112000,  1.09246922,  3.41379428,
          3.82853699,  1.99575377, -0.16640019,  3.65535498]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
         -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.83it/s]100%|██████████| 1/1 [00:00<00:00,  7.82it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.99041271, -17.73440742, -13.82642174, -16.31141663, -14.73910618,
          -16.84328079, -17.45844650, -16.23611069, -12.71389008, -17.06082153]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.72347736]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1308 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 22.566566467285156
alpha/beta optimization time: 1.3334429264068604
initial alpha-crown bounds: tensor([[ 4.41341639,  0.78251934,  3.14730644,  1.16422820,  3.46807480,
          3.87461948,  2.07521439, -0.08284044,  3.72402668]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.0828404426574707
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.8194 seconds.
lower bounds for all target labels: [4.413417816162109, 0.7825188636779785, 3.1473069190979004, 1.1642286777496338, 3.468076705932617, 3.8746190071105957, 2.0752108097076416, -0.08284050226211548, 3.724026679992676]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [7]
start creating model mps for candidates: ['lay/16_7']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.3712453842163
Verifying property 0 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.413416385650635.

Properties batch 1, size 1
Remaining timeout: 198.18514752388
Verifying property 1 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.874619483947754.

Properties batch 2, size 1
Remaining timeout: 198.06606364250183
Verifying property 2 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.724026679992676.

Properties batch 3, size 1
Remaining timeout: 197.95905590057373
Verifying property 3 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.4680747985839844.

Properties batch 4, size 1
Remaining timeout: 197.85504031181335
Verifying property 4 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.147306442260742.

Properties batch 5, size 1
Remaining timeout: 197.7539517879486
Verifying property 5 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.075214385986328.

Properties batch 6, size 1
Remaining timeout: 197.65191340446472
Verifying property 6 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1642282009124756.

Properties batch 7, size 1
Remaining timeout: 197.55079889297485
Verifying property 7 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.7825193405151367.

Properties batch 8, size 1
Remaining timeout: 197.4489345550537
Verifying property 8 with 1 instances.
##### Instance 107 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.08284044]], device='cuda:0') need to verify.
Model prediction is: tensor([-12.25630188, -18.41019440, -14.19659901, -16.87197685, -15.07205296,
        -17.43015480, -17.99939728, -16.44446564, -13.78191662, -17.80060196],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.08284044]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 636
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 225
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 879
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010395050048828125
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 44] 
split level 1: [/input-12, 17] 
split level 2: [/input-12, 46] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 9] 
split level 5: [/input-8, 1388] 
split level 6: [/input-8, 1323] 
split level 7: [/input-8, 1077] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 6.127357482910156e-05
Time: prepare 0.0033    bound 0.0052    transfer 0.0050    finalize 0.0043    func 0.0179    
Accumulated time: func 0.0179    prepare 0.0038    bound 0.0052    transfer 0.0050    finalize 0.0043    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0285    set_bounds 0.0239    solve 0.0180    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0285    set_bounds 0.0239    solve 0.0180    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0780630111694336

the mip building process is not terminated yet, kill it
Result: safe in 3.0266 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 108, vnnlib ID: 108 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.67031240,  -9.52653027,  -5.79421425,  -5.15730333,  -5.24825621,
          -5.88681936,  -4.92760229,  -6.80504274, -10.24907398,  -9.07698536]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [634]; unstable size 634; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 245, 1, 634] with unstable size 244 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 634] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 634] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [244]; unstable size 244; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 244] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 244] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.24761367,  2.93305993, -0.23562050, -0.90710092,  0.36504614,
         -1.18999672,  0.08450991,  3.42949843,  2.57326126]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.67031240,  -9.52653027,  -5.79421425,  -5.15730333,  -5.24825621,
          -5.88681936,  -4.92760229,  -6.80504274, -10.24907398,  -9.07698536]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.67031288,  -9.52653027,  -5.79421329,  -5.15730429,  -5.24825621,
           -5.88681889,  -4.92760229,  -6.80504179, -10.24907398,  -9.07698536],
         [ -7.67031288,  -9.52653027,  -5.79421329,  -5.15730429,  -5.24825621,
           -5.88681889,  -4.92760229,  -6.80504179, -10.24907398,  -9.07698536]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.63690901,  0.09095192, -0.22970200]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]],


         [[[-0.97301590, -1.03650784, -1.13174593,  ..., -0.84603173,
            -0.46507925, -0.29047608],
           [-0.97301590, -1.03650784, -1.14761901,  ..., -0.94126981,
            -0.41746020, -0.03650784],
           [-0.95714283, -1.02063489, -1.13174593,  ..., -1.06825387,
            -0.25873005,  0.09047628],
           ...,
           [-0.43333322,  0.15396833,  0.13809532,  ..., -1.63968253,
            -0.83015871, -0.09999990],
           [-0.16349196,  0.10634929, -0.13174593,  ..., -1.40158725,
            -0.79841268, -0.09999990],
           [-0.06825387,  0.05873025,  0.09047628,  ..., -1.00476182,
            -0.73492062, -0.09999990]],

          [[-1.49758446, -1.52979064, -1.54589367,  ..., -1.12721407,
            -0.88566822, -0.77294683],
           [-1.49758446, -1.52979064, -1.57809973,  ..., -1.20772946,
            -0.82125598, -0.53140092],
           [-1.48148143, -1.49758446, -1.54589367,  ..., -1.35265696,
            -0.64412236, -0.40257636],
           ...,
           [-1.11111104, -0.37037024, -0.48309177,  ..., -1.78743970,
            -0.90177131, -0.28985494],
           [-0.90177131, -0.43478248, -0.75684375,  ..., -1.64251208,
            -0.88566822, -0.27375188],
           [-0.83735907, -0.49919480, -0.51529789,  ..., -1.35265696,
            -0.83735907, -0.25764883]],

          [[-0.23838064, -0.38830581, -0.40329832,  ..., -1.00299859,
            -1.03298354, -1.03298354],
           [-0.25337315, -0.40329832, -0.43328333,  ..., -1.06296861,
            -0.95802099, -0.80809593],
           [-0.23838064, -0.37331331, -0.41829082,  ..., -1.22788620,
            -0.76311839, -0.68815589],
           ...,
           [ 0.07646193, -0.01349309, -0.44827583,  ..., -1.07796109,
            -0.67316341, -0.35832080],
           [ 0.25637197, -0.07346311, -0.65817088,  ..., -0.86806595,
            -0.64317840, -0.34332830],
           [ 0.31634200, -0.04347810, -0.29835078,  ..., -0.52323836,
            -0.58320838, -0.34332830]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0891 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 109, vnnlib ID: 109 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -4.68137455, -11.11765766,  -8.01337242,  -9.71148872,  -8.79326439,
         -10.48354340, -10.25170231, -11.03672123,  -9.45322895, -10.81242466]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [555]; unstable size 555; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 118, 1, 555] with unstable size 117 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 555] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 555] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [117]; unstable size 117; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 117] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 117] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.02142096, 2.59467411, 4.01387167, 3.15092182, 4.53091240, 4.70333385,
         4.88892937, 3.85758543, 5.04689884]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0713 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 110, vnnlib ID: 110 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.59310770, -8.98699856, -1.98446643, -1.86275947, -2.02259350,
         -2.92739010,  0.91057259, -5.46356249, -8.21526527, -9.22765255]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [455]; unstable size 455; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 269, 1, 455] with unstable size 268 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 455] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 455] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [268]; unstable size 268; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 268] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 268] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.81164742, 7.72943830, 1.56485271, 1.38150549, 1.52279758, 2.12491894,
         4.28514576, 7.13579130, 8.30116177]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0718 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 111, vnnlib ID: 111 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.92330647, -14.34430218,  -7.27562428, -10.29554081,  -6.15860891,
         -10.20837307,  -9.93119907,  -8.65463638, -13.25779629, -14.20930576]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [611]; unstable size 611; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 254, 1, 611] with unstable size 253 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 611] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [253]; unstable size 253; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 253] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 253] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.99095178,  5.73210239, -0.06892419,  3.12794590,  2.97227120,
          2.38821363,  1.26657963,  4.99652815,  5.76884365]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.92330647, -14.34430218,  -7.27562428, -10.29554081,  -6.15860891,
         -10.20837307,  -9.93119907,  -8.65463638, -13.25779629, -14.20930576]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.72it/s]100%|██████████| 1/1 [00:00<00:00,  7.72it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.46822834, -13.99311256,  -6.75831699, -10.00392342,  -6.13183355,
           -9.93013954,  -9.78919888,  -8.68164825, -12.90161037, -13.86594105]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.62648344]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1327 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 9th iter
best_l after optimization: 29.920612335205078
alpha/beta optimization time: 0.14568042755126953
initial alpha-crown bounds: tensor([[3.09697270e+00, 5.84763908e+00, 1.91956758e-03, 3.17881036e+00,
         3.02511597e+00, 2.45539427e+00, 1.32388163e+00, 5.10637760e+00,
         5.88449907e+00]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.001919567584991455
verified with init bound!
Result: safe-incomplete in 0.4412 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 112, vnnlib ID: 112 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
         -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 172, 1, 646] with unstable size 171 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 646] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [171]; unstable size 171; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 171] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 171] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.06740236,  0.96642983,  1.28222084,  0.65053344,  2.26329374,
          1.44973660,  2.01239824,  0.51637936, -0.32224512]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
         -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
100%|██████████| 1/1 [00:00<00:00,  7.65it/s]100%|██████████| 1/1 [00:00<00:00,  7.64it/s]
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6537 seconds.
lower bounds for all target labels: [3.096972703933716, 5.847639083862305, 0.001919567584991455, 3.1788103580474854, 3.025115966796875, 2.4553942680358887, 1.3238816261291504, 5.106377601623535, 5.8844990730285645]
Number of cpus: 96  Number of subproblems: 0
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: []
start creating model mps for candidates: []
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.57732010, -6.66554546, -7.30325699, -6.67956257, -8.48736095,
          -7.56733274, -7.92629004, -6.74919939, -5.11711884, -4.89358377]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.22353506]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1341 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.232051849365234
alpha/beta optimization time: 1.3167848587036133
initial alpha-crown bounds: tensor([[ 1.09233856,  1.00209785,  1.32075214,  0.68928790,  2.30610156,
          1.48740554,  2.04873109,  0.55730534, -0.27196860]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2719686031341553
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6908 seconds.
lower bounds for all target labels: [1.0923396348953247, 1.0020971298217773, 1.3207511901855469, 0.6892886161804199, 2.306100368499756, 1.487407922744751, 2.0487308502197266, 0.5573040246963501, -0.2719690799713135]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.33359360694885
Verifying property 0 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.3061015605926514.

Properties batch 1, size 1
Remaining timeout: 197.9971058368683
Verifying property 1 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0487310886383057.

Properties batch 2, size 1
Remaining timeout: 197.87918782234192
Verifying property 2 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.48740553855896.

Properties batch 3, size 1
Remaining timeout: 197.78009939193726
Verifying property 3 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.3207521438598633.

Properties batch 4, size 1
Remaining timeout: 197.6807062625885
Verifying property 4 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0923385620117188.

Properties batch 5, size 1
Remaining timeout: 197.58580684661865
Verifying property 5 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0020978450775146.

Properties batch 6, size 1
Remaining timeout: 197.48854279518127
Verifying property 6 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6892879009246826.

Properties batch 7, size 1
Remaining timeout: 197.3930139541626
Verifying property 7 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5573053359985352.

Properties batch 8, size 1
Remaining timeout: 197.3004322052002
Verifying property 8 with 1 instances.
##### Instance 112 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.27196860]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.39937687, -6.31978703, -7.08044434, -6.31649590, -8.13005733,
        -7.18079948, -7.62912607, -6.36020851, -5.32509041, -4.25607824],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.27196860]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 646
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 166
Node /15 input 0: size torch.Size([100]) unstable 15
-----------------
# of unstable neurons: 827
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010561943054199219
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 68] 
split level 2: [/input-12, 78] 
split level 3: [/input-12, 1] 
split level 4: [/input-8, 1890] 
split level 5: [/input-8, 1131] 
split level 6: [/input-8, 1898] 
split level 7: [/input-8, 932] 

all verified at 3th iter
pruning_in_iteration open status: True
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 0.0008702278137207031
Time: prepare 0.0035    bound 0.0722    transfer 0.0052    finalize 0.0035    func 0.0845    
Accumulated time: func 0.0845    prepare 0.0040    bound 0.0722    transfer 0.0052    finalize 0.0035    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0291    set_bounds 0.0233    solve 0.0846    add 0.0001    
Accumulated time: pickout 0.0009    decision 0.0291    set_bounds 0.0233    solve 0.0846    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.14478468894958496

the mip building process is not terminated yet, kill it
Result: safe in 3.3098 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 113, vnnlib ID: 113 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
         -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [667]; unstable size 667; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 214, 1, 667] with unstable size 213 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 667] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 667] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [213]; unstable size 213; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 213] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 213] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.60612750,  4.23385715,  0.99936318,  2.04068422, -0.70643765,
          3.00155044,  1.31167316,  4.90406227,  3.47214842]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
         -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.78284311, -8.25498867, -3.91874337, -1.90788758, -4.97474670,
          -1.46400177, -6.09554291, -3.89886856, -8.36994171, -6.97793961]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.44388580]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.03650784, -1.00476182, -0.75079364,  ..., -0.68730158,
            -0.90952379, -1.62380958],
           [-0.44920623, -0.95714283, -0.67142856,  ..., -0.32222211,
            -0.65555555, -1.62380958],
           [-0.09999990, -0.92539680, -0.63968253,  ..., -0.22698402,
            -0.57619047, -1.63968253],
           ...,
           [-0.27460307, -0.29047608, -0.33809513,  ..., -0.87777776,
            -0.51269841, -0.48095238],
           [-0.30634910, -0.30634910, -0.33809513,  ..., -1.09999990,
            -0.65555555, -0.49682540],
           [-0.40158719, -0.40158719, -0.41746020,  ..., -1.29047608,
            -0.87777776, -0.62380952]],

          [[-1.62640905, -1.72302747, -1.65861523,  ..., -1.49758446,
            -1.57809973, -1.75523353],
           [-1.38486302, -1.77133656, -1.61030602,  ..., -1.35265696,
            -1.49758446, -1.75523353],
           [-1.09500802, -1.80354273, -1.62640905,  ..., -1.22383249,
            -1.40096617, -1.75523353],
           ...,
           [-1.25603855, -1.25603855, -1.28824472,  ..., -0.72463763,
            -0.43478248, -0.51529789],
           [-1.28824472, -1.25603855, -1.28824472,  ..., -0.88566822,
            -0.48309177, -0.45088565],
           [-1.33655393, -1.33655393, -1.33655393,  ..., -1.12721407,
            -0.67632848, -0.46698871]],

          [[-1.48275876, -1.52773619, -1.49775124,  ..., -1.28785622,
            -1.34782624, -1.42278874],
           [-1.15292358, -1.55772126, -1.54272878,  ..., -1.12293863,
            -1.19790113, -1.42278874],
           [-0.89805096, -1.54272878, -1.51274371,  ..., -1.06296861,
            -1.13793111, -1.43778121],
           ...,
           [-0.94302845, -0.94302845, -0.95802099,  ..., -0.61319339,
            -0.38830581, -0.52323836],
           [-0.94302845, -0.94302845, -0.94302845,  ..., -0.70314842,
            -0.34332830, -0.38830581],
           [-0.98800600, -1.00299859, -1.00299859,  ..., -0.89805096,
            -0.52323836, -0.31334329]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0905 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 114, vnnlib ID: 114 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.20003605, -18.01286888, -15.99082375, -17.43127060, -15.99804783,
         -18.05647850, -17.26184273, -18.19654465, -14.18293667, -18.52462387]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [575]; unstable size 575; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 575] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 575] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 575] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 277] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.64699411, 2.80865264, 4.23958683, 2.61277151, 4.73358488, 3.88175774,
         4.35204315, 1.01147783, 5.09978390]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0494 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 115, vnnlib ID: 115 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.36256695, -13.41296291,  -7.44461441,  -8.80130768,  -6.03208971,
          -9.45968819,  -8.73321247,  -9.01270103, -12.02322006, -13.37573814]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [544]; unstable size 544; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 300, 1, 544] with unstable size 299 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 544] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [299]; unstable size 299; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 299] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 299] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.81327713, 5.48521566, 0.46946692, 1.82796884, 2.35864878, 1.48084819,
         1.92163372, 4.35953045, 5.34309340]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0696 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 116, vnnlib ID: 116 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
         -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 163, 1, 659] with unstable size 162 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 659] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [162]; unstable size 162; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 162] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 162] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.62464428,  3.89426327,  0.79460716,  0.29400688,  1.47056687,
          1.78599668, -0.22968006,  2.20870352,  2.15642929]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
         -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.99it/s]100%|██████████| 1/1 [00:00<00:00,  7.98it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.90304852, -7.36696625, -3.67232847, -2.66886687, -4.13059711,
          -2.08577442, -4.73096037, -2.15597296, -6.01519966, -5.56542158]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07019854]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1282 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 16.392478942871094
alpha/beta optimization time: 1.3353445529937744
initial alpha-crown bounds: tensor([[ 3.67620087,  3.94920087,  0.83800292,  0.30350494,  1.50146961,
          1.81741738, -0.19317842,  2.29632759,  2.20353174]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.19317841529846191
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6427 seconds.
lower bounds for all target labels: [3.6761999130249023, 3.9492015838623047, 0.8380028009414673, 0.30350491404533386, 1.501469612121582, 1.817416787147522, -0.19317877292633057, 2.296327590942383, 2.2035317420959473]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [6]
start creating model mps for candidates: ['lay/16_6']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 147488 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.38043999671936
Verifying property 0 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.9492008686065674.

Properties batch 1, size 1
Remaining timeout: 198.16150856018066
Verifying property 1 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.6762008666992188.

Properties batch 2, size 1
Remaining timeout: 198.05618691444397
Verifying property 2 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.296327590942383.

Properties batch 3, size 1
Remaining timeout: 197.9627161026001
Verifying property 3 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.2035317420959473.

Properties batch 4, size 1
Remaining timeout: 197.87003302574158
Verifying property 4 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8174173831939697.

Properties batch 5, size 1
Remaining timeout: 197.77826237678528
Verifying property 5 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.501469612121582.

Properties batch 6, size 1
Remaining timeout: 197.6863899230957
Verifying property 6 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8380029201507568.

Properties batch 7, size 1
Remaining timeout: 197.59361815452576
Verifying property 7 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.30350494384765625.

Properties batch 8, size 1
Remaining timeout: 197.50110268592834
Verifying property 8 with 1 instances.
##### Instance 116 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.19317842]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.81765366, -7.31970978, -3.61689496, -2.33775973, -4.04815769,
        -1.70513523, -4.43761539, -2.28235054, -5.83187103, -5.49887180],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.19317842]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 659
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 159
Node /15 input 0: size torch.Size([100]) unstable 16
-----------------
# of unstable neurons: 834
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008304119110107422
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 11] 
split level 1: [/input-12, 6] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 68] 
split level 4: [/input-12, 10] 
split level 5: [/input-12, 53] 
split level 6: [/input-8, 1460] 
split level 7: [/input-8, 1506] 
pruning_in_iteration open status: True
ratio of positive domain = 224 / 256 = 0.875
pruning-in-iteration extra time: 0.005138397216796875
Time: prepare 0.0033    bound 0.1326    transfer 0.0049    finalize 0.0021    func 0.1428    
Accumulated time: func 0.1428    prepare 0.0037    bound 0.1326    transfer 0.0049    finalize 0.0021    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09814 (8), -0.09185 (8), -0.08991 (8), -0.08727 (8), -0.08355 (8), -0.07996 (8), -0.07937 (8), -0.07618 (8), -0.07220 (8), -0.07210 (8), -0.07139 (8), -0.06606 (8), -0.06552 (8), -0.06294 (8), -0.06216 (8), -0.06195 (8), -0.06014 (8), -0.05605 (8), -0.05428 (8), -0.05148 (8), 
Length of domains: 32
Time: pickout 0.0006    decision 0.0279    set_bounds 0.0225    solve 0.1429    add 0.0658    
Accumulated time: pickout 0.0006    decision 0.0279    set_bounds 0.0225    solve 0.1429    add 0.0658    
Current (lb-rhs): -0.09814321994781494
32 domains visited
Cumulative time: 0.2695605754852295

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 32
splitting decisions: 
split level 0: [/input-8, 926] [/input-8, 926] [/input-8, 1058] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] [/input-8, 926] 
split level 1: [/input-8, 1453] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-8, 162] [/input-8, 1461] [/input-12, 64] [/input-12, 64] [/input-8, 1453] [/input-12, 64] 
split level 2: [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] [/input-8, 1461] [/input-8, 993] [/input-8, 993] [/input-8, 993] [/input-8, 1461] [/input-8, 1461] 
pruning_in_iteration open status: True
ratio of positive domain = 88 / 256 = 0.34375
pruning-in-iteration extra time: 0.004608631134033203
Time: prepare 0.0054    bound 0.2051    transfer 0.0009    finalize 0.0019    func 0.2135    
Accumulated time: func 0.3563    prepare 0.0094    bound 0.3377    transfer 0.0057    finalize 0.0040    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08994 (11), -0.08778 (11), -0.08333 (11), -0.08172 (11), -0.08113 (11), -0.07950 (11), -0.07936 (11), -0.07840 (11), -0.07503 (11), -0.07274 (11), -0.07209 (11), -0.07114 (11), -0.07098 (11), -0.07032 (11), -0.06898 (11), -0.06853 (11), -0.06755 (11), -0.06680 (11), -0.06648 (11), -0.06627 (11), 
Length of domains: 168
Time: pickout 0.0076    decision 0.0307    set_bounds 0.0116    solve 0.2136    add 0.0812    
Accumulated time: pickout 0.0082    decision 0.0585    set_bounds 0.0341    solve 0.3565    add 0.1469    
Current (lb-rhs): -0.08993947505950928
200 domains visited
Cumulative time: 0.6220438480377197

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 168
splitting decisions: 
split level 0: [/input-8, 162] [/input-12, 64] [/input-12, 64] [/input-8, 162] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] [/input-12, 64] 
pruning_in_iteration open status: True
ratio of positive domain = 103 / 336 = 0.30654761904761907
pruning-in-iteration extra time: 0.005969524383544922
Time: prepare 0.0074    bound 0.2463    transfer 0.0116    finalize 0.0046    func 0.2732    
Accumulated time: func 0.6296    prepare 0.0171    bound 0.5840    transfer 0.0173    finalize 0.0087    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08740 (12), -0.08525 (12), -0.08076 (12), -0.07923 (12), -0.07854 (12), -0.07711 (12), -0.07698 (12), -0.07613 (12), -0.07243 (12), -0.07013 (12), -0.06979 (12), -0.06892 (12), -0.06842 (12), -0.06794 (12), -0.06615 (12), -0.06587 (12), -0.06462 (12), -0.06402 (12), -0.06390 (12), -0.06361 (12), 
Length of domains: 233
Time: pickout 0.0157    decision 0.0300    set_bounds 0.0079    solve 0.2734    add 0.0841    
Accumulated time: pickout 0.0239    decision 0.0885    set_bounds 0.0420    solve 0.6299    add 0.2310    
Current (lb-rhs): -0.08740460872650146
433 domains visited
Cumulative time: 1.0605299472808838

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 233
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1453] [/input-8, 1265] [/input-8, 1058] [/input-8, 1453] [/input-8, 1265] [/input-8, 162] [/input-8, 1453] [/input-8, 1265] [/input-8, 162] 
pruning_in_iteration open status: False
ratio of positive domain = 61 / 466 = 0.13090128755364805
pruning-in-iteration extra time: 9.822845458984375e-05
Time: prepare 0.0137    bound 0.1319    transfer 0.0199    finalize 0.0064    func 0.1727    
Accumulated time: func 0.8023    prepare 0.0311    bound 0.7158    transfer 0.0372    finalize 0.0150    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08515 (13), -0.08273 (13), -0.07904 (13), -0.07851 (13), -0.07784 (13), -0.07675 (13), -0.07600 (13), -0.07599 (13), -0.07492 (13), -0.07414 (13), -0.07236 (13), -0.07173 (13), -0.07108 (13), -0.07077 (13), -0.06998 (13), -0.06859 (13), -0.06761 (13), -0.06727 (13), -0.06721 (13), -0.06670 (13), 
Length of domains: 400
Time: pickout 0.0245    decision 0.0553    set_bounds 0.0153    solve 0.1730    add 0.0795    
Accumulated time: pickout 0.0485    decision 0.1438    set_bounds 0.0573    solve 0.8029    add 0.3105    
Current (lb-rhs): -0.08514750003814697
833 domains visited
Cumulative time: 1.411895513534546

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 400
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 1329] [/input, 2430] [/input-12, 64] [/input-8, 1329] [/input-8, 1453] [/input-8, 1058] [/input-8, 1329] [/input-8, 1453] [/input-8, 1058] 
pruning_in_iteration open status: False
ratio of positive domain = 90 / 800 = 0.11250000000000004
pruning-in-iteration extra time: 5.3882598876953125e-05
Time: prepare 0.0189    bound 0.1114    transfer 0.0390    finalize 0.0093    func 0.1789    
Accumulated time: func 0.9812    prepare 0.0502    bound 0.8272    transfer 0.0762    finalize 0.0243    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08289 (14), -0.08047 (14), -0.07675 (14), -0.07617 (14), -0.07612 (14), -0.07553 (14), -0.07453 (14), -0.07372 (14), -0.07368 (14), -0.07334 (14), -0.07227 (14), -0.07192 (14), -0.07060 (14), -0.06998 (14), -0.06997 (14), -0.06996 (14), -0.06956 (14), -0.06942 (14), -0.06872 (14), -0.06871 (14), 
Length of domains: 706
Time: pickout 0.0097    decision 0.0427    set_bounds 0.0287    solve 0.1794    add 0.0224    
Accumulated time: pickout 0.0582    decision 0.1866    set_bounds 0.0860    solve 0.9822    add 0.3329    
Current (lb-rhs): -0.08288860321044922
1539 domains visited
Cumulative time: 1.696824550628662

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 706
splitting decisions: 
split level 0: [/input-8, 1329] [/input, 436] [/input-8, 1453] [/input-8, 1329] [/input, 436] [/input, 2430] [/input-8, 1329] [/input, 436] [/input, 2430] [/input-8, 1329] 
pruning_in_iteration open status: False
ratio of positive domain = 105 / 1412 = 0.07436260623229463
pruning-in-iteration extra time: 7.176399230957031e-05
Time: prepare 0.0347    bound 0.1361    transfer 0.0313    finalize 0.0125    func 0.2165    
Accumulated time: func 1.1977    prepare 0.0859    bound 0.9634    transfer 0.1076    finalize 0.0367    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08162 (15), -0.07920 (15), -0.07825 (15), -0.07582 (15), -0.07547 (15), -0.07424 (15), -0.07414 (15), -0.07408 (15), -0.07346 (15), -0.07326 (15), -0.07240 (15), -0.07209 (15), -0.07174 (15), -0.07159 (15), -0.07143 (15), -0.07103 (15), -0.07083 (15), -0.07064 (15), -0.07036 (15), -0.06989 (15), 
Length of domains: 1297
Time: pickout 0.0219    decision 0.0698    set_bounds 0.0288    solve 0.2171    add 0.0887    
Accumulated time: pickout 0.0801    decision 0.2564    set_bounds 0.1149    solve 1.1993    add 0.4216    
Current (lb-rhs): -0.08161687850952148
2836 domains visited
Cumulative time: 2.1269006729125977

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 1297
splitting decisions: 
split level 0: [/input, 436] [/input-8, 993] [/input-8, 1467] [/input, 2430] [/input-8, 993] [/input-8, 1467] [/input, 436] [/input-8, 993] [/input-8, 1467] [/input, 436] 
pruning_in_iteration open status: False
ratio of positive domain = 232 / 2594 = 0.08943716268311486
pruning-in-iteration extra time: 5.602836608886719e-05
Time: prepare 0.0901    bound 0.1680    transfer 0.0661    finalize 0.0285    func 0.3537    
Accumulated time: func 1.5515    prepare 0.1762    bound 1.1314    transfer 0.1737    finalize 0.0653    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07819 (16), -0.07774 (16), -0.07577 (16), -0.07533 (16), -0.07466 (16), -0.07454 (16), -0.07224 (16), -0.07212 (16), -0.07202 (16), -0.07159 (16), -0.07124 (16), -0.07081 (16), -0.07072 (16), -0.07063 (16), -0.07036 (16), -0.07023 (16), -0.07004 (16), -0.06997 (16), -0.06983 (16), -0.06975 (16), 
Length of domains: 2352
Time: pickout 0.0393    decision 0.0962    set_bounds 0.0632    solve 0.3544    add 0.1111    
Accumulated time: pickout 0.1194    decision 0.3526    set_bounds 0.1780    solve 1.5537    add 0.5326    
Current (lb-rhs): -0.0781853199005127
5188 domains visited
Cumulative time: 2.808168411254883

BaB round 8
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 2352
splitting decisions: 
split level 0: [/input-8, 598] [/input-8, 1009] [/input, 2748] [/input-8, 598] [/input, 2748] [/input, 2748] [/input-8, 598] [/input-8, 1009] [/input, 2748] [/input, 2430] 
pruning_in_iteration open status: False
ratio of positive domain = 467 / 4704 = 0.0992772108843537
pruning-in-iteration extra time: 7.081031799316406e-05
Time: prepare 0.1359    bound 0.2413    transfer 0.0386    finalize 0.0330    func 0.4491    
Accumulated time: func 2.0006    prepare 0.3123    bound 1.3727    transfer 0.2123    finalize 0.0982    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07622 (17), -0.07578 (17), -0.07363 (17), -0.07319 (17), -0.07284 (17), -0.07273 (17), -0.07159 (17), -0.07115 (17), -0.07010 (17), -0.07000 (17), -0.06997 (17), -0.06956 (17), -0.06940 (17), -0.06893 (17), -0.06887 (17), -0.06880 (17), -0.06865 (17), -0.06844 (17), -0.06820 (17), -0.06814 (17), 
Length of domains: 4201
Time: pickout 0.0609    decision 0.1466    set_bounds 0.3763    solve 0.4501    add 0.1493    
Accumulated time: pickout 0.1802    decision 0.4991    set_bounds 0.5543    solve 2.0038    add 0.6819    
Current (lb-rhs): -0.07622158527374268
9389 domains visited
Cumulative time: 4.008350849151611

BaB round 9
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 4096
splitting decisions: 
split level 0: [/input-8, 93] [/input-8, 1453] [/input-8, 993] [/input-8, 162] [/input-8, 1009] [/input-8, 1329] [/input-8, 598] [/input-8, 93] [/input-8, 1329] [/input-8, 598] 
pruning_in_iteration open status: False
ratio of positive domain = 1002 / 8192 = 0.122314453125
pruning-in-iteration extra time: 6.461143493652344e-05
Time: prepare 0.2356    bound 0.3655    transfer 0.0459    finalize 0.2208    func 0.8689    
Accumulated time: func 2.8695    prepare 0.5482    bound 1.7382    transfer 0.2582    finalize 0.3190    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07367 (18), -0.07323 (18), -0.07302 (18), -0.07258 (18), -0.07167 (18), -0.07124 (18), -0.07029 (18), -0.07017 (18), -0.06964 (18), -0.06963 (18), -0.06956 (17), -0.06952 (18), -0.06919 (18), -0.06828 (18), -0.06820 (17), -0.06816 (18), -0.06803 (18), -0.06668 (18), -0.06664 (18), -0.06654 (18), 
Length of domains: 7226
Time: pickout 0.0859    decision 0.2440    set_bounds 0.1807    solve 0.8705    add 0.1618    
Accumulated time: pickout 0.2662    decision 0.7431    set_bounds 0.7350    solve 2.8743    add 0.8437    
Current (lb-rhs): -0.07366609573364258
16510 domains visited
current_vram/total_varm: 9.9GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.569669961929321

BaB round 10
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 7226
splitting decisions: 
split level 0: [/input, 2430] [/input, 2748] [/input-8, 479] [/input, 436] [/input-8, 1009] [/input-8, 479] [/input, 2430] [/input, 2748] [/input-8, 1329] [/input-8, 598] 
pruning_in_iteration open status: False
ratio of positive domain = 1905 / 14452 = 0.1318156656518129
pruning-in-iteration extra time: 0.00011801719665527344
Time: prepare 0.4060    bound 0.6184    transfer 0.0795    finalize 0.1217    func 1.2272    
Accumulated time: func 4.0967    prepare 0.9545    bound 2.3566    transfer 0.3377    finalize 0.4407    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07242 (19), -0.07197 (19), -0.07176 (19), -0.07133 (19), -0.06912 (19), -0.06904 (19), -0.06892 (19), -0.06868 (19), -0.06846 (19), -0.06838 (19), -0.06827 (19), -0.06802 (19), -0.06760 (18), -0.06708 (19), -0.06664 (19), -0.06643 (19), -0.06625 (18), -0.06599 (19), -0.06572 (19), -0.06560 (19), 
Length of domains: 12386
Time: pickout 0.1285    decision 0.4384    set_bounds 0.4869    solve 1.2304    add 0.1912    
Accumulated time: pickout 0.3947    decision 1.1815    set_bounds 1.2219    solve 4.1048    add 1.0348    
Current (lb-rhs): -0.07241642475128174
28896 domains visited
Cumulative time: 8.078296422958374

BaB round 11
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0027
batch: 8192
splitting decisions: 
split level 0: [/input, 2446] [/input-8, 479] [/input-8, 1466] [/input, 2430] [/input-8, 1466] [/input-8, 993] [/input-8, 1467] [/input, 455] [/input-8, 1466] [/input-8, 479] 
pruning_in_iteration open status: False
ratio of positive domain = 2469 / 16384 = 0.15069580078125
pruning-in-iteration extra time: 9.012222290039062e-05
Time: prepare 0.4612    bound 0.6835    transfer 0.0907    finalize 0.1237    func 1.3612    
Accumulated time: func 5.4578    prepare 1.4160    bound 3.0401    transfer 0.4285    finalize 0.5644    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07242 (19), -0.07197 (19), -0.07133 (19), -0.06984 (20), -0.06912 (19), -0.06904 (19), -0.06892 (19), -0.06868 (19), -0.06827 (19), -0.06811 (20), -0.06760 (18), -0.06722 (20), -0.06708 (19), -0.06678 (20), -0.06664 (19), -0.06646 (20), -0.06625 (18), -0.06572 (19), -0.06560 (19), -0.06545 (19), 
Length of domains: 17935
Time: pickout 0.1448    decision 0.6793    set_bounds 0.5627    solve 1.3649    add 0.2495    
Accumulated time: pickout 0.5395    decision 1.8608    set_bounds 1.7845    solve 5.4697    add 1.2843    
Current (lb-rhs): -0.07241642475128174
42637 domains visited
current_vram/total_varm: 22.9GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.129559516906738

BaB round 12
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 16384
splitting decisions: 
split level 0: [/input-8, 1017] [/input, 2446] [/input-8, 93] [/input, 2446] [/input-8, 598] [/input, 455] [/input-8, 598] [/input, 2430] [/input-8, 93] [/input, 2430] 
pruning_in_iteration open status: False
ratio of positive domain = 5888 / 32768 = 0.1796875
pruning-in-iteration extra time: 0.00018262863159179688
Time: prepare 0.9136    bound 1.3092    transfer 0.1743    finalize 0.4947    func 2.8940    
Accumulated time: func 8.3519    prepare 2.3301    bound 4.3494    transfer 0.6027    finalize 1.0591    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07242 (19), -0.07197 (19), -0.06941 (20), -0.06912 (19), -0.06904 (19), -0.06892 (19), -0.06868 (19), -0.06823 (21), -0.06767 (20), -0.06760 (18), -0.06649 (21), -0.06634 (20), -0.06625 (18), -0.06583 (20), -0.06580 (21), -0.06572 (19), -0.06562 (21), -0.06560 (19), -0.06545 (19), -0.06539 (20), 
Length of domains: 28049
Time: pickout 0.2750    decision 1.6796    set_bounds 0.9365    solve 2.9004    add 0.2389    
Accumulated time: pickout 0.8145    decision 3.5404    set_bounds 2.7211    solve 8.3701    add 1.5233    
Current (lb-rhs): -0.07241642475128174
69135 domains visited
current_vram/total_varm: 33.9GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.214249849319458

BaB round 13
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts: total 518 constraints, 26031 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2223
batch: 28049
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 993] [/input-8, 93] [/input-8, 1466] [/input-8, 993] [/input-8, 479] [/input-8, 1009] [/input-8, 969] [/input-8, 93] [/input-8, 1009] [/input-8, 993] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.07050085067749023
10 lb beta sum: 24.385896682739258, worst -0.03792530298233032
pruning_in_iteration open status: True
ratio of positive domain = 53874 / 56098 = 0.9603550928731862
pruning-in-iteration extra time: 0.0057485103607177734
Time: prepare 1.5924    bound 6.1435    transfer 0.3912    finalize 0.7967    func 9.2836    
Accumulated time: func 17.6355    prepare 3.9229    bound 10.4929    transfer 0.9939    finalize 1.8558    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02624 (20), -0.02494 (20), -0.02439 (21), -0.02438 (20), -0.02432 (20), -0.02429 (20), -0.02331 (20), -0.02314 (22), -0.02311 (21), -0.02311 (20), -0.02285 (20), -0.02247 (22), -0.02247 (20), -0.02187 (19), -0.02187 (22), -0.02182 (20), -0.02166 (22), -0.02163 (21), -0.02162 (21), -0.02150 (22), 
Length of domains: 2224
Time: pickout 0.4779    decision 3.1743    set_bounds 1.5999    solve 9.2947    add 0.1543    
Accumulated time: pickout 1.2924    decision 6.7147    set_bounds 4.3210    solve 17.6648    add 1.6776    
Current (lb-rhs): -0.026240646839141846
71359 domains visited
Cumulative time: 32.43117594718933

BaB round 14
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts: total 853 constraints, 47343 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5591
batch: 2224
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2430] [/input-8, 93] [/input, 2430] [/input-8, 93] [/input-8, 93] [/input, 455] [/input, 2430] [/input-8, 93] [/input, 2430] [/input-8, 93] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06955862045288086
10 lb beta sum: 6.006307125091553, worst -0.028558090329170227
pruning_in_iteration open status: True
ratio of positive domain = 3997 / 4448 = 0.8986061151079137
pruning-in-iteration extra time: 0.002454042434692383
Time: prepare 0.1252    bound 1.0510    transfer 0.0297    finalize 0.0334    func 1.2688    
Accumulated time: func 18.9043    prepare 4.0483    bound 11.5438    transfer 1.0236    finalize 1.8892    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01287 (21), -0.01226 (21), -0.01067 (21), -0.01061 (22), -0.01044 (23), -0.01014 (21), -0.01003 (23), -0.00997 (21), -0.00984 (21), -0.00955 (23), -0.00946 (22), -0.00929 (21), -0.00921 (21), -0.00894 (23), -0.00892 (22), -0.00879 (21), -0.00866 (23), -0.00865 (21), -0.00861 (21), -0.00843 (23), 
Length of domains: 451
Time: pickout 0.0627    decision 0.1412    set_bounds 0.0994    solve 1.2696    add 0.0886    
Accumulated time: pickout 1.3552    decision 6.8559    set_bounds 4.4204    solve 18.9345    add 1.7662    
Current (lb-rhs): -0.012873515486717224
71810 domains visited
Cumulative time: 34.688851833343506

BaB round 15
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0019
batch: 451
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 598] [/input, 2430] [/input-8, 598] [/input-8, 598] [/input-8, 598] [/input-8, 1017] [/input-8, 598] [/input, 2430] [/input-8, 598] [/input, 2430] 
cut re-enabled after branching node selection
0 lb beta sum: 5.131765842437744, worst -0.012742623686790466
10 lb beta sum: 8.057025909423828, worst -0.025282323360443115
pruning_in_iteration open status: True
ratio of positive domain = 437 / 902 = 0.4844789356984479
pruning-in-iteration extra time: 0.004930257797241211
Time: prepare 0.0450    bound 0.4291    transfer 0.0065    finalize 0.0067    func 0.4947    
Accumulated time: func 19.3991    prepare 4.0936    bound 11.9729    transfer 1.0301    finalize 1.8959    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01274 (22), -0.01213 (22), -0.01067 (22), -0.00982 (22), -0.00945 (24), -0.00927 (23), -0.00914 (24), -0.00898 (22), -0.00891 (22), -0.00886 (22), -0.00881 (24), -0.00876 (23), -0.00870 (23), -0.00810 (22), -0.00810 (22), -0.00809 (22), -0.00805 (24), -0.00783 (22), -0.00765 (24), -0.00764 (22), 
Length of domains: 465
Time: pickout 0.0195    decision 0.0396    set_bounds 0.0187    solve 0.4949    add 0.0866    
Accumulated time: pickout 1.3747    decision 6.8955    set_bounds 4.4391    solve 19.4294    add 1.8528    
Current (lb-rhs): -0.012742623686790466
72275 domains visited
Cumulative time: 35.36090636253357

BaB round 16
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0015
batch: 465
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1467] [/input-8, 1467] [/input-8, 1467] [/input-8, 598] [/input-8, 598] [/input-8, 598] [/input-8, 598] [/input-8, 598] [/input-8, 1467] [/input-8, 1467] 
cut re-enabled after branching node selection
0 lb beta sum: 5.171503067016602, worst -0.012784585356712341
10 lb beta sum: 8.458183288574219, worst -0.023662984371185303
pruning_in_iteration open status: True
ratio of positive domain = 419 / 930 = 0.4505376344086022
pruning-in-iteration extra time: 0.004904508590698242
Time: prepare 0.0457    bound 0.3751    transfer 0.0082    finalize 0.0061    func 0.4413    
Accumulated time: func 19.8403    prepare 4.1395    bound 12.3479    transfer 1.0383    finalize 1.9020    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01274 (23), -0.01085 (23), -0.01058 (23), -0.00982 (23), -0.00979 (23), -0.00944 (23), -0.00936 (23), -0.00927 (23), -0.00923 (25), -0.00898 (23), -0.00896 (24), -0.00895 (23), -0.00891 (23), -0.00886 (23), -0.00881 (25), -0.00852 (24), -0.00810 (23), -0.00808 (25), -0.00807 (25), -0.00802 (23), 
Length of domains: 511
Time: pickout 0.0195    decision 0.0413    set_bounds 0.0195    solve 0.4425    add 0.0844    
Accumulated time: pickout 1.3942    decision 6.9369    set_bounds 4.4586    solve 19.8719    add 1.9371    
Current (lb-rhs): -0.012742623686790466
72786 domains visited
Cumulative time: 35.97894597053528

BaB round 17
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts: total 985 constraints, 55035 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6030
batch: 511
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 598] [/input, 2430] [/input-8, 598] [/input-8, 1467] [/input-8, 1467] [/input, 2430] [/input-8, 1017] [/input-8, 1017] [/input-8, 1467] [/input, 2430] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06551575660705566
10 lb beta sum: 6.702834129333496, worst -0.02503874897956848
pruning_in_iteration open status: True
ratio of positive domain = 814 / 1022 = 0.7964774951076321
pruning-in-iteration extra time: 0.001485586166381836
Time: prepare 0.0258    bound 0.3918    transfer 0.0027    finalize 0.0081    func 0.4350    
Accumulated time: func 20.2753    prepare 4.1655    bound 12.7397    transfer 1.0410    finalize 1.9101    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00966 (24), -0.00829 (24), -0.00829 (24), -0.00778 (24), -0.00754 (25), -0.00740 (24), -0.00719 (26), -0.00717 (24), -0.00710 (24), -0.00709 (24), -0.00694 (24), -0.00641 (24), -0.00638 (25), -0.00628 (24), -0.00627 (25), -0.00623 (24), -0.00621 (25), -0.00619 (24), -0.00590 (24), -0.00578 (24), 
Length of domains: 208
Time: pickout 0.0213    decision 0.0445    set_bounds 0.0212    solve 0.4352    add 0.0779    
Accumulated time: pickout 1.4154    decision 6.9814    set_bounds 4.4798    solve 20.3071    add 2.0150    
Current (lb-rhs): -0.009656459093093872
72994 domains visited
Cumulative time: 37.194292306900024

BaB round 18
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0009
batch: 208
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1058] [/input-8, 1018] [/input-8, 1018] [/input-8, 1265] [/input-8, 1265] [/input-8, 1265] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] 
cut re-enabled after branching node selection
0 lb beta sum: 5.678605079650879, worst -0.009565502405166626
10 lb beta sum: 12.270415306091309, worst -0.025400906801223755
pruning_in_iteration open status: True
ratio of positive domain = 259 / 416 = 0.6225961538461539
pruning-in-iteration extra time: 0.004819154739379883
Time: prepare 0.0209    bound 0.3867    transfer 0.0030    finalize 0.0028    func 0.4162    
Accumulated time: func 20.6916    prepare 4.1865    bound 13.1264    transfer 1.0440    finalize 1.9129    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00869 (25), -0.00829 (25), -0.00730 (25), -0.00727 (25), -0.00698 (25), -0.00694 (25), -0.00623 (25), -0.00618 (25), -0.00612 (25), -0.00594 (26), -0.00593 (27), -0.00569 (25), -0.00559 (27), -0.00559 (25), -0.00543 (27), -0.00515 (25), -0.00511 (27), -0.00503 (25), -0.00479 (27), -0.00474 (25), 
Length of domains: 157
Time: pickout 0.0149    decision 0.0242    set_bounds 0.0088    solve 0.4163    add 0.0760    
Accumulated time: pickout 1.4304    decision 7.0056    set_bounds 4.4886    solve 20.7234    add 2.0910    
Current (lb-rhs): -0.008686602115631104
73151 domains visited
Cumulative time: 37.74485468864441

BaB round 19
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0010
batch: 157
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 924] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 924] [/input-8, 924] [/input-8, 924] [/input-8, 1058] [/input-8, 924] 
cut re-enabled after branching node selection
0 lb beta sum: 5.6995625495910645, worst -0.006876170635223389
10 lb beta sum: 12.977277755737305, worst -0.02776724100112915
pruning_in_iteration open status: True
ratio of positive domain = 205 / 314 = 0.6528662420382165
pruning-in-iteration extra time: 0.004731893539428711
Time: prepare 0.0157    bound 0.3341    transfer 0.0009    finalize 0.0023    func 0.3553    
Accumulated time: func 21.0468    prepare 4.2025    bound 13.4605    transfer 1.0449    finalize 1.9152    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00672 (26), -0.00612 (26), -0.00558 (26), -0.00531 (26), -0.00452 (26), -0.00451 (26), -0.00439 (26), -0.00408 (27), -0.00400 (26), -0.00393 (26), -0.00388 (26), -0.00362 (26), -0.00355 (26), -0.00326 (28), -0.00319 (25), -0.00310 (28), -0.00306 (28), -0.00301 (26), -0.00294 (27), -0.00293 (28), 
Length of domains: 109
Time: pickout 0.0146    decision 0.0245    set_bounds 0.0065    solve 0.3553    add 0.0758    
Accumulated time: pickout 1.4450    decision 7.0301    set_bounds 4.4951    solve 21.0788    add 2.1668    
Current (lb-rhs): -0.006717503070831299
73260 domains visited
Cumulative time: 38.230599880218506

BaB round 20
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0010
batch: 109
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 924] [/input, 455] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 924] [/input-8, 924] [/input-8, 924] 
cut re-enabled after branching node selection
0 lb beta sum: 5.699141979217529, worst -0.007262468338012695
10 lb beta sum: 10.873866081237793, worst -0.019685596227645874
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 101 / 218 = 0.463302752293578
pruning-in-iteration extra time: 0.003265857696533203
Time: prepare 0.0110    bound 0.1980    transfer 0.0010    finalize 0.0014    func 0.2129    
Accumulated time: func 21.2597    prepare 4.2137    bound 13.6586    transfer 1.0459    finalize 1.9166    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00581 (27), -0.00489 (27), -0.00473 (27), -0.00452 (27), -0.00452 (27), -0.00452 (27), -0.00451 (27), -0.00447 (27), -0.00408 (28), -0.00408 (28), -0.00400 (27), -0.00388 (27), -0.00388 (27), -0.00379 (27), -0.00365 (27), -0.00355 (27), -0.00337 (27), -0.00326 (29), -0.00324 (27), -0.00320 (27), 
Length of domains: 117
Time: pickout 0.0145    decision 0.0210    set_bounds 0.0047    solve 0.2130    add 0.0766    
Accumulated time: pickout 1.4594    decision 7.0511    set_bounds 4.4998    solve 21.2917    add 2.2433    
Current (lb-rhs): -0.005808115005493164
73377 domains visited
Cumulative time: 38.56872081756592

BaB round 21
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 117
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1265] [/input-8, 110] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] 
cut re-enabled after branching node selection
0 lb beta sum: 5.671324729919434, worst -0.015223145484924316
10 lb beta sum: 5.916061878204346, worst -0.022785276174545288
pruning_in_iteration open status: True
ratio of positive domain = 146 / 234 = 0.6239316239316239
pruning-in-iteration extra time: 0.0013031959533691406
Time: prepare 0.0118    bound 0.2578    transfer 0.0008    finalize 0.0015    func 0.2735    
Accumulated time: func 21.5332    prepare 4.2257    bound 13.9164    transfer 1.0467    finalize 1.9182    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00489 (28), -0.00452 (28), -0.00452 (28), -0.00452 (28), -0.00400 (28), -0.00390 (28), -0.00371 (28), -0.00340 (28), -0.00338 (28), -0.00336 (28), -0.00327 (28), -0.00295 (28), -0.00294 (28), -0.00283 (28), -0.00266 (28), -0.00254 (29), -0.00247 (28), -0.00244 (28), -0.00237 (28), -0.00233 (28), 
Length of domains: 88
Time: pickout 0.0153    decision 0.0228    set_bounds 0.0051    solve 0.2736    add 0.0613    
Accumulated time: pickout 1.4747    decision 7.0739    set_bounds 4.5049    solve 21.5653    add 2.3046    
Current (lb-rhs): -0.004891455173492432
73465 domains visited
Cumulative time: 38.95579433441162

BaB round 22
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0006
batch: 88
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 924] [/input-8, 1467] [/input-8, 110] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] [/input-8, 1018] 
split level 1: [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] [/input-8, 1466] 
cut re-enabled after branching node selection
0 lb beta sum: 5.706376075744629, worst -0.0017954260110855103
10 lb beta sum: 95.71565246582031, worst -0.014564186334609985
Early stop at 13th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 331 / 352 = 0.9403409090909091
pruning-in-iteration extra time: 0.003247976303100586
Time: prepare 0.0176    bound 0.1789    transfer 0.0010    finalize 0.0022    func 0.2022    
Accumulated time: func 21.7354    prepare 4.2435    bound 14.0952    transfer 1.0477    finalize 1.9204    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00180 (30), -0.00157 (31), -0.00143 (30), -0.00131 (30), -0.00111 (30), -0.00086 (30), -0.00066 (30), -0.00064 (30), -0.00062 (32), -0.00056 (31), -0.00055 (31), -0.00053 (31), -0.00052 (31), -0.00036 (30), -0.00029 (32), -0.00028 (30), -0.00024 (30), -0.00023 (30), -0.00018 (30), -0.00015 (30), 
Length of domains: 21
Time: pickout 0.0071    decision 0.0209    set_bounds 0.0096    solve 0.2023    add 0.0472    
Accumulated time: pickout 1.4818    decision 7.0947    set_bounds 4.5144    solve 21.7676    add 2.3518    
Current (lb-rhs): -0.0017954260110855103
73486 domains visited
Cumulative time: 39.25374627113342

BaB round 23
Matched cut cplex process, internal label idx = 6
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0016
batch: 21
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] [/input-8, 110] 
split level 1: [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] [/input-8, 979] 
split level 2: [/input, 2446] [/input-8, 969] [/input, 2446] [/input, 2446] [/input-8, 969] [/input, 2446] [/input, 2446] [/input, 2446] [/input-8, 969] [/input-8, 969] 
split level 3: [/input-8, 969] [/input-8, 2039] [/input-8, 969] [/input-8, 969] [/input, 2446] [/input-8, 969] [/input-8, 969] [/input-8, 969] [/input-8, 2039] [/input-8, 2039] 
cut re-enabled after branching node selection
0 lb beta sum: 5.754629135131836, worst -0.007224708795547485
10 lb beta sum: 29.487375259399414, worst -0.010511159896850586

all verified at 17th iter
pruning_in_iteration open status: True
ratio of positive domain = 336 / 336 = 1.0
pruning-in-iteration extra time: 0.004469871520996094
Time: prepare 0.0168    bound 0.2841    transfer 0.0029    finalize 0.0023    func 0.3084    
Accumulated time: func 22.0438    prepare 4.2605    bound 14.3793    transfer 1.0507    finalize 1.9226    
all_split False
Length of domains: 0
Time: pickout 0.0014    decision 0.0206    set_bounds 0.0151    solve 0.3085    add 0.0001    
Accumulated time: pickout 1.4832    decision 7.1153    set_bounds 4.5296    solve 22.0761    add 2.3518    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
73486 domains visited
Cumulative time: 39.602338790893555

found process to kill: terminal indx = 6
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=116_spec=6_30263611.log
found process for pidx=6
kill process for pidx=6
Result: safe in 42.4932 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 117, vnnlib ID: 117 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.05410433,  -7.98528099,  -7.76803017,  -8.62869644,  -7.58290386,
          -9.83789062,  -8.41322899, -10.12581921,  -1.82107425,  -8.20621872]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [462]; unstable size 462; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 462] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 462] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 462] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 195] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.12438488, 5.28402233, 4.66859245, 5.64474869, 4.65305662, 6.76825237,
         5.48563194, 7.03934622, 5.25850201]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0797 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 118, vnnlib ID: 118 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.12188244,  -7.11672592, -10.05889606, -10.35688305, -11.79731369,
          -9.88283920, -13.23313427,  -9.69955254,  -9.69626141,  -8.79122162]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [485]; unstable size 485; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 133, 1, 485] with unstable size 132 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 485] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 485] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [132]; unstable size 132; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 132] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 132] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78854370, 1.30756712, 1.88600993, 3.26214075, 1.25751078, 4.64157295,
         1.15222788, 1.10766864, 0.93016058]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0414 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 119, vnnlib ID: 119 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.32807446, -12.10395241,  -6.98160744,  -7.09187889,  -7.17572021,
          -7.24349356,  -7.85012865,  -8.02880383, -10.09511280, -10.98221016]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [818]; unstable size 818; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 818] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 818] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 818] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 291] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.75854379,  3.26663160, -1.20437741, -1.10650277, -0.29332358,
         -0.34117436, -0.69933510,  1.05337429,  1.86989927]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.32807446, -12.10395241,  -6.98160744,  -7.09187889,  -7.17572021,
          -7.24349356,  -7.85012865,  -8.02880383, -10.09511280, -10.98221016]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.32807541, -12.10395432,  -6.98160744,  -7.09188032,  -7.17572117,
           -7.24349451,  -7.85012913,  -8.02880478, -10.09511280, -10.98221016],
         [ -9.32807541, -12.10395432,  -6.98160744,  -7.09188032,  -7.17572117,
           -7.24349451,  -7.85012913,  -8.02880478, -10.09511280, -10.98221016]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11027288,  0.08384085,  0.15161419,  0.75824881,  0.93692446]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]],


         [[[-1.11587298, -1.08412695, -0.89365077,  ..., -1.14761901,
            -1.21111107, -1.29047608],
           [-1.05238092, -1.00476182, -0.84603173,  ..., -0.51269841,
            -0.56031746, -0.63968253],
           [-0.41746020, -0.33809513, -0.29047608,  ...,  0.01111121,
            -0.06825387, -0.19523799],
           ...,
           [-0.48095238, -0.49682540, -0.49682540,  ..., -0.68730158,
            -0.71904761, -0.78253967],
           [-0.46507925, -0.48095238, -0.46507925,  ..., -0.60793650,
            -0.63968253, -0.71904761],
           [-0.38571417, -0.36984116, -0.35396814,  ..., -0.46507925,
            -0.49682540, -0.56031746]],

          [[-0.90177131, -0.93397743, -0.72463763,  ..., -1.17552328,
            -1.25603855, -1.36875999],
           [-0.88566822, -0.88566822, -0.67632848,  ..., -0.57971013,
            -0.64412236, -0.75684375],
           [-0.37037024, -0.28985494, -0.17713353,  ..., -0.09661824,
            -0.19323659, -0.35426718],
           ...,
           [-0.59581316, -0.61191624, -0.61191624,  ..., -0.98228657,
            -0.98228657, -0.98228657],
           [-0.59581316, -0.61191624, -0.59581316,  ..., -0.99838966,
            -0.95008045, -1.03059578],
           [-0.59581316, -0.57971013, -0.54750401,  ..., -0.70853460,
            -0.67632848, -0.75684375]],

          [[-0.49325335, -0.52323836, -0.28335828,  ..., -0.86806595,
            -0.95802099, -1.07796109],
           [-0.53823084, -0.52323836, -0.28335828,  ..., -0.34332830,
            -0.43328333, -0.55322337],
           [-0.14842562, -0.05847061,  0.10644694,  ...,  0.04647692,
            -0.05847061, -0.20839565],
           ...,
           [-0.55322337, -0.56821585, -0.56821585,  ..., -0.92803597,
            -0.91304344, -0.91304344],
           [-0.55322337, -0.56821585, -0.55322337,  ..., -0.86806595,
            -0.85307342, -0.92803597],
           [-0.53823084, -0.50824583, -0.49325335,  ..., -0.58320838,
            -0.58320838, -0.67316341]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0576 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 120, vnnlib ID: 120 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -3.83905172, -12.57908535,  -3.68583417,  -3.78964639,  -5.75812435,
          -4.08564281,  -7.30590010,  -4.61561012, -11.22108173, -10.78313065]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 99, 1, 686] with unstable size 98 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 6, 1, 686] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [98]; unstable size 98; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 6, 1, 98] with unstable size 5 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 98] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [5]; unstable size 5; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 5] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 7.90750790, -0.64292026, -0.82822943,  1.19824719, -0.54596645,
          2.64874268, -0.17078578,  6.71303511,  6.26933956]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -3.83905172, -12.57908535,  -3.68583417,  -3.78964639,  -5.75812435,
          -4.08564281,  -7.30590010,  -4.61561012, -11.22108173, -10.78313065]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -3.83905125, -12.57908630,  -3.68583441,  -3.78964591,  -5.75812483,
           -4.08564281,  -7.30589867,  -4.61561012, -11.22108078, -10.78313160],
         [ -3.83905125, -12.57908630,  -3.68583441,  -3.78964591,  -5.75812483,
           -4.08564281,  -7.30589867,  -4.61561012, -11.22108078, -10.78313160]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.15321684, -0.04940534,  0.24659157,  0.77655888]]],
       device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]],


         [[[1.51904786, 1.48730183, 1.48730183,  ..., 1.53492093,
            1.55079389, 1.56666696],
           [1.55079389, 1.53492093, 1.51904786,  ..., 1.58253992,
            1.61428595, 1.63015902],
           [1.58253992, 1.56666696, 1.56666696,  ..., 1.67777801,
            1.70952404, 1.72539711],
           ...,
           [1.51904786, 1.45555580, 1.45555580,  ..., 1.67777801,
            1.66190505, 1.66190505],
           [1.48730183, 1.42380977, 1.42380977,  ..., 1.69365108,
            1.66190505, 1.66190505],
           [1.50317490, 1.43968284, 1.43968284,  ..., 1.72539711,
            1.69365108, 1.67777801]],

          [[1.51368785, 1.48148179, 1.48148179,  ..., 1.51368785,
            1.51368785, 1.54589403],
           [1.54589403, 1.51368785, 1.51368785,  ..., 1.57810009,
            1.61030626, 1.62640929],
           [1.57810009, 1.56199706, 1.57810009,  ..., 1.72302771,
            1.73913074, 1.75523376],
           ...,
           [1.44927561, 1.38486338, 1.38486338,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.41706955, 1.35265732, 1.36876035,  ..., 1.72302771,
            1.72302771, 1.72302771],
           [1.43317258, 1.36876035, 1.38486338,  ..., 1.75523376,
            1.73913074, 1.73913074]],

          [[1.36581755, 1.33583248, 1.33583248,  ..., 1.36581755,
            1.36581755, 1.39580250],
           [1.39580250, 1.38081002, 1.36581755,  ..., 1.42578757,
            1.45577252, 1.47076499],
           [1.41079497, 1.41079497, 1.41079497,  ..., 1.54572761,
            1.56072009, 1.57571256],
           ...,
           [1.29085493, 1.23088503, 1.23088503,  ..., 1.54572761,
            1.56072009, 1.56072009],
           [1.26086998, 1.20089996, 1.20089996,  ..., 1.56072009,
            1.56072009, 1.56072009],
           [1.27586246, 1.21589243, 1.21589243,  ..., 1.57571256,
            1.57571256, 1.57571256]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0649 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 121, vnnlib ID: 121 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.86313248,  -8.44097900, -13.20821190, -13.39188290, -12.26532078,
         -13.55902863, -14.16451168, -12.10001564, -14.36103153, -11.35003471]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [533]; unstable size 533; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 226, 1, 533] with unstable size 225 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 533] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 533] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [225]; unstable size 225; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 225] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 225] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.58184528, 2.47265148, 2.70894527, 1.52923870, 2.67172527, 3.54394817,
         1.39659929, 3.88951111, 1.85305774]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0501 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 122, vnnlib ID: 122 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
         -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [470]; unstable size 470; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 470] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 470] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 470] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 190] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.83597183,  1.88928604,  2.30730438,  1.75963211,  2.61177826,
          3.72314739,  2.18467236, -1.76713753,  1.99258888]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
         -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.28887367,  -8.90356731, -12.90353107, -13.19761372, -12.63090992,
          -13.74266148, -14.50664043, -13.25693512,  -8.36382961, -11.89731884]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53973770]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.17936504, -0.97301590, -0.90952379,  ..., -1.27460313,
            -1.46507931, -1.29047608],
           [-1.13174593, -1.05238092, -0.83015871,  ..., -1.56031740,
            -1.65555561, -1.41746020],
           [-1.19523799, -1.17936504, -1.03650784,  ..., -1.44920623,
            -1.65555561, -1.52857137],
           ...,
           [ 0.69365084,  0.70952386,  0.72539687,  ..., -1.38571417,
            -1.43333328, -1.44920623],
           [ 0.74126989,  0.75714290,  0.77301592,  ..., -1.35396814,
            -1.41746020, -1.44920623],
           [ 0.77301592,  0.75714290,  0.72539687,  ..., -1.33809519,
            -1.38571417, -1.40158725]],

          [[-1.25603855, -0.91787434, -0.70853460,  ..., -0.91787434,
            -1.11111104, -0.91787434],
           [-1.20772946, -1.03059578, -0.67632848,  ..., -1.25603855,
            -1.38486302, -1.09500802],
           [-1.27214170, -1.23993552, -0.98228657,  ..., -1.17552328,
            -1.38486302, -1.23993552],
           ...,
           [ 0.53140104,  0.54750413,  0.56360716,  ..., -1.27214170,
            -1.32045078, -1.33655393],
           [ 0.57971025,  0.59581327,  0.61191636,  ..., -1.23993552,
            -1.30434775, -1.32045078],
           [ 0.61191636,  0.59581327,  0.57971025,  ..., -1.22383249,
            -1.28824472, -1.28824472]],

          [[-1.28785622, -1.07796109, -1.01799107,  ..., -1.37781119,
            -1.51274371, -1.42278874],
           [-1.22788620, -1.15292358, -0.92803597,  ..., -1.52773619,
            -1.55772126, -1.43778121],
           [-1.27286363, -1.28785622, -1.10794616,  ..., -1.21289361,
            -1.34782624, -1.36281872],
           ...,
           [ 0.54122955,  0.55622208,  0.57121456,  ..., -0.86806595,
            -0.91304344, -0.92803597],
           [ 0.58620709,  0.60119957,  0.60119957,  ..., -0.83808094,
            -0.89805096, -0.92803597],
           [ 0.61619210,  0.60119957,  0.58620709,  ..., -0.82308841,
            -0.88305843, -0.89805096]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0593 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 123, vnnlib ID: 123 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-21.10229683, -25.38055038, -21.73574066, -24.28678703, -25.19532585,
         -24.57376480, -24.21175194, -26.78511238, -20.36679649, -26.62832260]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [535]; unstable size 535; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 535] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 535] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 535] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 288] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.20215011,  3.29560685, -0.48173237,  2.02198029,  2.71108198,
          2.06479025,  1.99369478,  3.83842301,  4.76781845]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-21.10229683, -25.38055038, -21.73574066, -24.28678703, -25.19532585,
         -24.57376480, -24.21175194, -26.78511238, -20.36679649, -26.62832260]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-19.91583443, -24.71545410, -20.83208084, -23.43388939, -24.33002281,
          -23.67966270, -23.37922287, -25.72759819, -20.13323975, -25.80506325],
         [-19.91583443, -24.71545410, -20.83208084, -23.43388939, -24.33002281,
          -23.67966270, -23.37922287, -25.72759819, -20.13323975, -25.80506325]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.21740532,  0.69884109]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0093 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0529 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 124, vnnlib ID: 124 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.82584620, -7.63018703, -7.73003864, -7.25304461, -6.31065321,
         -8.23791885, -6.43050718, -6.84701109, -9.17996407, -7.64501524]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [632]; unstable size 632; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 261, 1, 632] with unstable size 260 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 632] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 632] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [260]; unstable size 260; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 260] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 260] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.27221322, -1.34621942, -1.80931854, -2.15861034, -2.98624802,
         -1.27028847, -2.80886650, -2.57974577, -0.39991617]], device='cuda:0') None
Remain 9 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.82584620, -7.63018703, -7.73003864, -7.25304461, -6.31065321,
         -8.23791885, -6.43050718, -6.84701109, -9.17996407, -7.64501524]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.82584524, -7.63018608, -7.73003769, -7.25304365, -6.31065226,
          -8.23791599, -6.43050575, -6.84701014, -9.17996311, -7.64501333],
         [-7.82584524, -7.63018608, -7.73003769, -7.25304365, -6.31065226,
          -8.23791599, -6.43050575, -6.84701014, -9.17996311, -7.64501333]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.18083191, -0.01482725,  0.08502436, -0.39196968, -1.33436108,
           0.59290266, -1.21450758, -0.79800320,  1.53494978]]],
       device='cuda:0')
number of violation:  5
clean attack image tensor([[[[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         ...,


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]],


         [[[-0.08412688, -0.29047608, -0.92539680,  ...,  2.02698421,
             2.01111126,  2.02698421],
           [ 0.45555562, -0.27460307, -0.94126981,  ...,  2.04285717,
             2.04285717,  2.04285717],
           [-0.16349196, -0.92539680, -0.89365077,  ...,  2.04285717,
             2.03492069,  2.04285717],
           ...,
           [ 0.74126989,  0.55079371,  0.43968260,  ...,  1.02698421,
             1.05873048,  1.21746063],
           [ 0.74126989,  0.51904768,  0.45555562,  ...,  0.90000004,
             1.01111114,  1.07460344],
           [ 0.66190481,  0.67777783,  0.66190481,  ...,  0.82063496,
             0.82063496,  0.97936511]],

          [[ 0.03220624, -0.09661824, -0.74074072,  ...,  2.09339786,
             2.07729483,  2.09339786],
           [ 0.56360716, -0.14492741, -0.80515295,  ...,  2.10950065,
             2.10950065,  2.10950065],
           [-0.04830906, -0.78904986, -0.74074072,  ...,  2.10950065,
             2.10144925,  2.10950065],
           ...,
           [ 0.35426742,  0.12882459,  0.04830930,  ...,  0.69243163,
             0.72463775,  0.91787446],
           [ 0.32206130,  0.12882459,  0.08051541,  ...,  0.54750413,
             0.66022551,  0.74074084],
           [ 0.27375212,  0.27375212,  0.20933989,  ...,  0.46698883,
             0.48309189,  0.66022551]],

          [[ 0.06146942, -0.11844061, -0.80809593,  ...,  2.08545780,
             2.08545780,  2.08545780],
           [ 0.61619210, -0.16341813, -0.86806595,  ...,  2.10045004,
             2.10045004,  2.10045004],
           [-0.02848560, -0.79310340, -0.82308841,  ...,  2.10045004,
             2.08545780,  2.10045004],
           ...,
           [ 0.09145443, -0.08845562, -0.13343313,  ...,  0.52623707,
             0.55622208,  0.67616212],
           [ 0.07646193, -0.10344811, -0.11844061,  ...,  0.37631202,
             0.49625200,  0.51124454],
           [ 0.03148442,  0.01649191, -0.04347810,  ...,  0.28635699,
             0.27136448,  0.43628204]]]]], device='cuda:0') torch.Size([1, 9, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0489 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 125, vnnlib ID: 125 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555538,
          -8.77996826, -10.66582012,  -9.75414944,  -7.47076607,  -8.44103909]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [743]; unstable size 743; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 170, 1, 743] with unstable size 169 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 743] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 743] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [169]; unstable size 169; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 169] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 169] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.60137367, -0.36385402, -1.25714445, -1.13711500, -0.05323458,
         -1.18300915,  0.78644705, -0.01430035, -2.42923450]], device='cuda:0') None
Remain 8 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555538,
          -8.77996826, -10.66582012,  -9.75414944,  -7.47076607,  -8.44103909]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555729,
           -8.77996826, -10.66582012,  -9.75414848,  -7.47076511,  -8.44103909],
         [ -8.10437679,  -8.96013069,  -8.69070339,  -8.62474823,  -9.76555729,
           -8.77996826, -10.66582012,  -9.75414848,  -7.47076511,  -8.44103909]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.33666229,  0.51909161,  0.24966431,  0.18370914,  1.32451820,
           0.33892918,  1.31310940, -0.97027397]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         ...,


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]],


         [[[ 1.94761932,  1.93174624,  1.91587329,  ...,  1.78888917,
             1.42380977,  0.66190481],
           [ 1.88412726,  1.86825418,  1.85238123,  ...,  1.26507962,
             0.36031753,  0.15396833],
           [ 1.91587329,  1.91587329,  1.90000021,  ...,  0.63015878,
             0.04285724,  0.04285724],
           ...,
           [ 1.21746063,  1.18571460,  1.16984153,  ..., -1.22698402,
            -1.29047608, -1.35396814],
           [ 1.16984153,  1.13809550,  1.12222254,  ..., -1.25873005,
            -1.09999990, -1.09999990],
           [ 1.10634947,  1.05873048,  0.96349210,  ..., -1.08412695,
            -0.75079364, -0.29047608]],

          [[ 2.07729483,  2.06119204,  2.06119204,  ...,  1.91626441,
             1.54589403,  0.77294695],
           [ 2.01288271,  1.99677968,  1.98067665,  ...,  1.27214205,
             0.35426742,  0.17713377],
           [ 2.04508877,  2.04508877,  2.02898574,  ...,  0.64412248,
             0.04830930,  0.11272153],
           ...,
           [ 1.12721443,  1.12721443,  1.15942061,  ..., -1.17552328,
            -1.23993552, -1.27214170],
           [ 1.11111140,  1.11111140,  1.14331758,  ..., -1.19162631,
            -1.03059578, -0.98228657],
           [ 1.11111140,  1.07890511,  1.01449287,  ..., -0.95008045,
            -0.59581316, -0.19323659]],

          [[ 2.08545780,  2.07046509,  2.07046509,  ...,  1.96551764,
             1.62069011,  0.91604215],
           [ 2.02548766,  2.01049519,  1.99550271,  ...,  1.29085493,
             0.43628204,  0.24137947],
           [ 2.05547261,  2.05547261,  2.04048014,  ...,  0.70614707,
             0.15142445,  0.19640197],
           ...,
           [ 1.20089996,  1.20089996,  1.20089996,  ..., -1.03298354,
            -1.09295356, -1.13793111],
           [ 1.17091501,  1.17091501,  1.17091501,  ..., -1.00299859,
            -0.85307342, -0.82308841],
           [ 1.14092970,  1.12593722,  1.05097473,  ..., -0.76311839,
            -0.43328333, -0.04347810]]]]], device='cuda:0') torch.Size([1, 8, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0609 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 126, vnnlib ID: 126 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.85289669, -8.00897789, -3.25385118, -4.58932209, -3.74074745,
         -4.14678431, -4.96510458, -4.05580473, -7.93344116, -6.89174938]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 186, 1, 508] with unstable size 185 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 508] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [185]; unstable size 185; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 185] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 185] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.07057738,  2.60909176, -1.19970727,  0.02767643, -0.45064342,
          0.08406526, -0.38396728,  2.78343821,  1.49663734]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.85289669, -8.00897789, -3.25385118, -4.58932209, -3.74074745,
         -4.14678431, -4.96510458, -4.05580473, -7.93344116, -6.89174938]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.85289764, -8.00897884, -3.25385094, -4.58932209, -3.74074745,
          -4.14678431, -4.96510506, -4.05580473, -7.93344021, -6.89175034],
         [-6.85289764, -8.00897884, -3.25385094, -4.58932209, -3.74074745,
          -4.14678431, -4.96510506, -4.05580473, -7.93344021, -6.89175034]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.48689651,  0.40603685,  0.31505728]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]],


         [[[-1.15872920e-01, -8.41268823e-02, -1.15872920e-01,  ...,
             4.71428633e-01, -5.44444442e-01, -7.82539666e-01],
           [ 5.03174663e-01,  2.01587379e-01,  5.87302521e-02,  ...,
             7.09523857e-01, -5.12698412e-01, -8.30158710e-01],
           [ 8.20634961e-01,  5.03174663e-01,  2.96825469e-01,  ...,
             7.57142901e-01, -6.39682531e-01, -8.46031725e-01],
           ...,
           [-4.96825397e-01, -4.96825397e-01, -5.44444442e-01,  ...,
            -9.73015904e-01, -9.57142830e-01, -8.93650770e-01],
           [-5.76190472e-01, -6.23809516e-01, -6.07936502e-01,  ...,
            -7.66666651e-01, -9.25396800e-01, -9.57142830e-01],
           [-4.17460203e-01, -7.19047606e-01, -6.71428561e-01,  ...,
            -8.46031725e-01, -9.41269815e-01, -9.25396800e-01]],

          [[ 6.44122481e-01,  4.66988832e-01,  1.44927651e-01,  ...,
             9.82286692e-01, -5.79710126e-01, -8.69565189e-01],
           [ 1.14331758e+00,  8.69565308e-01,  4.34782714e-01,  ...,
             1.03059590e+00, -5.47504008e-01, -9.33977425e-01],
           [ 1.35265732e+00,  1.01449287e+00,  4.34782714e-01,  ...,
             7.72946954e-01, -6.92431509e-01, -9.50080454e-01],
           ...,
           [-9.66182351e-02,  1.22934580e-07,  1.22934580e-07,  ...,
            -1.51368749e+00, -1.35265696e+00, -1.09500802e+00],
           [-3.38164121e-01, -3.38164121e-01, -2.41545767e-01,  ...,
            -1.04669881e+00, -1.14331722e+00, -1.17552328e+00],
           [-3.22061062e-01, -4.83091772e-01, -3.22061062e-01,  ...,
            -9.33977425e-01, -1.06280184e+00, -1.07890499e+00]],

          [[-5.98200858e-01, -7.78110921e-01, -9.73013461e-01,  ...,
            -5.83208382e-01, -1.21289361e+00, -1.34782624e+00],
           [-2.38380641e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -4.33283329e-01, -1.27286363e+00, -1.28785622e+00],
           [-1.63418129e-01, -3.58320802e-01, -4.63268340e-01,  ...,
             1.51424453e-01, -1.42278874e+00, -1.34782624e+00],
           ...,
           [-8.08095932e-01, -7.03148425e-01, -9.88005996e-01,  ...,
            -1.49775124e+00, -1.43778121e+00, -1.40779614e+00],
           [-8.08095932e-01, -4.78260815e-01, -5.53223372e-01,  ...,
            -1.22788620e+00, -1.34782624e+00, -1.40779614e+00],
           [-7.48125911e-01, -8.83058429e-01, -1.04797614e+00,  ...,
            -1.24287868e+00, -1.30284870e+00, -1.24287868e+00]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0735 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 127, vnnlib ID: 127 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.57729053, -10.22089481,  -8.00115299,  -7.89926720,  -8.22076607,
          -9.08212662,  -9.97586060,  -9.23946381,  -7.82561684,  -9.45760345]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [685]; unstable size 685; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 209, 1, 685] with unstable size 208 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 685] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 685] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [208]; unstable size 208; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 208] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 208] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-1.39561701,  1.13157177, -1.32989621, -1.52063763, -1.36703968,
         -0.59409851,  0.40751481, -0.57752168,  0.47539353]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.57729053, -10.22089481,  -8.00115299,  -7.89926720,  -8.22076607,
          -9.08212662,  -9.97586060,  -9.23946381,  -7.82561684,  -9.45760345]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.57729101, -10.22089481,  -8.00115299,  -7.89926624,  -8.22076702,
           -9.08212757,  -9.97586155,  -9.23946476,  -7.82561779,  -9.45760345],
         [ -7.57729101, -10.22089481,  -8.00115299,  -7.89926624,  -8.22076702,
           -9.08212757,  -9.97586155,  -9.23946476,  -7.82561779,  -9.45760345]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.24832678,  0.17553520,  0.07364845,  0.39514923,  1.25650978,
           1.41384697]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]],


         [[[1.09047651, 1.07460344, 1.10634947,  ..., 0.94761908,
            0.90000004, 0.88412702],
           [1.16984153, 1.12222254, 1.12222254,  ..., 0.97936511,
            0.93174607, 0.91587305],
           [1.16984153, 1.10634947, 1.10634947,  ..., 0.93174607,
            0.90000004, 0.88412702],
           ...,
           [0.70952386, 0.66190481, 0.67777783,  ..., 0.50317466,
            0.47142863, 0.45555562],
           [0.77301592, 0.72539687, 0.72539687,  ..., 0.58253974,
            0.56666672, 0.53492069],
           [0.82063496, 0.75714290, 0.72539687,  ..., 0.64603180,
            0.59841275, 0.51904768]],

          [[1.01449287, 1.01449287, 1.03059590,  ..., 0.88566834,
            0.83735919, 0.82125610],
           [1.09500813, 1.04669893, 1.04669893,  ..., 0.90177143,
            0.86956531, 0.85346222],
           [1.09500813, 1.03059590, 1.03059590,  ..., 0.86956531,
            0.83735919, 0.80515307],
           ...,
           [0.69243163, 0.64412248, 0.66022551,  ..., 0.46698883,
            0.43478271, 0.41867965],
           [0.74074084, 0.69243163, 0.70853472,  ..., 0.51529801,
            0.49919492, 0.45088577],
           [0.75684386, 0.67632860, 0.69243163,  ..., 0.59581327,
            0.54750413, 0.48309189]],

          [[0.91604215, 0.91604215, 0.93103468,  ..., 0.84107965,
            0.79610211, 0.78110963],
           [0.99100471, 0.94602716, 0.94602716,  ..., 0.85607213,
            0.82608712, 0.81109464],
           [0.99100471, 0.93103468, 0.93103468,  ..., 0.82608712,
            0.79610211, 0.76611710],
           ...,
           [0.72113961, 0.69115460, 0.70614707,  ..., 0.52623707,
            0.49625200, 0.48125952],
           [0.78110963, 0.73613209, 0.75112462,  ..., 0.58620709,
            0.55622208, 0.52623707],
           [0.81109464, 0.73613209, 0.73613209,  ..., 0.64617711,
            0.60119957, 0.54122955]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0808 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 128, vnnlib ID: 128 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.12257195, -8.18585014, -3.72392344, -4.82489967, -3.27657938,
         -4.91832876, -4.09014797, -4.34730959, -7.98648739, -6.16137838]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [563]; unstable size 563; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 563] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 563] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 563] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 238] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.90272832,  1.91782355, -1.66059637, -0.46604246, -2.21083903,
         -0.55527359, -1.51988959,  1.75675297, -0.03911400]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.12257195, -8.18585014, -3.72392344, -4.82489967, -3.27657938,
         -4.91832876, -4.09014797, -4.34730959, -7.98648739, -6.16137838]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.12257195, -8.18585014, -3.72392321, -4.82489920, -3.27657890,
          -4.91832876, -4.09014797, -4.34730911, -7.98648739, -6.16137838],
         [-5.12257195, -8.18585014, -3.72392321, -4.82489920, -3.27657890,
          -4.91832876, -4.09014797, -4.34730911, -7.98648739, -6.16137838]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.03242397, -0.36622477,  0.73475122, -0.81356907,  0.82818079,
           0.25716114,  2.07123041]]], device='cuda:0')
number of violation:  2
clean attack image tensor([[[[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         ...,


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]],


         [[[ 4.28572372e-02,  5.87302521e-02, -4.76180762e-03,  ...,
            -1.15872920e-01, -4.76180762e-03,  2.01587379e-01],
           [ 2.17460394e-01,  1.53968334e-01,  1.85714364e-01,  ...,
            -1.95237994e-01, -8.41268823e-02,  4.28572372e-02],
           [ 1.11112073e-02,  1.69841349e-01,  5.34920692e-01,  ...,
            -2.90476084e-01, -8.41268823e-02, -1.15872920e-01],
           ...,
           [ 5.34920692e-01, -1.16349196e+00, -1.95714283e+00,  ...,
            -4.49206233e-01, -5.28571427e-01, -3.85714173e-01],
           [ 1.69841349e-01, -1.05238092e+00, -1.63968253e+00,  ...,
            -2.74603069e-01, -6.07936502e-01, -4.80952382e-01],
           [ 7.46032670e-02, -5.28571427e-01, -9.73015904e-01,  ...,
            -2.74603069e-01, -3.85714173e-01, -3.69841158e-01]],

          [[ 1.93236828e-01,  1.61030710e-01,  4.83092964e-02,  ...,
            -1.28824353e-01, -1.61029361e-02,  1.61030710e-01],
           [ 3.05958241e-01,  2.09339887e-01,  2.41546005e-01,  ...,
            -1.28824353e-01, -3.22059989e-02,  6.44123554e-02],
           [ 4.83092964e-02,  1.77133769e-01,  6.11916363e-01,  ...,
            -1.77133530e-01,  3.22062373e-02, -4.83090580e-02],
           ...,
           [ 4.66988832e-01, -1.22383249e+00, -1.95652175e+00,  ...,
            -5.79710126e-01, -7.08534598e-01, -5.79710126e-01],
           [ 1.12721533e-01, -1.11111104e+00, -1.65861523e+00,  ...,
            -4.02576357e-01, -7.89049864e-01, -6.60225391e-01],
           [ 3.22062373e-02, -5.95813155e-01, -1.03059578e+00,  ...,
            -4.34782475e-01, -5.63607037e-01, -4.99194801e-01]],

          [[ 2.86356986e-01,  1.81409463e-01,  9.14544314e-02,  ...,
             1.49940979e-03, -4.34781015e-02,  4.64769229e-02],
           [ 2.86356986e-01,  1.36431947e-01,  2.56371975e-01,  ...,
             3.14844176e-02, -1.34930937e-02,  3.14844176e-02],
           [-2.98350781e-01, -1.93403140e-01,  3.91304523e-01,  ...,
            -1.34930937e-02,  6.14694245e-02, -2.84855980e-02],
           ...,
           [ 1.96401969e-01, -1.12293863e+00, -1.69265378e+00,  ...,
            -9.43028450e-01, -9.13043439e-01, -8.68065953e-01],
           [-1.33433133e-01, -1.06296861e+00, -1.52773619e+00,  ...,
            -7.48125911e-01, -1.01799107e+00, -9.88005996e-01],
           [-1.93403140e-01, -6.43178403e-01, -1.07796109e+00,  ...,
            -7.33133376e-01, -9.28035975e-01, -8.68065953e-01]]]]],
       device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0655 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 129, vnnlib ID: 129 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.31356716, -13.91007519,  -9.13539219,  -8.59541893,  -8.22070026,
          -8.21194839, -10.18828583, -10.88986969, -10.20756531, -12.20699596]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [584]; unstable size 584; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 263, 1, 584] with unstable size 262 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 584] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 584] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [262]; unstable size 262; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 262] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 262] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.54147220,  3.51588011, -0.48492002, -0.11444467, -1.27845025,
          0.64233291,  1.06292796,  0.06253445,  1.78522730]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.31356716, -13.91007519,  -9.13539219,  -8.59541893,  -8.22070026,
          -8.21194839, -10.18828583, -10.88986969, -10.20756531, -12.20699596]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.34673309, -13.95642376,  -9.16665554,  -8.64614391,  -8.25977421,
           -8.26714993, -10.22789955, -10.93951607, -10.24353981, -12.25478077],
         [ -9.34673309, -13.95642376,  -9.16665554,  -8.64614391,  -8.25977421,
           -8.26714993, -10.22789955, -10.93951607, -10.24353981, -12.25478077]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.07958317,  0.89950562,  0.37899399, -0.00737572]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0705 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 130, vnnlib ID: 130 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.37966061, -10.86174870,  -6.27118492,  -7.18504333,  -4.88041210,
          -7.02919436,  -7.02008009,  -5.68175220, -12.22475624,  -9.74924088]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [468]; unstable size 468; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 468] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 468] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 468] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 197] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.92446542,  1.83843005, -1.80397630, -0.25452489, -3.28706479,
         -1.12619352, -2.72712803,  3.37554169,  1.23327696]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.37966061, -10.86174870,  -6.27118492,  -7.18504333,  -4.88041210,
          -7.02919436,  -7.02008009,  -5.68175220, -12.22475624,  -9.74924088]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.37965965, -10.86174679,  -6.27118492,  -7.18504381,  -4.88041258,
           -7.02919531,  -7.02007914,  -5.68175268, -12.22475624,  -9.74924088],
         [ -9.37965965, -10.86174679,  -6.27118492,  -7.18504381,  -4.88041258,
           -7.02919531,  -7.02007914,  -5.68175268, -12.22475624,  -9.74924088]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.75801039,  0.15584850, -2.14878273, -0.00911617, -1.34744263]]],
       device='cuda:0')
number of violation:  4
clean attack image tensor([[[[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]],


         [[[ 0.21746039,  0.43968260,  0.59841275,  ...,  0.75714290,
             0.69365084,  0.67777783],
           [ 0.01111121,  0.13809532,  0.24920642,  ...,  0.72539687,
             0.70952386,  1.02698421],
           [ 0.05873025,  0.23333341,  0.09047628,  ...,  0.43968260,
             0.63015878,  0.78888893],
           ...,
           [ 0.88412702,  0.83650798,  0.83650798,  ...,  0.77301592,
             0.85238099,  0.90000004],
           [ 0.96349210,  0.97936511,  0.94761908,  ...,  0.72539687,
             0.67777783,  0.69365084],
           [ 1.02698421,  1.09047651,  0.90000004,  ...,  0.59841275,
             0.32857150,  0.53492069]],

          [[ 0.20933989,  0.46698883,  0.74074084,  ...,  1.25603890,
             1.09500813,  0.98228669],
           [ 0.11272153,  0.28985518,  0.51529801,  ...,  1.12721443,
             1.03059590,  1.28824508],
           [ 0.25764906,  0.45088577,  0.46698883,  ...,  0.78904998,
             0.91787446,  1.03059590],
           ...,
           [ 1.54589403,  1.49758482,  1.48148179,  ...,  1.40096653,
             1.48148179,  1.51368785],
           [ 1.61030626,  1.61030626,  1.59420323,  ...,  1.36876035,
             1.32045114,  1.32045114],
           [ 1.62640929,  1.69082153,  1.49758482,  ...,  1.23993587,
             0.96618366,  1.15942061]],

          [[-0.32833579, -0.19340314,  0.03148442,  ...,  0.58620709,
             0.07646193, -0.08845562],
           [-0.43328333, -0.37331331, -0.23838064,  ...,  0.39130452,
             0.04647692,  0.28635699],
           [-0.43328333, -0.31334329, -0.44827583,  ...,  0.09145443,
             0.01649191,  0.12143944],
           ...,
           [ 0.66116959,  0.66116959,  0.66116959,  ...,  0.64617711,
             0.73613209,  0.81109464],
           [ 0.82608712,  0.84107965,  0.82608712,  ...,  0.63118458,
             0.60119957,  0.64617711],
           [ 0.91604215,  0.96101969,  0.75112462,  ...,  0.51124454,
             0.27136448,  0.49625200]]]]], device='cuda:0') torch.Size([1, 5, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0567 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 131, vnnlib ID: 131 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.35881138, -13.11242390,  -9.13916874, -10.32992744,  -9.78460979,
         -10.37751198, -11.98755741, -12.49197388,  -5.29605007, -12.74240780]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [574]; unstable size 574; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 574] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 574] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 574] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 192] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.78351939, 6.23856401, 2.09941626, 3.41462374, 2.79624486, 3.32998943,
         5.10516310, 5.41959763, 6.04746437]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0675 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 132, vnnlib ID: 132 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
         -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [660]; unstable size 660; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 143, 1, 660] with unstable size 142 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 660] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 660] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [142]; unstable size 142; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 142] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 142] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.91259766,  6.46374798,  5.83736515,  5.29915905,  7.56130886,
          6.20057487,  5.96402264,  1.06313705, -0.07201374]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
         -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.98it/s]100%|██████████| 1/1 [00:00<00:00,  7.97it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-10.66485786,  -8.80607510, -16.54650879, -15.81029320, -15.26687336,
          -17.61366844, -16.17134476, -15.95698166, -11.02882099,  -9.22151566]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.41544056]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1283 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 39.909873962402344
alpha/beta optimization time: 1.3593039512634277
initial alpha-crown bounds: tensor([[ 0.98155403,  6.54999447,  5.92335844,  5.37160492,  7.64936352,
          6.28046989,  6.04217768,  1.13449478, -0.02314568]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.023145675659179688
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6500 seconds.
lower bounds for all target labels: [0.9815545082092285, 6.549995422363281, 5.9233598709106445, 5.371604919433594, 7.649364471435547, 6.280471324920654, 6.042176246643066, 1.1344938278198242, -0.023145079612731934]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [8]
start creating model mps for candidates: ['lay/16_8']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.3343527317047
Verifying property 0 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 7.6493635177612305.

Properties batch 1, size 1
Remaining timeout: 198.08731055259705
Verifying property 1 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.549994468688965.

Properties batch 2, size 1
Remaining timeout: 197.96364617347717
Verifying property 2 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.28046989440918.

Properties batch 3, size 1
Remaining timeout: 197.84670281410217
Verifying property 3 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.042177677154541.

Properties batch 4, size 1
Remaining timeout: 197.73079633712769
Verifying property 4 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.92335844039917.

Properties batch 5, size 1
Remaining timeout: 197.61483907699585
Verifying property 5 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.371604919433594.

Properties batch 6, size 1
Remaining timeout: 197.49774622917175
Verifying property 6 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1344947814941406.

Properties batch 7, size 1
Remaining timeout: 197.37989974021912
Verifying property 7 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[-1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9815540313720703.

Properties batch 8, size 1
Remaining timeout: 197.25174188613892
Verifying property 8 with 1 instances.
##### Instance 132 first 10 spec matrices: 
tensor([[[ 0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.02314568]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.14653015,  -8.83935356, -17.06118393, -16.39709473, -15.91677952,
        -18.22977066, -16.70629501, -16.62640762, -11.32539654,  -9.82044125],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.02314568]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 660
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 139
Node /15 input 0: size torch.Size([100]) unstable 12
-----------------
# of unstable neurons: 811
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007526874542236328
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 32] 
split level 1: [/input-12, 37] 
split level 2: [/input-8, 1436] 
split level 3: [/input-12, 25] 
split level 4: [/input-8, 987] 
split level 5: [/input-12, 90] 
split level 6: [/input-12, 11] 
split level 7: [/input-8, 690] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.6253204345703125e-05
Time: prepare 0.0033    bound 0.0049    transfer 0.0044    finalize 0.0026    func 0.0153    
Accumulated time: func 0.0153    prepare 0.0037    bound 0.0049    transfer 0.0044    finalize 0.0026    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0265    set_bounds 0.0242    solve 0.0154    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0265    set_bounds 0.0242    solve 0.0154    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07290196418762207

the mip building process is not terminated yet, kill it
Result: safe in 3.2353 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 133, vnnlib ID: 133 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-16.25358391, -24.01944351, -13.62016106, -15.25064659, -19.34745598,
         -15.90201569, -19.20198250, -17.42230415, -21.89736557, -21.49999237]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [554]; unstable size 554; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 98, 1, 554] with unstable size 97 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 3, 1, 554] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 554] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [97]; unstable size 97; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 3, 1, 97] with unstable size 2 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 97] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [2]; unstable size 2; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 2] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.17918015, 9.69885063, 1.01258564, 5.11244965, 1.56947887, 4.91068363,
         3.15387440, 7.60085821, 7.21997929]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0562 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 134, vnnlib ID: 134 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
         -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [752]; unstable size 752; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 224, 1, 752] with unstable size 223 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 752] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 752] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [223]; unstable size 223; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 223] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 223] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.77094555,  1.88772798,  3.21973848,  2.86656547,  4.79594135,
          2.18563223,  4.89809704, -1.79894876,  2.22324061]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
         -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00686455, -14.29141140, -14.37695026, -15.86271286, -15.28532314,
          -17.60468292, -14.91024494, -17.65866089, -10.37097645, -14.77221203]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.63588810]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 1.15396857,  1.01111114,  1.01111114,  ...,  1.02698421,
             1.04285717,  1.10634947],
           [ 1.02698421,  0.94761908,  0.94761908,  ...,  1.12222254,
             1.12222254,  1.16984153],
           [ 0.99523818,  0.91587305,  0.86825401,  ...,  1.12222254,
             1.13809550,  1.16984153],
           ...,
           [-0.14761895, -0.41746020, -0.43333322,  ..., -0.36984116,
            -0.33809513, -0.41746020],
           [-0.30634910, -0.56031746, -0.57619047,  ..., -0.68730158,
            -0.54444444, -0.36984116],
           [-0.22698402, -0.33809513, -0.40158719,  ..., -0.59206349,
            -0.32222211, -0.14761895]],

          [[ 1.20772982,  1.06280196,  1.06280196,  ...,  1.07890511,
             1.09500813,  1.15942061],
           [ 1.07890511,  0.99838978,  0.99838978,  ...,  1.17552364,
             1.17552364,  1.22383285],
           [ 1.04669893,  0.96618366,  0.91787446,  ...,  1.17552364,
             1.19162667,  1.22383285],
           ...,
           [-0.11272129, -0.38647330, -0.40257636,  ..., -0.33816412,
            -0.30595800, -0.38647330],
           [-0.27375188, -0.53140092, -0.54750401,  ..., -0.66022539,
            -0.51529789, -0.33816412],
           [-0.19323659, -0.30595800, -0.37037024,  ..., -0.56360704,
            -0.28985494, -0.11272129]],

          [[ 1.26086998,  1.12593722,  1.12593722,  ...,  1.14092970,
             1.15592217,  1.21589243],
           [ 1.14092970,  1.06596720,  1.06596720,  ...,  1.23088503,
             1.23088503,  1.27586246],
           [ 1.11094475,  1.03598225,  0.99100471,  ...,  1.23088503,
             1.24587750,  1.27586246],
           ...,
           [ 0.03148442, -0.22338814, -0.23838064,  ..., -0.17841063,
            -0.14842562, -0.22338814],
           [-0.11844061, -0.35832080, -0.37331331,  ..., -0.47826082,
            -0.34332830, -0.17841063],
           [-0.04347810, -0.14842562, -0.20839565,  ..., -0.38830581,
            -0.13343313,  0.03148442]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0645 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 135, vnnlib ID: 135 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.44892406,  -4.04770756, -11.04793358,  -9.86121178,  -9.30945015,
         -10.61656761, -11.13577747,  -9.78641891,  -8.20079136,  -4.34282255]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 204, 1, 511] with unstable size 203 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 511] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [203]; unstable size 203; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 203] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 203] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.79137230,  4.81029129,  3.58750868,  3.09708118,  4.12102842,
          5.00578547,  3.13694286,  2.81165600, -0.60362864]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.44892406,  -4.04770756, -11.04793358,  -9.86121178,  -9.30945015,
         -10.61656761, -11.13577747,  -9.78641891,  -8.20079136,  -4.34282255]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.18832302, -3.46224546, -9.60307217, -8.47136879, -7.96284771,
          -9.14761257, -9.82332706, -8.34997749, -7.19332027, -3.19167089]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.27057457]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0074 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0746 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 136, vnnlib ID: 136 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.25000286, -9.54972458, -6.18170929, -5.75074911, -6.05999041,
         -5.86923456, -7.27043962, -7.67426729, -6.16280842, -8.88309860]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [683]; unstable size 683; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 150, 1, 683] with unstable size 149 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 683] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 683] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [149]; unstable size 149; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 149] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 149] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.00514364, 1.08236027, 0.27113527, 0.77234662, 0.24157715, 1.78406549,
         1.89451599, 0.67536914, 3.36466622]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0705 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 137, vnnlib ID: 137 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.10846710, -8.76792812, -2.56949711, -3.15299773, -2.80712223,
         -3.16891909, -2.61646676, -4.73773241, -8.38235092, -7.32381153]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [508]; unstable size 508; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 298, 1, 508] with unstable size 297 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 508] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 508] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [297]; unstable size 297; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 297] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 297] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63653517,  3.73463702, -1.26144516, -0.64267218, -1.08236945,
         -0.74575412,  0.71406746,  3.06179023,  2.80588961]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.10846710, -8.76792812, -2.56949711, -3.15299773, -2.80712223,
         -3.16891909, -2.61646676, -4.73773241, -8.38235092, -7.32381153]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.10846806, -8.76792812, -2.56949711, -3.15299821, -2.80712175,
          -3.16891956, -2.61646700, -4.73773289, -8.38235092, -7.32381201],
         [-6.10846806, -8.76792812, -2.56949711, -3.15299821, -2.80712175,
          -3.16891956, -2.61646700, -4.73773289, -8.38235092, -7.32381201]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.04696989,  0.53653121,  0.19065475,  0.55245256]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]],


         [[[-1.24285710, -1.30634916, -1.09999990,  ...,  0.05873025,
            -0.46507925, -0.57619047],
           [-1.11587298, -1.16349196, -1.09999990,  ..., -0.24285704,
            -0.65555555, -0.79841268],
           [-1.19523799, -1.13174593, -0.84603173,  ..., -0.14761895,
            -0.84603173, -0.75079364],
           ...,
           [ 1.15396857, -0.57619047, -1.44920623,  ..., -0.70317459,
            -0.68730158, -0.48095238],
           [ 1.63015902,  0.58253974, -0.02063482,  ..., -0.86190474,
            -0.79841268, -0.43333322],
           [ 1.67777801,  1.39206374,  1.16984153,  ..., -1.03650784,
            -1.08412695, -0.89365077]],

          [[-1.11111104, -1.20772946, -1.01449275,  ...,  0.08051541,
            -0.53140092, -0.62801927],
           [-1.01449275, -1.06280184, -0.98228657,  ..., -0.22544271,
            -0.64412236, -0.77294683],
           [-1.11111104, -1.01449275, -0.72463763,  ..., -0.11272129,
            -0.77294683, -0.72463763],
           ...,
           [ 0.99838978, -0.66022539, -1.30434775,  ..., -0.78904986,
            -0.85346210, -0.66022539],
           [ 1.52979100,  0.43478271, -0.06441211,  ..., -0.80515295,
            -0.77294683, -0.57971013],
           [ 1.64251232,  1.27214205,  0.95008057,  ..., -0.93397743,
            -1.04669881, -0.96618354]],

          [[-0.55322337, -0.70314842, -0.55322337,  ...,  0.60119957,
            -0.17841063, -0.23838064],
           [-0.52323836, -0.55322337, -0.46326834,  ...,  0.33133450,
            -0.17841063, -0.35832080],
           [-0.64317840, -0.58320838, -0.22338814,  ...,  0.40629703,
            -0.20839565, -0.28335828],
           ...,
           [ 1.08095968, -0.31334329, -0.65817088,  ..., -0.35832080,
            -0.56821585, -0.38830581],
           [ 1.53073502,  0.60119957,  0.40629703,  ..., -0.26836565,
            -0.35832080, -0.22338814],
           [ 1.66566753,  1.26086998,  1.03598225,  ..., -0.31334329,
            -0.55322337, -0.52323836]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0831 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 138, vnnlib ID: 138 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.98990536, -11.53243732,  -9.55218792,  -9.34306908,  -9.59223843,
         -10.21041489,  -9.89879131, -10.73451996, -10.49936199,  -8.82808018]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 578] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 578] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 188] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 9.28026199e-01, -4.45046544e-01, -7.57261992e-01, -6.84045792e-01,
         -8.52108002e-04, -3.69360447e-01,  3.41860175e-01,  4.21400487e-01,
         -1.54338682e+00]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.98990536, -11.53243732,  -9.55218792,  -9.34306908,  -9.59223843,
         -10.21041489,  -9.89879131, -10.73451996, -10.49936199,  -8.82808018]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.98990536, -11.53243637,  -9.55218792,  -9.34306812,  -9.59223938,
          -10.21041393,  -9.89879227, -10.73451996, -10.49936199,  -8.82808018],
         [ -8.98990536, -11.53243637,  -9.55218792,  -9.34306812,  -9.59223938,
          -10.21041393,  -9.89879227, -10.73451996, -10.49936199,  -8.82808018]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.56228256,  0.35316277,  0.60233402,  1.22050858,  0.90888691,
          -0.16182518]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]],


         [[[-0.81428570, -0.87777776, -0.94126981,  ...,  0.16984135,
             0.72539687,  1.91587329],
           [-0.94126981, -1.06825387, -1.11587298,  ...,  0.10634929,
             0.67777783,  1.88412726],
           [-1.03650784, -1.11587298, -1.08412695,  ...,  0.09047628,
             0.66190481,  1.90000021],
           ...,
           [ 1.21746063,  1.29682565,  1.40793681,  ...,  0.70952386,
             1.15396857,  1.96349227],
           [ 1.93174624,  1.86825418,  1.86825418,  ...,  1.83650815,
             1.93174624,  2.03492069],
           [ 2.04285717,  2.04285717,  2.04285717,  ...,  2.04285717,
             2.04285717,  2.04285717]],

          [[-0.38647330, -0.41867942, -0.43478248,  ...,  0.59581327,
             0.96618366,  2.01288271],
           [-0.45088565, -0.49919480, -0.51529789,  ...,  0.54750413,
             0.93397754,  1.99677968],
           [-0.49919480, -0.53140092, -0.54750401,  ...,  0.51529801,
             0.91787446,  2.01288271],
           ...,
           [ 1.30434811,  1.38486338,  1.49758482,  ...,  0.98228669,
             1.28824508,  2.02898574],
           [ 1.99677968,  1.93236744,  1.93236744,  ...,  1.98067665,
             1.99677968,  2.07729483],
           [ 2.10950065,  2.10950065,  2.10950065,  ...,  2.10950065,
             2.10950065,  2.10950065]],

          [[ 0.25637197,  0.27136448,  0.21139447,  ...,  1.05097473,
             1.21589243,  2.02548766],
           [ 0.18140946,  0.24137947,  0.16641696,  ...,  0.99100471,
             1.17091501,  2.01049519],
           [ 0.13643195,  0.21139447,  0.06146942,  ...,  0.97601217,
             1.17091501,  2.01049519],
           ...,
           [ 1.45577252,  1.53073502,  1.65067506,  ...,  1.24587750,
             1.42578757,  2.04048014],
           [ 2.02548766,  1.98051023,  1.98051023,  ...,  2.01049519,
             2.01049519,  2.08545780],
           [ 2.10045004,  2.10045004,  2.10045004,  ...,  2.10045004,
             2.09295392,  2.09295392]]]]], device='cuda:0') torch.Size([1, 6, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0807 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 139, vnnlib ID: 139 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
         -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [439]; unstable size 439; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 276, 1, 439] with unstable size 275 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 439] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 439] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [275]; unstable size 275; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 275] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 275] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.63732147,  4.43945456, -0.32904005,  1.63714910, -0.59455490,
          1.22534406,  1.17066205,  4.56741524,  4.21444511]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
         -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.85it/s]100%|██████████| 1/1 [00:00<00:00,  7.85it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.29735327, -9.85738373, -3.74970722, -5.51526499, -3.18233013,
          -5.30744696, -2.97519660, -5.53918982, -9.34112263, -9.30058861],
         [-7.29735327, -9.85738373, -3.74970722, -5.51526499, -3.18233013,
          -5.30744696, -2.97519660, -5.53918982, -9.34112263, -9.30058861]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.77451062, 0.20713353]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1302 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.83037757873535
alpha/beta optimization time: 1.3979296684265137
initial alpha-crown bounds: tensor([[ 2.76347303,  4.57243633, -0.24465799,  1.68950582, -0.50626183,
          1.28860617,  1.25143087,  4.69473410,  4.32111120]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5062618255615234
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6526 seconds.
lower bounds for all target labels: [2.763472318649292, 4.572436332702637, -0.2446584701538086, 1.6895058155059814, -0.5062623023986816, 1.288605809211731, 1.2514288425445557, 4.694733619689941, 4.32111120223999]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [2, 4]
start creating model mps for candidates: ['lay/16_2', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=2_30268343.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=2_30268343.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 148738 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 148741 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.29269337654114
Verifying property 0 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.6947340965271.

Properties batch 1, size 1
Remaining timeout: 197.9928183555603
Verifying property 1 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.572436332702637.

Properties batch 2, size 1
Remaining timeout: 197.87049651145935
Verifying property 2 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.32111120223999.

Properties batch 3, size 1
Remaining timeout: 197.76642370224
Verifying property 3 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.7634730339050293.

Properties batch 4, size 1
Remaining timeout: 197.66266870498657
Verifying property 4 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6895058155059814.

Properties batch 5, size 1
Remaining timeout: 197.55908799171448
Verifying property 5 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2886061668395996.

Properties batch 6, size 1
Remaining timeout: 197.4550588130951
Verifying property 6 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  1., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.251430869102478.

Properties batch 7, size 1
Remaining timeout: 197.35058069229126
Verifying property 7 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.24465799]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
        -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.24465799]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 439
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 731
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008234977722167969
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 38] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 51] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 1] 
split level 5: [/input-12, 17] 
split level 6: [/input-12, 25] 
split level 7: [/input-12, 92] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.245208740234375e-05
Time: prepare 0.0019    bound 0.0051    transfer 0.0045    finalize 0.0034    func 0.0150    
Accumulated time: func 0.0150    prepare 0.0024    bound 0.0051    transfer 0.0045    finalize 0.0034    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0267    set_bounds 0.0196    solve 0.0150    add 0.0001    
Accumulated time: pickout 0.0008    decision 0.0267    set_bounds 0.0196    solve 0.0150    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06928634643554688


Properties batch 8, size 1
Remaining timeout: 197.09171175956726
Verifying property 8 with 1 instances.
##### Instance 139 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.50626183]], device='cuda:0') need to verify.
Model prediction is: tensor([-7.46985912, -9.78631687, -3.83598518, -5.51694536, -3.54354000,
        -5.34781790, -2.52311063, -5.68112326, -9.51543331, -9.21476460],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.50626183]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 439
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 269
Node /15 input 0: size torch.Size([100]) unstable 23
-----------------
# of unstable neurons: 731
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0003573894500732422
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 51] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 92] 
split level 3: [/input-12, 1] 
split level 4: [/input-12, 17] 
split level 5: [/input-12, 46] 
split level 6: [/input-12, 33] 
split level 7: [/input-12, 10] 
pruning_in_iteration open status: True
ratio of positive domain = 243 / 256 = 0.94921875
pruning-in-iteration extra time: 0.004998207092285156
Time: prepare 0.0019    bound 0.1602    transfer 0.0009    finalize 0.0018    func 0.1648    
Accumulated time: func 0.1648    prepare 0.0023    bound 0.1602    transfer 0.0009    finalize 0.0018    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10878 (8), -0.09340 (8), -0.06015 (8), -0.05488 (8), -0.05024 (8), -0.04479 (8), -0.03386 (8), -0.03310 (8), -0.02807 (8), -0.02469 (8), -0.01710 (8), -0.00790 (8), -0.00200 (8), 
Length of domains: 13
Time: pickout 0.0005    decision 0.0226    set_bounds 0.0163    solve 0.1649    add 0.0440    
Accumulated time: pickout 0.0005    decision 0.0226    set_bounds 0.0163    solve 0.1649    add 0.0440    
Current (lb-rhs): -0.10877656936645508
13 domains visited
Cumulative time: 0.2608191967010498

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 13
splitting decisions: 
split level 0: [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] [/input-12, 60] 
split level 1: [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] [/input-12, 38] 
split level 2: [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] [/input-12, 26] 
split level 3: [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 291] [/input-8, 859] [/input-8, 859] [/input-8, 859] 
pruning_in_iteration open status: True
ratio of positive domain = 194 / 208 = 0.9326923076923077
pruning-in-iteration extra time: 0.004767656326293945
Time: prepare 0.0043    bound 0.1315    transfer 0.0038    finalize 0.0018    func 0.1415    
Accumulated time: func 0.3063    prepare 0.0069    bound 0.2918    transfer 0.0047    finalize 0.0035    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08175 (12), -0.07596 (12), -0.06624 (12), -0.06008 (12), -0.03135 (12), -0.02669 (12), -0.02404 (12), -0.02244 (12), -0.01727 (12), -0.01602 (12), -0.01515 (12), -0.00806 (12), -0.00218 (12), -0.00006 (12), 
Length of domains: 14
Time: pickout 0.0011    decision 0.0178    set_bounds 0.0098    solve 0.1416    add 0.0393    
Accumulated time: pickout 0.0016    decision 0.0405    set_bounds 0.0260    solve 0.3065    add 0.0833    
Current (lb-rhs): -0.08174991607666016
27 domains visited
Cumulative time: 0.47884082794189453

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 14
splitting decisions: 
split level 0: [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 291] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] [/input-8, 988] 
split level 1: [/input-8, 291] [/input-8, 291] [/input-8, 1873] [/input-8, 867] [/input-8, 858] [/input-8, 1873] [/input-8, 291] [/input-8, 867] [/input-8, 291] [/input-8, 1873] 
split level 2: [/input-8, 994] [/input-8, 858] [/input-8, 291] [/input-8, 858] [/input-8, 985] [/input-8, 291] [/input-8, 994] [/input-8, 858] [/input-8, 858] [/input-8, 291] 
split level 3: [/input-8, 858] [/input-8, 427] [/input-8, 858] [/input-12, 40] [/input-8, 85] [/input-8, 858] [/input-8, 858] [/input-8, 470] [/input-8, 427] [/input-8, 858] 
pruning_in_iteration open status: True
ratio of positive domain = 157 / 224 = 0.7008928571428572
pruning-in-iteration extra time: 0.005341768264770508
Time: prepare 0.0046    bound 0.1604    transfer 0.0021    finalize 0.0025    func 0.1697    
Accumulated time: func 0.4760    prepare 0.0117    bound 0.4521    transfer 0.0068    finalize 0.0061    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05612 (16), -0.05351 (16), -0.05299 (16), -0.04965 (16), -0.04903 (16), -0.04794 (16), -0.04597 (16), -0.04577 (16), -0.04367 (16), -0.04366 (16), -0.04231 (16), -0.04181 (16), -0.04128 (16), -0.03958 (16), -0.03922 (16), -0.03882 (16), -0.03869 (16), -0.03850 (16), -0.03680 (16), -0.03581 (16), 
Length of domains: 67
Time: pickout 0.0014    decision 0.0175    set_bounds 0.0094    solve 0.1697    add 0.0779    
Accumulated time: pickout 0.0030    decision 0.0580    set_bounds 0.0354    solve 0.4762    add 0.1612    
Current (lb-rhs): -0.05611610412597656
94 domains visited
Cumulative time: 0.7687768936157227

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 67
splitting decisions: 
split level 0: [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] [/input-8, 809] 
split level 1: [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] [/input-12, 40] 
pruning_in_iteration open status: True
ratio of positive domain = 169 / 268 = 0.6305970149253731
pruning-in-iteration extra time: 0.004807233810424805
Time: prepare 0.0057    bound 0.2273    transfer 0.0025    finalize 0.0023    func 0.2379    
Accumulated time: func 0.7138    prepare 0.0176    bound 0.6794    transfer 0.0093    finalize 0.0084    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04710 (18), -0.04483 (18), -0.04448 (18), -0.04330 (18), -0.04099 (18), -0.04052 (18), -0.03927 (18), -0.03736 (18), -0.03667 (18), -0.03497 (18), -0.03490 (18), -0.03359 (18), -0.03310 (18), -0.03296 (18), -0.03263 (18), -0.03087 (18), -0.03039 (18), -0.03007 (18), -0.02975 (18), -0.02933 (18), 
Length of domains: 99
Time: pickout 0.0147    decision 0.0264    set_bounds 0.0161    solve 0.2379    add 0.0141    
Accumulated time: pickout 0.0176    decision 0.0844    set_bounds 0.0515    solve 0.7142    add 0.1753    
Current (lb-rhs): -0.047098636627197266
193 domains visited
Cumulative time: 1.0805888175964355

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 99
splitting decisions: 
split level 0: [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] [/input-8, 994] 
split level 1: [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] [/input-8, 1428] 
pruning_in_iteration open status: True
ratio of positive domain = 213 / 396 = 0.5378787878787878
pruning-in-iteration extra time: 0.004924774169921875
Time: prepare 0.0077    bound 0.1852    transfer 0.0035    finalize 0.0038    func 0.2003    
Accumulated time: func 0.9142    prepare 0.0255    bound 0.8647    transfer 0.0128    finalize 0.0122    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03451 (20), -0.03185 (20), -0.03156 (20), -0.03136 (20), -0.03071 (20), -0.02863 (20), -0.02841 (20), -0.02818 (20), -0.02792 (20), -0.02791 (20), -0.02761 (20), -0.02713 (20), -0.02688 (20), -0.02517 (20), -0.02477 (20), -0.02472 (20), -0.02472 (20), -0.02405 (20), -0.02403 (20), -0.02388 (20), 
Length of domains: 183
Time: pickout 0.0037    decision 0.0254    set_bounds 0.0110    solve 0.2005    add 0.0816    
Accumulated time: pickout 0.0213    decision 0.1098    set_bounds 0.0625    solve 0.9146    add 0.2569    
Current (lb-rhs): -0.034514427185058594
376 domains visited
Cumulative time: 1.410388469696045

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 183
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] 
pruning_in_iteration open status: True
ratio of positive domain = 186 / 366 = 0.5081967213114754
pruning-in-iteration extra time: 0.004762411117553711
Time: prepare 0.0072    bound 0.1999    transfer 0.0010    finalize 0.0023    func 0.2104    
Accumulated time: func 1.1246    prepare 0.0328    bound 1.0646    transfer 0.0138    finalize 0.0145    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02965 (21), -0.02751 (21), -0.02650 (21), -0.02646 (21), -0.02599 (21), -0.02431 (21), -0.02370 (21), -0.02369 (21), -0.02328 (21), -0.02320 (21), -0.02287 (21), -0.02287 (21), -0.02210 (21), -0.02063 (21), -0.02048 (21), -0.02004 (21), -0.01987 (21), -0.01972 (21), -0.01942 (21), -0.01901 (21), 
Length of domains: 180
Time: pickout 0.0163    decision 0.0269    set_bounds 0.0077    solve 0.2105    add 0.1402    
Accumulated time: pickout 0.0377    decision 0.1366    set_bounds 0.0702    solve 1.1252    add 0.3971    
Current (lb-rhs): -0.029653549194335938
556 domains visited
Cumulative time: 1.823636531829834

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 180
splitting decisions: 
split level 0: [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] [/input-8, 973] 
pruning_in_iteration open status: True
ratio of positive domain = 165 / 360 = 0.45833333333333337
pruning-in-iteration extra time: 0.00489044189453125
Time: prepare 0.0075    bound 0.1598    transfer 0.0015    finalize 0.0023    func 0.1711    
Accumulated time: func 1.2957    prepare 0.0406    bound 1.2243    transfer 0.0153    finalize 0.0167    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02452 (22), -0.02425 (22), -0.02238 (22), -0.02202 (22), -0.02132 (22), -0.02119 (22), -0.02102 (22), -0.02084 (22), -0.02065 (22), -0.01905 (22), -0.01855 (22), -0.01851 (22), -0.01844 (22), -0.01818 (22), -0.01810 (22), -0.01799 (22), -0.01774 (22), -0.01770 (22), -0.01752 (22), -0.01750 (22), 
Length of domains: 195
Time: pickout 0.0181    decision 0.0283    set_bounds 0.0087    solve 0.1713    add 0.1204    
Accumulated time: pickout 0.0557    decision 0.1649    set_bounds 0.0789    solve 1.2964    add 0.5174    
Current (lb-rhs): -0.024521350860595703
751 domains visited
Cumulative time: 2.1805362701416016

BaB round 8
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0020
batch: 195
splitting decisions: 
split level 0: [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] [/input-8, 1865] 
pruning_in_iteration open status: True
ratio of positive domain = 174 / 390 = 0.4461538461538461
pruning-in-iteration extra time: 0.00506591796875
Time: prepare 0.0077    bound 0.1552    transfer 0.0027    finalize 0.0029    func 0.1686    
Accumulated time: func 1.4643    prepare 0.0485    bound 1.3795    transfer 0.0180    finalize 0.0197    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02226 (23), -0.02009 (23), -0.01909 (23), -0.01895 (23), -0.01889 (23), -0.01856 (23), -0.01672 (23), -0.01663 (23), -0.01637 (23), -0.01637 (23), -0.01626 (23), -0.01571 (23), -0.01570 (23), -0.01565 (23), -0.01551 (23), -0.01545 (23), -0.01529 (23), -0.01526 (23), -0.01438 (23), -0.01416 (23), 
Length of domains: 216
Time: pickout 0.0153    decision 0.0263    set_bounds 0.0092    solve 0.1687    add 0.0785    
Accumulated time: pickout 0.0710    decision 0.1912    set_bounds 0.0882    solve 1.4651    add 0.5959    
Current (lb-rhs): -0.0222625732421875
967 domains visited
Cumulative time: 2.490525722503662

BaB round 9
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0020
batch: 216
splitting decisions: 
split level 0: [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] [/input-8, 985] 
pruning_in_iteration open status: True
ratio of positive domain = 285 / 432 = 0.6597222222222222
pruning-in-iteration extra time: 0.0046787261962890625
Time: prepare 0.0084    bound 0.1772    transfer 0.0017    finalize 0.0022    func 0.1896    
Accumulated time: func 1.6539    prepare 0.0570    bound 1.5567    transfer 0.0197    finalize 0.0219    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01829 (24), -0.01614 (24), -0.01498 (24), -0.01484 (24), -0.01484 (24), -0.01443 (24), -0.01274 (24), -0.01269 (24), -0.01243 (24), -0.01240 (24), -0.01212 (24), -0.01157 (24), -0.01150 (24), -0.01148 (24), -0.01148 (24), -0.01144 (24), -0.01118 (24), -0.01098 (24), -0.01022 (24), -0.00998 (24), 
Length of domains: 147
Time: pickout 0.0153    decision 0.0293    set_bounds 0.0102    solve 0.1897    add 0.0812    
Accumulated time: pickout 0.0863    decision 0.2205    set_bounds 0.0984    solve 1.6549    add 0.6772    
Current (lb-rhs): -0.018289566040039062
1114 domains visited
Cumulative time: 2.826357364654541

BaB round 10
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 147
splitting decisions: 
split level 0: [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] [/input-8, 850] 
pruning_in_iteration open status: True
ratio of positive domain = 185 / 294 = 0.629251700680272
pruning-in-iteration extra time: 0.0052738189697265625
Time: prepare 0.0060    bound 0.1508    transfer 0.0010    finalize 0.0022    func 0.1601    
Accumulated time: func 1.8140    prepare 0.0633    bound 1.7075    transfer 0.0207    finalize 0.0241    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01678 (25), -0.01462 (25), -0.01345 (25), -0.01340 (25), -0.01331 (25), -0.01287 (25), -0.01122 (25), -0.01114 (25), -0.01083 (25), -0.01078 (25), -0.01062 (25), -0.01005 (25), -0.00999 (25), -0.00993 (25), -0.00992 (25), -0.00984 (25), -0.00963 (25), -0.00944 (25), -0.00866 (25), -0.00855 (25), 
Length of domains: 109
Time: pickout 0.0136    decision 0.0172    set_bounds 0.0072    solve 0.1607    add 0.0854    
Accumulated time: pickout 0.0999    decision 0.2377    set_bounds 0.1055    solve 1.8155    add 0.7625    
Current (lb-rhs): -0.016775131225585938
1223 domains visited
Cumulative time: 3.1185548305511475

BaB round 11
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 109
splitting decisions: 
split level 0: [/input-8, 817] [/input-8, 817] [/input-8, 1429] [/input-8, 817] [/input-8, 817] [/input-8, 1429] [/input-8, 817] [/input-8, 817] [/input-8, 817] [/input-8, 1429] 
pruning_in_iteration open status: True
ratio of positive domain = 144 / 218 = 0.6605504587155964
pruning-in-iteration extra time: 0.004945278167724609
Time: prepare 0.0046    bound 0.1818    transfer 0.0008    finalize 0.0015    func 0.1888    
Accumulated time: func 2.0028    prepare 0.0680    bound 1.8893    transfer 0.0215    finalize 0.0256    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01383 (26), -0.01166 (26), -0.01050 (26), -0.01047 (26), -0.01033 (26), -0.01002 (26), -0.00826 (26), -0.00818 (26), -0.00787 (26), -0.00783 (26), -0.00777 (26), -0.00712 (26), -0.00705 (26), -0.00696 (26), -0.00695 (26), -0.00687 (26), -0.00676 (26), -0.00654 (26), -0.00647 (26), -0.00572 (26), 
Length of domains: 74
Time: pickout 0.0132    decision 0.0159    set_bounds 0.0054    solve 0.1888    add 0.0800    
Accumulated time: pickout 0.1131    decision 0.2536    set_bounds 0.1109    solve 2.0043    add 0.8425    
Current (lb-rhs): -0.013825416564941406
1297 domains visited
Cumulative time: 3.429978609085083

BaB round 12
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0045
batch: 74
splitting decisions: 
split level 0: [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] [/input-8, 972] 
split level 1: [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] [/input-8, 1421] 
pruning_in_iteration open status: True
ratio of positive domain = 289 / 296 = 0.9763513513513513
pruning-in-iteration extra time: 0.004665851593017578
Time: prepare 0.0060    bound 0.1205    transfer 0.0010    finalize 0.0018    func 0.1293    
Accumulated time: func 2.1320    prepare 0.0742    bound 2.0098    transfer 0.0225    finalize 0.0274    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00552 (28), -0.00335 (28), -0.00220 (28), -0.00208 (28), -0.00204 (28), -0.00170 (28), -0.00046 (28), 
Length of domains: 7
Time: pickout 0.0190    decision 0.0217    set_bounds 0.0086    solve 0.1298    add 0.0337    
Accumulated time: pickout 0.1321    decision 0.2753    set_bounds 0.1195    solve 2.1341    add 0.8762    
Current (lb-rhs): -0.005521297454833984
1304 domains visited
Cumulative time: 3.658909797668457

BaB round 13
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 7
splitting decisions: 
split level 0: [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] [/input-8, 989] 
split level 1: [/input-8, 1429] [/input, 1654] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] [/input-8, 1429] 
split level 2: [/input-8, 85] [/input-8, 1429] [/input-8, 85] [/input-8, 85] [/input-8, 85] [/input-8, 85] [/input-8, 85] 
split level 3: [/input-8, 1947] [/input-8, 85] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] [/input-8, 1947] 
split level 4: [/input-8, 470] [/input-8, 1947] [/input-8, 470] [/input, 1654] [/input-8, 470] [/input-8, 470] [/input-8, 470] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 224 / 224 = 1.0
pruning-in-iteration extra time: 4.744529724121094e-05
Time: prepare 0.0053    bound 0.0047    transfer 0.0007    finalize 0.0017    func 0.0124    
Accumulated time: func 2.1445    prepare 0.0798    bound 2.0145    transfer 0.0232    finalize 0.0291    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0210    set_bounds 0.0115    solve 0.0125    add 0.0001    
Accumulated time: pickout 0.1330    decision 0.2963    set_bounds 0.1310    solve 2.1466    add 0.8763    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
1304 domains visited
Cumulative time: 3.707404613494873

found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=2_30268343.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=2_30268343.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=139_spec=4_30268343.log
found process for pidx=2
kill process for pidx=2
found process for pidx=4
Result: safe in 7.0781 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 140, vnnlib ID: 140 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.70108557, -2.61450195, -7.88389778, -7.46980858, -7.10053349,
         -7.85311460, -7.32898045, -5.37792873, -5.26348686, -0.13527048]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [517]; unstable size 517; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 190, 1, 517] with unstable size 189 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 517] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 517] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [189]; unstable size 189; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 189] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 189] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.44307804, 1.46007872, 5.86254597, 5.68103218, 5.60793352, 5.96620178,
         5.60759163, 3.70175505, 3.77148247]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0533 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 141, vnnlib ID: 141 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.93660259, -3.64990735, -5.69686222, -5.46793270, -5.41355324,
         -6.32598066, -5.22664785, -6.09948301, -3.93378472, -2.67238760]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [480]; unstable size 480; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 193, 1, 480] with unstable size 192 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 480] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 480] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [192]; unstable size 192; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 192] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 192] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.12637162,  0.23386717,  0.06982768,  0.04919577,  0.70030719,
         -0.06877565,  0.36111903, -0.89804661, -1.82256579]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.93660259, -3.64990735, -5.69686222, -5.46793270, -5.41355324,
         -6.32598066, -5.22664785, -6.09948301, -3.93378472, -2.67238760]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.93660212, -3.64990807, -5.69686222, -5.46793365, -5.41355324,
          -6.32598066, -5.22664833, -6.09948254, -3.93378496, -2.67238760],
         [-4.93660212, -3.64990807, -5.69686222, -5.46793365, -5.41355324,
          -6.32598066, -5.22664833, -6.09948254, -3.93378496, -2.67238760]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.28669405,  1.57674026,  0.28387690, -0.97752047]]],
       device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]],


         [[[-1.90952384, -1.84603179, -1.76666665,  ..., -1.68730164,
            -1.09999990, -0.84603173],
           [-1.89365077, -1.90952384, -1.81428576,  ..., -1.71904767,
            -1.30634916, -1.25873005],
           [-1.89365077, -1.89365077, -1.67142856,  ..., -1.75079370,
            -1.51269829, -1.49682534],
           ...,
           [-0.57619047, -1.21111107, -1.22698402,  ..., -1.29047608,
            -1.17936504, -1.03650784],
           [-0.70317459, -1.06825387, -1.16349196,  ..., -1.02063489,
            -1.02063489, -1.00476182],
           [-0.76666665, -1.00476182, -1.00476182,  ..., -0.94126981,
            -1.02063489, -1.06825387]],

          [[-1.93236721, -1.86795497, -1.72302747,  ..., -1.70692432,
            -1.22383249, -0.98228657],
           [-1.91626418, -1.93236721, -1.83574879,  ..., -1.72302747,
            -1.41706920, -1.36875999],
           [-1.91626418, -1.91626418, -1.73913050,  ..., -1.78743970,
            -1.59420288, -1.57809973],
           ...,
           [-0.80515295, -1.49758446, -1.52979064,  ..., -1.46537840,
            -1.40096617, -1.23993552],
           [-0.91787434, -1.33655393, -1.44927526,  ..., -1.22383249,
            -1.23993552, -1.20772946],
           [-0.96618354, -1.27214170, -1.25603855,  ..., -1.12721407,
            -1.20772946, -1.27214170]],

          [[-1.64767623, -1.58770621, -1.51274371,  ..., -1.54272878,
            -1.15292358, -0.91304344],
           [-1.63268375, -1.64767623, -1.54272878,  ..., -1.52773619,
            -1.30284870, -1.25787115],
           [-1.63268375, -1.64767623, -1.43778121,  ..., -1.58770621,
            -1.42278874, -1.43778121],
           ...,
           [-0.70314842, -1.24287868, -1.22788620,  ..., -1.28785622,
            -1.24287868, -1.16791618],
           [-0.80809593, -1.12293863, -1.22788620,  ..., -1.12293863,
            -1.10794616, -1.15292358],
           [-0.82308841, -1.09295356, -1.07796109,  ..., -1.09295356,
            -1.15292358, -1.19790113]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0767 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 142, vnnlib ID: 142 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-9.01175785, -9.22564220, -6.09865665, -6.68279839, -7.01091385,
         -7.66662741, -3.74865699, -8.93857002, -9.70948601, -9.36056805]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [415]; unstable size 415; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 290, 1, 415] with unstable size 289 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 415] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 415] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [289]; unstable size 289; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 289] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 289] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.92234206, 3.34474015, 0.83517981, 1.42703438, 1.62353683, 2.12632895,
         3.08041930, 3.64250803, 3.61395836]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0555 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 143, vnnlib ID: 143 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.98219585, -11.93984127,  -4.80098343,  -6.43815804,  -4.75239468,
          -5.96528244,  -6.83383131,  -6.40824652, -11.32667923, -10.02781868]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [464]; unstable size 464; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 196, 1, 464] with unstable size 195 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 464] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [195]; unstable size 195; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 195] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 195] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.50733936,  4.83027840, -1.04858828,  0.40518236, -0.05837464,
          0.48497462,  0.45264530,  4.44294167,  3.27292252]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -7.98219585, -11.93984127,  -4.80098343,  -6.43815804,  -4.75239468,
          -5.96528244,  -6.83383131,  -6.40824652, -11.32667923, -10.02781868]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -7.91147852, -11.89064407,  -4.74770355,  -6.60718012,  -5.13012743,
           -6.18122435,  -7.01664925,  -6.81878042, -11.30120945, -10.08853436],
         [ -7.91147852, -11.89064407,  -4.74770355,  -6.60718012,  -5.13012743,
           -6.18122435,  -7.01664925,  -6.81878042, -11.30120945, -10.08853436]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.38242388,  1.05109692]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0457 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 144, vnnlib ID: 144 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.60607052, -9.81349945, -5.86607075, -4.14033175, -5.51711655,
         -3.53696299, -6.38849020, -6.08620310, -7.73200989, -8.22923183]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [522]; unstable size 522; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 522] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 522] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 220] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.89997864, 4.68741608, 1.57923114, 0.30736458, 1.14825916, 1.82109785,
         1.72909117, 2.65290236, 3.25950551]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0599 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 145, vnnlib ID: 145 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
         -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [686]; unstable size 686; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 215, 1, 686] with unstable size 214 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 686] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 686] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [214]; unstable size 214; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 214] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 214] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.63966501,  4.83987522,  0.26498532, -0.32372510,  1.13650584,
          1.87988925,  2.01293588,  5.47729731,  4.25807333]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
         -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-3.97581673, -7.36369705, -2.25391197, -0.90559614, -3.35363531,
          -0.93793738, -3.88091850, -3.94542360, -8.08611870, -6.59433222]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.03234124]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-6.55555546e-01, -5.28571427e-01, -5.60317457e-01,  ...,
            -3.69841158e-01, -4.80952382e-01, -5.28571427e-01],
           [-6.55555546e-01, -5.44444442e-01, -5.28571427e-01,  ...,
            -1.47618949e-01, -3.85714173e-01, -4.65079248e-01],
           [-6.55555546e-01, -5.12698412e-01, -4.17460203e-01,  ...,
            -5.23808524e-02, -3.06349099e-01, -4.49206233e-01],
           ...,
           [-3.85714173e-01, -1.95237994e-01,  2.69842222e-02,  ...,
             7.41269886e-01,  5.82539737e-01,  4.23809588e-01],
           [-4.33333218e-01, -3.22222114e-01, -1.47618949e-01,  ...,
             6.14285767e-01,  5.50793707e-01,  4.07936573e-01],
           [-4.01587188e-01, -1.95237994e-01, -1.79364979e-01,  ...,
             6.93650842e-01,  6.14285767e-01,  5.03174663e-01]],

          [[-4.99194801e-01, -3.70370239e-01, -4.02576357e-01,  ...,
            -2.09339648e-01, -3.05958003e-01, -3.05958003e-01],
           [-4.50885653e-01, -3.54267180e-01, -3.38164121e-01,  ...,
             1.22934580e-07, -2.25442708e-01, -2.41545767e-01],
           [-4.18679416e-01, -2.73751885e-01, -1.77133530e-01,  ...,
             1.12721533e-01, -1.44927412e-01, -2.25442708e-01],
           ...,
           [-1.44927412e-01,  6.44123554e-02,  3.54267418e-01,  ...,
             1.19162667e+00,  1.12721443e+00,  1.01449287e+00],
           [-1.44927412e-01,  1.22934580e-07,  2.09339887e-01,  ...,
             1.17552364e+00,  1.22383285e+00,  1.11111140e+00],
           [-1.77133530e-01,  8.05154145e-02,  1.44927651e-01,  ...,
             1.14331758e+00,  1.15942061e+00,  1.11111140e+00]],

          [[-4.03298318e-01, -2.68365651e-01, -3.13343287e-01,  ...,
            -2.23388135e-01, -3.43328297e-01, -3.13343287e-01],
           [-3.73313308e-01, -2.83358276e-01, -2.53373146e-01,  ...,
            -2.84855980e-02, -2.53373146e-01, -2.38380641e-01],
           [-3.58320802e-01, -2.23388135e-01, -1.33433133e-01,  ...,
             6.14694245e-02, -1.93403140e-01, -2.38380641e-01],
           ...,
           [-5.84706068e-02,  1.21439442e-01,  3.91304523e-01,  ...,
             1.27586246e+00,  1.20089996e+00,  1.15592217e+00],
           [-8.84556174e-02,  4.64769229e-02,  2.41379470e-01,  ...,
             1.26086998e+00,  1.30584753e+00,  1.24587750e+00],
           [-8.84556174e-02,  1.36431947e-01,  1.81409463e-01,  ...,
             1.23088503e+00,  1.24587750e+00,  1.23088503e+00]]]]],
       device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0530 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 146, vnnlib ID: 146 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.88469028, -12.65882111, -12.62442398, -13.26971817, -13.08886814,
         -14.39622879, -13.06826305, -13.77910519,  -7.61941338, -13.15269947]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [474]; unstable size 474; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 183, 1, 474] with unstable size 182 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 474] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 474] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [182]; unstable size 182; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 182] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 182] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.66201323, 3.41532993, 3.31493187, 3.81620884, 3.48846436, 4.76713324,
         3.58373952, 3.89160633, 3.77728796]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0464 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 147, vnnlib ID: 147 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-24.95316505, -29.04301071, -22.88550568, -26.99249268, -26.92433929,
         -26.87813187, -26.17901230, -26.50130844, -27.15471458, -29.93289757]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 207, 1, 636] with unstable size 206 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 636] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [206]; unstable size 206; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 206] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 206] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.13847566, 4.55568886, 3.22048378, 3.02970314, 2.95622373, 2.20912409,
         2.32559395, 2.85925508, 5.64449739]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0501 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 148, vnnlib ID: 148 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.92584610, -7.42483807, -4.62941742, -4.01557446, -4.85893917,
         -3.11745501, -6.51985884, -2.25635386, -7.85682869, -5.87989426]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [573]; unstable size 573; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 165, 1, 573] with unstable size 164 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 573] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 573] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [164]; unstable size 164; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 164] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 164] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.58360767, 3.69630384, 1.62351382, 1.19872499, 1.87599516, 0.30902314,
         3.29060149, 4.20989132, 2.42179322]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0498 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 149, vnnlib ID: 149 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.82564068, -16.12564659,  -8.40596962, -11.14722919,  -8.84027576,
         -11.49166584,  -8.61030483, -12.62408161, -15.33834553, -15.51428890]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [612]; unstable size 612; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 318, 1, 612] with unstable size 317 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 612] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 612] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [317]; unstable size 317; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 317] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 317] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.89976645,  5.63465881,  1.31290984, -0.68691474,  1.36818075,
         -1.07342267,  2.11837912,  5.13911724,  5.00889349]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.82564068, -16.12564659,  -8.40596962, -11.14722919,  -8.84027576,
         -11.49166584,  -8.61030483, -12.62408161, -15.33834553, -15.51428890]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.74567413, -14.96361732,  -7.38170147,  -9.74652767,  -7.30603218,
          -10.06134415,  -7.19569302, -11.23393822, -14.24657917, -14.25869179],
         [-11.74567413, -14.96361732,  -7.38170147,  -9.74652767,  -7.30603218,
          -10.06134415,  -7.19569302, -11.23393822, -14.24657917, -14.25869179]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.07566929, -0.18600845]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0681 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 150, vnnlib ID: 150 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.13626671, -12.95860291, -17.87646484, -18.21573448, -16.54766655,
         -19.77405167, -18.47913933, -17.13456726, -12.88059044, -12.20954704]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [659]; unstable size 659; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 227, 1, 659] with unstable size 226 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 659] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 659] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [226]; unstable size 226; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 226] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 226] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-2.12454081,  2.88798237,  3.24317980,  1.46328259,  4.59323883,
          3.30328608,  1.93248749, -1.68345642, -1.69870043]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.13626671, -12.95860291, -17.87646484, -18.21573448, -16.54766655,
         -19.77405167, -18.47913933, -17.13456726, -12.88059044, -12.20954704]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.13626671, -12.95860291, -17.87646675, -18.21573257, -16.54766655,
          -19.77405167, -18.47914314, -17.13456726, -12.88059235, -12.20954704],
         [-12.13626671, -12.95860291, -17.87646675, -18.21573257, -16.54766655,
          -19.77405167, -18.47914314, -17.13456726, -12.88059235, -12.20954704]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.82233620, -0.07801056, -0.74905586]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]],


         [[[ 4.87301648e-01,  5.50793707e-01,  7.41269886e-01,  ...,
            -1.95237994e-01, -2.11111009e-01, -2.26984024e-01],
           [ 8.20634961e-01,  8.84127021e-01,  1.04285717e+00,  ...,
            -8.41268823e-02, -9.99999046e-02, -1.31745934e-01],
           [ 1.01111114e+00,  1.02698421e+00,  1.16984153e+00,  ...,
             1.11112073e-02, -2.06348225e-02, -2.06348225e-02],
           ...,
           [ 4.23809588e-01,  4.23809588e-01,  3.92063558e-01,  ...,
             1.85714364e-01,  1.38095319e-01,  1.22222304e-01],
           [ 4.71428633e-01,  3.76190543e-01,  3.92063558e-01,  ...,
             2.96825469e-01,  2.49206424e-01,  2.01587379e-01],
           [ 6.14285767e-01,  3.28571498e-01,  3.44444513e-01,  ...,
             2.80952454e-01,  2.80952454e-01,  2.01587379e-01]],

          [[ 1.03059590e+00,  1.04669893e+00,  1.17552364e+00,  ...,
             7.40740836e-01,  7.24637747e-01,  7.08534718e-01],
           [ 1.23993587e+00,  1.27214205e+00,  1.38486338e+00,  ...,
             8.37359190e-01,  8.37359190e-01,  8.21256101e-01],
           [ 1.28824508e+00,  1.30434811e+00,  1.43317258e+00,  ...,
             9.01771426e-01,  8.85668337e-01,  8.53462219e-01],
           ...,
           [ 4.83092964e-02,  4.83092964e-02,  1.61031820e-02,  ...,
            -1.93236589e-01, -2.57648826e-01, -2.57648826e-01],
           [ 1.12721533e-01,  3.22062373e-02,  3.22062373e-02,  ...,
            -9.66182351e-02, -1.61030471e-01, -1.77133530e-01],
           [ 3.22061300e-01,  1.22934580e-07,  1.22934580e-07,  ...,
            -9.66182351e-02, -1.12721294e-01, -1.77133530e-01]],

          [[ 1.56072009e+00,  1.50075006e+00,  1.56072009e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           [ 1.57571256e+00,  1.57571256e+00,  1.68066013e+00,  ...,
             1.68066013e+00,  1.66566753e+00,  1.65067506e+00],
           [ 1.41079497e+00,  1.45577252e+00,  1.60569763e+00,  ...,
             1.63568258e+00,  1.62069011e+00,  1.60569763e+00],
           ...,
           [ 7.64619336e-02,  7.64619336e-02,  4.64769229e-02,  ...,
            -1.48425624e-01, -2.23388135e-01, -1.93403140e-01],
           [ 1.36431947e-01,  4.64769229e-02,  6.14694245e-02,  ...,
            -5.84706068e-02, -1.18440613e-01, -1.33433133e-01],
           [ 3.01349491e-01,  1.64919142e-02,  3.14844176e-02,  ...,
            -5.84706068e-02, -7.34631121e-02, -1.18440613e-01]]]]],
       device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0609 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 151, vnnlib ID: 151 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.92925501, -7.14253235, -2.67746592, -1.64019978, -3.21286678,
         -2.15658951, -4.77550077, -2.71008253, -7.95267010, -6.10923672]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [509]; unstable size 509; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 509] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 509] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 509] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 190] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.62681031,  3.42381239, -0.43489397, -0.80544960,  0.11626792,
          1.46117330, -0.19169974,  4.37902164,  2.50552559]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.92925501, -7.14253235, -2.67746592, -1.64019978, -3.21286678,
         -2.15658951, -4.77550077, -2.71008253, -7.95267010, -6.10923672]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.92925453, -7.14253139, -2.67746544, -1.64019978, -3.21286583,
          -2.15658951, -4.77549982, -2.71008205, -7.95266914, -6.10923672],
         [-4.92925453, -7.14253139, -2.67746544, -1.64019978, -3.21286583,
          -2.15658951, -4.77549982, -2.71008205, -7.95266914, -6.10923672]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.52087593, -0.51638973,  0.55349255]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]],


         [[[-0.95714283, -0.79841268, -0.98888886,  ...,  1.94761932,
             2.01111126,  1.96349227],
           [-0.78253967, -0.67142856, -0.83015871,  ...,  1.96349227,
             1.93174624,  1.82063520],
           [-0.89365077, -0.89365077, -0.97301590,  ...,  1.97936535,
             2.01111126,  1.97936535],
           ...,
           [-1.05238092, -1.02063489, -1.02063489,  ..., -0.22698402,
             0.15396833, -0.49682540],
           [-1.16349196, -1.13174593, -1.06825387,  ...,  0.09047628,
            -0.71904761, -0.75079364],
           [-1.22698402, -1.22698402, -1.19523799,  ...,  1.21746063,
             0.01111121, -0.65555555]],

          [[-1.04669881, -0.91787434, -0.98228657,  ...,  1.64251232,
             1.69082153,  1.57810009],
           [-0.83735907, -0.78904986, -0.82125598,  ...,  1.65861547,
             1.61030626,  1.54589403],
           [-0.88566822, -0.88566822, -0.91787434,  ...,  1.83574903,
             1.85185218,  1.81964600],
           ...,
           [-1.48148143, -1.46537840, -1.46537840,  ..., -0.51529789,
            -0.01610294, -0.72463763],
           [-1.54589367, -1.52979064, -1.49758446,  ..., -0.08051517,
            -0.93397743, -0.96618354],
           [-1.59420288, -1.57809973, -1.56199670,  ...,  1.30434811,
            -0.09661824, -0.95008045]],

          [[-1.16791618, -1.18290865, -1.10794616,  ...,  1.32084000,
             1.35082495,  1.24587750],
           [-1.01799107, -1.06296861, -0.98800600,  ...,  1.32084000,
             1.29085493,  1.24587750],
           [-0.98800600, -0.98800600, -1.00299859,  ...,  1.56072009,
             1.54572761,  1.53073502],
           ...,
           [-1.52773619, -1.54272878, -1.54272878,  ..., -0.59820086,
            -0.02848560, -0.70314842],
           [-1.57271373, -1.54272878, -1.52773619,  ..., -0.07346311,
            -0.91304344, -0.98800600],
           [-1.57271373, -1.55772126, -1.55772126,  ...,  1.33583248,
            -0.02848560, -0.95802099]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0556 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 152, vnnlib ID: 152 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.37253094, -15.35466290,  -8.84723759, -11.91200066,  -9.14601994,
         -12.22006512, -11.46233749, -11.63420105, -15.26982689, -14.99343395]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [511]; unstable size 511; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 247, 1, 511] with unstable size 246 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 511] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 511] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [246]; unstable size 246; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 246] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 246] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.05601621,  4.40511131,  1.92022455, -0.67723632,  2.14849830,
          1.43644226,  1.45348644,  4.22400999,  4.17532253]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.37253094, -15.35466290,  -8.84723759, -11.91200066,  -9.14601994,
         -12.22006512, -11.46233749, -11.63420105, -15.26982689, -14.99343395]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.96281624, -14.68736172,  -8.51735973, -11.17835426,  -8.24110413,
          -11.42344475, -10.73051357, -10.70419121, -14.71773815, -14.28113079]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.27625561]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0544 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 153, vnnlib ID: 153 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.36052370, -3.64754987, -8.43094254, -6.93587589, -8.07399559,
         -7.95548391, -8.76295853, -8.07159233, -4.37078619, -1.63098276]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [666]; unstable size 666; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 198, 1, 666] with unstable size 197 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 666] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 666] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [197]; unstable size 197; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 197] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 197] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.38331795, 0.85898757, 5.10982180, 3.81529808, 4.82118082, 4.66787148,
         5.43832827, 4.82865047, 1.05962706]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0645 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 154, vnnlib ID: 154 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.37273693, -13.41425037,  -7.99989891,  -7.64088869,  -7.68787098,
          -7.30278063,  -9.00737858,  -9.44757938, -11.26918030, -13.87256336]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [665]; unstable size 665; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 191, 1, 665] with unstable size 190 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 665] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 665] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [190]; unstable size 190; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 190] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 190] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.81563997,  4.79626942, -0.23131919,  0.04256070, -0.61334944,
          0.76331437,  1.09416652,  2.70510530,  5.43058014]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-12.37273693, -13.41425037,  -7.99989891,  -7.64088869,  -7.68787098,
          -7.30278063,  -9.00737858,  -9.44757938, -11.26918030, -13.87256336]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-12.39501572, -13.37385845,  -7.99371624,  -7.88374424,  -7.51201248,
           -7.59104586,  -9.04518700,  -9.49426460, -11.38462830, -13.92039394],
         [-12.39501572, -13.37385845,  -7.99371624,  -7.88374424,  -7.51201248,
           -7.59104586,  -9.04518700,  -9.49426460, -11.38462830, -13.92039394]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.40267038, -0.07903337]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0057 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0456 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 155, vnnlib ID: 155 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.79153347, -11.06904888,  -7.80160236,  -7.62448120,  -8.11459255,
          -8.06301022,  -7.22633886,  -9.50167847,  -7.88424015, -10.52373123]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [522]; unstable size 522; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 244, 1, 522] with unstable size 243 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 522] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 522] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [243]; unstable size 243; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 243] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 243] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.54438448,  1.50450706, -1.00405836, -0.75059611, -0.65832686,
         -0.60824049,  0.62780285, -1.52603471,  1.13424706]], device='cuda:0') None
Remain 5 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.79153347, -11.06904888,  -7.80160236,  -7.62448120,  -8.11459255,
          -8.06301022,  -7.22633886,  -9.50167847,  -7.88424015, -10.52373123]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.40770531, -10.88330173,  -7.31060600,  -7.41410780,  -7.77941322,
           -7.76706648,  -7.42843294,  -9.16030025,  -7.50736618, -10.33506966],
         [ -9.40770531, -10.88330173,  -7.31060600,  -7.41410780,  -7.77941322,
           -7.76706648,  -7.42843294,  -9.16030025,  -7.50736618, -10.33506966]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11782694, -0.01432514,  0.35098028,  0.33863354,  0.07893324]]],
       device='cuda:0')
number of violation:  2
Attack finished in 0.0157 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0543 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 156, vnnlib ID: 156 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.62991190, -8.22150135, -3.56266642, -2.64211535, -2.55210876,
         -3.17030573, -2.78596139, -4.91182852, -7.74587250, -7.17337656]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [520]; unstable size 520; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 520] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 520] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 520] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 184] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.35063887,  3.30825782, -0.56681466, -0.80880809, -1.41259146,
         -1.49340808,  0.91902596,  3.26092339,  2.75898957]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.62991190, -8.22150135, -3.56266642, -2.64211535, -2.55210876,
         -3.17030573, -2.78596139, -4.91182852, -7.74587250, -7.17337656]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.62991190, -8.22150135, -3.56266618, -2.64211535, -2.55210876,
          -3.17030573, -2.78596210, -4.91182852, -7.74587250, -7.17337751],
         [-6.62991190, -8.22150135, -3.56266618, -2.64211535, -2.55210876,
          -3.17030573, -2.78596210, -4.91182852, -7.74587250, -7.17337751]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.39236045, -0.52819037, -0.61819696, -0.38434362]]],
       device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]],


         [[[-1.67142856, -1.70317459, -1.67142856,  ..., -1.62380958,
            -1.60793638, -1.67142856],
           [-1.70317459, -1.73492062, -1.73492062,  ..., -1.60793638,
            -1.68730164, -1.71904767],
           [-1.60793638, -1.71904767, -1.79841268,  ..., -1.63968253,
            -1.71904767, -1.67142856],
           ...,
           [-1.52857137, -1.43333328, -1.41746020,  ..., -1.13174593,
            -1.14761901, -1.14761901],
           [-1.41746020, -1.43333328, -1.48095226,  ..., -1.03650784,
            -1.06825387, -1.08412695],
           [-1.48095226, -1.49682534, -1.59206343,  ..., -0.95714283,
            -1.06825387, -1.11587298]],

          [[-1.56199670, -1.57809973, -1.56199670,  ..., -1.56199670,
            -1.54589367, -1.61030602],
           [-1.57809973, -1.62640905, -1.61030602,  ..., -1.54589367,
            -1.64251208, -1.65861523],
           [-1.48148143, -1.61030602, -1.69082129,  ..., -1.56199670,
            -1.67471826, -1.64251208],
           ...,
           [-1.54589367, -1.46537840, -1.46537840,  ..., -1.43317223,
            -1.43317223, -1.40096617],
           [-1.46537840, -1.46537840, -1.51368749,  ..., -1.33655393,
            -1.36875999, -1.38486302],
           [-1.51368749, -1.51368749, -1.59420288,  ..., -1.27214170,
            -1.35265696, -1.38486302]],

          [[-1.54272878, -1.57271373, -1.58770621,  ..., -1.57271373,
            -1.55772126, -1.57271373],
           [-1.58770621, -1.60269880, -1.61769128,  ..., -1.57271373,
            -1.60269880, -1.61769128],
           [-1.55772126, -1.57271373, -1.61769128,  ..., -1.60269880,
            -1.61769128, -1.61769128],
           ...,
           [-1.39280367, -1.33283365, -1.34782624,  ..., -1.46776617,
            -1.43778121, -1.40779614],
           [-1.34782624, -1.34782624, -1.37781119,  ..., -1.36281872,
            -1.37781119, -1.40779614],
           [-1.36281872, -1.39280367, -1.43778121,  ..., -1.34782624,
            -1.39280367, -1.39280367]]]]], device='cuda:0') torch.Size([1, 4, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0544 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 157, vnnlib ID: 157 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.04801083,  -6.34156513, -11.41678429,  -9.62609482, -10.79650021,
         -10.91422462, -10.18493938,  -9.82091618,  -7.10640144,  -2.62643194]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [489]; unstable size 489; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 166, 1, 489] with unstable size 165 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 12, 1, 489] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 489] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [165]; unstable size 165; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 12, 1, 165] with unstable size 11 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 165] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [11]; unstable size 11; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 11] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.36141229, 2.37881207, 7.25882244, 5.68141317, 6.92046452, 6.83364058,
         6.18870354, 5.80481243, 3.38991785]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0442 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 158, vnnlib ID: 158 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
          -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [517]; unstable size 517; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 192, 1, 517] with unstable size 191 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 517] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 517] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [191]; unstable size 191; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 191] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 191] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.71505952,  0.93899989,  2.11313248,  0.24073648,  1.31830454,
         -0.27658892,  1.65153766, -0.12758017,  2.09712505]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
          -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.24it/s]100%|██████████| 1/1 [00:00<00:00,  8.23it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.50576878,  -9.06923485, -10.22361279,  -8.16759109,  -9.38498783,
           -7.78557730,  -9.73932743,  -8.16070366,  -6.82512379, -10.11628342],
         [ -9.50576878,  -9.06923485, -10.22361279,  -8.16759109,  -9.38498783,
           -7.78557730,  -9.73932743,  -8.16070366,  -6.82512379, -10.11628342]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96045351, 1.33557987]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1243 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 10.416451454162598
alpha/beta optimization time: 1.3855421543121338
initial alpha-crown bounds: tensor([[ 1.76490927,  1.00492334,  2.20698881,  0.32836843,  1.41238594,
         -0.17884588,  1.72935748, -0.01777887,  2.16614246]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.17884588241577148
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6352 seconds.
lower bounds for all target labels: [1.7649080753326416, 1.0049229860305786, 2.2069873809814453, 0.3283669948577881, 1.412386417388916, -0.17884588241577148, 1.7293572425842285, -0.01777791976928711, 2.166142225265503]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [5, 7]
start creating model mps for candidates: ['lay/16_5', 'lay/16_7']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.3337516784668
Verifying property 0 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.20698881149292.

Properties batch 1, size 1
Remaining timeout: 198.1511685848236
Verifying property 1 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.166142463684082.

Properties batch 2, size 1
Remaining timeout: 198.04299306869507
Verifying property 2 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.764909267425537.

Properties batch 3, size 1
Remaining timeout: 197.9381983280182
Verifying property 3 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7293574810028076.

Properties batch 4, size 1
Remaining timeout: 197.82931876182556
Verifying property 4 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4123859405517578.

Properties batch 5, size 1
Remaining timeout: 197.72587847709656
Verifying property 5 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0049233436584473.

Properties batch 6, size 1
Remaining timeout: 197.6200737953186
Verifying property 6 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3283684253692627.

Properties batch 7, size 1
Remaining timeout: 197.50790858268738
Verifying property 7 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.01777887]], device='cuda:0') need to verify.
Model prediction is: tensor([ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
         -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.01777887]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 517
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 188
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 726
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010597705841064453
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 58] 
split level 1: [/input-12, 45] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 51] 
split level 5: [/input-12, 25] 
split level 6: [/input-12, 26] 
split level 7: [/input, 1736] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.744529724121094e-05
Time: prepare 0.0032    bound 0.0045    transfer 0.0047    finalize 0.0028    func 0.0152    
Accumulated time: func 0.0152    prepare 0.0037    bound 0.0045    transfer 0.0047    finalize 0.0028    
all_split False
Length of domains: 0
Time: pickout 0.0012    decision 0.0260    set_bounds 0.0214    solve 0.0153    add 0.0001    
Accumulated time: pickout 0.0012    decision 0.0260    set_bounds 0.0214    solve 0.0153    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06993579864501953


Properties batch 8, size 1
Remaining timeout: 197.2473282814026
Verifying property 8 with 1 instances.
##### Instance 158 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.17884588]], device='cuda:0') need to verify.
Model prediction is: tensor([ -9.81927967,  -9.30375195, -10.87481976,  -8.97626114, -10.13474369,
         -8.76882172, -10.25335312,  -9.09837914,  -6.59457874, -10.58987808],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.17884588]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 517
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 188
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 726
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0004475116729736328
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 37] 
split level 1: [/input-12, 25] 
split level 2: [/input-12, 26] 
split level 3: [/input-12, 4] 
split level 4: [/input-12, 58] 
split level 5: [/input-12, 45] 
split level 6: [/input-12, 51] 
split level 7: [/input-12, 74] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.2438507080078125e-05
Time: prepare 0.0019    bound 0.0040    transfer 0.0010    finalize 0.0015    func 0.0086    
Accumulated time: func 0.0086    prepare 0.0023    bound 0.0040    transfer 0.0010    finalize 0.0015    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0224    set_bounds 0.0160    solve 0.0086    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0224    set_bounds 0.0160    solve 0.0086    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.052625179290771484

the mip building process is not terminated yet, kill it
Result: safe in 3.2404 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 159, vnnlib ID: 159 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.94552898, -11.88663006, -11.47941303,  -9.72749805, -12.11168003,
         -10.94520473,  -8.55705357, -13.68229103, -10.67903423, -11.17602921]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [836]; unstable size 836; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 189, 1, 836] with unstable size 188 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 836] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 836] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [188]; unstable size 188; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 188] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 188] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.05637729, 1.39599609, 1.75964940, 0.17517839, 2.39905334, 1.14613736,
         3.57038593, 0.74127966, 1.09699988]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0675 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 160, vnnlib ID: 160 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
         -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [647]; unstable size 647; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 242, 1, 647] with unstable size 241 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 647] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 647] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [241]; unstable size 241; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 241] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 241] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.95681763,  5.94022369, -0.25544399,  2.46004200,  2.96836042,
          1.44257116,  2.64147139,  3.15622735,  5.52300072]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
         -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.78it/s]100%|██████████| 1/1 [00:00<00:00,  8.77it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.53398991, -9.76381302, -2.85792804, -5.85641003, -2.57112455,
          -6.37114143, -5.08218336, -6.02840757, -7.07108688, -9.52335644]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.28680348]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1167 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 26.49098777770996
alpha/beta optimization time: 1.2445886135101318
initial alpha-crown bounds: tensor([[ 2.05517435,  6.03731155, -0.21251757,  2.50705266,  3.02221155,
          1.49958682,  2.69033098,  3.27446365,  5.61737394]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.21251757442951202
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6547 seconds.
lower bounds for all target labels: [2.0551722049713135, 6.037313461303711, -0.2125188410282135, 2.5070533752441406, 3.0222110748291016, 1.4995871782302856, 2.6903326511383057, 3.2744641304016113, 5.617372512817383]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49502086639404
Verifying property 0 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 6.037311553955078.

Properties batch 1, size 1
Remaining timeout: 198.31975865364075
Verifying property 1 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 5.617373943328857.

Properties batch 2, size 1
Remaining timeout: 198.21309351921082
Verifying property 2 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.274463653564453.

Properties batch 3, size 1
Remaining timeout: 198.10954022407532
Verifying property 3 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0222115516662598.

Properties batch 4, size 1
Remaining timeout: 198.00812888145447
Verifying property 4 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.690330982208252.

Properties batch 5, size 1
Remaining timeout: 197.90608930587769
Verifying property 5 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5070526599884033.

Properties batch 6, size 1
Remaining timeout: 197.80371570587158
Verifying property 6 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0551743507385254.

Properties batch 7, size 1
Remaining timeout: 197.70184540748596
Verifying property 7 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.499586820602417.

Properties batch 8, size 1
Remaining timeout: 197.59892320632935
Verifying property 8 with 1 instances.
##### Instance 160 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.21251757]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.69691086, -9.90914440, -3.04869223, -5.95901394, -2.41780186,
        -6.51351690, -5.05484104, -5.98770094, -7.13607407, -9.76951885],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.21251757]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 647
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 238
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 906
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007488727569580078
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 25] 
split level 3: [/input-12, 37] 
split level 4: [/input-12, 26] 
split level 5: [/input-12, 51] 
split level 6: [/input-12, 44] 
split level 7: [/input-12, 82] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 6.151199340820312e-05
Time: prepare 0.0019    bound 0.0051    transfer 0.0042    finalize 0.0037    func 0.0151    
Accumulated time: func 0.0151    prepare 0.0024    bound 0.0051    transfer 0.0042    finalize 0.0037    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0254    set_bounds 0.0192    solve 0.0152    add 0.0001    
Accumulated time: pickout 0.0006    decision 0.0254    set_bounds 0.0192    solve 0.0152    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.06603527069091797

the mip building process is not terminated yet, kill it
Result: safe in 2.8554 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 161, vnnlib ID: 161 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.37989235, -12.20897579,  -6.17734432,  -5.76625729,  -6.93807411,
          -3.77729273,  -8.37195778,  -7.49653196, -10.76665974, -11.58906174]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [456]; unstable size 456; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 195, 1, 456] with unstable size 194 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 456] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 456] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [194]; unstable size 194; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 194] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 194] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[4.38867855, 6.47063112, 1.48629057, 1.57262683, 2.21376371, 3.23497462,
         2.94880271, 5.30806875, 6.18771648]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0407 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 162, vnnlib ID: 162 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.11128426, -16.94595146,  -9.70340824, -12.93247986, -10.71098232,
         -13.59650612, -11.43742085, -14.93857956, -14.94828510, -17.84584045]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [429]; unstable size 429; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 429] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 429] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 429] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 210] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.12003708, 5.67749119, 2.36852145, 0.16531777, 2.94698119, 0.60728979,
         3.85684586, 3.46587348, 6.63982296]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0530 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 163, vnnlib ID: 163 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.02505970,  -9.52995014,  -8.17180538,  -8.71479893,  -8.61084557,
          -8.27292728,  -9.82778072,  -7.94948912, -11.30757618,  -9.90987301]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 260, 1, 638] with unstable size 259 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 638] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [259]; unstable size 259; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 259] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 259] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.64107984, -0.23480225, -1.33058977, -0.47275138, -0.46761417,
         -0.91006315,  0.31482840,  1.61070681,  0.12702465]], device='cuda:0') None
Remain 6 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.02505970,  -9.52995014,  -8.17180538,  -8.71479893,  -8.61084557,
          -8.27292728,  -9.82778072,  -7.94948912, -11.30757618,  -9.90987301]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.53590202,  -9.31555843,  -7.54204559,  -8.31618977,  -8.22403336,
           -7.93875265,  -9.35239506,  -7.99370146, -10.90418053,  -9.78509235],
         [ -8.53590202,  -9.31555843,  -7.54204559,  -8.31618977,  -8.22403336,
           -7.93875265,  -9.35239506,  -7.99370146, -10.90418053,  -9.78509235]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.54220057,  1.32185698, -0.45165586,  0.32248831,  0.23033190,
          -0.05494881]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0089 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0570 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 164, vnnlib ID: 164 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.41563416, -7.71300030, -2.86234260, -2.13727427, -3.26359797,
         -1.15524995, -3.90352178, -2.95602751, -6.72349644, -6.40303564]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [677]; unstable size 677; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 255, 1, 677] with unstable size 254 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 677] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 677] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [254]; unstable size 254; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 254] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 254] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.88557863, 4.58735847, 0.73231339, 0.69587106, 1.00518203, 1.60793078,
         0.80470550, 3.98152089, 3.66006517]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0443 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 165, vnnlib ID: 165 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.93124580, -13.00026798, -10.51418877, -11.34232426, -11.59994984,
         -12.09090137, -13.21082306, -11.37638664, -10.77716541, -12.72988605]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [678]; unstable size 678; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 678] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 678] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 678] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 228] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.97155690, -0.03237689, -1.84702158, -0.69079256, -0.48902345,
          0.04457062,  0.97582495, -2.07122803, -0.15928888]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.93124580, -13.00026798, -10.51418877, -11.34232426, -11.59994984,
         -12.09090137, -13.21082306, -11.37638664, -10.77716541, -12.72988605]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.93124771, -13.00026798, -10.51418972, -11.34232521, -11.59995174,
          -12.09090233, -13.21082497, -11.37638760, -10.77716732, -12.72988605],
         [-11.93124771, -13.00026798, -10.51418972, -11.34232521, -11.59995174,
          -12.09090233, -13.21082497, -11.37638760, -10.77716732, -12.72988605]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.55486012,  1.62388039, -0.86219788, -0.03406239,  0.22356415,
          -0.59922028,  1.35349846]]], device='cuda:0')
number of violation:  3
clean attack image tensor([[[[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         ...,


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]],


         [[[-0.98888886, -0.90952379, -0.65555555,  ..., -0.51269841,
            -0.59206349, -0.51269841],
           [-0.89365077, -0.76666665, -0.60793650,  ..., -0.25873005,
            -0.40158719, -0.41746020],
           [-0.60793650, -0.56031746, -0.60793650,  ..., -0.13174593,
            -0.30634910, -0.40158719],
           ...,
           [ 0.72539687,  0.74126989,  0.80476195,  ...,  1.67777801,
             1.53492093,  1.18571460],
           [ 1.32857168,  1.37619078,  1.39206374,  ...,  1.69365108,
             1.51904786,  1.21746063],
           [ 1.77301610,  1.82063520,  1.78888917,  ...,  1.70952404,
             1.50317490,  1.15396857]],

          [[-0.95008045, -0.74074072, -0.32206106,  ..., -0.33816412,
            -0.38647330, -0.35426718],
           [-0.86956519, -0.69243151, -0.48309177,  ..., -0.11272129,
            -0.24154577, -0.32206106],
           [-0.62801927, -0.57971013, -0.62801927,  ..., -0.09661824,
            -0.30595800, -0.46698871],
           ...,
           [ 0.41867965,  0.41867965,  0.46698883,  ...,  1.69082153,
             1.44927561,  0.99838978],
           [ 1.22383285,  1.27214205,  1.27214205,  ...,  1.70692456,
             1.44927561,  1.03059590],
           [ 1.81964600,  1.86795521,  1.85185218,  ...,  1.73913074,
             1.46537876,  0.99838978]],

          [[-0.68815589, -0.41829082,  0.09145443,  ...,  0.42128953,
             0.39130452,  0.40629703],
           [-0.70314842, -0.52323836, -0.28335828,  ...,  0.61619210,
             0.48125952,  0.37631202],
           [-0.49325335, -0.44827583, -0.49325335,  ...,  0.54122955,
             0.33133450,  0.12143944],
           ...,
           [ 0.30134949,  0.31634200,  0.37631202,  ...,  2.02548766,
             1.71064508,  1.05097473],
           [ 1.26086998,  1.32084000,  1.32084000,  ...,  2.02548766,
             1.68066013,  1.06596720],
           [ 2.07046509,  2.10045004,  2.09295392,  ...,  2.02548766,
             1.63568258,  1.00599718]]]]], device='cuda:0') torch.Size([1, 7, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0536 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 166, vnnlib ID: 166 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.11835384, -8.97128582, -5.58492565, -4.69414091, -4.89179802,
         -5.64415693, -2.85636353, -6.39860678, -9.19930935, -7.69397116]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [551]; unstable size 551; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 328, 1, 551] with unstable size 327 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 551] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 551] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [327]; unstable size 327; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 327] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 327] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.57804942e+00,  3.19466352e+00,  7.62257576e-01,  2.92238712e-01,
         -4.12940979e-04,  8.40279818e-01,  1.08616257e+00,  3.18620443e+00,
          2.37681603e+00]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.11835384, -8.97128582, -5.58492565, -4.69414091, -4.89179802,
         -5.64415693, -2.85636353, -6.39860678, -9.19930935, -7.69397116]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.81it/s]100%|██████████| 1/1 [00:00<00:00,  8.80it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.55216551, -8.57399082, -5.03808975, -4.19881392, -4.09511757,
          -5.05613708, -2.93273902, -5.77291918, -8.65580177, -7.32171822]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[1.16237855]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1163 seconds.
PGD attack failed
verified_status unknown
verified_success False

all verified at 1th iter
best_l after optimization: 14.467982292175293
alpha/beta optimization time: 0.02930450439453125
initial alpha-crown bounds: tensor([[2.59561300, 3.21909404, 0.77398157, 0.30205679, 0.01445007, 0.85292077,
         1.10492110, 3.20970964, 2.39523602]], device='cuda:0')
Number of class (without rhs): 0 ; Worst class: (+ rhs) 0.0144500732421875
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
verified with init bound!
Result: safe-incomplete in 0.2846 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 167, vnnlib ID: 167 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
         -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [625]; unstable size 625; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 289, 1, 625] with unstable size 288 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 625] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 625] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [288]; unstable size 288; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 288] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 288] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.12974119, -0.58860958,  0.22682750,  0.44695139,  0.33009374,
          0.98268539,  1.32415795, -0.52337849,  2.49502420]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
         -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]100%|██████████| 1/1 [00:00<00:00,  8.30it/s]
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6312 seconds.
lower bounds for all target labels: [2.5956130027770996, 3.2190940380096436, 0.7739815711975098, 0.30205678939819336, 0.0144500732421875, 0.8529207706451416, 1.1049211025238037, 3.209709644317627, 2.395236015319824]
Number of cpus: 96  Number of subproblems: 0
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: []
start creating model mps for candidates: []
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.70518780, -9.34816551, -5.36907673, -6.25292778, -6.47456360,
          -6.50949335, -7.11633730, -7.72864771, -4.86134338, -8.44863224],
         [-4.70518780, -9.34816551, -5.36907673, -6.25292778, -6.47456360,
          -6.50949335, -7.11633730, -7.72864771, -4.86134338, -8.44863224]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.66388893, 0.15615559]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1240 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 8.48111343383789
alpha/beta optimization time: 1.2791869640350342
initial alpha-crown bounds: tensor([[ 3.24760532, -0.53066134,  0.27715951,  0.50497174,  0.39338493,
          1.04264975,  1.40458310, -0.43028843,  2.57170868]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.5306613445281982
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6808 seconds.
lower bounds for all target labels: [3.247605323791504, -0.5306613445281982, 0.27715951204299927, 0.5049717426300049, 0.3933849334716797, 1.042649745941162, 1.4045830965042114, -0.4302889108657837, 2.5717086791992188]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [1, 7]
start creating model mps for candidates: ['lay/16_1', 'lay/16_7']
parallel mps save finish
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 150677 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 150680 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.4199469089508
Verifying property 0 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.247605323791504.

Properties batch 1, size 1
Remaining timeout: 198.16079902648926
Verifying property 1 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5717086791992188.

Properties batch 2, size 1
Remaining timeout: 198.03972244262695
Verifying property 2 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.4045830965042114.

Properties batch 3, size 1
Remaining timeout: 197.92324376106262
Verifying property 3 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.042649745941162.

Properties batch 4, size 1
Remaining timeout: 197.80656266212463
Verifying property 4 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.5049717426300049.

Properties batch 5, size 1
Remaining timeout: 197.69069170951843
Verifying property 5 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3933849334716797.

Properties batch 6, size 1
Remaining timeout: 197.5745587348938
Verifying property 6 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.27715951204299927.

Properties batch 7, size 1
Remaining timeout: 197.45907616615295
Verifying property 7 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.43028843]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
        -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.43028843]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 625
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 926
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0010058879852294922
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 82] 
split level 1: [/input-12, 46] 
split level 2: [/input-12, 17] 
split level 3: [/input-12, 53] 
split level 4: [/input-12, 31] 
split level 5: [/input-12, 54] 
split level 6: [/input-12, 26] 
split level 7: [/input-8, 1323] 
pruning_in_iteration open status: True
ratio of positive domain = 247 / 256 = 0.96484375
pruning-in-iteration extra time: 0.004669189453125
Time: prepare 0.0032    bound 0.1242    transfer 0.0041    finalize 0.0023    func 0.1339    
Accumulated time: func 0.1339    prepare 0.0037    bound 0.1242    transfer 0.0041    finalize 0.0023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.10593 (8), -0.09333 (8), -0.07829 (8), -0.06699 (8), -0.03447 (8), -0.02255 (8), -0.01585 (8), -0.01556 (8), -0.00497 (8), 
Length of domains: 9
Time: pickout 0.0017    decision 0.0257    set_bounds 0.0218    solve 0.1340    add 0.0396    
Accumulated time: pickout 0.0017    decision 0.0257    set_bounds 0.0218    solve 0.1340    add 0.0396    
Current (lb-rhs): -0.10592669248580933
9 domains visited
Cumulative time: 0.2357008457183838

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 9
splitting decisions: 
split level 0: [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] [/input-12, 99] 
split level 1: [/input-8, 413] [/input-8, 1436] [/input-8, 1436] [/input-8, 1436] [/input-8, 413] [/input-8, 1436] [/input-8, 118] [/input-8, 1436] [/input-8, 1436] 
split level 2: [/input-8, 924] [/input-8, 413] [/input-8, 118] [/input-8, 1437] [/input-8, 924] [/input-8, 413] [/input-8, 410] [/input-8, 118] [/input-8, 1437] 
split level 3: [/input-8, 1620] [/input-8, 924] [/input-8, 413] [/input-8, 924] [/input-8, 1620] [/input-8, 924] [/input, 1623] [/input-8, 413] [/input-8, 924] 
split level 4: [/input-8, 1628] [/input-8, 1620] [/input-8, 410] [/input-8, 410] [/input-8, 1628] [/input-8, 1620] [/input-8, 550] [/input-8, 410] [/input-8, 410] 
pruning_in_iteration open status: True
ratio of positive domain = 221 / 288 = 0.7673611111111112
pruning-in-iteration extra time: 0.004772186279296875
Time: prepare 0.0061    bound 0.1168    transfer 0.0026    finalize 0.0024    func 0.1280    
Accumulated time: func 0.2619    prepare 0.0100    bound 0.2410    transfer 0.0067    finalize 0.0048    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07939 (13), -0.07864 (13), -0.07417 (13), -0.07375 (13), -0.07349 (13), -0.07301 (13), -0.06731 (13), -0.06664 (13), -0.06631 (13), -0.06572 (13), -0.06452 (13), -0.06415 (13), -0.06129 (13), -0.06089 (13), -0.06086 (13), -0.06075 (13), -0.06040 (13), -0.06017 (13), -0.05890 (13), -0.05859 (13), 
Length of domains: 67
Time: pickout 0.0012    decision 0.0195    set_bounds 0.0159    solve 0.1281    add 0.0779    
Accumulated time: pickout 0.0029    decision 0.0452    set_bounds 0.0377    solve 0.2621    add 0.1175    
Current (lb-rhs): -0.07939201593399048
76 domains visited
Cumulative time: 0.48627519607543945

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 67
splitting decisions: 
split level 0: [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] [/input-8, 1437] [/input-8, 118] 
split level 1: [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 630] [/input-8, 924] [/input-8, 413] [/input-8, 924] [/input-8, 630] 
pruning_in_iteration open status: False
ratio of positive domain = 22 / 268 = 0.08208955223880599
pruning-in-iteration extra time: 0.00011467933654785156
Time: prepare 0.0052    bound 0.0950    transfer 0.0008    finalize 0.0020    func 0.1031    
Accumulated time: func 0.3650    prepare 0.0154    bound 0.3360    transfer 0.0075    finalize 0.0068    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07178 (15), -0.07104 (15), -0.06651 (15), -0.06585 (15), -0.06584 (15), -0.06510 (15), -0.06228 (15), -0.06152 (15), -0.06039 (15), -0.05998 (15), -0.05977 (15), -0.05920 (15), -0.05882 (15), -0.05872 (15), -0.05814 (15), -0.05802 (15), -0.05738 (15), -0.05702 (15), -0.05542 (15), -0.05481 (15), 
Length of domains: 246
Time: pickout 0.0145    decision 0.0146    set_bounds 0.0071    solve 0.1032    add 0.0796    
Accumulated time: pickout 0.0174    decision 0.0598    set_bounds 0.0447    solve 0.3652    add 0.1971    
Current (lb-rhs): -0.07177603244781494
322 domains visited
Cumulative time: 0.712695837020874

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 246
splitting decisions: 
split level 0: [/input-8, 413] [/input, 1623] [/input-8, 413] [/input, 1623] [/input-8, 413] [/input, 1623] [/input-8, 630] [/input, 1623] [/input-8, 413] [/input, 1623] 
pruning_in_iteration open status: False
ratio of positive domain = 31 / 492 = 0.0630081300813008
pruning-in-iteration extra time: 5.698204040527344e-05
Time: prepare 0.0112    bound 0.1216    transfer 0.0118    finalize 0.0056    func 0.1515    
Accumulated time: func 0.5165    prepare 0.0269    bound 0.4576    transfer 0.0193    finalize 0.0124    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06845 (16), -0.06772 (16), -0.06306 (16), -0.06252 (16), -0.06240 (16), -0.06179 (16), -0.05836 (16), -0.05760 (16), -0.05607 (16), -0.05587 (16), -0.05560 (16), -0.05544 (16), -0.05533 (16), -0.05526 (16), -0.05515 (16), -0.05494 (16), -0.05475 (16), -0.05456 (16), -0.05344 (16), -0.05309 (16), 
Length of domains: 460
Time: pickout 0.0174    decision 0.0332    set_bounds 0.0117    solve 0.1516    add 0.2389    
Accumulated time: pickout 0.0348    decision 0.0930    set_bounds 0.0564    solve 0.5168    add 0.4360    
Current (lb-rhs): -0.0684465765953064
782 domains visited
Cumulative time: 1.1770951747894287

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 460
splitting decisions: 
split level 0: [/input-8, 1571] [/input-8, 1620] [/input-8, 1571] [/input-8, 1620] [/input, 1623] [/input-8, 1620] [/input, 1623] [/input-8, 1620] [/input-8, 1571] [/input-8, 1620] 
pruning_in_iteration open status: False
ratio of positive domain = 94 / 920 = 0.10217391304347823
pruning-in-iteration extra time: 5.364418029785156e-05
Time: prepare 0.0213    bound 0.1115    transfer 0.0138    finalize 0.0083    func 0.1551    
Accumulated time: func 0.6715    prepare 0.0484    bound 0.5691    transfer 0.0331    finalize 0.0207    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06509 (17), -0.06448 (17), -0.06178 (17), -0.06092 (17), -0.05917 (17), -0.05901 (17), -0.05859 (17), -0.05842 (17), -0.05589 (17), -0.05583 (17), -0.05508 (17), -0.05497 (17), -0.05475 (17), -0.05438 (17), -0.05223 (17), -0.05212 (17), -0.05198 (17), -0.05190 (17), -0.05173 (17), -0.05161 (17), 
Length of domains: 824
Time: pickout 0.0219    decision 0.0465    set_bounds 0.0208    solve 0.1563    add 0.1036    
Accumulated time: pickout 0.0567    decision 0.1395    set_bounds 0.0772    solve 0.6731    add 0.5396    
Current (lb-rhs): -0.06508767604827881
1606 domains visited
Cumulative time: 1.5348234176635742

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 824
splitting decisions: 
split level 0: [/input, 1623] [/input, 1623] [/input-8, 1571] [/input-8, 550] [/input-8, 1571] [/input, 1623] [/input-8, 550] [/input, 1623] [/input-8, 550] [/input-8, 1571] 
pruning_in_iteration open status: False
ratio of positive domain = 190 / 1648 = 0.11529126213592233
pruning-in-iteration extra time: 6.151199340820312e-05
Time: prepare 0.0413    bound 0.1198    transfer 0.0209    finalize 0.0121    func 0.1943    
Accumulated time: func 0.8659    prepare 0.0899    bound 0.6890    transfer 0.0540    finalize 0.0328    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06110 (18), -0.06053 (18), -0.05810 (18), -0.05775 (18), -0.05707 (18), -0.05700 (18), -0.05602 (18), -0.05551 (18), -0.05515 (18), -0.05478 (18), -0.05464 (18), -0.05372 (18), -0.05349 (18), -0.05300 (18), -0.05275 (18), -0.05206 (18), -0.05182 (18), -0.05167 (18), -0.05110 (18), -0.05096 (18), 
Length of domains: 1452
Time: pickout 0.0362    decision 0.0622    set_bounds 0.0300    solve 0.1947    add 0.1206    
Accumulated time: pickout 0.0929    decision 0.2017    set_bounds 0.1072    solve 0.8677    add 0.6602    
Current (lb-rhs): -0.06110203266143799
3058 domains visited
Cumulative time: 1.9881720542907715

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 1452
splitting decisions: 
split level 0: [/input-8, 1572] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] [/input-8, 1571] [/input-8, 1572] 
pruning_in_iteration open status: False
ratio of positive domain = 466 / 2904 = 0.1604683195592287
pruning-in-iteration extra time: 5.53131103515625e-05
Time: prepare 0.0705    bound 0.1643    transfer 0.0645    finalize 0.0218    func 0.3215    
Accumulated time: func 1.1874    prepare 0.1606    bound 0.8533    transfer 0.1186    finalize 0.0546    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05678 (19), -0.05624 (19), -0.05520 (19), -0.05461 (19), -0.05399 (19), -0.05372 (19), -0.05276 (19), -0.05273 (19), -0.05216 (19), -0.05195 (19), -0.05189 (19), -0.05154 (19), -0.05144 (19), -0.05138 (19), -0.05136 (19), -0.05104 (19), -0.05084 (19), -0.05021 (19), -0.04977 (19), -0.04941 (19), 
Length of domains: 2423
Time: pickout 0.0453    decision 0.0959    set_bounds 0.0581    solve 0.3220    add 0.1084    
Accumulated time: pickout 0.1382    decision 0.2976    set_bounds 0.1653    solve 1.1897    add 0.7686    
Current (lb-rhs): -0.056784987449645996
5481 domains visited
Cumulative time: 2.635789155960083

BaB round 8
Fetch cut process: mps for current label is not ready yet
batch: 2423
splitting decisions: 
split level 0: [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] [/input-8, 630] [/input-8, 1148] [/input-8, 1148] [/input-8, 1148] 
pruning_in_iteration open status: True
ratio of positive domain = 1711 / 4846 = 0.35307470078415193
pruning-in-iteration extra time: 0.005071878433227539
Time: prepare 0.1352    bound 0.3838    transfer 0.0600    finalize 0.0373    func 0.6168    
Accumulated time: func 1.8041    prepare 0.2962    bound 1.2371    transfer 0.1785    finalize 0.0919    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05309 (20), -0.05254 (20), -0.05144 (20), -0.05100 (20), -0.05082 (20), -0.05054 (20), -0.05041 (20), -0.04983 (20), -0.04982 (20), -0.04946 (20), -0.04944 (20), -0.04929 (20), -0.04916 (20), -0.04890 (20), -0.04884 (20), -0.04857 (20), -0.04780 (20), -0.04776 (20), -0.04771 (20), -0.04765 (20), 
Length of domains: 3135
Time: pickout 0.0657    decision 0.5250    set_bounds 0.1220    solve 0.6182    add 0.1710    
Accumulated time: pickout 0.2038    decision 0.8226    set_bounds 0.2873    solve 1.8080    add 0.9396    
Current (lb-rhs): -0.05308651924133301
8616 domains visited
Cumulative time: 4.16569972038269

BaB round 9
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0046
batch: 3135
splitting decisions: 
split level 0: [/input-8, 1325] [/input-8, 1325] [/input-8, 1325] [/input-8, 1620] [/input-8, 1148] [/input-8, 1325] [/input-8, 630] [/input-8, 1620] [/input-8, 1325] [/input, 1623] 
pruning_in_iteration open status: True
ratio of positive domain = 1602 / 6270 = 0.25550239234449756
pruning-in-iteration extra time: 0.005373239517211914
Time: prepare 0.1685    bound 0.3670    transfer 0.0369    finalize 0.2152    func 0.7889    
Accumulated time: func 2.5931    prepare 0.4649    bound 1.6041    transfer 0.2154    finalize 0.3071    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05154 (21), -0.05095 (21), -0.04992 (21), -0.04939 (21), -0.04928 (21), -0.04897 (21), -0.04881 (21), -0.04830 (21), -0.04788 (21), -0.04783 (21), -0.04760 (21), -0.04735 (21), -0.04728 (21), -0.04705 (21), -0.04625 (21), -0.04620 (21), -0.04612 (21), -0.04612 (21), -0.04579 (21), -0.04577 (21), 
Length of domains: 4668
Time: pickout 0.0793    decision 0.1924    set_bounds 0.1432    solve 0.7905    add 0.1594    
Accumulated time: pickout 0.2831    decision 1.0150    set_bounds 0.4305    solve 2.5984    add 1.0990    
Current (lb-rhs): -0.05153858661651611
13284 domains visited
Cumulative time: 5.551238298416138

BaB round 10
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0029
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1438] [/input-8, 1438] [/input-8, 630] [/input-8, 1438] [/input-8, 1325] [/input-8, 1438] [/input-8, 1325] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 3919 / 8192 = 0.4783935546875
pruning-in-iteration extra time: 0.005260944366455078
Time: prepare 0.2276    bound 0.3630    transfer 0.0457    finalize 0.2117    func 0.8497    
Accumulated time: func 3.4428    prepare 0.6928    bound 1.9671    transfer 0.2611    finalize 0.5188    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05010 (22), -0.04951 (22), -0.04897 (21), -0.04845 (22), -0.04830 (21), -0.04787 (22), -0.04783 (21), -0.04783 (22), -0.04730 (22), -0.04639 (22), -0.04617 (22), -0.04587 (22), -0.04579 (21), -0.04577 (22), -0.04562 (22), -0.04481 (22), -0.04476 (22), -0.04465 (22), -0.04463 (22), -0.04456 (21), 
Length of domains: 4845
Time: pickout 0.0926    decision 0.2360    set_bounds 0.1907    solve 0.8514    add 0.1553    
Accumulated time: pickout 0.3758    decision 1.2511    set_bounds 0.6213    solve 3.4499    add 1.2543    
Current (lb-rhs): -0.05010026693344116
17557 domains visited
current_vram/total_varm: 11.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.110207796096802

BaB round 11
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0024
batch: 4845
splitting decisions: 
split level 0: [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1572] [/input-8, 1438] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 3226 / 9690 = 0.33292053663570687
pruning-in-iteration extra time: 0.005624055862426758
Time: prepare 0.2579    bound 0.4318    transfer 0.0555    finalize 0.2311    func 0.9773    
Accumulated time: func 4.4201    prepare 0.9511    bound 2.3989    transfer 0.3167    finalize 0.7499    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04751 (22), -0.04687 (22), -0.04635 (22), -0.04587 (23), -0.04527 (23), -0.04441 (23), -0.04440 (23), -0.04436 (22), -0.04423 (23), -0.04384 (23), -0.04382 (23), -0.04361 (23), -0.04318 (22), -0.04304 (22), -0.04295 (23), -0.04278 (23), -0.04242 (22), -0.04232 (23), -0.04214 (23), -0.04191 (23), 
Length of domains: 6464
Time: pickout 0.0924    decision 0.2898    set_bounds 0.2054    solve 0.9792    add 0.1721    
Accumulated time: pickout 0.4682    decision 1.5409    set_bounds 0.8266    solve 4.4291    add 1.4264    
Current (lb-rhs): -0.04750645160675049
24021 domains visited
Cumulative time: 8.881794452667236

BaB round 12
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 6464
splitting decisions: 
split level 0: [/input-8, 1620] [/input-8, 550] [/input-8, 1438] [/input-8, 1620] [/input-8, 1325] [/input-8, 1438] [/input, 1623] [/input-8, 1325] [/input-8, 550] [/input-8, 1438] 
pruning_in_iteration open status: True
ratio of positive domain = 4040 / 12928 = 0.3125
pruning-in-iteration extra time: 0.005743503570556641
Time: prepare 0.3575    bound 0.5241    transfer 0.0700    finalize 0.0848    func 1.0376    
Accumulated time: func 5.4577    prepare 1.3089    bound 2.9230    transfer 0.3866    finalize 0.8347    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04423 (23), -0.04359 (23), -0.04261 (24), -0.04210 (23), -0.04202 (24), -0.04115 (23), -0.04098 (24), -0.04092 (24), -0.04058 (23), -0.04054 (23), -0.04035 (24), -0.04034 (24), -0.04008 (23), -0.03991 (24), -0.03944 (24), -0.03933 (24), -0.03927 (24), -0.03920 (23), -0.03908 (24), -0.03888 (24), 
Length of domains: 8888
Time: pickout 0.1314    decision 0.3823    set_bounds 0.4546    solve 1.0405    add 0.1771    
Accumulated time: pickout 0.5996    decision 1.9231    set_bounds 1.2812    solve 5.4696    add 1.6035    
Current (lb-rhs): -0.044225096702575684
32909 domains visited
Cumulative time: 11.10835337638855

BaB round 13
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0037
batch: 8192
splitting decisions: 
split level 0: [/input-8, 430] [/input-8, 430] [/input-8, 1572] [/input-8, 430] [/input-8, 925] [/input-8, 925] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] [/input-8, 1628] 
pruning_in_iteration open status: True
ratio of positive domain = 4857 / 16384 = 0.29644775390625
pruning-in-iteration extra time: 0.005807161331176758
Time: prepare 0.4378    bound 0.6307    transfer 0.0880    finalize 0.2962    func 1.4540    
Accumulated time: func 6.9117    prepare 1.7471    bound 3.5537    transfer 0.4746    finalize 1.1309    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04423 (23), -0.04359 (23), -0.04092 (24), -0.04058 (23), -0.04034 (24), -0.03920 (23), -0.03917 (25), -0.03883 (24), -0.03858 (23), -0.03857 (25), -0.03816 (25), -0.03785 (23), -0.03757 (25), -0.03753 (25), -0.03745 (23), -0.03729 (23), -0.03701 (24), -0.03691 (25), -0.03685 (25), -0.03679 (24), 
Length of domains: 12223
Time: pickout 0.1491    decision 0.6772    set_bounds 0.3762    solve 1.4577    add 0.1927    
Accumulated time: pickout 0.7487    decision 2.6003    set_bounds 1.6574    solve 6.9273    add 1.7962    
Current (lb-rhs): -0.044225096702575684
44436 domains visited
current_vram/total_varm: 24.6GB/99.9GB, batch_size increase to 16384
Cumulative time: 14.00340485572815

BaB round 14
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 12223
splitting decisions: 
split level 0: [/input-8, 550] [/input-8, 1325] [/input-8, 1139] [/input-8, 550] [/input-8, 1139] [/input-8, 550] [/input-8, 550] [/input-8, 1139] [/input-8, 550] [/input-8, 1139] 
pruning_in_iteration open status: True
ratio of positive domain = 7373 / 24446 = 0.3016035343205432
pruning-in-iteration extra time: 0.005723714828491211
Time: prepare 0.6237    bound 0.8882    transfer 0.1374    finalize 0.1456    func 1.7969    
Accumulated time: func 8.7086    prepare 2.3711    bound 4.4420    transfer 0.6120    finalize 1.2765    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03997 (24), -0.03937 (24), -0.03827 (24), -0.03774 (24), -0.03747 (25), -0.03707 (24), -0.03687 (25), -0.03653 (25), -0.03594 (25), -0.03559 (26), -0.03540 (25), -0.03512 (26), -0.03508 (24), -0.03502 (24), -0.03500 (26), -0.03458 (26), -0.03454 (26), -0.03448 (24), -0.03440 (25), -0.03410 (26), 
Length of domains: 17073
Time: pickout 0.2121    decision 0.9003    set_bounds 0.7536    solve 1.8025    add 0.1863    
Accumulated time: pickout 0.9608    decision 3.5006    set_bounds 2.4109    solve 8.7298    add 1.9825    
Current (lb-rhs): -0.03997337818145752
61509 domains visited
Cumulative time: 17.919867992401123

BaB round 15
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts: total 391 constraints, 27520 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4183
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 614] [/input-8, 614] [/input-8, 1628] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] [/input-8, 614] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03665030002593994

all verified at 4th iter
pruning_in_iteration open status: True
ratio of positive domain = 32768 / 32768 = 1.0
pruning-in-iteration extra time: 0.0013048648834228516
Time: prepare 0.8845    bound 0.9837    transfer 0.1734    finalize 0.2176    func 2.7410    
Accumulated time: func 11.4496    prepare 3.2560    bound 5.4256    transfer 0.7855    finalize 1.4942    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03827 (24), -0.03774 (24), -0.03747 (25), -0.03707 (24), -0.03687 (25), -0.03508 (24), -0.03377 (24), -0.03354 (25), -0.03327 (24), -0.03244 (24), -0.03221 (24), -0.03212 (25), -0.03183 (24), -0.03164 (25), -0.03153 (25), -0.03102 (25), -0.03100 (24), -0.03038 (24), -0.02917 (26), -0.02911 (25), 
Length of domains: 689
Time: pickout 0.2907    decision 1.6792    set_bounds 0.9607    solve 2.7471    add 0.0186    
Accumulated time: pickout 1.2515    decision 5.1798    set_bounds 3.3717    solve 11.4769    add 2.0012    
Current (lb-rhs): -0.038269221782684326
61509 domains visited
Cumulative time: 24.186468362808228

BaB round 16
Matched cut cplex process, internal label idx = 7
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0019
batch: 689
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] [/input-8, 1325] [/input-8, 1628] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.034895122051239014

all verified at 4th iter
pruning_in_iteration open status: True
ratio of positive domain = 1378 / 1378 = 1.0
pruning-in-iteration extra time: 0.0010426044464111328
Time: prepare 0.0696    bound 0.0994    transfer 0.0127    finalize 0.0094    func 0.1997    
Accumulated time: func 11.6493    prepare 3.3259    bound 5.5250    transfer 0.7982    finalize 1.5036    
all_split False
Length of domains: 0
Time: pickout 0.0252    decision 0.0562    set_bounds 0.0291    solve 0.1999    add 0.0001    
Accumulated time: pickout 1.2767    decision 5.2360    set_bounds 3.4008    solve 11.6768    add 2.0013    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
61509 domains visited
Cumulative time: 24.51881194114685

found process to kill: terminal indx = 7
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=7_30269829.log

Properties batch 8, size 1
Remaining timeout: 172.7427203655243
Verifying property 8 with 1 instances.
##### Instance 167 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.53066134]], device='cuda:0') need to verify.
Model prediction is: tensor([-4.73988724, -9.75906086, -5.44053173, -6.54372168, -6.64882469,
        -6.77933979, -7.41226196, -7.94059706, -5.61829853, -8.84854412],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.53066134]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 625
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 280
Node /15 input 0: size torch.Size([100]) unstable 21
-----------------
# of unstable neurons: 926
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts: total 584 constraints, 29647 nonzero elements
cuts preparing time: 0.0112
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
Cut time: 0.24813532829284668
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts: total 584 constraints, 29647 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2523
batch: 1
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 31] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 26] 
split level 4: [/input-12, 4] 
split level 5: [/input-12, 41] 
split level 6: [/input-12, 10] 
split level 7: [/input-8, 1628] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.08458256721496582
10 lb beta sum: 8.841778755187988, worst -0.03640151768922806
pruning_in_iteration open status: True
ratio of positive domain = 250 / 256 = 0.9765625
pruning-in-iteration extra time: 0.004936695098876953
Time: prepare 0.0032    bound 0.2904    transfer 0.0022    finalize 0.0019    func 0.2993    
Accumulated time: func 0.2993    prepare 0.0036    bound 0.2904    transfer 0.0022    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02348 (8), -0.02324 (8), -0.01945 (8), -0.01873 (8), -0.00332 (8), -0.00294 (8), 
Length of domains: 6
Time: pickout 0.0006    decision 0.0233    set_bounds 0.0185    solve 0.2994    add 0.0331    
Accumulated time: pickout 0.0006    decision 0.0233    set_bounds 0.0185    solve 0.2994    add 0.0331    
Current (lb-rhs): -0.023476045578718185
6 domains visited
Cumulative time: 0.8866817951202393

BaB round 2
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0006
batch: 6
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1052] [/input-8, 1052] [/input-8, 1620] [/input-8, 1052] [/input-8, 1620] [/input-8, 1052] 
split level 1: [/input-8, 1885] [/input-8, 1885] [/input-8, 413] [/input-8, 1437] [/input-8, 1052] [/input-8, 1437] 
split level 2: [/input-8, 1437] [/input-8, 1437] [/input-8, 1052] [/input-8, 1885] [/input-8, 845] [/input-8, 1885] 
split level 3: [/input-8, 845] [/input-8, 845] [/input-8, 845] [/input-8, 1620] [/input-8, 1885] [/input-8, 1620] 
split level 4: [/input-8, 1620] [/input-8, 1620] [/input-8, 1885] [/input-8, 845] [/input-8, 1891] [/input-8, 845] 
split level 5: [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] [/input-8, 1013] 
cut re-enabled after branching node selection
0 lb beta sum: 4.426983833312988, worst -0.001012708991765976
10 lb beta sum: 424.95819091796875, worst -0.010012991726398468
Early stop at 12th iter due to 10 iterations no improvement!
pruning_in_iteration open status: True
ratio of positive domain = 380 / 384 = 0.9895833333333334
pruning-in-iteration extra time: 0.002923250198364258
Time: prepare 0.0166    bound 0.1518    transfer 0.0041    finalize 0.0024    func 0.1775    
Accumulated time: func 0.4768    prepare 0.0206    bound 0.4422    transfer 0.0063    finalize 0.0044    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00101 (14), -0.00071 (14), -0.00049 (14), -0.00013 (14), 
Length of domains: 4
Time: pickout 0.0008    decision 0.0205    set_bounds 0.0194    solve 0.1776    add 0.0253    
Accumulated time: pickout 0.0014    decision 0.0439    set_bounds 0.0379    solve 0.4770    add 0.0585    
Current (lb-rhs): -0.001012708991765976
10 domains visited
Cumulative time: 1.1388664245605469

BaB round 3
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0008
batch: 4
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] [/input-8, 1438] 
split level 1: [/input-8, 284] [/input-8, 284] [/input-8, 284] [/input-8, 284] 
split level 2: [/input-8, 413] [/input-8, 413] [/input-8, 413] [/input-8, 413] 
split level 3: [/input-8, 859] [/input-8, 859] [/input-8, 859] [/input-8, 859] 
split level 4: [/input-8, 1021] [/input-8, 276] [/input-8, 1021] [/input-8, 276] 
split level 5: [/input-8, 1063] [/input-8, 1063] [/input-8, 1063] [/input-8, 1063] 
cut re-enabled after branching node selection
0 lb beta sum: 4.222846984863281, worst 0.005454545840620995

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 3.981590270996094e-05
Time: prepare 0.0112    bound 0.0061    transfer 0.0010    finalize 0.0013    func 0.0212    
Accumulated time: func 0.4980    prepare 0.0321    bound 0.4483    transfer 0.0073    finalize 0.0056    
all_split False
Length of domains: 0
Time: pickout 0.0006    decision 0.0206    set_bounds 0.0131    solve 0.0213    add 0.0001    
Accumulated time: pickout 0.0020    decision 0.0645    set_bounds 0.0510    solve 0.4982    add 0.0585    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
10 domains visited
Cumulative time: 1.1959152221679688

found process to kill: terminal indx = 1
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=167_spec=1_30269829.log
found process to kill: terminal indx = 7
found process for pidx=1
kill process for pidx=1
found process for pidx=7
Result: safe in 28.8694 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 168, vnnlib ID: 168 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.83010960, -18.46311760, -10.82516861, -14.02094841, -13.35524940,
         -13.57317543, -16.31656647, -16.24346542, -18.31108856, -17.83380508]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [478]; unstable size 478; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 77, 1, 478] with unstable size 76 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 5, 1, 478] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 478] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [76]; unstable size 76; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 5, 1, 76] with unstable size 4 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 76] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [4]; unstable size 4; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 4] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.44705367, 6.67497349, 2.73657417, 2.01246381, 2.17955446, 4.94375038,
         4.64395428, 6.66447973, 6.17840195]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0573 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 169, vnnlib ID: 169 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
         -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [540]; unstable size 540; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 540] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 540] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 540] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 184] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.41975927,  2.63730359, -0.24886775,  1.14163029,  0.84137625,
          1.68192852,  1.20813751,  0.96860707,  2.32131529]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
         -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.91it/s]100%|██████████| 1/1 [00:00<00:00,  8.90it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.52638006, -9.63549614, -5.04499722, -6.76773167, -4.97539616,
          -6.54810143, -7.45572472, -7.23138285, -7.37723446, -8.95701504]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.06960106]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1151 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.406267166137695
alpha/beta optimization time: 1.2316679954528809
initial alpha-crown bounds: tensor([[ 0.48204684,  2.72113252, -0.22036767,  1.16896892,  0.86237311,
          1.72370434,  1.25071502,  1.03288603,  2.38480806]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.2203676700592041
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6164 seconds.
lower bounds for all target labels: [0.48204612731933594, 2.7211318016052246, -0.2203669548034668, 1.1689677238464355, 0.8623723983764648, 1.7237039804458618, 1.2507140636444092, 1.0328869819641113, 2.3848085403442383]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 151406 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.49448156356812
Verifying property 0 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.721132516860962.

Properties batch 1, size 1
Remaining timeout: 198.2839539051056
Verifying property 1 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.38480806350708.

Properties batch 2, size 1
Remaining timeout: 198.1668655872345
Verifying property 2 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7237043380737305.

Properties batch 3, size 1
Remaining timeout: 198.0737760066986
Verifying property 3 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.2507150173187256.

Properties batch 4, size 1
Remaining timeout: 197.98155760765076
Verifying property 4 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.168968915939331.

Properties batch 5, size 1
Remaining timeout: 197.8835084438324
Verifying property 5 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.032886028289795.

Properties batch 6, size 1
Remaining timeout: 197.79119682312012
Verifying property 6 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8623731136322021.

Properties batch 7, size 1
Remaining timeout: 197.69818592071533
Verifying property 7 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.48204684257507324.

Properties batch 8, size 1
Remaining timeout: 197.60441970825195
Verifying property 8 with 1 instances.
##### Instance 169 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22036767]], device='cuda:0') need to verify.
Model prediction is: tensor([-6.63894939, -9.64244175, -5.12798119, -6.62656116, -4.67414284,
        -6.34183264, -7.44110918, -6.87718344, -7.57325172, -8.86707783],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22036767]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 540
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 181
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 739
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.000675201416015625
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 10] 
split level 1: [/input-12, 82] 
split level 2: [/input-12, 11] 
split level 3: [/input-12, 42] 
split level 4: [/input-8, 2019] 
split level 5: [/input-8, 1362] 
split level 6: [/input-8, 574] 
split level 7: [/input-8, 1073] 
pruning_in_iteration open status: True
ratio of positive domain = 208 / 256 = 0.8125
pruning-in-iteration extra time: 0.00526118278503418
Time: prepare 0.0033    bound 0.1464    transfer 0.0048    finalize 0.0021    func 0.1567    
Accumulated time: func 0.1567    prepare 0.0037    bound 0.1464    transfer 0.0048    finalize 0.0021    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06508 (8), -0.06485 (8), -0.06452 (8), -0.06448 (8), -0.06429 (8), -0.06425 (8), -0.06392 (8), -0.06369 (8), -0.06033 (8), -0.06017 (8), -0.05999 (8), -0.05971 (8), -0.05961 (8), -0.05957 (8), -0.05957 (8), -0.05944 (8), -0.05943 (8), -0.05938 (8), -0.05901 (8), -0.05888 (8), 
Length of domains: 48
Time: pickout 0.0006    decision 0.0278    set_bounds 0.0226    solve 0.1568    add 0.0665    
Accumulated time: pickout 0.0006    decision 0.0278    set_bounds 0.0226    solve 0.1568    add 0.0665    
Current (lb-rhs): -0.06507575511932373
48 domains visited
Cumulative time: 0.28537988662719727

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 48
splitting decisions: 
split level 0: [/input-8, 1124] [/input-8, 1889] [/input-8, 1499] [/input-8, 1124] [/input-8, 1889] [/input-8, 1356] [/input-8, 1124] [/input-8, 1889] [/input-8, 573] [/input-8, 1124] 
split level 1: [/input-8, 1499] [/input-8, 555] [/input-8, 1356] [/input-8, 1499] [/input-8, 555] [/input-8, 573] [/input-8, 1499] [/input-8, 555] [/input-8, 1356] [/input-8, 1499] 
split level 2: [/input-8, 573] [/input-8, 1896] [/input-8, 573] [/input-8, 573] [/input-8, 1896] [/input-8, 1499] [/input-8, 573] [/input-8, 1896] [/input-8, 555] [/input-8, 573] 
pruning_in_iteration open status: True
ratio of positive domain = 107 / 384 = 0.27864583333333337
pruning-in-iteration extra time: 0.005049228668212891
Time: prepare 0.0077    bound 0.1782    transfer 0.0052    finalize 0.0027    func 0.1938    
Accumulated time: func 0.3505    prepare 0.0116    bound 0.3246    transfer 0.0100    finalize 0.0048    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05757 (11), -0.05743 (11), -0.05699 (11), -0.05692 (11), -0.05685 (11), -0.05679 (11), -0.05669 (11), -0.05656 (11), -0.05634 (11), -0.05621 (11), -0.05604 (11), -0.05591 (11), -0.05489 (11), -0.05476 (11), -0.05424 (11), -0.05411 (11), -0.05339 (11), -0.05331 (11), -0.05281 (11), -0.05275 (11), 
Length of domains: 277
Time: pickout 0.0058    decision 0.0210    set_bounds 0.0144    solve 0.1939    add 0.0828    
Accumulated time: pickout 0.0064    decision 0.0488    set_bounds 0.0370    solve 0.3507    add 0.1492    
Current (lb-rhs): -0.057567596435546875
325 domains visited
Cumulative time: 0.6161222457885742

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 277
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 2020] [/input-8, 1356] [/input-8, 2020] [/input-8, 1356] [/input-8, 2020] [/input-8, 2020] [/input-8, 2020] [/input-8, 1356] [/input-8, 2020] 
pruning_in_iteration open status: False
ratio of positive domain = 34 / 554 = 0.06137184115523464
pruning-in-iteration extra time: 5.5789947509765625e-05
Time: prepare 0.0115    bound 0.1002    transfer 0.0129    finalize 0.0063    func 0.1309    
Accumulated time: func 0.4814    prepare 0.0233    bound 0.4248    transfer 0.0229    finalize 0.0111    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05404 (12), -0.05356 (12), -0.05336 (12), -0.05336 (12), -0.05288 (12), -0.05287 (12), -0.05268 (12), -0.05239 (12), -0.05220 (12), -0.05219 (12), -0.05171 (12), -0.05151 (12), -0.05148 (12), -0.05080 (12), -0.05064 (12), -0.05031 (12), -0.05025 (12), -0.05016 (12), -0.04997 (12), -0.04996 (12), 
Length of domains: 520
Time: pickout 0.0177    decision 0.0341    set_bounds 0.0144    solve 0.1311    add 0.0607    
Accumulated time: pickout 0.0240    decision 0.0830    set_bounds 0.0515    solve 0.4818    add 0.2099    
Current (lb-rhs): -0.05404305458068848
845 domains visited
Cumulative time: 0.8770437240600586

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 520
splitting decisions: 
split level 0: [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] [/input-8, 1356] [/input-8, 1868] [/input-8, 2020] [/input-8, 1868] 
pruning_in_iteration open status: False
ratio of positive domain = 20 / 1040 = 0.019230769230769273
pruning-in-iteration extra time: 0.00013113021850585938
Time: prepare 0.0219    bound 0.1189    transfer 0.0151    finalize 0.0114    func 0.1676    
Accumulated time: func 0.6490    prepare 0.0456    bound 0.5437    transfer 0.0380    finalize 0.0225    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04971 (13), -0.04950 (13), -0.04937 (13), -0.04918 (13), -0.04915 (13), -0.04898 (13), -0.04897 (13), -0.04877 (13), -0.04864 (13), -0.04846 (13), -0.04843 (13), -0.04825 (13), -0.04765 (13), -0.04749 (13), -0.04730 (13), -0.04725 (13), -0.04715 (13), -0.04712 (13), -0.04704 (13), -0.04696 (13), 
Length of domains: 1019
Time: pickout 0.0089    decision 0.0498    set_bounds 0.0289    solve 0.1680    add 0.1082    
Accumulated time: pickout 0.0329    decision 0.1327    set_bounds 0.0804    solve 0.6498    add 0.3181    
Current (lb-rhs): -0.04970955848693848
1864 domains visited
Cumulative time: 1.249213457107544

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 1019
splitting decisions: 
split level 0: [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 1499] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-12, 44] 
pruning_in_iteration open status: True
ratio of positive domain = 691 / 2038 = 0.3390578999018645
pruning-in-iteration extra time: 0.0057599544525146484
Time: prepare 0.0447    bound 0.3405    transfer 0.0256    finalize 0.0195    func 0.4306    
Accumulated time: func 1.0796    prepare 0.0905    bound 0.8842    transfer 0.0636    finalize 0.0420    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04769 (14), -0.04747 (14), -0.04743 (14), -0.04721 (14), -0.04721 (14), -0.04699 (14), -0.04696 (14), -0.04674 (14), -0.04670 (14), -0.04648 (14), -0.04648 (14), -0.04627 (14), -0.04562 (14), -0.04548 (14), -0.04536 (14), -0.04527 (14), -0.04522 (14), -0.04514 (14), -0.04506 (14), -0.04500 (14), 
Length of domains: 1347
Time: pickout 0.0297    decision 0.0731    set_bounds 0.0508    solve 0.4313    add 0.1099    
Accumulated time: pickout 0.0626    decision 0.2059    set_bounds 0.1312    solve 1.0811    add 0.4280    
Current (lb-rhs): -0.047690391540527344
3211 domains visited
Cumulative time: 2.003615617752075

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1347
splitting decisions: 
split level 0: [/input-8, 1868] [/input-12, 44] [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 89] [/input-8, 1868] [/input-8, 571] [/input-8, 1868] [/input-8, 89] 
pruning_in_iteration open status: True
ratio of positive domain = 811 / 2694 = 0.30103934669636223
pruning-in-iteration extra time: 0.00571751594543457
Time: prepare 0.0618    bound 0.3009    transfer 0.0556    finalize 0.3247    func 0.7433    
Accumulated time: func 1.8229    prepare 0.1526    bound 1.1851    transfer 0.1192    finalize 0.3667    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04653 (15), -0.04636 (15), -0.04630 (15), -0.04614 (15), -0.04613 (15), -0.04591 (15), -0.04580 (15), -0.04562 (15), -0.04557 (15), -0.04541 (15), -0.04540 (15), -0.04518 (15), -0.04466 (15), -0.04452 (15), -0.04449 (15), -0.04435 (15), -0.04427 (15), -0.04420 (15), -0.04413 (15), -0.04397 (15), 
Length of domains: 1883
Time: pickout 0.0487    decision 0.0990    set_bounds 0.0648    solve 0.7439    add 0.0577    
Accumulated time: pickout 0.1112    decision 0.3049    set_bounds 0.1959    solve 1.8250    add 0.4857    
Current (lb-rhs): -0.04653120040893555
5094 domains visited
Cumulative time: 3.0305252075195312

BaB round 7
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 1883
splitting decisions: 
split level 0: [/input-8, 89] [/input-8, 571] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-12, 44] [/input-8, 89] [/input-8, 571] 
pruning_in_iteration open status: True
ratio of positive domain = 1291 / 3766 = 0.34280403611258625
pruning-in-iteration extra time: 0.005883216857910156
Time: prepare 0.0952    bound 0.3911    transfer 0.0471    finalize 0.0317    func 0.5654    
Accumulated time: func 2.3883    prepare 0.2480    bound 1.5762    transfer 0.1663    finalize 0.3984    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04352 (16), -0.04337 (16), -0.04316 (16), -0.04295 (16), -0.04280 (16), -0.04279 (16), -0.04264 (16), -0.04258 (16), -0.04243 (16), -0.04222 (16), -0.04207 (16), -0.04185 (16), -0.04150 (16), -0.04135 (16), -0.04129 (16), -0.04122 (16), -0.04114 (16), -0.04114 (16), -0.04093 (16), -0.04077 (16), 
Length of domains: 2475
Time: pickout 0.0455    decision 0.1215    set_bounds 0.0884    solve 0.5665    add 0.1016    
Accumulated time: pickout 0.1567    decision 0.4264    set_bounds 0.2843    solve 2.3915    add 0.5873    
Current (lb-rhs): -0.04352271556854248
7569 domains visited
Cumulative time: 3.9725282192230225

BaB round 8
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0031
batch: 2475
splitting decisions: 
split level 0: [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 555] [/input-8, 571] [/input-8, 555] [/input-8, 1499] [/input-8, 555] [/input-8, 555] 
pruning_in_iteration open status: True
ratio of positive domain = 1048 / 4950 = 0.21171717171717175
pruning-in-iteration extra time: 0.002264261245727539
Time: prepare 0.1108    bound 0.2985    transfer 0.0219    finalize 0.0297    func 0.4621    
Accumulated time: func 2.8504    prepare 0.3590    bound 1.8747    transfer 0.1882    finalize 0.4281    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04020 (17), -0.04005 (17), -0.03982 (17), -0.03960 (17), -0.03946 (17), -0.03945 (17), -0.03932 (17), -0.03922 (17), -0.03909 (17), -0.03887 (17), -0.03872 (17), -0.03849 (17), -0.03817 (17), -0.03802 (17), -0.03794 (17), -0.03791 (17), -0.03788 (17), -0.03779 (17), -0.03779 (17), -0.03776 (17), 
Length of domains: 3902
Time: pickout 0.0579    decision 0.1541    set_bounds 0.2696    solve 0.4632    add 0.1425    
Accumulated time: pickout 0.2146    decision 0.5805    set_bounds 0.5539    solve 2.8547    add 0.7298    
Current (lb-rhs): -0.040197014808654785
11471 domains visited
Cumulative time: 5.076282262802124

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0024
batch: 3902
splitting decisions: 
split level 0: [/input-8, 571] [/input-8, 90] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] [/input-8, 571] [/input-8, 564] 
pruning_in_iteration open status: False
ratio of positive domain = 980 / 7804 = 0.12557662737057917
pruning-in-iteration extra time: 5.435943603515625e-05
Time: prepare 0.1673    bound 0.3485    transfer 0.0473    finalize 0.0456    func 0.6097    
Accumulated time: func 3.4601    prepare 0.5265    bound 2.2233    transfer 0.2355    finalize 0.4737    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03757 (18), -0.03742 (18), -0.03723 (18), -0.03700 (18), -0.03685 (18), -0.03680 (18), -0.03666 (18), -0.03665 (18), -0.03646 (18), -0.03623 (18), -0.03608 (18), -0.03589 (18), -0.03555 (18), -0.03540 (18), -0.03534 (18), -0.03531 (18), -0.03529 (18), -0.03522 (18), -0.03521 (18), -0.03519 (18), 
Length of domains: 6815
Time: pickout 0.0668    decision 0.2277    set_bounds 0.3358    solve 0.6114    add 0.1606    
Accumulated time: pickout 0.2814    decision 0.8082    set_bounds 0.8898    solve 3.4660    add 0.8904    
Current (lb-rhs): -0.03757214546203613
18286 domains visited
Cumulative time: 6.498401165008545

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 4096
splitting decisions: 
split level 0: [/input-8, 564] [/input-12, 64] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 564] [/input-8, 564] [/input-12, 64] [/input-8, 90] [/input-12, 64] 
pruning_in_iteration open status: False
ratio of positive domain = 603 / 8192 = 0.0736083984375
pruning-in-iteration extra time: 6.341934204101562e-05
Time: prepare 0.1787    bound 0.3588    transfer 0.0356    finalize 0.0463    func 0.6204    
Accumulated time: func 4.0805    prepare 0.7055    bound 2.5821    transfer 0.2711    finalize 0.5201    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03757 (18), -0.03742 (18), -0.03723 (18), -0.03700 (18), -0.03685 (18), -0.03680 (18), -0.03666 (18), -0.03665 (18), -0.03646 (18), -0.03623 (18), -0.03608 (18), -0.03589 (18), -0.03555 (18), -0.03540 (18), -0.03534 (18), -0.03531 (18), -0.03529 (18), -0.03521 (18), -0.03519 (18), -0.03515 (18), 
Length of domains: 10284
Time: pickout 0.0699    decision 0.2339    set_bounds 0.3313    solve 0.6219    add 0.2007    
Accumulated time: pickout 0.3513    decision 1.0421    set_bounds 1.2210    solve 4.0879    add 1.0912    
Current (lb-rhs): -0.03757214546203613
25851 domains visited
current_vram/total_varm: 12.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.987510681152344

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0019
batch: 8192
splitting decisions: 
split level 0: [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-12, 64] [/input-8, 564] [/input-8, 90] [/input-8, 564] 
pruning_in_iteration open status: False
ratio of positive domain = 1689 / 16384 = 0.10308837890625
pruning-in-iteration extra time: 9.5367431640625e-05
Time: prepare 0.3582    bound 0.6800    transfer 0.0813    finalize 0.1114    func 1.2328    
Accumulated time: func 5.3133    prepare 1.0641    bound 3.2620    transfer 0.3524    finalize 0.6315    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03757 (18), -0.03742 (18), -0.03723 (18), -0.03700 (18), -0.03685 (18), -0.03680 (18), -0.03666 (18), -0.03665 (18), -0.03646 (18), -0.03623 (18), -0.03608 (18), -0.03589 (18), -0.03531 (18), -0.03529 (18), -0.03521 (18), -0.03515 (18), -0.03500 (18), -0.03472 (18), -0.03472 (18), -0.03458 (18), 
Length of domains: 16705
Time: pickout 0.1632    decision 0.7609    set_bounds 0.5865    solve 1.2361    add 0.2244    
Accumulated time: pickout 0.5145    decision 1.8029    set_bounds 1.8075    solve 5.3240    add 1.3156    
Current (lb-rhs): -0.03757214546203613
40464 domains visited
current_vram/total_varm: 18.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.989450693130493

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 16384
splitting decisions: 
split level 0: [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] [/input-8, 564] [/input-8, 90] 
pruning_in_iteration open status: True
ratio of positive domain = 7531 / 32768 = 0.229827880859375
pruning-in-iteration extra time: 0.003659486770629883
Time: prepare 0.7163    bound 1.2695    transfer 0.1658    finalize 0.4584    func 2.6119    
Accumulated time: func 7.9252    prepare 1.7808    bound 4.5316    transfer 0.5183    finalize 1.0899    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03531 (18), -0.03515 (18), -0.03500 (18), -0.03479 (19), -0.03472 (18), -0.03468 (19), -0.03458 (18), -0.03457 (18), -0.03443 (18), -0.03442 (18), -0.03442 (19), -0.03429 (18), -0.03425 (19), -0.03414 (19), -0.03402 (19), -0.03400 (18), -0.03391 (19), -0.03387 (19), -0.03385 (18), -0.03370 (18), 
Length of domains: 25558
Time: pickout 0.2571    decision 1.9698    set_bounds 1.2373    solve 2.6173    add 0.2309    
Accumulated time: pickout 0.7716    decision 3.7727    set_bounds 3.0449    solve 7.9413    add 1.5465    
Current (lb-rhs): -0.03530573844909668
65701 domains visited
current_vram/total_varm: 26.2GB/99.9GB, batch_size increase to 32768
Cumulative time: 17.36624526977539

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts: total 383 constraints, 18207 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.1647
batch: 25558
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 90] [/input-8, 564] [/input-12, 64] [/input-8, 90] [/input-12, 64] [/input-8, 90] [/input-12, 64] [/input-8, 90] [/input-8, 564] [/input-8, 90] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.03259015083312988
10 lb beta sum: 7.391357421875, worst -0.020626621320843697
pruning_in_iteration open status: True
ratio of positive domain = 48427 / 51116 = 0.9473941622975194
pruning-in-iteration extra time: 0.006532192230224609
Time: prepare 1.1480    bound 3.8976    transfer 0.2697    finalize 0.6998    func 6.3389    
Accumulated time: func 14.2641    prepare 2.9292    bound 8.4292    transfer 0.7879    finalize 1.7897    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01599 (19), -0.01535 (19), -0.01513 (19), -0.01506 (19), -0.01484 (20), -0.01462 (20), -0.01454 (20), -0.01448 (19), -0.01422 (19), -0.01417 (19), -0.01386 (19), -0.01365 (19), -0.01351 (19), -0.01328 (19), -0.01317 (20), -0.01305 (19), -0.01300 (19), -0.01299 (19), -0.01299 (19), -0.01298 (20), 
Length of domains: 2689
Time: pickout 0.3755    decision 2.6647    set_bounds 1.8160    solve 6.3473    add 0.1437    
Accumulated time: pickout 1.1471    decision 6.4374    set_bounds 4.8609    solve 14.2885    add 1.6902    
Current (lb-rhs): -0.01598796620965004
68390 domains visited
Cumulative time: 29.130102157592773

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts: total 652 constraints, 34788 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.3108
batch: 2689
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 1508] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-12, 64] [/input-12, 64] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.030161261558532715
10 lb beta sum: 2.994199514389038, worst -0.030466720461845398
pruning_in_iteration open status: True
ratio of positive domain = 4871 / 5378 = 0.9057270360728895
pruning-in-iteration extra time: 0.001802682876586914
Time: prepare 0.2523    bound 1.1110    transfer 0.0267    finalize 0.0310    func 1.4571    
Accumulated time: func 15.7212    prepare 3.1817    bound 9.5402    transfer 0.8147    finalize 1.8206    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01032 (20), -0.00900 (21), -0.00882 (20), -0.00854 (20), -0.00853 (20), -0.00851 (21), -0.00786 (20), -0.00773 (21), -0.00757 (20), -0.00752 (21), -0.00730 (20), -0.00722 (20), -0.00720 (21), -0.00710 (20), -0.00706 (21), -0.00704 (20), -0.00693 (21), -0.00690 (21), -0.00686 (20), -0.00686 (21), 
Length of domains: 507
Time: pickout 0.0582    decision 0.1660    set_bounds 0.1199    solve 1.4579    add 0.0875    
Accumulated time: pickout 1.2053    decision 6.6033    set_bounds 4.9808    solve 15.7464    add 1.7776    
Current (lb-rhs): -0.010319888591766357
68897 domains visited
Cumulative time: 31.365885734558105

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0020
batch: 507
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-12, 64] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] [/input-8, 1138] 
cut re-enabled after branching node selection
0 lb beta sum: 2.6162514686584473, worst -0.008947908878326416
10 lb beta sum: 6.099639892578125, worst -0.026634812355041504
pruning_in_iteration open status: True
ratio of positive domain = 692 / 1014 = 0.6824457593688362
pruning-in-iteration extra time: 0.005422830581665039
Time: prepare 0.0461    bound 0.4098    transfer 0.0106    finalize 0.0064    func 0.4797    
Accumulated time: func 16.2009    prepare 3.2280    bound 9.9500    transfer 0.8252    finalize 1.8271    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00838 (22), -0.00792 (21), -0.00745 (21), -0.00719 (21), -0.00704 (21), -0.00694 (22), -0.00682 (22), -0.00648 (21), -0.00644 (21), -0.00609 (21), -0.00604 (22), -0.00593 (21), -0.00583 (22), -0.00570 (21), -0.00566 (22), -0.00562 (21), -0.00537 (22), -0.00536 (21), -0.00534 (21), -0.00509 (21), 
Length of domains: 322
Time: pickout 0.0190    decision 0.0422    set_bounds 0.0216    solve 0.4809    add 0.0788    
Accumulated time: pickout 1.2243    decision 6.6456    set_bounds 5.0024    solve 16.2273    add 1.8564    
Current (lb-rhs): -0.008377999067306519
69219 domains visited
Cumulative time: 32.03417634963989

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts: total 1021 constraints, 47334 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4123
batch: 322
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 64] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 90] [/input-12, 64] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] [/input-8, 1514] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.02572035789489746
10 lb beta sum: 3.4320271015167236, worst -0.03547954559326172
pruning_in_iteration open status: False
ratio of positive domain = 62 / 644 = 0.09627329192546585
pruning-in-iteration extra time: 0.0001354217529296875
Time: prepare 0.0138    bound 0.2583    transfer 0.0084    finalize 0.0043    func 0.2907    
Accumulated time: func 16.4916    prepare 3.2421    bound 10.2083    transfer 0.8336    finalize 1.8314    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00732 (23), -0.00719 (22), -0.00716 (22), -0.00704 (22), -0.00703 (23), -0.00694 (23), -0.00693 (22), -0.00682 (23), -0.00648 (22), -0.00638 (22), -0.00609 (22), -0.00609 (22), -0.00604 (23), -0.00604 (23), -0.00588 (22), -0.00583 (23), -0.00570 (22), -0.00566 (23), -0.00566 (23), -0.00561 (22), 
Length of domains: 453
Time: pickout 0.0188    decision 0.0336    set_bounds 0.0159    solve 0.2909    add 0.0855    
Accumulated time: pickout 1.2430    decision 6.6791    set_bounds 5.0182    solve 16.5183    add 1.9419    
Current (lb-rhs): -0.007323600351810455
69672 domains visited
Cumulative time: 32.90083932876587

BaB round 17
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0012
batch: 453
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 700] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] [/input-8, 685] 
cut re-enabled after branching node selection
0 lb beta sum: 2.8076672554016113, worst -0.009167708456516266
10 lb beta sum: 6.191416263580322, worst -0.03749215602874756
pruning_in_iteration open status: True
ratio of positive domain = 577 / 906 = 0.6368653421633554
pruning-in-iteration extra time: 0.0052869319915771484
Time: prepare 0.0413    bound 0.3866    transfer 0.0051    finalize 0.0074    func 0.4465    
Accumulated time: func 16.9381    prepare 3.2836    bound 10.5949    transfer 0.8387    finalize 1.8388    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00650 (23), -0.00648 (23), -0.00648 (23), -0.00604 (24), -0.00588 (24), -0.00576 (24), -0.00570 (23), -0.00570 (24), -0.00566 (24), -0.00561 (23), -0.00558 (24), -0.00546 (23), -0.00534 (23), -0.00517 (23), -0.00509 (23), -0.00507 (24), -0.00487 (24), -0.00486 (24), -0.00486 (23), -0.00477 (24), 
Length of domains: 329
Time: pickout 0.0221    decision 0.0379    set_bounds 0.0201    solve 0.4467    add 0.0844    
Accumulated time: pickout 1.2651    decision 6.7170    set_bounds 5.0384    solve 16.9650    add 2.0262    
Current (lb-rhs): -0.006501302123069763
70001 domains visited
Cumulative time: 33.52312421798706

BaB round 18
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0019
batch: 329
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 700] [/input-8, 923] [/input-8, 700] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] 
cut re-enabled after branching node selection
0 lb beta sum: 2.875702142715454, worst -0.006981372833251953
10 lb beta sum: 9.978187561035156, worst -0.03225851058959961
pruning_in_iteration open status: True
ratio of positive domain = 509 / 658 = 0.7735562310030395
pruning-in-iteration extra time: 0.005239963531494141
Time: prepare 0.0302    bound 0.3002    transfer 0.0084    finalize 0.0036    func 0.3469    
Accumulated time: func 17.2850    prepare 3.3140    bound 10.8952    transfer 0.8471    finalize 1.8424    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00648 (24), -0.00536 (24), -0.00534 (24), -0.00494 (24), -0.00445 (24), -0.00426 (25), -0.00411 (25), -0.00404 (25), -0.00396 (24), -0.00389 (24), -0.00387 (25), -0.00371 (25), -0.00367 (24), -0.00346 (25), -0.00334 (24), -0.00332 (25), -0.00323 (24), -0.00319 (24), -0.00319 (24), -0.00315 (25), 
Length of domains: 149
Time: pickout 0.0164    decision 0.0333    set_bounds 0.0145    solve 0.3471    add 0.0756    
Accumulated time: pickout 1.2815    decision 6.7503    set_bounds 5.0528    solve 17.3120    add 2.1019    
Current (lb-rhs): -0.006475239992141724
70150 domains visited
Cumulative time: 34.02093434333801

BaB round 19
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0012
batch: 149
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 923] [/input-8, 700] [/input-8, 923] 
cut re-enabled after branching node selection
0 lb beta sum: 2.9822309017181396, worst -0.006144881248474121
10 lb beta sum: 6.50095272064209, worst -0.030001342296600342
pruning_in_iteration open status: True
ratio of positive domain = 228 / 298 = 0.7651006711409396
pruning-in-iteration extra time: 0.0052487850189208984
Time: prepare 0.0143    bound 0.3551    transfer 0.0025    finalize 0.0017    func 0.3756    
Accumulated time: func 17.6606    prepare 3.3286    bound 11.2502    transfer 0.8496    finalize 1.8441    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00417 (25), -0.00400 (25), -0.00356 (25), -0.00351 (25), -0.00319 (25), -0.00319 (25), -0.00319 (25), -0.00312 (25), -0.00312 (25), -0.00298 (26), -0.00264 (25), -0.00255 (26), -0.00204 (26), -0.00197 (25), -0.00177 (25), -0.00175 (26), -0.00152 (26), -0.00151 (25), -0.00150 (25), -0.00133 (25), 
Length of domains: 70
Time: pickout 0.0135    decision 0.0214    set_bounds 0.1450    solve 0.3757    add 0.0625    
Accumulated time: pickout 1.2950    decision 6.7718    set_bounds 5.1978    solve 17.6877    add 2.1643    
Current (lb-rhs): -0.004167437553405762
70220 domains visited
Cumulative time: 34.65044713020325

BaB round 20
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0011
batch: 70
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1361] [/input-8, 1361] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 700] [/input-8, 1361] [/input-8, 1405] 
split level 1: [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 808] [/input-8, 1361] [/input-8, 700] [/input-8, 808] 
cut re-enabled after branching node selection
0 lb beta sum: 2.991563558578491, worst -0.002605617046356201
10 lb beta sum: 26.26055145263672, worst -0.027848586440086365
pruning_in_iteration open status: True
ratio of positive domain = 272 / 280 = 0.9714285714285714
pruning-in-iteration extra time: 0.005156755447387695
Time: prepare 0.0130    bound 0.3092    transfer 0.0026    finalize 0.0020    func 0.3286    
Accumulated time: func 17.9892    prepare 3.3418    bound 11.5594    transfer 0.8522    finalize 1.8461    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00137 (27), -0.00120 (28), -0.00117 (28), -0.00039 (27), -0.00023 (27), -0.00015 (27), -0.00009 (27), -0.00003 (27), 
Length of domains: 8
Time: pickout 0.0056    decision 0.0159    set_bounds 0.0086    solve 0.3287    add 0.0255    
Accumulated time: pickout 1.3007    decision 6.7877    set_bounds 5.2064    solve 18.0164    add 2.1898    
Current (lb-rhs): -0.0013695955276489258
70228 domains visited
Cumulative time: 35.044251680374146

BaB round 21
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
Cuts have not been updated in CPLEX; still using old cuts.
cuts preparing time: 0.0031
batch: 8
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1405] [/input-8, 1405] [/input-8, 1405] [/input-8, 787] [/input-8, 1405] [/input-8, 787] [/input-8, 787] [/input-8, 1405] 
split level 1: [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] [/input-8, 1508] 
split level 2: [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] [/input-8, 1896] 
split level 3: [/input-8, 1393] [/input-8, 1393] [/input-8, 700] [/input-8, 700] [/input-8, 1393] [/input-8, 700] [/input-8, 1393] [/input-8, 700] 
split level 4: [/input-8, 700] [/input-8, 700] [/input-8, 1393] [/input-8, 1393] [/input-8, 700] [/input-8, 1393] [/input-8, 700] [/input-8, 1393] 
cut re-enabled after branching node selection
0 lb beta sum: 3.058300018310547, worst 0.005635067820549011

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.315376281738281e-05
Time: prepare 0.0117    bound 0.0089    transfer 0.0009    finalize 0.0015    func 0.0247    
Accumulated time: func 18.0139    prepare 3.3538    bound 11.5683    transfer 0.8532    finalize 1.8476    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0167    set_bounds 0.0122    solve 0.0247    add 0.0001    
Accumulated time: pickout 1.3015    decision 6.8044    set_bounds 5.2186    solve 18.0411    add 2.1899    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
70228 domains visited
Cumulative time: 35.10243630409241

found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=169_spec=2_30272707.log
found process for pidx=2
kill process for pidx=2
Result: safe in 37.8761 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 170, vnnlib ID: 170 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
          -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [571]; unstable size 571; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 151, 1, 571] with unstable size 150 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 11, 1, 571] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 571] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [150]; unstable size 150; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 11, 1, 150] with unstable size 10 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 150] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [10]; unstable size 10; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 10] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.57134843,  7.26472473, -1.64735651,  1.38431621,  0.25252247,
          3.19363236,  1.94417953,  5.92638016,  5.30164909]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
          -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.00588608, -16.16182518,  -6.58917904,  -9.66689301,  -7.57059002,
           -8.67937565, -11.63756847, -10.25432014, -14.60658455, -14.13991070]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.98141098]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[-0.84603173, -0.94126981, -0.86190474,  ..., -0.33809513,
            -0.48095238, -0.51269841],
           [-0.25873005, -0.30634910, -0.27460307,  ..., -0.29047608,
            -0.33809513, -0.43333322],
           [ 0.42380959,  0.36031753,  0.39206356,  ..., -0.08412688,
            -0.14761895, -0.32222211],
           ...,
           [ 0.47142863,  0.48730165,  0.55079371,  ...,  0.05873025,
             0.01111121,  0.12222230],
           [ 0.12222230,  0.10634929,  0.23333341,  ..., -0.02063482,
            -0.02063482,  0.16984135],
           [-0.19523799, -0.41746020, -0.29047608,  ...,  0.16984135,
             0.31269848,  0.58253974]],

          [[-0.67632848, -0.78904986, -0.72463763,  ..., -0.03220600,
            -0.17713353, -0.20933965],
           [ 0.04830930, -0.01610294,  0.01610318,  ...,  0.03220624,
            -0.01610294, -0.11272129],
           [ 0.88566834,  0.82125610,  0.85346222,  ...,  0.24154601,
             0.19323683, -0.01610294],
           ...,
           [ 0.95008057,  0.98228669,  1.03059590,  ...,  0.62801939,
             0.56360716,  0.61191636],
           [ 0.70853472,  0.72463775,  0.85346222,  ...,  0.66022551,
             0.62801939,  0.77294695],
           [ 0.46698883,  0.22544295,  0.40257660,  ...,  0.77294695,
             0.85346222,  1.14331758]],

          [[-0.01349309, -0.07346311,  0.03148442,  ...,  0.76611710,
             0.66116959,  0.64617711],
           [-0.02848560, -0.04347810,  0.00149941,  ...,  0.78110963,
             0.78110963,  0.78110963],
           [-0.14842562, -0.19340314, -0.14842562,  ...,  0.81109464,
             0.81109464,  0.76611710],
           ...,
           [-0.53823084, -0.56821585, -0.50824583,  ..., -0.68815589,
            -0.65817088, -0.49325335],
           [-0.58320838, -0.73313338, -0.61319339,  ..., -0.83808094,
            -0.83808094, -0.65817088],
           [-0.80809593, -1.04797614, -0.85307342,  ..., -0.74812591,
            -0.67316341, -0.43328333]]]]], device='cuda:0') torch.Size([1, 1, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0744 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 171, vnnlib ID: 171 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-13.39601326, -14.69097233, -12.64669704, -12.07789993, -12.42763519,
         -12.80878258, -10.90289593, -13.06480980, -16.92237282, -13.27768993]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [576]; unstable size 576; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 200, 1, 576] with unstable size 199 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 9, 1, 576] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 576] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [199]; unstable size 199; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 9, 1, 199] with unstable size 8 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 199] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [8]; unstable size 8; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 8] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.12973356, 2.10289192, 0.60040092, 0.30346036, 0.51467490, 0.89803624,
         1.03227448, 3.96525621, 0.86045051]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0689 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 172, vnnlib ID: 172 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
         -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [722]; unstable size 722; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 180, 1, 722] with unstable size 179 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 722] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 722] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [179]; unstable size 179; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 179] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 179] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.99104667,  0.21340609,  2.51710510, -0.09744859,  3.08586311,
          3.07672834,  2.41397524, -0.15205145,  3.96747732]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
         -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.53it/s]100%|██████████| 1/1 [00:00<00:00,  7.52it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.92382812, -11.80677509,  -8.08763027, -10.42839050,  -7.89339161,
          -11.28264713, -10.88448238, -11.24233246,  -7.34816551, -11.92977428],
         [ -6.92382812, -11.80677509,  -8.08763027, -10.42839050,  -7.89339161,
          -11.28264713, -10.88448238, -11.24233246,  -7.34816551, -11.92977428]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.96956348, 0.42433739]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1360 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 19.568557739257812
alpha/beta optimization time: 1.4122002124786377
initial alpha-crown bounds: tensor([[ 4.04605627,  0.26190579,  2.56589341, -0.03486460,  3.13469791,
          3.12771106,  2.50110102, -0.06319237,  4.02925014]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.06319236755371094
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6413 seconds.
lower bounds for all target labels: [4.046056270599365, 0.2619057893753052, 2.5658934116363525, -0.034864842891693115, 3.134697914123535, 3.1277096271514893, 2.501101016998291, -0.06319236755371094, 4.029250144958496]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [3, 7]
start creating model mps for candidates: ['lay/16_3', 'lay/16_7']
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.276127576828
Verifying property 0 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.046056270599365.

Properties batch 1, size 1
Remaining timeout: 198.05288553237915
Verifying property 1 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.029250144958496.

Properties batch 2, size 1
Remaining timeout: 197.9526515007019
Verifying property 2 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.134697914123535.

Properties batch 3, size 1
Remaining timeout: 197.85329818725586
Verifying property 3 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.127711057662964.

Properties batch 4, size 1
Remaining timeout: 197.7602903842926
Verifying property 4 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.5658934116363525.

Properties batch 5, size 1
Remaining timeout: 197.66695594787598
Verifying property 5 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.501101016998291.

Properties batch 6, size 1
Remaining timeout: 197.57058668136597
Verifying property 6 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2619057893753052.

Properties batch 7, size 1
Remaining timeout: 197.46580028533936
Verifying property 7 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.03486460]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
        -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.03486460]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 722
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 177
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 918
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008072853088378906
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 41] 
split level 1: [/input-12, 45] 
split level 2: [/input-12, 37] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 90] 
split level 5: [/input-12, 92] 
split level 6: [/input-12, 58] 
split level 7: [/input-8, 652] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.9591064453125e-05
Time: prepare 0.0035    bound 0.0053    transfer 0.0044    finalize 0.0032    func 0.0165    
Accumulated time: func 0.0165    prepare 0.0040    bound 0.0053    transfer 0.0044    finalize 0.0032    
all_split False
Length of domains: 0
Time: pickout 0.0008    decision 0.0280    set_bounds 0.0258    solve 0.0166    add 0.0001    
Accumulated time: pickout 0.0008    decision 0.0280    set_bounds 0.0258    solve 0.0166    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07819509506225586


Properties batch 8, size 1
Remaining timeout: 197.1950879096985
Verifying property 8 with 1 instances.
##### Instance 172 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.06319237]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.66107941, -11.79125309,  -7.86607170, -10.32452965,  -7.72983742,
        -11.17636871, -10.86951828, -11.03235435,  -7.73300457, -11.89622021],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.06319237]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 722
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 177
Node /15 input 0: size torch.Size([100]) unstable 19
-----------------
# of unstable neurons: 918
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.00030231475830078125
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 21] 
split level 1: [/input-12, 78] 
split level 2: [/input-8, 1331] 
split level 3: [/input-12, 74] 
split level 4: [/input-12, 99] 
split level 5: [/input-8, 1330] 
split level 6: [/input-8, 1396] 
split level 7: [/input-8, 564] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.506111145019531e-05
Time: prepare 0.0033    bound 0.0045    transfer 0.0007    finalize 0.0021    func 0.0107    
Accumulated time: func 0.0107    prepare 0.0037    bound 0.0045    transfer 0.0007    finalize 0.0021    
all_split False
Length of domains: 0
Time: pickout 0.0004    decision 0.0249    set_bounds 0.0187    solve 0.0108    add 0.0001    
Accumulated time: pickout 0.0004    decision 0.0249    set_bounds 0.0187    solve 0.0108    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.07044410705566406

the mip building process is not terminated yet, kill it
Result: safe in 3.3765 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 173, vnnlib ID: 173 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-4.96530533, -6.64648819, -4.20401192, -3.31281948, -3.79201317,
         -4.34627962, -3.10760784, -5.26119852, -7.51378918, -6.06500340]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [631]; unstable size 631; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 231, 1, 631] with unstable size 230 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 631] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 631] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [230]; unstable size 230; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 230] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 230] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.21187758,  1.27583241, -0.23146796, -0.57322311,  0.65389633,
         -1.39956248,  0.85230494,  2.21380901,  0.78132999]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-4.96530533, -6.64648819, -4.20401192, -3.31281948, -3.79201317,
         -4.34627962, -3.10760784, -5.26119852, -7.51378918, -6.06500340]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-4.96530533, -6.64648819, -4.20401287, -3.31281900, -3.79201317,
          -4.34627962, -3.10760832, -5.26119804, -7.51378918, -6.06500387],
         [-4.96530533, -6.64648819, -4.20401287, -3.31281900, -3.79201317,
          -4.34627962, -3.10760832, -5.26119804, -7.51378918, -6.06500387]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.89119387,  0.47919416, -0.20521069]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]],


         [[[ 0.12222230,  0.18571436,  0.09047628,  ..., -1.36984122,
            -0.30634910, -0.08412688],
           [ 0.04285724,  0.18571436,  0.26507944,  ..., -0.56031746,
            -0.09999990, -0.02063482],
           [ 0.16984135,  0.09047628,  0.20158738,  ..., -0.43333322,
            -0.40158719,  0.07460327],
           ...,
           [ 0.37619054,  0.24920642, -0.08412688,  ...,  0.20158738,
             0.12222230,  0.26507944],
           [ 0.20158738, -0.09999990,  0.24920642,  ...,  0.04285724,
             0.40793657,  0.29682547],
           [-0.21111101,  0.16984135,  0.58253974,  ...,  0.20158738,
             0.58253974,  0.18571436]],

          [[ 0.16103071,  0.22544295,  0.12882459,  ..., -1.35265696,
            -0.27375188, -0.04830906],
           [ 0.08051541,  0.22544295,  0.30595824,  ..., -0.53140092,
            -0.06441211,  0.01610318],
           [ 0.20933989,  0.12882459,  0.24154601,  ..., -0.40257636,
            -0.37037024,  0.11272153],
           ...,
           [ 0.41867965,  0.28985518, -0.04830906,  ...,  0.24154601,
             0.16103071,  0.30595824],
           [ 0.24154601, -0.06441211,  0.28985518,  ...,  0.08051541,
             0.45088577,  0.33816436],
           [-0.17713353,  0.20933989,  0.62801939,  ...,  0.24154601,
             0.62801939,  0.22544295]],

          [[ 0.28635699,  0.34632701,  0.25637197,  ..., -1.12293863,
            -0.11844061,  0.09145443],
           [ 0.21139447,  0.34632701,  0.42128953,  ..., -0.35832080,
             0.07646193,  0.15142445],
           [ 0.33133450,  0.25637197,  0.36131951,  ..., -0.23838064,
            -0.20839565,  0.24137947],
           ...,
           [ 0.52623707,  0.40629703,  0.09145443,  ...,  0.36131951,
             0.28635699,  0.42128953],
           [ 0.36131951,  0.07646193,  0.40629703,  ...,  0.21139447,
             0.55622208,  0.45127454],
           [-0.02848560,  0.33133450,  0.72113961,  ...,  0.36131951,
             0.72113961,  0.34632701]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0873 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 174, vnnlib ID: 174 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.29587555, -13.48483086,  -6.09756279,  -7.41362858,  -5.89941597,
          -7.54863977,  -8.10572243,  -7.43977880, -10.08916378, -11.89095020]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [646]; unstable size 646; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 267, 1, 646] with unstable size 266 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 26, 1, 646] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 646] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [266]; unstable size 266; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 26, 1, 266] with unstable size 25 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 266] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [25]; unstable size 25; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 25] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.30793679,  4.85469437, -0.91200447,  0.07975250,  0.11433154,
          0.44498521,  0.30451083,  1.77916312,  3.32840014]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.29587555, -13.48483086,  -6.09756279,  -7.41362858,  -5.89941597,
          -7.54863977,  -8.10572243,  -7.43977880, -10.08916378, -11.89095020]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.94982910, -13.32391453,  -5.86624622,  -7.29577208,  -6.18575859,
           -7.51763773,  -7.94410515,  -7.84511232,  -9.65251255, -11.77554131]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.31951237]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0084 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0888 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 175, vnnlib ID: 175 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.83441734, -11.65409756, -13.59377003, -13.34711456, -13.02464199,
         -13.48545742, -13.37795448, -12.43483543, -12.00513840,  -9.86730289]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [638]; unstable size 638; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 292, 1, 638] with unstable size 291 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 638] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 638] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [291]; unstable size 291; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 291] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 291] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.04846907,  1.83894682,  1.50338113,  1.00280190,  1.39925575,
          1.18970466,  0.10379341,  0.61262095, -1.38501263]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.83441734, -11.65409756, -13.59377003, -13.34711456, -13.02464199,
         -13.48545742, -13.37795448, -12.43483543, -12.00513840,  -9.86730289]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.91222477, -11.70614147, -13.68292713, -13.42092800, -13.11736012,
          -13.56132698, -13.45891571, -12.52041149, -12.07155228,  -9.90893269]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00329208]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0046 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0729 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 176, vnnlib ID: 176 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.06950283, -10.63156986,  -6.67671871,  -6.37868023,  -6.73359871,
          -6.50309849,  -7.44396973,  -8.55093956,  -8.65787315, -10.48859119]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [583]; unstable size 583; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 187, 1, 583] with unstable size 186 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 10, 1, 583] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 583] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [186]; unstable size 186; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 10, 1, 186] with unstable size 9 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 186] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [9]; unstable size 9; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 9] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.66228348,  2.91002989, -0.61161327, -0.37437868, -0.12838525,
          0.54327881,  1.21973586,  1.01675749,  2.96338654]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.06950283, -10.63156986,  -6.67671871,  -6.37868023,  -6.73359871,
          -6.50309849,  -7.44396973,  -8.55093956,  -8.65787315, -10.48859119]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -8.31186962, -10.99413681,  -6.81023502,  -6.93533707,  -6.98606968,
           -7.06987381,  -7.91163874,  -8.92857933,  -9.02215290, -10.94300365],
         [ -8.31186962, -10.99413681,  -6.81023502,  -6.93533707,  -6.98606968,
           -7.06987381,  -7.91163874,  -8.92857933,  -9.02215290, -10.94300365]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.12510204,  0.05073261,  0.13453674]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0090 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0580 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 177, vnnlib ID: 177 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-26.68456459, -32.53074646, -22.78745079, -27.68545341, -28.40427208,
         -27.83055687, -30.00589561, -28.70033264, -29.08596420, -31.81694031]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [868]; unstable size 868; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 118, 1, 868] with unstable size 117 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 8, 1, 868] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 868] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [117]; unstable size 117; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 8, 1, 117] with unstable size 7 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 117] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [7]; unstable size 7; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 7] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.35312653, 8.74417496, 4.20461988, 4.84282970, 4.24144936, 6.39423656,
         5.11291981, 5.55689526, 8.21585178]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0687 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 178, vnnlib ID: 178 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.60622311, -13.14030361,  -7.17618370,  -8.58381081,  -7.30063725,
          -9.39536190, -10.97736740,  -8.69489574, -13.14762592, -13.82670879]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [636]; unstable size 636; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 149, 1, 636] with unstable size 148 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 636] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 636] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [148]; unstable size 148; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 148] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 148] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.19068098, 0.71572375, 1.81306040, 0.68747449, 2.54502177, 4.18923759,
         1.59729803, 6.44614601, 7.10734797]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0679 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 179, vnnlib ID: 179 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -2.84328127,  -9.61974049,  -5.05914211,  -8.02449036,  -6.49527788,
          -8.10750866,  -9.04593754,  -9.49392796,  -6.18774319, -10.90580273]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [499]; unstable size 499; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 153, 1, 499] with unstable size 152 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 499] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 499] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [152]; unstable size 152; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 152] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 152] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[5.54959440, 1.51223159, 4.22370195, 2.84299278, 4.27301931, 5.08756065,
         5.54216480, 2.37470150, 6.85312939]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0707 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 180, vnnlib ID: 180 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.90164661, -15.08635235,  -9.72878838,  -9.48129559,  -7.66526318,
          -8.64265442, -10.58757114,  -3.94943619, -14.45550442, -12.59689999]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 240, 1, 635] with unstable size 239 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 635] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [239]; unstable size 239; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 239] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 239] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.91279745, 8.85579300, 4.06592464, 3.92259717, 2.47752595, 3.07655239,
         4.65876627, 8.33458614, 6.58941174]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0692 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 181, vnnlib ID: 181 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.14476776, -8.54299259, -5.62799358, -7.28408384, -5.42767191,
         -7.26166582, -5.09700298, -8.12854862, -8.81086445, -8.40001583]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [561]; unstable size 561; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 200, 1, 561] with unstable size 199 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 16, 1, 561] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 561] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [199]; unstable size 199; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 16, 1, 199] with unstable size 15 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 199] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [15]; unstable size 15; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 15] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.70906806,  1.71759176, -0.59509242,  1.34409976, -0.63401103,
          1.15857673,  2.08130550,  2.03014398,  1.72439146]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.14476776, -8.54299259, -5.62799358, -7.28408384, -5.42767191,
         -7.26166582, -5.09700298, -8.12854862, -8.81086445, -8.40001583]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.36553764, -9.05827236, -5.77799320, -7.55656195, -5.46674442,
          -7.49171591, -5.58169985, -8.30345821, -9.22078800, -8.91583538],
         [-8.36553764, -9.05827236, -5.77799320, -7.55656195, -5.46674442,
          -7.49171591, -5.58169985, -8.30345821, -9.22078800, -8.91583538]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.19629335, -0.11495543]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0067 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0716 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 182, vnnlib ID: 182 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.62970924, -15.32867241, -14.02665234, -15.90782928, -15.88710308,
         -16.84171295, -16.61499405, -15.84648132, -15.30559063, -15.92606258]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [630]; unstable size 630; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 112, 1, 630] with unstable size 111 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 13, 1, 630] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 630] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [111]; unstable size 111; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 13, 1, 111] with unstable size 12 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 111] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [12]; unstable size 12; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 12] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.55479407, 0.65966958, 2.49934220, 2.45695710, 3.24221277, 3.17709970,
         2.06576204, 1.70381474, 2.33342195]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0670 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 183, vnnlib ID: 183 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
         -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [785]; unstable size 785; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 441, 1, 785] with unstable size 440 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 30, 1, 785] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 785] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [440]; unstable size 440; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 30, 1, 440] with unstable size 29 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 440] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [29]; unstable size 29; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 29] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.74053061,  4.37037420, -0.76029527,  0.68074846,  0.98781753,
         -0.06960201,  1.50687969,  3.12951851,  4.10273933]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
         -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  7.34it/s]100%|██████████| 1/1 [00:00<00:00,  7.34it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.96513081, -15.63083935,  -8.66922951, -10.52782917,  -8.59883404,
          -11.20441532, -10.32099342, -11.85517120, -13.96867752, -15.41878605],
         [-11.96513081, -15.63083935,  -8.66922951, -10.52782917,  -8.59883404,
          -11.20441532, -10.32099342, -11.85517120, -13.96867752, -15.41878605]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07039547, 1.72215939]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1393 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 17.0271053314209
alpha/beta optimization time: 1.4357552528381348
initial alpha-crown bounds: tensor([[ 1.93041980,  4.51296234, -0.64870262,  0.80698407,  1.16862965,
          0.07121539,  1.61320758,  3.32261682,  4.24977207]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.6487026214599609
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6724 seconds.
lower bounds for all target labels: [1.9304183721542358, 4.512962341308594, -0.6487026214599609, 0.8069840669631958, 1.1686296463012695, 0.07121539115905762, 1.6132075786590576, 3.3226168155670166, 4.249769687652588]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [2]
start creating model mps for candidates: ['lay/16_2']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 152625 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.26382732391357
Verifying property 0 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.512962341308594.

Properties batch 1, size 1
Remaining timeout: 198.0880901813507
Verifying property 1 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.249772071838379.

Properties batch 2, size 1
Remaining timeout: 197.99244379997253
Verifying property 2 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.3226168155670166.

Properties batch 3, size 1
Remaining timeout: 197.9009714126587
Verifying property 3 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9304198026657104.

Properties batch 4, size 1
Remaining timeout: 197.80918550491333
Verifying property 4 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.6132075786590576.

Properties batch 5, size 1
Remaining timeout: 197.71825003623962
Verifying property 5 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.1686296463012695.

Properties batch 6, size 1
Remaining timeout: 197.62726998329163
Verifying property 6 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8069840669631958.

Properties batch 7, size 1
Remaining timeout: 197.5367076396942
Verifying property 7 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  1.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.07121539115905762.

Properties batch 8, size 1
Remaining timeout: 197.44473814964294
Verifying property 8 with 1 instances.
##### Instance 183 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.64870262]], device='cuda:0') need to verify.
Model prediction is: tensor([-11.31477261, -14.64444065,  -8.04242039,  -9.54465961,  -7.47801971,
        -10.22035503,  -9.25665569, -10.87084675, -13.17573833, -14.46251965],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.64870262]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 785
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 435
Node /15 input 0: size torch.Size([100]) unstable 26
-----------------
# of unstable neurons: 1246
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009291172027587891
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 54] 
split level 1: [/input-12, 1] 
split level 2: [/input-12, 44] 
split level 3: [/input-12, 51] 
split level 4: [/input-12, 72] 
split level 5: [/input-12, 26] 
split level 6: [/input-12, 82] 
split level 7: [/input-12, 93] 
pruning_in_iteration open status: True
ratio of positive domain = 156 / 256 = 0.609375
pruning-in-iteration extra time: 0.0057141780853271484
Time: prepare 0.0019    bound 0.1679    transfer 0.0051    finalize 0.0025    func 0.1776    
Accumulated time: func 0.1776    prepare 0.0024    bound 0.1679    transfer 0.0051    finalize 0.0025    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.29374 (8), -0.29316 (8), -0.28774 (8), -0.28727 (8), -0.28622 (8), -0.28593 (8), -0.27473 (8), -0.27342 (8), -0.26040 (8), -0.25564 (8), -0.25529 (8), -0.25103 (8), -0.25024 (8), -0.24622 (8), -0.23806 (8), -0.23779 (8), -0.23301 (8), -0.23203 (8), -0.23022 (8), -0.22529 (8), 
Length of domains: 100
Time: pickout 0.0006    decision 0.0272    set_bounds 0.0201    solve 0.1776    add 0.0790    
Accumulated time: pickout 0.0006    decision 0.0272    set_bounds 0.0201    solve 0.1776    add 0.0790    
Current (lb-rhs): -0.29373595118522644
100 domains visited
Cumulative time: 0.31690359115600586

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 100
splitting decisions: 
split level 0: [/input-8, 1057] [/input-8, 1058] [/input-8, 1058] [/input-8, 1058] [/input-8, 1057] [/input-8, 1058] [/input-8, 1057] [/input-12, 9] [/input-12, 9] [/input-12, 9] 
split level 1: [/input-12, 9] [/input-8, 1057] [/input-12, 9] [/input-12, 9] [/input-8, 1066] [/input-12, 9] [/input-12, 9] [/input-8, 1057] [/input-8, 1057] [/input-8, 1057] 
pruning_in_iteration open status: False
ratio of positive domain = 77 / 400 = 0.1925
pruning-in-iteration extra time: 6.580352783203125e-05
Time: prepare 0.0085    bound 0.1063    transfer 0.0071    finalize 0.0039    func 0.1260    
Accumulated time: func 0.3035    prepare 0.0111    bound 0.2743    transfer 0.0122    finalize 0.0064    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27993 (10), -0.27915 (10), -0.27372 (10), -0.27340 (10), -0.27203 (10), -0.27188 (10), -0.26035 (10), -0.25974 (10), -0.24455 (10), -0.24077 (10), -0.24056 (10), -0.23941 (10), -0.23941 (10), -0.23908 (10), -0.23900 (10), -0.23874 (10), -0.23672 (10), -0.23552 (10), -0.23519 (10), -0.23390 (10), 
Length of domains: 321
Time: pickout 0.0144    decision 0.0211    set_bounds 0.0188    solve 0.1261    add 0.0344    
Accumulated time: pickout 0.0151    decision 0.0483    set_bounds 0.0389    solve 0.3038    add 0.1133    
Current (lb-rhs): -0.27992531657218933
421 domains visited
Cumulative time: 0.5341963768005371

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 321
splitting decisions: 
split level 0: [/input-8, 1058] [/input-12, 9] [/input-8, 1057] [/input-12, 68] [/input-8, 1058] [/input-8, 1057] [/input-8, 1555] [/input-8, 1299] [/input-12, 68] [/input-12, 68] 
pruning_in_iteration open status: True
ratio of positive domain = 168 / 642 = 0.26168224299065423
pruning-in-iteration extra time: 0.004621028900146484
Time: prepare 0.0130    bound 0.1757    transfer 0.0082    finalize 0.0066    func 0.2036    
Accumulated time: func 0.5071    prepare 0.0244    bound 0.4500    transfer 0.0204    finalize 0.0130    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27440 (11), -0.27375 (11), -0.26816 (11), -0.26781 (11), -0.26676 (11), -0.26550 (11), -0.25511 (11), -0.25464 (11), -0.25461 (11), -0.23898 (11), -0.23453 (11), -0.23443 (11), -0.23358 (11), -0.23325 (11), -0.23325 (11), -0.23296 (11), -0.23097 (11), -0.23094 (11), -0.23023 (11), -0.22966 (11), 
Length of domains: 474
Time: pickout 0.0087    decision 0.0349    set_bounds 0.0159    solve 0.2038    add 0.0894    
Accumulated time: pickout 0.0238    decision 0.0832    set_bounds 0.0548    solve 0.5076    add 0.2027    
Current (lb-rhs): -0.27439847588539124
895 domains visited
Cumulative time: 0.8945670127868652

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 474
splitting decisions: 
split level 0: [/input-8, 1555] [/input-8, 1299] [/input-8, 1066] [/input-12, 9] [/input-12, 68] [/input-8, 1299] [/input-8, 1555] [/input-8, 1555] [/input-8, 1299] [/input-12, 68] 
pruning_in_iteration open status: True
ratio of positive domain = 233 / 948 = 0.24578059071729963
pruning-in-iteration extra time: 0.005007743835449219
Time: prepare 0.0190    bound 0.2211    transfer 0.0116    finalize 0.0093    func 0.2611    
Accumulated time: func 0.7683    prepare 0.0436    bound 0.6711    transfer 0.0320    finalize 0.0223    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26729 (12), -0.26709 (12), -0.26268 (12), -0.26110 (12), -0.26071 (12), -0.26034 (12), -0.25789 (12), -0.25685 (12), -0.25191 (12), -0.25097 (12), -0.25058 (12), -0.24934 (12), -0.24815 (12), -0.23729 (12), -0.23060 (12), -0.22980 (12), -0.22891 (12), -0.22783 (12), -0.22655 (12), -0.22603 (12), 
Length of domains: 715
Time: pickout 0.0178    decision 0.0376    set_bounds 0.0234    solve 0.2614    add 0.0234    
Accumulated time: pickout 0.0416    decision 0.1208    set_bounds 0.0783    solve 0.7689    add 0.2261    
Current (lb-rhs): -0.26729246973991394
1610 domains visited
Cumulative time: 1.2633936405181885

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 715
splitting decisions: 
split level 0: [/input-8, 1299] [/input-12, 68] [/input-8, 1555] [/input-12, 68] [/input-8, 666] [/input-8, 1299] [/input-12, 68] [/input-12, 68] [/input-12, 68] [/input-8, 1373] 
pruning_in_iteration open status: False
ratio of positive domain = 233 / 1430 = 0.1629370629370629
pruning-in-iteration extra time: 8.487701416015625e-05
Time: prepare 0.0283    bound 0.1255    transfer 0.0462    finalize 0.0114    func 0.2116    
Accumulated time: func 0.9799    prepare 0.0721    bound 0.7966    transfer 0.0782    finalize 0.0337    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.26150 (13), -0.26048 (13), -0.25653 (13), -0.25622 (13), -0.25559 (13), -0.25425 (13), -0.25360 (13), -0.25129 (13), -0.25096 (13), -0.24972 (13), -0.24726 (13), -0.24642 (13), -0.24524 (13), -0.24519 (13), -0.24480 (13), -0.24364 (13), -0.24349 (13), -0.24228 (13), -0.23907 (13), -0.23876 (13), 
Length of domains: 1190
Time: pickout 0.0279    decision 0.0573    set_bounds 0.0315    solve 0.2119    add 0.1073    
Accumulated time: pickout 0.0695    decision 0.1782    set_bounds 0.1098    solve 0.9809    add 0.3334    
Current (lb-rhs): -0.26150405406951904
2800 domains visited
Cumulative time: 1.708770990371704

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1190
splitting decisions: 
split level 0: [/input-8, 1548] [/input-12, 68] [/input-8, 531] [/input-12, 68] [/input-12, 68] [/input-8, 1373] [/input-8, 1066] [/input-12, 68] [/input-12, 68] [/input-12, 68] 
pruning_in_iteration open status: False
ratio of positive domain = 260 / 2380 = 0.10924369747899154
pruning-in-iteration extra time: 6.914138793945312e-05
Time: prepare 0.0473    bound 0.1520    transfer 0.1676    finalize 0.0178    func 0.3850    
Accumulated time: func 1.3649    prepare 0.1197    bound 0.9486    transfer 0.2459    finalize 0.0515    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25512 (14), -0.25471 (14), -0.25041 (14), -0.25025 (14), -0.24973 (14), -0.24945 (14), -0.24878 (14), -0.24739 (14), -0.24609 (14), -0.24407 (14), -0.24382 (14), -0.24333 (14), -0.24257 (14), -0.24215 (14), -0.24201 (14), -0.24063 (14), -0.23983 (14), -0.23980 (14), -0.23926 (14), -0.23813 (14), 
Length of domains: 2106
Time: pickout 0.0372    decision 0.0846    set_bounds 0.0525    solve 0.3860    add 0.1128    
Accumulated time: pickout 0.1067    decision 0.2628    set_bounds 0.1623    solve 1.3668    add 0.4462    
Current (lb-rhs): -0.2551209628582001
4906 domains visited
Cumulative time: 2.393721580505371

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 2106
splitting decisions: 
split level 0: [/input-12, 68] [/input-12, 68] [/input-8, 1363] [/input-8, 1066] [/input-8, 532] [/input-8, 1299] [/input-8, 1363] [/input-8, 1548] [/input-8, 532] [/input-8, 1356] 
pruning_in_iteration open status: False
ratio of positive domain = 273 / 4212 = 0.06481481481481477
pruning-in-iteration extra time: 6.246566772460938e-05
Time: prepare 0.0882    bound 0.2178    transfer 0.0336    finalize 0.0344    func 0.3744    
Accumulated time: func 1.7392    prepare 0.2082    bound 1.1664    transfer 0.2795    finalize 0.0859    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.25125 (15), -0.25124 (15), -0.24488 (15), -0.24482 (15), -0.24435 (15), -0.24428 (15), -0.24421 (15), -0.24364 (15), -0.24218 (15), -0.24055 (15), -0.23960 (15), -0.23906 (15), -0.23797 (15), -0.23676 (15), -0.23676 (15), -0.23635 (15), -0.23586 (15), -0.23584 (15), -0.23559 (15), -0.23428 (15), 
Length of domains: 3918
Time: pickout 0.1022    decision 0.4538    set_bounds 0.1014    solve 0.3754    add 0.1703    
Accumulated time: pickout 0.2089    decision 0.7166    set_bounds 0.2637    solve 1.7423    add 0.6166    
Current (lb-rhs): -0.2512485384941101
8824 domains visited
Cumulative time: 3.6123483180999756

BaB round 8
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0026
batch: 3918
splitting decisions: 
split level 0: [/input-8, 531] [/input-8, 1307] [/input-8, 1058] [/input-8, 1356] [/input-8, 533] [/input-8, 532] [/input-8, 1356] [/input-8, 1299] [/input-8, 1363] [/input-8, 1363] 
pruning_in_iteration open status: False
ratio of positive domain = 521 / 7836 = 0.06648800408371613
pruning-in-iteration extra time: 6.222724914550781e-05
Time: prepare 0.1733    bound 0.3652    transfer 0.0315    finalize 0.0468    func 0.6179    
Accumulated time: func 2.3571    prepare 0.3818    bound 1.5316    transfer 0.3111    finalize 0.1327    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24473 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23766 (16), -0.23736 (16), -0.23721 (16), -0.23721 (16), -0.23636 (16), -0.23460 (16), -0.23452 (16), -0.23416 (16), -0.23403 (16), -0.23277 (16), -0.23257 (16), -0.23243 (16), -0.23210 (16), -0.23178 (16), 
Length of domains: 7286
Time: pickout 0.0756    decision 0.2446    set_bounds 0.3300    solve 0.6195    add 0.1650    
Accumulated time: pickout 0.2845    decision 0.9612    set_bounds 0.5937    solve 2.3618    add 0.7816    
Current (lb-rhs): -0.24642443656921387
16110 domains visited
Cumulative time: 5.067020654678345

BaB round 9
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0023
batch: 4096
splitting decisions: 
split level 0: [/input-8, 1363] [/input-8, 523] [/input-8, 1555] [/input-8, 1548] [/input-8, 1356] [/input-8, 1066] [/input-8, 1555] [/input-8, 532] [/input-8, 1299] [/input-8, 682] 
pruning_in_iteration open status: False
ratio of positive domain = 515 / 8192 = 0.0628662109375
pruning-in-iteration extra time: 0.00015616416931152344
Time: prepare 0.1709    bound 0.3694    transfer 0.0324    finalize 0.0411    func 0.7820    
Accumulated time: func 3.1391    prepare 0.5530    bound 1.9010    transfer 0.3434    finalize 0.1737    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24012 (17), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (17), -0.23277 (16), -0.23259 (17), -0.23210 (16), -0.23178 (16), -0.23168 (17), -0.23164 (17), -0.23104 (16), -0.23064 (17), -0.23036 (17), -0.23033 (16), 
Length of domains: 10845
Time: pickout 0.0864    decision 0.3856    set_bounds 0.1845    solve 0.7831    add 0.2149    
Accumulated time: pickout 0.3709    decision 1.3468    set_bounds 0.7783    solve 3.1448    add 0.9965    
Current (lb-rhs): -0.24642443656921387
23765 domains visited
current_vram/total_varm: 12.0GB/99.9GB, batch_size increase to 8192
Cumulative time: 6.74549126625061

BaB round 10
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1363] [/input-8, 1356] [/input-8, 681] [/input-8, 1558] [/input-8, 532] [/input-8, 666] [/input-8, 682] [/input-8, 1548] [/input-8, 1066] [/input-8, 531] 
pruning_in_iteration open status: False
ratio of positive domain = 980 / 16384 = 0.059814453125
pruning-in-iteration extra time: 0.00017023086547851562
Time: prepare 0.3379    bound 0.6942    transfer 0.0830    finalize 0.3070    func 1.4228    
Accumulated time: func 4.5619    prepare 0.8913    bound 2.5952    transfer 0.4264    finalize 0.4808    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23525 (18), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.23033 (16), -0.22998 (16), -0.22925 (16), -0.22890 (16), -0.22827 (16), -0.22780 (18), -0.22775 (18), 
Length of domains: 18006
Time: pickout 0.1349    decision 0.4802    set_bounds 0.5668    solve 1.4256    add 0.2316    
Accumulated time: pickout 0.5058    decision 1.8270    set_bounds 1.3451    solve 4.5705    add 1.2281    
Current (lb-rhs): -0.24642443656921387
39118 domains visited
current_vram/total_varm: 18.7GB/99.9GB, batch_size increase to 16384
Cumulative time: 9.613179683685303

BaB round 11
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 529 constraints, 29833 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2652
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 666] [/input-8, 682] [/input-8, 1356] [/input-8, 532] [/input-8, 533] [/input-8, 1363] [/input-8, 523] [/input-8, 682] [/input-8, 1564] [/input-8, 1356] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22988048195838928
10 lb beta sum: 3.3547418117523193, worst -0.19142252206802368
pruning_in_iteration open status: False
ratio of positive domain = 6496 / 32768 = 0.1982421875
pruning-in-iteration extra time: 0.0005013942718505859
Time: prepare 0.8874    bound 5.9497    transfer 0.1691    finalize 0.2074    func 7.4225    
Accumulated time: func 11.9844    prepare 1.7791    bound 8.5449    transfer 0.5955    finalize 0.6882    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 26049
Time: pickout 0.2332    decision 1.7017    set_bounds 1.0038    solve 7.4289    add 0.2375    
Accumulated time: pickout 0.7389    decision 3.5287    set_bounds 2.3489    solve 11.9994    add 1.4656    
Current (lb-rhs): -0.24642443656921387
63545 domains visited
Cumulative time: 20.578922748565674

BaB round 12
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 913 constraints, 46391 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6523
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1356] [/input-8, 1066] [/input-8, 1356] [/input-8, 533] [/input-8, 532] [/input-8, 1356] [/input-8, 1363] [/input-8, 1363] [/input-8, 532] [/input-8, 682] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.22172078490257263
10 lb beta sum: 5.366125583648682, worst -0.1795419454574585
pruning_in_iteration open status: False
ratio of positive domain = 3247 / 32768 = 0.099090576171875
pruning-in-iteration extra time: 0.0007877349853515625
Time: prepare 0.6691    bound 8.1563    transfer 0.1642    finalize 0.1988    func 9.4017    
Accumulated time: func 21.3861    prepare 2.4486    bound 16.7012    transfer 0.7597    finalize 0.8870    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 36391
Time: pickout 0.2154    decision 1.6895    set_bounds 1.3025    solve 9.7584    add 0.3333    
Accumulated time: pickout 0.9543    decision 5.2182    set_bounds 3.6514    solve 21.7578    add 1.7989    
Current (lb-rhs): -0.24642443656921387
90271 domains visited
Cumulative time: 34.61735200881958

BaB round 13
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1090 constraints, 55174 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4863
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 682] [/input-8, 532] [/input-8, 1878] [/input-8, 1878] [/input-8, 523] [/input-8, 523] [/input-8, 682] [/input-8, 1886] [/input-8, 1066] [/input-8, 1307] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21771007776260376
10 lb beta sum: 5.767327785491943, worst -0.17410269379615784
pruning_in_iteration open status: False
ratio of positive domain = 2177 / 32768 = 0.066436767578125
pruning-in-iteration extra time: 0.0007548332214355469
Time: prepare 1.0128    bound 9.1582    transfer 0.1624    finalize 0.2171    func 10.7701    
Accumulated time: func 32.1562    prepare 3.4618    bound 25.8594    transfer 0.9221    finalize 1.1041    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 48140
Time: pickout 0.2275    decision 1.6938    set_bounds 1.1305    solve 10.7779    add 0.2703    
Accumulated time: pickout 1.1819    decision 6.9120    set_bounds 4.7819    solve 32.5357    add 2.0691    
Current (lb-rhs): -0.24642443656921387
118404 domains visited
Cumulative time: 49.29781436920166

BaB round 14
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1155 constraints, 63734 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5662
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1564] [/input-8, 1356] [/input-8, 532] [/input-8, 533] [/input-8, 1886] [/input-8, 1902] [/input-8, 533] [/input-8, 1356] [/input-8, 682] [/input-8, 682] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2137778401374817
10 lb beta sum: 6.049618721008301, worst -0.16849063336849213
pruning_in_iteration open status: False
ratio of positive domain = 2281 / 32768 = 0.069610595703125
pruning-in-iteration extra time: 0.0008952617645263672
Time: prepare 0.6747    bound 9.6276    transfer 0.1626    finalize 0.2049    func 10.8882    
Accumulated time: func 43.0444    prepare 4.1370    bound 35.4870    transfer 1.0847    finalize 1.3090    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 59602
Time: pickout 0.2498    decision 2.1819    set_bounds 1.2236    solve 11.4131    add 0.2671    
Accumulated time: pickout 1.4317    decision 9.0939    set_bounds 6.0055    solve 43.9488    add 2.3362    
Current (lb-rhs): -0.24642443656921387
146250 domains visited
Cumulative time: 65.28361582756042

BaB round 15
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1212 constraints, 64844 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5770
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1902] [/input-8, 533] [/input-8, 1356] [/input-8, 1902] [/input-8, 682] [/input-8, 532] [/input-8, 1355] [/input-8, 1356] [/input-8, 1355] [/input-8, 1301] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.20631837844848633
10 lb beta sum: 5.954323768615723, worst -0.16084785759449005
pruning_in_iteration open status: False
ratio of positive domain = 1856 / 32768 = 0.056640625
pruning-in-iteration extra time: 0.0008130073547363281
Time: prepare 0.6918    bound 9.8145    transfer 0.1615    finalize 0.2076    func 11.0908    
Accumulated time: func 54.1352    prepare 4.8293    bound 45.3015    transfer 1.2462    finalize 1.5165    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 71882
Time: pickout 0.2603    decision 1.6964    set_bounds 1.3759    solve 11.0991    add 0.4260    
Accumulated time: pickout 1.6920    decision 10.7903    set_bounds 7.3814    solve 55.0479    add 2.7622    
Current (lb-rhs): -0.24642443656921387
174914 domains visited
Cumulative time: 80.91015434265137

BaB round 16
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1239 constraints, 65604 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.3493
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1373] [/input-8, 533] [/input-8, 1355] [/input-8, 1307] [/input-8, 1355] [/input-8, 1373] [/input-8, 1373] [/input-8, 532] [/input-8, 1886] [/input-8, 1373] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1965790092945099
10 lb beta sum: 5.934738636016846, worst -0.15546420216560364
pruning_in_iteration open status: False
ratio of positive domain = 2038 / 32768 = 0.06219482421875
pruning-in-iteration extra time: 0.0009441375732421875
Time: prepare 0.6873    bound 9.9896    transfer 0.1571    finalize 0.2336    func 11.2819    
Accumulated time: func 65.4171    prepare 5.5170    bound 55.2911    transfer 1.4033    finalize 1.7501    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 83524
Time: pickout 0.2768    decision 1.7032    set_bounds 1.6094    solve 11.2907    add 0.2778    
Accumulated time: pickout 1.9688    decision 12.4934    set_bounds 8.9908    solve 66.3386    add 3.0400    
Current (lb-rhs): -0.24642443656921387
202940 domains visited
Cumulative time: 97.5377562046051

BaB round 17
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1311 constraints, 67445 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6082
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1902] [/input-8, 1886] [/input-8, 1902] [/input-8, 531] [/input-8, 1355] [/input-8, 854] [/input-8, 1355] [/input-8, 1558] [/input-8, 1555] [/input-8, 523] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.18846264481544495
10 lb beta sum: 5.993505001068115, worst -0.15134620666503906
pruning_in_iteration open status: False
ratio of positive domain = 2117 / 32768 = 0.064605712890625
pruning-in-iteration extra time: 0.0009601116180419922
Time: prepare 0.6731    bound 10.4998    transfer 0.1578    finalize 0.2148    func 11.7619    
Accumulated time: func 77.1790    prepare 6.1905    bound 65.7909    transfer 1.5611    finalize 1.9649    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 95295
Time: pickout 0.2586    decision 2.5140    set_bounds 1.5205    solve 11.7706    add 0.2720    
Accumulated time: pickout 2.2274    decision 15.0074    set_bounds 10.5112    solve 78.1092    add 3.3120    
Current (lb-rhs): -0.24642443656921387
231095 domains visited
Cumulative time: 114.58799433708191

BaB round 18
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1350 constraints, 67968 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6066
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1564] [/input-8, 1373] [/input-8, 682] [/input-8, 1870] [/input-8, 1564] [/input-8, 1878] [/input-8, 1373] [/input-8, 1373] [/input-8, 682] [/input-8, 1373] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.17990043759346008
10 lb beta sum: 5.874774932861328, worst -0.14731767773628235
pruning_in_iteration open status: False
ratio of positive domain = 2329 / 32768 = 0.071075439453125
pruning-in-iteration extra time: 0.0009713172912597656
Time: prepare 0.6824    bound 10.8745    transfer 0.1574    finalize 0.2015    func 12.1308    
Accumulated time: func 89.3098    prepare 6.8733    bound 76.6654    transfer 1.7185    finalize 2.1664    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 106465
Time: pickout 0.2733    decision 1.7068    set_bounds 1.6782    solve 12.1391    add 0.2629    
Accumulated time: pickout 2.5008    decision 16.7142    set_bounds 12.1894    solve 90.2483    add 3.5749    
Current (lb-rhs): -0.24642443656921387
258649 domains visited
Cumulative time: 131.38343596458435

BaB round 19
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1363 constraints, 68278 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.4836
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1373] [/input-8, 1373] [/input-8, 1066] [/input-8, 666] [/input-8, 1564] [/input-8, 854] [/input-8, 1902] [/input-8, 1355] [/input-8, 1355] [/input-8, 1878] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.1643403172492981
10 lb beta sum: 5.863649368286133, worst -0.12965178489685059
pruning_in_iteration open status: False
ratio of positive domain = 2547 / 32768 = 0.077728271484375
pruning-in-iteration extra time: 0.0008835792541503906
Time: prepare 0.7018    bound 10.8930    transfer 0.1612    finalize 1.2595    func 13.2400    
Accumulated time: func 102.5498    prepare 7.5756    bound 87.5584    transfer 1.8797    finalize 3.4259    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 117210
Time: pickout 0.2635    decision 1.7191    set_bounds 0.7994    solve 13.2469    add 0.2731    
Accumulated time: pickout 2.7643    decision 18.4332    set_bounds 12.9889    solve 103.4952    add 3.8480    
Current (lb-rhs): -0.24642443656921387
285778 domains visited
Cumulative time: 149.34712433815002

BaB round 20
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1361 constraints, 68130 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6395
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1878] [/input-8, 1902] [/input-8, 1354] [/input-8, 1355] [/input-8, 1902] [/input-8, 1883] [/input-8, 1878] [/input-8, 1902] [/input-8, 1066] [/input-8, 533] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.16038818657398224
10 lb beta sum: 5.81503963470459, worst -0.1267908811569214
pruning_in_iteration open status: False
ratio of positive domain = 3288 / 32768 = 0.100341796875
pruning-in-iteration extra time: 0.0008883476257324219
Time: prepare 0.7053    bound 10.8765    transfer 0.1597    finalize 0.2519    func 12.2152    
Accumulated time: func 114.7651    prepare 8.2814    bound 98.4349    transfer 2.0393    finalize 3.6778    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 126632
Time: pickout 0.3131    decision 1.7262    set_bounds 1.9668    solve 12.2244    add 0.2641    
Accumulated time: pickout 3.0774    decision 20.1594    set_bounds 14.9556    solve 115.7196    add 4.1121    
Current (lb-rhs): -0.24642443656921387
311584 domains visited
Cumulative time: 166.62268137931824

BaB round 21
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1360 constraints, 68247 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6206
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 523] [/input-8, 1870] [/input-8, 1870] [/input-8, 1355] [/input-8, 1886] [/input-8, 1886] [/input-8, 1884] [/input-8, 523] [/input-8, 1870] [/input-8, 1870] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.14805835485458374
10 lb beta sum: 5.720337867736816, worst -0.11343997716903687
pruning_in_iteration open status: False
ratio of positive domain = 3899 / 32768 = 0.118988037109375
pruning-in-iteration extra time: 0.0008935928344726562
Time: prepare 0.7178    bound 10.7290    transfer 0.1611    finalize 0.2302    func 12.0579    
Accumulated time: func 126.8230    prepare 8.9996    bound 109.1639    transfer 2.2005    finalize 3.9080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 135312
Time: pickout 0.2951    decision 1.7293    set_bounds 1.9218    solve 12.0682    add 0.2548    
Accumulated time: pickout 3.3725    decision 21.8887    set_bounds 16.8774    solve 127.7878    add 4.3669    
Current (lb-rhs): -0.24642443656921387
336648 domains visited
Cumulative time: 183.6480417251587

BaB round 22
Matched cut cplex process, internal label idx = 2
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts: total 1352 constraints, 67717 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6088
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1355] [/input-8, 1564] [/input-8, 666] [/input-8, 666] [/input-12, 21] [/input-8, 700] [/input-12, 21] [/input-8, 1373] [/input-8, 666] [/input-8, 1883] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.13900038599967957
10 lb beta sum: 5.467527389526367, worst -0.10875492542982101
pruning_in_iteration open status: False
ratio of positive domain = 4732 / 32768 = 0.1444091796875
pruning-in-iteration extra time: 0.0008826255798339844
Time: prepare 0.7158    bound 10.7650    transfer 0.1606    finalize 0.2315    func 12.0862    
Accumulated time: func 138.9092    prepare 9.7159    bound 119.9289    transfer 2.3610    finalize 4.1395    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.24642 (16), -0.24005 (16), -0.23947 (16), -0.23815 (16), -0.23771 (16), -0.23736 (16), -0.23460 (16), -0.23416 (16), -0.23277 (16), -0.23210 (16), -0.23178 (16), -0.23104 (16), -0.22998 (16), -0.22890 (16), -0.22827 (16), -0.22747 (16), -0.22685 (16), -0.22654 (16), -0.22644 (16), -0.22532 (16), 
Length of domains: 143275
Time: pickout 0.2792    decision 2.9739    set_bounds 0.7989    solve 12.0972    add 0.2693    
Accumulated time: pickout 3.6517    decision 24.8626    set_bounds 17.6763    solve 139.8850    add 4.6362    
Current (lb-rhs): -0.24642443656921387
360995 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=183_spec=2_30276959.log
found process for pidx=2
kill process for pidx=2
Result: unknown in 204.4633 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 184, vnnlib ID: 184 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.89069843,  -6.00872993,  -9.81441784,  -9.48617077,  -8.76289272,
         -10.92080116, -10.39973545,  -9.59434032,  -4.95132399,  -4.38216209]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [578]; unstable size 578; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 156, 1, 578] with unstable size 155 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 23, 1, 578] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 578] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [155]; unstable size 155; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 23, 1, 155] with unstable size 22 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 155] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [22]; unstable size 22; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 22] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.10633993,  0.71801627,  3.55015564,  3.86298275,  2.74121571,
          5.07143974,  4.74717522,  3.53826189, -1.04089355]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -5.89069843,  -6.00872993,  -9.81441784,  -9.48617077,  -8.76289272,
         -10.92080116, -10.39973545,  -9.59434032,  -4.95132399,  -4.38216209]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -6.23351336,  -6.51122952,  -9.97287560,  -9.75941277,  -9.11242390,
          -11.14874649, -10.70846844, -10.12545395,  -4.86424160,  -4.98114300]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.11690140]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0074 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0840 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 185, vnnlib ID: 185 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-8.37633038, -6.56312561, -6.81894398, -6.27486277, -5.78229427,
         -6.83015299, -6.31567955, -6.65800142, -9.07024956, -5.04341173]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [539]; unstable size 539; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 221, 1, 539] with unstable size 220 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 20, 1, 539] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 539] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [220]; unstable size 220; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 20, 1, 220] with unstable size 19 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 220] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [19]; unstable size 19; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 19] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.97405243,  0.32927620,  0.17750072, -0.10494566, -0.85372543,
          0.32606649, -0.43116236, -0.31671762,  2.66897082]], device='cuda:0') None
Remain 4 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-8.37633038, -6.56312561, -6.81894398, -6.27486277, -5.78229427,
         -6.83015299, -6.31567955, -6.65800142, -9.07024956, -5.04341173]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-8.16314507, -6.55455589, -6.26958275, -5.76347637, -5.09310055,
          -6.24820852, -5.75853968, -6.04403734, -8.83266640, -5.21279097],
         [-8.16314507, -6.55455589, -6.26958275, -5.76347637, -5.09310055,
          -6.24820852, -5.75853968, -6.04403734, -8.83266640, -5.21279097]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.55068541, -0.11969042,  0.54574871,  0.83124638]]],
       device='cuda:0')
number of violation:  1
Attack finished in 0.0066 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0777 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 186, vnnlib ID: 186 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.47806835, -16.40879250, -15.09305000, -16.23484230, -16.50166130,
         -18.09269333, -17.71716118, -17.61732292,  -9.91329861, -15.71094036]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [596]; unstable size 596; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 185, 1, 596] with unstable size 184 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 22, 1, 596] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 596] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [184]; unstable size 184; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 22, 1, 184] with unstable size 21 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 184] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [21]; unstable size 21; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 21] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[1.06263494, 4.58382607, 3.51261306, 4.72654200, 4.75524139, 6.32470655,
         6.04849148, 5.57820749, 4.16677761]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0673 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 187, vnnlib ID: 187 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
          -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [737]; unstable size 737; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 236, 1, 737] with unstable size 235 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 737] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 737] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [235]; unstable size 235; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 235] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 235] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.51290500,  2.97313166,  0.25002098,  0.22753626, -0.42947245,
          0.68455637,  0.85951900,  1.57969761,  0.97213125]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
          -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.05it/s]100%|██████████| 1/1 [00:00<00:00,  8.04it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.76094055, -9.90721989, -7.24489021, -7.13194036, -6.39108372,
          -7.84055758, -7.66757345, -8.71227264, -5.73706532, -7.77384520],
         [-5.76094055, -9.90721989, -7.24489021, -7.13194036, -6.39108372,
          -7.84055758, -7.66757345, -8.71227264, -5.73706532, -7.77384520]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.02387524, 0.65401840]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1272 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 7.152822494506836
alpha/beta optimization time: 1.464914321899414
initial alpha-crown bounds: tensor([[-0.46918005,  3.03084230,  0.32193279,  0.28774804, -0.37226689,
          0.75499427,  0.91308224,  1.66521287,  1.02045679]], device='cuda:0')
Number of class (without rhs): 2 ; Worst class: (+ rhs) -0.46918004751205444
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6588 seconds.
lower bounds for all target labels: [-0.4691799283027649, 3.0308408737182617, 0.32193446159362793, 0.2877465486526489, -0.37226712703704834, 0.7549939155578613, 0.9130802154541016, 1.6652135848999023, 1.0204553604125977]
Number of cpus: 96  Number of subproblems: 2
Reassign each subproblems with number of thread: 48
Starting MIP solver for these labels: [0, 4]
start creating model mps for candidates: ['lay/16_0', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 153904 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 153907 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.23964047431946
Verifying property 0 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.0308423042297363.

Properties batch 1, size 1
Remaining timeout: 198.0714943408966
Verifying property 1 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.665212869644165.

Properties batch 2, size 1
Remaining timeout: 197.95864081382751
Verifying property 2 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.0204567909240723.

Properties batch 3, size 1
Remaining timeout: 197.83445382118225
Verifying property 3 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.9130822420120239.

Properties batch 4, size 1
Remaining timeout: 197.7217035293579
Verifying property 4 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.75499427318573.

Properties batch 5, size 1
Remaining timeout: 197.6115345954895
Verifying property 5 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.3219327926635742.

Properties batch 6, size 1
Remaining timeout: 197.49613332748413
Verifying property 6 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2877480387687683.

Properties batch 7, size 1
Remaining timeout: 197.38462710380554
Verifying property 7 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[ 0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.37226689]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
         -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.37226689]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 737
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 228
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 983
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0007245540618896484
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 45] 
split level 1: [/input-12, 92] 
split level 2: [/input-12, 31] 
split level 3: [/input-12, 60] 
split level 4: [/input-12, 37] 
split level 5: [/input-12, 26] 
split level 6: [/input-8, 875] 
split level 7: [/input-8, 556] 
pruning_in_iteration open status: True
ratio of positive domain = 199 / 256 = 0.77734375
pruning-in-iteration extra time: 0.0056056976318359375
Time: prepare 0.0033    bound 0.1458    transfer 0.0046    finalize 0.0023    func 0.1561    
Accumulated time: func 0.1561    prepare 0.0038    bound 0.1458    transfer 0.0046    finalize 0.0023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.11135 (8), -0.10915 (8), -0.10720 (8), -0.10351 (8), -0.10297 (8), -0.10066 (8), -0.10005 (8), -0.09627 (8), -0.09032 (8), -0.08956 (8), -0.08812 (8), -0.08746 (8), -0.08734 (8), -0.08660 (8), -0.08393 (8), -0.08298 (8), -0.07701 (8), -0.07588 (8), -0.07314 (8), -0.07051 (8), 
Length of domains: 57
Time: pickout 0.0006    decision 0.0272    set_bounds 0.0218    solve 0.1561    add 0.0643    
Accumulated time: pickout 0.0006    decision 0.0272    set_bounds 0.0218    solve 0.1561    add 0.0643    
Current (lb-rhs): -0.11134541034698486
57 domains visited
Cumulative time: 0.2846200466156006

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 57
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-12, 1] [/input-12, 1] [/input-8, 867] [/input-12, 1] [/input-12, 1] [/input-12, 1] [/input-8, 867] [/input-12, 1] [/input-12, 1] [/input-8, 867] 
pruning_in_iteration open status: True
ratio of positive domain = 171 / 228 = 0.75
pruning-in-iteration extra time: 0.0050830841064453125
Time: prepare 0.0047    bound 0.1200    transfer 0.0057    finalize 0.0019    func 0.1324    
Accumulated time: func 0.2885    prepare 0.0087    bound 0.2658    transfer 0.0103    finalize 0.0042    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09830 (10), -0.09611 (10), -0.09427 (10), -0.09059 (10), -0.08996 (10), -0.08763 (10), -0.08719 (10), -0.08345 (10), -0.07721 (10), -0.07656 (10), -0.07520 (10), -0.07452 (10), -0.07438 (10), -0.07335 (10), -0.07091 (10), -0.06994 (10), -0.06324 (10), -0.06208 (10), -0.05913 (10), -0.05683 (10), 
Length of domains: 57
Time: pickout 0.0058    decision 0.0194    set_bounds 0.0080    solve 0.1325    add 0.0121    
Accumulated time: pickout 0.0065    decision 0.0466    set_bounds 0.0298    solve 0.2886    add 0.0764    
Current (lb-rhs): -0.09829509258270264
114 domains visited
Cumulative time: 0.4639568328857422

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 57
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 867] [/input-12, 1] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-8, 867] [/input-12, 1] [/input-8, 867] 
split level 1: [/input-8, 1061] [/input-8, 538] [/input-8, 538] [/input-8, 659] [/input-8, 541] [/input-8, 538] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 659] 
pruning_in_iteration open status: True
ratio of positive domain = 50 / 228 = 0.2192982456140351
pruning-in-iteration extra time: 0.003464937210083008
Time: prepare 0.0049    bound 0.1346    transfer 0.0009    finalize 0.0014    func 0.1419    
Accumulated time: func 0.4304    prepare 0.0138    bound 0.4004    transfer 0.0112    finalize 0.0057    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07788 (12), -0.07571 (12), -0.07442 (12), -0.07136 (12), -0.06926 (12), -0.06839 (12), -0.06828 (12), -0.06821 (12), -0.06737 (12), -0.06716 (12), -0.06711 (12), -0.06621 (12), -0.06510 (12), -0.06475 (12), -0.06400 (12), -0.06398 (12), -0.06239 (12), -0.06213 (12), -0.06102 (12), -0.06084 (12), 
Length of domains: 178
Time: pickout 0.0014    decision 0.0143    set_bounds 0.0070    solve 0.1420    add 0.0803    
Accumulated time: pickout 0.0079    decision 0.0610    set_bounds 0.0367    solve 0.4306    add 0.1567    
Current (lb-rhs): -0.07788324356079102
292 domains visited
Cumulative time: 0.7161107063293457

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 178
splitting decisions: 
split level 0: [/input-8, 659] [/input-8, 659] [/input-8, 659] [/input, 3529] [/input-8, 659] [/input-8, 659] [/input-8, 659] [/input-8, 538] [/input-8, 1460] [/input, 1463] 
pruning_in_iteration open status: False
ratio of positive domain = 69 / 356 = 0.1938202247191011
pruning-in-iteration extra time: 8.487701416015625e-05
Time: prepare 0.0081    bound 0.1134    transfer 0.0042    finalize 0.0023    func 0.1281    
Accumulated time: func 0.5585    prepare 0.0221    bound 0.5138    transfer 0.0154    finalize 0.0080    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07180 (13), -0.07179 (13), -0.06673 (13), -0.06328 (13), -0.06318 (13), -0.06221 (13), -0.06210 (13), -0.06151 (13), -0.06134 (13), -0.06069 (13), -0.06043 (13), -0.06043 (13), -0.05935 (13), -0.05887 (13), -0.05723 (13), -0.05701 (13), -0.05697 (13), -0.05576 (13), -0.05523 (13), -0.05442 (13), 
Length of domains: 285
Time: pickout 0.0166    decision 0.0234    set_bounds 0.0066    solve 0.1282    add 0.0832    
Accumulated time: pickout 0.0245    decision 0.0844    set_bounds 0.0433    solve 0.5588    add 0.2399    
Current (lb-rhs): -0.07180368900299072
577 domains visited
Cumulative time: 0.9811241626739502

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 285
splitting decisions: 
split level 0: [/input-8, 538] [/input-8, 1061] [/input, 1463] [/input, 3529] [/input, 3529] [/input, 1463] [/input, 3529] [/input, 3529] [/input, 3529] [/input, 1463] 
pruning_in_iteration open status: True
ratio of positive domain = 166 / 570 = 0.2912280701754386
pruning-in-iteration extra time: 0.005125999450683594
Time: prepare 0.0140    bound 0.1686    transfer 0.0067    finalize 0.0054    func 0.1948    
Accumulated time: func 0.7533    prepare 0.0363    bound 0.6824    transfer 0.0221    finalize 0.0133    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06802 (14), -0.06586 (14), -0.06098 (14), -0.05941 (14), -0.05831 (14), -0.05746 (14), -0.05713 (14), -0.05618 (14), -0.05522 (14), -0.05503 (14), -0.05429 (14), -0.05342 (14), -0.05268 (14), -0.05218 (14), -0.05155 (14), -0.05098 (14), -0.05089 (14), -0.05088 (14), -0.05063 (14), -0.05012 (14), 
Length of domains: 404
Time: pickout 0.0182    decision 0.0320    set_bounds 0.0113    solve 0.1949    add 0.0943    
Accumulated time: pickout 0.0427    decision 0.1164    set_bounds 0.0546    solve 0.7537    add 0.3342    
Current (lb-rhs): -0.06801855564117432
981 domains visited
Cumulative time: 1.339338779449463

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 404
splitting decisions: 
split level 0: [/input, 3529] [/input-8, 538] [/input, 3529] [/input, 1463] [/input-8, 538] [/input-8, 538] [/input-8, 884] [/input, 1463] [/input, 3529] [/input-8, 659] 
pruning_in_iteration open status: True
ratio of positive domain = 217 / 808 = 0.2685643564356436
pruning-in-iteration extra time: 0.005192756652832031
Time: prepare 0.0201    bound 0.2158    transfer 0.0095    finalize 0.0069    func 0.2525    
Accumulated time: func 1.0058    prepare 0.0567    bound 0.8982    transfer 0.0316    finalize 0.0202    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05928 (15), -0.05790 (15), -0.05732 (15), -0.05633 (15), -0.05419 (15), -0.05129 (15), -0.05066 (15), -0.05024 (15), -0.04974 (15), -0.04963 (15), -0.04915 (15), -0.04880 (15), -0.04854 (15), -0.04774 (15), -0.04772 (15), -0.04673 (15), -0.04652 (15), -0.04601 (15), -0.04541 (15), -0.04526 (15), 
Length of domains: 591
Time: pickout 0.0186    decision 0.0391    set_bounds 0.0174    solve 0.2527    add 0.0621    
Accumulated time: pickout 0.0613    decision 0.1554    set_bounds 0.0720    solve 1.0064    add 0.3963    
Current (lb-rhs): -0.05928146839141846
1572 domains visited
Cumulative time: 1.737621784210205

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 591
splitting decisions: 
split level 0: [/input, 1463] [/input-8, 1003] [/input-8, 538] [/input-8, 1052] [/input-8, 1460] [/input-8, 1052] [/input, 1736] [/input, 1736] [/input, 3529] [/input-8, 541] 
pruning_in_iteration open status: True
ratio of positive domain = 356 / 1182 = 0.3011844331641286
pruning-in-iteration extra time: 0.005220651626586914
Time: prepare 0.0299    bound 0.2610    transfer 0.0478    finalize 0.0090    func 0.3479    
Accumulated time: func 1.3536    prepare 0.0868    bound 1.1592    transfer 0.0794    finalize 0.0293    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.05148 (16), -0.04949 (16), -0.04852 (16), -0.04849 (16), -0.04830 (16), -0.04807 (16), -0.04652 (16), -0.04593 (16), -0.04513 (16), -0.04441 (16), -0.04420 (16), -0.04245 (16), -0.04226 (16), -0.04196 (16), -0.04156 (16), -0.04130 (16), -0.04109 (16), -0.04047 (16), -0.03995 (16), -0.03978 (16), 
Length of domains: 826
Time: pickout 0.0240    decision 0.0494    set_bounds 0.0247    solve 0.3490    add 0.0899    
Accumulated time: pickout 0.0853    decision 0.2048    set_bounds 0.0966    solve 1.3554    add 0.4862    
Current (lb-rhs): -0.05148005485534668
2398 domains visited
Cumulative time: 2.289031982421875

BaB round 8
Fetch cut process: mps for current label is not ready yet
batch: 826
splitting decisions: 
split level 0: [/input-8, 1460] [/input-8, 884] [/input-8, 884] [/input-8, 659] [/input, 1736] [/input-8, 659] [/input-8, 541] [/input, 1736] [/input-8, 1003] [/input, 3529] 
pruning_in_iteration open status: True
ratio of positive domain = 806 / 1652 = 0.48789346246973364
pruning-in-iteration extra time: 0.00543665885925293
Time: prepare 0.0441    bound 0.2452    transfer 0.0093    finalize 0.0138    func 0.3137    
Accumulated time: func 1.6673    prepare 0.1311    bound 1.4044    transfer 0.0887    finalize 0.0430    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04661 (17), -0.04562 (17), -0.04538 (17), -0.04518 (17), -0.04449 (17), -0.04365 (17), -0.04316 (17), -0.04227 (17), -0.04152 (17), -0.04146 (17), -0.04124 (17), -0.04086 (17), -0.03962 (17), -0.03872 (17), -0.03845 (17), -0.03837 (17), -0.03788 (17), -0.03758 (17), -0.03698 (17), -0.03696 (17), 
Length of domains: 846
Time: pickout 0.0568    decision 0.0671    set_bounds 0.0353    solve 0.3141    add 0.1045    
Accumulated time: pickout 0.1420    decision 0.2720    set_bounds 0.1320    solve 1.6694    add 0.5907    
Current (lb-rhs): -0.04660975933074951
3244 domains visited
Cumulative time: 2.876859426498413

BaB round 9
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0027
batch: 846
splitting decisions: 
split level 0: [/input, 1736] [/input-8, 541] [/input-8, 541] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input, 3512] [/input-8, 884] [/input-8, 541] [/input, 3512] 
pruning_in_iteration open status: True
ratio of positive domain = 787 / 1692 = 0.4651300236406619
pruning-in-iteration extra time: 0.005218982696533203
Time: prepare 0.0421    bound 0.2485    transfer 0.0030    finalize 0.0110    func 0.3047    
Accumulated time: func 1.9720    prepare 0.1735    bound 1.6530    transfer 0.0917    finalize 0.0540    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04113 (18), -0.03995 (18), -0.03872 (18), -0.03852 (18), -0.03817 (18), -0.03735 (18), -0.03710 (18), -0.03700 (18), -0.03510 (18), -0.03484 (18), -0.03480 (18), -0.03479 (18), -0.03461 (18), -0.03438 (18), -0.03377 (18), -0.03345 (18), -0.03320 (18), -0.03310 (18), -0.03247 (18), -0.03215 (18), 
Length of domains: 905
Time: pickout 0.0234    decision 0.0637    set_bounds 0.0344    solve 0.3050    add 0.1004    
Accumulated time: pickout 0.1654    decision 0.3357    set_bounds 0.1664    solve 1.9745    add 0.6911    
Current (lb-rhs): -0.04113435745239258
4149 domains visited
Cumulative time: 3.4187254905700684

BaB round 10
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 905
splitting decisions: 
split level 0: [/input-8, 884] [/input, 1736] [/input-8, 1460] [/input, 3512] [/input-8, 1003] [/input, 1736] [/input, 1736] [/input-8, 884] [/input-8, 884] [/input-8, 884] 
pruning_in_iteration open status: True
ratio of positive domain = 978 / 1810 = 0.5403314917127071
pruning-in-iteration extra time: 0.005574703216552734
Time: prepare 0.0486    bound 0.2454    transfer 0.0121    finalize 0.0126    func 0.3189    
Accumulated time: func 2.2909    prepare 0.2223    bound 1.8983    transfer 0.1038    finalize 0.0667    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03640 (19), -0.03547 (19), -0.03343 (19), -0.03283 (19), -0.03252 (19), -0.03242 (19), -0.03181 (19), -0.03080 (19), -0.03056 (19), -0.03053 (19), -0.02986 (19), -0.02908 (19), -0.02898 (19), -0.02879 (19), -0.02790 (19), -0.02789 (19), -0.02767 (19), -0.02760 (19), -0.02757 (19), -0.02720 (19), 
Length of domains: 832
Time: pickout 0.0377    decision 0.0683    set_bounds 0.0386    solve 0.3193    add 0.0997    
Accumulated time: pickout 0.2032    decision 0.4040    set_bounds 0.2050    solve 2.2938    add 0.7908    
Current (lb-rhs): -0.03639650344848633
4981 domains visited
Cumulative time: 4.007325172424316

BaB round 11
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0027
batch: 832
splitting decisions: 
split level 0: [/input-8, 541] [/input, 3512] [/input, 3512] [/input-8, 541] [/input, 3512] [/input, 2248] [/input-8, 541] [/input, 3512] [/input, 3512] [/input-8, 541] 
pruning_in_iteration open status: True
ratio of positive domain = 1042 / 1664 = 0.6262019230769231
pruning-in-iteration extra time: 0.0051882266998291016
Time: prepare 0.0418    bound 0.2434    transfer 0.0089    finalize 0.0134    func 0.3077    
Accumulated time: func 2.5986    prepare 0.2643    bound 2.1418    transfer 0.1127    finalize 0.0801    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02974 (20), -0.02725 (20), -0.02712 (20), -0.02678 (20), -0.02620 (20), -0.02618 (20), -0.02602 (20), -0.02540 (20), -0.02490 (20), -0.02453 (20), -0.02451 (20), -0.02427 (20), -0.02407 (20), -0.02354 (20), -0.02331 (20), -0.02327 (20), -0.02320 (20), -0.02307 (20), -0.02304 (20), -0.02245 (20), 
Length of domains: 622
Time: pickout 0.0270    decision 0.0640    set_bounds 0.0341    solve 0.3088    add 0.0929    
Accumulated time: pickout 0.2301    decision 0.4680    set_bounds 0.2391    solve 2.6025    add 0.8837    
Current (lb-rhs): -0.0297391414642334
5603 domains visited
Cumulative time: 4.552890300750732

BaB round 12
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0021
batch: 622
splitting decisions: 
split level 0: [/input, 2248] [/input, 2248] [/input, 2248] [/input, 3512] [/input, 2248] [/input, 2248] [/input, 2248] [/input, 2248] [/input, 1736] [/input-8, 541] 
pruning_in_iteration open status: True
ratio of positive domain = 754 / 1244 = 0.6061093247588425
pruning-in-iteration extra time: 0.005170106887817383
Time: prepare 0.0311    bound 0.1961    transfer 0.0024    finalize 0.0071    func 0.2377    
Accumulated time: func 2.8362    prepare 0.2956    bound 2.3379    transfer 0.1151    finalize 0.0872    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.02773 (21), -0.02517 (21), -0.02477 (21), -0.02449 (21), -0.02425 (21), -0.02340 (21), -0.02303 (21), -0.02284 (21), -0.02151 (21), -0.02132 (21), -0.02041 (21), -0.02016 (21), -0.02007 (21), -0.01989 (21), -0.01959 (21), -0.01951 (21), -0.01918 (21), -0.01862 (21), -0.01843 (21), -0.01817 (21), 
Length of domains: 490
Time: pickout 0.0246    decision 0.0510    set_bounds 0.0251    solve 0.5054    add 0.0937    
Accumulated time: pickout 0.2547    decision 0.5190    set_bounds 0.2642    solve 3.1079    add 0.9774    
Current (lb-rhs): -0.027731776237487793
6093 domains visited
Cumulative time: 5.265036344528198

BaB round 13
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0015
batch: 490
splitting decisions: 
split level 0: [/input-8, 1460] [/input-8, 1003] [/input-8, 1460] [/input, 1736] [/input-8, 1003] [/input-8, 1460] [/input-8, 1003] [/input-8, 1003] [/input, 2248] [/input-8, 1460] 
pruning_in_iteration open status: True
ratio of positive domain = 644 / 980 = 0.6571428571428571
pruning-in-iteration extra time: 0.005243539810180664
Time: prepare 0.0245    bound 0.1808    transfer 0.0131    finalize 0.0062    func 0.2247    
Accumulated time: func 3.0609    prepare 0.3203    bound 2.5187    transfer 0.1281    finalize 0.0933    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01893 (22), -0.01816 (22), -0.01721 (22), -0.01661 (22), -0.01636 (22), -0.01634 (22), -0.01625 (22), -0.01618 (22), -0.01595 (22), -0.01585 (22), -0.01537 (22), -0.01523 (22), -0.01495 (22), -0.01393 (22), -0.01393 (22), -0.01379 (22), -0.01366 (22), -0.01363 (22), -0.01338 (22), -0.01338 (22), 
Length of domains: 336
Time: pickout 0.0263    decision 0.0455    set_bounds 0.0199    solve 0.2248    add 0.1193    
Accumulated time: pickout 0.2810    decision 0.5646    set_bounds 0.2841    solve 3.3327    add 1.0967    
Current (lb-rhs): -0.01892530918121338
6429 domains visited
Cumulative time: 5.712697505950928

BaB round 14
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0014
batch: 336
splitting decisions: 
split level 0: [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 1003] [/input-8, 1061] [/input-8, 1003] [/input-8, 1061] [/input-8, 1003] [/input-8, 1003] 
pruning_in_iteration open status: True
ratio of positive domain = 527 / 672 = 0.7842261904761905
pruning-in-iteration extra time: 0.004971742630004883
Time: prepare 0.0166    bound 0.1373    transfer 0.0030    finalize 0.0035    func 0.1605    
Accumulated time: func 3.2214    prepare 0.3372    bound 2.6560    transfer 0.1311    finalize 0.0969    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01070 (23), -0.00997 (23), -0.00965 (23), -0.00945 (23), -0.00934 (23), -0.00871 (23), -0.00862 (23), -0.00851 (23), -0.00842 (23), -0.00812 (23), -0.00798 (23), -0.00773 (23), -0.00769 (23), -0.00768 (23), -0.00763 (23), -0.00753 (23), -0.00737 (23), -0.00734 (23), -0.00733 (23), -0.00711 (23), 
Length of domains: 145
Time: pickout 0.0209    decision 0.0384    set_bounds 0.0141    solve 0.1606    add 0.0952    
Accumulated time: pickout 0.3019    decision 0.6029    set_bounds 0.2983    solve 3.4934    add 1.1919    
Current (lb-rhs): -0.01069939136505127
6574 domains visited
Cumulative time: 6.059472322463989

BaB round 15
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 145
splitting decisions: 
split level 0: [/input-8, 1052] [/input, 3272] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] [/input-8, 1052] [/input-8, 1461] [/input-8, 1052] [/input-8, 801] [/input, 3272] 
pruning_in_iteration open status: True
ratio of positive domain = 220 / 290 = 0.7586206896551724
pruning-in-iteration extra time: 0.005026817321777344
Time: prepare 0.0076    bound 0.1339    transfer 0.0038    finalize 0.0019    func 0.1473    
Accumulated time: func 3.3687    prepare 0.3450    bound 2.7899    transfer 0.1349    finalize 0.0988    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.00738 (24), -0.00653 (24), -0.00617 (24), -0.00602 (24), -0.00596 (24), -0.00542 (24), -0.00529 (24), -0.00517 (24), -0.00477 (24), -0.00459 (24), -0.00454 (24), -0.00440 (24), -0.00438 (24), -0.00420 (24), -0.00418 (24), -0.00412 (24), -0.00410 (24), -0.00404 (24), -0.00396 (24), -0.00373 (24), 
Length of domains: 70
Time: pickout 0.0189    decision 0.0261    set_bounds 0.0064    solve 0.1473    add 0.0716    
Accumulated time: pickout 0.3208    decision 0.6290    set_bounds 0.3046    solve 3.6407    add 1.2634    
Current (lb-rhs): -0.00737762451171875
6644 domains visited
Cumulative time: 6.3389341831207275

BaB round 16
Matched cut cplex process, internal label idx = 4
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0041
batch: 70
splitting decisions: 
split level 0: [/input, 3272] [/input-8, 1461] [/input-8, 1461] [/input-8, 801] [/input-8, 1052] [/input-8, 801] [/input-8, 801] [/input-8, 1461] [/input-8, 860] [/input-8, 1461] 
split level 1: [/input-8, 860] [/input-8, 1881] [/input, 3272] [/input-8, 1461] [/input-8, 860] [/input-8, 1461] [/input-8, 860] [/input, 3272] [/input, 3272] [/input-8, 1881] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 280 / 280 = 1.0
pruning-in-iteration extra time: 4.9591064453125e-05
Time: prepare 0.0071    bound 0.0040    transfer 0.0035    finalize 0.0020    func 0.0166    
Accumulated time: func 3.3853    prepare 0.3522    bound 2.7939    transfer 0.1384    finalize 0.1007    
all_split False
Length of domains: 0
Time: pickout 0.0125    decision 0.0154    set_bounds 0.0081    solve 0.0166    add 0.0001    
Accumulated time: pickout 0.3333    decision 0.6444    set_bounds 0.3127    solve 3.6574    add 1.2635    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
6644 domains visited
Cumulative time: 6.39643669128418

found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=4_30297429.log

Properties batch 8, size 1
Remaining timeout: 190.79604196548462
Verifying property 8 with 1 instances.
##### Instance 187 first 10 spec matrices: 
tensor([[[-1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.46918005]], device='cuda:0') need to verify.
Model prediction is: tensor([ -6.08897448, -10.08986378,  -7.39640045,  -7.25407028,  -6.58082294,
         -7.96594858,  -7.83635616,  -8.88062477,  -5.43441010,  -7.92518377],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.46918005]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 737
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 228
Node /15 input 0: size torch.Size([100]) unstable 18
-----------------
# of unstable neurons: 983
-----------------

======================Cut verification begins======================
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
Cut time: 0.0009706020355224609
======================Cut verification ends======================
BaB round 1
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0003
batch: 1
splitting decisions: 
split level 0: [/input-12, 60] 
split level 1: [/input-12, 10] 
split level 2: [/input-12, 1] 
split level 3: [/input-12, 92] 
split level 4: [/input-8, 875] 
split level 5: [/input-8, 1052] 
split level 6: [/input-12, 61] 
split level 7: [/input-8, 1881] 
pruning_in_iteration open status: True
ratio of positive domain = 208 / 256 = 0.8125
pruning-in-iteration extra time: 0.006107807159423828
Time: prepare 0.0032    bound 0.1608    transfer 0.0039    finalize 0.0019    func 0.1699    
Accumulated time: func 0.1699    prepare 0.0036    bound 0.1608    transfer 0.0039    finalize 0.0019    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.33007 (8), -0.32106 (8), -0.31882 (8), -0.31851 (8), -0.30980 (8), -0.30949 (8), -0.30793 (8), -0.29921 (8), -0.29889 (8), -0.29530 (8), -0.28326 (8), -0.28239 (8), -0.27972 (8), -0.27923 (8), -0.26676 (8), -0.26351 (8), -0.11692 (8), -0.11629 (8), -0.10709 (8), -0.10638 (8), 
Length of domains: 48
Time: pickout 0.0004    decision 0.0236    set_bounds 0.0174    solve 0.1699    add 0.0664    
Accumulated time: pickout 0.0004    decision 0.0236    set_bounds 0.0174    solve 0.1699    add 0.0664    
Current (lb-rhs): -0.3300705552101135
48 domains visited
Cumulative time: 0.2907733917236328

BaB round 2
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0008
batch: 48
splitting decisions: 
split level 0: [/input-12, 58] [/input-12, 58] [/input-8, 1956] [/input-12, 58] [/input-12, 58] [/input-8, 1956] [/input-12, 58] [/input-12, 58] [/input-12, 58] [/input-12, 58] 
split level 1: [/input-8, 92] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 84] [/input-8, 92] 
split level 2: [/input-8, 556] [/input-8, 1900] [/input-8, 1003] [/input-8, 556] [/input-8, 1900] [/input-8, 1003] [/input-8, 556] [/input-8, 1900] [/input-8, 1003] [/input-8, 556] 
pruning_in_iteration open status: True
ratio of positive domain = 245 / 384 = 0.6380208333333333
pruning-in-iteration extra time: 0.005116939544677734
Time: prepare 0.0076    bound 0.2048    transfer 0.0046    finalize 0.0031    func 0.2201    
Accumulated time: func 0.3900    prepare 0.0113    bound 0.3656    transfer 0.0085    finalize 0.0050    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.31133 (11), -0.30989 (11), -0.30228 (11), -0.30084 (11), -0.29927 (11), -0.29885 (11), -0.29881 (11), -0.29873 (11), -0.29733 (11), -0.29719 (11), -0.29022 (11), -0.28976 (11), -0.28971 (11), -0.28967 (11), -0.28825 (11), -0.28810 (11), -0.28809 (11), -0.28782 (11), -0.28735 (11), -0.28723 (11), 
Length of domains: 139
Time: pickout 0.0048    decision 0.0150    set_bounds 0.0157    solve 0.2202    add 0.0780    
Accumulated time: pickout 0.0052    decision 0.0387    set_bounds 0.0332    solve 0.3901    add 0.1444    
Current (lb-rhs): -0.31133198738098145
187 domains visited
Cumulative time: 0.6332428455352783

BaB round 3
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 139
splitting decisions: 
split level 0: [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 884] [/input-8, 1956] [/input-8, 884] [/input-8, 1956] [/input-8, 1956] [/input-8, 884] [/input-8, 1956] 
pruning_in_iteration open status: True
ratio of positive domain = 70 / 278 = 0.2517985611510791
pruning-in-iteration extra time: 0.0034475326538085938
Time: prepare 0.0055    bound 0.1637    transfer 0.0032    finalize 0.0016    func 0.1740    
Accumulated time: func 0.5639    prepare 0.0170    bound 0.5293    transfer 0.0117    finalize 0.0066    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.30818 (12), -0.30701 (12), -0.29913 (12), -0.29797 (12), -0.29666 (12), -0.29632 (12), -0.29605 (12), -0.29514 (12), -0.29405 (12), -0.29396 (12), -0.28761 (12), -0.28727 (12), -0.28697 (12), -0.28603 (12), -0.28513 (12), -0.28495 (12), -0.28493 (12), -0.28484 (12), -0.28463 (12), -0.28427 (12), 
Length of domains: 208
Time: pickout 0.0145    decision 0.0229    set_bounds 0.0063    solve 0.1741    add 0.0830    
Accumulated time: pickout 0.0197    decision 0.0616    set_bounds 0.0394    solve 0.5642    add 0.2273    
Current (lb-rhs): -0.3081778883934021
395 domains visited
Cumulative time: 0.9423267841339111

BaB round 4
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0037
batch: 208
splitting decisions: 
split level 0: [/input-8, 1956] [/input-8, 1956] [/input-8, 1956] [/input-8, 988] [/input-8, 1956] [/input-8, 988] [/input-8, 92] [/input-8, 1956] [/input-8, 92] [/input-8, 988] 
pruning_in_iteration open status: False
ratio of positive domain = 44 / 416 = 0.10576923076923073
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0081    bound 0.0988    transfer 0.0012    finalize 0.0024    func 0.1105    
Accumulated time: func 0.6745    prepare 0.0252    bound 0.6281    transfer 0.0129    finalize 0.0090    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.30529 (13), -0.30418 (13), -0.29627 (13), -0.29515 (13), -0.29344 (13), -0.29312 (13), -0.29282 (13), -0.29173 (13), -0.29134 (13), -0.29062 (13), -0.28440 (13), -0.28408 (13), -0.28375 (13), -0.28262 (13), -0.28227 (13), -0.28220 (13), -0.28166 (13), -0.28151 (13), -0.28120 (13), -0.28052 (13), 
Length of domains: 371
Time: pickout 0.0149    decision 0.0208    set_bounds 0.0089    solve 0.1106    add 0.0902    
Accumulated time: pickout 0.0346    decision 0.0823    set_bounds 0.0483    solve 0.6748    add 0.3175    
Current (lb-rhs): -0.30529356002807617
766 domains visited
Cumulative time: 1.1986958980560303

BaB round 5
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0007
batch: 371
splitting decisions: 
split level 0: [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 538] [/input-8, 1061] [/input-8, 1061] [/input-8, 1061] [/input-8, 556] 
pruning_in_iteration open status: False
ratio of positive domain = 37 / 742 = 0.049865229110512166
pruning-in-iteration extra time: 5.936622619628906e-05
Time: prepare 0.0164    bound 0.1090    transfer 0.0090    finalize 0.0038    func 0.1382    
Accumulated time: func 0.8127    prepare 0.0419    bound 0.7371    transfer 0.0219    finalize 0.0128    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.29769 (14), -0.29656 (14), -0.29165 (14), -0.29088 (14), -0.29056 (14), -0.28974 (14), -0.28594 (14), -0.28555 (14), -0.28491 (14), -0.28385 (14), -0.28342 (14), -0.28273 (14), -0.28252 (14), -0.28142 (14), -0.27998 (14), -0.27958 (14), -0.27943 (14), -0.27908 (14), -0.27873 (14), -0.27802 (14), 
Length of domains: 705
Time: pickout 0.0176    decision 0.0338    set_bounds 0.0158    solve 0.1390    add 0.0935    
Accumulated time: pickout 0.0522    decision 0.1161    set_bounds 0.0642    solve 0.8138    add 0.4110    
Current (lb-rhs): -0.2976943850517273
1471 domains visited
Cumulative time: 1.5115060806274414

BaB round 6
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0010
batch: 705
splitting decisions: 
split level 0: [/input-8, 867] [/input-8, 1061] [/input-8, 1061] [/input-8, 556] [/input-8, 1061] [/input-8, 556] [/input-8, 867] [/input-8, 867] [/input-8, 556] [/input-8, 1061] 
pruning_in_iteration open status: False
ratio of positive domain = 142 / 1410 = 0.10070921985815606
pruning-in-iteration extra time: 5.412101745605469e-05
Time: prepare 0.0288    bound 0.1242    transfer 0.0163    finalize 0.0101    func 0.1797    
Accumulated time: func 0.9924    prepare 0.0709    bound 0.8613    transfer 0.0382    finalize 0.0229    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.29135 (15), -0.29044 (15), -0.28622 (15), -0.28480 (15), -0.28468 (15), -0.28428 (15), -0.28390 (15), -0.28225 (15), -0.27961 (15), -0.27947 (15), -0.27876 (15), -0.27761 (15), -0.27759 (15), -0.27738 (15), -0.27703 (15), -0.27649 (15), -0.27601 (15), -0.27594 (15), -0.27558 (15), -0.27555 (15), 
Length of domains: 1264
Time: pickout 0.0211    decision 0.0585    set_bounds 0.0312    solve 0.1799    add 0.1003    
Accumulated time: pickout 0.0733    decision 0.1746    set_bounds 0.0953    solve 0.9937    add 0.5113    
Current (lb-rhs): -0.29134833812713623
2735 domains visited
Cumulative time: 1.9121897220611572

BaB round 7
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0012
batch: 1264
splitting decisions: 
split level 0: [/input-8, 1061] [/input-8, 867] [/input-8, 867] [/input-12, 37] [/input-8, 867] [/input-8, 541] [/input-8, 556] [/input-8, 92] [/input-8, 867] [/input-8, 1900] 
pruning_in_iteration open status: False
ratio of positive domain = 135 / 2528 = 0.05340189873417722
pruning-in-iteration extra time: 5.7220458984375e-05
Time: prepare 0.0527    bound 0.1407    transfer 0.0153    finalize 0.0176    func 0.2265    
Accumulated time: func 1.2189    prepare 0.1239    bound 1.0020    transfer 0.0535    finalize 0.0405    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28555 (16), -0.28477 (16), -0.28011 (16), -0.27940 (16), -0.27896 (16), -0.27849 (16), -0.27821 (16), -0.27665 (16), -0.27610 (16), -0.27509 (16), -0.27319 (16), -0.27316 (16), -0.27303 (16), -0.27261 (16), -0.27177 (16), -0.27142 (16), -0.27125 (16), -0.27090 (16), -0.27071 (16), -0.27018 (16), 
Length of domains: 2387
Time: pickout 0.0396    decision 0.0883    set_bounds 0.0545    solve 0.2269    add 0.1071    
Accumulated time: pickout 0.1129    decision 0.2629    set_bounds 0.1498    solve 1.2206    add 0.6184    
Current (lb-rhs): -0.28554701805114746
5122 domains visited
Cumulative time: 2.436723470687866

BaB round 8
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0016
batch: 2387
splitting decisions: 
split level 0: [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 55] [/input-12, 37] [/input-8, 1900] [/input-8, 556] [/input-8, 1900] [/input-8, 867] 
pruning_in_iteration open status: False
ratio of positive domain = 300 / 4774 = 0.06284038542103054
pruning-in-iteration extra time: 5.984306335449219e-05
Time: prepare 0.1146    bound 0.2428    transfer 0.0285    finalize 0.0374    func 0.4246    
Accumulated time: func 1.6435    prepare 0.2388    bound 1.2449    transfer 0.0820    finalize 0.0780    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28105 (17), -0.28032 (17), -0.27565 (17), -0.27496 (17), -0.27431 (17), -0.27380 (17), -0.27358 (17), -0.27213 (17), -0.27098 (17), -0.26997 (17), -0.26860 (17), -0.26847 (17), -0.26843 (17), -0.26809 (17), -0.26697 (17), -0.26693 (17), -0.26672 (17), -0.26640 (17), -0.26595 (17), -0.26569 (17), 
Length of domains: 4453
Time: pickout 0.0553    decision 0.2888    set_bounds 0.1100    solve 0.4255    add 0.1451    
Accumulated time: pickout 0.1682    decision 0.5518    set_bounds 0.2598    solve 1.6461    add 0.7635    
Current (lb-rhs): -0.281046062707901
9575 domains visited
Cumulative time: 3.4749808311462402

BaB round 9
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0022
batch: 4096
splitting decisions: 
split level 0: [/input-12, 55] [/input-8, 1900] [/input, 1463] [/input-8, 1884] [/input-8, 1900] [/input-8, 1900] [/input-8, 1061] [/input-8, 100] [/input-8, 1061] [/input-8, 1900] 
pruning_in_iteration open status: False
ratio of positive domain = 834 / 8192 = 0.101806640625
pruning-in-iteration extra time: 6.937980651855469e-05
Time: prepare 0.1956    bound 0.3687    transfer 0.0384    finalize 0.0613    func 0.6651    
Accumulated time: func 2.3085    prepare 0.4346    bound 1.6136    transfer 0.1204    finalize 0.1393    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.28105 (17), -0.28032 (17), -0.27565 (17), -0.27431 (17), -0.27358 (17), -0.27001 (18), -0.26860 (17), -0.26843 (17), -0.26809 (17), -0.26693 (17), -0.26640 (17), -0.26595 (17), -0.26551 (18), -0.26529 (18), -0.26489 (17), -0.26370 (18), -0.26323 (17), -0.26318 (17), -0.26310 (18), -0.26267 (18), 
Length of domains: 7673
Time: pickout 0.0747    decision 0.3714    set_bounds 0.1698    solve 0.6667    add 0.1532    
Accumulated time: pickout 0.2429    decision 0.9232    set_bounds 0.4296    solve 2.3128    add 0.9167    
Current (lb-rhs): -0.281046062707901
16891 domains visited
current_vram/total_varm: 12.1GB/99.9GB, batch_size increase to 8192
Cumulative time: 4.932143926620483

BaB round 10
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 7673
splitting decisions: 
split level 0: [/input-8, 100] [/input-8, 1900] [/input-8, 100] [/input-8, 541] [/input-8, 1900] [/input, 1463] [/input-8, 100] [/input-8, 1900] [/input-8, 100] [/input, 2472] 
pruning_in_iteration open status: False
ratio of positive domain = 2597 / 15346 = 0.16922976671445322
pruning-in-iteration extra time: 0.00014352798461914062
Time: prepare 0.3657    bound 0.6505    transfer 0.0832    finalize 0.1162    func 1.2166    
Accumulated time: func 3.5251    prepare 0.8007    bound 2.2640    transfer 0.2036    finalize 0.2555    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27727 (18), -0.27184 (18), -0.27089 (18), -0.27067 (18), -0.27046 (18), -0.26722 (19), -0.26433 (18), -0.26408 (18), -0.26399 (18), -0.26385 (18), -0.26258 (18), -0.26189 (18), -0.26161 (18), -0.26160 (19), -0.26153 (19), -0.26029 (19), -0.25992 (19), -0.25961 (19), -0.25912 (18), -0.25900 (18), 
Length of domains: 12607
Time: pickout 0.1270    decision 0.6198    set_bounds 0.4723    solve 1.2202    add 0.1834    
Accumulated time: pickout 0.3699    decision 1.5431    set_bounds 0.9019    solve 3.5329    add 1.1001    
Current (lb-rhs): -0.2772693634033203
29498 domains visited
Cumulative time: 7.6000049114227295

BaB round 11
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0032
batch: 8192
splitting decisions: 
split level 0: [/input-12, 55] [/input-8, 84] [/input-8, 84] [/input-8, 84] [/input-8, 84] [/input-8, 1884] [/input, 3512] [/input-8, 1884] [/input-12, 55] [/input-8, 1892] 
pruning_in_iteration open status: True
ratio of positive domain = 3563 / 16384 = 0.21746826171875
pruning-in-iteration extra time: 0.0007374286651611328
Time: prepare 0.3952    bound 0.6892    transfer 0.0823    finalize 0.1150    func 1.2832    
Accumulated time: func 4.8084    prepare 1.1962    bound 2.9532    transfer 0.2858    finalize 0.3705    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27459 (19), -0.27089 (18), -0.26917 (19), -0.26770 (19), -0.26695 (19), -0.26408 (18), -0.26308 (20), -0.26189 (18), -0.26158 (19), -0.26006 (19), -0.25989 (19), -0.25894 (20), -0.25890 (20), -0.25860 (18), -0.25793 (19), -0.25741 (18), -0.25698 (18), -0.25695 (20), -0.25671 (19), -0.25609 (20), 
Length of domains: 17236
Time: pickout 0.1362    decision 0.6698    set_bounds 0.5552    solve 1.2863    add 0.2343    
Accumulated time: pickout 0.5061    decision 2.2129    set_bounds 1.4571    solve 4.8192    add 1.3344    
Current (lb-rhs): -0.2745931148529053
42319 domains visited
current_vram/total_varm: 23.5GB/99.9GB, batch_size increase to 16384
Cumulative time: 10.533453941345215

BaB round 12
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 549 constraints, 29205 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4616
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1884] [/input, 1463] [/input-8, 508] [/input-12, 55] [/input-8, 1884] [/input-12, 55] [/input-8, 1884] [/input-8, 1884] [/input-8, 1884] [/input-8, 508] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2710009217262268
10 lb beta sum: 8.058568954467773, worst -0.19209671020507812
pruning_in_iteration open status: True
ratio of positive domain = 17242 / 32768 = 0.52618408203125
pruning-in-iteration extra time: 0.0046007633209228516
Time: prepare 0.8235    bound 5.2155    transfer 0.1601    finalize 0.5351    func 6.9500    
Accumulated time: func 11.7584    prepare 2.0201    bound 8.1688    transfer 0.4459    finalize 0.9056    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.27089 (18), -0.26408 (18), -0.26189 (18), -0.25860 (18), -0.25741 (18), -0.25698 (18), -0.25542 (18), -0.25504 (18), -0.25376 (18), -0.25187 (18), -0.25179 (18), -0.25092 (18), -0.25050 (18), -0.24857 (18), -0.24856 (18), -0.24827 (18), -0.24767 (18), -0.24697 (19), -0.24641 (18), -0.24621 (18), 
Length of domains: 16378
Time: pickout 0.2735    decision 1.7140    set_bounds 0.9808    solve 6.9570    add 0.1962    
Accumulated time: pickout 0.7796    decision 3.9269    set_bounds 2.4379    solve 11.7762    add 1.5306    
Current (lb-rhs): -0.27089083194732666
57845 domains visited
Cumulative time: 21.238526821136475

BaB round 13
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 937 constraints, 45953 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.4113
batch: 16378
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 1884] [/input-8, 100] [/input-8, 1884] [/input, 1463] [/input-8, 100] [/input, 1736] [/input-12, 55] [/input-8, 1884] [/input-12, 55] [/input-12, 37] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2670412063598633
10 lb beta sum: 7.792093276977539, worst -0.1683332324028015
pruning_in_iteration open status: True
ratio of positive domain = 12936 / 32756 = 0.3949200146538039
pruning-in-iteration extra time: 0.002027273178100586
Time: prepare 1.1058    bound 8.1454    transfer 0.1746    finalize 0.2299    func 9.8746    
Accumulated time: func 21.6330    prepare 3.1263    bound 16.3142    transfer 0.6206    finalize 1.1355    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.15144 (19), -0.15022 (19), -0.14986 (21), -0.14885 (21), -0.14836 (19), -0.14774 (19), -0.14603 (21), -0.14586 (21), -0.14581 (21), -0.14559 (19), -0.14533 (21), -0.14530 (19), -0.14480 (19), -0.14327 (21), -0.14204 (21), -0.14098 (19), -0.14097 (19), -0.14091 (19), -0.14057 (19), -0.14055 (21), 
Length of domains: 19820
Time: pickout 0.2668    decision 1.2588    set_bounds 0.9891    solve 9.8834    add 0.2124    
Accumulated time: pickout 1.0464    decision 5.1857    set_bounds 3.4270    solve 21.6596    add 1.7430    
Current (lb-rhs): -0.15143799781799316
77665 domains visited
Cumulative time: 34.38061308860779

BaB round 14
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1126 constraints, 65013 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8377
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 1463] [/input, 1463] [/input, 1463] [/input-8, 100] [/input-8, 1003] [/input, 1463] [/input, 1463] [/input, 1463] [/input, 1463] [/input, 2473] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2646372318267822
10 lb beta sum: 8.843412399291992, worst -0.16303229331970215
pruning_in_iteration open status: False
ratio of positive domain = 4500 / 32768 = 0.1373291015625
pruning-in-iteration extra time: 0.0006940364837646484
Time: prepare 0.8896    bound 9.3422    transfer 0.1611    finalize 0.2348    func 10.8453    
Accumulated time: func 32.4783    prepare 4.0164    bound 25.6564    transfer 0.7817    finalize 1.3703    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13541 (20), -0.13480 (20), -0.13375 (19), -0.13358 (20), -0.13352 (20), -0.13163 (19), -0.13099 (20), -0.13023 (19), -0.13016 (19), -0.12796 (20), -0.12794 (19), -0.12765 (22), -0.12751 (20), -0.12721 (19), -0.12609 (22), -0.12585 (22), -0.12581 (20), 
Length of domains: 27610
Time: pickout 0.3047    decision 1.8045    set_bounds 1.0574    solve 11.2426    add 0.2352    
Accumulated time: pickout 1.3511    decision 6.9901    set_bounds 4.4844    solve 32.9022    add 1.9782    
Current (lb-rhs): -0.1447959542274475
101839 domains visited
Cumulative time: 49.976601362228394

BaB round 15
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1220 constraints, 83772 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.7466
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2472] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-12, 37] [/input-8, 1892] [/input, 2472] [/input, 2472] [/input, 2472] [/input-8, 1003] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.26083457469940186
10 lb beta sum: 10.026430130004883, worst -0.15308010578155518
pruning_in_iteration open status: False
ratio of positive domain = 3760 / 32768 = 0.11474609375
pruning-in-iteration extra time: 0.0007436275482177734
Time: prepare 0.9021    bound 9.9051    transfer 0.1604    finalize 0.6736    func 11.8626    
Accumulated time: func 44.3409    prepare 4.9189    bound 35.5615    transfer 0.9421    finalize 2.0438    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 35977
Time: pickout 0.3080    decision 1.8807    set_bounds 0.6814    solve 11.8704    add 0.3302    
Accumulated time: pickout 1.6591    decision 8.8709    set_bounds 5.1658    solve 44.7726    add 2.3084    
Current (lb-rhs): -0.1447959542274475
126590 domains visited
Cumulative time: 65.89527726173401

BaB round 16
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1357 constraints, 93253 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.2289
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2472] [/input-8, 541] [/input, 2473] [/input-8, 1116] [/input-8, 1116] [/input-8, 1116] [/input-8, 1116] [/input-8, 84] [/input-8, 1116] [/input-8, 1116] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.25343865156173706
10 lb beta sum: 10.288850784301758, worst -0.13542485237121582
pruning_in_iteration open status: False
ratio of positive domain = 2489 / 32768 = 0.075958251953125
pruning-in-iteration extra time: 0.0008256435394287109
Time: prepare 0.9825    bound 10.8444    transfer 0.1617    finalize 0.2335    func 12.9702    
Accumulated time: func 57.3111    prepare 5.9019    bound 46.4059    transfer 1.1038    finalize 2.2773    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 46479
Time: pickout 0.3307    decision 1.7095    set_bounds 1.1604    solve 12.9774    add 0.2553    
Accumulated time: pickout 1.9898    decision 10.5804    set_bounds 6.3262    solve 57.7500    add 2.5637    
Current (lb-rhs): -0.1447959542274475
153476 domains visited
Cumulative time: 83.79011130332947

BaB round 17
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1317 constraints, 98824 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.8881
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 541] [/input-8, 541] [/input, 3529] [/input-8, 1460] [/input, 3529] [/input-8, 508] [/input, 3512] [/input-8, 84] [/input-8, 1460] [/input-8, 541] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.24990904331207275
10 lb beta sum: 10.322437286376953, worst -0.1331019103527069
pruning_in_iteration open status: False
ratio of positive domain = 2147 / 32768 = 0.065521240234375
pruning-in-iteration extra time: 0.0009043216705322266
Time: prepare 1.0894    bound 10.6862    transfer 0.1595    finalize 0.2765    func 13.1989    
Accumulated time: func 70.5100    prepare 6.9918    bound 57.0921    transfer 1.2634    finalize 2.5539    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 57642
Time: pickout 0.4641    decision 2.2161    set_bounds 0.8046    solve 13.2093    add 0.2596    
Accumulated time: pickout 2.4539    decision 12.7965    set_bounds 7.1308    solve 70.9593    add 2.8233    
Current (lb-rhs): -0.1447959542274475
181023 domains visited
Cumulative time: 101.74277925491333

BaB round 18
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1441 constraints, 107059 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9550
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 508] [/input-8, 541] [/input-8, 541] [/input-8, 508] [/input-8, 508] [/input, 2472] [/input-8, 1116] [/input-8, 1116] [/input-8, 1460] [/input-8, 1116] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2385999858379364
10 lb beta sum: 10.673971176147461, worst -0.12421488761901855
pruning_in_iteration open status: False
ratio of positive domain = 2407 / 32768 = 0.073455810546875
pruning-in-iteration extra time: 0.0008606910705566406
Time: prepare 0.9312    bound 11.3477    transfer 0.1594    finalize 0.2460    func 12.8974    
Accumulated time: func 83.4074    prepare 7.9233    bound 68.4398    transfer 1.4227    finalize 2.7999    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 69114
Time: pickout 0.3707    decision 2.5000    set_bounds 0.7104    solve 12.9062    add 0.4148    
Accumulated time: pickout 2.8245    decision 15.2965    set_bounds 7.8412    solve 83.8655    add 3.2381    
Current (lb-rhs): -0.1447959542274475
208879 domains visited
Cumulative time: 119.70910477638245

BaB round 19
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1519 constraints, 107976 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 1.6150
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 541] [/input, 2472] [/input, 3529] [/input-8, 1003] [/input-8, 508] [/input, 3529] [/input, 3529] [/input-8, 1460] [/input, 3529] [/input-8, 1460] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.23232430219650269
10 lb beta sum: 10.850866317749023, worst -0.12587445974349976
pruning_in_iteration open status: False
ratio of positive domain = 1854 / 32768 = 0.05657958984375
pruning-in-iteration extra time: 0.0008878707885742188
Time: prepare 0.9178    bound 11.7182    transfer 0.1589    finalize 0.2430    func 13.2513    
Accumulated time: func 96.6586    prepare 8.8416    bound 80.1580    transfer 1.5816    finalize 3.0429    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 81137
Time: pickout 0.3395    decision 1.7046    set_bounds 1.5418    solve 13.2603    add 0.2631    
Accumulated time: pickout 3.1640    decision 17.0011    set_bounds 9.3830    solve 97.1258    add 3.5012    
Current (lb-rhs): -0.1447959542274475
237286 domains visited
Cumulative time: 138.53609585762024

BaB round 20
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1543 constraints, 108343 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9544
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 541] [/input-8, 541] [/input-8, 541] [/input-8, 541] [/input-8, 541] [/input-8, 541] [/input-8, 541] [/input-8, 84] [/input-8, 84] [/input-8, 541] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.2291598916053772
10 lb beta sum: 10.805191040039062, worst -0.12187612056732178
pruning_in_iteration open status: False
ratio of positive domain = 2248 / 32768 = 0.068603515625
pruning-in-iteration extra time: 0.0009071826934814453
Time: prepare 0.9299    bound 12.0807    transfer 0.1602    finalize 1.0998    func 14.4878    
Accumulated time: func 111.1464    prepare 9.7719    bound 92.2387    transfer 1.7418    finalize 4.1426    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 92528
Time: pickout 0.3343    decision 2.5300    set_bounds 0.7401    solve 14.4946    add 0.2675    
Accumulated time: pickout 3.4984    decision 19.5311    set_bounds 10.1231    solve 111.6204    add 3.7687    
Current (lb-rhs): -0.1447959542274475
265061 domains visited
Cumulative time: 157.96721863746643

BaB round 21
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1569 constraints, 108712 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9592
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 2506] [/input, 1736] [/input, 1717] [/input-8, 1003] [/input, 1736] [/input, 1736] [/input, 1736] [/input-8, 1003] [/input, 1736] [/input-8, 1003] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21792888641357422
10 lb beta sum: 10.803936958312988, worst -0.12465578317642212
pruning_in_iteration open status: False
ratio of positive domain = 2836 / 32768 = 0.0865478515625
pruning-in-iteration extra time: 0.0009069442749023438
Time: prepare 0.9385    bound 12.1197    transfer 0.1603    finalize 0.2425    func 13.6769    
Accumulated time: func 124.8233    prepare 10.7108    bound 104.3583    transfer 1.9021    finalize 4.3851    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 102720
Time: pickout 0.3476    decision 1.6949    set_bounds 1.6870    solve 13.6854    add 0.2570    
Accumulated time: pickout 3.8460    decision 21.2260    set_bounds 11.8101    solve 125.3058    add 4.0257    
Current (lb-rhs): -0.1447959542274475
291637 domains visited
Cumulative time: 176.7130126953125

BaB round 22
Matched cut cplex process, internal label idx = 0
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts: total 1584 constraints, 108791 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.9631
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input, 3529] [/input-8, 1909] [/input-8, 1909] [/input, 2470] [/input, 2472] [/input, 2506] [/input-8, 1003] [/input-8, 1003] [/input, 3272] [/input-8, 84] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.21235612034797668
10 lb beta sum: 10.7767333984375, worst -0.11816495656967163
pruning_in_iteration open status: False
ratio of positive domain = 3040 / 32768 = 0.0927734375
pruning-in-iteration extra time: 0.0009226799011230469
Time: prepare 0.9279    bound 12.0623    transfer 0.1621    finalize 0.2407    func 13.6005    
Accumulated time: func 138.4237    prepare 11.6391    bound 116.4206    transfer 2.0642    finalize 4.6258    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.14480 (19), -0.13925 (19), -0.13697 (19), -0.13375 (19), -0.13163 (19), -0.13023 (19), -0.13016 (19), -0.12794 (19), -0.12751 (20), -0.12721 (19), -0.12550 (19), -0.12545 (19), -0.12486 (19), -0.12452 (19), -0.12427 (22), -0.12330 (22), -0.12302 (20), -0.12268 (19), -0.12260 (19), -0.12227 (19), 
Length of domains: 112251
Time: pickout 0.3436    decision 2.7534    set_bounds 0.7381    solve 14.6508    add 0.2536    
Accumulated time: pickout 4.1896    decision 23.9794    set_bounds 12.5481    solve 139.9565    add 4.2793    
Current (lb-rhs): -0.1447959542274475
317552 domains visited
Time out!!!!!!!!
found process to kill: terminal indx = 0
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=187_spec=0_30297429.log
found process to kill: terminal indx = 4
found process for pidx=0
kill process for pidx=0
found process for pidx=4
Result: unknown in 206.7571 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 188, vnnlib ID: 188 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-2.91176009, -6.98036766, -2.84487700, -4.53986120, -3.38612461,
         -4.94995880, -5.20888853, -6.30824423, -4.65725613, -6.36737871]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [467]; unstable size 467; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 229, 1, 467] with unstable size 228 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 467] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 467] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [228]; unstable size 228; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 228] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 228] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[-0.97516215,  1.98761320,  0.85461831, -0.25794768,  1.12561297,
          1.30599129,  2.30291796, -0.37233788,  1.60615540]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-2.91176009, -6.98036766, -2.84487700, -4.53986120, -3.38612461,
         -4.94995880, -5.20888853, -6.30824423, -4.65725613, -6.36737871]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-2.61056137, -6.99951649, -3.14468408, -4.72666311, -3.63954830,
          -5.14412069, -5.38729954, -6.49402142, -4.54477596, -6.45293331],
         [-2.61056137, -6.99951649, -3.14468408, -4.72666311, -3.63954830,
          -5.14412069, -5.38729954, -6.49402142, -4.54477596, -6.45293331]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.53412271,  0.49486423,  1.40009189]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0832 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 189, vnnlib ID: 189 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -7.48303747, -10.29648781,  -4.77946949,  -6.41142654,  -3.71523380,
          -6.92542839,  -5.50940371,  -7.37353468,  -9.88126087,  -9.47254848]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [427]; unstable size 427; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 239, 1, 427] with unstable size 238 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 427] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 427] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [238]; unstable size 238; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 238] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 238] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[2.48654866, 5.05169868, 0.07906604, 1.63433290, 2.04545832, 0.66316867,
         2.76845455, 4.94088602, 4.35907650]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0681 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 190, vnnlib ID: 190 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -6.12282085,  -8.68214226, -10.30647087, -10.71084213,  -9.83157253,
         -12.23327827, -10.64780331, -11.54215813,  -3.88245940,  -8.45811939]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [654]; unstable size 654; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 194, 1, 654] with unstable size 193 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 19, 1, 654] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 654] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [193]; unstable size 193; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 19, 1, 193] with unstable size 18 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 193] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [18]; unstable size 18; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 18] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[0.77125788, 3.34607577, 4.68589258, 5.31103945, 4.23434162, 6.53741407,
         5.22720814, 5.57846022, 3.04642630]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0780 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 191, vnnlib ID: 191 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -8.91402149, -10.96457195,  -4.60119486,  -3.07470465,  -3.85695314,
          -3.09889174,  -5.81089735,  -5.97126102,  -9.49198723, -10.05299187]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [611]; unstable size 611; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 278, 1, 611] with unstable size 277 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 17, 1, 611] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 611] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [277]; unstable size 277; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 17, 1, 277] with unstable size 16 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 277] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [16]; unstable size 16; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 16] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 4.15813065,  6.06970453,  0.46179670, -0.24430582, -0.42243254,
          1.52134776,  1.26745152,  4.78580856,  5.02399063]], device='cuda:0') None
Remain 2 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -8.91402149, -10.96457195,  -4.60119486,  -3.07470465,  -3.85695314,
          -3.09889174,  -5.81089735,  -5.97126102,  -9.49198723, -10.05299187]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.08788586, -11.13685799,  -4.78870010,  -3.24930167,  -4.01143646,
           -3.02898836,  -6.24352598,  -5.82983685,  -9.75097561, -10.23292065],
         [ -9.08788586, -11.13685799,  -4.78870010,  -3.24930167,  -4.01143646,
           -3.02898836,  -6.24352598,  -5.82983685,  -9.75097561, -10.23292065]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.76213479, -0.22031331]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0064 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0783 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 192, vnnlib ID: 192 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-14.02367878, -16.68686485,  -9.24556446, -13.41522598, -11.11723232,
         -13.42477131, -11.50259304, -13.30918312, -17.15509415, -16.44651794]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [639]; unstable size 639; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 297, 1, 639] with unstable size 296 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 18, 1, 639] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 639] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [296]; unstable size 296; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 18, 1, 296] with unstable size 17 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 296] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [17]; unstable size 17; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 17] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.69086027, 5.29207277, 2.62997913, 0.65836817, 2.47528219, 0.66326237,
         2.12296438, 6.32425070, 5.31157398]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0660 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 193, vnnlib ID: 193 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-12.20210648,  -8.82046795, -12.04976559, -10.42980194, -10.17031384,
         -10.70486259, -10.72393131,  -9.02217484, -12.87825584,  -7.13908768]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [635]; unstable size 635; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 211, 1, 635] with unstable size 210 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 635] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 635] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [210]; unstable size 210; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 210] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 210] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[3.61224651, 0.46522075, 2.92189741, 1.71166372, 1.48281193, 1.75262117,
         1.73563480, 0.26523256, 4.10882854]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0677 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 194, vnnlib ID: 194 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -9.03137493, -14.28631020,  -6.88360214, -10.38493061,  -7.40738487,
         -10.63051796,  -9.41903210, -11.08277416, -12.21933270, -13.69361401]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [568]; unstable size 568; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 232, 1, 568] with unstable size 231 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 21, 1, 568] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 568] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [231]; unstable size 231; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 21, 1, 231] with unstable size 20 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 231] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [20]; unstable size 20; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 20] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.97100008,  5.75294256,  2.62268925, -0.44995376,  2.71119261,
          1.17250752,  2.60135579,  3.52469158,  4.91072798]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[ -9.03137493, -14.28631020,  -6.88360214, -10.38493061,  -7.40738487,
         -10.63051796,  -9.41903210, -11.08277416, -12.21933270, -13.69361401]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[ -9.10791874, -14.32527637,  -7.05044937, -10.30265522,  -7.05021572,
          -10.51771545,  -9.26245594, -10.66561699, -12.28997326, -13.75412750]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[-0.00023365]]], device='cuda:0')
number of violation:  1
Attack finished in 0.0072 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0770 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 195, vnnlib ID: 195 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
         -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [544]; unstable size 544; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 205, 1, 544] with unstable size 204 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 544] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 544] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [204]; unstable size 204; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 204] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 204] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 2.09186554,  1.89036942,  0.01000333, -0.14229488,  0.23984766,
          0.71584284,  0.47055006,  3.11726570,  2.74282694]], device='cuda:0') None
Remain 1 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
         -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.20it/s]100%|██████████| 1/1 [00:00<00:00,  8.20it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-6.00214386, -6.22956085, -3.06510234, -3.62754107, -3.13923168,
          -3.98658037, -4.44688559, -4.01200485, -7.31333065, -6.86353111]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.07412934]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1247 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 11.540645599365234
alpha/beta optimization time: 1.314725637435913
initial alpha-crown bounds: tensor([[ 2.13471913,  1.94881058,  0.04223776, -0.12571102,  0.27321029,
          0.80250466,  0.49562049,  3.17971396,  2.78953886]], device='cuda:0')
Number of class (without rhs): 1 ; Worst class: (+ rhs) -0.12571102380752563
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6267 seconds.
lower bounds for all target labels: [2.134718894958496, 1.9488096237182617, 0.04223763942718506, -0.12571120262145996, 0.2732102870941162, 0.8025046586990356, 0.4956204891204834, 3.1797139644622803, 2.7895383834838867]
Number of cpus: 96  Number of subproblems: 1
Reassign each subproblems with number of thread: 96
Starting MIP solver for these labels: [3]
start creating model mps for candidates: ['lay/16_3']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 155504 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.37846040725708
Verifying property 0 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1797139644622803.

Properties batch 1, size 1
Remaining timeout: 198.15118145942688
Verifying property 1 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.789538860321045.

Properties batch 2, size 1
Remaining timeout: 198.01929759979248
Verifying property 2 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[-1.,  0.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.134719133377075.

Properties batch 3, size 1
Remaining timeout: 197.88892078399658
Verifying property 3 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0., -1.,  1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.9488105773925781.

Properties batch 4, size 1
Remaining timeout: 197.75985383987427
Verifying property 4 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.8025046586990356.

Properties batch 5, size 1
Remaining timeout: 197.63053679466248
Verifying property 5 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.4956204891204834.

Properties batch 6, size 1
Remaining timeout: 197.49884700775146
Verifying property 6 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.2732102870941162.

Properties batch 7, size 1
Remaining timeout: 197.3623867034912
Verifying property 7 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.04223775863647461.

Properties batch 8, size 1
Remaining timeout: 197.20932340621948
Verifying property 8 with 1 instances.
##### Instance 195 first 10 spec matrices: 
tensor([[[ 0.,  0.,  1.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.12571102]], device='cuda:0') need to verify.
Model prediction is: tensor([-5.98067474, -6.32652664, -2.95507026, -3.61686778, -3.40175915,
        -3.97366190, -4.56966162, -4.09664774, -7.20802689, -7.00610399],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.12571102]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 544
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 200
Node /15 input 0: size torch.Size([100]) unstable 13
-----------------
# of unstable neurons: 757
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0009036064147949219
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 35] 
split level 1: [/input-12, 58] 
split level 2: [/input-12, 33] 
split level 3: [/input-12, 40] 
split level 4: [/input-8, 179] 
split level 5: [/input-8, 2044] 
split level 6: [/input-8, 1028] 
split level 7: [/input-8, 2042] 
pruning_in_iteration open status: True
ratio of positive domain = 224 / 256 = 0.875
pruning-in-iteration extra time: 0.005553483963012695
Time: prepare 0.0033    bound 0.1397    transfer 0.0087    finalize 0.0038    func 0.1556    
Accumulated time: func 0.1556    prepare 0.0038    bound 0.1397    transfer 0.0087    finalize 0.0038    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04976 (8), -0.04845 (8), -0.04646 (8), -0.04516 (8), -0.04273 (8), -0.04196 (8), -0.04120 (8), -0.04079 (8), -0.03964 (8), -0.03866 (8), -0.03811 (8), -0.03748 (8), -0.03606 (8), -0.03466 (8), -0.03291 (8), -0.03155 (8), -0.02760 (8), -0.02621 (8), -0.02409 (8), -0.02368 (8), 
Length of domains: 32
Time: pickout 0.0010    decision 0.0308    set_bounds 0.0258    solve 0.1557    add 0.0621    
Accumulated time: pickout 0.0010    decision 0.0308    set_bounds 0.0258    solve 0.1557    add 0.0621    
Current (lb-rhs): -0.04976123571395874
32 domains visited
Cumulative time: 0.2891528606414795

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 32
splitting decisions: 
split level 0: [/input-8, 1053] [/input-8, 787] [/input-8, 1053] [/input-8, 477] [/input-8, 787] [/input-8, 787] [/input-8, 1053] [/input-8, 477] [/input-8, 1053] [/input-8, 787] 
split level 1: [/input, 214] [/input, 1719] [/input-8, 787] [/input-8, 787] [/input, 1719] [/input, 1719] [/input-8, 787] [/input-8, 787] [/input, 214] [/input, 1719] 
split level 2: [/input, 1719] [/input, 472] [/input, 1703] [/input, 1703] [/input, 472] [/input, 472] [/input, 1703] [/input, 1703] [/input, 1719] [/input, 472] 
pruning_in_iteration open status: False
ratio of positive domain = 2 / 256 = 0.0078125
pruning-in-iteration extra time: 0.00011348724365234375
Time: prepare 0.0069    bound 0.1115    transfer 0.0009    finalize 0.0031    func 0.1225    
Accumulated time: func 0.2781    prepare 0.0109    bound 0.2512    transfer 0.0096    finalize 0.0069    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04346 (11), -0.04291 (11), -0.04275 (11), -0.04219 (11), -0.04216 (11), -0.04200 (11), -0.04162 (11), -0.04145 (11), -0.04145 (11), -0.04129 (11), -0.04090 (11), -0.04074 (11), -0.04070 (11), -0.04016 (11), -0.04004 (11), -0.03999 (11), -0.03952 (11), -0.03945 (11), -0.03932 (11), -0.03881 (11), 
Length of domains: 253
Time: pickout 0.0063    decision 0.0215    set_bounds 0.0147    solve 0.1226    add 0.0419    
Accumulated time: pickout 0.0074    decision 0.0523    set_bounds 0.0406    solve 0.2783    add 0.1040    
Current (lb-rhs): -0.043459177017211914
285 domains visited
Cumulative time: 0.4974195957183838

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 253
splitting decisions: 
split level 0: [/input-8, 787] [/input, 1689] [/input, 1689] [/input-8, 1053] [/input, 214] [/input, 1689] [/input, 1689] [/input-8, 787] [/input, 213] [/input, 1689] 
pruning_in_iteration open status: False
ratio of positive domain = 32 / 506 = 0.06324110671936756
pruning-in-iteration extra time: 0.00012254714965820312
Time: prepare 0.0136    bound 0.1234    transfer 0.0078    finalize 0.0059    func 0.1508    
Accumulated time: func 0.4289    prepare 0.0247    bound 0.3746    transfer 0.0174    finalize 0.0128    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04315 (12), -0.04260 (12), -0.04242 (12), -0.04186 (12), -0.04185 (12), -0.04167 (12), -0.04132 (12), -0.04114 (12), -0.04112 (12), -0.04094 (12), -0.04057 (12), -0.04040 (12), -0.04038 (12), -0.03985 (12), -0.03968 (12), -0.03965 (12), -0.03918 (12), -0.03910 (12), -0.03893 (12), -0.03843 (12), 
Length of domains: 471
Time: pickout 0.0104    decision 0.0381    set_bounds 0.0127    solve 0.1509    add 0.0707    
Accumulated time: pickout 0.0178    decision 0.0904    set_bounds 0.0533    solve 0.4292    add 0.1747    
Current (lb-rhs): -0.04314732551574707
756 domains visited
Cumulative time: 0.7815957069396973

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 471
splitting decisions: 
split level 0: [/input, 213] [/input-8, 494] [/input-8, 473] [/input, 214] [/input-8, 469] [/input-8, 1053] [/input, 213] [/input, 214] [/input-8, 494] [/input-8, 473] 
pruning_in_iteration open status: False
ratio of positive domain = 112 / 942 = 0.11889596602972397
pruning-in-iteration extra time: 8.916854858398438e-05
Time: prepare 0.0247    bound 0.1152    transfer 0.0136    finalize 0.0100    func 0.1637    
Accumulated time: func 0.5926    prepare 0.0497    bound 0.4898    transfer 0.0311    finalize 0.0228    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.04131 (13), -0.04082 (13), -0.04034 (13), -0.04001 (13), -0.03984 (13), -0.03980 (13), -0.03952 (13), -0.03934 (13), -0.03906 (13), -0.03887 (13), -0.03853 (13), -0.03852 (13), -0.03833 (13), -0.03804 (13), -0.03799 (13), -0.03785 (13), -0.03758 (13), -0.03740 (13), -0.03731 (13), -0.03705 (13), 
Length of domains: 825
Time: pickout 0.0097    decision 0.0417    set_bounds 0.0241    solve 0.1641    add 0.0864    
Accumulated time: pickout 0.0275    decision 0.1321    set_bounds 0.0774    solve 0.5933    add 0.2611    
Current (lb-rhs): -0.04131340980529785
1581 domains visited
Cumulative time: 1.110408067703247

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 825
splitting decisions: 
split level 0: [/input-8, 469] [/input-8, 501] [/input, 362] [/input-8, 494] [/input-8, 473] [/input, 1703] [/input-8, 469] [/input-8, 501] [/input, 362] [/input-8, 1053] 
pruning_in_iteration open status: False
ratio of positive domain = 178 / 1650 = 0.10787878787878791
pruning-in-iteration extra time: 6.29425048828125e-05
Time: prepare 0.0420    bound 0.1367    transfer 0.1015    finalize 0.0201    func 0.3019    
Accumulated time: func 0.8945    prepare 0.0919    bound 0.6265    transfer 0.1325    finalize 0.0429    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03974 (14), -0.03925 (14), -0.03851 (14), -0.03844 (14), -0.03825 (14), -0.03820 (14), -0.03795 (14), -0.03777 (14), -0.03770 (14), -0.03722 (14), -0.03721 (14), -0.03704 (14), -0.03695 (14), -0.03692 (14), -0.03673 (14), -0.03647 (14), -0.03640 (14), -0.03632 (14), -0.03629 (14), -0.03622 (14), 
Length of domains: 1460
Time: pickout 0.0234    decision 0.0634    set_bounds 0.0352    solve 0.3024    add 0.1050    
Accumulated time: pickout 0.0509    decision 0.1955    set_bounds 0.1126    solve 0.8957    add 0.3662    
Current (lb-rhs): -0.03973871469497681
3041 domains visited
Cumulative time: 1.650132656097412

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 1460
splitting decisions: 
split level 0: [/input-8, 597] [/input-8, 1053] [/input-8, 597] [/input-8, 2034] [/input, 1689] [/input-8, 597] [/input-8, 2034] [/input, 1703] [/input-8, 494] [/input, 1689] 
pruning_in_iteration open status: False
ratio of positive domain = 308 / 2920 = 0.10547945205479448
pruning-in-iteration extra time: 5.4836273193359375e-05
Time: prepare 0.0793    bound 0.1695    transfer 0.0181    finalize 0.0341    func 0.3023    
Accumulated time: func 1.1967    prepare 0.1714    bound 0.7960    transfer 0.1507    finalize 0.0770    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03830 (15), -0.03782 (15), -0.03699 (15), -0.03692 (15), -0.03681 (15), -0.03668 (15), -0.03653 (15), -0.03642 (15), -0.03634 (15), -0.03626 (15), -0.03614 (15), -0.03578 (15), -0.03562 (15), -0.03548 (15), -0.03543 (15), -0.03537 (15), -0.03519 (15), -0.03513 (15), -0.03505 (15), -0.03504 (15), 
Length of domains: 2596
Time: pickout 0.0447    decision 0.0982    set_bounds 0.0653    solve 0.3030    add 0.2376    
Accumulated time: pickout 0.0956    decision 0.2937    set_bounds 0.1779    solve 1.1987    add 0.6037    
Current (lb-rhs): -0.03830406069755554
5637 domains visited
Cumulative time: 2.4656522274017334

BaB round 7
Fetch cut process: mps for current label is not ready yet
batch: 2596
splitting decisions: 
split level 0: [/input-8, 2016] [/input, 362] [/input, 435] [/input, 362] [/input-8, 2034] [/input-8, 2016] [/input, 3385] [/input, 1689] [/input-8, 2034] [/input, 3385] 
pruning_in_iteration open status: False
ratio of positive domain = 518 / 5192 = 0.09976887519260402
pruning-in-iteration extra time: 8.916854858398438e-05
Time: prepare 0.1447    bound 0.2617    transfer 0.0581    finalize 0.4680    func 0.9330    
Accumulated time: func 2.1298    prepare 0.3164    bound 1.0578    transfer 0.2088    finalize 0.5450    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03730 (16), -0.03682 (16), -0.03598 (16), -0.03580 (16), -0.03564 (16), -0.03552 (16), -0.03532 (16), -0.03527 (16), -0.03524 (16), -0.03508 (16), -0.03478 (16), -0.03476 (16), -0.03448 (16), -0.03433 (16), -0.03415 (16), -0.03402 (16), -0.03398 (16), -0.03398 (16), -0.03392 (16), -0.03379 (16), 
Length of domains: 4656
Time: pickout 0.0977    decision 0.1743    set_bounds 0.1220    solve 0.9342    add 0.1487    
Accumulated time: pickout 0.1933    decision 0.4680    set_bounds 0.2999    solve 2.1329    add 0.7525    
Current (lb-rhs): -0.03730019927024841
10293 domains visited
Cumulative time: 3.976608991622925

BaB round 8
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0034
batch: 4096
splitting decisions: 
split level 0: [/input, 3385] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 494] [/input, 435] 
pruning_in_iteration open status: False
ratio of positive domain = 506 / 8192 = 0.061767578125
pruning-in-iteration extra time: 6.461143493652344e-05
Time: prepare 0.2375    bound 0.3640    transfer 0.0443    finalize 0.0578    func 0.8693    
Accumulated time: func 2.9991    prepare 0.5542    bound 1.4217    transfer 0.2531    finalize 0.6028    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03534 (17), -0.03489 (17), -0.03486 (17), -0.03470 (17), -0.03443 (17), -0.03427 (17), -0.03422 (17), -0.03384 (17), -0.03376 (17), -0.03367 (17), -0.03359 (16), -0.03355 (17), -0.03338 (17), -0.03337 (17), -0.03328 (17), -0.03324 (17), -0.03320 (17), -0.03313 (17), -0.03311 (17), -0.03303 (16), 
Length of domains: 8225
Time: pickout 0.0898    decision 0.2471    set_bounds 0.1777    solve 0.8709    add 0.2112    
Accumulated time: pickout 0.2832    decision 0.7150    set_bounds 0.4776    solve 3.0038    add 0.9637    
Current (lb-rhs): -0.03534144163131714
17958 domains visited
current_vram/total_varm: 24.3GB/99.9GB, batch_size increase to 8192
Cumulative time: 5.591954469680786

BaB round 9
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0009
batch: 8192
splitting decisions: 
split level 0: [/input, 362] [/input, 213] [/input-8, 2034] [/input, 3385] [/input, 435] [/input-8, 1053] [/input, 1689] [/input-8, 2016] [/input, 3385] [/input-8, 494] 
pruning_in_iteration open status: False
ratio of positive domain = 1252 / 16384 = 0.076416015625
pruning-in-iteration extra time: 7.271766662597656e-05
Time: prepare 0.4545    bound 0.6789    transfer 0.0819    finalize 0.1153    func 1.3320    
Accumulated time: func 4.3310    prepare 1.0090    bound 2.1006    transfer 0.3350    finalize 0.7181    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03423 (18), -0.03376 (18), -0.03362 (18), -0.03349 (18), -0.03313 (18), -0.03273 (18), -0.03256 (18), -0.03248 (18), -0.03232 (18), -0.03232 (18), -0.03227 (18), -0.03226 (18), -0.03220 (18), -0.03217 (18), -0.03215 (18), -0.03213 (18), -0.03211 (18), -0.03207 (18), -0.03201 (18), -0.03198 (18), 
Length of domains: 15059
Time: pickout 0.1367    decision 0.4742    set_bounds 0.5810    solve 1.3355    add 0.1824    
Accumulated time: pickout 0.4199    decision 1.1892    set_bounds 1.0586    solve 4.3393    add 1.1461    
Current (lb-rhs): -0.03423166275024414
32984 domains visited
current_vram/total_varm: 24.3GB/99.9GB, batch_size increase to 16384
Cumulative time: 8.344703674316406

BaB round 10
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0020
batch: 15059
splitting decisions: 
split level 0: [/input, 435] [/input-8, 494] [/input-8, 2016] [/input-8, 501] [/input-8, 2034] [/input-8, 494] [/input, 213] [/input-8, 2016] [/input-8, 478] [/input-8, 2034] 
pruning_in_iteration open status: False
ratio of positive domain = 2479 / 30118 = 0.0823095823095823
pruning-in-iteration extra time: 0.00017952919006347656
Time: prepare 1.0449    bound 1.2066    transfer 0.1633    finalize 0.2041    func 2.6214    
Accumulated time: func 6.9525    prepare 2.0542    bound 3.3072    transfer 0.4984    finalize 0.9222    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03184 (19), -0.03162 (19), -0.03137 (19), -0.03136 (19), -0.03121 (19), -0.03120 (19), -0.03117 (19), -0.03114 (19), -0.03112 (19), -0.03110 (19), -0.03108 (19), -0.03107 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03078 (19), 
Length of domains: 27457
Time: pickout 0.2435    decision 1.2799    set_bounds 0.6644    solve 2.6277    add 0.2239    
Accumulated time: pickout 0.6634    decision 2.4691    set_bounds 1.7230    solve 6.9670    add 1.3700    
Current (lb-rhs): -0.03312593698501587
60441 domains visited
Cumulative time: 13.437946557998657

BaB round 11
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0037
batch: 16384
splitting decisions: 
split level 0: [/input-8, 477] [/input-8, 501] [/input-8, 500] [/input-8, 477] [/input-8, 478] [/input-8, 501] [/input-8, 478] [/input-8, 477] [/input-8, 500] [/input-8, 501] 
pruning_in_iteration open status: False
ratio of positive domain = 3349 / 32768 = 0.102203369140625
pruning-in-iteration extra time: 0.00017523765563964844
Time: prepare 0.8945    bound 1.3032    transfer 0.1614    finalize 0.5376    func 2.8992    
Accumulated time: func 9.8516    prepare 2.9492    bound 4.6104    transfer 0.6597    finalize 1.4598    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03136 (19), -0.03121 (19), -0.03120 (19), -0.03117 (19), -0.03114 (19), -0.03112 (19), -0.03108 (19), -0.03107 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03078 (19), -0.03071 (19), -0.03064 (19), -0.03059 (19), 
Length of domains: 40263
Time: pickout 0.2525    decision 1.9495    set_bounds 0.9700    solve 2.9051    add 0.3331    
Accumulated time: pickout 0.9159    decision 4.4186    set_bounds 2.6930    solve 9.8721    add 1.7031    
Current (lb-rhs): -0.03312593698501587
89631 domains visited
current_vram/total_varm: 34.6GB/99.9GB, batch_size increase to 32768
Cumulative time: 19.930379152297974

BaB round 12
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts: total 526 constraints, 30112 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2651
batch: 32768
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2035] [/input, 3385] [/input-8, 2034] [/input, 3385] [/input-8, 2016] [/input-8, 473] [/input, 435] [/input-8, 597] [/input-8, 2035] [/input, 435] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.029986411333084106
10 lb beta sum: 104.31792449951172, worst -0.005171157419681549

all verified at 15th iter
pruning_in_iteration open status: True
ratio of positive domain = 65536 / 65536 = 1.0
pruning-in-iteration extra time: 0.004523515701293945
Time: prepare 1.8354    bound 7.2192    transfer 0.3262    finalize 0.9095    func 10.7025    
Accumulated time: func 20.5541    prepare 4.7851    bound 11.8296    transfer 0.9859    finalize 2.3693    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.03313 (19), -0.03264 (19), -0.03250 (19), -0.03201 (19), -0.03162 (19), -0.03120 (19), -0.03114 (19), -0.03112 (19), -0.03108 (19), -0.03107 (19), -0.03105 (19), -0.03100 (19), -0.03095 (19), -0.03078 (19), -0.03071 (19), -0.03064 (19), -0.03059 (19), -0.03055 (19), -0.03051 (19), -0.03050 (18), 
Length of domains: 7495
Time: pickout 0.5281    decision 3.7538    set_bounds 1.8516    solve 10.7135    add 0.0371    
Accumulated time: pickout 1.4440    decision 8.1724    set_bounds 4.5446    solve 20.5856    add 1.7402    
Current (lb-rhs): -0.03312593698501587
89631 domains visited
Cumulative time: 37.36926198005676

BaB round 13
Matched cut cplex process, internal label idx = 3
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts: total 1096 constraints, 64338 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.5696
batch: 7495
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 2034] [/input-8, 2034] [/input-8, 2034] [/input-8, 494] [/input, 435] [/input-8, 597] [/input-8, 2034] [/input, 435] [/input-8, 494] [/input, 435] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.0317387580871582
10 lb beta sum: 10.781962394714355, worst -0.019791387021541595

all verified at 12th iter
pruning_in_iteration open status: True
ratio of positive domain = 14990 / 14990 = 1.0
pruning-in-iteration extra time: 0.0018277168273925781
Time: prepare 0.4284    bound 2.4659    transfer 0.0763    finalize 0.3097    func 3.3746    
Accumulated time: func 23.9287    prepare 5.2138    bound 14.2955    transfer 1.0622    finalize 2.6790    
all_split False
Length of domains: 0
Time: pickout 0.1354    decision 0.6432    set_bounds 0.3318    solve 3.3783    add 0.0002    
Accumulated time: pickout 1.5794    decision 8.8156    set_bounds 4.8763    solve 23.9638    add 1.7404    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
89631 domains visited
Cumulative time: 42.51355290412903

found process to kill: terminal indx = 3
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=195_spec=3_30318144.log
found process for pidx=3
kill process for pidx=3
Result: safe in 45.7529 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 196, vnnlib ID: 196 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-7.34187508, -9.73769855, -4.95557117, -4.07531166, -5.10799456,
         -4.86587954, -4.00358391, -5.81644583, -6.91936016, -7.77230597]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [641]; unstable size 641; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 325, 1, 641] with unstable size 324 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 25, 1, 641] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 641] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [324]; unstable size 324; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 25, 1, 324] with unstable size 24 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 324] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [24]; unstable size 24; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 24] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.40970588,  2.98208570, -0.34637260, -0.05800223,  0.34521294,
         -1.21884358,  0.55216181,  0.57143205,  1.41924047]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-7.34187508, -9.73769855, -4.95557117, -4.07531166, -5.10799456,
         -4.86587954, -4.00358391, -5.81644583, -6.91936016, -7.77230597]],
       device='cuda:0')
Clean prediction incorrect, attack skipped.
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-7.34187365, -9.73769760, -4.95557117, -4.07531118, -5.10799408,
          -4.86587954, -4.00358343, -5.81644535, -6.91935921, -7.77230597],
         [-7.34187365, -9.73769760, -4.95557117, -4.07531118, -5.10799408,
          -4.86587954, -4.00358343, -5.81644535, -6.91935921, -7.77230597]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 0.88025999,  1.03268290, -0.07172775]]], device='cuda:0')
number of violation:  1
clean attack image tensor([[[[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]],


         [[[ 0.51904768,  0.56666672,  0.51904768,  ...,  0.69365084,
             0.78888893,  0.56666672],
           [ 0.55079371,  0.64603180,  0.67777783,  ...,  0.74126989,
             0.69365084,  0.61428577],
           [ 0.55079371,  0.50317466,  0.58253974,  ...,  0.77301592,
             0.74126989,  0.67777783],
           ...,
           [-1.40158725, -1.52857137, -1.56031740,  ...,  0.61428577,
             0.74126989,  0.64603180],
           [-1.51269829, -1.32222211, -1.54444432,  ...,  0.66190481,
             0.70952386,  0.61428577],
           [-1.59206343, -1.38571417, -1.24285710,  ...,  0.64603180,
             0.59841275,  0.70952386]],

          [[ 0.67632860,  0.54750413,  0.08051541,  ...,  0.78904998,
             0.88566834,  0.66022551],
           [ 0.80515307,  0.83735919,  0.54750413,  ...,  0.85346222,
             0.80515307,  0.70853472],
           [ 0.85346222,  0.78904998,  0.64412248,  ...,  0.86956531,
             0.88566834,  0.78904998],
           ...,
           [-1.46537840, -1.61030602, -1.67471826,  ...,  0.69243163,
             0.82125610,  0.72463775],
           [-1.61030602, -1.43317223, -1.64251208,  ...,  0.74074084,
             0.78904998,  0.69243163],
           [-1.73913050, -1.49758446, -1.30434775,  ...,  0.72463775,
             0.67632860,  0.78904998]],

          [[ 0.90104967,  0.72113961,  0.27136448,  ...,  1.03598225,
             1.17091501,  0.93103468],
           [ 1.00599718,  1.00599718,  0.81109464,  ...,  0.99100471,
             1.08095968,  1.03598225],
           [ 1.05097473,  1.00599718,  0.94602716,  ...,  0.96101969,
             1.12593722,  1.11094475],
           ...,
           [-1.27286363, -1.39280367, -1.43778121,  ...,  1.00599718,
             1.12593722,  1.03598225],
           [-1.39280367, -1.22788620, -1.42278874,  ...,  1.05097473,
             1.09595215,  1.00599718],
           [-1.49775124, -1.28785622, -1.12293863,  ...,  1.03598225,
             0.99100471,  1.09595215]]]]], device='cuda:0') torch.Size([1, 3, 3, 32, 32])

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0846 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 197, vnnlib ID: 197 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[ -5.18270683, -12.47354031,  -6.10897255, -10.00190735,  -9.06741428,
         -10.42314816, -10.68535328, -12.50943470,  -6.97327232, -13.13700008]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [464]; unstable size 464; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 147, 1, 464] with unstable size 146 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 14, 1, 464] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 464] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [146]; unstable size 146; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 14, 1, 146] with unstable size 13 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 146] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [13]; unstable size 13; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 13] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[6.42324018, 0.28036863, 3.85285258, 3.13763332, 4.20778561, 4.47631264,
         6.43918276, 0.91171372, 6.93784571]], device='cuda:0') None
Verified with initial CROWN!
verified with init bound!
Result: safe-incomplete in 0.0664 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 198, vnnlib ID: 198 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
         -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [766]; unstable size 766; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 174, 1, 766] with unstable size 173 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 15, 1, 766] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 766] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [173]; unstable size 173; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 15, 1, 173] with unstable size 14 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 173] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [14]; unstable size 14; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 14] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 3.95912123, -0.24805665, -0.27043349,  0.63014281, -0.09771198,
          1.73836160,  2.00863838,  1.75885797,  3.03999782]], device='cuda:0') None
Remain 3 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
         -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]100%|██████████| 1/1 [00:00<00:00,  8.21it/s]100%|██████████| 1/1 [00:00<00:00,  8.20it/s]
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-11.10934734, -16.42941475, -11.24772644, -11.71026421, -12.44376945,
          -12.07837105, -13.57277298, -14.31617546, -13.90072727, -15.47377300],
         [-11.10934734, -16.42941475, -11.24772644, -11.71026421, -12.44376945,
          -12.07837105, -13.57277298, -14.31617546, -13.90072727, -15.47377300]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[0.13837910, 0.60091686, 0.96902370]]], device='cuda:0')
number of violation:  0
Attack finished in 0.1251 seconds.
PGD attack failed
verified_status unknown
verified_success False
best_l after optimization: 13.115752220153809
alpha/beta optimization time: 1.3273403644561768
initial alpha-crown bounds: tensor([[ 4.07125187, -0.22706378, -0.22163039,  0.67958462, -0.04805171,
          1.79753518,  2.07503724,  1.87824047,  3.11084867]], device='cuda:0')
Number of class (without rhs): 3 ; Worst class: (+ rhs) -0.22706377506256104
preset mip_multi_proc as default setting: 96
Set parameter TSPort to value 50039
Set parameter TokenServer to value "license.itc.rwth-aachen.de"
mip_multi_proc: 96, mip_threads: 1, total threads used: 96
mip solver model built in 0.6357 seconds.
lower bounds for all target labels: [4.071251392364502, -0.2270660400390625, -0.22163176536560059, 0.6795850992202759, -0.048052191734313965, 1.7975345849990845, 2.0750374794006348, 1.878241777420044, 3.110846519470215]
Number of cpus: 96  Number of subproblems: 3
Reassign each subproblems with number of thread: 32
Starting MIP solver for these labels: [1, 2, 4]
start creating model mps for candidates: ['lay/16_1', 'lay/16_2', 'lay/16_4']
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=2_30322739.mps
parallel save mip model to /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=4_30322739.mps
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=2_30322739.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 156196 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/abcrown/Verifier_Development/complete_verifier/lp_mip_solver.py:1229: ResourceWarning: unclosed file <_io.TextIOWrapper name='/tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=4_30322739.log' mode='w' encoding='ANSI_X3.4-1968'>
  proc, logfile = run_get_cuts_subprocess(model_filename_stamped)
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 156199 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
/rwthfs/rz/cluster/home/cb809562/miniconda3/envs/alpha-beta-crown-gurobi/lib/python3.11/subprocess.py:1127: ResourceWarning: subprocess 156201 is still running
  _warn("subprocess %s is still running" % self.pid,
ResourceWarning: Enable tracemalloc to get the object allocation traceback
parallel mps save finish
Cut inquiry processes are launched.
Total VNNLIB file length: 9, max property batch size: 1, total number of batches: 9
lA shape: [torch.Size([9, 1, 16, 16, 16]), torch.Size([9, 1, 32, 8, 8]), torch.Size([9, 1, 100])]

Properties batch 0, size 1
Remaining timeout: 198.38687014579773
Verifying property 0 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 4.07125186920166.

Properties batch 1, size 1
Remaining timeout: 198.125727891922
Verifying property 1 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 3.1108486652374268.

Properties batch 2, size 1
Remaining timeout: 198.00847220420837
Verifying property 2 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 2.0750372409820557.

Properties batch 3, size 1
Remaining timeout: 197.89491868019104
Verifying property 3 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0.,  0.,  0., -1.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.8782404661178589.

Properties batch 4, size 1
Remaining timeout: 197.78059673309326
Verifying property 4 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 1.7975351810455322.

Properties batch 5, size 1
Remaining timeout: 197.66629886627197
Verifying property 5 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Initial alpha-CROWN verified for spec index tensor([0], device='cuda:0') with bound 0.6795846223831177.

Properties batch 6, size 1
Remaining timeout: 197.55193901062012
Verifying property 6 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.04805171]], device='cuda:0') need to verify.
Model prediction is: tensor([-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
        -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.04805171]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 766
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 172
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 952
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0008587837219238281
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 26] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 25] 
split level 3: [/input-12, 78] 
split level 4: [/input-12, 45] 
split level 5: [/input-8, 1396] 
split level 6: [/input-8, 1357] 
split level 7: [/input-8, 641] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 5.316734313964844e-05
Time: prepare 0.0034    bound 0.0079    transfer 0.0093    finalize 0.0052    func 0.0258    
Accumulated time: func 0.0258    prepare 0.0038    bound 0.0079    transfer 0.0093    finalize 0.0052    
all_split False
Length of domains: 0
Time: pickout 0.0007    decision 0.0289    set_bounds 0.0247    solve 0.0259    add 0.0001    
Accumulated time: pickout 0.0007    decision 0.0289    set_bounds 0.0247    solve 0.0259    add 0.0001    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
0 domains visited
Cumulative time: 0.0871577262878418


Properties batch 7, size 1
Remaining timeout: 197.25433135032654
Verifying property 7 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22163039]], device='cuda:0') need to verify.
Model prediction is: tensor([-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
        -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22163039]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 766
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 172
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 952
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0002942085266113281
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 78] 
split level 1: [/input-12, 26] 
split level 2: [/input-12, 41] 
split level 3: [/input-12, 25] 
split level 4: [/input-12, 45] 
split level 5: [/input-8, 1628] 
split level 6: [/input-8, 1366] 
split level 7: [/input-8, 1357] 
pruning_in_iteration open status: True
ratio of positive domain = 254 / 256 = 0.9921875
pruning-in-iteration extra time: 0.0052127838134765625
Time: prepare 0.0034    bound 0.1311    transfer 0.0008    finalize 0.0026    func 0.1380    
Accumulated time: func 0.1380    prepare 0.0039    bound 0.1311    transfer 0.0008    finalize 0.0026    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.01608 (8), -0.00846 (8), 
Length of domains: 2
Time: pickout 0.0006    decision 0.0272    set_bounds 0.0195    solve 0.1381    add 0.0254    
Accumulated time: pickout 0.0006    decision 0.0272    set_bounds 0.0195    solve 0.1381    add 0.0254    
Current (lb-rhs): -0.016079246997833252
2 domains visited
Cumulative time: 0.23680734634399414

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 2
splitting decisions: 
split level 0: [/input-8, 1404] [/input-8, 1404] 
split level 1: [/input-8, 1393] [/input-8, 1393] 
split level 2: [/input-8, 1396] [/input-8, 1396] 
split level 3: [/input-8, 1405] [/input-8, 1405] 
split level 4: [/input-8, 402] [/input-8, 641] 
split level 5: [/input-8, 641] [/input-8, 402] 
split level 6: [/input-8, 1325] [/input-8, 1325] 

all verified at 0th iter
pruning_in_iteration open status: False
ratio of positive domain = 256 / 256 = 1.0
pruning-in-iteration extra time: 4.6253204345703125e-05
Time: prepare 0.0051    bound 0.0043    transfer 0.0006    finalize 0.0016    func 0.0116    
Accumulated time: func 0.1496    prepare 0.0094    bound 0.1354    transfer 0.0014    finalize 0.0041    
all_split False
Length of domains: 0
Time: pickout 0.0009    decision 0.0213    set_bounds 0.0158    solve 0.0117    add 0.0001    
Accumulated time: pickout 0.0015    decision 0.0485    set_bounds 0.0353    solve 0.1497    add 0.0255    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
2 domains visited
Cumulative time: 0.2877657413482666


Properties batch 8, size 1
Remaining timeout: 196.60898113250732
Verifying property 8 with 1 instances.
##### Instance 198 first 10 spec matrices: 
tensor([[[ 1.,  0., -1.,  0.,  0.,  0.,  0.,  0.,  0.,  0.]]])
thresholds: tensor([0.], device='cuda:0') ######
Remaining spec index tensor([0], device='cuda:0') with bounds tensor([[-0.22706378]], device='cuda:0') need to verify.
Model prediction is: tensor([-10.51362133, -15.75713921, -11.03450871, -11.39007473, -12.12888622,
        -11.76603127, -13.25793362, -13.95927143, -13.38565063, -14.89714527],
       device='cuda:0')
build_with_refined_bounds batch [1/1]
setting alpha for layer /input-4 start_node /16 with alignment adjustment
setting alpha for layer /12 start_node /16 with alignment adjustment
setting alpha for layer /15 start_node /16 with alignment adjustment
all alpha initialized
directly get lb and ub from refined bounds
c shape: torch.Size([1, 1, 10])
lA shapes: [torch.Size([1, 1, 16, 16, 16]), torch.Size([1, 1, 32, 8, 8]), torch.Size([1, 1, 100])]
(alpha-)CROWN with fixed intermediate bounds: tensor([[-0.22706378]], device='cuda:0') tensor([[inf]], device='cuda:0')
Intermediate layers: /input,/input-8,/input-12,/16
Keeping alphas for these layers: ['/16']
Keeping alphas for these layers: ['/16']
Node /input-4 input 0: size torch.Size([16, 16, 16]) unstable 766
Node /12 input 0: size torch.Size([32, 8, 8]) unstable 172
Node /15 input 0: size torch.Size([100]) unstable 14
-----------------
# of unstable neurons: 952
-----------------

======================Cut verification begins======================
Fetch cut process: mps for current label is not ready yet
Cut time: 0.0002694129943847656
======================Cut verification ends======================
BaB round 1
Fetch cut process: mps for current label is not ready yet
batch: 1
splitting decisions: 
split level 0: [/input-12, 26] 
split level 1: [/input-12, 41] 
split level 2: [/input-12, 25] 
split level 3: [/input-12, 11] 
split level 4: [/input-8, 1628] 
split level 5: [/input-8, 1437] 
split level 6: [/input-8, 1619] 
split level 7: [/input-8, 1357] 
pruning_in_iteration open status: True
ratio of positive domain = 179 / 256 = 0.69921875
pruning-in-iteration extra time: 0.00499272346496582
Time: prepare 0.0033    bound 0.1783    transfer 0.0008    finalize 0.0023    func 0.1848    
Accumulated time: func 0.1848    prepare 0.0038    bound 0.1783    transfer 0.0008    finalize 0.0023    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09501 (8), -0.09289 (8), -0.09093 (8), -0.08883 (8), -0.08480 (8), -0.08309 (8), -0.08244 (8), -0.08098 (8), -0.08031 (8), -0.07899 (8), -0.07789 (8), -0.07691 (8), -0.07259 (8), -0.07024 (8), -0.06814 (8), -0.06813 (8), -0.06601 (8), -0.06575 (8), -0.06449 (8), -0.06238 (8), 
Length of domains: 77
Time: pickout 0.0004    decision 0.0258    set_bounds 0.0200    solve 0.1849    add 0.0075    
Accumulated time: pickout 0.0004    decision 0.0258    set_bounds 0.0200    solve 0.1849    add 0.0075    
Current (lb-rhs): -0.09500694274902344
77 domains visited
Cumulative time: 0.24625110626220703

BaB round 2
Fetch cut process: mps for current label is not ready yet
batch: 77
splitting decisions: 
split level 0: [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] [/input-12, 78] 
split level 1: [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1366] [/input-8, 1500] [/input-8, 1366] 
pruning_in_iteration open status: True
ratio of positive domain = 172 / 308 = 0.5584415584415585
pruning-in-iteration extra time: 0.005904197692871094
Time: prepare 0.0064    bound 0.1530    transfer 0.0055    finalize 0.0079    func 0.1729    
Accumulated time: func 0.3577    prepare 0.0104    bound 0.3313    transfer 0.0064    finalize 0.0102    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.09060 (10), -0.08797 (10), -0.08632 (10), -0.08383 (10), -0.08158 (10), -0.07917 (10), -0.07822 (10), -0.07752 (10), -0.07724 (10), -0.07654 (10), -0.07614 (10), -0.07481 (10), -0.07368 (10), -0.07366 (10), -0.07292 (10), -0.07261 (10), -0.07201 (10), -0.06998 (10), -0.06937 (10), -0.06877 (10), 
Length of domains: 136
Time: pickout 0.0033    decision 0.0258    set_bounds 0.0126    solve 0.1730    add 0.0101    
Accumulated time: pickout 0.0037    decision 0.0517    set_bounds 0.0325    solve 0.3579    add 0.0176    
Current (lb-rhs): -0.09059619903564453
213 domains visited
Cumulative time: 0.48220062255859375

BaB round 3
Fetch cut process: mps for current label is not ready yet
batch: 136
splitting decisions: 
split level 0: [/input-8, 1500] [/input-8, 1500] [/input-8, 1044] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] [/input-8, 1044] [/input-8, 1500] [/input-8, 1500] [/input-8, 1500] 
pruning_in_iteration open status: False
ratio of positive domain = 14 / 272 = 0.05147058823529416
pruning-in-iteration extra time: 5.555152893066406e-05
Time: prepare 0.0116    bound 0.1256    transfer 0.0044    finalize 0.0034    func 0.1450    
Accumulated time: func 0.5027    prepare 0.0222    bound 0.4569    transfer 0.0107    finalize 0.0136    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08832 (11), -0.08567 (11), -0.08398 (11), -0.08149 (11), -0.07924 (11), -0.07712 (11), -0.07595 (11), -0.07525 (11), -0.07514 (11), -0.07400 (11), -0.07386 (11), -0.07273 (11), -0.07154 (11), -0.07125 (11), -0.07100 (11), -0.07085 (11), -0.06993 (11), -0.06967 (11), -0.06887 (11), -0.06768 (11), 
Length of domains: 256
Time: pickout 0.0187    decision 0.0762    set_bounds 0.0208    solve 0.1451    add 0.0494    
Accumulated time: pickout 0.0223    decision 0.1279    set_bounds 0.0533    solve 0.5030    add 0.0670    
Current (lb-rhs): -0.08832252025604248
469 domains visited
Cumulative time: 0.7945873737335205

BaB round 4
Fetch cut process: mps for current label is not ready yet
batch: 256
splitting decisions: 
split level 0: [/input-8, 802] [/input-8, 1500] [/input-8, 1618] [/input-8, 802] [/input-8, 1618] [/input-8, 1500] [/input-8, 1618] [/input-8, 802] [/input-8, 1347] [/input-8, 1500] 
pruning_in_iteration open status: False
ratio of positive domain = 32 / 512 = 0.0625
pruning-in-iteration extra time: 5.626678466796875e-05
Time: prepare 0.0108    bound 0.1216    transfer 0.0170    finalize 0.0050    func 0.1547    
Accumulated time: func 0.6574    prepare 0.0332    bound 0.5785    transfer 0.0278    finalize 0.0186    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08536 (12), -0.08366 (12), -0.08103 (12), -0.08015 (12), -0.07937 (12), -0.07717 (12), -0.07585 (12), -0.07495 (12), -0.07328 (12), -0.07311 (12), -0.07292 (12), -0.07146 (12), -0.07092 (12), -0.07085 (12), -0.07059 (12), -0.06962 (12), -0.06899 (12), -0.06874 (12), -0.06800 (12), -0.06763 (12), 
Length of domains: 478
Time: pickout 0.0171    decision 0.0379    set_bounds 0.0152    solve 0.1549    add 0.0984    
Accumulated time: pickout 0.0394    decision 0.1658    set_bounds 0.0685    solve 0.6580    add 0.1655    
Current (lb-rhs): -0.08536243438720703
947 domains visited
Cumulative time: 1.125521183013916

BaB round 5
Fetch cut process: mps for current label is not ready yet
batch: 478
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 1610] [/input-8, 1347] [/input-8, 1347] [/input-8, 1610] [/input-8, 1610] [/input-8, 1610] [/input-8, 1610] [/input-8, 1347] [/input-8, 1625] 
pruning_in_iteration open status: False
ratio of positive domain = 50 / 956 = 0.05230125523012552
pruning-in-iteration extra time: 0.0001049041748046875
Time: prepare 0.0223    bound 0.1183    transfer 0.0280    finalize 0.0106    func 0.1794    
Accumulated time: func 0.8368    prepare 0.0558    bound 0.6968    transfer 0.0558    finalize 0.0292    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08286 (13), -0.08165 (13), -0.08004 (13), -0.08003 (13), -0.07853 (13), -0.07759 (13), -0.07728 (13), -0.07666 (13), -0.07642 (13), -0.07535 (13), -0.07350 (13), -0.07350 (13), -0.07330 (13), -0.07300 (13), -0.07206 (13), -0.07108 (13), -0.07059 (13), -0.07015 (13), -0.06938 (13), -0.06932 (13), 
Length of domains: 901
Time: pickout 0.0247    decision 0.0472    set_bounds 0.0335    solve 0.1798    add 0.0984    
Accumulated time: pickout 0.0640    decision 0.2130    set_bounds 0.1021    solve 0.8377    add 0.2638    
Current (lb-rhs): -0.08285760879516602
1848 domains visited
Cumulative time: 1.5174846649169922

BaB round 6
Fetch cut process: mps for current label is not ready yet
batch: 901
splitting decisions: 
split level 0: [/input-8, 802] [/input-8, 1625] [/input-8, 1618] [/input-8, 1044] [/input-8, 802] [/input-8, 1044] [/input-8, 667] [/input-8, 1618] [/input-8, 802] [/input-8, 1625] 
pruning_in_iteration open status: False
ratio of positive domain = 209 / 1802 = 0.11598224195338513
pruning-in-iteration extra time: 0.00010180473327636719
Time: prepare 0.0440    bound 0.1454    transfer 0.0332    finalize 0.0196    func 0.2426    
Accumulated time: func 1.0794    prepare 0.1002    bound 0.8421    transfer 0.0890    finalize 0.0488    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.08265 (14), -0.08145 (14), -0.07983 (14), -0.07710 (14), -0.07614 (14), -0.07581 (14), -0.07458 (14), -0.07452 (14), -0.07400 (14), -0.07384 (14), -0.07328 (14), -0.07326 (14), -0.07302 (14), -0.07296 (14), -0.07285 (14), -0.07264 (14), -0.07208 (14), -0.07120 (14), -0.07057 (14), -0.07055 (14), 
Length of domains: 1589
Time: pickout 0.0312    decision 0.0742    set_bounds 0.0497    solve 0.2442    add 0.1125    
Accumulated time: pickout 0.0952    decision 0.2872    set_bounds 0.1518    solve 1.0819    add 0.3763    
Current (lb-rhs): -0.08265244960784912
3437 domains visited
Cumulative time: 2.0354340076446533

BaB round 7
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0030
batch: 1589
splitting decisions: 
split level 0: [/input-8, 86] [/input-8, 802] [/input-8, 1625] [/input-8, 1625] [/input, 2503] [/input-8, 1610] [/input-8, 1618] [/input-8, 1044] [/input-8, 1346] [/input-8, 680] 
pruning_in_iteration open status: False
ratio of positive domain = 509 / 3178 = 0.16016362492133418
pruning-in-iteration extra time: 5.9604644775390625e-05
Time: prepare 0.0807    bound 0.1894    transfer 0.0221    finalize 0.1977    func 0.4903    
Accumulated time: func 1.5697    prepare 0.1811    bound 1.0315    transfer 0.1111    finalize 0.2464    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07912 (15), -0.07893 (15), -0.07792 (15), -0.07773 (15), -0.07738 (15), -0.07630 (15), -0.07512 (15), -0.07415 (15), -0.07385 (15), -0.07261 (15), -0.07253 (15), -0.07203 (15), -0.07188 (15), -0.07130 (15), -0.07106 (15), -0.07099 (15), -0.07089 (15), -0.07075 (15), -0.07067 (15), -0.07012 (15), 
Length of domains: 2659
Time: pickout 0.0466    decision 0.1101    set_bounds 0.0812    solve 0.4920    add 0.1711    
Accumulated time: pickout 0.1418    decision 0.3973    set_bounds 0.2330    solve 1.5739    add 0.5474    
Current (lb-rhs): -0.0791161060333252
6096 domains visited
Cumulative time: 2.9719786643981934

BaB round 8
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0036
batch: 2659
splitting decisions: 
split level 0: [/input-8, 1610] [/input-8, 680] [/input-8, 86] [/input-8, 641] [/input-8, 680] [/input-8, 680] [/input, 2228] [/input-12, 45] [/input-8, 680] [/input-8, 86] 
pruning_in_iteration open status: True
ratio of positive domain = 1230 / 5318 = 0.23128995863106427
pruning-in-iteration extra time: 0.0062143802642822266
Time: prepare 0.1521    bound 0.4473    transfer 0.0230    finalize 0.0420    func 0.6650    
Accumulated time: func 2.2347    prepare 0.3335    bound 1.4789    transfer 0.1340    finalize 0.2884    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07717 (16), -0.07699 (16), -0.07596 (16), -0.07578 (16), -0.07544 (16), -0.07493 (16), -0.07435 (16), -0.07396 (16), -0.07183 (16), -0.07168 (16), -0.07159 (16), -0.07087 (16), -0.07080 (16), -0.07047 (16), -0.07019 (16), -0.06993 (16), -0.06934 (16), -0.06905 (16), -0.06905 (16), -0.06883 (16), 
Length of domains: 4088
Time: pickout 0.0844    decision 0.1827    set_bounds 0.1315    solve 0.6669    add 0.1538    
Accumulated time: pickout 0.2262    decision 0.5801    set_bounds 0.3644    solve 2.2408    add 0.7012    
Current (lb-rhs): -0.07717084884643555
10184 domains visited
Cumulative time: 4.236000299453735

BaB round 9
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0059
batch: 4088
splitting decisions: 
split level 0: [/input-12, 45] [/input-8, 680] [/input-8, 1134] [/input-12, 45] [/input-8, 86] [/input-8, 1609] [/input-8, 86] [/input-12, 45] [/input-8, 1609] [/input-8, 641] 
pruning_in_iteration open status: False
ratio of positive domain = 1614 / 8176 = 0.1974070450097848
pruning-in-iteration extra time: 0.00010037422180175781
Time: prepare 0.2256    bound 0.3833    transfer 0.0479    finalize 0.3501    func 1.0092    
Accumulated time: func 3.2440    prepare 0.5595    bound 1.8622    transfer 0.1819    finalize 0.6386    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07492 (17), -0.07407 (17), -0.07352 (17), -0.07350 (17), -0.07320 (17), -0.07313 (17), -0.07305 (17), -0.07268 (17), -0.07211 (17), -0.07210 (17), -0.07210 (17), -0.07179 (17), -0.07171 (17), -0.07128 (17), -0.07070 (17), -0.07031 (17), -0.06977 (17), -0.06967 (17), -0.06876 (17), -0.06860 (17), 
Length of domains: 6524
Time: pickout 0.0824    decision 0.5001    set_bounds 0.1916    solve 1.0123    add 0.1679    
Accumulated time: pickout 0.3086    decision 1.0802    set_bounds 0.5561    solve 3.2531    add 0.8691    
Current (lb-rhs): -0.07491683959960938
16708 domains visited
Cumulative time: 6.237614631652832

BaB round 10
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0036
batch: 4096
splitting decisions: 
split level 0: [/input, 2504] [/input-8, 680] [/input, 2503] [/input-8, 680] [/input, 2503] [/input-8, 86] [/input, 2504] [/input-8, 680] [/input, 2504] [/input-8, 86] 
pruning_in_iteration open status: False
ratio of positive domain = 1142 / 8192 = 0.139404296875
pruning-in-iteration extra time: 0.00011539459228515625
Time: prepare 0.2297    bound 0.3767    transfer 0.0456    finalize 0.3089    func 0.9630    
Accumulated time: func 4.2069    prepare 0.7895    bound 2.2389    transfer 0.2276    finalize 0.9475    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07407 (17), -0.07310 (18), -0.07305 (17), -0.07170 (18), -0.07169 (18), -0.07138 (18), -0.07129 (18), -0.07128 (17), -0.07086 (18), -0.07070 (17), -0.07029 (18), -0.07029 (18), -0.07025 (18), -0.07013 (18), -0.06997 (18), -0.06989 (18), -0.06876 (17), -0.06873 (18), -0.06872 (18), -0.06849 (18), 
Length of domains: 9463
Time: pickout 0.0942    decision 0.2625    set_bounds 0.1757    solve 0.9650    add 0.2105    
Accumulated time: pickout 0.4028    decision 1.3426    set_bounds 0.7318    solve 4.2181    add 1.0796    
Current (lb-rhs): -0.0740734338760376
23743 domains visited
current_vram/total_varm: 12.5GB/99.9GB, batch_size increase to 8192
Cumulative time: 7.987900257110596

BaB round 11
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0011
batch: 8192
splitting decisions: 
split level 0: [/input-8, 1617] [/input-8, 1609] [/input, 2504] [/input-8, 86] [/input, 2504] [/input-8, 1610] [/input-8, 1134] [/input-8, 1609] [/input-8, 1610] [/input-8, 1134] 
pruning_in_iteration open status: True
ratio of positive domain = 3422 / 16384 = 0.2088623046875
pruning-in-iteration extra time: 0.003559589385986328
Time: prepare 0.4754    bound 0.7026    transfer 0.0924    finalize 0.1207    func 1.6345    
Accumulated time: func 5.8414    prepare 1.2653    bound 2.9415    transfer 0.3200    finalize 1.0682    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07226 (18), -0.07123 (18), -0.06990 (19), -0.06973 (19), -0.06945 (18), -0.06929 (18), -0.06905 (19), -0.06888 (18), -0.06853 (19), -0.06848 (19), -0.06832 (19), -0.06829 (19), -0.06827 (18), -0.06827 (19), -0.06817 (19), -0.06801 (19), -0.06800 (19), -0.06765 (19), -0.06762 (19), -0.06754 (19), 
Length of domains: 14233
Time: pickout 0.1646    decision 0.4923    set_bounds 0.5383    solve 1.6382    add 0.1868    
Accumulated time: pickout 0.5674    decision 1.8349    set_bounds 1.2701    solve 5.8562    add 1.2664    
Current (lb-rhs): -0.07225775718688965
36705 domains visited
current_vram/total_varm: 24.4GB/99.9GB, batch_size increase to 16384
Cumulative time: 11.043339252471924

BaB round 12
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts have not been generated yet.
cuts preparing time: 0.0038
batch: 14233
splitting decisions: 
split level 0: [/input-8, 1609] [/input-8, 1609] [/input-8, 680] [/input-8, 1134] [/input-8, 641] [/input-8, 1609] [/input-8, 1134] [/input-8, 1609] [/input-8, 680] [/input-8, 1134] 
pruning_in_iteration open status: True
ratio of positive domain = 6856 / 28466 = 0.24084873182041733
pruning-in-iteration extra time: 0.0064885616302490234
Time: prepare 0.8073    bound 1.1152    transfer 0.1615    finalize 0.2079    func 2.2940    
Accumulated time: func 8.1354    prepare 2.0729    bound 4.0567    transfer 0.4815    finalize 1.2761    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.07001 (19), -0.06903 (20), -0.06897 (19), -0.06887 (20), -0.06860 (19), -0.06761 (20), -0.06757 (19), -0.06745 (20), -0.06685 (19), -0.06679 (19), -0.06677 (20), -0.06676 (20), -0.06613 (19), -0.06610 (20), -0.06609 (20), -0.06601 (20), -0.06595 (20), -0.06593 (20), -0.06577 (19), -0.06569 (19), 
Length of domains: 21610
Time: pickout 0.2470    decision 1.1297    set_bounds 0.9047    solve 2.3007    add 0.2142    
Accumulated time: pickout 0.8144    decision 2.9646    set_bounds 2.1748    solve 8.1569    add 1.4806    
Current (lb-rhs): -0.07000577449798584
58315 domains visited
Cumulative time: 15.914019107818604

BaB round 13
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
CPLEX cuts names loaded.
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts: total 523 constraints, 26345 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.2328
batch: 16384
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-8, 802] [/input-8, 1044] [/input-12, 45] [/input, 2504] [/input, 2504] [/input-12, 45] [/input-8, 1610] [/input, 2504] [/input-12, 45] [/input-12, 45] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06705701351165771
10 lb beta sum: 36.15028762817383, worst -0.021366417407989502
pruning_in_iteration open status: True
ratio of positive domain = 32189 / 32768 = 0.982330322265625
pruning-in-iteration extra time: 0.0059664249420166016
Time: prepare 0.9505    bound 3.7356    transfer 0.1899    finalize 0.5984    func 5.6880    
Accumulated time: func 13.8234    prepare 3.0238    bound 7.7923    transfer 0.6714    finalize 1.8745    
all_split False
Current worst splitting domains lb-rhs (depth):
-0.06903 (20), -0.06860 (19), -0.06761 (20), -0.06757 (19), -0.06677 (20), -0.06613 (19), -0.06569 (19), -0.06542 (20), -0.06507 (20), -0.06493 (19), -0.06489 (20), -0.06444 (20), -0.06400 (20), -0.06400 (20), -0.06391 (19), -0.06377 (20), -0.06365 (20), -0.06350 (20), -0.06349 (20), -0.06349 (20), 
Length of domains: 5805
Time: pickout 0.3058    decision 2.3198    set_bounds 0.7333    solve 5.6988    add 0.1159    
Accumulated time: pickout 1.1202    decision 5.2844    set_bounds 2.9081    solve 13.8557    add 1.5965    
Current (lb-rhs): -0.06902742385864258
58894 domains visited
Cumulative time: 25.521118879318237

BaB round 14
Matched cut cplex process, internal label idx = 1
Trying to loading cuts from /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
cut /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts: total 1189 constraints, 54328 nonzero elements
all start nodes to check full crown or not: [BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True), BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True), BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True), BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)]
use patches cut:  False
skip cut beta crown opt for patches layer: BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
skip cut beta crown opt for patches layer: BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
cuts preparing time: 0.6618
batch: 5805
cut disabled for branching node selection
splitting decisions: 
split level 0: [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] [/input-12, 45] 
cut re-enabled after branching node selection
0 lb beta sum: 0.0, worst -0.06773126125335693
10 lb beta sum: 59.89698028564453, worst -0.006985902786254883

all verified at 14th iter
pruning_in_iteration open status: True
ratio of positive domain = 11610 / 11610 = 1.0
pruning-in-iteration extra time: 0.0031280517578125
Time: prepare 0.3373    bound 2.5128    transfer 0.0707    finalize 0.1023    func 3.0991    
Accumulated time: func 16.9225    prepare 3.3615    bound 10.3051    transfer 0.7421    finalize 1.9768    
all_split False
Length of domains: 0
Time: pickout 0.1305    decision 0.3698    set_bounds 0.4628    solve 3.1023    add 0.0002    
Accumulated time: pickout 1.2507    decision 5.6542    set_bounds 3.3709    solve 16.9580    add 1.5967    
No domains left, verification finished!
Current (lb-rhs): 1.0000000116860974e-07
58894 domains visited
Cumulative time: 30.350765705108643

found process to kill: terminal indx = 1
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=1_30322739.log
found process to kill: terminal indx = 2
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=2_30322739.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=2_30322739.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=2_30322739.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=2_30322739.log
found process to kill: terminal indx = 4
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=4_30322739.mps
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=4_30322739.cuts
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=4_30322739.indx
removing /tmp/abcrown_cuts_18112/cplexmip_lay-16_starttime=1730302124_idx=198_spec=4_30322739.log
found process for pidx=1
kill process for pidx=1
found process for pidx=2
found process for pidx=4
Result: safe in 34.2050 seconds

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 199, vnnlib ID: 199 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Model: BoundedModule(
  (/input-1): BoundInput(name=/input-1, inputs=[], perturbed=True)
  (/1): BoundParams(name=/1, inputs=[], perturbed=False)
  (/2): BoundParams(name=/2, inputs=[], perturbed=False)
  (/3): BoundParams(name=/3, inputs=[], perturbed=False)
  (/4): BoundParams(name=/4, inputs=[], perturbed=False)
  (/5): BoundParams(name=/5, inputs=[], perturbed=False)
  (/6): BoundParams(name=/6, inputs=[], perturbed=False)
  (/7): BoundParams(name=/7, inputs=[], perturbed=False)
  (/8): BoundParams(name=/8, inputs=[], perturbed=False)
  (/input): BoundConv(name=/input, inputs=[/input-1, /1, /2], perturbed=True)
  (/input-4): BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
  (/input-8): BoundConv(name=/input-8, inputs=[/input-4, /3, /4], perturbed=True)
  (/12): BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
  (/13): BoundFlatten(name=/13, inputs=[/12], perturbed=True)
  (/input-12): BoundLinear(name=/input-12, inputs=[/13, /5, /6], perturbed=True)
  (/15): BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
  (/16): BoundLinear(name=/16, inputs=[/15, /7, /8], perturbed=True)
)
Original output: tensor([[-5.87905216, -4.83922100, -4.88939095, -3.64813495, -4.49923706,
         -4.07969141, -3.29299521, -4.57696962, -6.84988213, -3.62618971]],
       device='cuda:0')
Split layers:
Nonlinear functions:
   BoundRelu(name=/input-4, inputs=[/input], perturbed=True)
   BoundRelu(name=/12, inputs=[/input-8], perturbed=True)
   BoundRelu(name=/15, inputs=[/input-12], perturbed=True)
layer /input-4 using sparse-features alpha with shape [599]; unstable size 599; total size 4096 ([1, 16, 16, 16])
layer /input-4 start_node /input-8 using sparse-spec alpha [2, 271, 1, 599] with unstable size 270 total_size 2048 output_shape (32, 8, 8)
layer /input-4 start_node /input-12 using sparse-spec alpha [2, 24, 1, 599] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /input-4 start_node /16 using full alpha [2, 9, 1, 599] with unstable size None total_size 9 output_shape 9
layer /12 using sparse-features alpha with shape [270]; unstable size 270; total size 2048 ([1, 32, 8, 8])
layer /12 start_node /input-12 using sparse-spec alpha [2, 24, 1, 270] with unstable size 23 total_size 100 output_shape torch.Size([100])
layer /12 start_node /16 using full alpha [2, 9, 1, 270] with unstable size None total_size 9 output_shape 9
layer /15 using sparse-features alpha with shape [23]; unstable size 23; total size 100 ([1, 100])
layer /15 start_node /16 using full alpha [2, 9, 1, 23] with unstable size None total_size 9 output_shape 9
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 0.17035925, -1.17387605, -0.10739541, -1.19881463, -0.49474192,
         -1.09854078, -0.81328815,  0.67185163, -1.93993330]], device='cuda:0') None
Remain 7 labels need to be attacked.
Attack parameters: initialization=uniform, steps=100, restarts=50, alpha=0.008051544427871704, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[-5.87905216, -4.83922100, -4.88939095, -3.64813495, -4.49923706,
         -4.07969141, -3.29299521, -4.57696962, -6.84988213, -3.62618971]],
       device='cuda:0')
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:00<?, ?it/s]
pgd early stop
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[-5.36530113, -4.46552944, -4.53977442, -3.13573337, -4.17941523,
          -3.49873066, -3.40608001, -4.02694654, -6.27872658, -3.10767889],
         [-5.36530113, -4.46552944, -4.53977442, -3.13573337, -4.17941523,
          -3.49873066, -3.40608001, -4.02694654, -6.27872658, -3.10767889]]],
       device='cuda:0')
PGD attack margin (first 2 examples and 10 specs):
 tensor([[[ 1.05944943,  1.13369441, -0.27034664,  0.77333522,  0.09265065,
           0.62086654, -0.29840112]]], device='cuda:0')
number of violation:  2
Attack finished in 0.0203 seconds.
PGD attack succeeded!

Checking and Saving Counterexample in check_and_save_cex

verified_status unsafe-pgd
verified_success True
pgd attack succeed in attack_after_crown
Result: unsafe-pgd in 0.0787 seconds
############# Summary #############
Final verified acc: 48.5% (total 200 examples)
Problem instances count: 200 , total verified (safe/unsat): 97 , total falsified (unsafe/sat): 100 , timeout: 3
mean time for ALL instances (total 200):5.588319558631049, max time: 229.88721919059753
mean time for verified SAFE instances(total 97): 4.784789677747746, max time: 105.22605156898499
mean time for verified (SAFE + UNSAFE) instances (total 197): 2.4190681246936623, max time: [4.794385671615601, 0.9417908191680908, 0.055726051330566406, 0.057856082916259766, 0.054379940032958984, 0.03788328170776367, 0.054290771484375, 0.07368969917297363, 0.04391670227050781, 0.05060887336730957, 0.053815603256225586, 0.04073786735534668, 0.06421828269958496, 0.04250955581665039, 0.04973030090332031, 0.053359270095825195, 0.06050586700439453, 0.05247044563293457, 0.057097434997558594, 0.06254911422729492, 0.05372118949890137, 0.08413267135620117, 0.07929587364196777, 0.08851480484008789, 0.08053755760192871, 0.08922576904296875, 0.06519961357116699, 0.19170570373535156, 0.09997701644897461, 0.07992434501647949, 0.054738759994506836, 0.07586073875427246, 0.059942007064819336, 0.05590534210205078, 0.06618022918701172, 0.045844316482543945, 0.05569863319396973, 0.04499220848083496, 0.0526278018951416, 0.03899550437927246, 0.053507328033447266, 0.06465315818786621, 0.06251311302185059, 0.07658767700195312, 0.08361244201660156, 0.07784414291381836, 0.09311223030090332, 0.053215980529785156, 0.08005404472351074, 0.08917093276977539, 0.09326052665710449, 0.09005951881408691, 0.08226919174194336, 0.08010244369506836, 0.07793283462524414, 0.08293390274047852, 0.08266830444335938, 0.07396054267883301, 0.08911991119384766, 0.09051346778869629, 0.05763554573059082, 0.06491565704345703, 0.05927920341491699, 0.05291938781738281, 0.04891085624694824, 0.06094670295715332, 0.07345461845397949, 0.08083605766296387, 0.06547427177429199, 0.070526123046875, 0.05667924880981445, 0.06454014778137207, 0.07457876205444336, 0.08307743072509766, 0.08068990707397461, 0.07668614387512207, 0.04574155807495117, 0.05298924446105957, 0.06810331344604492, 0.060857534408569336, 0.055550575256347656, 0.05435490608215332, 0.04564785957336426, 0.05425882339477539, 0.05440521240234375, 0.05698442459106445, 0.0535736083984375, 0.07436394691467285, 0.08726835250854492, 0.08878827095031738, 0.072906494140625, 0.0580286979675293, 0.0715627670288086, 0.08397865295410156, 0.0777437686920166, 0.08324670791625977, 0.0783381462097168, 0.07698488235473633, 0.08464431762695312, 0.07871627807617188]
mean time for verified SAFE + TIMEOUT instances (total 100): 11.052321457862854, max time: [229.88721919059753, 204.46326446533203, 206.75706338882446] 
mean time for verified UNSAFE instances (total 100): 0.12431821823120118, max time: 4.794385671615601
unsafe-pgd (total 100), index: [0, 1, 3, 4, 5, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19, 25, 29, 32, 34, 35, 36, 43, 44, 45, 46, 50, 53, 56, 57, 58, 59, 61, 63, 64, 65, 66, 67, 69, 72, 75, 77, 78, 80, 82, 87, 88, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 105, 106, 108, 113, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 134, 135, 137, 138, 141, 143, 145, 149, 150, 151, 152, 154, 155, 156, 163, 165, 170, 173, 174, 175, 176, 181, 184, 185, 188, 191, 194, 196, 199]
safe-incomplete (total 73), index: [2, 8, 14, 17, 20, 21, 22, 23, 26, 27, 28, 30, 31, 33, 37, 39, 40, 41, 47, 48, 49, 51, 52, 62, 68, 71, 73, 74, 76, 79, 81, 83, 85, 86, 93, 104, 109, 110, 111, 114, 115, 117, 118, 121, 131, 133, 136, 140, 142, 144, 146, 147, 148, 153, 157, 159, 161, 162, 164, 166, 168, 171, 177, 178, 179, 180, 182, 186, 189, 190, 192, 193, 197]
safe (total 24), index: [11, 24, 38, 42, 54, 60, 70, 84, 89, 95, 97, 103, 107, 112, 116, 132, 139, 158, 160, 167, 169, 172, 195, 198]
unknown (total 3), index: [55, 183, 187]
